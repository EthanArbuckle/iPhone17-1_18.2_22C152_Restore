uint64_t sub_10050D62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  long long v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  long long v39;
  long long v40;
  long long v41;

  v37 = a2;
  v3 = type metadata accessor for MetricText();
  v34 = *(void *)(v3 - 8);
  v35 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1000AFA94(&qword_1009518E0);
  __chkstk_darwin(v33);
  v36 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - v11;
  v13 = sub_1000AFA94(&qword_1009601A0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v32 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v32 - v20;
  v38 = a1;
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  swift_release();
  sub_1000AEEC8((uint64_t)v18, (uint64_t)v21, &qword_1009601A0);
  sub_10050C38C();
  v22 = [*(id *)(a1 + 32) localizedSpeedUnitStringForActivityType:*(void *)(a1 + *(int *)(type metadata accessor for MirrorSpeedometerPlatterView() + 32))];
  if (v22)
  {
    v23 = v22;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  MetricText.init(value:unit:description:stale:includesSlashes:)();
  if (qword_10094A5C8 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v25 = v34;
  v24 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v9, v5, v35);
  v26 = &v9[*(int *)(v33 + 36)];
  v27 = v40;
  *(_OWORD *)v26 = v39;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v41;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v24);
  sub_1000AEEC8((uint64_t)v9, (uint64_t)v12, &qword_1009518E0);
  sub_1000AEF2C((uint64_t)v21, (uint64_t)v15, &qword_1009601A0);
  v28 = v36;
  sub_1000AEF2C((uint64_t)v12, v36, &qword_1009518E0);
  v29 = v37;
  sub_1000AEF2C((uint64_t)v15, v37, &qword_1009601A0);
  v30 = sub_1000AFA94(&qword_1009601A8);
  sub_1000AEF2C(v28, v29 + *(int *)(v30 + 48), &qword_1009518E0);
  sub_10008DB18((uint64_t)v12, &qword_1009518E0);
  sub_10008DB18((uint64_t)v21, &qword_1009601A0);
  sub_10008DB18(v28, &qword_1009518E0);
  return sub_10008DB18((uint64_t)v15, &qword_1009601A0);
}

void sub_10050DA40(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!sub_10050C12C()) {
    MetricsPublisher.currentPace.getter();
  }
  v3 = *(void **)(a1 + 32);
  id v4 = [v3 unitManager:a2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = v4;
  [v4 userDistanceCyclingUnit];

  FIUIDistanceUnitIsMetric();
  type metadata accessor for MirrorSpeedometerPlatterView();
  MetricsPublisher.fastestPace.getter();
  sub_1004ACEEC();
  BinaryInteger.formatted()();
  id v6 = [self meterUnit];
  id v7 = [v3 unitManager];
  if (!v7)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  v8 = v7;
  [v7 userDistanceCyclingUnit];

  int IsMetric = FIUIDistanceUnitIsMetric();
  uint64_t v10 = type metadata accessor for MirrorSpeedometerPlatterView();
  uint64_t v11 = 40;
  if (IsMetric) {
    uint64_t v11 = 36;
  }
  double v12 = *(double *)(a1 + *(int *)(v10 + v11));
  MetricsPublisher.fastestPace.getter();
  if (v12 <= v13) {
    double v12 = v13;
  }
  id v14 = [self quantityWithUnit:v6 doubleValue:v12];

  id v15 = [v3 localizedPaceStringWithDistance:v14 overDuration:4 paceFormat:0 unitStyle:2 decimalTrimmingMode:FIUIDistanceTypeForActivityType() distanceType:1.0];
  if (!v15) {
    goto LABEL_15;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (qword_10094B128 != -1) {
    swift_once();
  }
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  sub_10050DF68();
  View.accessibilityHidden(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_10050DD4C@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  uint64_t v3 = sub_1000AFA94(&qword_100960150);
  return sub_10050C59C(v1, (uint64_t)&a1[*(int *)(v3 + 44)]);
}

unint64_t sub_10050DD8C()
{
  unint64_t result = qword_100960190;
  if (!qword_100960190)
  {
    sub_1000A1370(&qword_100960170);
    sub_1000A1370(&qword_100960160);
    sub_1000A132C(&qword_100960188, &qword_100960160);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960190);
  }
  return result;
}

void sub_10050DE8C(uint64_t a1@<X8>)
{
  sub_10050DA40(*(void *)(v1 + 16), a1);
}

uint64_t sub_10050DEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorSpeedometerPlatterView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10050DF0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MirrorSpeedometerPlatterView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10050DF68()
{
  unint64_t result = qword_1009601B0;
  if (!qword_1009601B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009601B0);
  }
  return result;
}

unint64_t sub_10050DFC0()
{
  unint64_t result = qword_1009601B8;
  if (!qword_1009601B8)
  {
    sub_1000A1370(&qword_100960150);
    sub_1000A132C(&qword_10095BBB8, &qword_10095BBC0);
    sub_1000A132C(&qword_1009601C0, &qword_1009601C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009601B8);
  }
  return result;
}

uint64_t sub_10050E084(unint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0 && a1 > 1)
  {
    if (qword_10094ADC0 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1009601D0;
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setLocalizedDateFormatFromTemplate:v14];

    id v15 = (id)qword_1009601D0;
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v17 = [v15 stringFromDate:isa];

    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    v22[0] = v18;
    v22[1] = v20;
    sub_1000A06D0();
    uint64_t v21 = StringProtocol.localizedUppercase.getter();
    swift_bridgeObjectRelease();
    return v21;
  }
  else
  {
    id v8 = [self mainBundle];
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v8 localizedStringForKey:v9 value:0 table:0];

    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v11;
  }
}

uint64_t sub_10050E3B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
  {
    if (qword_10094ADC0 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (a2)
  {
    if (qword_10094ADC0 == -1)
    {
LABEL_7:
      id v9 = (id)qword_1009601D0;
      NSString v10 = String._bridgeToObjectiveC()();
      [v9 setLocalizedDateFormatFromTemplate:v10];

      id v11 = (id)qword_1009601D0;
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v13 = [v11 stringFromDate:isa];

      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      return v14;
    }
LABEL_6:
    swift_once();
    goto LABEL_7;
  }
  if (qword_10094ADC0 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1009601D0;
  NSString v17 = String._bridgeToObjectiveC()();
  [v16 setDateFormat:v17];

  id v18 = (id)qword_1009601D0;
  Class v19 = Date._bridgeToObjectiveC()().super.isa;
  id v20 = [v18 stringFromDate:v19];

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  id v24 = (id)qword_1009601D0;
  Date.addingTimeInterval(_:)();
  Class v25 = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v26 = [v24 stringFromDate:v25];

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  if ((v21 != v27 || v23 != v29) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    id v30 = [self mainBundle];
    NSString v31 = String._bridgeToObjectiveC()();
    id v32 = [v30 localizedStringForKey:v31 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_10074E640;
    *(void *)(v33 + 56) = &type metadata for String;
    unint64_t v34 = sub_1000AA64C();
    *(void *)(v33 + 32) = v21;
    *(void *)(v33 + 40) = v23;
    *(void *)(v33 + 96) = &type metadata for String;
    *(void *)(v33 + 104) = v34;
    *(void *)(v33 + 64) = v34;
    *(void *)(v33 + 72) = v27;
    *(void *)(v33 + 80) = v29;
    uint64_t v21 = String.init(format:_:)();
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_10050E860()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

void sub_10050E9D0()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Locale.autoupdatingCurrent.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setLocale:isa];

  qword_1009601D0 = (uint64_t)v4;
}

Swift::Int sub_10050EADC()
{
  Swift::UInt v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  if ((v2 & 1) == 0) {
    Hasher._combine(_:)(3uLL);
  }
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10050EB38()
{
  Swift::UInt v1 = *(void *)v0;
  if ((*(unsigned char *)(v0 + 8) & 1) == 0) {
    Hasher._combine(_:)(3uLL);
  }
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10050EB78()
{
  Swift::UInt v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  if ((v2 & 1) == 0) {
    Hasher._combine(_:)(3uLL);
  }
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_10050EBD0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  if (*((unsigned char *)a1 + 8) != 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 == v3;
    }
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1) {
        char v7 = *(unsigned char *)(a2 + 8);
      }
      else {
        char v7 = 0;
      }
      return (v7 & 1) != 0;
    }
    BOOL v4 = v3 == 1;
  }
  else
  {
    BOOL v4 = v3 == 0;
  }
  if (v4) {
    char v6 = *(unsigned char *)(a2 + 8);
  }
  else {
    char v6 = 0;
  }
  return (v6 & 1) != 0;
}

uint64_t sub_10050EC34(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, unint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v75 = a6;
  v76 = a5;
  uint64_t v12 = type metadata accessor for DateComponents();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = __chkstk_darwin(v14);
  NSString v17 = (char *)&v66 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  id v20 = (char *)&v66 - v19;
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v66 - v22;
  uint64_t v77 = *(void *)(v24 + 72);
  if (!v77)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if (a2 - a1 == 0x8000000000000000 && v77 == -1) {
    goto LABEL_77;
  }
  int64_t v25 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v77 == -1) {
    goto LABEL_78;
  }
  uint64_t v26 = (uint64_t)(a2 - a1) / v77;
  unint64_t v82 = a1;
  unint64_t v81 = a4;
  uint64_t v27 = v25 / v77;
  unint64_t v78 = a3;
  if (v26 >= v25 / v77)
  {
    if ((v27 & 0x8000000000000000) == 0)
    {
      unint64_t v30 = a1;
      uint64_t v31 = v27 * v77;
      unint64_t v71 = v21;
      if (a4 < a2 || a2 + v31 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v45 = a4 + v31;
      unint64_t v80 = a4 + v31;
      unint64_t v82 = a2;
      if (v31 >= 1 && v30 < a2)
      {
        uint64_t v47 = -v77;
        v48 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16);
        uint64_t v74 = v13 + 16;
        v69 = v48;
        v70 = (void (**)(unint64_t, uint64_t))(v13 + 8);
        uint64_t v66 = -v77;
        unint64_t v67 = a4;
        uint64_t v72 = v12;
        unint64_t v68 = v30;
        while (1)
        {
          uint64_t v49 = v47;
          v50 = v69;
          v69((unint64_t)v17, v45 + v47, v12);
          uint64_t v77 = a2;
          unint64_t v51 = a2 + v49;
          v52 = v17;
          unint64_t v53 = v71;
          v50(v71, v51, v12);
          char v54 = v76(v52, v53);
          if (v7) {
            break;
          }
          char v55 = v54;
          uint64_t v79 = 0;
          unint64_t v56 = v78;
          v73 = (char *)(v78 + v49);
          v57 = *v70;
          (*v70)(v53, v12);
          v57((unint64_t)v52, v12);
          NSString v17 = v52;
          if (v55)
          {
            v58 = v73;
            if (v56 < v77 || (unint64_t)v73 >= v77)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v7 = v79;
              unint64_t v60 = v68;
            }
            else
            {
              BOOL v59 = v56 == v77;
              uint64_t v7 = v79;
              unint64_t v60 = v68;
              if (!v59) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v47 = v66;
            v82 += v66;
          }
          else
          {
            unint64_t v61 = v80;
            v80 += v49;
            v58 = v73;
            BOOL v62 = v56 < v61 || (unint64_t)v73 >= v61;
            unint64_t v51 = v77;
            if (v62)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v47 = v66;
              uint64_t v7 = v79;
              unint64_t v60 = v68;
            }
            else
            {
              BOOL v59 = v56 == v61;
              uint64_t v7 = v79;
              unint64_t v60 = v68;
              if (v59)
              {
                uint64_t v47 = v49;
              }
              else
              {
                swift_arrayInitWithTakeBackToFront();
                uint64_t v47 = v66;
              }
            }
          }
          unint64_t v45 = v80;
          if (v80 > v67)
          {
            a2 = v51;
            unint64_t v78 = (unint64_t)v58;
            uint64_t v12 = v72;
            if (v51 > v60) {
              continue;
            }
          }
          goto LABEL_75;
        }
        v64 = *v70;
        (*v70)(v53, v12);
        v64((unint64_t)v52, v12);
      }
      goto LABEL_75;
    }
  }
  else if ((v26 & 0x8000000000000000) == 0)
  {
    unint64_t v28 = a1;
    uint64_t v29 = v26 * v77;
    v73 = v20;
    if (a4 < v28 || v28 + v29 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v28)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v71 = a4 + v29;
    unint64_t v80 = a4 + v29;
    BOOL v32 = v29 < 1 || a2 >= v78;
    if (!v32)
    {
      v70 = *(void (***)(unint64_t, uint64_t))(v13 + 16);
      uint64_t v74 = v13 + 16;
      uint64_t v33 = (void (**)(char *, uint64_t))(v13 + 8);
      while (1)
      {
        unint64_t v34 = v70;
        ((void (*)(char *, unint64_t, uint64_t))v70)(v23, a2, v12);
        uint64_t v35 = v23;
        v36 = v73;
        ((void (*)(char *, unint64_t, uint64_t))v34)(v73, a4, v12);
        char v37 = v76(v35, (unint64_t)v36);
        if (v7) {
          break;
        }
        char v38 = v37;
        uint64_t v79 = 0;
        v39 = *v33;
        (*v33)(v36, v12);
        v39(v35, v12);
        unint64_t v40 = v82;
        uint64_t v23 = v35;
        if (v38)
        {
          unint64_t v41 = a2 + v77;
          if (v82 < a2 || v82 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v82 == a2)
          {
            unint64_t v40 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v43 = v81 + v77;
          if (v82 < v81 || v82 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v82 != v81)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v81 = v43;
          unint64_t v41 = a2;
        }
        unint64_t v82 = v40 + v77;
        a4 = v81;
        if (v81 < v71)
        {
          a2 = v41;
          BOOL v32 = v41 >= v78;
          uint64_t v7 = v79;
          if (!v32) {
            continue;
          }
        }
        goto LABEL_75;
      }
      v63 = *v33;
      (*v33)(v36, v12);
      v63(v35, v12);
    }
LABEL_75:
    sub_1001EE980(&v82, &v81, (uint64_t *)&v80);
    return 1;
  }
LABEL_79:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10050F2FC(uint64_t result)
{
  if (result < 0)
  {
    _StringGuts.grow(_:)(77);
    v1._countAndFlagsBits = 0xD000000000000038;
    v1._object = (void *)0x80000001007C1090;
    String.append(_:)(v1);
    v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v2);
    swift_bridgeObjectRelease();
    v3._object = (void *)0x80000001007C10D0;
    v3._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v3);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10050F3EC(uint64_t a1)
{
  uint64_t v29 = a1;
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v28 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  Swift::String v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Calendar();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  unsigned int v27 = enum case for Calendar.Component.year(_:);
  uint64_t v26 = *(void (**)(char *))(v5 + 104);
  v26(v7);
  Date.init()();
  uint64_t v12 = Calendar.component(_:from:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v1);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v28 = v9 + 8;
  v14(v11, v8);
  static Calendar.current.getter();
  ((void (*)(char *, void, uint64_t))v26)(v7, v27, v4);
  uint64_t v15 = Calendar.component(_:from:)();
  v13(v7, v4);
  v14(v11, v8);
  uint64_t v16 = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
  }
  else
  {
    NSString v17 = _swiftEmptyArrayStorage;
    if (v16 >= v12) {
      return (uint64_t)v17;
    }
    while ((v12 & 0x8000000000000000) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        NSString v17 = sub_1001E7484(0, v17[2] + 1, 1, v17);
      }
      unint64_t v19 = v17[2];
      unint64_t v18 = v17[3];
      if (v19 >= v18 >> 1) {
        NSString v17 = sub_1001E7484((void *)(v18 > 1), v19 + 1, 1, v17);
      }
      id v20 = &v17[2 * v19];
      v20[4] = v12;
      v17[2] = v19 + 1;
      *((unsigned char *)v20 + 40) = (unint64_t)v12-- < 3;
      if (v16 >= v12) {
        return (uint64_t)v17;
      }
    }
  }
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  _StringGuts.grow(_:)(77);
  v22._countAndFlagsBits = 0xD000000000000038;
  v22._object = (void *)0x80000001007C1090;
  String.append(_:)(v22);
  uint64_t v30 = v12;
  v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._object = (void *)0x80000001007C10D0;
  v24._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v24);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10050F814()
{
  unint64_t result = qword_1009601D8;
  if (!qword_1009601D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009601D8);
  }
  return result;
}

unint64_t sub_10050F86C()
{
  unint64_t result = qword_1009601E0[0];
  if (!qword_1009601E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1009601E0);
  }
  return result;
}

void *sub_10050F8C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    unint64_t result = (void *)sub_1005DE330(a1);
    uint64_t v4 = (uint64_t)result;
    int v6 = v5;
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 64;
    uint64_t v17 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v10 = (unint64_t)v4 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_23;
      }
      uint64_t v18 = v7;
      id v11 = *(id *)(*(void *)(a1 + 56) + 8 * v4);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      unint64_t result = (void *)specialized ContiguousArray._endMutation()();
      int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v9) {
        goto LABEL_24;
      }
      uint64_t v12 = *(void *)(v8 + 8 * v10);
      if ((v12 & (1 << v4)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_26;
      }
      unint64_t v13 = v12 & (-2 << (v4 & 0x3F));
      if (v13)
      {
        int64_t v9 = __clz(__rbit64(v13)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v14 = v10 + 1;
        unint64_t v15 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v15)
        {
          unint64_t v16 = *(void *)(v8 + 8 * v14);
          if (v16)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v16)) + (v14 << 6);
          }
          else
          {
            while (v15 - 2 != v10)
            {
              unint64_t v16 = *(void *)(a1 + 80 + 8 * v10++);
              if (v16)
              {
                unint64_t v14 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v18 + 1;
      uint64_t v4 = v9;
      if (v18 + 1 == v17) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_10050FAA4(uint64_t a1)
{
  int v5 = (uint64_t (*)(uint64_t))((char *)&dword_100960280 + dword_100960280);
  Swift::String v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10024C1D0;
  return v5(a1);
}

uint64_t sub_10050FB4C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_100960278 + dword_100960278);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10024D1DC;
  return v4();
}

unint64_t sub_10050FBF4()
{
  unint64_t result = qword_1009601F8;
  if (!qword_1009601F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009601F8);
  }
  return result;
}

unint64_t sub_10050FC50()
{
  unint64_t result = qword_100960200;
  if (!qword_100960200)
  {
    sub_1000A1370(qword_100960208);
    sub_1000EA3C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960200);
  }
  return result;
}

uint64_t sub_10050FCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10050FD7C();
  void *v5 = v2;
  v5[1] = sub_10005DB5C;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10050FD7C()
{
  unint64_t result = qword_100960220;
  if (!qword_100960220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960220);
  }
  return result;
}

uint64_t sub_10050FDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100960270 + dword_100960270);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_1001A0E60;
  return v8(a2, a3);
}

id sub_10050FE88()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for AwardIntentDataProvider()) init];
  qword_100998230 = (uint64_t)result;
  return result;
}

char *sub_10050FEB8()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_dataLoadingGroup;
  uint64_t v2 = v0;
  *(void *)&v0[v1] = dispatch_group_create();
  uint64_t v3 = type metadata accessor for AAUIAwardsDataProvider();
  [objc_allocWithZone((Class)HKHealthStore) init];
  uint64_t v4 = AAUIAwardsDataProvider.__allocating_init(healthStore:layoutMode:)();
  uint64_t v5 = (uint64_t *)&v2[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider];
  v5[3] = v3;
  v5[4] = (uint64_t)&protocol witness table for AAUIAwardsDataProvider;
  uint64_t *v5 = v4;

  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for AwardIntentDataProvider();
  unint64_t v6 = [(char *)[super init]];
  uint64_t v7 = *(NSObject **)&v6[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_dataLoadingGroup];
  uint64_t v8 = v6;
  dispatch_group_enter(v7);
  uint64_t v9 = &v8[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider];
  sub_10007E4EC(&v8[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider], *(void *)&v8[OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 24]);
  sub_100515800();
  unint64_t v10 = v8;
  dispatch thunk of AAUIAwardsDataProviding.add(observer:)();

  sub_10007E4EC(v9, *((void *)v9 + 3));
  dispatch thunk of AAUIAwardsDataProviding.activate(isFitnessPlusSubscriber:)();

  return v10;
}

uint64_t sub_100510164()
{
  uint64_t v72 = type metadata accessor for DispatchTimeInterval();
  uint64_t v1 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  unint64_t v71 = (uint64_t *)((char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = type metadata accessor for DispatchTime();
  uint64_t v3 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  v69 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v68 = (char *)&v53 - v6;
  uint64_t v7 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = static AAUIAwardsDataProviderSection.allCases.getter();
  uint64_t v67 = *(void *)(v11 + 16);
  if (!v67)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v50 = swift_bridgeObjectRetain();
    unint64_t v51 = sub_10050F8C4(v50);
    swift_bridgeObjectRelease_n();
    return (uint64_t)v51;
  }
  unint64_t v12 = 0;
  uint64_t v65 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_dataLoadingGroup);
  uint64_t v66 = (void *)(v0 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider);
  unint64_t v64 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v63 = v8 + 16;
  unsigned int v62 = enum case for DispatchTimeInterval.seconds(_:);
  unint64_t v60 = (void (**)(void *, uint64_t))(v1 + 8);
  unint64_t v61 = (void (**)(void *, void, uint64_t))(v1 + 104);
  BOOL v59 = (void (**)(char *, uint64_t))(v3 + 8);
  char v54 = (void (**)(char *, uint64_t))(v8 + 8);
  unint64_t v13 = _swiftEmptyDictionarySingleton;
  uint64_t v58 = v7;
  uint64_t v57 = v8;
  unint64_t v56 = v10;
  uint64_t v55 = v11;
  while (1)
  {
    if (v12 >= *(void *)(v11 + 16)) {
      goto LABEL_32;
    }
    uint64_t v15 = *(void *)(v8 + 72);
    unint64_t v73 = v12;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v64 + v15 * v12, v7);
    unint64_t v16 = v69;
    static DispatchTime.now()();
    uint64_t v18 = v71;
    uint64_t v17 = v72;
    *unint64_t v71 = 3;
    (*v61)(v18, v62, v17);
    unint64_t v19 = v68;
    + infix(_:_:)();
    (*v60)(v18, v17);
    id v20 = *v59;
    unint64_t v21 = v16;
    uint64_t v22 = v70;
    (*v59)(v21, v70);
    OS_dispatch_group.wait(timeout:)();
    v20(v19, v22);
    sub_10007E4EC(v66, v66[3]);
    unint64_t v23 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)();
    unint64_t v24 = v23;
    if (v23 >> 62) {
      break;
    }
    uint64_t v25 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v25) {
      goto LABEL_7;
    }
LABEL_3:
    unint64_t v14 = v73 + 1;
    swift_bridgeObjectRelease();
    unint64_t v10 = v56;
    uint64_t v7 = v58;
    (*v54)(v56, v58);
    unint64_t v12 = v14;
    uint64_t v8 = v57;
    uint64_t v11 = v55;
    if (v14 == v67) {
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_3;
  }
LABEL_7:
  unint64_t v74 = v24;
  unint64_t v75 = v24 & 0xC000000000000001;
  uint64_t v26 = 4;
  while (1)
  {
    id v28 = v75 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v24 + 8 * v26);
    uint64_t v29 = v28;
    if (__OFADD__(v26 - 4, 1)) {
      break;
    }
    id v30 = [v28 template];
    id v31 = [v30 uniqueName];

    if (!v31) {
      goto LABEL_33;
    }
    uint64_t v76 = v26 - 3;
    uint64_t v32 = v25;
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;

    id v36 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v77 = v13;
    unint64_t v39 = sub_1000DA1C0(v33, v35);
    uint64_t v40 = v13[2];
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      goto LABEL_30;
    }
    char v43 = v38;
    if (v13[3] >= v42)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v13 = v77;
        if (v38) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_1004F5560();
        unint64_t v13 = v77;
        if (v43) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_1004ED5DC(v42, isUniquelyReferenced_nonNull_native);
      unint64_t v44 = sub_1000DA1C0(v33, v35);
      if ((v43 & 1) != (v45 & 1)) {
        goto LABEL_34;
      }
      unint64_t v39 = v44;
      unint64_t v13 = v77;
      if (v43)
      {
LABEL_8:
        uint64_t v27 = v13[7];

        *(void *)(v27 + 8 * v39) = v36;
        goto LABEL_9;
      }
    }
    v13[(v39 >> 6) + 8] |= 1 << v39;
    v46 = (uint64_t *)(v13[6] + 16 * v39);
    uint64_t *v46 = v33;
    v46[1] = v35;
    *(void *)(v13[7] + 8 * v39) = v36;
    uint64_t v47 = v13[2];
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      goto LABEL_31;
    }
    v13[2] = v49;
    swift_bridgeObjectRetain();
LABEL_9:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v26;
    uint64_t v25 = v32;
    unint64_t v24 = v74;
    if (v76 == v32) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_1005107C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchTimeInterval();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  v46 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v47 = (char *)v41 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_1009555A0);
  __chkstk_darwin(v14 - 8);
  unint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v49 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  sub_1000A06D0();
  uint64_t v20 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21) {
    goto LABEL_3;
  }
  uint64_t v42 = v10;
  uint64_t v43 = v7;
  uint64_t v44 = v6;
  uint64_t v45 = v3;
  uint64_t v22 = v20 + 32 + 32 * v21;
  uint64_t v23 = *(void *)(v22 - 32);
  v41[1] = *(void *)(v22 - 24);
  v41[2] = v23;
  v41[0] = *(void *)(v22 - 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = static String._fromSubstring(_:)();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  char v27 = sub_10005A234(v24, v26);
  if (v27 != 8)
  {
    sub_100645494(v27, (uint64_t)v16);
    uint64_t v30 = v18;
    uint64_t v31 = v17;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v49, v16, v17);
      uint64_t v32 = v45;
      uint64_t v33 = v46;
      static DispatchTime.now()();
      *uint64_t v9 = 3;
      uint64_t v35 = v43;
      uint64_t v34 = v44;
      (*(void (**)(void *, void, uint64_t))(v43 + 104))(v9, enum case for DispatchTimeInterval.seconds(_:), v44);
      id v36 = v47;
      + infix(_:_:)();
      (*(void (**)(void *, uint64_t))(v35 + 8))(v9, v34);
      char v37 = *(void (**)(char *, uint64_t))(v48 + 8);
      uint64_t v38 = v42;
      v37(v33, v42);
      OS_dispatch_group.wait(timeout:)();
      v37(v36, v38);
      sub_10007E4EC((void *)(v32 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider), *(void *)(v32 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 24));
      unint64_t v39 = v49;
      unint64_t v40 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)();
      swift_bridgeObjectRetain();
      id v28 = sub_100515600(v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v39, v31);
      return v28;
    }
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v16, &qword_1009555A0);
  }
  else
  {
LABEL_3:
    swift_bridgeObjectRelease();
  }
  return 0;
}

id sub_100510C74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AwardIntentDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for AwardIntentDataProvider()
{
  return self;
}

ValueMetadata *type metadata accessor for AwardEntityQuery()
{
  return &type metadata for AwardEntityQuery;
}

uint64_t sub_100510D28()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_dataLoadingGroup));
  sub_10007E4EC((void *)(v0 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider), *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 24));
  return dispatch thunk of AAUIAwardsDataProviding.remove(observer:)();
}

void sub_100510D94(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001EF01C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100510E00(v4);
  *a1 = v2;
}

void sub_100510E00(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v387 = type metadata accessor for Calendar();
  uint64_t v4 = *(void *)(v387 - 8);
  __chkstk_darwin(v387);
  v386 = (char *)&v343 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v6 - 8);
  v378 = (char *)&v343 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v377 = (char *)&v343 - v9;
  __chkstk_darwin(v10);
  v362 = (char *)&v343 - v11;
  __chkstk_darwin(v12);
  v361 = (char *)&v343 - v13;
  __chkstk_darwin(v14);
  v350 = (char *)&v343 - v15;
  __chkstk_darwin(v16);
  v351 = (char *)&v343 - v17;
  uint64_t v18 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v343 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v391 = (char *)&v343 - v22;
  __chkstk_darwin(v23);
  v381 = (char *)&v343 - v24;
  __chkstk_darwin(v25);
  uint64_t v390 = (uint64_t)&v343 - v26;
  __chkstk_darwin(v27);
  v363 = (char *)&v343 - v28;
  __chkstk_darwin(v29);
  uint64_t v368 = (uint64_t)&v343 - v30;
  __chkstk_darwin(v31);
  v364 = (char *)&v343 - v32;
  __chkstk_darwin(v33);
  uint64_t v367 = (uint64_t)&v343 - v34;
  __chkstk_darwin(v35);
  v352 = (char *)&v343 - v36;
  __chkstk_darwin(v37);
  uint64_t v356 = (uint64_t)&v343 - v38;
  __chkstk_darwin(v39);
  BOOL v41 = (char *)&v343 - v40;
  __chkstk_darwin(v42);
  uint64_t v355 = (uint64_t)&v343 - v43;
  uint64_t v404 = type metadata accessor for DateComponents();
  uint64_t v44 = *(void *)(v404 - 8);
  __chkstk_darwin(v404);
  v376 = (char *)&v343 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v375 = (char *)&v343 - v47;
  __chkstk_darwin(v48);
  v360 = (char *)&v343 - v49;
  __chkstk_darwin(v50);
  v359 = (char *)&v343 - v51;
  __chkstk_darwin(v52);
  v349 = (char *)&v343 - v53;
  __chkstk_darwin(v54);
  v348 = (char *)&v343 - v55;
  uint64_t v56 = type metadata accessor for Date();
  uint64_t v57 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  v389 = (char *)&v343 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v399 = (char *)&v343 - v60;
  __chkstk_darwin(v61);
  v366 = (char *)&v343 - v62;
  __chkstk_darwin(v63);
  v372 = (char *)&v343 - v64;
  __chkstk_darwin(v65);
  v354 = (char *)&v343 - v66;
  __chkstk_darwin(v67);
  v358 = (char *)&v343 - v68;
  v357 = a1;
  Swift::Int v69 = a1[1];
  Swift::Int v70 = _minimumMergeRunLength(_:)(v69);
  if (v70 < v69)
  {
    if (v69 >= 0) {
      uint64_t v71 = v69;
    }
    else {
      uint64_t v71 = v69 + 1;
    }
    if (v69 < -1) {
      goto LABEL_252;
    }
    uint64_t v369 = v69;
    Swift::Int v347 = v70;
    if (v69 < 2)
    {
      unint64_t v74 = _swiftEmptyArrayStorage;
      v373 = (char *)&_swiftEmptyArrayStorage[4];
      if (v69 != 1)
      {
        unint64_t v79 = _swiftEmptyArrayStorage[2];
        unint64_t v78 = (char *)_swiftEmptyArrayStorage;
        v335 = _swiftEmptyArrayStorage;
        if (v79 < 2) {
          goto LABEL_221;
        }
        goto LABEL_208;
      }
      unint64_t v75 = (unint64_t *)&v377;
    }
    else
    {
      uint64_t v72 = v71 >> 1;
      uint64_t v73 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(v73 + 16) = v72;
      Swift::Int v69 = v369;
      v345 = (void *)v73;
      unint64_t v74 = (void *)(v73 + 32);
      unint64_t v75 = &v403;
    }
    *(v75 - 32) = (unint64_t)v74;
    uint64_t v76 = 0;
    v400 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
    uint64_t v77 = *v357;
    v395 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
    v385 = (void (**)(char *, uint64_t, uint64_t))(v44 + 32);
    v384 = (void (**)(char *, uint64_t))(v4 + 8);
    v383 = (void (**)(char *, uint64_t))(v44 + 8);
    v382 = (unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
    v379 = (void (**)(char *, char *, uint64_t))(v57 + 32);
    v392 = (void (**)(char *, uint64_t))(v57 + 8);
    uint64_t v344 = v77 + 40;
    uint64_t v343 = v77 - 16;
    unint64_t v78 = (char *)_swiftEmptyArrayStorage;
    v380 = v20;
    v346 = v41;
    uint64_t v388 = v56;
    uint64_t v393 = v77;
LABEL_16:
    Swift::Int v80 = v76 + 1;
    uint64_t v370 = v76;
    if (v76 + 1 >= v69)
    {
      uint64_t v96 = v404;
      goto LABEL_104;
    }
    v353 = v78;
    uint64_t v374 = v2;
    uint64_t v81 = v77 + 16 * v80;
    unint64_t v82 = *(void **)v81;
    v83 = *(void **)(v81 + 8);
    v84 = (uint64_t *)(v77 + 16 * v76);
    uint64_t v86 = *v84;
    v85 = (void *)v84[1];
    id v397 = v82;
    swift_retain();
    id v87 = v83;
    *(void *)&long long v401 = v86;
    swift_retain();
    v88 = v85;
    id v89 = [v87 relevantEarnedInstance];
    if (v89)
    {
      v90 = v89;
      id v91 = [v89 earnedDateComponents];

      if (v91)
      {
        uint64_t v92 = (uint64_t)v346;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

        v93 = *v400;
        v94 = (char *)v92;
        uint64_t v95 = 0;
      }
      else
      {
        v93 = *v400;
        uint64_t v92 = (uint64_t)v346;
        v94 = v346;
        uint64_t v95 = 1;
      }
      uint64_t v98 = v404;
      v398 = v93;
      v93((uint64_t)v94, v95, 1, v404);
      v99 = v351;
      uint64_t v100 = v92;
      uint64_t v97 = v355;
      sub_1000ACADC(v100, v355);
      if ((*v395)(v97, 1, v98) != 1)
      {
        v109 = v348;
        (*v385)(v348, v97, v98);
        v110 = v386;
        static Calendar.current.getter();
        Calendar.date(from:)();
        v111 = v110;
        uint64_t v98 = v404;
        (*v384)(v111, v387);
        v112 = v109;
        uint64_t v56 = v388;
        (*v383)(v112, v98);
        if ((*v382)(v99, 1, v56) != 1)
        {
          (*v379)(v358, v99, v56);
LABEL_26:
          id v103 = [v88 relevantEarnedInstance:v343];
          v394 = v88;
          if (v103)
          {
            v104 = v103;
            id v105 = [v103 earnedDateComponents];

            if (v105)
            {
              v106 = v352;
              static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v107 = 0;
            }
            else
            {
              uint64_t v107 = 1;
              v106 = v352;
            }
            uint64_t v113 = v404;
            v398((uint64_t)v106, v107, 1, v404);
            uint64_t v114 = (uint64_t)v106;
            uint64_t v108 = v356;
            sub_1000ACADC(v114, v356);
            if ((*v395)(v108, 1, v113) != 1)
            {
              v128 = v349;
              (*v385)(v349, v108, v113);
              v129 = v386;
              static Calendar.current.getter();
              v130 = v350;
              Calendar.date(from:)();
              (*v384)(v129, v387);
              v131 = v128;
              uint64_t v56 = v388;
              (*v383)(v131, v404);
              v115 = v20;
              if ((*v382)(v130, 1, v56) != 1)
              {
                v118 = v354;
                (*v379)(v354, v130, v56);
                goto LABEL_36;
              }
              uint64_t v116 = (uint64_t)v130;
              v117 = (uint64_t *)&unk_10095B890;
LABEL_35:
              sub_10008DB18(v116, v117);
              v118 = v354;
              static Date.distantPast.getter();
LABEL_36:
              Swift::Int v69 = v369;
              v119 = v358;
              uint64_t v120 = Date.compare(_:)();
              v121 = (char *)*v392;
              (*v392)(v118, v56);
              v371 = v121;
              ((void (*)(char *, uint64_t))v121)(v119, v56);
              if (v120)
              {
                swift_release();

                swift_release();
                LODWORD(v396) = v120 == 1;
                uint64_t v20 = v115;
              }
              else
              {
                uint64_t v402 = 0;
                unint64_t v403 = 0xE000000000000000;
                id v122 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
                id v123 = [v122 titleForAchievement:v87];

                v124 = v394;
                if (v123)
                {
                  uint64_t v125 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  v127 = v126;
                }
                else
                {
                  uint64_t v125 = sub_100059FF4(v87);
                  v127 = v132;
                }
                v133._countAndFlagsBits = v125;
                v133._object = v127;
                String.append(_:)(v133);
                swift_bridgeObjectRelease();
                v134._countAndFlagsBits = 32;
                v134._object = (void *)0xE100000000000000;
                String.append(_:)(v134);
                id v135 = v87;
                v136._countAndFlagsBits = sub_100647084(v87);
                String.append(_:)(v136);
                swift_bridgeObjectRelease();
                uint64_t v137 = v402;
                unint64_t v138 = v403;
                uint64_t v402 = 0;
                unint64_t v403 = 0xE000000000000000;
                id v139 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
                id v140 = [v139 titleForAchievement:v124];

                if (v140)
                {
                  uint64_t v141 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  v143 = v142;
                }
                else
                {
                  uint64_t v141 = sub_100059FF4(v124);
                  v143 = v144;
                }
                v145._countAndFlagsBits = v141;
                v145._object = v143;
                String.append(_:)(v145);
                swift_bridgeObjectRelease();
                v146._countAndFlagsBits = 32;
                v146._object = (void *)0xE100000000000000;
                String.append(_:)(v146);
                v147._countAndFlagsBits = sub_100647084(v124);
                String.append(_:)(v147);
                swift_bridgeObjectRelease();
                if (v137 == v402 && v138 == v403) {
                  LODWORD(v396) = 0;
                }
                else {
                  LODWORD(v396) = _stringCompareWithSmolCheck(_:_:expecting:)();
                }
                uint64_t v20 = v380;
                uint64_t v56 = v388;
                Swift::Int v69 = v369;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();

                swift_release();
                id v87 = v135;
              }

              uint64_t v76 = v370;
              v394 = (char *)(v370 + 2);
              uint64_t v2 = v374;
              uint64_t v96 = v404;
              if (v370 + 2 >= v69) {
                goto LABEL_94;
              }
              v148 = (void **)(v344 + 16 * v370);
              while (1)
              {
                uint64_t v374 = v2;
                v149 = *v148;
                v151 = *(v148 - 3);
                v150 = *(v148 - 2);
                swift_retain();
                id v152 = v149;
                swift_retain();
                id v153 = v150;
                id v154 = [v152 relevantEarnedInstance];
                if (!v154) {
                  break;
                }
                v155 = v154;
                id v156 = [v154 earnedDateComponents];

                if (v156)
                {
                  v157 = v364;
                  static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

                  uint64_t v158 = 0;
                }
                else
                {
                  uint64_t v158 = 1;
                  v157 = v364;
                }
                uint64_t v96 = v404;
                v398((uint64_t)v157, v158, 1, v404);
                uint64_t v160 = (uint64_t)v157;
                uint64_t v159 = v367;
                sub_1000ACADC(v160, v367);
                if ((*v395)(v159, 1, v96) == 1) {
                  goto LABEL_61;
                }
                v171 = v359;
                (*v385)(v359, v159, v96);
                v172 = v386;
                static Calendar.current.getter();
                v173 = v361;
                Calendar.date(from:)();
                v174 = v172;
                uint64_t v96 = v404;
                (*v384)(v174, v387);
                v175 = v171;
                uint64_t v56 = v388;
                (*v383)(v175, v96);
                if ((*v382)(v173, 1, v56) == 1)
                {
                  uint64_t v161 = (uint64_t)v173;
                  v162 = (uint64_t *)&unk_10095B890;
                  goto LABEL_62;
                }
                (*v379)(v372, v173, v56);
LABEL_63:
                id v163 = [v153 relevantEarnedInstance];
                *(void *)&long long v401 = v153;
                id v397 = v151;
                if (!v163)
                {
                  v169 = v20;
                  uint64_t v170 = v368;
                  v398(v368, 1, 1, v96);
LABEL_71:
                  uint64_t v178 = v170;
                  v179 = &qword_10094E8A8;
LABEL_72:
                  sub_10008DB18(v178, v179);
                  v180 = v366;
                  static Date.distantPast.getter();
                  goto LABEL_73;
                }
                v164 = v163;
                id v165 = [v163 earnedDateComponents];

                v166 = v363;
                if (v165)
                {
                  static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

                  v167 = v166;
                  uint64_t v168 = 0;
                }
                else
                {
                  v167 = v363;
                  uint64_t v168 = 1;
                }
                uint64_t v176 = v404;
                v398((uint64_t)v167, v168, 1, v404);
                uint64_t v177 = (uint64_t)v166;
                uint64_t v170 = v368;
                sub_1000ACADC(v177, v368);
                v169 = v20;
                if ((*v395)(v170, 1, v176) == 1) {
                  goto LABEL_71;
                }
                v191 = v360;
                (*v385)(v360, v170, v176);
                v192 = v386;
                static Calendar.current.getter();
                v193 = v362;
                Calendar.date(from:)();
                (*v384)(v192, v387);
                v194 = v191;
                uint64_t v56 = v388;
                (*v383)(v194, v404);
                if ((*v382)(v193, 1, v56) == 1)
                {
                  uint64_t v178 = (uint64_t)v193;
                  v179 = (uint64_t *)&unk_10095B890;
                  goto LABEL_72;
                }
                v195 = v193;
                v180 = v366;
                (*v379)(v366, v195, v56);
LABEL_73:
                v181 = v372;
                uint64_t v182 = Date.compare(_:)();
                v183 = (void (*)(char *, uint64_t))v371;
                ((void (*)(char *, uint64_t))v371)(v180, v56);
                v183(v181, v56);
                if (v182)
                {
                  swift_release();

                  swift_release();
                  int v184 = v182 == 1;
                  Swift::Int v69 = v369;
                  uint64_t v20 = v169;
                }
                else
                {
                  uint64_t v402 = 0;
                  unint64_t v403 = 0xE000000000000000;
                  id v185 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
                  v186 = v152;
                  id v187 = [v185 titleForAchievement:v152];

                  if (v187)
                  {
                    uint64_t v188 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    v190 = v189;
                  }
                  else
                  {
                    uint64_t v188 = sub_100059FF4(v152);
                    v190 = v196;
                  }
                  v197._countAndFlagsBits = v188;
                  v197._object = v190;
                  String.append(_:)(v197);
                  swift_bridgeObjectRelease();
                  v198._countAndFlagsBits = 32;
                  v198._object = (void *)0xE100000000000000;
                  String.append(_:)(v198);
                  v365 = v186;
                  v199._countAndFlagsBits = sub_100647084(v186);
                  String.append(_:)(v199);
                  swift_bridgeObjectRelease();
                  uint64_t v200 = v402;
                  unint64_t v201 = v403;
                  uint64_t v402 = 0;
                  unint64_t v403 = 0xE000000000000000;
                  id v202 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
                  v203 = (void *)v401;
                  id v204 = [v202 titleForAchievement:(void)v401];

                  if (v204)
                  {
                    uint64_t v205 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    v207 = v206;
                  }
                  else
                  {
                    uint64_t v205 = sub_100059FF4(v203);
                    v207 = v208;
                  }
                  v209._countAndFlagsBits = v205;
                  v209._object = v207;
                  String.append(_:)(v209);
                  swift_bridgeObjectRelease();
                  v210._countAndFlagsBits = 32;
                  v210._object = (void *)0xE100000000000000;
                  String.append(_:)(v210);
                  v211._countAndFlagsBits = sub_100647084(v203);
                  String.append(_:)(v211);
                  swift_bridgeObjectRelease();
                  if (v200 == v402 && v201 == v403) {
                    int v184 = 0;
                  }
                  else {
                    int v184 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  }
                  uint64_t v56 = v388;
                  Swift::Int v69 = v369;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();

                  swift_release();
                  uint64_t v20 = v380;
                  id v152 = v365;
                }

                uint64_t v2 = v374;
                if ((v396 ^ v184))
                {
                  uint64_t v96 = v404;
                  uint64_t v76 = v370;
LABEL_94:
                  Swift::Int v80 = (Swift::Int)v394;
LABEL_95:
                  unint64_t v78 = v353;
                  uint64_t v77 = v393;
                  if (v396)
                  {
                    if (v80 < v76) {
                      goto LABEL_245;
                    }
                    if (v76 < v80)
                    {
                      v212 = (long long *)(v343 + 16 * v80);
                      Swift::Int v213 = v80;
                      uint64_t v214 = v76;
                      v215 = (long long *)(v393 + 16 * v76);
                      do
                      {
                        if (v214 != --v213)
                        {
                          if (!v77) {
                            goto LABEL_250;
                          }
                          long long v216 = *v215;
                          long long *v215 = *v212;
                          long long *v212 = v216;
                        }
                        ++v214;
                        --v212;
                        ++v215;
                      }
                      while (v214 < v213);
                      uint64_t v76 = v370;
                    }
                  }
LABEL_104:
                  if (v80 >= v69) {
                    goto LABEL_158;
                  }
                  if (__OFSUB__(v80, v76)) {
                    goto LABEL_243;
                  }
                  if (v80 - v76 >= v347)
                  {
LABEL_157:
                    uint64_t v76 = v370;
                    goto LABEL_158;
                  }
                  uint64_t v76 = v370;
                  if (__OFADD__(v370, v347)) {
                    goto LABEL_246;
                  }
                  if (v370 + v347 >= v69) {
                    Swift::Int v217 = v69;
                  }
                  else {
                    Swift::Int v217 = v370 + v347;
                  }
                  if (v217 >= v370)
                  {
                    if (v80 != v217)
                    {
                      v353 = v78;
                      uint64_t v374 = v2;
                      v218 = (char *)(v343 + 16 * v80);
                      v365 = (void *)v217;
                      while (1)
                      {
                        long long v220 = *(_OWORD *)(v77 + 16 * v80);
                        uint64_t v221 = v370;
                        v371 = v218;
                        v394 = (char *)v80;
                        while (1)
                        {
                          long long v401 = v220;
                          uint64_t v396 = v221;
                          v222 = (void *)*((void *)v218 + 1);
                          v223 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v220;
                          swift_retain();
                          id v224 = *((id *)&v401 + 1);
                          swift_retain();
                          id v225 = v222;
                          *(void *)&long long v401 = v224;
                          id v226 = [v224 relevantEarnedInstance];
                          if (!v226)
                          {
                            v230 = *v400;
                            uint64_t v233 = v390;
                            (*v400)(v390, 1, 1, v96);
LABEL_124:
                            uint64_t v235 = v233;
                            v236 = &qword_10094E8A8;
LABEL_125:
                            sub_10008DB18(v235, v236);
                            static Date.distantPast.getter();
                            goto LABEL_126;
                          }
                          v227 = v226;
                          id v228 = [v226 earnedDateComponents];

                          if (v228)
                          {
                            v229 = v381;
                            static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

                            v230 = *v400;
                            v231 = v229;
                            uint64_t v232 = 0;
                          }
                          else
                          {
                            v230 = *v400;
                            v229 = v381;
                            v231 = v381;
                            uint64_t v232 = 1;
                          }
                          uint64_t v96 = v404;
                          v230((uint64_t)v231, v232, 1, v404);
                          uint64_t v234 = (uint64_t)v229;
                          uint64_t v233 = v390;
                          sub_1000ACADC(v234, v390);
                          if ((*v395)(v233, 1, v96) == 1) {
                            goto LABEL_124;
                          }
                          v242 = v375;
                          (*v385)(v375, v233, v96);
                          v243 = v386;
                          static Calendar.current.getter();
                          v244 = v377;
                          Calendar.date(from:)();
                          v245 = v243;
                          uint64_t v96 = v404;
                          (*v384)(v245, v387);
                          v246 = v242;
                          uint64_t v56 = v388;
                          (*v383)(v246, v96);
                          if ((*v382)(v244, 1, v56) == 1)
                          {
                            uint64_t v235 = (uint64_t)v244;
                            v236 = (uint64_t *)&unk_10095B890;
                            goto LABEL_125;
                          }
                          (*v379)(v399, v244, v56);
LABEL_126:
                          id v237 = [v225 relevantEarnedInstance:v343];
                          id v397 = v225;
                          v398 = v223;
                          if (!v237)
                          {
                            uint64_t v241 = (uint64_t)v391;
                            v230((uint64_t)v391, 1, 1, v96);
LABEL_134:
                            uint64_t v248 = v241;
                            v249 = &qword_10094E8A8;
LABEL_135:
                            sub_10008DB18(v248, v249);
                            v250 = v389;
                            uint64_t v251 = v56;
                            v252 = v20;
                            static Date.distantPast.getter();
                            goto LABEL_136;
                          }
                          v238 = v237;
                          id v239 = [v237 earnedDateComponents];

                          if (v239)
                          {
                            static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

                            uint64_t v240 = 0;
                          }
                          else
                          {
                            uint64_t v240 = 1;
                          }
                          uint64_t v241 = (uint64_t)v391;
                          uint64_t v247 = v404;
                          v230((uint64_t)v20, v240, 1, v404);
                          sub_1000ACADC((uint64_t)v20, v241);
                          if ((*v395)(v241, 1, v247) == 1) {
                            goto LABEL_134;
                          }
                          v263 = v376;
                          (*v385)(v376, v241, v247);
                          v264 = v386;
                          static Calendar.current.getter();
                          v265 = v378;
                          Calendar.date(from:)();
                          (*v384)(v264, v387);
                          (*v383)(v263, v404);
                          if ((*v382)(v265, 1, v56) == 1)
                          {
                            uint64_t v248 = (uint64_t)v265;
                            v249 = (uint64_t *)&unk_10095B890;
                            goto LABEL_135;
                          }
                          v252 = v20;
                          v250 = v389;
                          uint64_t v251 = v56;
                          (*v379)(v389, v265, v56);
LABEL_136:
                          v253 = v399;
                          uint64_t v254 = Date.compare(_:)();
                          v255 = *v392;
                          (*v392)(v250, v251);
                          v255(v253, v251);
                          if (v254)
                          {

                            swift_release();
                            swift_release();
                            BOOL v256 = v254 == 1;
                            uint64_t v20 = v252;
                            uint64_t v56 = v251;
                            if (!v256) {
                              goto LABEL_114;
                            }
                            goto LABEL_152;
                          }
                          uint64_t v402 = 0;
                          unint64_t v403 = 0xE000000000000000;
                          id v257 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
                          v258 = (void *)v401;
                          id v259 = [v257 titleForAchievement:(void)v401];

                          if (v259)
                          {
                            uint64_t v260 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            v262 = v261;
                          }
                          else
                          {
                            uint64_t v260 = sub_100059FF4(v258);
                            v262 = v266;
                          }
                          id v267 = v397;
                          v268._countAndFlagsBits = v260;
                          v268._object = v262;
                          String.append(_:)(v268);
                          swift_bridgeObjectRelease();
                          v269._countAndFlagsBits = 32;
                          v269._object = (void *)0xE100000000000000;
                          String.append(_:)(v269);
                          v270._countAndFlagsBits = sub_100647084(v258);
                          String.append(_:)(v270);
                          swift_bridgeObjectRelease();
                          uint64_t v271 = v402;
                          unint64_t v272 = v403;
                          uint64_t v402 = 0;
                          unint64_t v403 = 0xE000000000000000;
                          id v273 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
                          id v274 = [v273 titleForAchievement:v267];

                          if (v274)
                          {
                            uint64_t v275 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            v277 = v276;
                          }
                          else
                          {
                            uint64_t v275 = sub_100059FF4(v267);
                            v277 = v278;
                          }
                          v279._countAndFlagsBits = v275;
                          v279._object = v277;
                          String.append(_:)(v279);
                          swift_bridgeObjectRelease();
                          v280._countAndFlagsBits = 32;
                          v280._object = (void *)0xE100000000000000;
                          String.append(_:)(v280);
                          v281._countAndFlagsBits = sub_100647084(v267);
                          String.append(_:)(v281);
                          swift_bridgeObjectRelease();
                          if (v271 == v402 && v272 == v403) {
                            break;
                          }
                          char v282 = _stringCompareWithSmolCheck(_:_:expecting:)();

                          swift_release();
                          swift_release();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t v20 = v380;
                          uint64_t v56 = v388;
                          if ((v282 & 1) == 0)
                          {
LABEL_114:
                            uint64_t v96 = v404;
                            goto LABEL_115;
                          }
LABEL_152:
                          uint64_t v96 = v404;
                          uint64_t v77 = v393;
                          v219 = v394;
                          if (!v393) {
                            goto LABEL_248;
                          }
                          long long v220 = *((_OWORD *)v218 + 1);
                          *((_OWORD *)v218 + 1) = *(_OWORD *)v218;
                          *(_OWORD *)v218 = v220;
                          v218 -= 16;
                          uint64_t v221 = v396 + 1;
                          if (v219 == (char *)(v396 + 1)) {
                            goto LABEL_116;
                          }
                        }

                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease_n();
                        uint64_t v20 = v380;
                        uint64_t v96 = v404;
                        uint64_t v56 = v388;
LABEL_115:
                        uint64_t v77 = v393;
                        v219 = v394;
LABEL_116:
                        Swift::Int v80 = (Swift::Int)(v219 + 1);
                        v218 = v371 + 16;
                        if ((void *)v80 == v365)
                        {
                          Swift::Int v80 = (Swift::Int)v365;
                          uint64_t v2 = v374;
                          unint64_t v78 = v353;
                          goto LABEL_157;
                        }
                      }
                    }
LABEL_158:
                    if (v80 < v76) {
                      goto LABEL_238;
                    }
                    v283 = v78;
                    if (swift_isUniquelyReferenced_nonNull_native()) {
                      unint64_t v78 = v283;
                    }
                    else {
                      unint64_t v78 = sub_1001EE868(0, *((void *)v283 + 2) + 1, 1, v283);
                    }
                    unint64_t v285 = *((void *)v78 + 2);
                    unint64_t v284 = *((void *)v78 + 3);
                    unint64_t v79 = v285 + 1;
                    uint64_t v77 = v393;
                    if (v285 >= v284 >> 1)
                    {
                      v334 = sub_1001EE868((char *)(v284 > 1), v285 + 1, 1, v78);
                      uint64_t v77 = v393;
                      unint64_t v78 = v334;
                    }
                    *((void *)v78 + 2) = v79;
                    v286 = v78 + 32;
                    v287 = &v78[16 * v285 + 32];
                    *(void *)v287 = v370;
                    *((void *)v287 + 1) = v80;
                    v394 = (char *)v80;
                    if (v285)
                    {
                      while (2)
                      {
                        unint64_t v288 = v79 - 1;
                        if (v79 >= 4)
                        {
                          v293 = &v286[16 * v79];
                          uint64_t v294 = *((void *)v293 - 8);
                          uint64_t v295 = *((void *)v293 - 7);
                          BOOL v299 = __OFSUB__(v295, v294);
                          uint64_t v296 = v295 - v294;
                          if (v299) {
                            goto LABEL_227;
                          }
                          uint64_t v298 = *((void *)v293 - 6);
                          uint64_t v297 = *((void *)v293 - 5);
                          BOOL v299 = __OFSUB__(v297, v298);
                          uint64_t v291 = v297 - v298;
                          char v292 = v299;
                          if (v299) {
                            goto LABEL_228;
                          }
                          unint64_t v300 = v79 - 2;
                          v301 = &v286[16 * v79 - 32];
                          uint64_t v303 = *(void *)v301;
                          uint64_t v302 = *((void *)v301 + 1);
                          BOOL v299 = __OFSUB__(v302, v303);
                          uint64_t v304 = v302 - v303;
                          if (v299) {
                            goto LABEL_230;
                          }
                          BOOL v299 = __OFADD__(v291, v304);
                          uint64_t v305 = v291 + v304;
                          if (v299) {
                            goto LABEL_233;
                          }
                          if (v305 >= v296)
                          {
                            v323 = &v286[16 * v288];
                            uint64_t v325 = *(void *)v323;
                            uint64_t v324 = *((void *)v323 + 1);
                            BOOL v299 = __OFSUB__(v324, v325);
                            uint64_t v326 = v324 - v325;
                            if (v299) {
                              goto LABEL_237;
                            }
                            BOOL v316 = v291 < v326;
                          }
                          else
                          {
LABEL_177:
                            if (v292) {
                              goto LABEL_229;
                            }
                            unint64_t v300 = v79 - 2;
                            v306 = &v286[16 * v79 - 32];
                            uint64_t v308 = *(void *)v306;
                            uint64_t v307 = *((void *)v306 + 1);
                            BOOL v309 = __OFSUB__(v307, v308);
                            uint64_t v310 = v307 - v308;
                            char v311 = v309;
                            if (v309) {
                              goto LABEL_232;
                            }
                            v312 = &v286[16 * v288];
                            uint64_t v314 = *(void *)v312;
                            uint64_t v313 = *((void *)v312 + 1);
                            BOOL v299 = __OFSUB__(v313, v314);
                            uint64_t v315 = v313 - v314;
                            if (v299) {
                              goto LABEL_235;
                            }
                            if (__OFADD__(v310, v315)) {
                              goto LABEL_236;
                            }
                            if (v310 + v315 < v291) {
                              goto LABEL_189;
                            }
                            BOOL v316 = v291 < v315;
                          }
                          if (v316) {
                            unint64_t v288 = v300;
                          }
                        }
                        else
                        {
                          if (v79 == 3)
                          {
                            uint64_t v290 = *((void *)v78 + 4);
                            uint64_t v289 = *((void *)v78 + 5);
                            BOOL v299 = __OFSUB__(v289, v290);
                            uint64_t v291 = v289 - v290;
                            char v292 = v299;
                            goto LABEL_177;
                          }
                          uint64_t v317 = *((void *)v78 + 4);
                          uint64_t v318 = *((void *)v78 + 5);
                          BOOL v299 = __OFSUB__(v318, v317);
                          uint64_t v310 = v318 - v317;
                          char v311 = v299;
LABEL_189:
                          if (v311) {
                            goto LABEL_231;
                          }
                          v319 = &v286[16 * v288];
                          uint64_t v321 = *(void *)v319;
                          uint64_t v320 = *((void *)v319 + 1);
                          BOOL v299 = __OFSUB__(v320, v321);
                          uint64_t v322 = v320 - v321;
                          if (v299) {
                            goto LABEL_234;
                          }
                          if (v322 < v310) {
                            goto LABEL_15;
                          }
                        }
                        unint64_t v327 = v288 - 1;
                        if (v288 - 1 >= v79)
                        {
                          __break(1u);
LABEL_224:
                          __break(1u);
LABEL_225:
                          __break(1u);
LABEL_226:
                          __break(1u);
LABEL_227:
                          __break(1u);
LABEL_228:
                          __break(1u);
LABEL_229:
                          __break(1u);
LABEL_230:
                          __break(1u);
LABEL_231:
                          __break(1u);
LABEL_232:
                          __break(1u);
LABEL_233:
                          __break(1u);
LABEL_234:
                          __break(1u);
LABEL_235:
                          __break(1u);
LABEL_236:
                          __break(1u);
LABEL_237:
                          __break(1u);
LABEL_238:
                          __break(1u);
LABEL_239:
                          __break(1u);
LABEL_240:
                          __break(1u);
LABEL_241:
                          __break(1u);
LABEL_242:
                          __break(1u);
LABEL_243:
                          __break(1u);
LABEL_244:
                          __break(1u);
LABEL_245:
                          __break(1u);
LABEL_246:
                          __break(1u);
                          goto LABEL_247;
                        }
                        if (!v77) {
                          goto LABEL_249;
                        }
                        v328 = v78;
                        v329 = &v286[16 * v327];
                        uint64_t v330 = *(void *)v329;
                        v331 = &v286[16 * v288];
                        uint64_t v332 = *((void *)v331 + 1);
                        sub_100513B94((char *)(v77 + 16 * *(void *)v329), (char *)(v77 + 16 * *(void *)v331), v77 + 16 * v332, v373);
                        if (v2)
                        {
                          v335 = v345;
                          goto LABEL_221;
                        }
                        if (v332 < v330) {
                          goto LABEL_224;
                        }
                        if (v288 > *((void *)v328 + 2)) {
                          goto LABEL_225;
                        }
                        *(void *)v329 = v330;
                        *(void *)&v286[16 * v327 + 8] = v332;
                        unint64_t v333 = *((void *)v328 + 2);
                        if (v288 >= v333) {
                          goto LABEL_226;
                        }
                        unint64_t v79 = v333 - 1;
                        memmove(&v286[16 * v288], v331 + 16, 16 * (v333 - 1 - v288));
                        unint64_t v78 = v328;
                        *((void *)v328 + 2) = v333 - 1;
                        uint64_t v20 = v380;
                        uint64_t v56 = v388;
                        uint64_t v77 = v393;
                        if (v333 <= 2) {
                          goto LABEL_15;
                        }
                        continue;
                      }
                    }
                    unint64_t v79 = 1;
LABEL_15:
                    Swift::Int v69 = v369;
                    uint64_t v76 = (uint64_t)v394;
                    if ((uint64_t)v394 >= v369)
                    {
                      v335 = v345;
                      if (v79 < 2)
                      {
LABEL_221:
                        swift_bridgeObjectRelease();
                        v335[2] = 0;
                        swift_bridgeObjectRelease();
                        return;
                      }
LABEL_208:
                      uint64_t v336 = *v357;
                      while (1)
                      {
                        unint64_t v337 = v79 - 2;
                        if (v79 < 2) {
                          goto LABEL_239;
                        }
                        if (!v336) {
                          goto LABEL_251;
                        }
                        v338 = v78;
                        uint64_t v339 = *(void *)&v78[16 * v337 + 32];
                        uint64_t v340 = *(void *)&v78[16 * v79 + 24];
                        sub_100513B94((char *)(v336 + 16 * v339), (char *)(v336 + 16 * *(void *)&v78[16 * v79 + 16]), v336 + 16 * v340, v373);
                        if (v2) {
                          goto LABEL_221;
                        }
                        if (v340 < v339) {
                          goto LABEL_240;
                        }
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                          v338 = sub_1001EEF68((uint64_t)v338);
                        }
                        if (v337 >= *((void *)v338 + 2)) {
                          goto LABEL_241;
                        }
                        v341 = &v338[16 * v337 + 32];
                        *(void *)v341 = v339;
                        *((void *)v341 + 1) = v340;
                        unint64_t v342 = *((void *)v338 + 2);
                        if (v79 > v342) {
                          goto LABEL_242;
                        }
                        memmove(&v338[16 * v79 + 16], &v338[16 * v79 + 32], 16 * (v342 - v79));
                        unint64_t v78 = v338;
                        *((void *)v338 + 2) = v342 - 1;
                        unint64_t v79 = v342 - 1;
                        if (v342 <= 2) {
                          goto LABEL_221;
                        }
                      }
                    }
                    goto LABEL_16;
                  }
LABEL_247:
                  __break(1u);
LABEL_248:
                  __break(1u);
LABEL_249:
                  __break(1u);
LABEL_250:
                  __break(1u);
LABEL_251:
                  __break(1u);
LABEL_252:
                  _assertionFailure(_:_:file:line:flags:)();
                  __break(1u);
                  return;
                }
                v148 += 2;
                ++v394;
                uint64_t v96 = v404;
                if ((char *)v69 == v394)
                {
                  Swift::Int v80 = v69;
                  uint64_t v76 = v370;
                  goto LABEL_95;
                }
              }
              uint64_t v159 = v367;
              v398(v367, 1, 1, v96);
LABEL_61:
              uint64_t v161 = v159;
              v162 = &qword_10094E8A8;
LABEL_62:
              sub_10008DB18(v161, v162);
              static Date.distantPast.getter();
              goto LABEL_63;
            }
          }
          else
          {
            uint64_t v108 = v356;
            v398(v356, 1, 1, v98);
          }
          v115 = v20;
          uint64_t v116 = v108;
          v117 = &qword_10094E8A8;
          goto LABEL_35;
        }
        uint64_t v101 = (uint64_t)v99;
        v102 = (uint64_t *)&unk_10095B890;
LABEL_25:
        sub_10008DB18(v101, v102);
        static Date.distantPast.getter();
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v97 = v355;
      uint64_t v98 = v404;
      v398 = *v400;
      v398(v355, 1, 1, v404);
    }
    uint64_t v101 = v97;
    v102 = &qword_10094E8A8;
    goto LABEL_25;
  }
  if (v69 < 0) {
    goto LABEL_244;
  }
  if (v69) {
    sub_1005130AC(0, v69, 1, v357);
  }
}

void sub_1005130AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v97 = a1;
  uint64_t v111 = type metadata accessor for Calendar();
  uint64_t v7 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  v110 = &v95[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v9 - 8);
  v102 = &v95[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v109 = &v95[-v12];
  uint64_t v13 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v13 - 8);
  uint64_t v108 = &v95[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v116 = &v95[-v16];
  __chkstk_darwin(v17);
  uint64_t v107 = &v95[-v18];
  __chkstk_darwin(v19);
  v115 = &v95[-v20];
  uint64_t v127 = type metadata accessor for DateComponents();
  uint64_t v21 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v101 = &v95[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v100 = &v95[-v24];
  uint64_t v112 = type metadata accessor for Date();
  __chkstk_darwin(v112);
  __chkstk_darwin(v25);
  id v123 = &v95[-v28];
  uint64_t v96 = a2;
  if (a3 != a2)
  {
    id v122 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v119 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48);
    uint64_t v29 = *a4;
    v106 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32);
    id v105 = (void (**)(unsigned char *, uint64_t))(v7 + 8);
    v104 = (void (**)(unsigned char *, uint64_t))(v21 + 8);
    id v103 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    v99 = (void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 32);
    uint64_t v113 = v27;
    uint64_t v114 = (void (**)(unsigned char *, uint64_t))(v26 + 8);
    uint64_t v117 = v29;
    uint64_t v30 = v29 + 16 * a3 - 16;
    uint64_t v31 = &selRef_preferredWidth;
LABEL_6:
    long long v33 = *(_OWORD *)(v117 + 16 * a3);
    uint64_t v34 = v97;
    uint64_t v98 = v30;
    uint64_t v118 = a3;
    uint64_t v35 = v112;
    while (1)
    {
      long long v124 = v33;
      uint64_t v37 = *(void *)v30;
      uint64_t v36 = *(void **)(v30 + 8);
      uint64_t v120 = v33;
      swift_retain();
      id v38 = *((id *)&v124 + 1);
      uint64_t v121 = v37;
      swift_retain();
      id v39 = v36;
      uint64_t v40 = v31[61];
      *(void *)&long long v124 = v38;
      id v41 = [v38 v40];
      if (!v41) {
        break;
      }
      uint64_t v42 = v41;
      id v43 = [v41 earnedDateComponents];

      if (v43)
      {
        uint64_t v44 = v107;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v45 = v44;
        uint64_t v46 = *v122;
        uint64_t v47 = v44;
        uint64_t v48 = 0;
      }
      else
      {
        uint64_t v46 = *v122;
        uint64_t v45 = v107;
        uint64_t v47 = v107;
        uint64_t v48 = 1;
      }
      uint64_t v50 = v127;
      v46(v47, v48, 1, v127);
      uint64_t v51 = (uint64_t)v109;
      uint64_t v52 = (uint64_t)v45;
      uint64_t v49 = v115;
      sub_1000ACADC(v52, (uint64_t)v115);
      if ((*v119)(v49, 1, v50) == 1) {
        goto LABEL_13;
      }
      uint64_t v60 = v100;
      (*v106)(v100, v49, v50);
      uint64_t v61 = v110;
      static Calendar.current.getter();
      Calendar.date(from:)();
      (*v105)(v61, v111);
      uint64_t v62 = v60;
      uint64_t v35 = v112;
      (*v104)(v62, v50);
      if ((*v103)(v51, 1, v35) == 1)
      {
        sub_10008DB18(v51, (uint64_t *)&unk_10095B890);
        goto LABEL_14;
      }
      (*v99)(v123, v51, v35);
LABEL_15:
      id v53 = [v39 v31[61]];
      if (!v53)
      {
        uint64_t v58 = v116;
        v46(v116, 1, 1, v50);
        uint64_t v59 = v113;
LABEL_23:
        uint64_t v65 = (uint64_t)v58;
        uint64_t v66 = &qword_10094E8A8;
LABEL_24:
        sub_10008DB18(v65, v66);
        static Date.distantPast.getter();
        goto LABEL_25;
      }
      uint64_t v54 = v53;
      id v55 = [v53 earnedDateComponents];

      if (v55)
      {
        uint64_t v56 = v108;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v57 = 0;
      }
      else
      {
        uint64_t v57 = 1;
        uint64_t v56 = v108;
      }
      uint64_t v59 = v113;
      uint64_t v63 = v127;
      v46(v56, v57, 1, v127);
      uint64_t v64 = (uint64_t)v56;
      uint64_t v58 = v116;
      sub_1000ACADC(v64, (uint64_t)v116);
      if ((*v119)(v58, 1, v63) == 1) {
        goto LABEL_23;
      }
      uint64_t v76 = v101;
      (*v106)(v101, v58, v63);
      uint64_t v77 = v110;
      static Calendar.current.getter();
      unint64_t v78 = v102;
      Calendar.date(from:)();
      (*v105)(v77, v111);
      (*v104)(v76, v127);
      if ((*v103)((uint64_t)v78, 1, v35) == 1)
      {
        uint64_t v65 = (uint64_t)v78;
        uint64_t v66 = (uint64_t *)&unk_10095B890;
        goto LABEL_24;
      }
      (*v99)(v59, (uint64_t)v78, v35);
LABEL_25:
      uint64_t v67 = v123;
      uint64_t v68 = Date.compare(_:)();
      Swift::Int v69 = *v114;
      (*v114)(v59, v35);
      v69(v67, v35);
      if (v68)
      {

        swift_release();
        swift_release();
        uint64_t v31 = &selRef_preferredWidth;
        uint64_t v32 = v118;
        if (v68 != 1) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v125 = 0;
        unint64_t v126 = 0xE000000000000000;
        id v70 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
        uint64_t v71 = (void *)v124;
        id v72 = [v70 titleForAchievement:(void)v124];

        uint64_t v31 = &selRef_preferredWidth;
        if (v72)
        {
          uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v75 = v74;
        }
        else
        {
          uint64_t v73 = sub_100059FF4(v71);
          unint64_t v75 = v79;
        }
        v80._countAndFlagsBits = v73;
        v80._object = v75;
        String.append(_:)(v80);
        swift_bridgeObjectRelease();
        v81._countAndFlagsBits = 32;
        v81._object = (void *)0xE100000000000000;
        String.append(_:)(v81);
        v82._countAndFlagsBits = sub_100647084(v71);
        String.append(_:)(v82);
        swift_bridgeObjectRelease();
        uint64_t v83 = v125;
        unint64_t v84 = v126;
        uint64_t v125 = 0;
        unint64_t v126 = 0xE000000000000000;
        id v85 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
        id v86 = [v85 titleForAchievement:v39];

        if (v86)
        {
          uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v89 = v88;
        }
        else
        {
          uint64_t v87 = sub_100059FF4(v39);
          id v89 = v90;
        }
        v91._countAndFlagsBits = v87;
        v91._object = v89;
        String.append(_:)(v91);
        swift_bridgeObjectRelease();
        v92._countAndFlagsBits = 32;
        v92._object = (void *)0xE100000000000000;
        String.append(_:)(v92);
        v93._countAndFlagsBits = sub_100647084(v39);
        String.append(_:)(v93);
        swift_bridgeObjectRelease();
        if (v83 == v125 && v84 == v126)
        {

          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          uint64_t v32 = v118;
LABEL_5:
          a3 = v32 + 1;
          uint64_t v30 = v98 + 16;
          if (a3 == v96) {
            return;
          }
          goto LABEL_6;
        }
        char v94 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = v118;
        uint64_t v35 = v112;
        if ((v94 & 1) == 0) {
          goto LABEL_5;
        }
      }
      if (!v117)
      {
        __break(1u);
        return;
      }
      long long v33 = *(_OWORD *)(v30 + 16);
      *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
      *(_OWORD *)uint64_t v30 = v33;
      v30 -= 16;
      if (v32 == ++v34) {
        goto LABEL_5;
      }
    }
    uint64_t v46 = *v122;
    uint64_t v49 = v115;
    (*v122)(v115, 1, 1, v127);
LABEL_13:
    sub_10008DB18((uint64_t)v49, &qword_10094E8A8);
    uint64_t v50 = v127;
LABEL_14:
    static Date.distantPast.getter();
    goto LABEL_15;
  }
}

uint64_t sub_100513B94(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v207 = type metadata accessor for Calendar();
  v212 = *(char **)(v207 - 8);
  __chkstk_darwin(v207);
  v206 = &v187[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v9 - 8);
  v194 = &v187[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v193 = &v187[-v12];
  __chkstk_darwin(v13);
  v192 = &v187[-v14];
  __chkstk_darwin(v15);
  unint64_t v201 = &v187[-v16];
  uint64_t v17 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v17 - 8);
  v195 = &v187[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  id v204 = &v187[-v20];
  __chkstk_darwin(v21);
  uint64_t v200 = &v187[-v22];
  __chkstk_darwin(v23);
  v203 = &v187[-v24];
  __chkstk_darwin(v25);
  Swift::String v199 = &v187[-v26];
  __chkstk_darwin(v27);
  Swift::String v209 = &v187[-v28];
  __chkstk_darwin(v29);
  Swift::String v198 = &v187[-v30];
  __chkstk_darwin(v31);
  v208 = &v187[-v32];
  uint64_t v218 = type metadata accessor for DateComponents();
  uint64_t v33 = *(void *)(v218 - 8);
  __chkstk_darwin(v218);
  v191 = &v187[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v35);
  v190 = &v187[-v36];
  __chkstk_darwin(v37);
  v189 = &v187[-v38];
  __chkstk_darwin(v39);
  uint64_t v188 = &v187[-v40];
  uint64_t v217 = type metadata accessor for Date();
  id v41 = *(unsigned char **)(v217 - 8);
  __chkstk_darwin(v217);
  id v202 = &v187[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v43);
  long long v216 = &v187[-v44];
  __chkstk_darwin(v45);
  v196 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))&v187[-v46];
  __chkstk_darwin(v47);
  uint64_t v214 = a1;
  v215 = &v187[-v48];
  uint64_t v49 = a2 - a1;
  uint64_t v50 = a2 - a1 + 15;
  if (a2 - a1 >= 0) {
    uint64_t v50 = a2 - a1;
  }
  uint64_t v51 = v50 >> 4;
  unint64_t v213 = a3;
  v219 = a4;
  long long v220 = a2;
  uint64_t v52 = a3 - (void)a2;
  uint64_t v53 = v52 / 16;
  id v225 = a1;
  id v224 = a4;
  if (v50 >> 4 >= v52 / 16)
  {
    if (v52 < -15) {
      goto LABEL_110;
    }
    uint64_t v112 = (char *)v213;
    if (v219 != v220 || &v220[16 * v53] <= v219) {
      memmove(v219, v220, 16 * v53);
    }
    uint64_t v113 = &v219[16 * v53];
    v223 = v113;
    id v225 = v220;
    BOOL v114 = v52 < 16;
    uint64_t v115 = (uint64_t)v195;
    if (v114 || v214 >= v220)
    {
LABEL_109:
      sub_1001EE99C((void **)&v225, (const void **)&v224, &v223);
      return 1;
    }
    v215 = (unsigned char *)(v33 + 56);
    uint64_t v205 = (char *)(v33 + 48);
    Swift::String v199 = (unsigned char *)(v33 + 32);
    Swift::String v198 = v212 + 8;
    Swift::String v197 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 8);
    v196 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
    v192 = v41 + 32;
    unint64_t v201 = v41 + 8;
    uint64_t v116 = v220;
    while (1)
    {
      uint64_t v117 = (unsigned int (**)(char *, uint64_t, uint64_t))*((void *)v113 - 2);
      uint64_t v118 = (void *)*((void *)v113 - 1);
      uint64_t v119 = *((void *)v116 - 2);
      v208 = v116 - 16;
      Swift::String v209 = v113 - 16;
      uint64_t v120 = (void *)*((void *)v116 - 1);
      Swift::String v210 = v117;
      swift_retain();
      id v121 = v118;
      uint64_t v211 = v119;
      swift_retain();
      id v122 = v120;
      id v123 = [v121 relevantEarnedInstance];
      v212 = v113;
      if (!v123) {
        break;
      }
      long long v124 = v123;
      id v125 = [v123 earnedDateComponents];

      if (v125)
      {
        unint64_t v126 = v200;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v127 = v126;
        v128 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v215;
        v129 = v126;
        uint64_t v130 = 0;
      }
      else
      {
        v128 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v215;
        uint64_t v127 = v200;
        v129 = v200;
        uint64_t v130 = 1;
      }
      uint64_t v132 = v218;
      v128(v129, v130, 1, v218);
      uint64_t v133 = (uint64_t)v127;
      v131 = v203;
      sub_1000ACADC(v133, (uint64_t)v203);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))v205)(v131, 1, v132) == 1) {
        goto LABEL_69;
      }
      id v140 = v121;
      uint64_t v141 = v190;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))v199)(v190, v131, v132);
      v142 = v206;
      static Calendar.current.getter();
      uint64_t v143 = (uint64_t)v193;
      Calendar.date(from:)();
      (*(void (**)(unsigned char *, uint64_t))v198)(v142, v207);
      ((void (*)(unsigned char *, uint64_t))*v197)(v141, v132);
      uint64_t v144 = v217;
      if ((*v196)(v143, 1, v217) == 1)
      {
        sub_10008DB18(v143, (uint64_t *)&unk_10095B890);
        uint64_t v115 = (uint64_t)v195;
        id v121 = v140;
        goto LABEL_70;
      }
      (*(void (**)(unsigned char *, uint64_t, uint64_t))v192)(v216, v143, v144);
      uint64_t v115 = (uint64_t)v195;
      id v121 = v140;
LABEL_71:
      id v134 = [v122 relevantEarnedInstance];
      if (!v134)
      {
        uint64_t v138 = v115;
        id v139 = v204;
        v128(v204, 1, 1, v218);
LABEL_79:
        Swift::String v146 = v122;
        uint64_t v147 = (uint64_t)v139;
        v148 = &qword_10094E8A8;
LABEL_80:
        sub_10008DB18(v147, v148);
        v149 = v202;
        static Date.distantPast.getter();
        goto LABEL_81;
      }
      id v135 = v134;
      id v136 = [v134 earnedDateComponents];

      if (v136)
      {
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v137 = 0;
      }
      else
      {
        uint64_t v137 = 1;
      }
      uint64_t v145 = v218;
      v128((unsigned char *)v115, v137, 1, v218);
      uint64_t v138 = v115;
      id v139 = v204;
      sub_1000ACADC(v115, (uint64_t)v204);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))v205)(v139, 1, v145) == 1) {
        goto LABEL_79;
      }
      v162 = v191;
      uint64_t v163 = v218;
      (*(void (**)(unsigned char *, void *, uint64_t))v199)(v191, v139, v218);
      v164 = v206;
      static Calendar.current.getter();
      id v165 = v194;
      Calendar.date(from:)();
      v166 = v164;
      v167 = v165;
      (*(void (**)(unsigned char *, uint64_t))v198)(v166, v207);
      ((void (*)(unsigned char *, uint64_t))*v197)(v162, v163);
      uint64_t v168 = v217;
      Swift::String v146 = v122;
      if ((*v196)((uint64_t)v165, 1, v217) == 1)
      {
        uint64_t v147 = (uint64_t)v165;
        v148 = (uint64_t *)&unk_10095B890;
        goto LABEL_80;
      }
      v149 = v202;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))v192)(v202, v167, v168);
LABEL_81:
      v150 = v216;
      uint64_t v151 = Date.compare(_:)();
      id v152 = *(void (**)(unsigned char *, uint64_t))v201;
      id v153 = v149;
      uint64_t v154 = v217;
      (*(void (**)(unsigned char *, uint64_t))v201)(v153, v217);
      v152(v150, v154);
      if (v151)
      {

        swift_release();
        swift_release();
        v155 = v112 - 16;
        uint64_t v113 = v212;
        uint64_t v115 = v138;
        if (v151 != 1) {
          goto LABEL_102;
        }
      }
      else
      {
        uint64_t v221 = 0;
        unint64_t v222 = 0xE000000000000000;
        id v157 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
        id v158 = [v157 titleForAchievement:v121];

        unint64_t v213 = (unint64_t)v112;
        if (v158)
        {
          uint64_t v159 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v161 = v160;
        }
        else
        {
          uint64_t v159 = sub_100059FF4(v121);
          uint64_t v161 = v169;
        }
        uint64_t v115 = v138;
        v170._countAndFlagsBits = v159;
        v170._object = v161;
        String.append(_:)(v170);
        swift_bridgeObjectRelease();
        v171._countAndFlagsBits = 32;
        v171._object = (void *)0xE100000000000000;
        String.append(_:)(v171);
        v172._countAndFlagsBits = sub_100647084(v121);
        String.append(_:)(v172);
        swift_bridgeObjectRelease();
        uint64_t v174 = v221;
        unint64_t v173 = v222;
        uint64_t v221 = 0;
        unint64_t v222 = 0xE000000000000000;
        id v175 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
        id v176 = [v175 titleForAchievement:v146];

        if (v176)
        {
          uint64_t v177 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v179 = v178;
        }
        else
        {
          uint64_t v177 = sub_100059FF4(v146);
          v179 = v180;
        }
        v181._countAndFlagsBits = v177;
        v181._object = v179;
        String.append(_:)(v181);
        swift_bridgeObjectRelease();
        v182._countAndFlagsBits = 32;
        v182._object = (void *)0xE100000000000000;
        String.append(_:)(v182);
        v183._countAndFlagsBits = sub_100647084(v146);
        String.append(_:)(v183);
        swift_bridgeObjectRelease();
        if (v174 == v221 && v173 == v222) {
          char v184 = 0;
        }
        else {
          char v184 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        swift_release();
        uint64_t v113 = v212;
        uint64_t v112 = (char *)v213;
        v155 = (char *)(v213 - 16);
        if ((v184 & 1) == 0)
        {
LABEL_102:
          id v185 = v209;
          v223 = v209;
          id v156 = v214;
          if (v112 < v113 || v155 >= v113 || v112 != v113) {
            *(_OWORD *)v155 = *(_OWORD *)v209;
          }
          uint64_t v116 = v220;
          uint64_t v113 = v185;
          goto LABEL_107;
        }
      }
      id v156 = v214;
      uint64_t v116 = v208;
      if (v112 != v220 || v155 >= v220) {
        *(_OWORD *)v155 = *(_OWORD *)v208;
      }
      id v225 = v116;
LABEL_107:
      if (v113 > v219)
      {
        long long v220 = v116;
        uint64_t v112 = v155;
        if (v116 > v156) {
          continue;
        }
      }
      goto LABEL_109;
    }
    v128 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v215;
    v131 = v203;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v215)(v203, 1, 1, v218);
LABEL_69:
    sub_10008DB18((uint64_t)v131, &qword_10094E8A8);
LABEL_70:
    static Date.distantPast.getter();
    goto LABEL_71;
  }
  if (v49 >= -15)
  {
    uint64_t v54 = v214;
    if (v219 != v214 || &v214[16 * v51] <= v219) {
      memmove(v219, v214, 16 * v51);
    }
    uint64_t v205 = &v219[16 * v51];
    v223 = v205;
    id v55 = v196;
    if (v49 >= 16 && (unint64_t)v220 < v213)
    {
      long long v216 = (unsigned char *)(v33 + 56);
      Swift::String v210 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v203 = (unsigned char *)(v33 + 32);
      id v202 = v212 + 8;
      uint64_t v200 = (unsigned char *)(v33 + 8);
      Swift::String v197 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
      v195 = v41 + 32;
      id v204 = v41 + 8;
      while (1)
      {
        uint64_t v57 = *(void *)v220;
        uint64_t v56 = (void *)*((void *)v220 + 1);
        uint64_t v59 = *(char **)v219;
        uint64_t v58 = (void *)*((void *)v219 + 1);
        swift_retain();
        id v60 = v56;
        swift_retain();
        id v61 = v58;
        id v62 = [v60 relevantEarnedInstance];
        uint64_t v211 = v57;
        v212 = v59;
        if (!v62) {
          break;
        }
        uint64_t v63 = v62;
        id v64 = [v62 earnedDateComponents];

        uint64_t v65 = v218;
        if (v64)
        {
          uint64_t v66 = v198;
          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v216;
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))v216)(v66, 0, 1, v65);
        }
        else
        {
          uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v216;
          uint64_t v66 = v198;
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v216)(v198, 1, 1, v218);
        }
        uint64_t v69 = (uint64_t)v201;
        uint64_t v70 = (uint64_t)v66;
        uint64_t v68 = v208;
        sub_1000ACADC(v70, (uint64_t)v208);
        if ((*v210)(v68, 1, v65) == 1) {
          goto LABEL_17;
        }
        uint64_t v77 = v188;
        (*(void (**)(unsigned char *, char *, uint64_t))v203)(v188, v68, v65);
        unint64_t v78 = v206;
        static Calendar.current.getter();
        Calendar.date(from:)();
        (*(void (**)(unsigned char *, uint64_t))v202)(v78, v207);
        (*(void (**)(unsigned char *, uint64_t))v200)(v77, v65);
        uint64_t v79 = v217;
        if ((*v197)(v69, 1, v217) == 1)
        {
          sub_10008DB18(v69, (uint64_t *)&unk_10095B890);
          id v55 = v196;
          goto LABEL_18;
        }
        (*(void (**)(unsigned char *, uint64_t, uint64_t))v195)(v215, v69, v79);
        id v55 = v196;
LABEL_19:
        id v71 = [v61 relevantEarnedInstance];
        if (!v71)
        {
          uint64_t v76 = v209;
          v67(v209, 1, 1, v65);
LABEL_27:
          sub_10008DB18((uint64_t)v76, &qword_10094E8A8);
          uint64_t v81 = v217;
LABEL_28:
          static Date.distantPast.getter();
          goto LABEL_29;
        }
        id v72 = v71;
        id v73 = [v71 earnedDateComponents];

        if (v73)
        {
          unint64_t v74 = v199;
          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v75 = 0;
        }
        else
        {
          uint64_t v75 = 1;
          unint64_t v74 = v199;
        }
        v67(v74, v75, 1, v65);
        uint64_t v80 = (uint64_t)v74;
        uint64_t v76 = v209;
        sub_1000ACADC(v80, (uint64_t)v209);
        if ((*v210)(v76, 1, v65) == 1) {
          goto LABEL_27;
        }
        v90 = v189;
        (*(void (**)(unsigned char *, char *, uint64_t))v203)(v189, v76, v65);
        Swift::String v91 = v206;
        static Calendar.current.getter();
        uint64_t v92 = (uint64_t)v192;
        Calendar.date(from:)();
        (*(void (**)(unsigned char *, uint64_t))v202)(v91, v207);
        (*(void (**)(unsigned char *, uint64_t))v200)(v90, v65);
        uint64_t v81 = v217;
        if ((*v197)(v92, 1, v217) == 1)
        {
          sub_10008DB18(v92, (uint64_t *)&unk_10095B890);
          goto LABEL_28;
        }
        (*(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v195)(v55, v92, v81);
LABEL_29:
        Swift::String v82 = v215;
        uint64_t v83 = Date.compare(_:)();
        unint64_t v84 = (void (*)(unsigned char *, uint64_t))*v204;
        ((void (*)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))*v204)(v55, v81);
        v84(v82, v81);
        if (v83)
        {

          swift_release();
          swift_release();
          if (v83 == 1) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v221 = 0;
          unint64_t v222 = 0xE000000000000000;
          id v85 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
          id v86 = [v85 titleForAchievement:v60];

          uint64_t v214 = v54;
          if (v86)
          {
            uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v89 = v88;
          }
          else
          {
            uint64_t v87 = sub_100059FF4(v60);
            id v89 = v93;
          }
          char v94 = v55;
          v95._countAndFlagsBits = v87;
          v95._object = v89;
          String.append(_:)(v95);
          swift_bridgeObjectRelease();
          v96._countAndFlagsBits = 32;
          v96._object = (void *)0xE100000000000000;
          String.append(_:)(v96);
          v97._countAndFlagsBits = sub_100647084(v60);
          String.append(_:)(v97);
          swift_bridgeObjectRelease();
          uint64_t v99 = v221;
          unint64_t v98 = v222;
          uint64_t v221 = 0;
          unint64_t v222 = 0xE000000000000000;
          id v100 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
          id v101 = [v100 titleForAchievement:v61];

          if (v101)
          {
            uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v104 = v103;
          }
          else
          {
            uint64_t v102 = sub_100059FF4(v61);
            v104 = v105;
          }
          v106._countAndFlagsBits = v102;
          v106._object = v104;
          String.append(_:)(v106);
          swift_bridgeObjectRelease();
          v107._countAndFlagsBits = 32;
          v107._object = (void *)0xE100000000000000;
          String.append(_:)(v107);
          v108._countAndFlagsBits = sub_100647084(v61);
          String.append(_:)(v108);
          swift_bridgeObjectRelease();
          if (v99 == v221 && v98 == v222)
          {

            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
            uint64_t v54 = v214;
            id v55 = v94;
          }
          else
          {
            char v109 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v54 = v214;
            id v55 = v94;
            if (v109)
            {
LABEL_46:
              v110 = v220 + 16;
              unint64_t v111 = v213;
              if (v54 < v220 || v54 >= v110 || v54 != v220) {
                *(_OWORD *)uint64_t v54 = *(_OWORD *)v220;
              }
              goto LABEL_53;
            }
          }
        }
        unint64_t v111 = v213;
        if (v54 != v219) {
          *(_OWORD *)uint64_t v54 = *(_OWORD *)v219;
        }
        v219 += 16;
        id v224 = v219;
        v110 = v220;
LABEL_53:
        v54 += 16;
        id v225 = v54;
        if (v219 < v205)
        {
          long long v220 = v110;
          if ((unint64_t)v110 < v111) {
            continue;
          }
        }
        goto LABEL_109;
      }
      uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v216;
      uint64_t v68 = v208;
      uint64_t v65 = v218;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v216)(v208, 1, 1, v218);
LABEL_17:
      sub_10008DB18((uint64_t)v68, &qword_10094E8A8);
LABEL_18:
      static Date.distantPast.getter();
      goto LABEL_19;
    }
    goto LABEL_109;
  }
LABEL_110:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100515144(uint64_t a1, uint64_t a2)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = *(void *)(type metadata accessor for AAUIAwardsDataProviderSection() - 8);
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = (void *)(a2 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider);
    uint64_t v9 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10007E4EC(v8, v8[3]);
      if (dispatch thunk of AAUIAwardsDataProviding.topAchievement(forSection:)())
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v7 += v9;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1005152A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v39 = a3;
  uint64_t v34 = a2;
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  uint64_t v33 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v30[0] = v4;
      unint64_t v32 = a1 & 0xC000000000000001;
      v30[1] = sub_1000AFA94((uint64_t *)&unk_10096AA70);
      uint64_t v9 = _swiftEmptyArrayStorage;
      uint64_t v4 = 4;
      unint64_t v31 = a1;
      while (1)
      {
        uint64_t v10 = v4 - 4;
        if (v32)
        {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v12 = v4 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_21;
          }
        }
        else
        {
          id v11 = *(id *)(a1 + 8 * v4);
          uint64_t v12 = v4 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        id v13 = v11;
        LocalizedStringResource.init(stringLiteral:)();
        uint64_t v14 = EntityProperty<>.init(title:)();
        id v15 = v13;
        swift_retain();
        LOBYTE(v37) = [v15 unearned] ^ 1;
        EntityProperty.wrappedValue.setter();

        swift_release();
        uint64_t v37 = 0;
        unint64_t v38 = 0xE000000000000000;
        id v16 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
        id v17 = [v16 titleForAchievement:v15];

        if (v17)
        {
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v20 = v19;
        }
        else
        {
          uint64_t v18 = sub_100059FF4(v15);
          uint64_t v20 = v21;
        }
        v22._countAndFlagsBits = v18;
        v22._object = v20;
        String.append(_:)(v22);
        swift_bridgeObjectRelease();
        v23._countAndFlagsBits = 32;
        v23._object = (void *)0xE100000000000000;
        String.append(_:)(v23);
        v24._countAndFlagsBits = sub_100647084(v15);
        String.append(_:)(v24);
        swift_bridgeObjectRelease();
        uint64_t v35 = v34;
        uint64_t v36 = v39;
        sub_1000A06D0();
        char v25 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
        swift_bridgeObjectRelease();

        if (v25)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1001E8364(0, v9[2] + 1, 1, v9);
          }
          unint64_t v27 = v9[2];
          unint64_t v26 = v9[3];
          if (v27 >= v26 >> 1) {
            uint64_t v9 = sub_1001E8364((void *)(v26 > 1), v27 + 1, 1, v9);
          }
          v9[2] = v27 + 1;
          uint64_t v28 = &v9[2 * v27];
          v28[4] = v14;
          v28[5] = v15;
        }
        else
        {

          swift_release();
        }
        ++v4;
        a1 = v31;
        if (v12 == v8)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_100515600(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v4 = *(id *)(a1 + 8 * v3);
        }
        uint64_t v5 = v4;
        uint64_t v6 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        id v7 = [v4 template];
        id v8 = [v7 uniqueName];

        if (!v8) {
          break;
        }
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;

        uint64_t v12 = static String._fromSubstring(_:)();
        if (!v11) {
          goto LABEL_5;
        }
        if (v9 == v12 && v11 == v13)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return v5;
        }
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v15)
        {
          swift_bridgeObjectRelease();
          return v5;
        }

LABEL_6:
        ++v3;
        if (v6 == v2) {
          goto LABEL_24;
        }
      }
      static String._fromSubstring(_:)();
LABEL_5:

      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_100515800()
{
  unint64_t result = qword_100960268;
  if (!qword_100960268)
  {
    type metadata accessor for AwardIntentDataProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960268);
  }
  return result;
}

uint64_t sub_100515854(uint64_t a1)
{
  v1[4] = a1;
  type metadata accessor for LocalizedStringResource();
  v1[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DispatchTime();
  v1[9] = v3;
  v1[10] = *(void *)(v3 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  sub_1000AFA94(&qword_1009555A0);
  v1[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AAUIAwardsDataProviderSection();
  v1[14] = v4;
  v1[15] = *(void *)(v4 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_100515A38, 0, 0);
}

uint64_t sub_100515A38()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 56);
    unsigned int v37 = enum case for AAUIAwardsDataProviderSection.competitions(_:);
    uint64_t v44 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104);
    unsigned int v36 = enum case for AAUIAwardsDataProviderSection.monthlyChallenge(_:);
    unsigned int v35 = enum case for AAUIAwardsDataProviderSection.limitedEdtion(_:);
    unsigned int v34 = enum case for AAUIAwardsDataProviderSection.fitnessPlus(_:);
    unsigned int v33 = enum case for AAUIAwardsDataProviderSection.workouts(_:);
    unsigned int v32 = enum case for AAUIAwardsDataProviderSection.activity(_:);
    uint64_t v45 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    uint64_t v42 = (void (**)(void *, void, uint64_t))(v3 + 104);
    uint64_t v43 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    unsigned int v46 = enum case for AAUIAwardsDataProviderSection.goForIt(_:);
    uint64_t v40 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 80) + 8);
    id v41 = (void (**)(void *, uint64_t))(v3 + 8);
    uint64_t v39 = (void (**)(uint64_t, uint64_t))(v2 + 8);
    unsigned int v38 = enum case for DispatchTimeInterval.seconds(_:);
    uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v48 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v7 = qword_10094ADC8;
      swift_bridgeObjectRetain();
      if (v7 != -1) {
        swift_once();
      }
      uint64_t v8 = qword_100998230;
      *(void *)(v0 + 16) = v5;
      *(void *)(v0 + 24) = v6;
      sub_1000A06D0();
      if (*(void *)(StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)() + 16))
      {
        uint64_t v49 = v1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v9 = static String._fromSubstring(_:)();
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        char v12 = sub_10005A234(v9, v11);
        uint64_t v13 = v46;
        switch(v12)
        {
          case 1:
            goto LABEL_16;
          case 2:
            uint64_t v13 = v32;
            goto LABEL_16;
          case 3:
            uint64_t v13 = v33;
            goto LABEL_16;
          case 4:
            uint64_t v13 = v34;
            goto LABEL_16;
          case 5:
            uint64_t v13 = v35;
            goto LABEL_16;
          case 6:
            uint64_t v13 = v36;
            goto LABEL_16;
          case 7:
            uint64_t v13 = v37;
LABEL_16:
            uint64_t v15 = *(void *)(v0 + 128);
            uint64_t v16 = *(void *)(v0 + 104);
            uint64_t v17 = *(void *)(v0 + 112);
            uint64_t v19 = *(void *)(v0 + 88);
            uint64_t v18 = *(void *)(v0 + 96);
            uint64_t v20 = *(void **)(v0 + 64);
            uint64_t v47 = *(void *)(v0 + 72);
            uint64_t v21 = *(void *)(v0 + 48);
            (*v44)(v16, v13, v17);
            (*v45)(v16, 0, 1, v17);
            (*v43)(v15, v16, v17);
            static DispatchTime.now()();
            *uint64_t v20 = 3;
            (*v42)(v20, v38, v21);
            + infix(_:_:)();
            (*v41)(v20, v21);
            Swift::String v22 = *v40;
            (*v40)(v19, v47);
            OS_dispatch_group.wait(timeout:)();
            v22(v18, v47);
            sub_10007E4EC((void *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider), *(void *)(v8 + OBJC_IVAR____TtC10FitnessApp23AwardIntentDataProvider_awardsDataProvider + 24));
            unint64_t v23 = dispatch thunk of AAUIAwardsDataProviding.achievements(forSection:)();
            swift_bridgeObjectRetain();
            Swift::String v24 = sub_100515600(v23);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            (*v39)(v15, v17);
            if (v24)
            {
              sub_1000AFA94((uint64_t *)&unk_10096AA70);
              LocalizedStringResource.init(stringLiteral:)();
              uint64_t v25 = EntityProperty<>.init(title:)();
              swift_retain();
              id v26 = v24;
              *(unsigned char *)(v0 + 136) = [v26 unearned] ^ 1;
              EntityProperty.wrappedValue.setter();
              swift_release();

              swift_bridgeObjectRelease();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v48 = sub_1001E8364(0, v48[2] + 1, 1, v48);
              }
              unint64_t v28 = v48[2];
              unint64_t v27 = v48[3];
              if (v28 >= v27 >> 1) {
                uint64_t v48 = sub_1001E8364((void *)(v27 > 1), v28 + 1, 1, v48);
              }
              v48[2] = v28 + 1;
              uint64_t v29 = &v48[2 * v28];
              v29[4] = v25;
              v29[5] = v26;
              uint64_t v1 = v49;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v1 = v49;
            }
            break;
          case 8:
            swift_bridgeObjectRelease();
            goto LABEL_24;
          default:
            uint64_t v14 = *(void *)(v0 + 104);
            (*v45)(v14, 1, 1, *(void *)(v0 + 112));
            swift_bridgeObjectRelease();
            sub_10008DB18(v14, &qword_1009555A0);
LABEL_24:
            swift_bridgeObjectRelease();
            break;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v4 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v48 = _swiftEmptyArrayStorage;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void *))(v0 + 8);
  return v30(v48);
}

uint64_t sub_10051609C()
{
  type metadata accessor for LocalizedStringResource();
  v0[2] = swift_task_alloc();
  uint64_t v1 = type metadata accessor for DispatchTimeInterval();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for DispatchTime();
  v0[6] = v2;
  v0[7] = *(void *)(v2 - 8);
  v0[8] = swift_task_alloc();
  v0[9] = swift_task_alloc();
  return _swift_task_switch(sub_1005161F0, 0, 0);
}

uint64_t sub_1005161F0()
{
  if (qword_10094ADC8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v5 = *(void **)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = (void *)qword_100998230;
  static DispatchTime.now()();
  void *v5 = 3;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v5, enum case for DispatchTimeInterval.seconds(_:), v7);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v2, v3);
  OS_dispatch_group.wait(timeout:)();
  v9(v1, v3);
  uint64_t v10 = static AAUIAwardsDataProviderSection.allCases.getter();
  id v11 = v8;
  unint64_t v12 = (unint64_t)sub_100515144(v10, (uint64_t)v11);

  swift_bridgeObjectRelease();
  if (v12 >> 62)
  {
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    if (!v13) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v13) {
      goto LABEL_15;
    }
  }
  uint64_t result = sub_1001C95A8(0, v13 & ~(v13 >> 63), 0);
  if (v13 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v15 = 0;
  unint64_t v25 = v12 & 0xC000000000000001;
  sub_1000AFA94((uint64_t *)&unk_10096AA70);
  uint64_t v16 = (void *)v12;
  do
  {
    if (v25) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(v12 + 8 * v15 + 32);
    }
    uint64_t v18 = v17;
    LocalizedStringResource.init(stringLiteral:)();
    uint64_t v19 = EntityProperty<>.init(title:)();
    swift_retain();
    id v20 = v18;
    *(unsigned char *)(v0 + 80) = [v20 unearned] ^ 1;
    EntityProperty.wrappedValue.setter();
    swift_release();

    unint64_t v22 = _swiftEmptyArrayStorage[2];
    unint64_t v21 = _swiftEmptyArrayStorage[3];
    if (v22 >= v21 >> 1) {
      sub_1001C95A8(v21 > 1, v22 + 1, 1);
    }
    ++v15;
    _swiftEmptyArrayStorage[2] = v22 + 1;
    unint64_t v23 = &_swiftEmptyArrayStorage[2 * v22];
    v23[4] = v19;
    v23[5] = v20;
    unint64_t v12 = (unint64_t)v16;
  }
  while (v13 != v15);
LABEL_15:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v24 = *(uint64_t (**)(void *))(v0 + 8);
  return v24(_swiftEmptyArrayStorage);
}

uint64_t sub_10051652C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_10051654C, 0, 0);
}

uint64_t sub_10051654C()
{
  uint64_t v9 = v0;
  if (qword_10094ADC8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  unint64_t v3 = sub_100510164();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1005152A4(v3, v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4;
  swift_bridgeObjectRetain();
  sub_100510D94((uint64_t *)&v8);
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t)v8;
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

void *sub_10051667C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = type metadata accessor for TrendListMetric();
    uint64_t v9 = *(int *)(v8 + 28);
    uint64_t v10 = (char *)v4 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for AttributedString();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(v8 + 32);
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = *(int *)(a3 + 24);
    *((unsigned char *)v4 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)v4 + v18) = *(void *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1005167B8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for TrendListMetric() + 28);
  uint64_t v3 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100516860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = type metadata accessor for TrendListMetric();
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(v7 + 32);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100516950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(int *)(v6 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(v6 + 32);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100516A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(int *)(v6 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(v6 + 32)) = *(_OWORD *)(a2 + *(int *)(v6 + 32));
  uint64_t v11 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t sub_100516B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for TrendListMetric();
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(v7 + 32);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_release();
  return a1;
}

uint64_t sub_100516C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100516C18);
}

uint64_t sub_100516C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100516CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100516CF8);
}

uint64_t sub_100516CF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TrendListMetric();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for TrendArrowIndicatorViewRepresentable()
{
  uint64_t result = qword_1009602E0;
  if (!qword_1009602E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100516E00()
{
  uint64_t result = type metadata accessor for TrendListMetric();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_100516EA0()
{
  type metadata accessor for TrendArrowIndicatorView();
  unint64_t v1 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v2 = (char *)sub_1005F2334(*v0);
  id v3 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors] = v3;
  id v5 = v3;

  sub_100579074();
  return v1;
}

uint64_t sub_100516F3C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TrendArrowIndicatorViewRepresentable();
  int v5 = *(unsigned __int8 *)(v1 + *(int *)(v4 + 20));
  uint64_t v6 = *(void *)(v1 + *(int *)(v4 + 24));
  if (v5 == 1)
  {
    if (!v6) {
      goto LABEL_9;
    }
    unsigned __int8 v7 = *(unsigned char *)v2;
    swift_beginAccess();
    uint64_t v8 = *(void *)(v6 + 32);
    if (!*(void *)(v8 + 16)) {
      goto LABEL_9;
    }
  }
  else
  {
    if (!v6) {
      goto LABEL_9;
    }
    unsigned __int8 v7 = *(unsigned char *)v2;
    swift_beginAccess();
    uint64_t v8 = *(void *)(v6 + 24);
    if (!*(void *)(v8 + 16)) {
      goto LABEL_9;
    }
  }
  unint64_t v9 = sub_1000D5C14(v7);
  if ((v10 & 1) == 0)
  {
LABEL_9:
    char v13 = 1;
    return sub_100517034(a1, *(unsigned char *)(v2 + 1), v13);
  }
  int v11 = *(unsigned __int8 *)(*(void *)(v8 + 56) + v9);
  char v12 = *((unsigned char *)a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection);
  *((unsigned char *)a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection) = v11;
  *((unsigned char *)a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection) = v12;
  char v13 = v11 == 1;
  return sub_100517034(a1, *(unsigned char *)(v2 + 1), v13);
}

uint64_t sub_100517034(void *a1, char a2, char a3)
{
  uint64_t v7 = type metadata accessor for TrendArrowIndicatorViewRepresentable();
  uint64_t v8 = *(void *)&v3[*(int *)(v7 + 24)];
  if (v3[*(int *)(v7 + 20)] == 1)
  {
    if (v8)
    {
      unsigned __int8 v9 = *v3;
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = *(void *)(v8 + 32);
      *(void *)(v8 + 32) = 0x8000000000000000;
      sub_1004F1014(a2, v9, isUniquelyReferenced_nonNull_native);
      *(void *)(v8 + 32) = v16;
LABEL_6:
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
  }
  else if (v8)
  {
    unsigned __int8 v11 = *v3;
    swift_beginAccess();
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void *)(v8 + 24);
    *(void *)(v8 + 24) = 0x8000000000000000;
    sub_1004F1014(a2, v11, v12);
    *(void *)(v8 + 24) = v17;
    goto LABEL_6;
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(unsigned char *)(v13 + 24) = a2;
  *(unsigned char *)(v13 + 25) = a3 & 1;
  id v14 = a1;
  sub_1001FAB90((uint64_t)sub_10051736C, v13);
  return swift_release();
}

uint64_t sub_1005171BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10051739C(&qword_100960328);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10051723C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10051739C(&qword_100960328);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1005172BC()
{
}

uint64_t sub_100517300()
{
  return sub_10051739C(&qword_100960320);
}

uint64_t sub_100517334()
{
  return swift_deallocObject();
}

void sub_10051736C()
{
  sub_100579EA0((void *)*(unsigned __int8 *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_10051739C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TrendArrowIndicatorViewRepresentable();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1005173E8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v49 = a3;
    uint64_t v50 = a2;
    unsigned __int8 v11 = (char *)a1 + v9;
    char v12 = (char *)a2 + v9;
    *(_OWORD *)unsigned __int8 v11 = *(_OWORD *)v12;
    *((void *)v11 + 2) = *((void *)v12 + 2);
    uint64_t v13 = (char *)a1 + v10;
    id v14 = (char *)a2 + v10;
    uint64_t v15 = type metadata accessor for UUID();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_retain();
    v16(v13, v14, v15);
    uint64_t v17 = (int *)type metadata accessor for ActivityRingsCard();
    uint64_t v18 = v17[5];
    uint64_t v19 = &v13[v18];
    id v20 = &v14[v18];
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *((void *)v20 + 1);
    char v23 = v20[16];
    sub_100091494(*(void *)v20, v22, v23);
    *(void *)uint64_t v19 = v21;
    *((void *)v19 + 1) = v22;
    v19[16] = v23;
    v13[v17[6]] = v14[v17[6]];
    v13[v17[7]] = v14[v17[7]];
    v13[v17[8]] = v14[v17[8]];
    uint64_t v24 = v17[9];
    unint64_t v25 = *(void **)&v14[v24];
    *(void *)&v13[v24] = v25;
    uint64_t v26 = v17[10];
    __dst = &v13[v26];
    unint64_t v27 = &v14[v26];
    uint64_t v28 = type metadata accessor for Date();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    id v31 = v25;
    if (v30(v27, 1, v28))
    {
      uint64_t v32 = sub_1000AFA94((uint64_t *)&unk_10095B890);
      memcpy(__dst, v27, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    uint64_t v33 = v17[11];
    unsigned int v34 = *(void **)&v14[v33];
    *(void *)&v13[v33] = v34;
    v13[v17[12]] = v14[v17[12]];
    uint64_t v35 = v49[7];
    unsigned int v36 = (char *)a1 + v35;
    unsigned int v37 = (char *)v50 + v35;
    uint64_t v38 = *(void *)((char *)v50 + v35 + 24);
    id v39 = v34;
    if (v38)
    {
      uint64_t v40 = *((void *)v37 + 4);
      *((void *)v36 + 3) = v38;
      *((void *)v36 + 4) = v40;
      (**(void (***)(char *, char *, uint64_t))(v38 - 8))(v36, v37, v38);
    }
    else
    {
      long long v41 = *((_OWORD *)v37 + 1);
      *(_OWORD *)unsigned int v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v41;
      *((void *)v36 + 4) = *((void *)v37 + 4);
    }
    uint64_t v42 = v49[8];
    uint64_t v43 = v49[9];
    uint64_t v44 = (void *)((char *)a1 + v42);
    uint64_t v45 = (void *)((char *)v50 + v42);
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    *(void *)((char *)a1 + v43) = *(void *)((char *)v50 + v43);
  }
  swift_retain();
  return a1;
}

char *sub_100517774(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  unsigned __int8 v11 = &a2[v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((void *)v10 + 2) = *((void *)v11 + 2);
  char v12 = &a1[v9];
  uint64_t v13 = &a2[v9];
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for ActivityRingsCard();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  v12[v15[6]] = v13[v15[6]];
  v12[v15[7]] = v13[v15[7]];
  v12[v15[8]] = v13[v15[8]];
  *(void *)&v12[v15[9]] = *(void *)&v13[v15[9]];
  uint64_t v19 = v15[10];
  id v20 = &v12[v19];
  uint64_t v21 = &v13[v19];
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1000AFA94((uint64_t *)&unk_10095B890);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(void *)&v12[v15[11]] = *(void *)&v13[v15[11]];
  v12[v15[12]] = v13[v15[12]];
  uint64_t v25 = a3[7];
  uint64_t v26 = a3[8];
  unint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  long long v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  *((void *)v27 + 4) = *((void *)v28 + 4);
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *sub_100517A2C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *uint64_t v9 = *v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  *((void *)v9 + 2) = *((void *)v10 + 2);
  swift_release();
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  uint64_t v11 = a3[6];
  uint64_t v45 = a1;
  char v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for ActivityRingsCard();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  char v19 = v18[16];
  uint64_t v20 = *(void *)v17;
  uint64_t v21 = *((void *)v17 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  char v22 = v17[16];
  v17[16] = v19;
  sub_1000917F8(v20, v21, v22);
  v12[v15[6]] = v13[v15[6]];
  v12[v15[7]] = v13[v15[7]];
  v12[v15[8]] = v13[v15[8]];
  uint64_t v23 = v15[9];
  uint64_t v24 = *(void **)&v12[v23];
  *(void *)&v12[v23] = *(void *)&v13[v23];

  uint64_t v25 = v15[10];
  uint64_t v26 = &v12[v25];
  unint64_t v27 = &v13[v25];
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
LABEL_10:
    uint64_t v33 = sub_1000AFA94((uint64_t *)&unk_10095B890);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_11:
  uint64_t v34 = v15[11];
  uint64_t v35 = *(void **)&v12[v34];
  *(void *)&v12[v34] = *(void *)&v13[v34];

  v12[v15[12]] = v13[v15[12]];
  uint64_t v36 = a3[7];
  unsigned int v37 = &v45[v36];
  if (*(void *)&v45[v36 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v45[v36]);
  }
  long long v38 = *(_OWORD *)&v47[v36 + 16];
  *(_OWORD *)unsigned int v37 = *(_OWORD *)&v47[v36];
  *((_OWORD *)v37 + 1) = v38;
  *((void *)v37 + 4) = *(void *)&v47[v36 + 32];
  uint64_t v39 = v46[8];
  uint64_t v40 = &v45[v39];
  long long v41 = &v47[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = v43;
  *((void *)v40 + 1) = v42;
  swift_release();
  *(void *)&v45[v46[9]] = *(void *)&v47[v46[9]];
  return v45;
}

uint64_t sub_100517DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for ActivityRingsCard();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100517EE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for ActivityRingsCard();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_100517FFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v23[-v7];
  sub_100092088((uint64_t)&v23[-v7]);
  uint64_t v9 = type metadata accessor for ActivityRingsCardView();
  uint64_t v10 = *(void *)(a1 + *(int *)(v9 + 36));
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
  int v11 = (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 88))(v6, v2);
  if (v11 == enum case for DynamicTypeSize.xSmall(_:)
    || v11 == enum case for DynamicTypeSize.small(_:)
    || v11 == enum case for DynamicTypeSize.medium(_:)
    || v11 == enum case for DynamicTypeSize.large(_:))
  {
    char v15 = 0;
  }
  else
  {
    if (v11 == enum case for DynamicTypeSize.xLarge(_:)
      || v11 == enum case for DynamicTypeSize.xxLarge(_:)
      || v11 == enum case for DynamicTypeSize.xxxLarge(_:))
    {
      goto LABEL_26;
    }
    char v15 = 2;
    if (v11 != enum case for DynamicTypeSize.accessibility1(_:)
      && v11 != enum case for DynamicTypeSize.accessibility2(_:)
      && v11 != enum case for DynamicTypeSize.accessibility3(_:)
      && v11 != enum case for DynamicTypeSize.accessibility4(_:)
      && v11 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
LABEL_26:
      char v15 = 1;
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  uint64_t v18 = (char *)(a1 + *(int *)(v9 + 20));
  char v19 = *v18;
  uint64_t v20 = *((void *)v18 + 1);
  uint64_t v21 = *((void *)v18 + 2);
  char v25 = v19;
  uint64_t v26 = v20;
  uint64_t v27 = v21;
  v23[8] = v15;
  uint64_t v24 = v10;
  sub_1000AFA94(&qword_1009603F0);
  return State.wrappedValue.setter();
}

void sub_100518298(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v141 = sub_1000AFA94(&qword_100960480);
  uint64_t v140 = *(void *)(v141 - 8);
  uint64_t v4 = __chkstk_darwin(v141);
  v131 = &v113[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v130 = &v113[-v6];
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v113[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v143 = type metadata accessor for Date();
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v132 = &v113[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1000AFA94(&qword_100960488);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  id v139 = &v113[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  char v15 = &v113[-v14];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v16 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  static Font.body.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v137 = Text.font(_:)();
  uint64_t v136 = v21;
  int v134 = v22;
  uint64_t v138 = v23;
  swift_release();
  sub_1000A06C0(v16, v18, v20);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  int v25 = static Edge.Set.top.getter();
  uint64_t v26 = type metadata accessor for ActivityRingsCardView();
  uint64_t v27 = a1;
  uint64_t v28 = a1 + *(int *)(v26 + 20);
  uint64_t v29 = *(void *)(v28 + 8);
  uint64_t v30 = *(void *)(v28 + 16);
  LOBYTE(v144) = *(unsigned char *)v28;
  uint64_t v145 = v29;
  uint64_t v146 = v30;
  uint64_t v31 = sub_1000AFA94(&qword_1009603F0);
  State.wrappedValue.getter();
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = *(int *)(v26 + 24);
  uint64_t v41 = v142;
  uint64_t v42 = v27 + v40 + *(int *)(type metadata accessor for ActivityRingsCard() + 40);
  uint64_t v43 = v143;
  sub_1000AEF2C(v42, (uint64_t)v9, (uint64_t *)&unk_10095B890);
  int v44 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v41 + 48))(v9, 1, v43);
  uint64_t v135 = KeyPath;
  int v133 = v25;
  if (v44 == 1)
  {
    sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_10095B890);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v140 + 56))(v15, 1, 1, v141);
    uint64_t v45 = (uint64_t)v139;
    uint64_t v46 = v138;
    uint64_t v47 = v137;
    uint64_t v48 = v136;
LABEL_7:
    char v111 = v134 & 1;
    sub_1000AEF2C((uint64_t)v15, v45, &qword_100960488);
    *(void *)a2 = v47;
    *(void *)(a2 + 8) = v48;
    *(unsigned char *)(a2 + 16) = v111;
    *(void *)(a2 + 24) = v46;
    *(void *)(a2 + 32) = 0x3FF0000000000000;
    *(void *)(a2 + 40) = v135;
    *(void *)(a2 + 48) = 4;
    *(unsigned char *)(a2 + 56) = 0;
    *(unsigned char *)(a2 + 64) = v133;
    *(void *)(a2 + 72) = v33;
    *(void *)(a2 + 80) = v35;
    *(void *)(a2 + 88) = v37;
    *(void *)(a2 + 96) = v39;
    *(unsigned char *)(a2 + 104) = 0;
    uint64_t v112 = sub_1000AFA94(&qword_100960490);
    sub_1000AEF2C(v45, a2 + *(int *)(v112 + 48), &qword_100960488);
    sub_1000A1750(v47, v48, v111);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10008DB18((uint64_t)v15, &qword_100960488);
    sub_10008DB18(v45, &qword_100960488);
    sub_1000A06C0(v47, v48, v111);
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v128 = v31;
  uint64_t v118 = v39;
  uint64_t v119 = v37;
  uint64_t v120 = v35;
  uint64_t v121 = v33;
  id v122 = v15;
  uint64_t v49 = v132;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v41 + 32))(v132, v9, v43);
  id v127 = self;
  id v50 = [v127 mainBundle];
  unint64_t v126 = 0x80000001007C40C0;
  NSString v51 = String._bridgeToObjectiveC()();
  id v52 = [v50 localizedStringForKey:v51 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v125 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v53 = swift_allocObject();
  long long v124 = xmmword_1007509E0;
  *(_OWORD *)(v53 + 16) = xmmword_1007509E0;
  uint64_t v54 = v49;
  if (qword_10094ADD0 != -1) {
    swift_once();
  }
  id v55 = (void *)qword_100960330;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v57 = [v55 stringFromDate:isa];

  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v60 = v59;

  *(void *)(v53 + 56) = &type metadata for String;
  unint64_t v116 = sub_1000AA64C();
  *(void *)(v53 + 64) = v116;
  *(void *)(v53 + 32) = v58;
  *(void *)(v53 + 40) = v60;
  uint64_t v61 = String.init(format:_:)();
  uint64_t v63 = v62;
  swift_bridgeObjectRelease();
  uint64_t v144 = v61;
  uint64_t v145 = v63;
  unint64_t v117 = sub_1000A06D0();
  uint64_t v64 = Text.init<A>(_:)();
  uint64_t v66 = v65;
  LOBYTE(v58) = v67 & 1;
  static Font.footnote.getter();
  uint64_t v68 = Text.font(_:)();
  uint64_t v70 = v69;
  LODWORD(v123) = v71;
  uint64_t v129 = v72;
  swift_release();
  sub_1000A06C0(v64, v66, v58);
  swift_bridgeObjectRelease();
  uint64_t v73 = swift_getKeyPath();
  char v74 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  uint64_t v82 = v81;
  LOBYTE(v64) = static Edge.Set.bottom.getter();
  uint64_t v83 = *(void *)(v28 + 8);
  uint64_t v84 = *(void *)(v28 + 16);
  LOBYTE(v144) = *(unsigned char *)v28;
  uint64_t v145 = v83;
  uint64_t v146 = v84;
  State.wrappedValue.getter();
  EdgeInsets.init(_all:)();
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  int v114 = v123 & 1;
  char v168 = v123 & 1;
  char v167 = 0;
  char v166 = 0;
  char v165 = 0;
  int v93 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v128 = v68;
  uint64_t v144 = v68;
  uint64_t v123 = v70;
  uint64_t v145 = v70;
  LOBYTE(v146) = v168;
  uint64_t v147 = v129;
  char v94 = v54;
  uint64_t v148 = 0x3FF0000000000000;
  uint64_t v115 = v73;
  uint64_t v149 = v73;
  uint64_t v150 = 4;
  char v151 = v167;
  char v152 = v74;
  uint64_t v153 = v76;
  uint64_t v154 = v78;
  uint64_t v155 = v80;
  uint64_t v156 = v82;
  char v157 = v166;
  char v158 = v64;
  uint64_t v159 = v86;
  uint64_t v160 = v88;
  uint64_t v161 = v90;
  uint64_t v162 = v92;
  char v163 = v165;
  int v164 = v93;
  id v95 = [v127 mainBundle];
  NSString v96 = String._bridgeToObjectiveC()();
  id v97 = [v95 localizedStringForKey:v96 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = v124;
  Class v99 = Date._bridgeToObjectiveC()().super.isa;
  NSString v100 = String._bridgeToObjectiveC()();
  id v101 = (id)AXDateStringForFormat();

  if (v101)
  {
    uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v104 = v103;

    unint64_t v105 = v116;
    *(void *)(v98 + 56) = &type metadata for String;
    *(void *)(v98 + 64) = v105;
    *(void *)(v98 + 32) = v102;
    *(void *)(v98 + 40) = v104;
    uint64_t v106 = String.init(format:_:)();
    uint64_t v108 = v107;
    swift_bridgeObjectRelease();
    uint64_t v169 = v106;
    uint64_t v170 = v108;
    sub_1000AFA94(&qword_100960498);
    sub_100518F28();
    uint64_t v109 = (uint64_t)v131;
    View.accessibilityLabel<A>(_:)();
    swift_bridgeObjectRelease();
    sub_1000A06C0(v128, v123, v114);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v142 + 8))(v94, v143);
    v110 = v130;
    sub_1000AEEC8(v109, (uint64_t)v130, &qword_100960480);
    char v15 = v122;
    sub_1000AEEC8((uint64_t)v110, (uint64_t)v122, &qword_100960480);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v140 + 56))(v15, 0, 1, v141);
    uint64_t v45 = (uint64_t)v139;
    uint64_t v46 = v138;
    uint64_t v47 = v137;
    uint64_t v48 = v136;
    uint64_t v33 = v121;
    uint64_t v35 = v120;
    uint64_t v37 = v119;
    uint64_t v39 = v118;
    goto LABEL_7;
  }
  __break(1u);
}

void sub_100518E90()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  qword_100960330 = (uint64_t)v0;
}

uint64_t sub_100518F08()
{
  return sub_1000E7D08(sub_100517FFC);
}

unint64_t sub_100518F28()
{
  unint64_t result = qword_1009604A0;
  if (!qword_1009604A0)
  {
    sub_1000A1370(&qword_100960498);
    sub_100518FEC(&qword_1009604A8, &qword_1009604B0, (void (*)(void))sub_10051906C);
    sub_1000A132C(&qword_10094D9C8, &qword_10094D9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009604A0);
  }
  return result;
}

uint64_t sub_100518FEC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10051906C()
{
  return sub_100518FEC(&qword_1009604B8, &qword_1009604C0, (void (*)(void))sub_100519094);
}

unint64_t sub_100519094()
{
  unint64_t result = qword_1009604C8;
  if (!qword_1009604C8)
  {
    sub_1000A1370(&qword_1009604D0);
    sub_100519134();
    sub_1000A132C(&qword_100952828, &qword_100952830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009604C8);
  }
  return result;
}

unint64_t sub_100519134()
{
  unint64_t result = qword_1009604D8;
  if (!qword_1009604D8)
  {
    sub_1000A1370(&qword_1009604E0);
    sub_1000A132C(&qword_100951698, &qword_1009516A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009604D8);
  }
  return result;
}

uint64_t sub_1005191E0()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_1005192B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v50 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_1009606A0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1;
  uint64_t v51 = sub_1000AFA94(&qword_10094E800);
  __chkstk_darwin(v51);
  uint64_t v55 = (uint64_t)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v46 = (uint64_t)v44 - v17;
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18) {
    return _swiftEmptyArrayStorage;
  }
  v44[1] = v2;
  uint64_t v45 = v16;
  char v19 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  id v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  swift_bridgeObjectRetain();
  v44[0] = v13;
  char v20 = (uint64_t *)(v13 + 40);
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v54 = v4;
  uint64_t v22 = v51;
  uint64_t v48 = v19;
  while (1)
  {
    id v57 = v21;
    uint64_t v23 = *v20;
    id v24 = (id)*(v20 - 1);
    id v25 = sub_100429E54(v24);
    if (!v25)
    {
      uint64_t v35 = 1;
      goto LABEL_11;
    }
    if (v23 < 0) {
      goto LABEL_22;
    }
    id v26 = v25;
    uint64_t v56 = v18;
    uint64_t v27 = v9;
    [v25 setEarnedInstanceCount:v23, v44[0]];
    id v28 = [v24 completedDate];
    if (!v28) {
      break;
    }
    uint64_t v29 = v28;
    uint64_t v30 = v50;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v31 = *v48;
    uint64_t v32 = v30;
    uint64_t v9 = v27;
    (*v48)(v27, v32, v4);
    (*v49)(v27, 0, 1, v4);
    if ((*v47)(v27, 1, v4) == 1) {
      goto LABEL_21;
    }
    uint64_t v33 = v4;
    uint64_t v22 = v51;
    uint64_t v34 = *(int *)(v51 + 48);
    v31(v12, v9, v33);
    uint64_t v35 = 0;
    *(void *)&v12[v34] = v26;
    uint64_t v18 = v56;
LABEL_11:
    (*v53)(v12, v35, 1, v22);

    BOOL v36 = (*v52)(v12, 1, v22) == 1;
    uint64_t v21 = v57;
    if (v36)
    {
      sub_10008DB18((uint64_t)v12, &qword_1009606A0);
      uint64_t v4 = v54;
    }
    else
    {
      uint64_t v37 = v46;
      sub_1000AEEC8((uint64_t)v12, v46, &qword_10094E800);
      sub_1000AEEC8(v37, v55, &qword_10094E800);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v4 = v54;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v21 = (void *)sub_1001E8474(0, v21[2] + 1, 1, (unint64_t)v21);
      }
      unint64_t v40 = v21[2];
      unint64_t v39 = v21[3];
      uint64_t v41 = v45;
      if (v40 >= v39 >> 1)
      {
        uint64_t v42 = sub_1001E8474(v39 > 1, v40 + 1, 1, (unint64_t)v21);
        uint64_t v41 = v45;
        uint64_t v21 = (void *)v42;
      }
      v21[2] = v40 + 1;
      sub_1000AEEC8(v55, (uint64_t)v21+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v40, &qword_10094E800);
    }
    v20 += 2;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      return v21;
    }
  }
  (*v49)(v9, 1, 1, v4);
LABEL_21:
  __break(1u);
LABEL_22:
  unint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1005197D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = sub_1000AFA94(&qword_10094E800);
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    do
    {
      id v7 = *(id *)(v5 + *(int *)(v4 + 48));
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v5 += v6;
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

double sub_1005198F8@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 64) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = v12;
  return result;
}

void *sub_1005199B4(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15)
{
  uint64_t v16 = v15;
  id v63 = a8;
  uint64_t v53 = a7;
  id v67 = a15;
  id v66 = a14;
  id v65 = a13;
  id v64 = a12;
  id v55 = a9;
  uint64_t v59 = *v15;
  uint64_t v23 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v23 - 8);
  uint64_t v54 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(void *)((char *)v15
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementBadgeImageFactory) = a1;
  *(void *)((char *)v15
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementsDataProvider) = a2;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator) = a3;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_awardsDataProvider) = a4;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fitnessAppContext) = a5;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_fiuiFormattingManager) = a6;
  *(void *)((char *)v15
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendListSectionManager) = v63;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendManager) = a9;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_healthStore) = a10;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_navigationCoordinator) = a11;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_wheelchairUseCache) = v64;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutDataProvider) = v65;
  *(void *)((char *)v15
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutFormattingManager) = v66;
  *(void *)((char *)v15 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_pauseRingsCoordinator) = v67;
  id v57 = objc_allocWithZone((Class)AAUIAchievementResourceProvider);
  id v62 = a1;
  id v25 = a2;
  uint64_t v26 = a3;
  swift_retain();
  id v61 = a4;
  id v60 = a5;
  id v27 = a6;
  id v58 = v27;
  id v63 = v63;
  id v28 = v55;
  id v29 = a10;
  uint64_t v56 = a11;
  swift_retain();
  id v30 = v64;
  id v64 = v30;
  id v65 = v65;
  id v66 = v66;
  id v67 = v67;
  id v31 = [v57 init];
  *(void *)((char *)v16
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementResourceProvider) = v31;
  uint64_t v32 = v53;
  *(void *)((char *)v16
            + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementLocalizationProvider) = sub_10051D8F4(v53, v27, v30);
  swift_retain();
  id v33 = v28;
  id v57 = v33;
  id v34 = v29;
  swift_retain();
  id v35 = v32;
  id v55 = v34;
  sub_10059A8EC(v26, (uint64_t)_swiftEmptyArrayStorage, v35, 0, v33, a11, (uint64_t)v73);
  swift_release();

  swift_release();
  swift_beginAccess();
  long long v70 = v73[2];
  long long v71 = v73[3];
  v72[0] = *(_OWORD *)v74;
  *(_OWORD *)((char *)v72 + 9) = *(_OWORD *)&v74[9];
  long long aBlock = v73[0];
  long long v69 = v73[1];
  Published.init(initialValue:)();
  swift_endAccess();
  uint64_t v36 = type metadata accessor for TaskPriority();
  uint64_t v37 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v54, 1, 1, v36);
  type metadata accessor for MainActor();
  id v38 = v25;
  id v39 = v35;
  swift_retain();
  uint64_t v40 = static MainActor.shared.getter();
  uint64_t v41 = (void *)swift_allocObject();
  v41[2] = v40;
  void v41[3] = &protocol witness table for MainActor;
  v41[4] = v39;
  v41[5] = v38;
  uint64_t v42 = v59;
  v41[6] = v16;
  v41[7] = v42;
  sub_1000713D0(v37, (uint64_t)&unk_1009606B8, (uint64_t)v41);
  swift_release();
  id v43 = [self defaultCenter];
  int v44 = (void *)kASFriendListChangedNotificationKey;
  uint64_t v45 = self;
  id v46 = v44;
  id v47 = [v45 mainQueue];
  uint64_t v48 = swift_allocObject();
  swift_weakInit();
  *(void *)&long long v70 = sub_10051E3CC;
  *((void *)&v70 + 1) = v48;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v69 = sub_1000711BC;
  *((void *)&v69 + 1) = &unk_1008CCF38;
  uint64_t v49 = _Block_copy(&aBlock);
  swift_release();
  id v50 = [v43 addObserverForName:v46 object:0 queue:v47 usingBlock:v49];

  swift_release();
  swift_release();

  _Block_release(v49);
  swift_unknownObjectRelease();

  return v16;
}

uint64_t sub_10051A0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a4;
  v6[17] = a6;
  v6[18] = type metadata accessor for MainActor();
  v6[19] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[20] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_10051A188;
  v9[3] = a4;
  v9[4] = a5;
  return _swift_task_switch(sub_10051DEB8, 0, 0);
}

uint64_t sub_10051A188(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(v3 + 112) = v1;
  *(void *)(v3 + 120) = a1;
  uint64_t v4 = *(void *)(v2 + 136);
  swift_task_dealloc();
  return _swift_task_switch(sub_10051A29C, v4, 0);
}

uint64_t sub_10051A29C()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = *(void *)(v0[17] + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
  swift_retain();
  if ([v1 isMe]) {
    char v3 = [*(id *)(v0[17]+ OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_pauseRingsCoordinator) isPaused];
  }
  else {
    char v3 = 0;
  }
  uint64_t v5 = (void *)v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_healthStore);
  uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_navigationCoordinator);
  id v9 = *(id *)(v4 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendManager);
  id v10 = v7;
  swift_retain();
  id v11 = v5;
  swift_bridgeObjectRetain();
  sub_10059A8EC(v2, v6, v11, v3, v9, v8, (uint64_t)(v0 + 2));
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10051A430, v13, v12);
}

uint64_t sub_10051A430()
{
  swift_release();
  sub_10051AA58(v0 + 16);
  sub_10051E1C0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10051A4A8()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_1000713D0((uint64_t)v2, (uint64_t)&unk_1009606C8, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_10051A5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 112) = a4;
  sub_1000AFA94((uint64_t *)&unk_1009555F0);
  *(void *)(v4 + 120) = swift_task_alloc();
  return _swift_task_switch(sub_10051A654, 0, 0);
}

uint64_t sub_10051A654()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 128) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10051A6E8, v2, v1);
}

uint64_t sub_10051A6E8()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 56);
  *(void *)(v0 + 152) = *(void *)(v0 + 32);
  *(void *)(v0 + 160) = v1;
  *(void *)(v0 + 168) = *(void *)(v0 + 72);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 80);
  *(void *)(v0 + 192) = *(void *)(v0 + 96);
  return _swift_task_switch(sub_10051A7D0, 0, 0);
}

uint64_t sub_10051A7D0()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = (void *)v0[21];
  uint64_t v3 = (void *)v0[20];
  uint64_t v4 = (void *)v0[18];
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v5 = [v3 UUID];
  if (v5)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 1;
  }
  uint64_t v7 = v0[15];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, v6, 1, v8);
  id v9 = (void *)swift_task_alloc();
  v0[25] = v9;
  *id v9 = v0;
  v9[1] = sub_10051A938;
  uint64_t v10 = v0[15];
  return sub_10051ACC0(v10);
}

uint64_t sub_10051A938()
{
  uint64_t v1 = *(void *)(*v0 + 120);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_10008DB18(v1, (uint64_t *)&unk_1009555F0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_10051AA58(uint64_t a1)
{
  os_log_type_t v2 = static os_log_type_t.default.getter();
  uint64_t v3 = (void *)HKLogActivity;
  os_log_type_t v4 = v2;
  if (os_log_type_enabled(HKLogActivity, v2))
  {
    sub_10034EB78(a1);
    sub_10034EB78(a1);
    log = v3;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(void *)&v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = _typeName(_:qualified:)();
    sub_10008F1F4(v7, v8, (uint64_t *)v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2112;
    uint64_t v14 = *(void **)(a1 + 40);
    id v9 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v14;
    sub_10051E1C0(a1);
    sub_10051E1C0(a1);
    _os_log_impl((void *)&_mh_execute_header, log, v4, "%s updating friend %@", (uint8_t *)v5, 0x16u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  long long v10 = *(_OWORD *)(a1 + 48);
  v15[2] = *(_OWORD *)(a1 + 32);
  v15[3] = v10;
  v16[0] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)(a1 + 73);
  long long v11 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v11;
  sub_10034EB78(a1);
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_10051ACC0(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  sub_1000AFA94((uint64_t *)&unk_1009555F0);
  v2[16] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_10051ADB0, v1, 0);
}

uint64_t sub_10051ADB0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  sub_1000AEF2C(v0[14], v3, (uint64_t *)&unk_1009555F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10008DB18(v0[16], (uint64_t *)&unk_1009555F0);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    long long v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  uint64_t v4 = v0[15];
  (*(void (**)(void, void, void))(v0[18] + 32))(v0[19], v0[16], v0[17]);
  uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendListSectionManager);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v7 = [v5 friendWithUUID:isa];
  v0[20] = v7;

  if (!v7)
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(v0[15]
                 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementsDataProvider);
  id v9 = (void *)swift_task_alloc();
  v0[21] = v9;
  *id v9 = v0;
  v9[1] = sub_10051AF84;
  v9[3] = v7;
  v9[4] = v8;
  return _swift_task_switch(sub_10051DEB8, 0, 0);
}

uint64_t sub_10051AF84(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 176) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10051B09C, v2, 0);
}

uint64_t sub_10051B09C()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = *(void *)(v0[15] + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_alertCoordinator);
  swift_retain();
  if ([v1 isMe]) {
    char v3 = [*(id *)(v0[15]+ OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_pauseRingsCoordinator) isPaused];
  }
  else {
    char v3 = 0;
  }
  uint64_t v4 = v0[22];
  uint64_t v5 = (void *)v0[20];
  uint64_t v6 = v0[15];
  id v7 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_healthStore);
  uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_navigationCoordinator);
  id v9 = *(id *)(v6 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendManager);
  id v10 = v7;
  swift_retain();
  id v11 = v5;
  swift_bridgeObjectRetain();
  sub_10059A8EC(v2, v4, v11, v3, v9, v8, (uint64_t)(v0 + 2));
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  type metadata accessor for MainActor();
  v0[23] = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10051B244, v13, v12);
}

uint64_t sub_10051B244()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  sub_10051AA58(v0 + 16);
  return _swift_task_switch(sub_10051B2C0, v1, 0);
}

uint64_t sub_10051B2C0()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = (void *)v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  sub_10051E1C0((uint64_t)(v0 + 2));

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10051B360(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for Date();
  uint64_t v33 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  id v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094E8A8);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = type metadata accessor for DateComponents();
  uint64_t v16 = *(void *)(v15 - 8);
  *(void *)&double v17 = __chkstk_darwin(v15).n128_u64[0];
  char v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = [*a1 relevantEarnedInstance:v17];
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_7:
    uint64_t v23 = &qword_10094E8A8;
    uint64_t v24 = (uint64_t)v14;
    goto LABEL_8;
  }
  uint64_t v21 = v20;
  uint64_t v30 = a3;
  id v22 = [v20 earnedDateComponents:a3];

  if (v22)
  {
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v11, 1, 1, v15);
  }
  sub_1000AEEC8((uint64_t)v11, (uint64_t)v14, &qword_10094E8A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  Calendar.date(from:)();
  uint64_t v27 = v33;
  uint64_t v28 = v34;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v7, 1, v34) != 1)
  {
    id v29 = v31;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v31, v7, v28);
    char v25 = Date.isAfterOrEqualTo(date:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v28);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    return v25 & 1;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  uint64_t v23 = (uint64_t *)&unk_10095B890;
  uint64_t v24 = (uint64_t)v7;
LABEL_8:
  sub_10008DB18(v24, v23);
  char v25 = 0;
  return v25 & 1;
}

uint64_t sub_10051B758()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t *v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.notOnQueue(_:), v0);
  char v4 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    uint64_t v5 = sub_100221368();
    uint64_t v6 = sub_1005192B0(v5);
    swift_bridgeObjectRelease();
    uint64_t v10 = v6;
    swift_bridgeObjectRetain();
    sub_10051C450(&v10);
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1005197D8((uint64_t)v10);
    swift_release();
    uint64_t v10 = v7;
    sub_1000AFA94(&qword_100960698);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

void sub_10051B90C(uint64_t a1, uint64_t a2)
{
  uint64_t v90 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_1009555A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v82 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v85 = (char *)&v78 - v6;
  uint64_t v7 = type metadata accessor for AAUIAwardsDataProviderSection();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v86 = v7;
  uint64_t v87 = v8;
  __chkstk_darwin(v7);
  uint64_t v81 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v84 = (char *)&v78 - v11;
  uint64_t v12 = sub_1000AFA94(&qword_10094E800);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v91 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = __chkstk_darwin(v19);
  id v22 = (char *)&v78 - v21;
  uint64_t v23 = *(int *)(v13 + 56);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v24(v15, a1, v16, v20);
  id v89 = *(id *)(a1 + v23);
  uint64_t v88 = v17;
  char v25 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v25(v22, v15, v16);
  uint64_t v26 = *(int *)(v13 + 56);
  uint64_t v27 = v90;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v15, v90, v16);
  uint64_t v28 = v91;
  id v29 = *(void **)(v27 + v26);
  v25(v91, v15, v16);
  sub_10033B6D8();
  id v30 = v89;
  id v31 = v29;
  uint64_t v32 = v22;
  id v33 = v31;
  uint64_t v90 = v16;
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    static Date.> infix(_:_:)();

    id v39 = *(void (**)(char *, uint64_t))(v88 + 8);
    uint64_t v40 = v90;
    v39(v28, v90);
    v39(v32, v40);
    return;
  }
  id v89 = v33;
  id v83 = v30;
  id v34 = [v30 section];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v35 = (uint64_t)v85;
  AAUIAwardsDataProviderSection.init(rawValue:)();
  uint64_t v36 = v86;
  uint64_t v37 = v87;
  id v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  if (v38(v35, 1, v86) == 1)
  {
    sub_10008DB18(v35, &qword_1009555A0);
    goto LABEL_10;
  }
  uint64_t v80 = v32;
  uint64_t v41 = (uint64_t)v84;
  uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
  v79(v84, v35, v36);
  uint64_t v42 = static AAUIAwardsDataProviderSection.allCases.getter();
  uint64_t v85 = (char *)sub_100538CDC(v41, v42);
  char v44 = v43;
  swift_bridgeObjectRelease();
  if (v44)
  {
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v36);
    goto LABEL_9;
  }
  id v45 = [v89 section];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v46 = (uint64_t)v82;
  AAUIAwardsDataProviderSection.init(rawValue:)();
  if (v38(v46, 1, v36) == 1)
  {
    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v36);
    sub_10008DB18(v46, &qword_1009555A0);
LABEL_9:
    uint64_t v32 = v80;
    goto LABEL_10;
  }
  uint64_t v70 = (uint64_t)v81;
  v79(v81, v46, v36);
  uint64_t v71 = static AAUIAwardsDataProviderSection.allCases.getter();
  uint64_t v72 = sub_100538CDC(v70, v71);
  char v74 = v73;
  swift_bridgeObjectRelease();
  uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
  v75(v70, v36);
  v75((uint64_t)v84, v36);
  uint64_t v32 = v80;
  if ((v74 & 1) == 0 && v85 != (char *)v72)
  {

    uint64_t v76 = *(void (**)(char *, uint64_t))(v88 + 8);
    uint64_t v77 = v90;
    v76(v28, v90);
    v76(v32, v77);
    return;
  }
LABEL_10:
  id v47 = v83;
  id v48 = [v83 template];
  id v49 = [v48 displayOrder];

  id v50 = v89;
  id v51 = [v89 template];
  id v52 = [v51 displayOrder];

  id v53 = [v47 template];
  uint64_t v54 = v53;
  if (v49 != v52)
  {
    [v53 displayOrder];

    id v64 = [v50 template];
    [v64 displayOrder];

    id v65 = *(void (**)(char *, uint64_t))(v88 + 8);
    uint64_t v66 = v90;
    v65(v91, v90);
    v65(v32, v66);
    return;
  }
  id v55 = [v53 uniqueName];

  if (!v55)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v58 = v57;

  id v59 = [v89 template];
  id v60 = [v59 uniqueName];

  if (!v60)
  {
LABEL_23:
    __break(1u);
    return;
  }
  uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v63 = v62;

  if (v56 != v61 || v58 != v63) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v67 = v88;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v68 = *(void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v69 = v90;
  v68(v91, v90);
  v68(v32, v69);
}

uint64_t sub_10051C0F8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider__viewModel;
  uint64_t v2 = sub_1000AFA94(&qword_1009606A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementBadgeImageFactory));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementLocalizationProvider));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementResourceProvider));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_achievementsDataProvider));
  swift_release();

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_friendListSectionManager));

  swift_release();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC10FitnessApp39ActivitySharingFriendDetailDataProvider_workoutFormattingManager));

  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_10051C268()
{
  sub_10051C0F8();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10051C294()
{
  return type metadata accessor for ActivitySharingFriendDetailDataProvider();
}

uint64_t type metadata accessor for ActivitySharingFriendDetailDataProvider()
{
  uint64_t result = qword_100960520;
  if (!qword_100960520) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10051C2E8()
{
  sub_10051C3B8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10051C3B8()
{
  if (!qword_100960538)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100960538);
    }
  }
}

uint64_t sub_10051C410@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ActivitySharingFriendDetailDataProvider();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_10051C450(void **a1)
{
  uint64_t v2 = *(void *)(sub_1000AFA94(&qword_10094E800) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1001EF030(v3);
  }
  Swift::Int v4 = v3[2];
  v5[0] = (Swift::Int)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_10051C4FC(v5);
  *a1 = v3;
}

void sub_10051C4FC(Swift::Int *a1)
{
  Swift::Int v2 = v1;
  uint64_t v150 = sub_1000AFA94(&qword_10094E800);
  uint64_t v158 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v151 = (uint64_t)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v156 = (uint64_t)&v138 - v6;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v138 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v138 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v138 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v138 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v138 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v138 - v23;
  uint64_t v159 = a1;
  Swift::Int v25 = a1[1];
  Swift::Int v144 = _minimumMergeRunLength(_:)(v25);
  if (v144 >= v25)
  {
    if (v25 < 0) {
      goto LABEL_149;
    }
    if (v25) {
      sub_10051D0A4(0, v25, 1, v159);
    }
    return;
  }
  if (v25 >= 0) {
    uint64_t v26 = v25;
  }
  else {
    uint64_t v26 = v25 + 1;
  }
  if (v25 < -1) {
    goto LABEL_158;
  }
  uint64_t v153 = v9;
  if (v25 < 2)
  {
    uint64_t v28 = _swiftEmptyArrayStorage;
    unint64_t v157 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
    if (v25 != 1)
    {
      unint64_t v67 = _swiftEmptyArrayStorage[2];
      id v30 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_112;
    }
    uint64_t v140 = v24;
    uint64_t v141 = v21;
    uint64_t v146 = v18;
    uint64_t v147 = v15;
    uint64_t v149 = v12;
  }
  else
  {
    uint64_t v140 = v24;
    uint64_t v141 = v21;
    uint64_t v146 = v18;
    uint64_t v147 = v15;
    uint64_t v149 = v12;
    uint64_t v27 = v26 >> 1;
    uint64_t v28 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    v28[2] = v27;
    unint64_t v157 = (unint64_t)v28
         + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
  }
  uint64_t v142 = v28;
  Swift::Int v29 = 0;
  id v30 = (char *)_swiftEmptyArrayStorage;
  id v31 = &qword_10094E800;
  Swift::Int v32 = v144;
  do
  {
    uint64_t v33 = v29;
    Swift::Int v34 = v25;
    uint64_t v35 = v33 + 1;
    Swift::Int v154 = v34;
    if (v33 + 1 >= v34)
    {
      Swift::Int v43 = v33 + 1;
      uint64_t v52 = (uint64_t)v153;
      goto LABEL_23;
    }
    Swift::Int v36 = *v159;
    uint64_t v37 = *(void *)(v158 + 72);
    uint64_t v38 = (uint64_t)v140;
    sub_1000AEF2C(*v159 + v37 * v35, (uint64_t)v140, v31);
    Swift::Int v143 = v36;
    uint64_t v155 = v37;
    uint64_t v39 = v36 + v37 * v33;
    uint64_t v40 = v33;
    uint64_t v41 = (uint64_t)v141;
    sub_1000AEF2C(v39, (uint64_t)v141, v31);
    sub_10051B90C(v38, v41);
    LODWORD(v152) = v42;
    if (v2)
    {
      sub_10008DB18(v41, &qword_10094E800);
      sub_10008DB18(v38, &qword_10094E800);
      goto LABEL_126;
    }
    sub_10008DB18(v41, v31);
    sub_10008DB18(v38, v31);
    Swift::Int v43 = v40 + 2;
    uint64_t v33 = v40;
    if (v40 + 2 >= v154) {
      goto LABEL_26;
    }
    uint64_t v148 = v155 * v35;
    Swift::Int v44 = v143;
    uint64_t v145 = v155 * v43;
    do
    {
      Swift::Int v45 = v43;
      uint64_t v46 = (uint64_t)v146;
      sub_1000AEF2C(v44 + v145, (uint64_t)v146, v31);
      id v47 = v31;
      uint64_t v48 = (uint64_t)v147;
      sub_1000AEF2C(v44 + v148, (uint64_t)v147, v47);
      sub_10051B90C(v46, v48);
      int v50 = v49;
      sub_10008DB18(v48, v47);
      sub_10008DB18(v46, v47);
      id v31 = v47;
      if ((v152 ^ v50))
      {
        Swift::Int v43 = v45;
        Swift::Int v2 = 0;
        uint64_t v33 = v40;
LABEL_26:
        uint64_t v51 = v154;
        if (v152) {
          goto LABEL_27;
        }
LABEL_21:
        uint64_t v52 = (uint64_t)v153;
LABEL_39:
        Swift::Int v32 = v144;
        if (v43 < v51) {
          goto LABEL_40;
        }
LABEL_48:
        if (v43 < v33) {
          goto LABEL_148;
        }
        goto LABEL_49;
      }
      Swift::Int v43 = v45 + 1;
      v44 += v155;
    }
    while (v154 != v45 + 1);
    uint64_t v51 = v154;
    Swift::Int v43 = v154;
    Swift::Int v2 = 0;
    uint64_t v33 = v40;
    if ((v152 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_27:
    if (v43 < v33) {
      goto LABEL_153;
    }
    uint64_t v52 = (uint64_t)v153;
    if (v33 >= v43) {
      goto LABEL_39;
    }
    id v139 = v30;
    uint64_t v53 = v33;
    uint64_t v54 = 0;
    uint64_t v55 = v155 * (v43 - 1);
    uint64_t v56 = v43 * v155;
    uint64_t v57 = v53;
    uint64_t v145 = v53;
    uint64_t v58 = v53 * v155;
    do
    {
      if (v57 != v43 + v54 - 1)
      {
        Swift::Int v60 = v143;
        if (!v143) {
          goto LABEL_156;
        }
        Swift::Int v61 = v2;
        Swift::Int v62 = v43;
        unint64_t v63 = v143 + v58;
        Swift::Int v152 = v143 + v55;
        sub_1000AEEC8(v143 + v58, v151, &qword_10094E800);
        if (v58 < v55 || v63 >= v60 + v56)
        {
          uint64_t v59 = v152;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v59 = v152;
          if (v58 != v55) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_1000AEEC8(v151, v59, &qword_10094E800);
        uint64_t v52 = (uint64_t)v153;
        Swift::Int v43 = v62;
        Swift::Int v2 = v61;
      }
      ++v57;
      --v54;
      v55 -= v155;
      v56 -= v155;
      v58 += v155;
    }
    while (v57 < v43 + v54);
    id v30 = v139;
    Swift::Int v32 = v144;
    uint64_t v33 = v145;
    id v31 = &qword_10094E800;
LABEL_23:
    uint64_t v51 = v154;
    if (v43 >= v154) {
      goto LABEL_48;
    }
LABEL_40:
    if (__OFSUB__(v43, v33)) {
      goto LABEL_150;
    }
    if (v43 - v33 >= v32) {
      goto LABEL_48;
    }
    if (__OFADD__(v33, v32)) {
      goto LABEL_151;
    }
    if (v33 + v32 >= v51) {
      uint64_t v64 = v51;
    }
    else {
      uint64_t v64 = v33 + v32;
    }
    if (v64 < v33)
    {
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return;
    }
    if (v43 == v64) {
      goto LABEL_48;
    }
    uint64_t v145 = v33;
    id v139 = v30;
    uint64_t v116 = *(void *)(v158 + 72);
    Swift::Int v154 = v2;
    uint64_t v155 = v116 * (v43 - 1);
    uint64_t v148 = v116;
    Swift::Int v117 = v43 * v116;
    Swift::Int v143 = v64;
    do
    {
      uint64_t v118 = 0;
      uint64_t v119 = v145;
      Swift::Int v152 = v43;
      while (1)
      {
        Swift::Int v121 = *v159;
        Swift::Int v122 = v117;
        uint64_t v123 = v117 + v118 + *v159;
        uint64_t v124 = (uint64_t)v149;
        uint64_t v125 = v52;
        sub_1000AEF2C(v123, (uint64_t)v149, v31);
        sub_1000AEF2C(v155 + v118 + v121, v125, v31);
        Swift::Int v126 = v154;
        sub_10051B90C(v124, v125);
        Swift::Int v154 = v126;
        if (v126)
        {
          sub_10008DB18(v125, &qword_10094E800);
          sub_10008DB18(v124, &qword_10094E800);
          swift_bridgeObjectRelease();
          goto LABEL_127;
        }
        char v128 = v127;
        sub_10008DB18(v125, v31);
        sub_10008DB18(v124, v31);
        if ((v128 & 1) == 0) {
          break;
        }
        Swift::Int v129 = *v159;
        if (!*v159) {
          goto LABEL_155;
        }
        Swift::Int v117 = v122;
        uint64_t v130 = v129 + v122 + v118;
        uint64_t v131 = v129 + v155 + v118;
        sub_1000AEEC8(v130, v156, v31);
        swift_arrayInitWithTakeFrontToBack();
        sub_1000AEEC8(v156, v131, v31);
        v118 -= v148;
        ++v119;
        Swift::Int v120 = v152;
        uint64_t v52 = (uint64_t)v153;
        if (v152 == v119) {
          goto LABEL_106;
        }
      }
      Swift::Int v120 = v152;
      Swift::Int v117 = v122;
      uint64_t v52 = v125;
LABEL_106:
      Swift::Int v43 = v120 + 1;
      v155 += v148;
      v117 += v148;
    }
    while (v43 != v143);
    Swift::Int v43 = v143;
    id v30 = v139;
    Swift::Int v2 = v154;
    uint64_t v33 = v145;
    if (v143 < v145) {
      goto LABEL_148;
    }
LABEL_49:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v30 = sub_1001EE868(0, *((void *)v30 + 2) + 1, 1, v30);
    }
    unint64_t v66 = *((void *)v30 + 2);
    unint64_t v65 = *((void *)v30 + 3);
    unint64_t v67 = v66 + 1;
    if (v66 >= v65 >> 1) {
      id v30 = sub_1001EE868((char *)(v65 > 1), v66 + 1, 1, v30);
    }
    *((void *)v30 + 2) = v67;
    uint64_t v68 = v30 + 32;
    uint64_t v69 = &v30[16 * v66 + 32];
    *(void *)uint64_t v69 = v33;
    *((void *)v69 + 1) = v43;
    Swift::Int v152 = v43;
    if (v66)
    {
      while (2)
      {
        unint64_t v70 = v67 - 1;
        if (v67 >= 4)
        {
          uint64_t v75 = &v68[16 * v67];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_133;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_134;
          }
          unint64_t v82 = v67 - 2;
          id v83 = &v68[16 * v67 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_136;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_139;
          }
          if (v87 >= v78)
          {
            unint64_t v105 = &v68[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_143;
            }
            BOOL v98 = v73 < v108;
          }
          else
          {
LABEL_67:
            if (v74) {
              goto LABEL_135;
            }
            unint64_t v82 = v67 - 2;
            uint64_t v88 = &v68[16 * v67 - 32];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v91 = __OFSUB__(v89, v90);
            uint64_t v92 = v89 - v90;
            char v93 = v91;
            if (v91) {
              goto LABEL_138;
            }
            char v94 = &v68[16 * v70];
            uint64_t v96 = *(void *)v94;
            uint64_t v95 = *((void *)v94 + 1);
            BOOL v81 = __OFSUB__(v95, v96);
            uint64_t v97 = v95 - v96;
            if (v81) {
              goto LABEL_141;
            }
            if (__OFADD__(v92, v97)) {
              goto LABEL_142;
            }
            if (v92 + v97 < v73) {
              goto LABEL_79;
            }
            BOOL v98 = v73 < v97;
          }
          if (v98) {
            unint64_t v70 = v82;
          }
        }
        else
        {
          if (v67 == 3)
          {
            uint64_t v72 = *((void *)v30 + 4);
            uint64_t v71 = *((void *)v30 + 5);
            BOOL v81 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            char v74 = v81;
            goto LABEL_67;
          }
          uint64_t v99 = *((void *)v30 + 4);
          uint64_t v100 = *((void *)v30 + 5);
          BOOL v81 = __OFSUB__(v100, v99);
          uint64_t v92 = v100 - v99;
          char v93 = v81;
LABEL_79:
          if (v93) {
            goto LABEL_137;
          }
          id v101 = &v68[16 * v70];
          uint64_t v103 = *(void *)v101;
          uint64_t v102 = *((void *)v101 + 1);
          BOOL v81 = __OFSUB__(v102, v103);
          uint64_t v104 = v102 - v103;
          if (v81) {
            goto LABEL_140;
          }
          if (v104 < v92) {
            goto LABEL_96;
          }
        }
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v67)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!*v159) {
          goto LABEL_154;
        }
        v110 = v30;
        char v111 = &v68[16 * v109];
        uint64_t v112 = *(void *)v111;
        uint64_t v113 = &v68[16 * v70];
        uint64_t v114 = *((void *)v113 + 1);
        sub_10051D33C(*v159 + *(void *)(v158 + 72) * *(void *)v111, *v159 + *(void *)(v158 + 72) * *(void *)v113, *v159 + *(void *)(v158 + 72) * v114, v157);
        if (v2) {
          goto LABEL_126;
        }
        if (v114 < v112) {
          goto LABEL_130;
        }
        if (v70 > *((void *)v110 + 2)) {
          goto LABEL_131;
        }
        *(void *)char v111 = v112;
        *(void *)&v68[16 * v109 + 8] = v114;
        unint64_t v115 = *((void *)v110 + 2);
        if (v70 >= v115) {
          goto LABEL_132;
        }
        id v30 = v110;
        unint64_t v67 = v115 - 1;
        memmove(&v68[16 * v70], v113 + 16, 16 * (v115 - 1 - v70));
        *((void *)v30 + 2) = v115 - 1;
        id v31 = &qword_10094E800;
        if (v115 <= 2) {
          goto LABEL_96;
        }
        continue;
      }
    }
    unint64_t v67 = 1;
LABEL_96:
    Swift::Int v25 = v159[1];
    Swift::Int v29 = v152;
    uint64_t v28 = v142;
    Swift::Int v32 = v144;
  }
  while (v152 < v25);
LABEL_112:
  uint64_t v142 = v28;
  if (v67 >= 2)
  {
    Swift::Int v132 = *v159;
    do
    {
      unint64_t v133 = v67 - 2;
      if (v67 < 2) {
        goto LABEL_144;
      }
      if (!v132) {
        goto LABEL_157;
      }
      uint64_t v134 = *(void *)&v30[16 * v133 + 32];
      uint64_t v135 = *(void *)&v30[16 * v67 + 24];
      sub_10051D33C(v132 + *(void *)(v158 + 72) * v134, v132 + *(void *)(v158 + 72) * *(void *)&v30[16 * v67 + 16], v132 + *(void *)(v158 + 72) * v135, v157);
      if (v2) {
        break;
      }
      if (v135 < v134) {
        goto LABEL_145;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v30 = sub_1001EEF68((uint64_t)v30);
      }
      if (v133 >= *((void *)v30 + 2)) {
        goto LABEL_146;
      }
      uint64_t v136 = &v30[16 * v133 + 32];
      *(void *)uint64_t v136 = v134;
      *((void *)v136 + 1) = v135;
      unint64_t v137 = *((void *)v30 + 2);
      if (v67 > v137) {
        goto LABEL_147;
      }
      memmove(&v30[16 * v67 + 16], &v30[16 * v67 + 32], 16 * (v137 - v67));
      *((void *)v30 + 2) = v137 - 1;
      unint64_t v67 = v137 - 1;
    }
    while (v137 > 2);
  }
LABEL_126:
  swift_bridgeObjectRelease();
LABEL_127:
  v142[2] = 0;
  swift_bridgeObjectRelease();
}

void sub_10051D0A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v29 = sub_1000AFA94(&qword_10094E800);
  __chkstk_darwin(v29);
  uint64_t v36 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v34 = (uint64_t)&v26 - v10;
  __chkstk_darwin(v11);
  uint64_t v33 = (uint64_t)&v26 - v13;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (a3 - 1);
    id v30 = a4;
    uint64_t v31 = v14;
    uint64_t v37 = v14 * a3;
    uint64_t v27 = a1;
LABEL_4:
    uint64_t v16 = 0;
    uint64_t v32 = a3;
    while (1)
    {
      uint64_t v35 = a1;
      uint64_t v18 = *a4;
      uint64_t v19 = v33;
      sub_1000AEF2C(v37 + v16 + *a4, v33, &qword_10094E800);
      uint64_t v20 = v34;
      sub_1000AEF2C(v15 + v16 + v18, v34, &qword_10094E800);
      uint64_t v21 = v38;
      sub_10051B90C(v19, v20);
      char v23 = v22;
      sub_10008DB18(v20, &qword_10094E800);
      sub_10008DB18(v19, &qword_10094E800);
      uint64_t v38 = v21;
      if (v21) {
        break;
      }
      if ((v23 & 1) == 0)
      {
        uint64_t v17 = v32;
        a4 = v30;
LABEL_11:
        a3 = v17 + 1;
        v15 += v31;
        v37 += v31;
        a1 = v27;
        if (a3 != v28) {
          goto LABEL_4;
        }
        return;
      }
      a4 = v30;
      uint64_t v24 = *v30;
      if (!*v30)
      {
        __break(1u);
        return;
      }
      uint64_t v25 = v24 + v15 + v16;
      sub_1000AEEC8(v24 + v37 + v16, v36, &qword_10094E800);
      swift_arrayInitWithTakeFrontToBack();
      sub_1000AEEC8(v36, v25, &qword_10094E800);
      uint64_t v17 = v32;
      v16 -= v31;
      a1 = v35 + 1;
      if (v32 == v35 + 1) {
        goto LABEL_11;
      }
    }
  }
}

uint64_t sub_10051D33C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v52 = sub_1000AFA94(&qword_10094E800);
  __chkstk_darwin(v52);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v46 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v46 - v14;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v53 = *(void *)(v20 + 72);
  if (!v53)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v53 == -1) {
    goto LABEL_68;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v53 == -1) {
    goto LABEL_69;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v53;
  unint64_t v56 = a1;
  unint64_t v55 = a4;
  uint64_t v23 = v21 / v53;
  if (v22 >= v21 / v53)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      uint64_t v25 = v23 * v53;
      uint64_t v19 = v12;
      int v50 = (char *)v17;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v32 = a4 + v25;
      unint64_t v54 = a4 + v25;
      unint64_t v56 = a2;
      if (v25 < 1 || a1 >= a2) {
        goto LABEL_65;
      }
      uint64_t v34 = -v53;
      unint64_t v47 = a1;
      uint64_t v48 = -v53;
      unint64_t v49 = a4;
      while (1)
      {
        sub_1000AEF2C(v32 + v34, (uint64_t)v12, &qword_10094E800);
        unint64_t v35 = a2;
        unint64_t v36 = a2 + v34;
        uint64_t v37 = a2 + v34;
        uint64_t v38 = v34;
        uint64_t v15 = v50;
        sub_1000AEF2C(v37, (uint64_t)v50, &qword_10094E800);
        sub_10051B90C((uint64_t)v12, (uint64_t)v15);
        if (v5) {
          goto LABEL_64;
        }
        char v40 = v39;
        uint64_t v53 = 0;
        unint64_t v51 = a3 + v38;
        sub_10008DB18((uint64_t)v15, &qword_10094E800);
        sub_10008DB18((uint64_t)v12, &qword_10094E800);
        if (v40)
        {
          unint64_t v41 = a3;
          BOOL v26 = a3 >= v35;
          a3 = v51;
          if (v26 && v51 < v35)
          {
            unint64_t v42 = v49;
            if (v41 != v35) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v42 = v49;
          }
          uint64_t v34 = v48;
          v56 += v48;
        }
        else
        {
          unint64_t v43 = v54;
          v54 += v38;
          unint64_t v44 = a3;
          BOOL v26 = a3 >= v43;
          a3 = v51;
          if (v26 && v51 < v43)
          {
            unint64_t v42 = v49;
            if (v44 != v43) {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v36 = v35;
            uint64_t v34 = v48;
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v36 = v35;
            uint64_t v34 = v48;
            unint64_t v42 = v49;
          }
        }
        unint64_t v32 = v54;
        if (v54 > v42)
        {
          a2 = v36;
          uint64_t v5 = v53;
          if (v36 > v47) {
            continue;
          }
        }
        goto LABEL_65;
      }
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v53;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v51 = a4 + v24;
    unint64_t v54 = a4 + v24;
    BOOL v26 = v24 < 1 || a2 >= a3;
    if (v26) {
      goto LABEL_65;
    }
    while (1)
    {
      sub_1000AEF2C(a2, (uint64_t)v19, &qword_10094E800);
      sub_1000AEF2C(a4, (uint64_t)v15, &qword_10094E800);
      sub_10051B90C((uint64_t)v19, (uint64_t)v15);
      if (v5) {
        break;
      }
      char v28 = v27;
      sub_10008DB18((uint64_t)v15, &qword_10094E800);
      sub_10008DB18((uint64_t)v19, &qword_10094E800);
      unint64_t v29 = v56;
      if (v28)
      {
        unint64_t v30 = a2 + v53;
        if (v56 < a2 || v56 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v56 == a2)
        {
          unint64_t v29 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v31 = v55 + v53;
        if (v56 < v55 || v56 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v56 != v55)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v55 = v31;
        unint64_t v30 = a2;
      }
      unint64_t v56 = v29 + v53;
      a4 = v55;
      if (v55 < v51)
      {
        a2 = v30;
        if (v30 < a3) {
          continue;
        }
      }
      goto LABEL_65;
    }
LABEL_64:
    sub_10008DB18((uint64_t)v15, &qword_10094E800);
    sub_10008DB18((uint64_t)v19, &qword_10094E800);
LABEL_65:
    sub_1001EEE24(&v56, &v55, (uint64_t *)&v54);
    return 1;
  }
LABEL_70:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10051D8F4(void *a1, void *a2, void *a3)
{
  id v6 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
  id v7 = [a2 unitManager];
  if (v7)
  {
    uint64_t v8 = v7;
    [v6 setAchUnitManager:swift_dynamicCastObjCProtocolUnconditional()];
  }
  else
  {
    static os_log_type_t.default.getter();
    id v9 = HKLogActivity;
    os_log(_:dso:log:_:_:)();
  }
  id v10 = [a1 displayName];
  [v6 setName:v10];

  if ([a1 isMe])
  {
    unint64_t v11 = (unint64_t)[a3 isWheelchairUser];
  }
  else
  {
    id v12 = [a1 currentSnapshot];
    if (v12)
    {
      uint64_t v13 = v12;
      id v14 = [v12 wheelchairUse];

      unint64_t v11 = v14 == (id)2;
    }
    else
    {
      unint64_t v11 = 0;
    }
  }
  [v6 setWheelchairUser:v11];
  return v6;
}

void *sub_10051DAB4(void *a1)
{
  id v25 = a1;
  uint64_t v1 = type metadata accessor for Calendar.Component();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v14 = (char *)&v24 - v13;
  uint64_t v26 = type metadata accessor for Calendar();
  uint64_t v15 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  Date.init()();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Calendar.Component.day(_:), v1);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_10095B890);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v18 = _swiftEmptyArrayStorage;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v26);
    return v18;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  uint64_t result = [v25 allAchievementsSortedByEarnedDate];
  if (result)
  {
    uint64_t v20 = result;
    sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
    unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    __chkstk_darwin(v22);
    *(&v24 - 2) = (uint64_t)v17;
    *(&v24 - 1) = (uint64_t)v11;
    uint64_t v18 = sub_1006239C4(sub_10051E248, &v24 - 4, v21);
    uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v23(v14, v8);
    v23(v11, v8);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10051DE98(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_10051DEB8, 0, 0);
}

uint64_t sub_10051DEB8()
{
  if ([*(id *)(v0 + 24) isMe])
  {
    type metadata accessor for MainActor();
    *(void *)(v0 + 40) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10051E040, v2, v1);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 48) = v4;
    *(void *)(v4 + 16) = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v5;
    uint64_t v6 = sub_1000AFA94(&qword_100960690);
    void *v5 = v0;
    v5[1] = sub_10051E0A8;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000019, 0x80000001007CCB00, sub_10051E240, v4, v6);
  }
}

uint64_t sub_10051E040()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_release();
  uint64_t v2 = sub_10051DAB4(v1);
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_10051E0A8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100345220, 0, 0);
}

uint64_t sub_10051E1C0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 40);
  uint64_t v4 = *(void **)(a1 + 56);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_10051E240()
{
  return sub_10051B758();
}

uint64_t sub_10051E248(id *a1)
{
  return sub_10051B360(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_10051E270()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10051E2C0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000DBD6C;
  return sub_10051A0B4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10051E394()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10051E3CC()
{
  return sub_10051A4A8();
}

uint64_t sub_10051E3D4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10051E414(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10051A5C0(a1, v4, v5, v6);
}

char *sub_10051E4C8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for UIListContentConfiguration.TextProperties();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for UIListContentConfiguration();
  uint64_t v13 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label;
  sub_10007E2D8(0, &qword_100953458);
  uint64_t v17 = v4;
  *(void *)&v4[v16] = sub_1005CA0D4();
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint;
  *(void *)&v17[v18] = [objc_allocWithZone((Class)NSLayoutConstraint) init];

  uint64_t v19 = (objc_class *)type metadata accessor for TrendListHeaderView();
  v34.receiver = v17;
  v34.super_class = v19;
  id v20 = [super initWithFrame:a1, a2, a3, a4];
  unint64_t v21 = self;
  id v22 = v20;
  id v23 = [v21 systemBackgroundColor];
  [v22 setBackgroundColor:v23];

  static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
  uint64_t v24 = (char *)v22;
  UIListContentConfiguration.directionalLayoutMargins.getter();
  [v24 setDirectionalLayoutMargins];

  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label;
  uint64_t v26 = *(void **)&v24[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label];
  UIListContentConfiguration.textProperties.getter();
  char v27 = (void *)UIListContentConfiguration.TextProperties.font.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  [v26 setFont:v27];

  char v28 = *(void **)&v24[v25];
  [v28 setNumberOfLines:0];
  id v29 = v28;
  id v30 = [v21 labelColor];
  [v29 setTextColor:v30];

  [v24 addSubview:*(void *)&v24[v25]];
  sub_10051E82C();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v33);
  return v24;
}

void sub_10051E82C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label];
  id v2 = [v1 leadingAnchor];
  id v3 = [v0 leadingAnchor];
  id v4 = [v2 constraintEqualToAnchor:v3 constant:16.0];

  id v5 = [v1 trailingAnchor];
  id v6 = [v0 trailingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6 constant:-16.0];

  id v8 = [v1 topAnchor];
  id v9 = [v0 topAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint;
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint];
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint] = v10;

  id v13 = [v1 lastBaselineAnchor];
  id v14 = [v0 bottomAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14 constant:-14.0];

  uint64_t v16 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100751160;
  *(void *)(v17 + 32) = v4;
  *(void *)(v17 + 40) = v7;
  uint64_t v18 = *(void **)&v0[v11];
  *(void *)(v17 + 48) = v18;
  *(void *)(v17 + 56) = v15;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v19 = v4;
  id v20 = v7;
  id v21 = v18;
  id v25 = v15;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 activateConstraints:isa];

  LODWORD(v23) = 1148846080;
  [v1 setContentHuggingPriority:1 forAxis:v23];
  LODWORD(v24) = 1148846080;
  [v1 setContentCompressionResistancePriority:1 forAxis:v24];
}

uint64_t sub_10051EB1C(void *a1)
{
  id v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_label;
  sub_10007E2D8(0, &qword_100953458);
  id v5 = v1;
  *(void *)&v1[v4] = sub_1005CA0D4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp19TrendListHeaderView_topConstraint;
  id v7 = [objc_allocWithZone((Class)NSLayoutConstraint) init];

  *(void *)&v5[v6] = v7;
  id v8 = *(void **)&v5[v6];

  type metadata accessor for TrendListHeaderView();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_10051EC0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendListHeaderView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendListHeaderView()
{
  return self;
}

unint64_t sub_10051ECB4()
{
  unint64_t result = qword_100960708;
  if (!qword_100960708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960708);
  }
  return result;
}

unint64_t sub_10051ED0C()
{
  unint64_t result = qword_100960710;
  if (!qword_100960710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960710);
  }
  return result;
}

unint64_t sub_10051ED64()
{
  unint64_t result = qword_100960718;
  if (!qword_100960718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960718);
  }
  return result;
}

void *sub_10051EDB8()
{
  return &protocol witness table for Int;
}

uint64_t sub_10051EDC4()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v5, qword_1009982B8);
  sub_1000876DC(v5, (uint64_t)qword_1009982B8);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10051EF24()
{
  uint64_t v0 = sub_1000AFA94(&qword_100960768);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100960770);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000AFA94(&qword_100960760);
  sub_1000258C4(v5, qword_1009982D0);
  sub_1000876DC(v5, (uint64_t)qword_1009982D0);
  sub_100319C8C();
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._object = (void *)0x80000001007CCBB0;
  v6._countAndFlagsBits = 0xD000000000000015;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v7);
  return EntityURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_10051F110(char a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  v10._countAndFlagsBits = sub_10007CE70(a1);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  LocalizedStringResource.init(stringInterpolation:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  sub_1001C6254(a1);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  return DisplayRepresentation.init(title:subtitle:image:)();
}

unint64_t sub_10051F344()
{
  unint64_t result = qword_100960720;
  if (!qword_100960720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960720);
  }
  return result;
}

uint64_t sub_10051F398@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094ADE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000AFA94(&qword_100960760);
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_1009982D0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_10051F448()
{
  unint64_t result = qword_100960728;
  if (!qword_100960728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960728);
  }
  return result;
}

unint64_t sub_10051F4A0()
{
  unint64_t result = qword_100960730;
  if (!qword_100960730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960730);
  }
  return result;
}

unint64_t sub_10051F4FC()
{
  unint64_t result = qword_100960738;
  if (!qword_100960738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960738);
  }
  return result;
}

uint64_t sub_10051F550()
{
  sub_100319D88();
  uint64_t v2 = URLRepresentableEntity.urlRepresentationParameter.getter();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1001B8FDC(v3, v0, v2, v1);
}

uint64_t sub_10051F5E4@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094ADD8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_1009982B8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_10051F690()
{
  unint64_t result = qword_100960748;
  if (!qword_100960748)
  {
    sub_1000A1370(&qword_100960750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960748);
  }
  return result;
}

uint64_t sub_10051F6EC(uint64_t a1)
{
  unint64_t v2 = sub_100319C8C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10051F73C()
{
  unint64_t result = qword_100960758;
  if (!qword_100960758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960758);
  }
  return result;
}

uint64_t sub_10051F790()
{
  return sub_10051F110(*v0);
}

uint64_t sub_10051F798(uint64_t a1)
{
  unint64_t v2 = sub_10051F4FC();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unsigned char *storeEnumTagSinglePayload for SummaryCardEntity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10051F8B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryCardEntity()
{
  return &type metadata for SummaryCardEntity;
}

id sub_10051F8E8()
{
  id result = sub_10051F908();
  qword_100960778 = (uint64_t)result;
  return result;
}

id sub_10051F908()
{
  id v0 = [self configurationWithPointSize:40.0];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self systemImageNamed:v1 withConfiguration:v0];

  if (v2)
  {
    id v3 = [v2 CGImage];
    if (v3)
    {
      unsigned int v4 = v3;
      id v5 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v3];

      id v2 = v5;
    }
    id v6 = [self tintColor];
    id v7 = [v2 imageWithTintColor:v6];

    id v2 = [v7 resizedImageWithNewSize:30.0, 30.0];
  }

  return v2;
}

id sub_10051FA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v21.receiver = v3;
  v21.super_class = (Class)type metadata accessor for FriendInboxAddTableViewCell();
  [super initWithStyle:a1 reuseIdentifier:v5];

  id v7 = self;
  id v8 = v6;
  id v9 = [v7 secondarySystemBackgroundColor];
  [v8 setBackgroundColor:v9];

  id v10 = [v8 textLabel];
  if (v10)
  {
    Swift::String v11 = v10;
    id v12 = [self mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 localizedStringForKey:v13 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v11 setText:v15];
  }
  id v16 = [v8 textLabel];
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [v7 tintColor];
    [v17 setTextColor:v18];
  }
  id v19 = [v8 imageView];

  if (v19)
  {
    if (qword_10094ADE8 != -1) {
      swift_once();
    }
    [v19 setImage:qword_100960778];
  }
  return v8;
}

id sub_10051FDA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FriendInboxAddTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FriendInboxAddTableViewCell()
{
  return self;
}

uint64_t sub_10051FE04()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10051FE78()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10051FEEC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  int v19 = a1;
  uint64_t v5 = sub_1000AFA94(&qword_100960970);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94(&qword_1009687D0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v4 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel__isLoading;
  LOBYTE(v24) = 1;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v10 + 32))(v13, v12, v9);
  uint64_t v14 = v4 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel__mapImage;
  uint64_t v24 = 0;
  sub_1000AFA94(&qword_100950278);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v14, v8, v5);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  LOBYTE(v23) = v19;
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  uint64_t v23 = v20;
  Published.init(initialValue:)();
  swift_endAccess();
  NSString v15 = (void *)(v4 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel_mapTappedAction);
  uint64_t v16 = v22;
  *NSString v15 = v21;
  v15[1] = v16;
  return v4;
}

uint64_t sub_100520184()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel__isLoading;
  uint64_t v2 = sub_1000AFA94(&qword_1009687D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV10FitnessApp20WorkoutDetailMapView9ViewModel__mapImage;
  uint64_t v4 = sub_1000AFA94(&qword_100960970);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100520284()
{
  return type metadata accessor for WorkoutDetailMapView.ViewModel();
}

uint64_t type metadata accessor for WorkoutDetailMapView.ViewModel()
{
  uint64_t result = qword_1009607E8;
  if (!qword_1009607E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005202D8()
{
  sub_1000E24B8();
  if (v0 <= 0x3F)
  {
    sub_1000E25C8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

ValueMetadata *type metadata accessor for WorkoutDetailMapView()
{
  return &type metadata for WorkoutDetailMapView;
}

uint64_t sub_1005203C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005203DC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailMapView.ViewModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

double sub_10052041C()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  double v2 = v1;

  double v3 = sub_1000FC040();
  double result = v2 - (v3 + v3) + -40.0;
  qword_1009607A8 = *(void *)&result;
  return result;
}

double sub_100520498()
{
  if (qword_10094ADF0 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1009607A8;
  qword_1009982E8 = qword_1009607A8;
  qword_1009982F0 = 0x4061800000000000;
  return result;
}

uint64_t sub_1005204FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100960920);
  __chkstk_darwin(v1 - 8);
  double v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100960928);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100960930);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000AFA94(&qword_100960938);
  __chkstk_darwin(v39);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v38 = sub_1000AFA94(&qword_100960940);
  __chkstk_darwin(v38);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v17 = v41;
  if ((void)v41)
  {
    if (qword_10094ADF0 != -1) {
      swift_once();
    }
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v18 = v41;
    char v19 = BYTE8(v41);
    uint64_t v20 = v42;
    char v21 = BYTE8(v42);
    *(void *)uint64_t v16 = v17;
    *((void *)v16 + 1) = v18;
    v16[16] = v19;
    *((void *)v16 + 3) = v20;
    v16[32] = v21;
    *(_OWORD *)(v16 + 40) = v43;
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_10095E168);
    sub_100520CB4();
    sub_100520D28();
    uint64_t v22 = v40;
    _ConditionalContent<>.init(storage:)();
    uint64_t v23 = sub_1000AFA94(&qword_100960948);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  }
  else
  {
    unint64_t v36 = v14;
    uint64_t v37 = v3;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (v41)
    {
      *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
      *((void *)v6 + 1) = 0;
      v6[16] = 0;
      sub_1000AFA94(&qword_100960950);
      ProgressView<>.init<>()();
      if (qword_10094ADF0 != -1) {
        swift_once();
      }
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      sub_1000AEF2C((uint64_t)v6, (uint64_t)v9, &qword_100960928);
      id v25 = &v9[*(int *)(v7 + 36)];
      long long v26 = v42;
      *(_OWORD *)id v25 = v41;
      *((_OWORD *)v25 + 1) = v26;
      *((_OWORD *)v25 + 2) = v43;
      sub_10008DB18((uint64_t)v6, &qword_100960928);
      id v27 = [self darkGrayColor];
      uint64_t v28 = Color.init(_:)();
      char v29 = static Edge.Set.all.getter();
      sub_1000AEF2C((uint64_t)v9, (uint64_t)v11, &qword_100960930);
      id v30 = &v11[*(int *)(v39 + 36)];
      *(void *)id v30 = v28;
      v30[8] = v29;
      sub_10008DB18((uint64_t)v9, &qword_100960930);
      uint64_t v31 = (uint64_t)v36;
      sub_1000AEEC8((uint64_t)v11, (uint64_t)v36, &qword_100960938);
      sub_1000AEF2C(v31, (uint64_t)v16, &qword_100960938);
      swift_storeEnumTagMultiPayload();
      sub_1000AFA94(&qword_10095E168);
      sub_100520CB4();
      sub_100520D28();
      uint64_t v32 = (uint64_t)v37;
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v31, &qword_100960938);
      uint64_t v33 = sub_1000AFA94(&qword_100960948);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
      return sub_1000AEEC8(v32, v40, &qword_100960920);
    }
    else
    {
      uint64_t v34 = sub_1000AFA94(&qword_100960948);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v40, 1, 1, v34);
    }
  }
}

uint64_t sub_100520AF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (_OWORD *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000AFA94(&qword_100960908);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v9 = sub_1000AFA94(&qword_100960910);
  sub_1005204FC((uint64_t)&v8[*(int *)(v9 + 44)]);
  uint64_t v10 = (char *)v5 + *(int *)(v3 + 28);
  uint64_t v11 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v12 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  __asm { FMOV            V0.2D, #8.0 }
  _OWORD *v5 = _Q0;
  uint64_t v18 = a1 + *(int *)(sub_1000AFA94(&qword_100960918) + 36);
  sub_1002F51F8((uint64_t)v5, v18);
  *(_WORD *)(v18 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C((uint64_t)v8, a1, &qword_100960908);
  sub_1002854A8((uint64_t)v5);
  return sub_10008DB18((uint64_t)v8, &qword_100960908);
}

unint64_t sub_100520CB4()
{
  unint64_t result = qword_10095E180;
  if (!qword_10095E180)
  {
    sub_1000A1370(&qword_10095E168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10095E180);
  }
  return result;
}

unint64_t sub_100520D28()
{
  unint64_t result = qword_100960958;
  if (!qword_100960958)
  {
    sub_1000A1370(&qword_100960938);
    sub_100520DC8();
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960958);
  }
  return result;
}

unint64_t sub_100520DC8()
{
  unint64_t result = qword_100960960;
  if (!qword_100960960)
  {
    sub_1000A1370(&qword_100960930);
    sub_1000A132C(&qword_100960968, &qword_100960928);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960960);
  }
  return result;
}

unint64_t sub_100520E6C()
{
  unint64_t result = qword_100960978;
  if (!qword_100960978)
  {
    sub_1000A1370(&qword_100960918);
    sub_1000A132C(&qword_100960980, &qword_100960908);
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960978);
  }
  return result;
}

void destroy for FriendCardFactory(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 48);
}

void *initializeWithCopy for FriendCardFactory(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  uint64_t v9 = *(void **)(a2 + 48);
  a1[6] = v9;
  id v10 = v3;
  swift_retain();
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  id v15 = v9;
  return a1;
}

uint64_t assignWithCopy for FriendCardFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 24);
  id v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 32);
  id v14 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v13;
  id v15 = v13;

  uint64_t v16 = *(void **)(a2 + 40);
  uint64_t v17 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v16;
  id v18 = v16;

  char v19 = *(void **)(a2 + 48);
  uint64_t v20 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v19;
  id v21 = v19;

  return a1;
}

uint64_t assignWithTake for FriendCardFactory(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();

  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  uint64_t v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  id v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

ValueMetadata *type metadata accessor for FriendCardFactory()
{
  return &type metadata for FriendCardFactory;
}

void sub_100521160(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v54 = a4;
  uint64_t v56 = a3;
  uint64_t v57 = a2;
  uint64_t v59 = a1;
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)&v51 - v12;
  __chkstk_darwin(v11);
  id v15 = (char *)&v51 - v14;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v58 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v60[0]) != 1) {
    goto LABEL_4;
  }
  uint64_t v19 = (uint64_t)v13;
  uint64_t v53 = v18;
  uint64_t v21 = v56;
  uint64_t v20 = v57;
  UUID.init(uuidString:)();
  uint64_t v22 = v58;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v15, 1, v16) == 1)
  {
    sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_1009555F0);
    static os_log_type_t.error.getter();
    id v23 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

LABEL_4:
    *(void *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    return;
  }
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  id v25 = v53;
  uint64_t v51 = v16;
  v24(v53, v15, v16);
  long long v26 = *(void **)v55;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v52 = v26;
  id v28 = [v26 friendWithUUID:isa];

  if (v28)
  {
    sub_1000CD028(v21, (uint64_t)v60);
    uint64_t v29 = v61;
    if (v61)
    {
      uint64_t v30 = v62;
      sub_10007E4EC(v60, v61);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
      uint64_t v31 = v58;
      uint64_t v32 = v51;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v19, 0, 1, v51);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v60);
    }
    else
    {
      sub_10008DB18((uint64_t)v60, &qword_10094CEF0);
      uint64_t v31 = v58;
      uint64_t v32 = v51;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v19, 1, 1, v51);
    }
    uint64_t v38 = (uint64_t *)a5;
    id v39 = [v52 me];
    id v40 = v28;
    id v41 = [v40 currentSnapshotWithGoalsCarriedForward];
    long long v42 = *(void **)(v55 + 40);
    v38[3] = type metadata accessor for FriendCard();
    v38[4] = (uint64_t)&off_1008D4BE0;
    long long v43 = sub_1000B1710(v38);
    id v44 = v42;
    uint64_t v45 = v57;
    swift_bridgeObjectRetain();
    sub_10066FDEC(v19, v59, v45, 1, 0, v54 & 1, 1, (uint64_t)v39, v43, v28, (uint64_t)v41, (uint64_t)v44);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v53, v32);
  }
  else
  {
    sub_1000CD028(v21, (uint64_t)v60);
    uint64_t v33 = v61;
    if (v61)
    {
      uint64_t v34 = v62;
      sub_10007E4EC(v60, v61);
      uint64_t v35 = (uint64_t)v10;
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
      uint64_t v36 = v58;
      uint64_t v37 = v51;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v10, 0, 1, v51);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v60);
    }
    else
    {
      sub_10008DB18((uint64_t)v60, &qword_10094CEF0);
      uint64_t v36 = v58;
      uint64_t v35 = (uint64_t)v10;
      uint64_t v37 = v51;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v10, 1, 1, v51);
    }
    char v46 = v54;
    id v47 = [v52 me];
    uint64_t v48 = *(void **)(v55 + 40);
    *(void *)(a5 + 24) = type metadata accessor for FriendCard();
    *(void *)(a5 + 32) = &off_1008D4BE0;
    unint64_t v49 = sub_1000B1710((uint64_t *)a5);
    swift_bridgeObjectRetain();
    id v50 = v48;
    sub_10066FDEC(v35, v59, v20, 1, 0, v46 & 1, 0, (uint64_t)v47, v49, 0, 0, (uint64_t)v50);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v37);
  }
}

Swift::Int sub_100521708@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v59 - v12;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v14 = *(void *)v66;
  if (*(void *)v66)
  {
    uint64_t v63 = a1;
    sub_100522AF8((uint64_t)v3);
    id v15 = sub_100522830(v14, v3);
    sub_100522B64((uint64_t)v3);
    swift_bridgeObjectRelease();
    id v16 = [*v3 allFriends];
    if (v16)
    {
      uint64_t v17 = v16;
      sub_100522BD0();
      sub_10044BEE8();
      uint64_t v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v18 & 0xC000000000000001) != 0)
      {
        uint64_t v61 = v15;
        uint64_t v62 = a3;
        uint64_t v19 = (uint64_t)&_swiftEmptySetSingleton;
        *(void *)unint64_t v66 = &_swiftEmptySetSingleton;
        __CocoaSet.makeIterator()();
        uint64_t v20 = __CocoaSet.Iterator.next()();
        if (v20)
        {
          uint64_t v59 = v13;
          int v60 = a2;
          do
          {
            uint64_t v64 = v20;
            swift_dynamicCast();
            id v21 = v65;
            if (([v65 isMe] & 1) != 0
              || ([v21 isFriendshipCurrentlyActive] & 1) == 0)
            {
            }
            else
            {
              id v22 = v65;
              uint64_t v23 = *(void *)v66;
              unint64_t v24 = *(void *)(*(void *)v66 + 16);
              if (*(void *)(*(void *)v66 + 24) <= v24)
              {
                sub_1001EA3A8(v24 + 1);
                uint64_t v23 = *(void *)v66;
              }
              Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v23 + 40));
              uint64_t v26 = v23 + 56;
              uint64_t v27 = -1 << *(unsigned char *)(v23 + 32);
              unint64_t v28 = result & ~v27;
              unint64_t v29 = v28 >> 6;
              if (((-1 << v28) & ~*(void *)(v23 + 56 + 8 * (v28 >> 6))) != 0)
              {
                unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v23 + 56 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
              }
              else
              {
                char v31 = 0;
                unint64_t v32 = (unint64_t)(63 - v27) >> 6;
                do
                {
                  if (++v29 == v32 && (v31 & 1) != 0)
                  {
                    __break(1u);
                    return result;
                  }
                  BOOL v33 = v29 == v32;
                  if (v29 == v32) {
                    unint64_t v29 = 0;
                  }
                  v31 |= v33;
                  uint64_t v34 = *(void *)(v26 + 8 * v29);
                }
                while (v34 == -1);
                unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
              }
              *(void *)(v26 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
              *(void *)(*(void *)(v23 + 48) + 8 * v30) = v22;
              ++*(void *)(v23 + 16);
            }
            uint64_t v20 = __CocoaSet.Iterator.next()();
          }
          while (v20);
          uint64_t v19 = *(void *)v66;
          LOBYTE(a2) = v60;
          id v13 = v59;
        }
        swift_release();
        id v15 = v61;
        a3 = v62;
      }
      else
      {
        uint64_t v19 = sub_100522030(v18);
      }
    }
    else
    {
      uint64_t v19 = 0;
    }
    sub_1000CD028(v63, (uint64_t)v66);
    uint64_t v38 = v67;
    if (v67)
    {
      uint64_t v39 = v68;
      sub_10007E4EC(v66, v67);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
      uint64_t v40 = type metadata accessor for UUID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v13, 0, 1, v40);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v66);
    }
    else
    {
      sub_10008DB18((uint64_t)v66, &qword_10094CEF0);
      uint64_t v41 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v13, 1, 1, v41);
    }
    id v42 = v4[5];
    swift_getKeyPath();
    swift_getKeyPath();
    id v43 = v42;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    int v44 = v66[0];
    if (v19)
    {
      if ((v19 & 0xC000000000000001) != 0) {
        uint64_t v45 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v45 = *(void *)(v19 + 16);
      }
      swift_bridgeObjectRelease();
      BOOL v46 = v45 != 0;
    }
    else
    {
      BOOL v46 = 0;
    }
    a3[3] = type metadata accessor for FriendsHighlightCard();
    a3[4] = (uint64_t)&off_1008CBE58;
    id v47 = sub_1000B1710(a3);
    char v48 = a2 & 1;
    uint64_t v49 = (uint64_t)v47;
    uint64_t v50 = (uint64_t)v13;
    char v51 = 1;
    id v52 = v15;
    uint64_t v53 = (uint64_t)v43;
    int v54 = v44;
    int v55 = v46;
  }
  else
  {
    sub_1000CD028(a1, (uint64_t)v66);
    uint64_t v35 = v67;
    if (v67)
    {
      uint64_t v36 = v68;
      sub_10007E4EC(v66, v67);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
      uint64_t v37 = type metadata accessor for UUID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v11, 0, 1, v37);
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v66);
    }
    else
    {
      sub_10008DB18((uint64_t)v66, &qword_10094CEF0);
      uint64_t v56 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v11, 1, 1, v56);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    int v57 = v66[0];
    a3[3] = type metadata accessor for FriendsHighlightCard();
    a3[4] = (uint64_t)&off_1008CBE58;
    uint64_t v58 = sub_1000B1710(a3);
    char v48 = a2 & 1;
    id v52 = _swiftEmptyArrayStorage;
    uint64_t v49 = (uint64_t)v58;
    uint64_t v50 = (uint64_t)v11;
    char v51 = 0;
    uint64_t v53 = 0;
    int v54 = v57;
    int v55 = 0;
  }
  return sub_1004CE86C(v50, v48, v51, (uint64_t)v52, v53, v54, v55, v49);
}

void sub_100521D90(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  if (a3 == 1)
  {
    sub_100521160(a1, a2, a4, a5 & 1, a6);
  }
  else if (a3 == 3 && a1 == 4 && !a2)
  {
    sub_100521708(a4, a5 & 1, (uint64_t *)a6);
  }
  else
  {
    *(void *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
}

uint64_t sub_100521E34@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100521EB4()
{
  return static Published.subscript.setter();
}

uint64_t sub_100521F30@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100521FB4(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_100522030(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_100522194((unint64_t *)((char *)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    uint64_t v7 = v6;
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v5);
    sub_100522194((unint64_t *)v8, v4, v2);
    uint64_t v7 = v9;
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

void sub_100522194(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_18:
    id v15 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    if ([v15 isMe])
    {
    }
    else
    {
      unsigned __int8 v16 = [v15 isFriendshipCurrentlyActive];

      if (v16)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v19++, 1);
        if (v12) {
          goto LABEL_30;
        }
      }
    }
  }
  BOOL v12 = __OFADD__(v4++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v4 >= v9) {
    goto LABEL_27;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_17:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v4 + 1;
  if (v4 + 1 >= v9) {
    goto LABEL_27;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 2;
  if (v4 + 2 >= v9) {
    goto LABEL_27;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 3;
  if (v4 + 3 >= v9)
  {
LABEL_27:
    swift_retain();
    sub_100522364(a1, a2, v19, a3);
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v4 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_27;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_100522364(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    int64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1000AFA94(&qword_10094F2D0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  int64_t v9 = (void *)result;
  unint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1005225C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    int64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1000AFA94(&qword_10094F3E0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  int64_t v9 = (unsigned char *)result;
  unint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v18);
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << v9[32];
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*((void *)v9 + 6) + v22) = v18;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void *sub_100522830(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Calendar();
  __chkstk_darwin(v5 - 8);
  BOOL v33 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v32 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  int64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v28 = v2;
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_1001C8F88(0, v10, 0);
    uint64_t v11 = v34;
    uint64_t v12 = *(void *)(type metadata accessor for ActivitySharingHighlight() - 8);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    unint64_t v14 = (void *)a2[3];
    uint64_t v15 = (void *)a2[4];
    unint64_t v30 = (void *)a2[2];
    char v31 = v14;
    unint64_t v16 = (void *)a2[5];
    uint64_t v29 = *(void *)(v12 + 72);
    do
    {
      sub_10017FF5C(v13, (uint64_t)v9);
      Swift::UInt v18 = v30;
      uint64_t v17 = v31;
      *(void *)&v9[v7[5]] = v31;
      *(void *)&v9[v7[6]] = v18;
      *(void *)&v9[v7[7]] = v16;
      *(void *)&v9[v7[8]] = v15;
      v9[v7[9]] = 1;
      id v19 = v17;
      id v20 = v18;
      id v21 = v16;
      id v22 = v15;
      static Calendar.autoupdatingCurrent.getter();
      FIUIRelativeDateTimeFormatter.init(calendar:)();
      uint64_t v23 = v7[11];
      id v24 = [objc_allocWithZone((Class)NSDateFormatter) init];
      [v24 setDateStyle:1];
      *(void *)&v9[v23] = v24;
      uint64_t v34 = v11;
      unint64_t v26 = v11[2];
      unint64_t v25 = v11[3];
      if (v26 >= v25 >> 1)
      {
        sub_1001C8F88(v25 > 1, v26 + 1, 1);
        uint64_t v11 = v34;
      }
      v11[2] = v26 + 1;
      sub_100345934((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v26);
      v13 += v29;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_100522AF8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  char v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  uint64_t v6 = *(void **)(a1 + 48);
  id v7 = *(id *)a1;
  swift_retain();
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  return a1;
}

uint64_t sub_100522B64(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(void **)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void **)(a1 + 40);

  swift_release();
  return a1;
}

unint64_t sub_100522BD0()
{
  unint64_t result = qword_10094ECC0;
  if (!qword_10094ECC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10094ECC0);
  }
  return result;
}

unint64_t sub_100522C10(uint64_t a1)
{
  return sub_1000D9B10(a1, &qword_100960A88);
}

unint64_t sub_100522C1C(uint64_t a1)
{
  return sub_10005BB4C(a1, &qword_1009609F0, &qword_1009609F8, (uint64_t (*)(uint64_t))sub_100529410);
}

unint64_t sub_100522C44(uint64_t a1)
{
  return sub_1000D9B10(a1, &qword_10095AE90);
}

unint64_t sub_100522C50(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_1009609C8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_100529410((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100522D50(uint64_t a1)
{
  return sub_10005BB4C(a1, &qword_10095AE98, &qword_1009609C0, (uint64_t (*)(uint64_t))sub_100529410);
}

unint64_t sub_100522D78(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095FE60);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (void *)*((void *)v4 - 1);
    char v6 = *v4;
    id v7 = *((id *)v4 - 2);
    sub_1001AEDAC(v5, v6);
    unint64_t result = sub_100529734((uint64_t)v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v7;
    uint64_t v10 = v2[7] + 16 * result;
    *(void *)uint64_t v10 = v5;
    *(unsigned char *)(v10 + 8) = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 24;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100522E98(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_1009582B0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000AEF2C(v6, (uint64_t)&v15, &qword_1009582B8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1000DA1C0(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10005C2B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100522FD0(uint64_t a1)
{
  return sub_100523800(a1, &qword_10094DE88, &qword_100960B00, (uint64_t (*)(void))sub_100529778);
}

unint64_t sub_100522FF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_100960A00);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_100529410((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100523104(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_100960A80);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_100529410((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100523210(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_100960A40);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10052995C((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10052331C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095AEA8);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000AEF2C(v6, (uint64_t)v15, &qword_100960A38);
    unint64_t result = sub_1000DE24C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_10005C2B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100523460(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095FED8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000DA1C0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100523574(uint64_t a1)
{
  return sub_1005240D8(a1, &qword_100954F78, &qword_100960AF8, (uint64_t (*)(void))sub_100529AA0);
}

unint64_t sub_10052359C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095FD20);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = (void *)*((void *)v4 - 1);
    char v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1001AEDAC(v7, v8);
    unint64_t result = sub_1000DA1C0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 16 * result;
    *(void *)uint64_t v12 = v7;
    *(unsigned char *)(v12 + 8) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 32;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1005236CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_1009609B0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_10005BC7C((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1005237D8(uint64_t a1)
{
  return sub_100523800(a1, &qword_100956B70, &qword_100960AF0, (uint64_t (*)(void))sub_100529C60);
}

unint64_t sub_100523800(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v29 = a4;
  uint64_t v7 = sub_1000AFA94(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    BOOL v12 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(a3);
  uint64_t v11 = static _DictionaryStorage.allocate(capacity:)();
  BOOL v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  BOOL v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_1000AEF2C(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1005239FC(uint64_t a1)
{
  return sub_100523800(a1, &qword_100956A50, &qword_100960AE8, (uint64_t (*)(void))sub_100529D94);
}

unint64_t sub_100523A24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_100960A68);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 3);
    uint64_t v7 = *((void *)v4 - 2);
    uint64_t v8 = *((void *)v4 - 1);
    char v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000DA1C0(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v12 = v5;
    v12[1] = v6;
    uint64_t v13 = v2[7] + 24 * result;
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(unsigned char *)(v13 + 16) = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 40;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100523B60(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_100960A10);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    id v6 = *v4;
    id v7 = *v4;
    id v8 = v5;
    unint64_t result = sub_10005BC7C((uint64_t)v8);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = 8 * result;
    *(void *)(v2[6] + v11) = v8;
    *(void *)(v2[7] + v11) = v6;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100523C64(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10095D448);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_100960AE0);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000AEF2C(v12, (uint64_t)v5, &qword_10095D448);
    char v14 = *v5;
    unint64_t result = sub_10052A0C8(*v5, (void (*)(uint64_t))sub_10046E1E0, (uint64_t (*)(uint64_t, Swift::Int))sub_10052B7A4);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100523E88(uint64_t a1)
{
  return sub_100523800(a1, &qword_10095D438, &qword_100960AD8, (uint64_t (*)(void))sub_100529DD8);
}

unint64_t sub_100523EB0(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009609D8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095FC50);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000AEF2C(v12, (uint64_t)v5, &qword_1009609D8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_1000DA1C0(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for CatalogWorkout();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1005240B0(uint64_t a1)
{
  return sub_1005240D8(a1, &qword_10095F228, &qword_100960AD0, (uint64_t (*)(void))sub_10052A000);
}

unint64_t sub_1005240D8(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v29 = a4;
  uint64_t v7 = sub_1000AFA94(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(a3);
  uint64_t v11 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_1000AEF2C(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1005242D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_10095FD28);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 72);
  while (1)
  {
    long long v5 = *(_OWORD *)(v4 - 3);
    *(void *)&v15[16] = *(v4 - 1);
    long long v14 = *(_OWORD *)(v4 - 5);
    *(_OWORD *)uint64_t v15 = v5;
    uint64_t v6 = *v4;
    __int16 v18 = *((_WORD *)v4 - 12);
    long long v16 = *(_OWORD *)&v15[8];
    long long v17 = v14;
    sub_10050A638((uint64_t)&v17);
    sub_1001D9EF4((uint64_t)&v16);
    unint64_t result = sub_10009315C((uint64_t *)&v14);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = v2[6] + 40 * result;
    long long v10 = *(_OWORD *)v15;
    *(_OWORD *)uint64_t v9 = v14;
    *(_OWORD *)(v9 + 16) = v10;
    *(void *)(v9 + 32) = *(void *)&v15[16];
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10052442C(uint64_t a1)
{
  return sub_1005240D8(a1, &qword_100960AC0, &qword_100960AC8, (uint64_t (*)(void))sub_10052A164);
}

unint64_t sub_100524454(uint64_t a1)
{
  return sub_100523800(a1, &qword_100960AB0, &qword_100960AB8, (uint64_t (*)(void))sub_10052A200);
}

unint64_t sub_10052447C(uint64_t a1)
{
  return sub_1005240D8(a1, &qword_100960AA0, &qword_100960AA8, (uint64_t (*)(void))sub_10052A2B4);
}

unint64_t sub_1005244A4(uint64_t a1)
{
  return sub_100523800(a1, &qword_100960A90, &qword_100960A98, (uint64_t (*)(void))sub_10052A354);
}

unint64_t sub_1005244CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000AFA94(&qword_100960A08);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000DA1C0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1005245E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100251C78(a1, a2, a3, &qword_100960A30);
}

uint64_t sub_1005245EC(uint64_t a1, uint64_t a2)
{
  return sub_100251CDC(a1, a2, &qword_100960A30);
}

void sub_1005245F8()
{
}

void sub_100524620()
{
}

id sub_10052463C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v49 = a3;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v10 - 8);
  BOOL v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [self mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10074E640;
  *(void *)(v16 + 56) = &type metadata for String;
  unint64_t v17 = sub_1000AA64C();
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a2;
  *(void *)(v16 + 96) = &type metadata for String;
  *(void *)(v16 + 104) = v17;
  *(void *)(v16 + 64) = v17;
  *(void *)(v16 + 72) = a3;
  *(void *)(v16 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = String.init(format:_:)();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  long long v46 = xmmword_1007509E0;
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v47 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 64) = v47;
  *(void *)(inited + 40) = a5;
  swift_bridgeObjectRetain();
  int v44 = NSFontAttributeName;
  id v45 = a5;
  sub_10005BB4C(inited, &qword_100952850, &qword_100952858, (uint64_t (*)(uint64_t))sub_10005BC7C);
  id v22 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  uint64_t v25 = v24;
  sub_10008F80C((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  v43[1] = v25;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v27 = [v22 initWithString:v23 attributes:isa];

  uint64_t v52 = v18;
  uint64_t v53 = v20;
  uint64_t v50 = v49;
  uint64_t v51 = a4;
  uint64_t v28 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 1, 1, v28);
  sub_1000A06D0();
  uint64_t v29 = StringProtocol.range<A>(of:options:range:locale:)();
  uint64_t v31 = v30;
  LOBYTE(isa) = v32;
  sub_10008DB18((uint64_t)v12, (uint64_t *)&unk_10095BF60);
  if (isa)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v52 = v29;
    uint64_t v53 = v31;
    uint64_t v50 = v18;
    uint64_t v51 = v20;
    sub_1000AFA94(&qword_10095BF90);
    sub_1000AA75C(&qword_10095BF98, &qword_10095BF90);
    uint64_t v33 = _NSRange.init<A, B>(_:in:)();
    uint64_t v35 = v34;
    uint64_t v36 = swift_initStackObject();
    *(_OWORD *)(v36 + 16) = v46;
    uint64_t v37 = v44;
    *(void *)(v36 + 32) = v44;
    uint64_t v38 = v37;
    id v39 = sub_10052DAE0(v45, 38, 1);
    *(void *)(v36 + 64) = v47;
    *(void *)(v36 + 40) = v39;
    sub_10005BB4C(v36, &qword_100952850, &qword_100952858, (uint64_t (*)(uint64_t))sub_10005BC7C);
    Class v40 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v27 setAttributes:v40 range:v33];
  }
  id v41 = [objc_allocWithZone((Class)NSAttributedString) initWithAttributedString:v27];

  return v41;
}

uint64_t sub_100524B5C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v51 = a6;
  uint64_t v52 = a5;
  id v49 = a1;
  uint64_t v50 = a7;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v10 - 8);
  uint64_t v56 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AttributedString();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v55 = v12;
  __chkstk_darwin(v12);
  NSString v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100960988);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_100960990);
  uint64_t v53 = *(void *)(v57 - 8);
  uint64_t v18 = __chkstk_darwin(v57);
  uint64_t v48 = (uint64_t)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v47 = (uint64_t)&v46 - v20;
  uint64_t v21 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v21 - 8);
  id v22 = [self mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v22 localizedStringForKey:v23 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_10074E640;
  *(void *)(v25 + 56) = &type metadata for String;
  unint64_t v26 = sub_1000AA64C();
  *(void *)(v25 + 32) = v49;
  *(void *)(v25 + 40) = a2;
  *(void *)(v25 + 96) = &type metadata for String;
  *(void *)(v25 + 104) = v26;
  *(void *)(v25 + 64) = v26;
  *(void *)(v25 + 72) = a3;
  uint64_t v27 = a3;
  *(void *)(v25 + 80) = a4;
  swift_bridgeObjectRetain();
  uint64_t v28 = a4;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  uint64_t v29 = v50;
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  uint64_t v30 = v51;
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v31 = v52;
  v59[0] = v52;
  unint64_t v32 = sub_100232308();
  id v49 = v31;
  uint64_t v52 = (void *)v32;
  AttributedString.subscript.setter();
  if (v30)
  {
    uint64_t v33 = swift_getKeyPath();
    *(&v46 - 2) = __chkstk_darwin(v33);
    swift_getKeyPath();
    v59[0] = v30;
    sub_100346848();
    id v34 = v30;
    AttributedString.subscript.setter();
  }
  uint64_t v36 = v54;
  uint64_t v35 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v14, v29, v55);
  v59[0] = v27;
  v59[1] = v28;
  uint64_t v37 = type metadata accessor for Locale();
  uint64_t v38 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v56, 1, 1, v37);
  sub_10008F80C((unint64_t *)&qword_100960998, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  sub_1000A06D0();
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_10008DB18(v38, (uint64_t *)&unk_10095BF60);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v17, 1, v57) == 1)
  {
    id v39 = &qword_100960988;
    uint64_t v40 = (uint64_t)v17;
  }
  else
  {
    uint64_t v41 = v47;
    sub_1000AA6F4((uint64_t)v17, v47);
    uint64_t v42 = v48;
    sub_1000AEF2C(v41, v48, &qword_100960990);
    uint64_t v43 = swift_getKeyPath();
    *(&v46 - 2) = __chkstk_darwin(v43);
    swift_getKeyPath();
    v59[4] = UIFont.smallCapsVersion()().super.isa;
    sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
    int v44 = (void (*)(void *, void))AttributedString.subscript.modify();
    AttributedSubstring.subscript.setter();
    v44(v59, 0);
    sub_10008DB18(v42, &qword_100960990);
    uint64_t v40 = v41;
    id v39 = &qword_100960990;
  }
  return sub_10008DB18(v40, v39);
}

id sub_1005251C8(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v14 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    swift_bridgeObjectRetain();
    uint64_t v4 = (void **)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      v4 += 3;
      sub_1000AFA94((uint64_t *)&unk_10095BF70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1007509E0;
      *(void *)(inited + 64) = v14;
      *(void *)(inited + 32) = NSForegroundColorAttributeName;
      *(void *)(inited + 40) = v5;
      id v7 = v5;
      swift_bridgeObjectRetain();
      char v8 = NSForegroundColorAttributeName;
      sub_10005BB4C(inited, &qword_100952850, &qword_100952858, (uint64_t (*)(uint64_t))sub_10005BC7C);
      id v9 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_10008F80C((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v12 = [v9 initWithString:v10 attributes:isa];
      swift_bridgeObjectRelease();

      [v2 appendAttributedString:v12];
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return v2;
}

id sub_1005253F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v55 = a6;
  uint64_t v53 = a5;
  id v54 = a3;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [self mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100752410;
  *(void *)(v18 + 56) = &type metadata for String;
  unint64_t v19 = sub_1000AA64C();
  *(void *)(v18 + 32) = a1;
  *(void *)(v18 + 40) = a2;
  *(void *)(v18 + 96) = &type metadata for String;
  *(void *)(v18 + 104) = v19;
  id v20 = v54;
  *(void *)(v18 + 64) = v19;
  *(void *)(v18 + 72) = v20;
  *(void *)(v18 + 80) = a4;
  *(void *)(v18 + 136) = &type metadata for String;
  *(void *)(v18 + 144) = v19;
  *(void *)(v18 + 112) = a5;
  *(void *)(v18 + 120) = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = String.init(format:_:)();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v52 = a7;
  id v24 = sub_10052DAE0(a7, 33, 0);
  uint64_t v51 = sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  long long v49 = xmmword_1007509E0;
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v50 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 64) = v50;
  *(void *)(inited + 40) = v24;
  swift_bridgeObjectRetain();
  uint64_t v48 = NSFontAttributeName;
  id v54 = v24;
  sub_10005BB4C(inited, &qword_100952850, &qword_100952858, (uint64_t (*)(uint64_t))sub_10005BC7C);
  id v26 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  uint64_t v29 = v28;
  sub_10008F80C((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  uint64_t v47 = v29;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v31 = [v26 initWithString:v27 attributes:isa];

  uint64_t v58 = v21;
  uint64_t v59 = v23;
  uint64_t v56 = v53;
  uint64_t v57 = v55;
  uint64_t v32 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v14, 1, 1, v32);
  sub_1000A06D0();
  uint64_t v33 = StringProtocol.range<A>(of:options:range:locale:)();
  uint64_t v35 = v34;
  LOBYTE(v27) = v36;
  sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10095BF60);
  if (v27)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = v33;
    uint64_t v59 = v35;
    uint64_t v56 = v21;
    uint64_t v57 = v23;
    sub_1000AFA94(&qword_10095BF90);
    sub_1000AA75C(&qword_10095BF98, &qword_10095BF90);
    uint64_t v37 = _NSRange.init<A, B>(_:in:)();
    uint64_t v39 = v38;
    uint64_t v40 = swift_initStackObject();
    *(_OWORD *)(v40 + 16) = v49;
    uint64_t v41 = v48;
    *(void *)(v40 + 32) = v48;
    uint64_t v42 = v41;
    id v43 = sub_10052DAE0(v52, 38, 1);
    *(void *)(v40 + 64) = v50;
    *(void *)(v40 + 40) = v43;
    sub_10005BB4C(v40, &qword_100952850, &qword_100952858, (uint64_t (*)(uint64_t))sub_10005BC7C);
    Class v44 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v31 setAttributes:v44 range:v37];
  }
  id v45 = [objc_allocWithZone((Class)NSAttributedString) initWithAttributedString:v31];

  return v45;
}

uint64_t sub_100525974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v58 = a7;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v50 = a1;
  uint64_t v51 = a3;
  uint64_t v11 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v11 - 8);
  long long v49 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v13 - 8);
  id v54 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AttributedString();
  uint64_t v55 = *(void *)(v15 - 8);
  uint64_t v56 = v15;
  __chkstk_darwin(v15);
  id v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_100960988);
  __chkstk_darwin(v18 - 8);
  id v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000AFA94(&qword_100960990);
  uint64_t v57 = *(void *)(v59 - 8);
  uint64_t v21 = __chkstk_darwin(v59);
  uint64_t v48 = (uint64_t)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v47 = (uint64_t)&v46 - v23;
  uint64_t v24 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v24 - 8);
  id v25 = [self mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100752410;
  *(void *)(v28 + 56) = &type metadata for String;
  unint64_t v29 = sub_1000AA64C();
  uint64_t v30 = v51;
  *(void *)(v28 + 32) = v50;
  *(void *)(v28 + 40) = a2;
  *(void *)(v28 + 96) = &type metadata for String;
  *(void *)(v28 + 104) = v29;
  *(void *)(v28 + 64) = v29;
  *(void *)(v28 + 72) = v30;
  *(void *)(v28 + 80) = a4;
  *(void *)(v28 + 136) = &type metadata for String;
  *(void *)(v28 + 144) = v29;
  uint64_t v31 = v53;
  *(void *)(v28 + 112) = v52;
  *(void *)(v28 + 120) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v61[0] = v58;
  sub_1000AA6A0();
  swift_retain();
  AttributedString.subscript.setter();
  uint64_t v33 = v55;
  uint64_t v32 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v17, a8, v56);
  v61[0] = 32;
  v61[1] = 0xE100000000000000;
  uint64_t v34 = type metadata accessor for Locale();
  uint64_t v35 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v54, 1, 1, v34);
  sub_10008F80C((unint64_t *)&qword_100960998, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  sub_1000A06D0();
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_10008DB18(v35, (uint64_t *)&unk_10095BF60);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v32);
  if ((*(unsigned int (**)(char *, uint64_t))(v57 + 48))(v20, 1) == 1)
  {
    char v36 = &qword_100960988;
    uint64_t v37 = (uint64_t)v20;
  }
  else
  {
    uint64_t v38 = v47;
    sub_1000AA6F4((uint64_t)v20, v47);
    uint64_t v39 = v48;
    sub_1000AEF2C(v38, v48, &qword_100960990);
    uint64_t v40 = swift_getKeyPath();
    *(&v46 - 2) = __chkstk_darwin(v40);
    swift_getKeyPath();
    uint64_t v41 = type metadata accessor for Font.Design();
    uint64_t v42 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v49, 1, 1, v41);
    uint64_t v43 = static Font.system(size:weight:design:)();
    sub_10008DB18(v42, &qword_10094C448);
    v61[4] = v43;
    sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
    Class v44 = (void (*)(void *, void))AttributedString.subscript.modify();
    AttributedSubstring.subscript.setter();
    v44(v61, 0);
    sub_10008DB18(v39, &qword_100960990);
    uint64_t v37 = v38;
    char v36 = &qword_100960990;
  }
  return sub_10008DB18(v37, v36);
}

uint64_t sub_100526038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100251C78(a1, a2, a3, &qword_1009609A8);
}

uint64_t sub_100526044(uint64_t a1, uint64_t a2)
{
  return sub_100251CDC(a1, a2, &qword_1009609A8);
}

void sub_100526050()
{
}

void sub_100526078()
{
}

uint64_t sub_100526094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100251C78(a1, a2, a3, &qword_100960A28);
}

uint64_t sub_1005260A0(uint64_t a1, uint64_t a2)
{
  return sub_100251CDC(a1, a2, &qword_100960A28);
}

void sub_1005260AC()
{
}

void sub_1005260D4()
{
}

uint64_t sub_1005260F0@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v110 = a6;
  uint64_t v109 = a5;
  int v112 = a4;
  uint64_t v119 = a3;
  unint64_t v115 = a2;
  uint64_t v108 = a1;
  uint64_t v102 = a7;
  uint64_t v7 = type metadata accessor for AttributedString.Runs();
  uint64_t v113 = *(void *)(v7 - 8);
  uint64_t v114 = v7;
  __chkstk_darwin(v7);
  char v111 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v9 - 8);
  uint64_t v116 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100960988);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v99 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v104 = (char *)&v96 - v14;
  uint64_t v118 = sub_1000AFA94(&qword_100960990);
  uint64_t v121 = *(void *)(v118 - 8);
  uint64_t v15 = __chkstk_darwin(v118);
  uint64_t v97 = (uint64_t)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v96 = (uint64_t)&v96 - v18;
  __chkstk_darwin(v17);
  uint64_t v98 = (uint64_t)&v96 - v19;
  uint64_t v20 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v20 - 8);
  uint64_t v103 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for AttributedString();
  uint64_t v126 = *(void *)(v124 - 8);
  uint64_t v22 = __chkstk_darwin(v124);
  Swift::Int v117 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  Swift::Int v122 = (char *)&v96 - v25;
  __chkstk_darwin(v24);
  uint64_t v123 = (char *)&v96 - v26;
  uint64_t v120 = type metadata accessor for Locale();
  uint64_t v125 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v107 = (char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  __chkstk_darwin(v28 - 8);
  uint64_t v106 = (char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  __chkstk_darwin(v30 - 8);
  id v101 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  __chkstk_darwin(v32 - 8);
  unint64_t v105 = (uint64_t (*)(char *, uint64_t))type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v100 = *((void *)v105 - 1);
  __chkstk_darwin(v105);
  uint64_t v34 = (char *)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Duration.UnitsFormatStyle.Attributed();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v96 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v96 - v40;
  sub_1000AFA94(&qword_100960B10);
  type metadata accessor for Duration.UnitsFormatStyle.Unit();
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_10074E640;
  static Duration.UnitsFormatStyle.Unit.hours.getter();
  static Duration.UnitsFormatStyle.Unit.minutes.getter();
  sub_1002F0AA4(v42);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static Duration.UnitsFormatStyle.UnitWidth.narrow.getter();
  static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
  static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
  Duration.UnitsFormatStyle.init(allowedUnits:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
  Duration.UnitsFormatStyle.attributed.getter();
  (*(void (**)(char *, uint64_t (*)(char *, uint64_t)))(v100 + 8))(v34, v105);
  uint64_t v43 = v107;
  static Locale.autoupdatingCurrent.getter();
  Duration.UnitsFormatStyle.Attributed.locale(_:)();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v43, v120);
  Class v44 = *(uint64_t (**)(char *, uint64_t))(v36 + 8);
  uint64_t v107 = (char *)(v36 + 8);
  unint64_t v105 = v44;
  v44(v39, v35);
  sub_10008F80C(&qword_100960B18, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Attributed);
  id v45 = v123;
  uint64_t v106 = v41;
  uint64_t v108 = v35;
  Duration.formatted<A>(_:)();
  id v46 = [self mainBundle];
  NSString v47 = String._bridgeToObjectiveC()();
  id v48 = [v46 localizedStringForKey:v47 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1007509E0;
  uint64_t v51 = v126 + 16;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
  uint64_t v52 = v122;
  uint64_t v53 = v124;
  v50(v122, v45, v124);
  uint64_t v54 = String.init(_:)();
  uint64_t v56 = v55;
  *(void *)(v49 + 56) = &type metadata for String;
  *(void *)(v49 + 64) = sub_1000AA64C();
  *(void *)(v49 + 32) = v54;
  *(void *)(v49 + 40) = v56;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  uint64_t v57 = v45;
  uint64_t v58 = v102;
  uint64_t v59 = v53;
  AttributedString.init(_:attributes:)();
  v50(v52, (char *)v58, v53);
  uint64_t v60 = v51;
  unint64_t v115 = v50;
  v50(v117, v57, v53);
  uint64_t v127 = String.init(_:)();
  uint64_t v128 = v61;
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v125 + 56);
  uint64_t v63 = (uint64_t)v116;
  v125 += 56;
  v62(v116, 1, 1, v120);
  sub_10008F80C((unint64_t *)&qword_100960998, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  unint64_t v64 = sub_1000A06D0();
  id v65 = v104;
  uint64_t v103 = (char *)v64;
  AttributedStringProtocol.range<A>(of:options:locale:)();
  uint64_t v66 = (uint64_t)v65;
  sub_10008DB18(v63, (uint64_t *)&unk_10095BF60);
  swift_bridgeObjectRelease();
  uint64_t v67 = *(void (**)(char *, uint64_t))(v126 + 8);
  v126 += 8;
  v67(v52, v59);
  uint64_t v68 = *(uint64_t (**)(uint64_t, uint64_t))(v121 + 48);
  v121 += 48;
  int v69 = v68(v66, 1);
  id v101 = (unsigned int (*)(char *, uint64_t, uint64_t))v68;
  if (v69 == 1)
  {
    unint64_t v70 = &qword_100960988;
    uint64_t v71 = v66;
  }
  else
  {
    uint64_t v72 = v98;
    sub_1000AA6F4(v66, v98);
    sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
    AttributedString.replaceSubrange<A, B>(_:with:)();
    uint64_t v71 = v72;
    unint64_t v70 = &qword_100960990;
  }
  sub_10008DB18(v71, v70);
  uint64_t v73 = v60;
  uint64_t KeyPath = swift_getKeyPath();
  *(&v96 - 2) = __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  uint64_t v127 = v119;
  sub_1000AA6A0();
  swift_retain();
  AttributedString.subscript.setter();
  uint64_t v75 = v109;
  if (v109)
  {
    uint64_t v76 = swift_getKeyPath();
    *(&v96 - 2) = __chkstk_darwin(v76);
    swift_getKeyPath();
    uint64_t v127 = v75;
    sub_1000A5D60();
    swift_retain();
    AttributedString.subscript.setter();
  }
  uint64_t v77 = v110;
  if (v110)
  {
    uint64_t v78 = v122;
    uint64_t v79 = v124;
    uint64_t v80 = v115;
    v115(v122, (char *)v58, v124);
    uint64_t v109 = v73;
    v80(v117, v123, v79);
    swift_retain();
    uint64_t v127 = String.init(_:)();
    uint64_t v128 = v81;
    uint64_t v82 = (uint64_t)v116;
    v62(v116, 1, 1, v120);
    id v83 = v99;
    AttributedStringProtocol.range<A>(of:options:locale:)();
    sub_10008DB18(v82, (uint64_t *)&unk_10095BF60);
    swift_bridgeObjectRelease();
    v67(v78, v79);
    if (v101(v83, 1, v118) == 1)
    {
      swift_release();
      uint64_t v84 = &qword_100960988;
      uint64_t v85 = (uint64_t)v83;
    }
    else
    {
      uint64_t v86 = (uint64_t)v83;
      uint64_t v87 = v96;
      sub_1000AA6F4(v86, v96);
      uint64_t v88 = v97;
      sub_1000AEF2C(v87, v97, &qword_100960990);
      uint64_t v89 = swift_getKeyPath();
      *(&v96 - 2) = __chkstk_darwin(v89);
      swift_getKeyPath();
      uint64_t v129 = v77;
      swift_retain();
      sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
      uint64_t v90 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
      sub_1000A5D60();
      AttributedSubstring.subscript.setter();
      v90(&v127, 0);
      swift_release();
      sub_10008DB18(v88, &qword_100960990);
      uint64_t v85 = v87;
      uint64_t v84 = &qword_100960990;
    }
    sub_10008DB18(v85, v84);
  }
  BOOL v91 = v122;
  uint64_t v92 = v124;
  v115(v122, (char *)v58, v124);
  uint64_t v93 = (uint64_t)v111;
  AttributedString.runs.getter();
  v67(v91, v92);
  uint64_t v94 = v119;
  swift_retain();
  sub_10052D4B4(v93, v112 & 1, v58, v94);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v93, v114);
  v67(v123, v92);
  return v105(v106, v108);
}

uint64_t sub_100527048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v43 = a5;
  int v47 = a4;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v40 = a6;
  uint64_t v6 = type metadata accessor for AttributedString.Runs();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  id v46 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for Locale();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v38 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  __chkstk_darwin(v9 - 8);
  uint64_t v37 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  __chkstk_darwin(v11 - 8);
  v35[1] = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  __chkstk_darwin(v13 - 8);
  uint64_t v36 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v14 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Duration.UnitsFormatStyle.Attributed();
  v35[0] = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v35 - v21;
  sub_1000AFA94(&qword_100960B10);
  type metadata accessor for Duration.UnitsFormatStyle.Unit();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10074E640;
  static Duration.UnitsFormatStyle.Unit.hours.getter();
  static Duration.UnitsFormatStyle.Unit.minutes.getter();
  sub_1002F0AA4(v23);
  swift_setDeallocating();
  uint64_t v24 = v17;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static Duration.UnitsFormatStyle.UnitWidth.narrow.getter();
  static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
  static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
  uint64_t v25 = v35[0];
  uint64_t v26 = v40;
  Duration.UnitsFormatStyle.init(allowedUnits:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
  Duration.UnitsFormatStyle.attributed.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v36);
  uint64_t v27 = v42;
  uint64_t v28 = v38;
  static Locale.autoupdatingCurrent.getter();
  Duration.UnitsFormatStyle.Attributed.locale(_:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v41);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v30 = v20;
  uint64_t v31 = v43;
  v29(v30, v24);
  sub_10008F80C(&qword_100960B18, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Attributed);
  Duration.formatted<A>(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v51 = v27;
  sub_1000AA6A0();
  swift_retain();
  AttributedString.subscript.setter();
  if (v31)
  {
    uint64_t v32 = swift_getKeyPath();
    v35[-2] = __chkstk_darwin(v32);
    swift_getKeyPath();
    uint64_t v51 = v31;
    sub_1000A5D60();
    swift_retain();
    AttributedString.subscript.setter();
  }
  uint64_t v33 = (uint64_t)v46;
  AttributedString.runs.getter();
  swift_retain();
  sub_10052D4B4(v33, v47 & 1, v26, v27);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v33, v49);
  return ((uint64_t (*)(char *, uint64_t))v29)(v22, v24);
}

uint64_t sub_100527688(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a4;
  uint64_t v46 = a3;
  int v45 = a2;
  uint64_t v44 = type metadata accessor for AttributedString.CharacterView();
  __chkstk_darwin(v44);
  uint64_t v42 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AttributedSubstring();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  __chkstk_darwin(v6);
  uint64_t v39 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100960990);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100960B48);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_10008F80C(&qword_100960B50, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute);
  AttributedString.Runs.Run.subscript.getter();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_10008DB18((uint64_t)v13, &qword_100960B48);
  }
  uint64_t v38 = a1;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.unit(_:), v14);
  sub_10008F80C(&qword_100960B58, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v22 = v50[0];
  uint64_t v23 = v48;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v15 + 8);
  v24(v18, v14);
  if (v22 != v23) {
    return ((uint64_t (*)(char *, uint64_t))v24)(v20, v14);
  }
  uint64_t v36 = v14;
  uint64_t v37 = v20;
  AttributedString.Runs.Run.range.getter();
  if (v45)
  {
    sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
    uint64_t v25 = v39;
    AttributedString.subscript.getter();
    sub_10008DB18((uint64_t)v10, &qword_100960990);
    AttributedSubstring.characters.getter();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v41);
    sub_10008F80C(&qword_100960B60, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
    uint64_t v26 = (uint64_t)v10;
    v50[0] = String.init<A>(_:)();
    v50[1] = v27;
    sub_1000A06D0();
    uint64_t v28 = StringProtocol.localizedUppercase.getter();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    AttributedString.Runs.Run.range.getter();
    uint64_t v48 = v28;
    uint64_t v49 = v30;
    uint64_t v31 = (void (*)(void *, void))AttributedString.characters.modify();
    sub_10052DFA0();
    AttributedString.CharacterView.replaceSubrange<A>(_:with:)();
    sub_10008DB18(v26, &qword_100960990);
    v31(v50, 0);
    v24(v37, v36);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = swift_getKeyPath();
    *(&v35 - 2) = __chkstk_darwin(v32);
    swift_getKeyPath();
    uint64_t v48 = Font.smallCaps()();
    uint64_t v33 = (uint64_t)v10;
    sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
    uint64_t v34 = (void (*)(void *, void))AttributedString.subscript.modify();
    sub_1000AA6A0();
    AttributedSubstring.subscript.setter();
    v34(v50, 0);
    sub_10008DB18(v33, &qword_100960990);
    return ((uint64_t (*)(char *, uint64_t))v24)(v37, v36);
  }
}

uint64_t sub_100527CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = a3;
  uint64_t v21 = a6;
  uint64_t v10 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v10 - 8);
  id v11 = [self mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10074E640;
  *(void *)(v14 + 56) = &type metadata for String;
  unint64_t v15 = sub_1000AA64C();
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  *(void *)(v14 + 96) = &type metadata for String;
  *(void *)(v14 + 104) = v15;
  uint64_t v16 = v20;
  *(void *)(v14 + 64) = v15;
  *(void *)(v14 + 72) = v16;
  *(void *)(v14 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v23 = a5;
  sub_1000AA6A0();
  swift_retain();
  uint64_t v17 = v21;
  uint64_t result = AttributedString.subscript.setter();
  if (v21)
  {
    uint64_t v19 = swift_getKeyPath();
    *(&v20 - 2) = __chkstk_darwin(v19);
    swift_getKeyPath();
    uint64_t v23 = v17;
    sub_1000A5D60();
    swift_retain();
    return AttributedString.subscript.setter();
  }
  return result;
}

uint64_t sub_100527F64@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v82 = a7;
  uint64_t v84 = a6;
  uint64_t v85 = a8;
  uint64_t v86 = a5;
  uint64_t v12 = sub_1000AFA94(&qword_100960A18);
  __chkstk_darwin(v12 - 8);
  char v74 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v14 - 8);
  uint64_t v89 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for AttributedString();
  uint64_t v93 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v88 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100960988);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v79 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v83 = (char *)&v72 - v20;
  uint64_t v21 = sub_1000AFA94(&qword_100960990);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v91 = v21;
  uint64_t v92 = v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v72 = (uint64_t)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v81 = (uint64_t)&v72 - v26;
  __chkstk_darwin(v25);
  uint64_t v73 = (uint64_t)&v72 - v27;
  uint64_t v28 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v28 - 8);
  id v29 = [self mainBundle];
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = [v29 localizedStringForKey:v30 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10074E640;
  *(void *)(v32 + 56) = &type metadata for String;
  unint64_t v33 = sub_1000AA64C();
  v80._countAndFlagsBits = a1;
  *(void *)(v32 + 32) = a1;
  *(void *)(v32 + 40) = a2;
  *(void *)(v32 + 96) = &type metadata for String;
  *(void *)(v32 + 104) = v33;
  *(void *)(v32 + 64) = v33;
  *(void *)(v32 + 72) = a3;
  v90._countAndFlagsBits = a3;
  *(void *)(v32 + 80) = a4;
  v80._object = a2;
  swift_bridgeObjectRetain();
  v90._object = a4;
  swift_bridgeObjectRetain();
  uint64_t v34 = v84;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  uint64_t v35 = v85;
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v95[0]._countAndFlagsBits = v86;
  sub_1000AA6A0();
  swift_retain();
  uint64_t v36 = v35;
  AttributedString.subscript.setter();
  if (v34)
  {
    uint64_t v37 = swift_getKeyPath();
    *(&v72 - 2) = __chkstk_darwin(v37);
    swift_getKeyPath();
    v95[0]._countAndFlagsBits = v34;
    sub_1000A5D60();
    swift_retain();
    AttributedString.subscript.setter();
  }
  uint64_t v38 = v93;
  uint64_t v40 = v87;
  uint64_t v39 = v88;
  uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 16);
  v78(v88, v35, v87);
  v95[0] = v90;
  uint64_t v41 = type metadata accessor for Locale();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  uint64_t v44 = v42 + 56;
  uint64_t v45 = (uint64_t)v89;
  v43(v89, 1, 1, v41);
  uint64_t v46 = sub_10008F80C((unint64_t *)&qword_100960998, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  unint64_t v47 = sub_1000A06D0();
  uint64_t v84 = v46;
  uint64_t v48 = (uint64_t)v83;
  unint64_t v77 = v47;
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_10008DB18(v45, (uint64_t *)&unk_10095BF60);
  uint64_t v76 = *(void (**)(char *, uint64_t))(v38 + 8);
  v76(v39, v40);
  uint64_t v49 = v92 + 48;
  uint64_t v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
  int v50 = v75(v48, 1, v91);
  uint64_t v92 = v49;
  uint64_t v93 = v38 + 8;
  uint64_t v86 = v44;
  if (v50 == 1)
  {
    uint64_t v51 = v36;
    uint64_t v52 = &qword_100960988;
    uint64_t v53 = v48;
  }
  else
  {
    uint64_t v54 = v73;
    sub_1000AA6F4(v48, v73);
    uint64_t v55 = v81;
    sub_1000AEF2C(v54, v81, &qword_100960990);
    uint64_t v56 = swift_getKeyPath();
    *(&v72 - 2) = __chkstk_darwin(v56);
    id v83 = (char *)swift_getKeyPath();
    uint64_t v57 = v43;
    uint64_t v58 = v74;
    static Text.Scale.secondary.getter();
    uint64_t v59 = type metadata accessor for Text.Scale();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
    sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
    uint64_t v51 = v36;
    uint64_t v60 = (void (*)(Swift::String *, void))AttributedString.subscript.modify();
    sub_1000AA7AC();
    uint64_t v43 = v57;
    AttributedSubstring.subscript.setter();
    v60(v95, 0);
    sub_10008DB18(v55, &qword_100960990);
    uint64_t v53 = v54;
    uint64_t v52 = &qword_100960990;
  }
  uint64_t result = sub_10008DB18(v53, v52);
  uint64_t v62 = v82;
  if (v82)
  {
    uint64_t v63 = v88;
    v78(v88, v51, v40);
    v95[0] = v80;
    swift_bridgeObjectRetain();
    String.append(_:)(v90);
    uint64_t v64 = (uint64_t)v89;
    v43(v89, 1, 1, v41);
    swift_retain();
    uint64_t v65 = (uint64_t)v79;
    AttributedStringProtocol.range<A>(of:options:locale:)();
    sub_10008DB18(v64, (uint64_t *)&unk_10095BF60);
    swift_bridgeObjectRelease();
    v76(v63, v40);
    if (v75(v65, 1, v91) == 1)
    {
      swift_release();
      uint64_t v66 = &qword_100960988;
      uint64_t v67 = v65;
    }
    else
    {
      uint64_t v68 = v72;
      sub_1000AA6F4(v65, v72);
      uint64_t v69 = v81;
      sub_1000AEF2C(v68, v81, &qword_100960990);
      uint64_t v70 = swift_getKeyPath();
      *(&v72 - 2) = __chkstk_darwin(v70);
      swift_getKeyPath();
      uint64_t v96 = v62;
      swift_retain();
      sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
      uint64_t v71 = (void (*)(Swift::String *, void))AttributedString.subscript.modify();
      sub_1000A5D60();
      AttributedSubstring.subscript.setter();
      v71(v95, 0);
      swift_release();
      sub_10008DB18(v69, &qword_100960990);
      uint64_t v67 = v68;
      uint64_t v66 = &qword_100960990;
    }
    return sub_10008DB18(v67, v66);
  }
  return result;
}

uint64_t sub_100528968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v60 = a4;
  uint64_t v61 = a7;
  uint64_t v59 = a6;
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v13 - 8);
  uint64_t v55 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AttributedString();
  uint64_t v56 = *(void *)(v15 - 8);
  uint64_t v57 = v15;
  __chkstk_darwin(v15);
  uint64_t v53 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100960988);
  __chkstk_darwin(v17 - 8);
  uint64_t v54 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000AFA94(&qword_100960990);
  uint64_t v52 = *(void *)(v58 - 8);
  uint64_t v19 = __chkstk_darwin(v58);
  uint64_t v49 = (uint64_t)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v48 = (uint64_t)&v48 - v21;
  uint64_t v22 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v22 - 8);
  id v23 = [self mainBundle];
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10074E640;
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v27 = sub_1000AA64C();
  uint64_t v50 = a1;
  uint64_t v51 = a3;
  *(void *)(v26 + 32) = a1;
  *(void *)(v26 + 40) = a2;
  *(void *)(v26 + 96) = &type metadata for String;
  *(void *)(v26 + 104) = v27;
  *(void *)(v26 + 64) = v27;
  *(void *)(v26 + 72) = a3;
  uint64_t v28 = v59;
  id v29 = v60;
  *(void *)(v26 + 80) = v60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  uint64_t v30 = a8;
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v63[0] = a5;
  sub_1000AA6A0();
  swift_retain();
  uint64_t result = AttributedString.subscript.setter();
  if (v28)
  {
    uint64_t v32 = swift_getKeyPath();
    *(&v48 - 2) = __chkstk_darwin(v32);
    swift_getKeyPath();
    v63[0] = v28;
    sub_1000A5D60();
    swift_retain();
    uint64_t result = AttributedString.subscript.setter();
  }
  uint64_t v33 = v61;
  if (v61)
  {
    uint64_t v35 = v56;
    uint64_t v34 = v57;
    uint64_t v36 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v53, v30, v57);
    v63[0] = v50;
    v63[1] = a2;
    swift_bridgeObjectRetain();
    v37._countAndFlagsBits = 32;
    v37._object = (void *)0xE100000000000000;
    String.append(_:)(v37);
    swift_retain();
    swift_bridgeObjectRetain();
    v38._countAndFlagsBits = v51;
    v38._object = v29;
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    uint64_t v39 = type metadata accessor for Locale();
    uint64_t v40 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v55, 1, 1, v39);
    sub_10008F80C((unint64_t *)&qword_100960998, (void (*)(uint64_t))&type metadata accessor for AttributedString);
    sub_1000A06D0();
    uint64_t v41 = (uint64_t)v54;
    AttributedStringProtocol.range<A>(of:options:locale:)();
    sub_10008DB18(v40, (uint64_t *)&unk_10095BF60);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v41, 1, v58) == 1)
    {
      swift_release();
      uint64_t v42 = &qword_100960988;
      uint64_t v43 = v41;
    }
    else
    {
      uint64_t v44 = v48;
      sub_1000AA6F4(v41, v48);
      uint64_t v45 = v49;
      sub_1000AEF2C(v44, v49, &qword_100960990);
      uint64_t v46 = swift_getKeyPath();
      *(&v48 - 2) = __chkstk_darwin(v46);
      swift_getKeyPath();
      v63[4] = v33;
      swift_retain();
      sub_1000AA75C((unint64_t *)&qword_1009609A0, &qword_100960990);
      unint64_t v47 = (void (*)(void *, void))AttributedString.subscript.modify();
      sub_1000A5D60();
      AttributedSubstring.subscript.setter();
      v47(v63, 0);
      swift_release();
      sub_10008DB18(v45, &qword_100960990);
      uint64_t v43 = v44;
      uint64_t v42 = &qword_100960990;
    }
    return sub_10008DB18(v43, v42);
  }
  return result;
}

id sub_10052904C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v13 = [self mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100752410;
  *(void *)(v16 + 56) = &type metadata for String;
  unint64_t v17 = sub_1000AA64C();
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a2;
  *(void *)(v16 + 96) = &type metadata for String;
  *(void *)(v16 + 104) = v17;
  *(void *)(v16 + 64) = v17;
  *(void *)(v16 + 72) = a3;
  *(void *)(v16 + 80) = a4;
  *(void *)(v16 + 136) = &type metadata for String;
  *(void *)(v16 + 144) = v17;
  *(void *)(v16 + 112) = a5;
  *(void *)(v16 + 120) = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v18 = sub_10052DAE0(a7, 33, 0);
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 64) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 40) = v18;
  uint64_t v20 = NSFontAttributeName;
  id v21 = v18;
  sub_10005BB4C(inited, &qword_100952850, &qword_100952858, (uint64_t (*)(uint64_t))sub_10005BC7C);
  id v22 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F80C((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v25 = [v22 initWithString:v23 attributes:isa];

  return v25;
}

unint64_t sub_10052931C(Swift::UInt a1, char a2)
{
  char v4 = a2 & 1;
  Hasher.init(_seed:)();
  if ((a2 & 1) == 0) {
    Hasher._combine(_:)(3uLL);
  }
  Hasher._combine(_:)(a1);
  Swift::Int v5 = Hasher._finalize()();

  return sub_10052A45C(a1, v4, v5);
}

unint64_t sub_1005293A4(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 + 1);
  Swift::Int v2 = Hasher._finalize()();
  return sub_1000D69D4(a1, v2);
}

unint64_t sub_100529410(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_10005BD10(a1, v2);
}

unint64_t sub_1005294A0(Swift::UInt a1, Swift::UInt a2, double a3, double a4)
{
  Hasher.init(_seed:)();
  sub_10048163C(a3, a4, (uint64_t)v10, a1, a2);
  Swift::Int v8 = Hasher._finalize()();

  return sub_10052A520(a1, a2, v8, a3, a4);
}

unint64_t sub_100529538(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10052A5B4(a1, v2);
}

unint64_t sub_100529660(uint64_t a1)
{
  type metadata accessor for Date();
  sub_10008F80C((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_10008F92C(a1, v2, (uint64_t (*)(void))&type metadata accessor for Date, (unint64_t *)&qword_100951FE0, (void (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_100529734(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10052A808(a1, v4);
}

unint64_t sub_100529778(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10052A914(a1, v2);
}

unint64_t sub_100529888(uint64_t a1)
{
  type metadata accessor for DateComponents();
  sub_10008F80C(&qword_10094F290, (void (*)(uint64_t))&type metadata accessor for DateComponents);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_10008F92C(a1, v2, (uint64_t (*)(void))&type metadata accessor for DateComponents, &qword_10094F298, (void (*)(uint64_t))&type metadata accessor for DateComponents, (uint64_t)&protocol conformance descriptor for DateComponents);
}

unint64_t sub_10052995C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10052AB3C(a1, v4);
}

unint64_t sub_1005299A0(uint64_t a1)
{
  type metadata accessor for EffortUtilities.WorkoutAndActivityKey();
  sub_10008F80C(&qword_10095FEE8, (void (*)(uint64_t))&type metadata accessor for EffortUtilities.WorkoutAndActivityKey);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_10008F92C(a1, v2, (uint64_t (*)(void))&type metadata accessor for EffortUtilities.WorkoutAndActivityKey, &qword_100960A78, (void (*)(uint64_t))&type metadata accessor for EffortUtilities.WorkoutAndActivityKey, (uint64_t)&protocol conformance descriptor for EffortUtilities.WorkoutAndActivityKey);
}

uint64_t sub_100529A74(uint64_t a1)
{
  return sub_10052A0C8(a1, (void (*)(uint64_t))sub_100252154, (uint64_t (*)(uint64_t, Swift::Int))sub_10052AC58);
}

unint64_t sub_100529AA0(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10052B04C(a1 & 1, v2);
}

unint64_t sub_100529B44(uint64_t a1)
{
  type metadata accessor for IndexPath();
  sub_10008F80C(&qword_10095FD98, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_10008F92C(a1, v2, (uint64_t (*)(void))&type metadata accessor for IndexPath, &qword_100960A48, (void (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
}

unint64_t sub_100529C18(double a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();

  return sub_10052B18C(v2, a1);
}

unint64_t sub_100529C60(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10052B224(a1, v2);
}

unint64_t sub_100529D94(unsigned __int8 a1)
{
  Swift::Int v2 = sub_1004809A8();

  return sub_10052B49C(a1, v2);
}

unint64_t sub_100529DD8(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10052BB30(a1, v2);
}

unint64_t sub_100529EDC(Swift::UInt a1, int a2)
{
  Hasher.init(_seed:)();
  sub_1004B7CF0((uint64_t)v6, a1, a2);
  Swift::Int v4 = Hasher._finalize()();

  return sub_10052BD40(a1, a2, v4);
}

unint64_t sub_100529F54(Swift::UInt a1, int a2)
{
  int v4 = a2;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  if (v4 == 2)
  {
    Swift::UInt8 v5 = 0;
  }
  else
  {
    Swift::UInt8 v5 = a2 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v5);
  Swift::Int v6 = Hasher._finalize()();

  return sub_10052BEB0(a1, a2, v6);
}

unint64_t sub_10052A000(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10052BF58(a1 & 1, v2);
}

uint64_t sub_10052A09C(uint64_t a1)
{
  return sub_10052A0C8(a1, (void (*)(uint64_t))sub_10065204C, (uint64_t (*)(uint64_t, Swift::Int))sub_10052C090);
}

uint64_t sub_10052A0C8(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, Swift::Int))
{
  Hasher.init(_seed:)();
  a2(a1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();

  return a3(a1, v5);
}

unint64_t sub_10052A164(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10052C490(a1 & 1, v2);
}

unint64_t sub_10052A200(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10052C598(a1, v2);
}

unint64_t sub_10052A2B4(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10052C714(a1 & 1, v2);
}

unint64_t sub_10052A354(unsigned __int8 a1)
{
  Swift::Int v2 = sub_100480D38();

  return sub_10052C84C(a1, v2);
}

uint64_t sub_10052A3A4()
{
  return 8;
}

uint64_t sub_10052A3B0()
{
  return swift_release();
}

uint64_t sub_10052A3B8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_10052A3CC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_10052A3D8()
{
}

void sub_10052A3F8()
{
}

uint64_t sub_10052A420()
{
  return 8;
}

uint64_t sub_10052A42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100251C78(a1, a2, a3, &qword_1009609A8) & 1;
}

uint64_t sub_10052A450(uint64_t a1, uint64_t a2)
{
  return sub_100251CDC(a1, a2, &qword_1009609A8);
}

unint64_t sub_10052A45C(unint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    BOOL v8 = (a2 & 1) == 0;
    BOOL v9 = a1 < 2 || (a2 & 1) == 0;
    BOOL v10 = a1 != 1 || (a2 & 1) == 0;
    if (a1) {
      BOOL v8 = 1;
    }
    do
    {
      uint64_t v11 = *(void *)(v3 + 48) + 16 * result;
      uint64_t v12 = *(void *)v11;
      if (*(unsigned char *)(v11 + 8) == 1)
      {
        if (v12)
        {
          if (v12 == 1)
          {
            if (!v10) {
              return result;
            }
          }
          else if (!v9)
          {
            return result;
          }
        }
        else if (!v8)
        {
          return result;
        }
      }
      else if ((a2 & 1) == 0 && v12 == a1)
      {
        return result;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10052A520(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t result = a3 & ~v7;
  if ((*(void *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v9 = ~v7;
    do
    {
      uint64_t v10 = *(void *)(v5 + 48) + 32 * result;
      double v11 = *(double *)v10;
      double v12 = *(double *)(v10 + 8);
      uint64_t v14 = *(void *)(v10 + 16);
      uint64_t v13 = *(void *)(v10 + 24);
      BOOL v15 = v11 == a4;
      if (v12 != a5) {
        BOOL v15 = 0;
      }
      BOOL v16 = v14 == a1 && v15;
      if (v13 == a2 && v16) {
        break;
      }
      unint64_t result = (result + 1) & v9;
    }
    while (((*(void *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10052A5B4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xD000000000000017;
      unint64_t v8 = 0x80000001007B5860;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v9 = "VO2MAX_BUCKET_VERY_POOR";
          goto LABEL_7;
        case 2:
          uint64_t v9 = "VO2MAX_BUCKET_POOR";
          goto LABEL_7;
        case 3:
          uint64_t v9 = "VO2MAX_BUCKET_FAIR";
LABEL_7:
          unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v7 = 0xD000000000000012;
          break;
        case 4:
          unint64_t v7 = 0xD000000000000017;
          uint64_t v10 = "VO2MAX_BUCKET_GOOD";
          goto LABEL_10;
        case 5:
          unint64_t v7 = 0xD000000000000016;
          uint64_t v10 = "VO2MAX_BUCKET_EXCELLENT";
LABEL_10:
          unint64_t v8 = (unint64_t)v10 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v11 = 0xD000000000000017;
      unint64_t v12 = 0x80000001007B5860;
      switch(v6)
      {
        case 1:
          uint64_t v13 = "VO2MAX_BUCKET_VERY_POOR";
          goto LABEL_15;
        case 2:
          uint64_t v13 = "VO2MAX_BUCKET_POOR";
          goto LABEL_15;
        case 3:
          uint64_t v13 = "VO2MAX_BUCKET_FAIR";
LABEL_15:
          unint64_t v12 = (unint64_t)v13 | 0x8000000000000000;
          unint64_t v11 = 0xD000000000000012;
          goto LABEL_16;
        case 4:
          unint64_t v14 = 0xD000000000000017;
          BOOL v15 = "VO2MAX_BUCKET_GOOD";
          goto LABEL_20;
        case 5:
          unint64_t v14 = 0xD000000000000016;
          BOOL v15 = "VO2MAX_BUCKET_EXCELLENT";
LABEL_20:
          unint64_t v12 = (unint64_t)v15 | 0x8000000000000000;
          if (v7 == v14) {
            goto LABEL_21;
          }
          goto LABEL_22;
        default:
LABEL_16:
          if (v7 != v11) {
            goto LABEL_22;
          }
LABEL_21:
          if (v8 == v12)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_22:
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v16) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10052A808(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CatalogItemViewModel();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = static NSObject.== infix(_:_:)();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10052A914(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE300000000000000;
      unint64_t v8 = 7105633;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v9 = 1818324839;
          goto LABEL_8;
        case 2:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x68746C616568;
          break;
        case 3:
          unint64_t v8 = 0x6163696669746F6ELL;
          unint64_t v7 = 0xED0000736E6F6974;
          break;
        case 4:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v9 = 1953066613;
LABEL_8:
          unint64_t v8 = v9 & 0xFFFF0000FFFFFFFFLL | 0x7300000000;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xE300000000000000;
      uint64_t v11 = 7105633;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v12 = 1818324839;
          goto LABEL_17;
        case 2:
          unint64_t v10 = 0xE600000000000000;
          if (v8 != 0x68746C616568) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          uint64_t v11 = 0x6163696669746F6ELL;
          unint64_t v10 = 0xED0000736E6F6974;
          goto LABEL_14;
        case 4:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v12 = 1953066613;
LABEL_17:
          if (v8 == (v12 & 0xFFFF0000FFFFFFFFLL | 0x7300000000)) {
            goto LABEL_18;
          }
          goto LABEL_19;
        default:
LABEL_14:
          if (v8 != v11) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10052AB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = static NSObject.== infix(_:_:)();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10052AC58(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE600000000000000;
      unint64_t v8 = 0x72656B72616DLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x65636E6174736964;
          break;
        case 2:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1701669236;
          break;
        case 3:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1701011824;
          break;
        case 4:
          unint64_t v8 = 0x7461527472616568;
          unint64_t v7 = 0xE900000000000065;
          break;
        case 5:
          unint64_t v7 = 0xE500000000000000;
          unint64_t v8 = 0x7265776F70;
          break;
        case 6:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x65636E65646163;
          break;
        case 7:
          unint64_t v8 = 0x796772656E65;
          break;
        case 8:
          unint64_t v7 = 0xE500000000000000;
          unint64_t v8 = 0x6465657073;
          break;
        case 9:
          unint64_t v8 = 0x43676E696C637963;
          unint64_t v7 = 0xEE0065636E656461;
          break;
        case 0xA:
          unint64_t v7 = 0x80000001007B5470;
          unint64_t v8 = 0xD000000000000012;
          break;
        case 0xB:
          unint64_t v8 = 0x536D756D6978616DLL;
          unint64_t v7 = 0xEC00000064656570;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE600000000000000;
      unint64_t v10 = 0x72656B72616DLL;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE800000000000000;
          if (v8 == 0x65636E6174736964) {
            goto LABEL_36;
          }
          goto LABEL_37;
        case 2:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1701669236) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 3:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1701011824) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 4:
          unint64_t v9 = 0xE900000000000065;
          if (v8 != 0x7461527472616568) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 5:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x7265776F70) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 6:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x65636E65646163) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 7:
          if (v8 != 0x796772656E65) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 8:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x6465657073) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 9:
          unint64_t v9 = 0xEE0065636E656461;
          if (v8 != 0x43676E696C637963) {
            goto LABEL_37;
          }
          goto LABEL_36;
        case 10:
          unint64_t v9 = 0x80000001007B5470;
          unint64_t v10 = 0xD000000000000012;
          goto LABEL_35;
        case 11:
          unint64_t v9 = 0xEC00000064656570;
          if (v8 != 0x536D756D6978616DLL) {
            goto LABEL_37;
          }
          goto LABEL_36;
        default:
LABEL_35:
          if (v8 != v10) {
            goto LABEL_37;
          }
LABEL_36:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_37:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10052B04C(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x6D6F74737563;
    }
    else {
      uint64_t v6 = 0x647261646E617473;
    }
    if (a1) {
      unint64_t v7 = 0xE600000000000000;
    }
    else {
      unint64_t v7 = 0xE800000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x6D6F74737563 : 0x647261646E617473;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE600000000000000 : 0xE800000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_10052B18C(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10052B224(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x796144664F646E65;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xEA00000000007379;
          uint64_t v8 = 0x61446D6F74737563;
          break;
        case 2:
          uint64_t v8 = 0x656557664F646E65;
          unint64_t v7 = 0xE90000000000006BLL;
          break;
        case 3:
          uint64_t v8 = 0x6E6F4D664F646E65;
          unint64_t v7 = 0xEA00000000006874;
          break;
        case 4:
          uint64_t v8 = 0x6369666963657073;
          unint64_t v7 = 0xEC00000065746144;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE800000000000000;
      uint64_t v10 = 0x796144664F646E65;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEA00000000007379;
          if (v8 == 0x61446D6F74737563) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          unint64_t v9 = 0xE90000000000006BLL;
          if (v8 != 0x656557664F646E65) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          uint64_t v10 = 0x6E6F4D664F646E65;
          unint64_t v9 = 0xEA00000000006874;
          goto LABEL_14;
        case 4:
          unint64_t v9 = 0xEC00000065746144;
          if (v8 != 0x6369666963657073) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v10) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10052B49C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE300000000000000;
      uint64_t v8 = 7105633;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x6F6C614365766F6DLL;
          unint64_t v7 = 0xEC00000073656972;
          break;
        case 2:
          uint64_t v8 = 0x6F6C694B65766F6DLL;
          unint64_t v7 = 0xEE0073656C756F6ALL;
          break;
        case 3:
          uint64_t v8 = 0x756E694D65766F6DLL;
          unint64_t v7 = 0xEB00000000736574;
          break;
        case 4:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6573696372657865;
          break;
        case 5:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x646E617473;
          break;
        case 6:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1819045746;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 7105633;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEC00000073656972;
          if (v8 == 0x6F6C614365766F6DLL) {
            goto LABEL_21;
          }
          goto LABEL_22;
        case 2:
          unint64_t v9 = 0xEE0073656C756F6ALL;
          if (v8 != 0x6F6C694B65766F6DLL) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 3:
          unint64_t v9 = 0xEB00000000736574;
          if (v8 != 0x756E694D65766F6DLL) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 4:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x6573696372657865) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 5:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x646E617473;
          goto LABEL_20;
        case 6:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1819045746) {
            goto LABEL_22;
          }
          goto LABEL_21;
        default:
LABEL_20:
          if (v8 != v10) {
            goto LABEL_22;
          }
LABEL_21:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_22:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10052B7A4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE700000000000000;
      uint64_t v8 = 0x736C6961746564;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x7374696C7073;
          break;
        case 2:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x73746E656D676573;
          break;
        case 3:
          uint64_t v8 = 0x6C61767265746E69;
          goto LABEL_11;
        case 4:
          unint64_t v7 = 0xE900000000000065;
          uint64_t v8 = 0x7461527472616568;
          break;
        case 5:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x7265776F70;
          break;
        case 6:
          uint64_t v8 = 0x6C6C69686E776F64;
          unint64_t v7 = 0xEC000000736E7552;
          break;
        case 7:
          uint64_t v8 = 0x70614C6B63617274;
LABEL_11:
          unint64_t v7 = 0xE900000000000073;
          break;
        case 8:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x737465536D697773;
          break;
        case 9:
          unint64_t v7 = 0xE300000000000000;
          uint64_t v8 = 7364973;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE700000000000000;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE600000000000000;
          if (v8 == 0x7374696C7073) {
            goto LABEL_16;
          }
          goto LABEL_17;
        case 2:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x73746E656D676573) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 3:
          uint64_t v11 = 0x6C61767265746E69;
          goto LABEL_32;
        case 4:
          unint64_t v9 = 0xE900000000000065;
          if (v8 != 0x7461527472616568) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 5:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x7265776F70) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 6:
          unint64_t v9 = 0xEC000000736E7552;
          if (v8 != 0x6C6C69686E776F64) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 7:
          uint64_t v11 = 0x70614C6B63617274;
LABEL_32:
          unint64_t v9 = 0xE900000000000073;
          if (v8 != v11) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 8:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x737465536D697773) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 9:
          unint64_t v9 = 0xE300000000000000;
          if (v8 != 7364973) {
            goto LABEL_17;
          }
          goto LABEL_16;
        default:
          if (v8 != 0x736C6961746564) {
            goto LABEL_17;
          }
LABEL_16:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_17:
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v10) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10052BB30(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 0x74696C7073;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x70536D6F74737563;
          unint64_t v7 = 0xEB0000000074696CLL;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x746E656D676573;
          break;
        case 3:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6C61767265746E69;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x74696C7073;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEB0000000074696CLL;
          if (v8 == 0x70536D6F74737563) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x746E656D676573;
          goto LABEL_11;
        case 3:
          unint64_t v9 = 0xE800000000000000;
          if (v8 == 0x6C61767265746E69) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v8 != v10) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10052BD40(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    while (2)
    {
      uint64_t v8 = *(void *)(v3 + 48) + 16 * result;
      unsigned int v9 = *(unsigned __int16 *)(v8 + 8);
      switch(v9 >> 8)
      {
        case 2u:
          if ((a2 & 0xFF00) != 0x200) {
            goto LABEL_4;
          }
          break;
        case 3u:
          if ((a2 & 0xFF00) != 0x300) {
            goto LABEL_4;
          }
          break;
        case 4u:
          if ((a2 & 0xFF00) != 0x400) {
            goto LABEL_4;
          }
          break;
        case 5u:
          if ((a2 & 0xFF00) != 0x500) {
            goto LABEL_4;
          }
          break;
        case 6u:
          if ((a2 & 0xFF00) != 0x600) {
            goto LABEL_4;
          }
          break;
        default:
          if ((BYTE1(a2) - 7) <= 0xFAu && *(void *)v8 == a1)
          {
            if (*(_WORD *)(v8 + 8) == 2)
            {
              if (a2 == 2 && (((a2 ^ v9) >> 8) & 1) == 0) {
                return result;
              }
            }
            else if (a2 != 2 && ((a2 ^ ((v9 & 1) == 0)) & 1) != 0 && (((a2 ^ v9) >> 8) & 1) == 0)
            {
              return result;
            }
          }
LABEL_4:
          unint64_t result = (result + 1) & v7;
          if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result)) {
            continue;
          }
          break;
      }
      break;
    }
  }
  return result;
}

unint64_t sub_10052BEB0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = *(void *)(v3 + 48) + 16 * result;
      if (*(void *)v8 == a1)
      {
        int v9 = *(unsigned __int8 *)(v8 + 8);
        if (v9 == 2)
        {
          if (a2 == 2) {
            return result;
          }
        }
        else
        {
          BOOL v10 = (v9 & 1) == 0;
          if a2 != 2 && ((a2 ^ v10)) {
            return result;
          }
        }
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10052BF58(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x747365776F6C73;
    }
    else {
      uint64_t v6 = 0x74736574736166;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x747365776F6C73 : 0x74736574736166;
      if (v7 == v6) {
        break;
      }
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_10052C090(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE900000000000065;
      unint64_t v8 = 0x7461527472616568;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1701011824;
          break;
        case 2:
          unint64_t v7 = 0xE90000000000006ELL;
          unint64_t v8 = 0x6F69746176656C65;
          break;
        case 3:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x65636E65646163;
          break;
        case 4:
          unint64_t v7 = 0xE500000000000000;
          unint64_t v8 = 0x7265776F70;
          break;
        case 5:
          unint64_t v7 = 0x80000001007B5960;
          unint64_t v8 = 0xD000000000000011;
          break;
        case 6:
          unint64_t v8 = 0x654C656469727473;
          unint64_t v7 = 0xEC0000006874676ELL;
          break;
        case 7:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x80000001007B5980;
          break;
        case 8:
          unint64_t v7 = 0xE500000000000000;
          unint64_t v8 = 0x6465657073;
          break;
        case 9:
          unint64_t v8 = 0x53676E696C637963;
          unint64_t v7 = 0xEC00000064656570;
          break;
        case 0xA:
          unint64_t v8 = 0x43676E696C637963;
          unint64_t v7 = 0xEE0065636E656461;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x7461527472616568;
      unint64_t v10 = 0xE900000000000065;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE400000000000000;
          if (v8 == 1701011824) {
            goto LABEL_33;
          }
          goto LABEL_34;
        case 2:
          unint64_t v10 = 0xE90000000000006ELL;
          if (v8 != 0x6F69746176656C65) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 3:
          unint64_t v10 = 0xE700000000000000;
          if (v8 != 0x65636E65646163) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 4:
          unint64_t v10 = 0xE500000000000000;
          if (v8 != 0x7265776F70) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 5:
          unint64_t v10 = 0x80000001007B5960;
          if (v8 != 0xD000000000000011) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 6:
          unint64_t v10 = 0xEC0000006874676ELL;
          if (v8 != 0x654C656469727473) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 7:
          unint64_t v10 = 0x80000001007B5980;
          if (v8 != 0xD000000000000013) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 8:
          unint64_t v10 = 0xE500000000000000;
          if (v8 != 0x6465657073) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 9:
          uint64_t v9 = 0x53676E696C637963;
          unint64_t v10 = 0xEC00000064656570;
          goto LABEL_32;
        case 10:
          unint64_t v10 = 0xEE0065636E656461;
          if (v8 != 0x43676E696C637963) {
            goto LABEL_34;
          }
          goto LABEL_33;
        default:
LABEL_32:
          if (v8 != v9) {
            goto LABEL_34;
          }
LABEL_33:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_34:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10052C490(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x747365676E6F6CLL;
    }
    else {
      uint64_t v6 = 0x746E6572727563;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x747365676E6F6CLL : 0x746E6572727563;
      if (v7 == v6) {
        break;
      }
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_10052C598(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x68746E6F6DLL;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1918985593;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE400000000000000;
            if (v8 != 1801807223) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE400000000000000;
        uint64_t v8 = 1801807223;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x68746E6F6DLL;
      }
      else {
        uint64_t v10 = 1918985593;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE500000000000000;
      }
      else {
        unint64_t v11 = 0xE400000000000000;
      }
      if (v8 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_10052C714(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 1953718636;
    }
    else {
      uint64_t v6 = 0x746E6572727563;
    }
    if (a1) {
      unint64_t v7 = 0xE400000000000000;
    }
    else {
      unint64_t v7 = 0xE700000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 1953718636 : 0x746E6572727563;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE400000000000000 : 0xE700000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_10052C84C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE300000000000000;
      unint64_t v8 = 7105633;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x7449726F466F67;
          break;
        case 2:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x7974697669746361;
          break;
        case 3:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x7374756F6B726F77;
          break;
        case 4:
          unint64_t v8 = 0x507373656E746966;
          unint64_t v7 = 0xEB0000000073756CLL;
          break;
        case 5:
          unint64_t v8 = 0x45646574696D696CLL;
          unint64_t v7 = 0xEE006E6F69746964;
          break;
        case 6:
          unint64_t v7 = 0x80000001007C9E80;
          unint64_t v8 = 0xD000000000000010;
          break;
        case 7:
          unint64_t v8 = 0x74697465706D6F63;
          unint64_t v7 = 0xEC000000736E6F69;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 7105633;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE700000000000000;
          if (v8 == 0x7449726F466F67) {
            goto LABEL_24;
          }
          goto LABEL_25;
        case 2:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x7974697669746361) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 3:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x7374756F6B726F77) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 4:
          unint64_t v9 = 0xEB0000000073756CLL;
          if (v8 != 0x507373656E746966) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 5:
          unint64_t v9 = 0xEE006E6F69746964;
          if (v8 != 0x45646574696D696CLL) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 6:
          unint64_t v9 = 0x80000001007C9E80;
          if (v8 != 0xD000000000000010) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 7:
          uint64_t v10 = 0x74697465706D6F63;
          unint64_t v9 = 0xEC000000736E6F69;
          goto LABEL_23;
        default:
LABEL_23:
          if (v8 != v10) {
            goto LABEL_25;
          }
LABEL_24:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_25:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10052CB80(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_1009609E8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_1000AFA94(&qword_10095FFD0);
    unint64_t v7 = (void *)static _DictionaryStorage.allocate(capacity:)();
    uint64_t v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1000AEF2C(v9, (uint64_t)v5, &qword_1009609E8);
      Swift::UInt v11 = *(void *)v5;
      char v12 = v5[8];
      unint64_t result = sub_10052931C(*(void *)v5, v12);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = v7[6] + 16 * result;
      *(void *)uint64_t v16 = v11;
      *(unsigned char *)(v16 + 8) = v12;
      uint64_t v17 = v7[7];
      uint64_t v18 = type metadata accessor for MetricDetailViewModel();
      unint64_t result = sub_10052DCF8(v8, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v15);
      uint64_t v19 = v7[2];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        goto LABEL_10;
      }
      v7[2] = v21;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10052CD40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_1000AFA94(&qword_10095FFC0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  Swift::UInt v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unint64_t result = sub_10052931C(v4, v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = v3[6] + 16 * result;
    *(void *)uint64_t v10 = v4;
    *(unsigned char *)(v10 + 8) = v5 & 1;
    *(void *)(v3[7] + 8 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    char v14 = v9 + 3;
    Swift::UInt v4 = *(v9 - 2);
    char v5 = *((unsigned char *)v9 - 8);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10052931C(v4, v5);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10052CE68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1000AFA94(&qword_10095FB48);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1000D696C(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000D696C(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10052CF6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000AFA94(&qword_1009609B8);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (unint64_t i = (double *)(a1 + 64); ; i += 5)
    {
      double v5 = *(i - 4);
      double v6 = *(i - 3);
      Swift::UInt v7 = *((void *)i - 2);
      Swift::UInt v8 = *((void *)i - 1);
      char v9 = *(unsigned char *)i;
      unint64_t result = sub_1005294A0(v7, v8, v5, v6);
      if (v11) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      BOOL v12 = (double *)(v3[6] + 32 * result);
      *BOOL v12 = v5;
      v12[1] = v6;
      *((void *)v12 + 2) = v7;
      *((void *)v12 + 3) = v8;
      *(unsigned char *)(v3[7] + result) = v9;
      uint64_t v13 = v3[2];
      BOOL v14 = __OFADD__(v13, 1);
      uint64_t v15 = v13 + 1;
      if (v14) {
        goto LABEL_10;
      }
      v3[2] = v15;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10052D064(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000AFA94(&qword_1009609E0);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (unint64_t i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_1005293A4(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10052D13C(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100960A70);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned __int8 v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_1000AFA94(&qword_10095FEC8);
    Swift::UInt v7 = (void *)static _DictionaryStorage.allocate(capacity:)();
    char v8 = (char *)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1000AEF2C(v9, (uint64_t)v5, &qword_100960A70);
      uint64_t v11 = *v5;
      unint64_t result = sub_100005758(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for ImpressionMetrics();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v8, v16);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10052D304(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100960B08);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned __int8 v5 = (unsigned __int8 *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_1000AFA94(&qword_10095FFC8);
    Swift::UInt v7 = (void *)static _DictionaryStorage.allocate(capacity:)();
    uint64_t v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1000AEF2C(v9, (uint64_t)v5, &qword_100960B08);
      unsigned __int8 v11 = *v5;
      unint64_t result = sub_1000D696C(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v7[6] + result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for MetricDetailViewModel();
      unint64_t result = sub_10052DCF8(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_10052D4B4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v53 = type metadata accessor for AttributedString.Runs.Run();
  uint64_t v6 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v42 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v56 = type metadata accessor for AttributedString.Runs.Index();
  uint64_t v8 = *(void *)(v56 - 8);
  uint64_t v9 = __chkstk_darwin(v56);
  uint64_t v57 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v61 = &v38[-v11];
  uint64_t v12 = sub_1000AFA94(&qword_100960B20);
  __chkstk_darwin(v12 - 8);
  uint64_t v52 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for AttributedString.Runs();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v38[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1000AFA94(&qword_100960B28);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = &v38[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  v15 += 16;
  uint64_t v48 = v22;
  v22(v17, a1, v14);
  sub_10008F80C(&qword_100960B30, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs);
  uint64_t v49 = v17;
  dispatch thunk of Sequence.makeIterator()();
  NSString v23 = &v21[*(int *)(v19 + 44)];
  NSString v24 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16);
  uint64_t v58 = v8 + 16;
  uint64_t v54 = (void (**)(unsigned char *, uint64_t))(v8 + 8);
  uint64_t v55 = v24;
  uint64_t v25 = (uint64_t)v21;
  uint64_t v46 = (void (**)(unsigned char *, uint64_t))(v15 - 8);
  unint64_t v47 = (void (**)(unsigned char *))(v6 + 16);
  uint64_t v50 = v15;
  uint64_t v51 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v45 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v40 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32);
  uint64_t v41 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  int v39 = a2 & 1;
  while (1)
  {
    uint64_t v26 = v56;
    v55(v61, v23, v56);
    sub_10008F80C(&qword_100960B38, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs);
    unint64_t v27 = v57;
    dispatch thunk of Collection.endIndex.getter();
    sub_10008F80C(&qword_100960B40, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs.Index);
    char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v29 = v25;
    uint64_t v30 = *v54;
    (*v54)(v27, v26);
    v30(v61, v26);
    if (v28)
    {
      (*v51)(v52, 1, 1, v53);
      uint64_t v25 = v29;
      return sub_10008DB18(v25, &qword_100960B28);
    }
    uint64_t v25 = v29;
    id v31 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v33 = v52;
    uint64_t v32 = v53;
    (*v47)(v52);
    v31(v60, 0);
    uint64_t v34 = v49;
    v48(v49, v25, v14);
    dispatch thunk of Collection.formIndex(after:)();
    (*v46)(v34, v14);
    (*v51)(v33, 0, 1, v32);
    if ((*v45)(v33, 1, v32) == 1) {
      return sub_10008DB18(v25, &qword_100960B28);
    }
    uint64_t v35 = (uint64_t)v42;
    (*v40)(v42, v33, v32);
    uint64_t v36 = v59;
    sub_100527688(v35, v39, v43, v44);
    if (v36) {
      break;
    }
    uint64_t v59 = 0;
    (*v41)(v35, v32);
  }
  (*v41)(v35, v32);
  return sub_10008DB18(v25, &qword_100960B28);
}

id sub_10052DAE0(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = [a1 fontDescriptor];
  sub_1000AFA94(&qword_10095CCF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  uint64_t v7 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(inited + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(inited + 40) = a2;
  uint64_t v8 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(inited + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(inited + 56) = a3;
  id v9 = v7;
  id v10 = v8;
  unint64_t v11 = sub_100522C50(inited);
  sub_1000AFA94(&qword_10094FA78);
  uint64_t v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_1007509E0;
  *(void *)(v12 + 32) = UIFontDescriptorFeatureSettingsAttribute;
  sub_1000AFA94(&qword_10095CCE8);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1007509E0;
  *(void *)(v13 + 32) = v11;
  *(void *)(v12 + 64) = sub_1000AFA94(&qword_10095AEA0);
  *(void *)(v12 + 40) = v13;
  uint64_t v14 = UIFontDescriptorFeatureSettingsAttribute;
  sub_10005BB4C(v12, &qword_10095AE98, &qword_1009609C0, (uint64_t (*)(uint64_t))sub_100529410);
  type metadata accessor for AttributeName(0);
  sub_10008F80C((unint64_t *)&qword_10094B980, type metadata accessor for AttributeName);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v5 fontDescriptorByAddingAttributes:isa];

  id v17 = [self fontWithDescriptor:v16 size:0.0];
  return v17;
}

uint64_t sub_10052DCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricDetailViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10052DD5C()
{
}

void sub_10052DD7C()
{
}

uint64_t sub_10052DDA4()
{
  return 8;
}

uint64_t sub_10052DDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100251C78(a1, a2, a3, &qword_100960A30) & 1;
}

uint64_t sub_10052DDD4(uint64_t a1, uint64_t a2)
{
  return sub_100251CDC(a1, a2, &qword_100960A30);
}

void sub_10052DDE0()
{
}

void sub_10052DE00()
{
}

uint64_t sub_10052DE28()
{
  return 8;
}

uint64_t sub_10052DE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100251C78(a1, a2, a3, &qword_100960A28) & 1;
}

uint64_t sub_10052DE58(uint64_t a1, uint64_t a2)
{
  return sub_100251CDC(a1, a2, &qword_100960A28);
}

uint64_t sub_10052DE70()
{
  return 8;
}

uint64_t sub_10052DE84()
{
  return AttributeScopes.FoundationAttributes.measurement.getter();
}

uint64_t sub_10052DEA8()
{
  return sub_10008F80C(&qword_100960B50, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute);
}

uint64_t sub_10052DEF0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = sub_10008F80C(&qword_100960B50, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute);

  return AttributeDynamicLookup.subscript.getter(v2, v3);
}

uint64_t sub_10052DF64()
{
  return 8;
}

uint64_t sub_10052DF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100251C78(a1, a2, a3, &qword_100960B70) & 1;
}

uint64_t sub_10052DF94(uint64_t a1, uint64_t a2)
{
  return sub_100251CDC(a1, a2, &qword_100960B70);
}

unint64_t sub_10052DFA0()
{
  unint64_t result = qword_100960B68;
  if (!qword_100960B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960B68);
  }
  return result;
}

uint64_t sub_10052E030()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10052E0A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10052E118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  sub_1000AFA94(&qword_10094B7A0);
  v3[4] = swift_task_alloc();
  return _swift_task_switch(sub_10052E1AC, 0, 0);
}

uint64_t sub_10052E1AC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t v4[2] = 0;
  v4[3] = 0;
  v4[4] = v3;
  sub_1005CF37C(v1, (uint64_t)&unk_100960DA8, (uint64_t)v4);
  sub_10008DB18(v1, &qword_10094B7A0);
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10052E2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return _swift_task_switch(sub_10052E2EC, 0, 0);
}

uint64_t sub_10052E2EC()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_10052EC60();
    swift_release();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10052E37C(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v9 = (char *)&v74 - v8;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v10 - 8);
  uint64_t v75 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v78 = (char *)&v74 - v13;
  __chkstk_darwin(v14);
  id v16 = (char *)&v74 - v15;
  uint64_t v86 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v85 = (char *)&v74 - v21;
  __chkstk_darwin(v22);
  uint64_t v87 = (char *)&v74 - v23;
  *(void *)&double v25 = __chkstk_darwin(v24).n128_u64[0];
  uint64_t v88 = (char *)&v74 - v26;
  unint64_t v27 = (void *)v2[8];
  uint64_t v29 = (void *)v2[2];
  char v28 = (void *)v2[3];
  unsigned int v30 = [v27 hasAverageCyclingPowerForWorkout:v29 workoutActivity:v28 workoutActivity:v25];
  id v83 = v6;
  uint64_t v84 = v9;
  uint64_t v81 = a1;
  uint64_t v76 = v29;
  unint64_t v77 = v19;
  if (v30) {
    [v27 averageCyclingPowerForWorkout:v29 workoutActivity:v28];
  }
  else {
    double v31 = sub_1005DE3BC((unint64_t)a1);
  }
  double v32 = v31;
  id v33 = [v27 formattedPowerStringFor:];
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v79 = v35;
  uint64_t v80 = v34;

  uint64_t v36 = (char *)[v27 formattedAveragePowerStringFor:@"WorkoutDetailDisplayContext" context:v32];
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v89 = v36;
  swift_retain();
  uint64_t v82 = v2;
  static Published.subscript.setter();
  if (v28)
  {
    id v37 = [v28 startDate];
    Swift::String v38 = v87;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    int v39 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v40 = v38;
    uint64_t v41 = v86;
    v39(v16, v40, v86);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v42(v16, 0, 1, v41);
    uint64_t v43 = v17;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v41) != 1)
    {
      v39(v88, v16, v41);
      uint64_t v44 = v85;
      id v45 = v76;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v43 = v17;
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    uint64_t v41 = v86;
    v42(v16, 1, 1, v86);
  }
  uint64_t v44 = v85;
  id v45 = v76;
  id v46 = [v76 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10008DB18((uint64_t)v16, (uint64_t *)&unk_10095B890);
  if (!v28)
  {
    uint64_t v51 = (uint64_t)v78;
    v42(v78, 1, 1, v41);
    goto LABEL_14;
  }
LABEL_9:
  id v47 = [v28 endDate];
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = (uint64_t)v75;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v50 = 0;
    uint64_t v51 = (uint64_t)v78;
  }
  else
  {
    uint64_t v50 = 1;
    uint64_t v51 = (uint64_t)v78;
    uint64_t v49 = (uint64_t)v75;
  }
  v42((char *)v49, v50, 1, v41);
  sub_1000AEEC8(v49, v51, (uint64_t *)&unk_10095B890);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v51, 1, v41) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v44, v51, v41);
    goto LABEL_16;
  }
LABEL_14:
  id v52 = [v45 endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10008DB18(v51, (uint64_t *)&unk_10095B890);
LABEL_16:
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v54 = (uint64_t)v87;
  v53(v87, v88, v41);
  uint64_t v55 = (uint64_t)v77;
  v53(v77, v44, v41);
  type metadata accessor for WorkoutChartProperties();
  swift_allocObject();
  uint64_t v56 = sub_10033A6D0(v54, v55, 0, 1, 0, 1, 1, 10.0, 90.0);
  uint64_t v78 = (char *)v56;
  uint64_t v81 = sub_100530808((unint64_t)v81, v56);
  uint64_t v76 = sub_1002687F4(v56);
  id v57 = [self mainBundle];
  NSString v58 = String._bridgeToObjectiveC()();
  id v59 = [v57 localizedStringForKey:v58 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v60 = v43;

  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1007509E0;
  *(void *)(v61 + 56) = &type metadata for String;
  *(void *)(v61 + 64) = sub_1000AA64C();
  uint64_t v62 = v79;
  *(void *)(v61 + 32) = v80;
  *(void *)(v61 + 40) = v62;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v63 = objc_allocWithZone((Class)NSAttributedString);
  NSString v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v65 = [v63 initWithString:v64];

  uint64_t v66 = (uint64_t)v87;
  uint64_t v67 = v86;
  v53(v87, v88, v86);
  uint64_t v68 = v85;
  v53((char *)v55, v85, v67);
  uint64_t v69 = (void *)swift_retain();
  uint64_t v70 = (uint64_t)v84;
  sub_100377610(4, 0, 0xE000000000000000, v65, v81, 1, v66, v55, (uint64_t)v84, (uint64_t)v76, 0, v69);
  uint64_t v71 = type metadata accessor for WorkoutChartViewModel(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1001A58D4(v70, (uint64_t)v83);
  swift_retain();
  static Published.subscript.setter();
  sub_10008DB18(v70, &qword_10094D448);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v89 = v78;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v60 + 8);
  v72(v68, v67);
  return ((uint64_t (*)(char *, uint64_t))v72)(v88, v67);
}

void sub_10052EC60()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[6];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v1;
  v8[4] = sub_1005307F4;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1005CF678;
  v8[3] = &unk_1008CD270;
  uint64_t v7 = _Block_copy(v8);
  swift_release();
  [v2 powerSamplesForWorkout:v3 workoutActivity:v4 completion:v7];
  _Block_release(v7);
}

uint64_t sub_10052ED94(unint64_t a1, uint64_t a2)
{
  unint64_t v150 = a1;
  uint64_t v3 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v141 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v141 + 64);
  __chkstk_darwin(v3 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v122 - v6;
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v144 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v142 = (char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  Swift::Int v143 = (char *)&v122 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v122 - v16;
  __chkstk_darwin(v18);
  uint64_t v145 = (char *)&v122 - v19;
  uint64_t v20 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v148 = v20;
  uint64_t v149 = v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v146 = (char *)&v122 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v27 = result;
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    uint64_t v29 = (void *)HKLogWorkouts;
    os_log_type_t v30 = v28;
    if (!os_log_type_enabled(HKLogWorkouts, v28))
    {
      swift_release();
      return swift_errorRelease();
    }
    swift_errorRetain();
    swift_errorRetain();
    double v31 = v29;
    double v32 = (uint8_t *)swift_slowAlloc();
    long long aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)double v32 = 136315138;
    swift_getErrorValue();
    uint64_t v33 = Error.localizedDescription.getter();
    uint64_t v151 = sub_10008F1F4(v33, v34, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v30, "Error getting heart rates: %s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    return swift_release();
  }
  if (!v150) {
    return swift_release();
  }
  uint64_t v140 = v11;
  if (!(v150 >> 62))
  {
    if (*(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v120 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v120) {
    return swift_release();
  }
LABEL_8:
  uint64_t v128 = v7;
  uint64_t v35 = *(void **)(v27 + 64);
  uint64_t v36 = *(void *)(v27 + 16);
  uint64_t v37 = *(void *)(v27 + 24);
  unsigned int v38 = [v35 hasAverageCyclingPowerForWorkout:v36 workoutActivity:v37];
  uint64_t v127 = (uint64_t)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v38) {
    [v35 averageCyclingPowerForWorkout:v36 workoutActivity:v37];
  }
  else {
    double v39 = sub_1005DE3BC(v150);
  }
  double v40 = v39;
  id v41 = [v35 formattedPowerStringFor:];
  uint64_t v130 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v126 = v42;

  uint64_t v132 = sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v138 = static OS_dispatch_queue.main.getter();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v27;
  *(double *)(v43 + 24) = v40;
  uint64_t v156 = sub_1005307FC;
  uint64_t v157 = v43;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v153 = 1107296256;
  Swift::Int v154 = sub_100070394;
  uint64_t v155 = &unk_1008CD2C0;
  uint64_t v136 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v44 = v146;
  static DispatchQoS.unspecified.getter();
  long long aBlock = _swiftEmptyArrayStorage;
  uint64_t v45 = sub_1000677AC((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  uint64_t v46 = sub_1000AFA94((uint64_t *)&unk_1009555E0);
  unint64_t v47 = sub_100075AF8();
  uint64_t v133 = v46;
  unint64_t v131 = v47;
  uint64_t v137 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v48 = v136;
  uint64_t v49 = (void *)v138;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v48);

  uint64_t v50 = v23;
  uint64_t v51 = *(void (**)(void))(v149 + 8);
  uint64_t v135 = v50;
  v149 += 8;
  v51();
  id v52 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v138 = v24 + 8;
  uint64_t v134 = v52;
  v52(v44, v147);
  uint64_t v53 = *(void **)(v27 + 24);
  uint64_t v54 = &selRef_configurePlayer;
  id v139 = v17;
  uint64_t v136 = v51;
  if (!v53) {
    goto LABEL_18;
  }
  id v55 = v53;
  id v56 = [v55 endDate];
  if (!v56)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v144 + 56))(v10, 1, 1, v140);
    goto LABEL_17;
  }
  id v57 = v56;
  NSString v58 = v143;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v59 = v144;
  uint64_t v60 = v58;
  uint64_t v61 = v140;
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v144 + 32);
  v62(v10, v60, v140);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v10, 0, 1, v61);
  uint64_t v63 = v61;
  uint64_t v54 = &selRef_configurePlayer;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v10, 1, v63) == 1)
  {
LABEL_17:

    sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_10095B890);
    uint64_t v17 = v139;
LABEL_18:
    id v67 = [*(id *)(v27 + 16) startDate];
    uint64_t v66 = v145;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v55 = [*(id *)(v27 + 16) v54[222]];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_19;
  }
  NSString v64 = v139;
  v62(v139, v10, v140);
  uint64_t v17 = v64;
  id v65 = [v55 startDate];
  uint64_t v66 = v145;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_19:
  uint64_t v68 = v144 + 16;
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v144 + 16);
  uint64_t v70 = (uint64_t)v143;
  uint64_t v71 = v140;
  v69(v143, v66, v140);
  uint64_t v72 = (uint64_t)v142;
  uint64_t v125 = v68;
  uint64_t v124 = v69;
  v69(v142, v17, v71);
  type metadata accessor for WorkoutChartProperties();
  swift_allocObject();
  unint64_t v73 = sub_10033A6D0(v70, v72, 0, 1, 0, 1, 1, 10.0, 90.0);
  unint64_t v74 = v150;
  unint64_t v150 = v73;
  uint64_t v123 = sub_100530808(v74, v73);
  uint64_t v76 = *(void **)(v27 + 16);
  uint64_t v75 = *(void **)(v27 + 24);
  type metadata accessor for WorkoutPowerInfo();
  swift_allocObject();
  id v77 = v75;
  uint64_t v78 = sub_1006821C4(v76, v75);
  uint64_t v79 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = v27;
  *(void *)(v80 + 24) = v78;
  uint64_t v156 = sub_100531678;
  uint64_t v157 = v80;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v153 = 1107296256;
  Swift::Int v154 = sub_100070394;
  uint64_t v155 = &unk_1008CD310;
  uint64_t v81 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v82 = v146;
  static DispatchQoS.unspecified.getter();
  long long aBlock = _swiftEmptyArrayStorage;
  id v83 = v135;
  uint64_t v84 = v148;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v81);

  ((void (*)(char *, uint64_t))v136)(v83, v84);
  v134(v82, v147);
  uint64_t v129 = v78;
  double v85 = COERCE_DOUBLE(sub_100682078());
  uint64_t v86 = 0;
  if (v87)
  {
    uint64_t v88 = v130;
  }
  else
  {
    uint64_t v88 = v130;
    if (v85 > 0.0) {
      uint64_t v86 = sub_10036745C();
    }
  }
  uint64_t v130 = v86;
  Swift::Int v122 = sub_1002687F4(v150);
  uint64_t v89 = self;
  id v90 = [v89 mainBundle];
  NSString v91 = String._bridgeToObjectiveC()();
  id v92 = [v90 localizedStringForKey:v91 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1007509E0;
  *(void *)(v93 + 56) = &type metadata for String;
  *(void *)(v93 + 64) = sub_1000AA64C();
  uint64_t v94 = v126;
  *(void *)(v93 + 32) = v88;
  *(void *)(v93 + 40) = v94;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v95 = [v89 mainBundle];
  NSString v96 = String._bridgeToObjectiveC()();
  id v97 = [v95 localizedStringForKey:v96 value:0 table:0];

  uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v100 = v99;

  id v101 = objc_allocWithZone((Class)NSAttributedString);
  NSString v102 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v103 = [v101 initWithString:v102];

  uint64_t v104 = (uint64_t)v143;
  uint64_t v105 = v140;
  uint64_t v106 = v124;
  v124(v143, v145, v140);
  uint64_t v107 = (uint64_t)v142;
  v106(v142, v139, v105);
  uint64_t v108 = *(void **)(v27 + 56);
  uint64_t v109 = v130;
  swift_retain();
  swift_retain();
  uint64_t v121 = v108;
  uint64_t v110 = (uint64_t)v128;
  sub_100377610(4, v98, v100, v103, v123, 1, v104, v107, (uint64_t)v128, (uint64_t)v122, v109, v121);
  Swift::Int v143 = (char *)static OS_dispatch_queue.main.getter();
  uint64_t v111 = v127;
  sub_1001A6B48(v110, v127, type metadata accessor for WorkoutChartViewModel);
  unint64_t v112 = (*(unsigned __int8 *)(v141 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
  uint64_t v113 = swift_allocObject();
  *(void *)(v113 + 16) = v27;
  sub_1000C8EC8(v111, v113 + v112, type metadata accessor for WorkoutChartViewModel);
  *(void *)(v113 + ((v4 + v112 + 7) & 0xFFFFFFFFFFFFFFF8)) = v150;
  uint64_t v156 = sub_100531850;
  uint64_t v157 = v113;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v153 = 1107296256;
  Swift::Int v154 = sub_100070394;
  uint64_t v155 = &unk_1008CD360;
  uint64_t v114 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  unint64_t v115 = v146;
  static DispatchQoS.unspecified.getter();
  long long aBlock = _swiftEmptyArrayStorage;
  uint64_t v116 = v135;
  uint64_t v117 = v148;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v118 = v143;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v114);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  ((void (*)(char *, uint64_t))v136)(v116, v117);
  v134(v115, v147);
  sub_1001A6BB0(v110, type metadata accessor for WorkoutChartViewModel);
  uint64_t v119 = *(void (**)(char *, uint64_t))(v144 + 8);
  v119(v139, v105);
  return ((uint64_t (*)(char *, uint64_t))v119)(v145, v105);
}

uint64_t sub_10052FE34(uint64_t a1)
{
  return static Published.subscript.setter();
}

uint64_t sub_10052FECC()
{
  return static Published.subscript.setter();
}

uint64_t sub_10052FF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - v10;
  sub_1001A6B48(a2, (uint64_t)&v15 - v10, type metadata accessor for WorkoutChartViewModel);
  uint64_t v12 = type metadata accessor for WorkoutChartViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1001A58D4((uint64_t)v11, (uint64_t)v8);
  swift_retain();
  static Published.subscript.setter();
  sub_10008DB18((uint64_t)v11, &qword_10094D448);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v16 = a3;
  swift_retain();
  swift_retain();
  static Published.subscript.setter();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v14 = *(void *)(a1 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v16)
    {
      *(void *)(v16 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_delegate + 8) = v14;
      swift_unknownObjectWeakAssign();
      swift_release();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100530184()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__averagePower;
  uint64_t v2 = sub_1000AFA94(&qword_10094D6D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__powerInfo;
  uint64_t v4 = sub_1000AFA94(&qword_100960DB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t sub_10053023C()
{
  uint64_t v0 = sub_100268534();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__averagePower;
  uint64_t v2 = sub_1000AFA94(&qword_10094D6D0);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__powerInfo;
  uint64_t v4 = sub_1000AFA94(&qword_100960DB0);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_100530330()
{
  return type metadata accessor for WorkoutDetailPowerDataStore();
}

uint64_t type metadata accessor for WorkoutDetailPowerDataStore()
{
  uint64_t result = qword_100960BB0;
  if (!qword_100960BB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100530384()
{
  sub_1001A5324();
  if (v0 <= 0x3F)
  {
    sub_100530450();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100530450()
{
  if (!qword_100960BC0)
  {
    sub_1000A1370((uint64_t *)&unk_100960BC8);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100960BC0);
    }
  }
}

uint64_t sub_1005304AC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailPowerDataStore();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005304EC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100530524()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100530564()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10005DB5C;
  v3[5] = v2;
  return _swift_task_switch(sub_10052E2EC, 0, 0);
}

void *sub_100530610(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v9 = sub_1000AFA94(&qword_100960DB0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v4 + OBJC_IVAR____TtC10FitnessApp27WorkoutDetailPowerDataStore__powerInfo;
  v16[1] = 0;
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100960BC8);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  id v14 = [objc_allocWithZone((Class)NSAttributedString) init];
  swift_beginAccess();
  v16[0] = v14;
  sub_10007E2D8(0, (unint64_t *)&qword_10094D428);
  Published.init(initialValue:)();
  swift_endAccess();
  swift_release();
  return sub_10026952C(a1, a2, a3, a4);
}

uint64_t sub_1005307BC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005307F4(unint64_t a1, uint64_t a2)
{
  return sub_10052ED94(a1, a2);
}

uint64_t sub_1005307FC()
{
  return sub_10052FE34(*(void *)(v0 + 16));
}

char *sub_100530808(unint64_t a1, uint64_t a2)
{
  uint64_t v103 = a2;
  uint64_t v3 = type metadata accessor for NSIndexSetIterator();
  unint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v83 - v8;
  uint64_t v10 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v96 = *(void *)(v10 - 8);
  uint64_t v97 = v10;
  __chkstk_darwin(v10);
  uint64_t v108 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v107 = (char *)&v83 - v13;
  uint64_t v14 = sub_1000AFA94(&qword_10094D6D8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v83 - v18;
  uint64_t v20 = (void *)type metadata accessor for Date();
  uint64_t v95 = *(v20 - 1);
  __chkstk_darwin(v20);
  uint64_t v106 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v104 = (void (**)(char *, uint64_t))((char *)&v83 - v23);
  __chkstk_darwin(v24);
  NSString v102 = (char *)&v83 - v25;
  __chkstk_darwin(v26);
  uint64_t v100 = (uint64_t)&v83 - v27;
  __chkstk_darwin(v28);
  uint64_t v94 = (char *)&v83 - v29;
  if (a1 >> 62) {
    goto LABEL_82;
  }
  uint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v109 = v20;
    uint64_t v98 = v16;
    uint64_t v99 = v19;
    if (!v30)
    {
      swift_bridgeObjectRelease();
      id v57 = _swiftEmptyDictionarySingleton;
LABEL_30:
      uint64_t v58 = v57[8];
      uint64_t v92 = (uint64_t)(v57 + 8);
      uint64_t v59 = 1 << *((unsigned char *)v57 + 32);
      uint64_t v60 = -1;
      if (v59 < 64) {
        uint64_t v60 = ~(-1 << v59);
      }
      unint64_t v61 = v60 & v58;
      uint64_t v94 = (char *)(v95 + 16);
      uint64_t v104 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v105 = (char *)(v95 + 32);
      uint64_t v93 = (char *)((unint64_t)(v59 + 63) >> 6);
      NSString v91 = v93 - 1;
      id v101 = v57;
      uint64_t result = (char *)swift_bridgeObjectRetain();
      uint64_t v100 = 0;
      a1 = (unint64_t)_swiftEmptyArrayStorage;
      if (v61)
      {
LABEL_33:
        uint64_t v103 = (v61 - 1) & v61;
        unint64_t v62 = __clz(__rbit64(v61)) | (v100 << 6);
      }
      else
      {
        while (1)
        {
          uint64_t v68 = v100 + 1;
          if (__OFADD__(v100, 1)) {
            goto LABEL_78;
          }
          if (v68 < (uint64_t)v93)
          {
            unint64_t v69 = *(void *)(v92 + 8 * v68);
            if (v69) {
              goto LABEL_38;
            }
            uint64_t v70 = v100 + 2;
            ++v100;
            if (v68 + 1 < (uint64_t)v93)
            {
              unint64_t v69 = *(void *)(v92 + 8 * v70);
              if (v69) {
                goto LABEL_41;
              }
              uint64_t v100 = v68 + 1;
              if (v68 + 2 < (uint64_t)v93)
              {
                unint64_t v69 = *(void *)(v92 + 8 * (v68 + 2));
                if (v69)
                {
                  v68 += 2;
                  goto LABEL_38;
                }
                uint64_t v70 = v68 + 3;
                uint64_t v100 = v68 + 2;
                if (v68 + 3 < (uint64_t)v93) {
                  break;
                }
              }
            }
          }
LABEL_52:
          uint64_t v71 = sub_1000AFA94(&qword_10094D6E0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v16, 1, 1, v71);
          uint64_t v103 = 0;
LABEL_53:
          sub_1000AEEC8((uint64_t)v16, (uint64_t)v19, &qword_10094D6D8);
          uint64_t v72 = sub_1000AFA94(&qword_10094D6E0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v19, 1, v72) == 1)
          {
            swift_release();
            swift_bridgeObjectRelease();
            return (char *)a1;
          }
          NSString v102 = (char *)a1;
          unint64_t v73 = *(void **)&v19[*(int *)(v72 + 48)];
          unint64_t v74 = *(void (**)(char *, char *, void *))v105;
          (*(void (**)(char *, char *, void *))v105)(v106, v19, v20);
          id v75 = v73;
          NSIndexSet.makeIterator()();

          sub_1000677AC(&qword_10094D6E8, (void (*)(uint64_t))&type metadata accessor for NSIndexSetIterator);
          dispatch thunk of IteratorProtocol.next()();
          if (v111)
          {
            uint64_t v76 = *v104;
            (*v104)(v9, v3);
            uint64_t v77 = 0;
          }
          else
          {
            uint64_t v77 = (uint64_t)v110;
            dispatch thunk of IteratorProtocol.next()();
            if ((v111 & 1) == 0)
            {
              do
              {
                if ((uint64_t)v110 < v77) {
                  uint64_t v77 = (uint64_t)v110;
                }
                dispatch thunk of IteratorProtocol.next()();
              }
              while (v111 != 1);
            }
            uint64_t v76 = *v104;
            (*v104)(v9, v3);
          }
          id v78 = v75;
          NSIndexSet.makeIterator()();

          dispatch thunk of IteratorProtocol.next()();
          if (v111)
          {
            v76(v6, v3);
            uint64_t v79 = 0;
          }
          else
          {
            uint64_t v79 = (uint64_t)v110;
            dispatch thunk of IteratorProtocol.next()();
            if ((v111 & 1) == 0)
            {
              do
              {
                if (v79 <= (uint64_t)v110) {
                  uint64_t v79 = (uint64_t)v110;
                }
                dispatch thunk of IteratorProtocol.next()();
              }
              while (v111 != 1);
            }
            v76(v6, v3);
          }
          uint64_t v80 = (uint64_t)v107;
          uint64_t v20 = v109;
          v74(v107, v106, v109);
          uint64_t v81 = v97;
          *(double *)(v80 + *(int *)(v97 + 24)) = (double)v77;
          *(double *)(v80 + *(int *)(v81 + 28)) = (double)v79;
          *(double *)(v80 + *(int *)(v81 + 20)) = ((double)v77 + (double)v79) * 0.5;
          sub_1001A6B48(v80, v108, type metadata accessor for WorkoutChartDataElement);
          a1 = (unint64_t)v102;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a1 = sub_1001E7108(0, *(void *)(a1 + 16) + 1, 1, a1);
          }
          uint64_t v16 = v98;
          unint64_t v4 = *(void *)(a1 + 16);
          unint64_t v82 = *(void *)(a1 + 24);
          if (v4 >= v82 >> 1) {
            a1 = sub_1001E7108(v82 > 1, v4 + 1, 1, a1);
          }
          *(void *)(a1 + 16) = v4 + 1;
          sub_1000C8EC8(v108, a1+ ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))+ *(void *)(v96 + 72) * v4, type metadata accessor for WorkoutChartDataElement);

          uint64_t result = (char *)sub_1001A6BB0((uint64_t)v107, type metadata accessor for WorkoutChartDataElement);
          uint64_t v19 = v99;
          unint64_t v61 = v103;
          if (v103) {
            goto LABEL_33;
          }
        }
        unint64_t v69 = *(void *)(v92 + 8 * v70);
        if (!v69)
        {
          while (1)
          {
            uint64_t v68 = v70 + 1;
            if (__OFADD__(v70, 1)) {
              goto LABEL_84;
            }
            if (v68 >= (uint64_t)v93)
            {
              uint64_t v100 = (uint64_t)v91;
              goto LABEL_52;
            }
            unint64_t v69 = *(void *)(v92 + 8 * v68);
            ++v70;
            if (v69) {
              goto LABEL_38;
            }
          }
        }
LABEL_41:
        uint64_t v68 = v70;
LABEL_38:
        uint64_t v103 = (v69 - 1) & v69;
        unint64_t v62 = __clz(__rbit64(v69)) + (v68 << 6);
        uint64_t v100 = v68;
      }
      uint64_t v63 = v101;
      (*(void (**)(char *, unint64_t, void *))(v95 + 16))(v16, v101[6] + *(void *)(v95 + 72) * v62, v20);
      uint64_t v64 = v63[7];
      uint64_t v65 = sub_1000AFA94(&qword_10094D6E0);
      uint64_t v66 = *(void **)(v64 + 8 * v62);
      *(void *)&v16[*(int *)(v65 + 48)] = v66;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v16, 0, 1, v65);
      id v67 = v66;
      goto LABEL_53;
    }
    uint64_t result = (char *)self;
    uint64_t v93 = result;
    if (v30 < 1) {
      break;
    }
    unint64_t v84 = v4;
    uint64_t v32 = 0;
    uint64_t v92 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration;
    NSString v91 = (char *)(a1 & 0xC000000000000001);
    id v90 = (char **)(v95 + 8);
    id v101 = _swiftEmptyDictionarySingleton;
    double v85 = (void (**)(void (**)(char *, uint64_t), unint64_t, void *))(v95 + 16);
    uint64_t v89 = OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration;
    unint64_t v87 = a1;
    uint64_t v88 = v30;
    uint64_t v86 = v6;
    while (1)
    {
      if (v91) {
        unsigned int v38 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unsigned int v38 = (char *)*(id *)(a1 + 8 * v32 + 32);
      }
      uint64_t v6 = v38;
      uint64_t v20 = v101;
      id v39 = [v38 startDate];
      uint64_t v40 = v100;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      swift_getKeyPath();
      swift_getKeyPath();
      id v41 = v102;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      Date.timeIntervalSince(_:)();
      uint64_t v42 = v94;
      Date.addingTimeInterval(_:)();
      uint64_t v19 = *v90;
      uint64_t v43 = v41;
      uint64_t v16 = (char *)v90;
      uint64_t v44 = v109;
      ((void (*)(char *, void *))*v90)(v43, v109);
      uint64_t v45 = v40;
      unint64_t v4 = (unint64_t)v42;
      ((void (*)(uint64_t, void *))v19)(v45, v44);
      uint64_t v105 = v6;
      id v46 = [v6 quantity];
      a1 = (unint64_t)[v93 wattUnit];
      [v46 doubleValueForUnit:a1];
      double v48 = v47;

      if (v20[2])
      {
        unint64_t v49 = sub_100529660(v4);
        if (v50)
        {
          if ((~*(void *)&v48 & 0x7FF0000000000000) == 0) {
            goto LABEL_79;
          }
          if (v48 <= -9.22337204e18) {
            goto LABEL_80;
          }
          if (v48 >= 9.22337204e18) {
            goto LABEL_81;
          }
          [*(id *)(v20[7] + 8 * v49) addIndex:(uint64_t)v48];
          uint64_t v20 = v109;
          goto LABEL_7;
        }
      }
      (*v85)(v104, v4, v109);
      if ((~*(void *)&v48 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v48 <= -9.22337204e18) {
        goto LABEL_76;
      }
      if (v48 >= 9.22337204e18) {
        goto LABEL_77;
      }
      id v51 = [objc_allocWithZone((Class)NSMutableIndexSet) initWithIndex:(uint64_t)v48];
      if (!v51)
      {
        swift_bridgeObjectRetain();
        unint64_t v52 = sub_100529660((uint64_t)v104);
        char v54 = v53;
        swift_bridgeObjectRelease();
        uint64_t v6 = v86;
        if (v54)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v110 = v20;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1004F20AC();
            uint64_t v20 = v110;
          }
          unint64_t v56 = v20[6] + *(void *)(v95 + 72) * v52;
          uint64_t v20 = v109;
          ((void (*)(unint64_t, void *))v19)(v56, v109);
          uint64_t v37 = *(char **)(v110[7] + 8 * v52);
          id v101 = v110;
          sub_1005DC524(v52, (uint64_t)v110);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v37 = 0;
          uint64_t v20 = v109;
        }
        ((void (*)(void, void *))v19)(v104, v20);

        a1 = v87;
        goto LABEL_8;
      }
      uint64_t v33 = (uint64_t)v51;
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v110 = v20;
      uint64_t v35 = v33;
      uint64_t v36 = v104;
      sub_1004EF404(v35, (uint64_t)v104, v34);
      id v101 = v110;
      swift_bridgeObjectRelease();
      uint64_t v20 = v109;
      ((void (*)(void, void *))v19)(v36, v109);
LABEL_7:
      a1 = v87;
      uint64_t v37 = v105;
      uint64_t v6 = v86;
LABEL_8:
      ++v32;

      ((void (*)(unint64_t, void *))v19)(v4, v20);
      if (v88 == v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = v98;
        uint64_t v19 = v99;
        id v57 = v101;
        unint64_t v4 = v84;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  }
  __break(1u);
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_100531638()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100531678()
{
  return sub_10052FECC();
}

uint64_t sub_100531680()
{
  uint64_t v1 = (int *)(type metadata accessor for WorkoutChartViewModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v1[12];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v3 + v1[13], v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100531850()
{
  uint64_t v1 = *(void *)(type metadata accessor for WorkoutChartViewModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10052FF48(v3, v0 + v2, v4);
}

uint64_t *sub_10053191C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = v4;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(v4 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = sub_1000AFA94(&qword_100951E18);
    v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 24));
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for SleepingSampleBaselineBand.Configuration(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_100960EA0);
}

uint64_t sub_100531A6C(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for SleepingSampleBaselineBand.Configuration(0) + 20);
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = sub_1000AFA94(&qword_100951E18);
  v3(v1 + *(int *)(v4 + 36), v2);

  return swift_release();
}

_OWORD *sub_100531B28(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  v9(v6, v7, v8);
  uint64_t v10 = sub_1000AFA94(&qword_100951E18);
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  *(void *)((char *)a1 + v4[6]) = *(void *)((char *)a2 + v4[6]);
  *(void *)((char *)a1 + v4[7]) = *(void *)((char *)a2 + v4[7]);
  swift_retain();
  return a1;
}

void *sub_100531C0C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = (int *)type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24);
  v9(v6, v7, v8);
  uint64_t v10 = sub_1000AFA94(&qword_100951E18);
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  *(void *)((char *)a1 + v4[6]) = *(void *)((char *)a2 + v4[6]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + v4[7]) = *(void *)((char *)a2 + v4[7]);
  return a1;
}

_OWORD *sub_100531D04(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  uint64_t v10 = sub_1000AFA94(&qword_100951E18);
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  *(void *)((char *)a1 + v4[6]) = *(void *)((char *)a2 + v4[6]);
  *(void *)((char *)a1 + v4[7]) = *(void *)((char *)a2 + v4[7]);
  return a1;
}

_OWORD *sub_100531DE4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40);
  v9(v6, v7, v8);
  uint64_t v10 = sub_1000AFA94(&qword_100951E18);
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  *(void *)((char *)a1 + v4[6]) = *(void *)((char *)a2 + v4[6]);
  swift_release();
  *(void *)((char *)a1 + v4[7]) = *(void *)((char *)a2 + v4[7]);
  return a1;
}

uint64_t sub_100531ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100531EE0);
}

uint64_t sub_100531EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100531F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100531F60);
}

uint64_t sub_100531F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SleepingSampleBaselineBand(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_100960E10);
}

uint64_t sub_100531FF0()
{
  uint64_t result = type metadata accessor for SleepingSampleBaselineBand.Configuration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10053207C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = sub_1000AFA94(&qword_100951E18);
    v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1005321A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  uint64_t v5 = sub_1000AFA94(&qword_100951E18);
  v4(v2 + *(int *)(v5 + 36), v3);

  return swift_release();
}

_OWORD *sub_100532254(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = sub_1000AFA94(&qword_100951E18);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_retain();
  return a1;
}

void *sub_10053232C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = sub_1000AFA94(&qword_100951E18);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

_OWORD *sub_10053241C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = sub_1000AFA94(&qword_100951E18);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  return a1;
}

_OWORD *sub_1005324F0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = sub_1000AFA94(&qword_100951E18);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_1005325D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005325E4);
}

uint64_t sub_1005325E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_100951E18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1005326AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005326C0);
}

uint64_t sub_1005326C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_100951E18);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_100532784()
{
  sub_100532838();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100532838()
{
  if (!qword_100960EB0)
  {
    type metadata accessor for Date();
    sub_1000863DC((unint64_t *)&qword_100954750, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t v0 = type metadata accessor for ClosedRange();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100960EB0);
    }
  }
}

void sub_1005328CC()
{
  Swift::UInt64 v1 = v0[1];
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *v0;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  uint64_t v4 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  type metadata accessor for Date();
  sub_1000863DC((unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  sub_1000AFA94(&qword_100951E18);
  dispatch thunk of Hashable.hash(into:)();
  swift_retain();
  Color.hash(into:)();
  swift_release();
  if ((*(Swift::UInt64 *)((char *)v0 + *(int *)(v4 + 28)) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(Swift::UInt64 *)((char *)v0 + *(int *)(v4 + 28));
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
}

Swift::Int sub_1005329E8()
{
  return Hasher._finalize()();
}

Swift::Int sub_100532A2C()
{
  return Hasher._finalize()();
}

uint64_t sub_100532A6C()
{
  return sub_1000863DC(&qword_100960EE8, (void (*)(uint64_t))type metadata accessor for SleepingSampleBaselineBand.Configuration);
}

uint64_t sub_100532AB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100532AD0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = type metadata accessor for RoundedCornerStyle();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  __chkstk_darwin(v3);
  id v39 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100952050);
  __chkstk_darwin(v5 - 8);
  char v34 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)v30 - v8;
  uint64_t v9 = sub_1000AFA94(&qword_100952058);
  __chkstk_darwin(v9 - 8);
  v30[0] = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v30[1] = (char *)v30 - v12;
  uint64_t v13 = type metadata accessor for RectangleMark();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100960F00);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v37 = v17;
  uint64_t v38 = v18;
  __chkstk_darwin(v17);
  uint64_t v33 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v31 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
  type metadata accessor for Date();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  sub_1000AFA94(&qword_100951E18);
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v43 = *a1;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v20 = a1;
  uint64_t v43 = a1[1];
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  RectangleMark.init<A, B>(xStart:xEnd:yStart:yEnd:)();
  uint64_t v21 = v31;
  uint64_t v23 = v39;
  uint64_t v22 = v40;
  uint64_t v24 = v41;
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v39, enum case for RoundedCornerStyle.continuous(_:), v41);
  uint64_t v25 = v33;
  uint64_t v26 = v35;
  ChartContent.cornerRadius(_:style:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v26);
  uint64_t v27 = *(uint64_t *)((char *)v20 + *(int *)(v21 + 24));
  uint64_t v44 = &protocol witness table for RectangleMark;
  uint64_t v45 = v27;
  uint64_t v43 = v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v37;
  ChartContent.foregroundStyle<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v25, v28);
}

uint64_t sub_100533084()
{
  uint64_t v1 = sub_1000AFA94(&qword_100960EF0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v0;
  sub_1000AFA94(&qword_100960EF8);
  uint64_t v5 = sub_1000A1370(&qword_100960F00);
  uint64_t v10 = type metadata accessor for RectangleMark();
  uint64_t v11 = &protocol witness table for RectangleMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v10 = v5;
  uint64_t v11 = &type metadata for Color;
  uint64_t v12 = OpaqueTypeConformance2;
  uint64_t v13 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  Plot.init(content:)();
  sub_100533234();
  ChartContent.compositingLayer()();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_10053322C@<X0>(uint64_t a1@<X8>)
{
  return sub_100532AD0(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_100533234()
{
  unint64_t result = qword_100960F08;
  if (!qword_100960F08)
  {
    sub_1000A1370(&qword_100960EF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960F08);
  }
  return result;
}

BOOL sub_100533290(double *a1, double *a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100951E18);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    uint64_t v19 = type metadata accessor for SleepingSampleBaselineBand.Configuration(0);
    uint64_t v11 = *(int *)(v19 + 20);
    uint64_t v12 = (uint64_t)a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    type metadata accessor for Date();
    sub_1000863DC((unint64_t *)&qword_100951FE0, (void (*)(uint64_t))&type metadata accessor for Date);
    char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
    sub_10025ED50(v12, (uint64_t)v9);
    sub_10025ED50(v13, (uint64_t)v6);
    if (v14)
    {
      uint64_t v15 = v19;
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_100533464((uint64_t)v6);
      sub_100533464((uint64_t)v9);
      if (v16 & 1) != 0 && (static Color.== infix(_:_:)()) {
        return *(double *)((char *)a1 + *(int *)(v15 + 28)) == *(double *)((char *)a2 + *(int *)(v15 + 28));
      }
    }
    else
    {
      sub_100533464((uint64_t)v6);
      sub_100533464((uint64_t)v9);
    }
  }
  return 0;
}

uint64_t sub_100533464(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100951E18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005334C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100533520(uint64_t a1)
{
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1007509E0;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    double v4 = (double)(a1 + 1) / (double)*(uint64_t *)(v1 + 16);
    *(void *)(result + 56) = &type metadata for Double;
    *(void *)(result + 64) = &protocol witness table for Double;
    *(double *)(result + 32) = v4;
    return String.init(format:_:)();
  }
  return result;
}

uint64_t sub_1005335C4(uint64_t result, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  if (a2)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    if (*(void *)(v3[4] + 16) <= a2)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1007509E0;
    if (__OFADD__(v5, 1))
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    *(void *)(result + 56) = &type metadata for Int;
    *(void *)(result + 64) = &protocol witness table for Int;
    *(void *)(result + 32) = v5 + 1;
    swift_bridgeObjectRetain();
    String.init(format:_:)();
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1000A06D0();
    uint64_t result = Text.init<A>(_:)();
    uint64_t v9 = result;
    uint64_t v11 = v10;
    if (*(void *)(v3[5] + 16) > a2)
    {
      char v12 = v8 & 1;
      swift_retain();
      Text.foregroundColor(_:)();
      swift_release();
      uint64_t v13 = AnyView.init<A>(_:)();
      sub_1000A06C0(v9, v11, v12);
      swift_bridgeObjectRelease();
      return v13;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (__OFADD__(result, 1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFADD__(a3, 1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (*(void *)(v3[4] + 16))
  {
    double v6 = (double)(result + 1) / (double)v3[2] * (double)(a3 + 1);
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1007509E0;
    *(void *)(v7 + 56) = &type metadata for Double;
    *(void *)(v7 + 64) = &protocol witness table for Double;
    *(double *)(v7 + 32) = v6;
    swift_bridgeObjectRetain();
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_100533830()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorkoutDetailColumnMetricPreviewDataSource()
{
  return self;
}

uint64_t sub_10053389C()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1005338A4()
{
  return 6;
}

uint64_t sub_1005338AC(uint64_t result)
{
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_7;
  }
  double v1 = 8.0 / (double)(result + 1);
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 < 9.22337204e18) {
    return (uint64_t)v1;
  }
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_100533910@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v3 = result;
  uint64_t v5 = *(void *)(v2 + 24);
  if (*(void *)(v5 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  char v8 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
  unint64_t v9 = v5
     + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
     + *(void *)(v7 + 72) * v3;

  return v8(a2, v9, v6);
}

double sub_1005339B4()
{
  return 92.0;
}

uint64_t sub_1005339C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailColumnMetricPreviewDataSource();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100533A00(uint64_t a1)
{
  unint64_t result = sub_100533A28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100533A28()
{
  unint64_t result = qword_100961000;
  if (!qword_100961000)
  {
    type metadata accessor for WorkoutDetailColumnMetricPreviewDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961000);
  }
  return result;
}

double sub_100533A7C()
{
  if (qword_10094AE00 != -1) {
    swift_once();
  }
  double result = 1.0 / *(double *)&qword_100998300;
  *(double *)&qword_100998308 = 1.0 / *(double *)&qword_100998300;
  return result;
}

void **sub_100533AD8(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  double v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for AttributedString();
    char v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = *(void **)((char *)a2 + v14);
    *(void **)((char *)v7 + v14) = v15;
    id v16 = v15;
  }
  return v7;
}

void **sub_100533BD8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = *(void **)((char *)a2 + v13);
  uint64_t v15 = *(void **)((char *)a1 + v13);
  *(void **)((char *)a1 + v13) = v14;
  id v16 = v14;

  return a1;
}

void *sub_100533C88(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void **sub_100533D20(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = *(void **)((char *)a1 + v11);
  *(void **)((char *)a1 + v11) = *(void **)((char *)a2 + v11);

  return a1;
}

uint64_t sub_100533DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100533DDC);
}

uint64_t sub_100533DDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AttributedString();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100533E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100533EA0);
}

void *sub_100533EA0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributedString();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100533F48(char a1)
{
  if (((1 << a1) & 0x5DDBB8E070) != 0 || ((1 << a1) & 0x2224471F80) != 0)
  {
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    return String.init<A>(_:)();
  }
  else
  {
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v8;
  }
}

void sub_100534258(unsigned __int8 a1, double a2)
{
  if (a1 <= 0x25u)
  {
    if (((1 << a1) & 0x2204400080) != 0)
    {
      uint64_t v4 = 1;
    }
    else if (a1 == 16)
    {
      uint64_t v4 = 2;
    }
    else
    {
      if (a1 != 29) {
        return;
      }
      uint64_t v4 = 3;
    }
    uint64_t v5 = FIUIPaceFormatForDistanceType();
    if (v5 == 4)
    {
      if (a2 > 0.0)
      {
        id v6 = *v2;
        id v7 = [self meterUnit];
        id v8 = [self quantityWithUnit:v7 doubleValue:1.0];

        [v6 speedPerHourWithDistance:v8 overDuration:4 paceFormat:v4 distanceType:a2];
LABEL_10:
      }
    }
    else if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      uint64_t v9 = v5;
      id v10 = [*v2 unitManager];
      if (v10)
      {
        uint64_t v11 = v10;
        id v12 = [self meterUnit];
        id v8 = [self quantityWithUnit:v12 doubleValue:1.0];

        [v11 paceWithDistance:v8 overDuration:v9 paceFormat:v4 distanceType:a2];
        goto LABEL_10;
      }
      __break(1u);
    }
  }
}

double sub_100534444(char a1, double a2)
{
  uint64_t v5 = 1;
  switch(a1)
  {
    case 1:
    case 3:
    case 4:
    case 19:
    case 23:
    case 30:
    case 34:
      goto LABEL_4;
    case 5:
    case 14:
    case 20:
    case 24:
    case 28:
    case 31:
    case 35:
      return Double.dynamicStepRoundUp(minValue:)(10.0) * 60.0;
    case 6:
    case 15:
    case 21:
    case 25:
    case 32:
    case 36:
      uint64_t v5 = 5;
      goto LABEL_4;
    case 13:
      uint64_t v5 = 2;
      goto LABEL_4;
    case 27:
      uint64_t v5 = 3;
LABEL_4:
      id v7 = *v2;
      id v8 = [v7 unitManager];
      if (!v8)
      {
        __break(1u);
        goto LABEL_16;
      }
      uint64_t v9 = v8;
      [v8 distanceInUserDistanceUnitForDistanceInMeters:v5 distanceType:a2];

      double v6 = Double.dynamicStepRoundUp(minValue:)(10.0);
      char v10 = a1 - 1;
      if ((a1 - 1) > 0x23u || ((0xBB774D06DuLL >> v10) & 1) == 0) {
        return v6;
      }
      uint64_t v11 = qword_10076A660[v10];
      id v12 = [v7 unitManager];
      if (!v12)
      {
LABEL_16:
        __break(1u);
        JUMPOUT(0x1005345DCLL);
      }
      uint64_t v13 = v12;
      [v12 distanceInMetersForDistanceInUserUnit:v11 distanceType:v6];
      double v6 = v14;

      return v6;
    default:
      return Double.dynamicStepRoundUp(minValue:)(10.0);
  }
}

uint64_t sub_10053466C(char a1)
{
  if (((1 << a1) & 0x5DDBB8E070) != 0 || ((1 << a1) & 0x2224471F80) != 0)
  {
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    return String.init<A>(_:)();
  }
  else
  {
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v8;
  }
}

uint64_t sub_100534974(char a1, double a2)
{
  uint64_t v3 = 1;
  switch(a1)
  {
    case 1:
    case 3:
    case 4:
    case 19:
    case 23:
    case 30:
    case 34:
      goto LABEL_2;
    case 5:
    case 14:
    case 20:
    case 24:
    case 28:
    case 31:
    case 35:
      id v10 = [*v2 stringWithDuration:5 durationFormat:a2];
      if (v10) {
        goto LABEL_22;
      }
      __break(1u);
LABEL_6:
      id v9 = [*v2 localizedStringWithDistanceInMeters:5 distanceType:0 unitStyle:a2];
      goto LABEL_21;
    case 6:
    case 15:
    case 21:
    case 25:
    case 32:
    case 36:
      goto LABEL_6;
    case 7:
    case 16:
    case 22:
    case 26:
    case 29:
    case 33:
    case 37:
      if (FIUIPaceFormatForDistanceType() != 4)
      {
        id v9 = [*v2 stringWithDuration:1 durationFormat:a2];
LABEL_21:
        id v10 = v9;
        if (!v10) {
          return 0;
        }
LABEL_22:
        id v19 = v10;
LABEL_23:
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        return v16;
      }
      uint64_t v23 = self;
      id v21 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a2];
      id v22 = [v23 stringWithNumber:v21 decimalPrecision:2 roundingMode:2];
LABEL_18:
      id v19 = v22;

      if (v19) {
        goto LABEL_23;
      }
      return 0;
    case 8:
    case 9:
    case 17:
    case 18:
      uint64_t v17 = self;
      id v18 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a2];
      id v19 = [v17 localizedStringFromNumber:v18 numberStyle:0];

      goto LABEL_23;
    case 10:
      uint64_t v20 = self;
      id v21 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a2];
      id v22 = [v20 stringWithNumber:v21 decimalPrecision:1];
      goto LABEL_18;
    case 11:
    case 12:
      id v9 = [*v2 localizedStringWithDistanceInMeters:1 distanceUnit:0 unitStyle:2 decimalPrecision:a2];
      goto LABEL_21;
    case 13:
      uint64_t v3 = 2;
      goto LABEL_2;
    case 27:
      uint64_t v3 = 3;
LABEL_2:
      id v5 = *v2;
      id v6 = [*v2 unitManager];
      if (!v6)
      {
        __break(1u);
        JUMPOUT(0x100534E88);
      }
      id v7 = v6;
      id v8 = [v6 userDistanceUnitForDistanceType:v3];

      id v9 = [v5 localizedStringWithDistanceInMeters:v8 distanceUnit:0 unitStyle:0 decimalPrecision:[self defaultPrecisionForDistanceUnit:0] roundingMode:3 decimalTrimmingMode:a2];
      goto LABEL_21;
    case 38:
      uint64_t v24 = self;
      id v25 = [v24 secondUnit];
      id v26 = [self quantityWithUnit:v25 doubleValue:a2];

      id v27 = [v24 minuteUnit];
      [v26 doubleValueForUnit:v27];

      v28.super.super.Class isa = Double._bridgeToObjectiveC()().super.super.isa;
      id v29 = [self stringWithNumber:v28.super.super.isa decimalPrecision:1 roundingMode:6];
      if (v29)
      {
        uint64_t v30 = v29;
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {

        return 48;
      }
      return v16;
    default:
      if (qword_10094AE18 != -1) {
        swift_once();
      }
      uint64_t v11 = (void *)qword_100961008;
      id v12 = objc_allocWithZone((Class)NSNumber);
      id v13 = v11;
      id v14 = [v12 initWithDouble:a2];
      id v15 = [v13 stringFromNumber:v14];

      if (v15)
      {
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        return v16;
      }

      return 0;
  }
}

id sub_100534F24()
{
  id result = [self meterUnit];
  qword_100998310 = (uint64_t)result;
  return result;
}

uint64_t sub_100534F6C()
{
  return 8;
}

uint64_t sub_100534F78()
{
  return swift_release();
}

uint64_t sub_100534F80(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100534F94(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100534FAC()
{
  return 8;
}

unsigned char *storeEnumTagSinglePayload for RingsLayoutType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100535098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

unint64_t sub_1005350C4()
{
  unint64_t result = qword_1009610B0;
  if (!qword_1009610B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009610B0);
  }
  return result;
}

uint64_t sub_100535118(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id sub_100535140(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleBody, &qword_1009610B8);
}

id sub_100535154(uint64_t a1)
{
  return sub_1002E1A58(a1, &UIFontTextStyleCaption2, &qword_1009610C0);
}

char *sub_100535168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  *(void *)&v3[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel] = 0;
  uint64_t v4 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView;
  id v5 = objc_allocWithZone((Class)UIView);
  unsigned int v6 = v3;
  id v7 = [v5 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v4] = v7;
  uint64_t v8 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView;
  id v9 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v10 = (void *)UIView.withContentMode(_:)();

  id v11 = [v10 layer];
  [v11 setCornerRadius:3.0];

  [v10 setClipsToBounds:1];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[v8] = v10;
  uint64_t v12 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView;
  id v13 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v14 = (void *)UIView.withContentMode(_:)();

  id v15 = [v14 layer];
  [v15 setCornerRadius:3.0];

  [v14 setClipsToBounds:1];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[v12] = v14;
  uint64_t v16 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackView;
  id v17 = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v17 setAxis:1];
  [v17 setDistribution:3];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[v16] = v17;
  uint64_t v18 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  LODWORD(v20) = 1148846080;
  [v19 setContentCompressionResistancePriority:1 forAxis:v20];
  if (qword_10094AE28 != -1) {
    swift_once();
  }
  id v21 = (void *)UILabel.withFont(_:)();

  [v21 setLineBreakMode:0];
  [v21 setNumberOfLines:0];
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[v18] = v21;
  uint64_t v22 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel;
  id v23 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[v22] = v23;
  uint64_t v24 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel;
  id v25 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AE30 != -1) {
    swift_once();
  }
  id v26 = (void *)UILabel.withFont(_:)();

  id v27 = [self secondaryLabelColor];
  NSNumber v28 = (void *)UILabel.withTextColor(_:)();

  [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[v24] = v28;
  uint64_t v29 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint;
  *(void *)&v6[v29] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v30 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint;
  *(void *)&v6[v30] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v31 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint;
  *(void *)&v6[v31] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v32 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint;
  *(void *)&v6[v32] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v33 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackViewLeadingConstraint;
  *(void *)&v6[v33] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v34 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint;
  *(void *)&v6[v34] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v35 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint;
  *(void *)&v6[v35] = [objc_allocWithZone((Class)NSLayoutConstraint) init];

  if (a3)
  {
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v36 = 0;
  }
  v50.receiver = v6;
  v50.super_class = (Class)type metadata accessor for MindfulnessSessionListTableViewCell();
  uint64_t v37 = (char *)[super initWithStyle:a1 reuseIdentifier:v36];

  uint64_t v38 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView;
  id v39 = *(void **)&v37[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView];
  uint64_t v40 = v37;
  id v41 = v39;
  id v42 = sub_10049E184();
  [v41 setBackgroundColor:v42];

  id v43 = [*(id *)&v37[v38] layer];
  [v43 setCornerRadius:sub_10049E1B0()];

  uint64_t v44 = *(void **)&v37[v38];
  [v44 addSubview:*(void *)&v40[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView]];
  [v44 addSubview:*(void *)&v40[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView]];
  uint64_t v45 = *(void **)&v40[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackView];
  [v45 addArrangedSubview:*(void *)&v40[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel]];
  [v45 addArrangedSubview:*(void *)&v40[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel]];
  [v44 addSubview:v45];
  [v44 addSubview:*(void *)&v40[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel]];
  id v46 = [v40 contentView];
  [v46 addSubview:v44];

  sub_100535848();
  return v40;
}

void sub_100535848()
{
  id v1 = v0;
  swift_getObjectType();
  NSString v2 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView];
  id v3 = [v2 widthAnchor];
  id v4 = [v3 constraintEqualToConstant:28.0];

  uint64_t v94 = (char *)OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint;
  id v5 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint];
  *(void *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint] = v4;

  id v6 = [v2 heightAnchor];
  id v7 = [v6 constraintEqualToConstant:28.0];

  uint64_t v92 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint;
  uint64_t v8 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint];
  *(void *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint] = v7;

  id v9 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView];
  id v10 = [v9 widthAnchor];
  id v11 = [v10 constraintEqualToConstant:48.0];

  uint64_t v91 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint;
  uint64_t v12 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint];
  *(void *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint] = v11;

  id v88 = v9;
  id v13 = [v9 heightAnchor];
  id v14 = [v13 constraintEqualToConstant:48.0];

  uint64_t v90 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint;
  id v15 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint];
  *(void *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint] = v14;

  id v16 = [v2 centerXAnchor];
  id v17 = [v9 centerXAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  uint64_t v89 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint;
  id v19 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint];
  *(void *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint] = v18;

  id v20 = [v2 leadingAnchor];
  id v21 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView];
  id v22 = [v21 leadingAnchor];
  id v23 = [v20 constraintEqualToAnchor:v22 constant:16.0];

  uint64_t v24 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint];
  *(void *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint] = v23;

  uint64_t v93 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_10076A810;
  id v26 = [v21 topAnchor];
  id v27 = [v0 contentView];
  id v28 = [v27 topAnchor];

  id v29 = [v26 constraintEqualToAnchor:v28 constant:sub_10049E1C0()];
  *(void *)(v25 + 32) = v29;
  id v30 = [v21 leadingAnchor];
  id v31 = [v0 contentView];
  id v32 = [v31 leadingAnchor];

  sub_10049E1C0();
  id v34 = [v30 constraintEqualToAnchor:v32 constant:v33];

  *(void *)(v25 + 40) = v34;
  id v35 = [v21 trailingAnchor];
  id v36 = [v0 contentView];
  id v37 = [v36 trailingAnchor];

  sub_10049E1C0();
  id v39 = [v35 constraintEqualToAnchor:v37 constant:-v38];

  *(void *)(v25 + 48) = v39;
  id v40 = [v21 bottomAnchor];
  id v41 = [v0 contentView];
  id v42 = [v41 bottomAnchor];

  sub_10049E1C0();
  id v44 = [v40 constraintEqualToAnchor:v42 constant:-v43];

  *(void *)(v25 + 56) = v44;
  id v45 = [v88 leadingAnchor];
  id v46 = [v21 leadingAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46 constant:16.0];

  *(void *)(v25 + 64) = v47;
  id v48 = [v88 centerYAnchor];
  unint64_t v49 = *(void **)&v1[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackView];
  id v50 = [v49 centerYAnchor];
  id v51 = [v48 constraintEqualToAnchor:v50];

  unint64_t v52 = *(void **)&v1[v91];
  *(void *)(v25 + 72) = v51;
  *(void *)(v25 + 80) = v52;
  char v53 = *(void **)&v1[v90];
  *(void *)(v25 + 88) = v53;
  id v54 = v52;
  id v55 = v53;
  id v56 = [v2 centerYAnchor];
  id v57 = [v88 centerYAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57];

  uint64_t v59 = *(void **)&v1[v89];
  *(void *)(v25 + 96) = v58;
  *(void *)(v25 + 104) = v59;
  uint64_t v60 = *(void **)&v94[(void)v1];
  unint64_t v61 = *(void **)&v1[v92];
  *(void *)(v25 + 112) = v60;
  *(void *)(v25 + 120) = v61;
  id v62 = v59;
  id v63 = v60;
  id v64 = v61;
  id v65 = [v49 topAnchor];
  id v66 = [v21 topAnchor];
  id v67 = [v65 constraintEqualToAnchor:v66 constant:12.0];

  *(void *)(v25 + 128) = v67;
  id v68 = [v49 leadingAnchor];
  id v69 = [v88 trailingAnchor];
  id v70 = [v68 constraintEqualToAnchor:v69 constant:9.0];

  *(void *)(v25 + 136) = v70;
  id v71 = [v49 trailingAnchor];
  id v72 = [v21 trailingAnchor];
  id v73 = [v71 constraintLessThanOrEqualToAnchor:v72 constant:-16.0];

  *(void *)(v25 + 144) = v73;
  id v74 = [v49 bottomAnchor];
  id v75 = [v21 bottomAnchor];
  id v76 = [v74 constraintEqualToAnchor:v75 constant:-12.0];

  *(void *)(v25 + 152) = v76;
  uint64_t v77 = *(void **)&v1[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel];
  id v78 = [v77 topAnchor];
  id v79 = [*(id *)&v1[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel] bottomAnchor];
  id v80 = [v78 constraintEqualToAnchor:v79];

  *(void *)(v25 + 160) = v80;
  uint64_t v81 = *(void **)&v1[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel];
  id v82 = [v81 trailingAnchor];
  id v83 = [v21 trailingAnchor];
  id v84 = [v82 constraintEqualToAnchor:v83 constant:-16.0];

  *(void *)(v25 + 168) = v84;
  id v85 = [v81 lastBaselineAnchor];
  id v86 = [v77 lastBaselineAnchor];
  id v87 = [v85 constraintEqualToAnchor:v86];

  *(void *)(v25 + 176) = v87;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v93 activateConstraints:isa];
}

uint64_t sub_1005361F4()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v1 = (void *)result;
    uint64_t v2 = self;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_10038F734;
    *(void *)(v4 + 24) = v3;
    aBlock[4] = sub_100070A14;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100535118;
    aBlock[3] = &unk_1008CD578;
    id v5 = _Block_copy(aBlock);
    id v6 = v1;
    swift_retain();
    swift_release();
    [(id)v2 performWithoutAnimation:v5];
    _Block_release(v5);
    LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    uint64_t result = swift_release();
    if (v2) {
      __break(1u);
    }
  }
  return result;
}

void sub_100536384(void *a1, char *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  id v78 = a3;
  id v84 = a2;
  uint64_t v83 = type metadata accessor for Date();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  id v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(void **)(v5 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
  *(void *)(v5 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel) = a1;
  id v16 = a1;

  uint64_t v17 = type metadata accessor for Trainer();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
  id v18 = sub_1005CBFB4((uint64_t)v16, (uint64_t)v14);
  sub_10008DB18((uint64_t)v14, &qword_100950BA8);
  id v19 = objc_allocWithZone((Class)NSMutableAttributedString);
  id v81 = v18;
  id v20 = [v19 initWithAttributedString:v18];
  id v21 = [v20 length];
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v23 = qword_10094AE28;
  uint64_t v24 = NSFontAttributeName;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = (void *)qword_1009610B8;
  *(void *)(inited + 64) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 40) = v25;
  id v26 = v25;
  sub_1000DFC2C(inited);
  type metadata accessor for Key(0);
  sub_10008F854((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 addAttributes:isa range:0 v21];

  id v28 = *(void **)(v6 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel);
  id v80 = v20;
  [v28 setAttributedText:v20];
  id v29 = *(void **)(v6 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel);
  id v30 = sub_1005CC8F0();
  [v29 setAttributedText:v30];

  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = v16;
  id v33 = v16;
  swift_retain_n();
  id v34 = v33;
  id v35 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
  id v36 = [v35 source];

  LODWORD(v35) = [v36 _hasFirstPartyBundleID];
  id v79 = (void (*)(void))a4;
  if (v35)
  {
    id v37 = sub_1005CD058();
    sub_100536E28((uint64_t)v37, v31, v34);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v77 = a5;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_100537BCC;
    *(void *)(v38 + 24) = v32;
    swift_retain();
    uint64_t v39 = MindfulnessSessionViewModel.sourceRevision.getter();
    id v40 = [(id)v39 source];

    LOBYTE(v39) = [v40 _isAppleWatch];
    if (v39)
    {
      id v37 = sub_1005CD128(28.0);
      id v41 = self;
      uint64_t v90 = sub_10022D7A4;
      uint64_t v91 = v38;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      id v88 = sub_100259288;
      uint64_t v89 = &unk_1008CD640;
      id v42 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v41 fetchWatchIconWithParameters:v37 completion:v42];
      swift_release();
      double v43 = v42;
    }
    else
    {
      id v37 = sub_1005CD288(28.0);
      id v44 = self;
      uint64_t v90 = sub_10022D7A4;
      uint64_t v91 = v38;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      id v88 = sub_100259288;
      uint64_t v89 = &unk_1008CD618;
      id v45 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v44 fetchPhoneIconWithParameters:v37 completion:v45];
      swift_release();
      double v43 = v45;
    }
    _Block_release(v43);
    swift_release();
    swift_release();
    a5 = v77;
  }

  swift_release();
  id v46 = self;
  MindfulnessSessionViewModel.endDate.getter();
  v47.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v11, v83);
  id v48 = v84;
  if (qword_10094AF38 != -1) {
    swift_once();
  }
  id v49 = [v46 formattedListStringForDate:v47.super.isa font:qword_1009642B8];

  id v50 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  [v50 appendAttributedString:v49];
  [*(id *)(v6 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel) setAttributedText:v50];
  uint64_t v51 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter();
  if ((v52 & 1) != 0 || v51 != 3) {
    goto LABEL_29;
  }
  unint64_t v53 = MindfulnessSessionViewModel.mindfulnessSessions.getter();
  unint64_t v54 = v53;
  if (v53 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_15;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (!*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_28;
  }
LABEL_15:
  if ((v54 & 0xC000000000000001) != 0)
  {
    id v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v55 = *(id *)(v54 + 32);
  }
  id v56 = v55;
  swift_bridgeObjectRelease();
  id v57 = [v56 metadata];
  if (v57)
  {
    id v58 = v57;
    uint64_t v59 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v59 + 16) && (unint64_t v62 = sub_1000DA1C0(v60, v61), (v63 & 1) != 0))
    {
      sub_10008F484(*(void *)(v59 + 56) + 32 * v62, (uint64_t)&v85);
    }
    else
    {
      long long v85 = 0u;
      long long v86 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v86 + 1))
    {
      sub_10005C2B0(&v85, &aBlock);
      *(void *)&long long v85 = 0;
      *((void *)&v85 + 1) = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)();
      uint64_t v64 = *((void *)&v85 + 1);
      uint64_t v83 = v85;
      id v65 = *(char **)&v48[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
      uint64_t v66 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v67 = v34;
      id v68 = v78;
      id v69 = v79;
      sub_10008A670((uint64_t)v79);
      sub_10048DC9C(v83, v64, v65, v66, v67, v68, v69, a5);
      sub_10005E5F8((uint64_t)v69);

      swift_bridgeObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&aBlock);
      swift_release();
      return;
    }
  }
  else
  {
    long long v85 = 0u;
    long long v86 = 0u;
  }

  sub_10008DB18((uint64_t)&v85, &qword_100955A00);
LABEL_29:
  uint64_t v70 = *(void *)&v48[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
  id v71 = v34;
  char v72 = sub_100719620();

  if (v72)
  {
    uint64_t v73 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v74 = v71;
    uint64_t v75 = (uint64_t)v79;
    sub_10008A670((uint64_t)v79);
    swift_retain();
    id v76 = v48;
    sub_10048E6D8(v74, v70, v73, v74, v76, v75, a5);

    swift_release();
    sub_10005E5F8(v75);

    swift_release();
  }
  else
  {
  }
}

void sub_100536E28(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = *(void **)(Strong + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
    id v8 = v7;

    if (v7)
    {
      type metadata accessor for MindfulnessSessionViewModel();
      id v9 = v8;
      id v10 = a3;
      char v11 = static NSObject.== infix(_:_:)();

      if (v11)
      {
        swift_beginAccess();
        uint64_t v12 = swift_unknownObjectWeakLoadStrong();
        if (v12)
        {
          uint64_t v13 = (void *)v12;
          id v14 = *(id *)(v12 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView);

          [v14 setImage:a1];
        }
        id v15 = sub_1004A52F0();
        swift_beginAccess();
        uint64_t v16 = swift_unknownObjectWeakLoadStrong();
        if (v16)
        {
          uint64_t v17 = (void *)v16;
          id v18 = *(id *)(v16 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView);

          id v19 = [v15 gradientDarkColor];
          id v20 = [v15 gradientDarkColor];
          id v21 = (id)FIUICircularGradientImage();

          [v18 setImage:v21];
        }
      }
    }
  }
}

void sub_100536FF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
}

void sub_100537004(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v11 = (void *)Strong;
    uint64_t v12 = *(void **)(Strong + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
    id v13 = v12;

    if (v12)
    {
      uint64_t v14 = type metadata accessor for MindfulnessSessionViewModel();
      id v15 = v13;
      id v16 = a3;
      char v17 = static NSObject.== infix(_:_:)();

      if (v17)
      {
        if (a1)
        {
          uint64_t v18 = *(void *)&a1[OBJC_IVAR___CHCatalogItemViewModel_title];
          id v19 = objc_allocWithZone((Class)NSMutableAttributedString);
          double v43 = a1;
          id v20 = [v19 initWithAttributedString:v18];
          id v42 = [v20 length];
          sub_1000AFA94((uint64_t *)&unk_10095BF70);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10074E640;
          *(void *)(inited + 32) = NSForegroundColorAttributeName;
          id v22 = self;
          uint64_t v23 = NSForegroundColorAttributeName;
          id v24 = [v22 whiteColor];
          uint64_t v25 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
          *(void *)(inited + 40) = v24;
          *(void *)(inited + 64) = v25;
          *(void *)(inited + 72) = NSFontAttributeName;
          uint64_t v26 = qword_10094AE28;
          id v27 = NSFontAttributeName;
          if (v26 != -1) {
            swift_once();
          }
          id v28 = (void *)qword_1009610B8;
          *(void *)(inited + 104) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
          *(void *)(inited + 80) = v28;
          id v29 = v28;
          sub_1000DFC2C(inited);
          type metadata accessor for Key(0);
          sub_10008F854((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v20 addAttributes:isa range:0 v42];

          swift_beginAccess();
          uint64_t v31 = swift_unknownObjectWeakLoadStrong();
          if (v31)
          {
            uint64_t v32 = (void *)v31;
            id v33 = *(id *)(v31 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel);

            [v33 setAttributedText:v20];
          }
          uint64_t v34 = swift_allocObject();
          swift_beginAccess();
          id v35 = (void *)swift_unknownObjectWeakLoadStrong();
          swift_unknownObjectWeakInit();

          id v36 = (int64x2_t *)swift_allocObject();
          v36[1].i64[0] = v34;
          v36[1].i64[1] = (uint64_t)v16;
          v36[2].i64[0] = a5;
          v36[2].i64[1] = a6;
          v36[3] = vdupq_n_s64(0x4048000000000000uLL);
          id v37 = v16;
          swift_retain();
          sub_10008A670(a5);
          sub_100485D1C(v43, (uint64_t)sub_100537F64, (uint64_t)v36);

          swift_release();
          swift_release();
        }
        else
        {
          static os_log_type_t.error.getter();
          uint64_t v38 = (void *)HKLogActivity;
          sub_1000AFA94((uint64_t *)&unk_1009546D0);
          uint64_t v39 = swift_allocObject();
          *(_OWORD *)(v39 + 16) = xmmword_10074E640;
          *(void *)(v39 + 56) = &type metadata for String;
          *(void *)(v39 + 64) = sub_1000AA64C();
          *(void *)(v39 + 32) = 0xD000000000000050;
          *(void *)(v39 + 40) = 0x80000001007CA450;
          *(void *)(v39 + 96) = v14;
          *(void *)(v39 + 104) = sub_10008F854((unint64_t *)&qword_100950C98, (void (*)(uint64_t))&type metadata accessor for MindfulnessSessionViewModel);
          *(void *)(v39 + 72) = v16;
          id v40 = v16;
          id v41 = v38;
          os_log(_:dso:log:_:_:)();

          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

void sub_1005374DC(uint64_t a1, double a2, double a3, uint64_t a4, void *a5, void (*a6)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    id v13 = *(void **)(Strong + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
    id v14 = v13;

    if (v13)
    {
      type metadata accessor for MindfulnessSessionViewModel();
      id v15 = v14;
      id v16 = a5;
      char v17 = static NSObject.== infix(_:_:)();

      if (v17)
      {
        if (a1)
        {
          swift_beginAccess();
          uint64_t v18 = swift_unknownObjectWeakLoadStrong();
          if (v18)
          {
            id v19 = (void *)v18;
            id v20 = *(id *)(v18 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint);

            [v20 setConstant:a2];
          }
          swift_beginAccess();
          uint64_t v21 = swift_unknownObjectWeakLoadStrong();
          if (v21)
          {
            id v22 = (void *)v21;
            id v23 = *(id *)(v21 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint);

            [v23 setConstant:a3];
          }
          swift_beginAccess();
          uint64_t v24 = swift_unknownObjectWeakLoadStrong();
          if (v24)
          {
            uint64_t v25 = (void *)v24;
            id v26 = objc_retain(*(id *)(v24
                                    + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint));

            [v26 setConstant:a2];
          }
          swift_beginAccess();
          uint64_t v27 = swift_unknownObjectWeakLoadStrong();
          if (v27)
          {
            id v28 = (void *)v27;
            id v29 = objc_retain(*(id *)(v27
                                    + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint));

            [v29 setConstant:a3];
          }
          swift_beginAccess();
          uint64_t v30 = swift_unknownObjectWeakLoadStrong();
          if (v30)
          {
            uint64_t v31 = (void *)v30;
            id v32 = objc_retain(*(id *)(v30
                                    + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint));

            [v32 setActive:0];
          }
          swift_beginAccess();
          uint64_t v33 = swift_unknownObjectWeakLoadStrong();
          if (v33)
          {
            uint64_t v34 = (void *)v33;
            id v35 = objc_retain(*(id *)(v33
                                    + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint));

            [v35 setActive:1];
          }
          swift_beginAccess();
          uint64_t v36 = swift_unknownObjectWeakLoadStrong();
          if (v36)
          {
            id v37 = (void *)v36;
            id v38 = *(id *)(v36 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView);

            [v38 setImage:a1];
          }
        }
      }
    }
  }
  if (a6) {
    a6();
  }
}

id sub_100537814()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MindfulnessSessionListTableViewCell();
  [super prepareForReuse];
  id v1 = *(void **)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel];
  *(void *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel] = 0;

  [*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint] setConstant:28.0];
  [*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint] setConstant:28.0];
  [*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint] setConstant:48.0];
  [*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint] setConstant:48.0];
  [*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint] setActive:0];
  [*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint] setActive:1];
  return [*(id *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView] setImage:0];
}

id sub_100537998()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionListTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for MindfulnessSessionListTableViewCell()
{
  return self;
}

uint64_t sub_100537B0C()
{
  return swift_deallocObject();
}

uint64_t sub_100537B44()
{
  return swift_deallocObject();
}

uint64_t sub_100537B54()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100537B8C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100537BCC(uint64_t a1)
{
  sub_100536E28(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100537BD4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100537C0C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  v27[1] = a5;
  id v28 = a4;
  uint64_t v29 = a1;
  uint64_t v6 = sub_1000AFA94(&qword_100950BA8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)v27 - v10;
  uint64_t v12 = type metadata accessor for Trainer();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v17 = (void *)Strong;
    uint64_t v18 = *(void **)(Strong + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel);
    id v19 = v18;

    if (v18)
    {
      type metadata accessor for MindfulnessSessionViewModel();
      id v20 = v19;
      id v21 = a3;
      char v22 = static NSObject.== infix(_:_:)();

      if (v22)
      {
        sub_1003A1240(v29, (uint64_t)v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_10008DB18((uint64_t)v11, &qword_100950BA8);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
          swift_beginAccess();
          uint64_t v23 = swift_unknownObjectWeakLoadStrong();
          if (v23)
          {
            uint64_t v24 = (void *)v23;
            id v25 = *(id *)(v23 + OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel);

            (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v15, v12);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
            id v26 = sub_1005CBFB4((uint64_t)v21, (uint64_t)v9);
            sub_10008DB18((uint64_t)v9, &qword_100950BA8);
            [v25 setAttributedText:v26];
          }
          if (v28) {
            v28();
          }
          (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        }
      }
    }
  }
}

uint64_t sub_100537F14()
{
  swift_release();

  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_100537F64(uint64_t a1)
{
  sub_1005374DC(a1, *(double *)(v1 + 48), *(double *)(v1 + 56), *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_100537F74()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR___CHMindfulnessSessionListTableViewCell_mindfulnessSessionViewModel] = 0;
  uint64_t v2 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_insetContentView;
  id v3 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v2] = v3;
  uint64_t v4 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageView;
  id v5 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v6 = (void *)UIView.withContentMode(_:)();

  id v7 = [v6 layer];
  [v7 setCornerRadius:3.0];

  [v6 setClipsToBounds:1];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v4] = v6;
  uint64_t v8 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageView;
  id v9 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v10 = (void *)UIView.withContentMode(_:)();

  id v11 = [v10 layer];
  [v11 setCornerRadius:3.0];

  [v10 setClipsToBounds:1];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v8] = v10;
  uint64_t v12 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackView;
  id v13 = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v13 setAxis:1];
  [v13 setDistribution:3];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v12] = v13;
  uint64_t v14 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_titleLabel;
  id v15 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  LODWORD(v16) = 1148846080;
  [v15 setContentCompressionResistancePriority:1 forAxis:v16];
  if (qword_10094AE28 != -1) {
    swift_once();
  }
  char v17 = (void *)UILabel.withFont(_:)();

  [v17 setLineBreakMode:0];
  [v17 setNumberOfLines:0];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v14] = v17;
  uint64_t v18 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_subtitleLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v18] = v19;
  uint64_t v20 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_dateLabel;
  id v21 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AE30 != -1) {
    swift_once();
  }
  char v22 = (void *)UILabel.withFont(_:)();

  id v23 = [self secondaryLabelColor];
  uint64_t v24 = (void *)UILabel.withTextColor(_:)();

  [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v20] = v24;
  uint64_t v25 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewWidthConstraint;
  *(void *)&v1[v25] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v26 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_imageViewHeightConstraint;
  *(void *)&v1[v26] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v27 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewWidthConstraint;
  *(void *)&v1[v27] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v28 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_gradientImageViewHeightConstraint;
  *(void *)&v1[v28] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v29 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_labelStackViewLeadingConstraint;
  *(void *)&v1[v29] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v30 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewCenterXConstraint;
  *(void *)&v1[v30] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v31 = OBJC_IVAR___CHMindfulnessSessionListTableViewCell_iconImageViewLeadingConstraint;
  *(void *)&v1[v31] = [objc_allocWithZone((Class)NSLayoutConstraint) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10053845C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1005384A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = IndexPath.section.getter();
  if (v8 >= (uint64_t)[a3 numberOfSections]
    || (uint64_t v9 = IndexPath.item.getter(),
        v9 >= (uint64_t)[a3 numberOfItemsInSection:IndexPath.section.getter()]))
  {
    swift_beginAccess();
    sub_1005DBBC4(a1, (uint64_t)v7);
    sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_10095F740);
    swift_endAccess();
    sub_10001C250();
    ImpressionsCalculator.removeElement(_:)();
    swift_release();
  }
  else
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v11 = [a3 layoutAttributesForItemAtIndexPath:isa];

    if (v11)
    {
      [v11 frame];
      sub_10001C250();
      ImpressionsCalculator.addElement(_:at:)();

      swift_release();
    }
  }
}

uint64_t sub_100538690()
{
  return swift_unknownObjectRetain();
}

id sub_100538798()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdvancedGoalViewFactory();
  return [super dealloc];
}

uint64_t type metadata accessor for AdvancedGoalViewFactory()
{
  return self;
}

uint64_t sub_1005387F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.calendar.setter();
}

uint64_t sub_1005388B8(void *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v27 = a5;
  uint64_t v29 = a4;
  uint64_t v26 = a3;
  int v25 = a2;
  uint64_t v6 = (int *)type metadata accessor for AdvancedChangeGoalView();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)&v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = sub_1000AFA94(&qword_100961270);
  uint64_t v9 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  id v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v14 = &v24[-v13];
  uint64_t *v8 = swift_getKeyPath();
  sub_1000AFA94(&qword_100952468);
  swift_storeEnumTagMultiPayload();
  id v15 = (char *)v8 + v6[5];
  sub_100538BF8();
  sub_100538C38(&qword_100961278, (void (*)(uint64_t))sub_100538BF8);
  id v16 = a1;
  *(void *)id v15 = Environment.init<A>(_:)();
  v15[8] = v17 & 1;
  uint64_t v18 = (uint64_t *)((char *)v8 + v6[6]);
  type metadata accessor for GoalDaysModel();
  sub_100538C38(&qword_100952560, (void (*)(uint64_t))type metadata accessor for GoalDaysModel);
  *uint64_t v18 = ObservedObject.init(wrappedValue:)();
  v18[1] = v19;
  *((unsigned char *)v8 + v6[7]) = v25;
  *(uint64_t *)((char *)v8 + v6[8]) = v26;
  *((unsigned char *)v8 + v6[9]) = v27;
  sub_100538C38(&qword_100961280, (void (*)(uint64_t))type metadata accessor for AdvancedChangeGoalView);
  View.environment<A>(_:)();
  sub_100538C80((uint64_t)v8);
  uint64_t v20 = v28;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v28);
  id v21 = objc_allocWithZone((Class)sub_1000AFA94(&qword_100961288));
  uint64_t v22 = _UIHostingView.init(rootView:)();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v20);
  return v22;
}

uint64_t sub_100538BD0()
{
  return EnvironmentValues.calendar.getter();
}

unint64_t sub_100538BF8()
{
  unint64_t result = qword_100963830;
  if (!qword_100963830)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100963830);
  }
  return result;
}

uint64_t sub_100538C38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100538C80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AdvancedChangeGoalView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100538CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(type metadata accessor for AAUIAwardsDataProviderSection() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_100067B0C(&qword_1009555A8, (void (*)(uint64_t))&type metadata accessor for AAUIAwardsDataProviderSection);
  uint64_t v7 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_100538E00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AnyRegexOutput.count.getter();
  *a1 = result;
  return result;
}

BOOL sub_100538E2C(void *a1, void *a2)
{
  return *a2 == *a1;
}

uint64_t sub_100538E40(void *a1)
{
  return Int.hashValue.getter(*a1);
}

uint64_t sub_100538E48()
{
  return AnyRegexOutput.subscript.getter();
}

uint64_t sub_100538E70@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_1000B1CA0(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    sub_100093E60((long long *)&v5[5 * a1 + 4], a2);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(&v5[5 * a1 + 4], &v5[5 * a1 + 9], 40 * (v7 - a1));
      Swift::Int v5[2] = v7;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100538F64(unint64_t a1)
{
  __n128 v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    __n128 v3 = sub_1005EC2DC(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100539044@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1005EC2C8(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(sub_1000AFA94(&qword_10094F370) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_1000AEEC8(v10, a2, &qword_10094F370);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

void sub_10053920C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  URL._bridgeToObjectiveC()(v5);
  id v7 = v6;
  (*(void (**)(uint64_t, Class, void *))(a3 + 16))(a3, isa, v6);
}

uint64_t sub_100539288(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000AFA94(&qword_10094F370);
  __chkstk_darwin(v5);
  id v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  unint64_t v10 = &v25[-v9];
  uint64_t v11 = v2 + OBJC_IVAR___CHNavigator_urlKeys;
  uint64_t result = swift_beginAccess();
  uint64_t v13 = *(void **)v11;
  uint64_t v14 = *(void *)(*(void *)v11 + 16);
  if (v14)
  {
    BOOL v15 = v13[4] == a1 && v13[5] == a2;
    if (v15 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      unint64_t v16 = 0;
LABEL_8:
      swift_beginAccess();
      sub_100538F64(v16);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_100539044(v16, (uint64_t)v10);
      swift_endAccess();
      uint64_t v17 = *(int *)(v5 + 48);
      uint64_t v18 = sub_1000AFA94(&qword_1009596E0);
      uint64_t v19 = *(void *)(v18 - 8);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32))(v7, v10, v18);
      uint64_t v20 = (uint64_t (**)(uint64_t))&v7[*(int *)(v5 + 48)];
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = *(_OWORD *)&v10[v17];
      swift_release();
      *uint64_t v20 = sub_10053A744;
      v20[1] = (uint64_t (*)(uint64_t))v21;
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v19 + 8))(v7, v18);
    }
    else
    {
      uint64_t v22 = v13 + 7;
      uint64_t v23 = 1;
      while (v14 != v23)
      {
        unint64_t v16 = v23;
        if (*(v22 - 1) != a1 || *v22 != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v23 = v16 + 1;
          v22 += 2;
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_8;
      }
    }
  }
  return result;
}

uint64_t sub_100539564(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v88 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  long long v86 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for DispatchQoS();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for URL();
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v78 = v6;
  id v79 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for AnyRegexOutput.Element();
  uint64_t v77 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v90 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_1009596C8);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000AFA94(&qword_1009596D0);
  uint64_t v11 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v92 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_1009596E0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_10094F370);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v95 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_1009612C8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v103 = (uint64_t)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v108 = (char *)&v74 - v24;
  __chkstk_darwin(v23);
  uint64_t v102 = (uint64_t)&v74 - v25;
  uint64_t v82 = a1;
  uint64_t v104 = URL.absoluteString.getter();
  uint64_t v105 = v26;
  int v27 = (uint64_t *)(v2 + OBJC_IVAR___CHNavigator_urlHandlers);
  swift_beginAccess();
  uint64_t v28 = *v27;
  char v111 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v94 = v18;
  unint64_t v112 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  unint64_t v29 = *(void *)(v28 + 16);
  uint64_t v107 = (void (**)(void))(v14 + 32);
  uint64_t v99 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v89 = v11;
  uint64_t v93 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v30 = (uint64_t)v10;
  uint64_t v100 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v98 = v28;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v32 = 0;
  unint64_t v101 = v29;
  uint64_t v97 = v16;
  uint64_t v96 = v10;
  while (1)
  {
    uint64_t v110 = 0;
    if (v32 == v29)
    {
      uint64_t v33 = *v111;
      uint64_t v34 = v103;
      (*v111)(v103, 1, 1, v17);
      unint64_t v109 = v29;
    }
    else
    {
      uint64_t v34 = v103;
      if (v32 >= *(void *)(v98 + 16))
      {
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v35 = v94;
      sub_10053A428(v98+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v94 + 72) * v32, v103);
      unint64_t v109 = v32 + 1;
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
      v33(v34, 0, 1, v17);
    }
    uint64_t v36 = *v112;
    uint64_t v37 = 1;
    if ((*v112)(v34, 1, v17) != 1)
    {
      uint64_t v38 = *(int *)(v17 + 48);
      uint64_t v39 = *v107;
      ((void (*)(char *, uint64_t, uint64_t))*v107)(v95, v34, v13);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = *(_OWORD *)(v34 + v38);
      id v41 = (uint64_t (**)(uint64_t))&v108[*(int *)(v17 + 48)];
      v39();
      uint64_t v30 = (uint64_t)v96;
      uint64_t v37 = 0;
      *id v41 = sub_10053A690;
      v41[1] = (uint64_t (*)(uint64_t))v40;
      unint64_t v16 = v97;
    }
    uint64_t v42 = (uint64_t)v108;
    v33((uint64_t)v108, v37, 1, v17);
    uint64_t v43 = v102;
    sub_1000AEEC8(v42, v102, &qword_1009612C8);
    int v44 = v36(v43, 1, v17);
    if (v44 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v44 != 1;
    }
    id v45 = (uint64_t *)(v43 + *(int *)(v17 + 48));
    uint64_t v47 = *v45;
    uint64_t v46 = v45[1];
    ((void (*)(char *, uint64_t, uint64_t))*v107)(v16, v43, v13);
    uint64_t v48 = v110;
    Regex.firstMatch(in:)();
    if (v48)
    {
      swift_errorRelease();
      (*v99)(v30, 1, 1, v106);
      unint64_t v29 = v101;
      goto LABEL_3;
    }
    int v49 = (*v93)(v30, 1, v106);
    unint64_t v29 = v101;
    if (v49 != 1) {
      break;
    }
LABEL_3:
    swift_release();
    (*v100)(v16, v13);
    uint64_t result = sub_10008DB18(v30, &qword_1009596C8);
    unint64_t v32 = v109;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v92, v30, v106);
  swift_getKeyPath();
  Regex.Match.subscript.getter();
  uint64_t result = swift_release();
  uint64_t v50 = aBlock[0];
  if ((aBlock[0] & 0x8000000000000000) == 0)
  {
    unint64_t v112 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v13;
    uint64_t v51 = _swiftEmptyArrayStorage;
    uint64_t v76 = v46;
    uint64_t v75 = v47;
    if (aBlock[0])
    {
      uint64_t v52 = 0;
      unint64_t v53 = (uint64_t (**)(char *, uint64_t))(v77 + 8);
      do
      {
        __chkstk_darwin(result);
        *(&v74 - 2) = v52;
        swift_getKeyPath();
        id v55 = v90;
        Regex.Match.subscript.getter();
        swift_release();
        AnyRegexOutput.Element.range.getter();
        char v57 = v56;
        uint64_t result = (*v53)(v55, v91);
        if ((v57 & 1) == 0)
        {
          String.subscript.getter();
          uint64_t v58 = static String._fromSubstring(_:)();
          uint64_t v60 = v59;
          swift_bridgeObjectRelease();
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_100084014(0, v51[2] + 1, 1, v51);
            uint64_t v51 = (void *)result;
          }
          unint64_t v62 = v51[2];
          unint64_t v61 = v51[3];
          if (v62 >= v61 >> 1)
          {
            uint64_t result = (uint64_t)sub_100084014((void *)(v61 > 1), v62 + 1, 1, v51);
            uint64_t v51 = (void *)result;
          }
          v51[2] = v62 + 1;
          unint64_t v54 = &v51[2 * v62];
          v54[4] = v58;
          v54[5] = v60;
        }
        ++v52;
      }
      while (v50 != v52);
    }
    swift_bridgeObjectRelease();
    sub_1000DF004();
    char v63 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v64 = v80;
    id v65 = v79;
    uint64_t v66 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v82, v81);
    unint64_t v67 = (*(unsigned __int8 *)(v64 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    id v68 = (char *)swift_allocObject();
    uint64_t v69 = v76;
    *((void *)v68 + 2) = v75;
    *((void *)v68 + 3) = v69;
    *((void *)v68 + 4) = v51;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v68[v67], v65, v66);
    aBlock[4] = sub_10053A5EC;
    aBlock[5] = v68;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008CD6D8;
    uint64_t v70 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v71 = v83;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100067B0C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    char v72 = v86;
    uint64_t v73 = v88;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v70);
    swift_release();

    (*(void (**)(char *, uint64_t))(v87 + 8))(v72, v73);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v71, v85);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v92, v106);
    (*v100)(v97, (uint64_t)v112);
    return v44 != 1;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_10053A3A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Navigator();
  [super dealloc];
}

uint64_t sub_10053A428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094F370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053A490@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AnyRegexOutput.count.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10053A4BC()
{
  return AnyRegexOutput.subscript.getter();
}

uint64_t sub_10053A4E4()
{
  return 8;
}

BOOL sub_10053A4F0(void *a1, void *a2)
{
  return *a2 == *a1;
}

uint64_t sub_10053A504(void *a1)
{
  return Int.hashValue.getter(*a1);
}

void *sub_10053A50C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10053A518()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10053A5EC()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  return (*(uint64_t (**)(void, unint64_t))(v0 + 16))(*(void *)(v0 + 32), v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_10053A658()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10053A690(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_10053A6C8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_10053A6F4()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_10053A72C(uint64_t a1, uint64_t a2)
{
  sub_10053920C(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_10053A74C()
{
  unint64_t result = qword_1009612D0;
  if (!qword_1009612D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009612D0);
  }
  return result;
}

unint64_t sub_10053A7A4()
{
  unint64_t result = qword_1009612D8[0];
  if (!qword_1009612D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1009612D8);
  }
  return result;
}

uint64_t sub_10053A7FC(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_100961338 + dword_100961338);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10024C1D0;
  return v5(a1);
}

uint64_t sub_10053A8A4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_100961330 + dword_100961330);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10024D1DC;
  return v4();
}

unint64_t sub_10053A94C()
{
  unint64_t result = qword_1009612F0;
  if (!qword_1009612F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009612F0);
  }
  return result;
}

unint64_t sub_10053A9A8()
{
  unint64_t result = qword_1009612F8;
  if (!qword_1009612F8)
  {
    sub_1000A1370(qword_100961300);
    sub_1003D015C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009612F8);
  }
  return result;
}

uint64_t sub_10053AA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10053AAD4();
  void *v5 = v2;
  v5[1] = sub_10005DB5C;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10053AAD4()
{
  unint64_t result = qword_100961318;
  if (!qword_100961318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961318);
  }
  return result;
}

uint64_t sub_10053AB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100961328 + dword_100961328);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_1001A0E60;
  return v8(a2, a3);
}

ValueMetadata *type metadata accessor for TrendEntityQuery()
{
  return &type metadata for TrendEntityQuery;
}

void *sub_10053ABF0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v2 = 0;
  uint64_t v3 = a1 + 40;
  uint64_t v27 = -(uint64_t)v1;
  uint64_t v4 = _swiftEmptyArrayStorage;
  uint64_t v24 = a1 + 40;
  unint64_t v25 = *(void *)(a1 + 16);
  do
  {
    uint64_t v26 = v4;
    if (v2 <= v1) {
      unint64_t v5 = v1;
    }
    else {
      unint64_t v5 = v2;
    }
    uint64_t v6 = -(uint64_t)v5;
    for (unint64_t i = (unsigned char *)(v3 + 16 * v2++); ; i += 16)
    {
      if (v6 + v2 == 1) {
        __break(1u);
      }
      uint64_t v8 = *((void *)i - 1);
      char v9 = *i;
      swift_retain();
      AppDependency.wrappedValue.getter();
      id v10 = v28[0];
      v28[0] = 0;
      id v11 = [v10 wheelchairUseWithError:v28];

      if (v11)
      {
        id v12 = v28[0];
        [v11 wheelchairUse];

        uint64_t v13 = (void *)sub_1000AAF10();
        uint64_t v15 = v14;
      }
      else
      {
        id v16 = v28[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v13 = (void *)sub_1000AAF10();
        uint64_t v15 = v17;
        swift_errorRelease();
      }
      v28[0] = v13;
      v28[1] = v15;
      sub_1000A06D0();
      char v18 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v18) {
        break;
      }
      swift_release();
      ++v2;
      if (v27 + v2 == 1) {
        return v26;
      }
    }
    uint64_t v4 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v29 = v26;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1001C95C8(0, v26[2] + 1, 1);
      uint64_t v4 = v29;
    }
    uint64_t v3 = v24;
    unint64_t v21 = v4[2];
    unint64_t v20 = v4[3];
    if (v21 >= v20 >> 1)
    {
      sub_1001C95C8(v20 > 1, v21 + 1, 1);
      uint64_t v4 = v29;
    }
    uint64_t v4[2] = v21 + 1;
    uint64_t v22 = &v4[2 * v21];
    v22[4] = v8;
    *((unsigned char *)v22 + 40) = v9;
    unint64_t v1 = v25;
  }
  while (v27 + v2);
  return v4;
}

uint64_t sub_10053AE88(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10053AEA8, 0, 0);
}

uint64_t sub_10053AEA8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v1 + 32);
    swift_bridgeObjectRetain();
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v7 = *v3++;
      char v6 = v7;
      if (v7 <= 8)
      {
        sub_1000AFA94(&qword_10094D338);
        type metadata accessor for AppDependencyManager();
        static AppDependencyManager.shared.getter();
        uint64_t v8 = AppDependency.__allocating_init(key:manager:)();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1001E8488(0, v4[2] + 1, 1, v4);
        }
        unint64_t v10 = v4[2];
        unint64_t v9 = v4[3];
        if (v10 >= v9 >> 1) {
          uint64_t v4 = sub_1001E8488((void *)(v9 > 1), v10 + 1, 1, v4);
        }
        uint64_t v4[2] = v10 + 1;
        unint64_t v5 = &v4[2 * v10];
        v5[4] = v8;
        *((unsigned char *)v5 + 40) = v6;
      }
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  id v11 = *(uint64_t (**)(void *))(v0 + 8);
  return v11(v4);
}

uint64_t sub_10053B020()
{
  return _swift_task_switch(sub_10053B03C, 0, 0);
}

uint64_t sub_10053B03C()
{
  sub_1000AFA94(&qword_10094E910);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100750560;
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  *(void *)(v1 + 32) = AppDependency.__allocating_init(key:manager:)();
  *(unsigned char *)(v1 + 40) = 1;
  static AppDependencyManager.shared.getter();
  *(void *)(v1 + 48) = AppDependency.__allocating_init(key:manager:)();
  *(unsigned char *)(v1 + 56) = 5;
  static AppDependencyManager.shared.getter();
  *(void *)(v1 + 64) = AppDependency.__allocating_init(key:manager:)();
  *(unsigned char *)(v1 + 72) = 0;
  static AppDependencyManager.shared.getter();
  *(void *)(v1 + 80) = AppDependency.__allocating_init(key:manager:)();
  *(unsigned char *)(v1 + 88) = 2;
  static AppDependencyManager.shared.getter();
  *(void *)(v1 + 96) = AppDependency.__allocating_init(key:manager:)();
  *(unsigned char *)(v1 + 104) = 6;
  static AppDependencyManager.shared.getter();
  *(void *)(v1 + 112) = AppDependency.__allocating_init(key:manager:)();
  *(unsigned char *)(v1 + 120) = 4;
  static AppDependencyManager.shared.getter();
  *(void *)(v1 + 128) = AppDependency.__allocating_init(key:manager:)();
  *(unsigned char *)(v1 + 136) = 3;
  static AppDependencyManager.shared.getter();
  *(void *)(v1 + 144) = AppDependency.__allocating_init(key:manager:)();
  *(unsigned char *)(v1 + 152) = 7;
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10053B26C(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = dword_100961330;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[10] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10053B33C;
  return ((uint64_t (__cdecl *)())((char *)&dword_100961330 + v3))();
}

uint64_t sub_10053B33C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[11] = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    v4[12] = a1;
    return _swift_task_switch(sub_10053B4C8, 0, 0);
  }
}

uint64_t sub_10053B4C8()
{
  uint64_t v1 = v0[12];
  swift_bridgeObjectRetain();
  uint64_t v2 = (uint64_t)sub_10053ABF0(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (void **)(v0 + 7);
    swift_bridgeObjectRetain();
    uint64_t v22 = v2;
    unint64_t v5 = (unsigned char *)(v2 + 40);
    while (1)
    {
      uint64_t v6 = *((void *)v5 - 1);
      char v7 = *v5;
      swift_retain();
      AppDependency.wrappedValue.getter();
      uint64_t v8 = (void *)v0[6];
      *uint64_t v4 = 0;
      id v9 = [v8 wheelchairUseWithError:v0 + 7];

      unint64_t v10 = *v4;
      if (v9)
      {
        id v11 = v10;
        [v9 wheelchairUse];

        uint64_t v12 = sub_1000AAF10();
        uint64_t v14 = v13;
      }
      else
      {
        id v15 = v10;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v12 = sub_1000AAF10();
        uint64_t v14 = v16;
        swift_errorRelease();
      }
      uint64_t v18 = v0[8];
      uint64_t v17 = v0[9];
      v0[2] = v12;
      v0[3] = v14;
      v0[4] = v18;
      v0[5] = v17;
      sub_1000A06D0();
      uint64_t v19 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
      swift_bridgeObjectRelease();
      if (!v19) {
        break;
      }
      v5 += 16;
      swift_release();
      if (!--v3)
      {
        uint64_t v2 = v22;
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_1000AFA94(&qword_10094E910);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1007509E0;
    *(void *)(v2 + 32) = v6;
    *(unsigned char *)(v2 + 40) = v7;
  }
LABEL_10:
  unint64_t v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v2);
}

uint64_t sub_10053B754(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  unint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10053B7C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10053B824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10053B888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10053B8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10053B950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10053B9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10053B9C8);
}

uint64_t sub_10053B9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10053BA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10053BA48);
}

uint64_t sub_10053BA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10053BAB8@<X0>(uint64_t *a1@<X8>)
{
  sub_1000E87EC(&qword_10095F6B8);
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for NextMultisportLegHintView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for NextMultisportLegHintView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  unint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for NextMultisportLegHintView(uint64_t a1, void *a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for NextMultisportLegHintView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NextMultisportLegHintView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NextMultisportLegHintView()
{
  return &type metadata for NextMultisportLegHintView;
}

uint64_t sub_10053BCA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10053BCC4(void *a1)
{
  uint64_t v2 = type metadata accessor for LocalizationFeature();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  id v6 = a1;
  id v7 = [v6 effectiveTypeIdentifier];
  if (v7 == (id)13 || v7 == (id)46 || v7 == (id)37)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
    uint64_t v9 = static Localization.workoutUILocalizedString(_:feature:)();
    unint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v18 = v9;
    unint64_t v19 = v11;
    sub_1000A06D0();
    uint64_t v8 = StringProtocol.localizedCapitalized.getter();
    swift_bridgeObjectRelease();

    return v8;
  }
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  id v13 = [v6 description:0xD00000000000001CLL:0x80000001007CD2F0];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10053BFA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  if (!a1) {
    goto LABEL_6;
  }
  id v8 = a1;
  id v9 = [v8 symbolName];
  if (!v9)
  {

LABEL_6:
    id v28 = [self mainBundle];
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v28 localizedStringForKey:v29 value:0 table:0];

    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;

    sub_10042C994(1, v31, v33, (uint64_t)&v64);
    sub_1000AFA94(&qword_1009613E0);
    sub_1000AFA94(&qword_1009613E8);
    sub_10053C7E8();
    sub_10053C86C(&qword_100961408, &qword_1009613E8);
    uint64_t result = _ConditionalContent<>.init(storage:)();
    long long v35 = v56;
    long long v36 = v57;
    long long v37 = v58;
    long long v38 = v59;
    long long v39 = v60;
    long long v40 = v61;
    __int16 v41 = v62;
    char v42 = v63;
    goto LABEL_9;
  }
  unint64_t v10 = v9;
  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v55 = v11;

  if (a2 <= 1)
  {
    uint64_t v43 = sub_10053BCC4(a1);
    uint64_t v45 = v44;
    id v46 = [self mainBundle];
    NSString v47 = String._bridgeToObjectiveC()();
    id v48 = [v46 localizedStringForKey:v47 value:0 table:0];

    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v51 = v50;

    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = a1;
    *(void *)(v52 + 24) = a2;
    *(double *)(v52 + 32) = a4;
    *(void *)(v52 + 40) = v54;
    *(void *)(v52 + 48) = v55;
    id v53 = v8;
    sub_1005B946C(&v64, v43, v45, v49, v51, 0, sub_10053C8C0, v52);
  }
  else
  {
    uint64_t v12 = self;
    id v13 = [v12 mainBundle];
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1007509E0;
    *(void *)(v16 + 56) = &type metadata for Int;
    *(void *)(v16 + 64) = &protocol witness table for Int;
    *(void *)(v16 + 32) = a2 - 1;
    uint64_t v17 = String.init(format:_:)();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    id v20 = [v12 mainBundle];
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v20 localizedStringForKey:v21 value:0 table:0];

    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a1;
    *(void *)(v26 + 24) = a2;
    *(double *)(v26 + 32) = a4;
    *(void *)(v26 + 40) = v54;
    *(void *)(v26 + 48) = v55;
    id v27 = v8;
    sub_1005B946C(&v64, v17, v19, v23, v25, 1, sub_10053C8C0, v26);
  }
  sub_1000AFA94(&qword_100961400);
  sub_10053C86C(&qword_1009613F8, &qword_100961400);
  _ConditionalContent<>.init(storage:)();
  sub_10053C8C4();
  sub_1000AFA94(&qword_1009613E0);
  sub_1000AFA94(&qword_1009613E8);
  sub_10053C7E8();
  sub_10053C86C(&qword_100961408, &qword_1009613E8);
  _ConditionalContent<>.init(storage:)();

  uint64_t result = sub_10053C90C();
  long long v35 = v56;
  long long v36 = v57;
  long long v37 = v58;
  long long v38 = v59;
  long long v39 = v60;
  long long v40 = v61;
  __int16 v41 = v62;
  char v42 = v63;
LABEL_9:
  *(_OWORD *)a3 = v35;
  *(_OWORD *)(a3 + 16) = v36;
  *(_OWORD *)(a3 + 32) = v37;
  *(_OWORD *)(a3 + 48) = v38;
  *(_OWORD *)(a3 + 64) = v39;
  *(_OWORD *)(a3 + 80) = v40;
  *(_WORD *)(a3 + 96) = v41;
  *(unsigned char *)(a3 + 98) = v42;
  return result;
}

uint64_t sub_10053C6B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.PrivateDesign();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v6 = Image.init(_internalSystemName:)();
  static Font.Weight.semibold.getter();
  static Font.PrivateDesign.compactRounded.getter();
  uint64_t v7 = static Font.system(size:weight:design:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t result = swift_getKeyPath();
  *a1 = v6;
  a1[1] = result;
  a1[2] = v7;
  return result;
}

uint64_t sub_10053C7DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10053BFA8(*(void **)v1, *(void *)(v1 + 8), a1, *(double *)(v1 + 16));
}

unint64_t sub_10053C7E8()
{
  unint64_t result = qword_1009613F0;
  if (!qword_1009613F0)
  {
    sub_1000A1370(&qword_1009613E0);
    sub_10053C86C(&qword_1009613F8, &qword_100961400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009613F0);
  }
  return result;
}

uint64_t sub_10053C86C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10053C8C4()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_10053C90C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10053C958@<X0>(uint64_t *a1@<X8>)
{
  return sub_10053C6B4(a1);
}

unint64_t sub_10053C988()
{
  unint64_t result = qword_100961410;
  if (!qword_100961410)
  {
    sub_1000A1370(&qword_100961418);
    sub_10053C7E8();
    sub_10053C86C(&qword_100961408, &qword_1009613E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961410);
  }
  return result;
}

id sub_10053CC68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NotificationConsentController();
  [super dealloc];
}

uint64_t type metadata accessor for NotificationConsentController()
{
  return self;
}

uint64_t sub_10053CCC0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10053CD00()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

int32x4_t *sub_10053CD38(unsigned int a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    unint64_t result = (int32x4_t *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (!a2) {
    return (int32x4_t *)_swiftEmptyArrayStorage;
  }
  unint64_t result = (int32x4_t *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  result[1].i64[0] = a2;
  unint64_t v5 = (unsigned int *)&result[2];
  if (a2 < 8)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  int32x4_t v7 = vdupq_n_s32(a1);
  id v8 = result + 3;
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    int32x4_t *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

void *sub_10053CE24(unint64_t a1, double a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    unint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (!a1) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  result[2] = a1;
  uint64_t v4 = (double *)(result + 4);
  if (a1 < 4)
  {
    unint64_t v5 = 0;
    double v6 = a2;
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  double v6 = a2;
  int64x2_t v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  id v8 = (int64x2_t *)(result + 6);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    int64x2_t *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_10053CF18(__CLPK_integer *a1, void **a2, void **a3, __CLPK_integer *a4, void **a5)
{
  unint64_t v10 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v10 = sub_100087DFC(0, v10[2], 0, v10);
  }
  *a2 = v10;
  uint64_t v12 = *a3;
  swift_bridgeObjectRetain();
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v12;
  if ((v13 & 1) == 0) {
    uint64_t v12 = sub_1001E8598(0, v12[2], 0, v12);
  }
  *a3 = v12;
  dgetrf_(a1, a1, (__CLPK_doublereal *)v10 + 4, a1, (__CLPK_integer *)v12 + 8, a4);
  swift_bridgeObjectRelease();
  NSString v14 = *a2;
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v14;
  if ((v15 & 1) == 0) {
    NSString v14 = sub_100087DFC(0, v14[2], 0, v14);
  }
  *a2 = v14;
  uint64_t v16 = *a3;
  swift_bridgeObjectRetain();
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v16;
  if ((v17 & 1) == 0) {
    uint64_t v16 = sub_1001E8598(0, v16[2], 0, v16);
  }
  *a3 = v16;
  uint64_t v18 = *a5;
  swift_bridgeObjectRetain();
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  *a5 = v18;
  if ((v19 & 1) == 0) {
    uint64_t v18 = sub_100087DFC(0, v18[2], 0, v18);
  }
  *a5 = v18;
  dgetri_(a1, (__CLPK_doublereal *)v14 + 4, a1, (__CLPK_integer *)v16 + 8, (__CLPK_doublereal *)v18 + 4, a1, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SplineInterpolationCalculator()
{
  return self;
}

void *sub_10053D0F4(void *a1)
{
  unint64_t v9 = a1;
  double v1 = sqrt((double)(uint64_t)a1[2]);
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if (v1 >= 2147483650.0) {
    goto LABEL_7;
  }
  __CLPK_integer v8 = (int)v1;
  unint64_t v2 = (int)v1;
  swift_bridgeObjectRetain();
  int64x2_t v7 = sub_10053CD38(0, v2);
  double v6 = sub_10053CE24(v2, 0.0);
  __CLPK_integer v5 = 0;
  sub_10053CF18(&v8, &v9, (void **)&v7, &v5, &v6);
  uint64_t v3 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10053D21C(uint64_t a1)
{
  uint64_t v1 = a1 * a1;
  if ((unsigned __int128)(a1 * (__int128)a1) >> 64 != (a1 * a1) >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    if (v1)
    {
      uint64_t v3 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v3[2] = v1;
      bzero(v3 + 4, 8 * v1);
      if ((a1 & 0x8000000000000000) == 0)
      {
LABEL_5:
        if (!a1) {
          return (uint64_t)v3;
        }
        uint64_t v4 = 0;
        __CLPK_integer v5 = v3 + 4;
        while (1)
        {
          uint64_t v6 = v4 * a1;
          if ((unsigned __int128)(v4 * (__int128)a1) >> 64 != (v4 * a1) >> 63) {
            goto LABEL_22;
          }
          BOOL v7 = __OFADD__(v6, v4);
          unint64_t v8 = v6 + v4;
          if (v7) {
            goto LABEL_23;
          }
          if ((v8 & 0x8000000000000000) != 0) {
            goto LABEL_24;
          }
          unint64_t v9 = v3[2];
          if (v8 >= v9) {
            goto LABEL_25;
          }
          v5[v8] = 0x4010000000000000;
          if (v8)
          {
            if (v8 - 1 >= v9) {
              goto LABEL_26;
            }
            v5[v8 - 1] = 0x3FF0000000000000;
          }
          unint64_t v10 = v3[2];
          if ((uint64_t)v8 < (uint64_t)(v10 - 1))
          {
            unint64_t v11 = v8 + 1;
            if (v11 >= v10)
            {
              __break(1u);
              return (uint64_t)v3;
            }
            v5[v11] = 0x3FF0000000000000;
          }
          if (a1 == ++v4) {
            return (uint64_t)v3;
          }
        }
      }
    }
    else
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
      if ((a1 & 0x8000000000000000) == 0) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10053D388(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = v1 - 4;
  if (v1 < 4) {
    return _swiftEmptyArrayStorage;
  }
  __P = (void *)(v1 - 2);
  uint64_t v6 = (void *)sub_10053D21C(v1 - 2);
  BOOL v7 = (const double *)sub_10053D0F4(v6);
  swift_bridgeObjectRelease();
  __asm { FMOV            V1.2D, #6.0 }
  float64x2_t v78 = vmulq_f64(*(float64x2_t *)(a1 + 32 + 16 * (v1 - 2)), _Q1);
  *(float64x2_t *)__src = _Q1;
  float64x2_t v76 = *(float64x2_t *)(a1 + 32 + 16 * v1 - 16);
  sub_1000AFA94(&qword_10094E7C0);
  float64x2_t v73 = vsubq_f64(vmulq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)__src), *(float64x2_t *)(a1 + 32));
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(float64x2_t *)(inited + 32) = v73;
  if (v1 == 4)
  {
    uint64_t v13 = 1;
    unint64_t v14 = 2;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v16 = a1 + 64;
    float64x2_t v17 = *(float64x2_t *)__src;
    do
    {
      uint64_t v18 = v15 + 1;
      float64x2_t v19 = *(float64x2_t *)(v16 + 16 * v15);
      unint64_t v20 = *(void *)(inited + 24);
      if (v15 + 1 >= v20 >> 1)
      {
        float64x2_t v74 = *(float64x2_t *)(v16 + 16 * v15);
        NSString v21 = sub_1001E86A8((void *)(v20 > 1), v15 + 2, 1, (void *)inited);
        float64x2_t v19 = v74;
        float64x2_t v17 = *(float64x2_t *)__src;
        unint64_t inited = (unint64_t)v21;
      }
      *(void *)(inited + 16) = v15 + 2;
      *(float64x2_t *)(inited + 16 * v15++ + 48) = vmulq_f64(v19, v17);
    }
    while (v2 != v18);
    unint64_t v14 = *(void *)(inited + 24);
    uint64_t v13 = v18 + 1;
  }
  float64x2_t v22 = vsubq_f64(v78, v76);
  uint64_t v23 = (double *)(v13 + 1);
  if (v13 >= v14 >> 1)
  {
LABEL_111:
    *(float64x2_t *)__srcd = v22;
    id v71 = sub_1001E86A8((void *)(v14 > 1), (int64_t)v23, 1, (void *)inited);
    float64x2_t v22 = *(float64x2_t *)__srcd;
    unint64_t inited = (unint64_t)v71;
  }
  *(void *)(inited + 16) = v23;
  *(float64x2_t *)(inited + 16 * v13 + 32) = v22;
  swift_bridgeObjectRetain();
  uint64_t v24 = (uint64_t *)(inited + 40);
  uint64_t v13 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v25 = _swiftEmptyArrayStorage;
  do
  {
    int64_t v26 = v25[2];
    int64_t v27 = v26 + 2;
    if (__OFADD__(v26, 2))
    {
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
      goto LABEL_111;
    }
    uint64_t v29 = *(v24 - 1);
    uint64_t v28 = *v24;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && (unint64_t v31 = v25[3], v32 = v31 >> 1, (uint64_t)(v31 >> 1) >= v27))
    {
      uint64_t v33 = v25;
    }
    else
    {
      if (v26 <= v27) {
        int64_t v34 = v26 + 2;
      }
      else {
        int64_t v34 = v26;
      }
      uint64_t v33 = sub_100087DFC(isUniquelyReferenced_nonNull_native, v34, 1, v25);
      unint64_t v31 = v33[3];
      unint64_t v32 = v31 >> 1;
    }
    unint64_t v35 = v33[2];
    unint64_t v36 = v35 + 1;
    if (v32 <= v35)
    {
      uint64_t v33 = sub_100087DFC((void *)(v31 > 1), v35 + 1, 1, v33);
      unint64_t v31 = v33[3];
      unint64_t v32 = v31 >> 1;
    }
    v33[2] = v36;
    v33[v35 + 4] = v29;
    int64_t v37 = v35 + 2;
    if ((uint64_t)v32 < v37) {
      uint64_t v33 = sub_100087DFC((void *)(v31 > 1), v37, 1, v33);
    }
    v33[2] = v37;
    v33[v36 + 4] = v28;
    swift_bridgeObjectRelease();
    v24 += 2;
    uint64_t v25 = v33;
    uint64_t v23 = (double *)((char *)v23 - 1);
  }
  while (v23);
  swift_bridgeObjectRelease();
  uint64_t v23 = (double *)sub_10053CE24(v33[2], 0.0);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v23 = (double *)sub_100087DFC(0, *((void *)v23 + 2), 0, v23);
  }
  vDSP_mmulD(v7 + 4, 1, (const double *)v33 + 4, 1, v23 + 4, 1, (vDSP_Length)__P, 2uLL, (vDSP_Length)__P);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v7 = (const double *)*((void *)v23 + 2);
  if (v7) {
    int64_t v38 = (((unint64_t)v7 - 1) >> 1) + 1;
  }
  else {
    int64_t v38 = 0;
  }
  swift_bridgeObjectRetain();
  sub_1001C95E8(0, v38, 0);
  __P = _swiftEmptyArrayStorage;
  if (v7)
  {
    long long v39 = (char *)(v23 + 4);
    uint64_t v40 = 0;
    unint64_t v41 = 0;
    unint64_t v77 = ((unint64_t)v7 + 1) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = 2;
    char v72 = v23 + 4;
    uint64_t v75 = v7;
    while (1)
    {
      unint64_t inited = (uint64_t)v7 >= v13 ? v13 : (unint64_t)v7;
      unint64_t v14 = v77;
      if (v77 == v41) {
        goto LABEL_106;
      }
      unint64_t v14 = v41 + 2;
      if ((uint64_t)v7 >= (uint64_t)(v41 + 2)) {
        unint64_t v42 = v41 + 2;
      }
      else {
        unint64_t v42 = (unint64_t)v7;
      }
      if (v42 < v41) {
        goto LABEL_107;
      }
      unint64_t v14 = *((void *)v23 + 2);
      if (v14 < v41 || v14 < v42) {
        goto LABEL_108;
      }
      __srca = v39;
      id v79 = __P;
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v44 = (void *)swift_dynamicCastClass();
      if (!v44)
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = _swiftEmptyArrayStorage;
      }
      uint64_t v45 = inited + v40;
      uint64_t v46 = v44[2];
      swift_release();
      if (v45 == v46)
      {
        NSString v47 = (void *)swift_dynamicCastClass();
        __P = v79;
        BOOL v7 = v75;
        if (!v47)
        {
          swift_bridgeObjectRelease();
          NSString v47 = _swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        NSString v47 = _swiftEmptyArrayStorage;
        __P = v79;
        BOOL v7 = v75;
        if (v41 != v42)
        {
          if (v45 < 1)
          {
            NSString v47 = _swiftEmptyArrayStorage;
            if (v45 < 0) {
              goto LABEL_112;
            }
          }
          else
          {
            sub_1000AFA94(&qword_10094E7C8);
            NSString v47 = (void *)swift_allocObject();
            int64_t v50 = j__malloc_size(v47);
            uint64_t v51 = v50 - 32;
            if (v50 < 32) {
              uint64_t v51 = v50 - 25;
            }
            v47[2] = v45;
            v47[3] = 2 * (v51 >> 3);
          }
          uint64_t v52 = v47 + 4;
          if (__srca < (char *)&v47[v45 + 4] && v52 < &v72[v42])
          {
LABEL_112:
            uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
            __break(1u);
            return result;
          }
          memcpy(v52, __srca, 8 * v45);
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v49 = __P[2];
      unint64_t v48 = __P[3];
      if (v49 >= v48 >> 1) {
        sub_1001C95E8(v48 > 1, v49 + 1, 1);
      }
      unint64_t v14 = (unint64_t)&__P[v49];
      long long v39 = __srca + 16;
      __P[2] = v49 + 1;
      *(void *)(v14 + 32) = v47;
      v13 += 2;
      v40 -= 2;
      v41 += 2;
      if (!--v38)
      {
        if (v41 < (unint64_t)v7)
        {
          id v53 = (const double *)(v41 + 2);
          uint64_t v13 = -(uint64_t)v41;
          while (1)
          {
            uint64_t v54 = (uint64_t)((uint64_t)v7 >= (uint64_t)v53 ? v53 : v7);
            unint64_t inited = (unint64_t)v53 - 2;
            if (v54 < (uint64_t)v53 - 2) {
              goto LABEL_109;
            }
            unint64_t v14 = *((void *)v23 + 2);
            BOOL v55 = v14 < inited || (uint64_t)v14 < v54;
            if (v55) {
              goto LABEL_110;
            }
            __srcb = v39;
            type metadata accessor for __ContiguousArrayStorageBase();
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain_n();
            long long v56 = (void *)swift_dynamicCastClass();
            if (!v56)
            {
              swift_bridgeObjectRelease();
              long long v56 = _swiftEmptyArrayStorage;
            }
            uint64_t v57 = v54 + v13;
            uint64_t v58 = v56[2];
            swift_release();
            if (v54 + v13 == v58)
            {
              long long v59 = (void *)swift_dynamicCastClass();
              if (!v59)
              {
                swift_bridgeObjectRelease();
                long long v59 = _swiftEmptyArrayStorage;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              long long v59 = _swiftEmptyArrayStorage;
              if (inited != v54)
              {
                if (v57 < 1)
                {
                  if (v57 < 0) {
                    goto LABEL_112;
                  }
                }
                else
                {
                  sub_1000AFA94(&qword_10094E7C8);
                  long long v59 = (void *)swift_allocObject();
                  int64_t v62 = j__malloc_size(v59);
                  uint64_t v63 = v62 - 32;
                  if (v62 < 32) {
                    uint64_t v63 = v62 - 25;
                  }
                  v59[2] = v57;
                  v59[3] = 2 * (v63 >> 3);
                }
                long long v64 = v59 + 4;
                if (__srcb < (char *)&v59[v57 + 4] && v64 < &v72[v54]) {
                  goto LABEL_112;
                }
                memcpy(v64, __srcb, 8 * v57);
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v61 = __P[2];
            unint64_t v60 = __P[3];
            if (v61 >= v60 >> 1) {
              sub_1001C95E8(v60 > 1, v61 + 1, 1);
            }
            __P[2] = v61 + 1;
            __P[v61 + 4] = v59;
            unint64_t v14 = (unint64_t)v53 + 2;
            v13 -= 2;
            long long v39 = __srcb + 16;
            BOOL v55 = (uint64_t)v53 < (uint64_t)v7;
            id v53 = (const double *)((char *)v53 + 2);
            if (!v55) {
              goto LABEL_91;
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v65 = __P[2];
        if (v65) {
          goto LABEL_92;
        }
        goto LABEL_102;
      }
    }
  }
LABEL_91:
  swift_bridgeObjectRelease();
  uint64_t v65 = __P[2];
  if (v65)
  {
LABEL_92:
    swift_retain();
    uint64_t v66 = 0;
    uint64_t v3 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v67 = __P[v66 + 4];
      if (*(void *)(v67 + 16) == 2)
      {
        *(_OWORD *)__srcc = *(_OWORD *)(v67 + 32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1001E86A8(0, v3[2] + 1, 1, v3);
        }
        unint64_t v69 = v3[2];
        unint64_t v68 = v3[3];
        if (v69 >= v68 >> 1) {
          uint64_t v3 = sub_1001E86A8((void *)(v68 > 1), v69 + 1, 1, v3);
        }
        v3[2] = v69 + 1;
        *(_OWORD *)&v3[2 * v69 + 4] = *(_OWORD *)__srcc;
      }
      ++v66;
    }
    while (v65 != v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_102:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  swift_release();
  return v3;
}

void sub_10053DC68(float64x2_t *a1@<X0>, uint64_t a2@<X8>)
{
  int64_t v5 = *(void *)&a1[1].f64[0];
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v41[0] = _swiftEmptyArrayStorage;
    unint64_t v2 = (double *)v41;
    sub_1001C9618(0, v5, 0);
    uint64_t v6 = (void *)v41[0];
    BOOL v7 = a1 + 2;
    unint64_t v8 = *(void *)(v41[0] + 16);
    int64_t v9 = v5;
    do
    {
      float64x2_t v10 = *v7;
      v41[0] = v6;
      unint64_t v11 = v6[3];
      if (v8 >= v11 >> 1)
      {
        unint64_t v2 = (double *)v41;
        float64x2_t v39 = v10;
        sub_1001C9618(v11 > 1, v8 + 1, 1);
        float64x2_t v10 = v39;
        uint64_t v6 = (void *)v41[0];
      }
      v6[2] = v8 + 1;
      *(float64x2_t *)&v6[2 * v8 + 4] = v10;
      ++v7;
      ++v8;
      --v9;
    }
    while (v9);
  }
  uint64_t v12 = sub_10053D388((uint64_t)v6);
  if (v12[2])
  {
    sub_1000AFA94(&qword_10094E7C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007509E0;
    if (!v6[2]) {
      goto LABEL_29;
    }
    *(_OWORD *)(inited + 32) = *((_OWORD *)v6 + 2);
    v41[0] = inited;
    unint64_t v2 = (double *)v41;
    sub_1001E4E88((uint64_t)v12);
    uint64_t v14 = v6[2];
    if (!v14) {
      goto LABEL_30;
    }
    float64x2_t v39 = *(float64x2_t *)&v6[2 * v14 + 2];
    swift_bridgeObjectRelease();
    unint64_t v2 = (double *)v41[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_31;
    }
    while (1)
    {
      unint64_t v16 = *((void *)v2 + 2);
      unint64_t v15 = *((void *)v2 + 3);
      if (v16 >= v15 >> 1) {
        unint64_t v2 = (double *)sub_1001E86A8((void *)(v15 > 1), v16 + 1, 1, v2);
      }
      *((void *)v2 + 2) = v16 + 1;
      *(float64x2_t *)&v2[2 * v16 + 4] = v39;
      v41[0] = v2;
      id v17 = [objc_allocWithZone((Class)UIBezierPath) init];
      if (!v5) {
        break;
      }
      double v18 = a1[2].f64[0];
      double v19 = a1[2].f64[1];
      swift_bridgeObjectRetain();
      int64_t v36 = v5 - 1;
      if (v5 == 1)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        float64x2_t v38 = a1[v36 + 2];
        float64x2_t v40 = a1[2];
        swift_bridgeObjectRelease();
        float64x2_t v35 = v38;
        float64x2_t v34 = v40;
        goto LABEL_26;
      }
      uint64_t v20 = *((void *)v2 + 2);
      if (v20)
      {
        if (v20 != 1)
        {
          double v22 = a1[3].f64[0];
          double v21 = a1[3].f64[1];
          double v23 = v2[6];
          double v25 = v2[4];
          double v24 = v2[5];
          double v26 = v2[7];
          double v27 = v25 * 0.666666667 + v23 * 0.333333333;
          double v28 = v24 * 0.666666667 + v26 * 0.333333333;
          double v29 = v25 * 0.333333333 + v23 * 0.666666667;
          double v30 = v24 * 0.333333333 + v26 * 0.666666667;
          [v17 moveToPoint:v18, v19];
          [v17 addCurveToPoint:v22 controlPoint1:v21 controlPoint2:v27, v28, v29, v30];
          unint64_t v31 = 0;
          int64_t v5 = -v5;
          unint64_t v32 = 2;
          float64x2_t v37 = (float64x2_t)vdupq_n_s64(0x3FD5555555555555uLL);
          float64x2_t v39 = (float64x2_t)vdupq_n_s64(0x3FE5555555555555uLL);
          while (1)
          {
            if (v5 + v32)
            {
              unint64_t v33 = *((void *)v2 + 2);
              if (v32 - 1 >= v33) {
                goto LABEL_27;
              }
              if (v32 >= v33) {
                break;
              }
              [v17 addCurveToPoint:a1[v31 / 2 + 4].f64[0], a1[v31 / 2 + 4].f64[1], vaddq_f64(vmulq_f64(*(float64x2_t *)&v2[v31 + 6], v39), vmulq_f64(*(float64x2_t *)&v2[v31 + 8], v37)), vaddq_f64(vmulq_f64(*(float64x2_t *)&v2[v31 + 6], v37), vmulq_f64(*(float64x2_t *)&v2[v31 + 8], v39));
            }
            ++v32;
            v31 += 2;
            if (v5 + v32 == 1) {
              goto LABEL_22;
            }
          }
        }
      }
      else
      {
LABEL_27:
        __break(1u);
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      unint64_t v2 = (double *)sub_1001E86A8(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v17 = 0;
  float64x2_t v34 = 0uLL;
  float64x2_t v35 = 0uLL;
LABEL_26:
  *(void *)a2 = v17;
  *(float64x2_t *)(a2 + 8) = v34;
  *(float64x2_t *)(a2 + 24) = v35;
}

ValueMetadata *type metadata accessor for SplinePoint()
{
  return &type metadata for SplinePoint;
}

ValueMetadata *type metadata accessor for DataLinkWorkoutState()
{
  return &type metadata for DataLinkWorkoutState;
}

unint64_t sub_10053E07C(uint64_t a1)
{
  unint64_t result = 0x657669746341;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 2:
      unint64_t result = 0x726F576E49746F4ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x10053E148);
  }
  return result;
}

unint64_t sub_10053E158@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_10053E1EC(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_10053E18C()
{
  return sub_10053E07C(*v0);
}

unint64_t sub_10053E198()
{
  unint64_t result = qword_1009614E0;
  if (!qword_1009614E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009614E0);
  }
  return result;
}

unint64_t sub_10053E1EC(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

uint64_t sub_10053E1FC()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10053E220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100548CF0(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

double sub_10053E24C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v48 = a1;
  id v49 = a4;
  uint64_t v51 = a2;
  uint64_t v52 = type metadata accessor for DayIndex();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  int64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100950728) - 8;
  uint64_t v46 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsStackedChartView = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v14 = (void *)(a5 + DetailsStackedChartView[7]);
  id v53 = _swiftEmptyArrayStorage;
  sub_1000AFA94((uint64_t *)&unk_1009546A0);
  State.init(wrappedValue:)();
  uint64_t v15 = *((void *)&v54 + 1);
  *uint64_t v14 = v54;
  v14[1] = v15;
  uint64_t v16 = DetailsStackedChartView[8];
  id v53 = 0;
  sub_1000AFA94(&qword_100955068);
  State.init(wrappedValue:)();
  *(_OWORD *)(a5 + v16) = v54;
  uint64_t v17 = a5 + DetailsStackedChartView[10];
  LOBYTE(v53) = 0;
  State.init(wrappedValue:)();
  uint64_t v18 = *((void *)&v54 + 1);
  *(unsigned char *)uint64_t v17 = v54;
  *(void *)(v17 + 8) = v18;
  uint64_t v19 = a5 + DetailsStackedChartView[12];
  LOBYTE(v53) = 0;
  State.init(wrappedValue:)();
  uint64_t v20 = *((void *)&v54 + 1);
  *(unsigned char *)uint64_t v19 = v54;
  *(void *)(v19 + 8) = v20;
  double v21 = (void *)(a5 + DetailsStackedChartView[13]);
  id v53 = _swiftEmptyArrayStorage;
  sub_1000AFA94(&qword_1009614E8);
  State.init(wrappedValue:)();
  uint64_t v22 = *((void *)&v54 + 1);
  *double v21 = v54;
  v21[1] = v22;
  uint64_t v23 = a5 + DetailsStackedChartView[14];
  LOBYTE(v53) = 0;
  State.init(wrappedValue:)();
  uint64_t v24 = *((void *)&v54 + 1);
  *(unsigned char *)uint64_t v23 = v54;
  *(void *)(v23 + 8) = v24;
  uint64_t v25 = DetailsStackedChartView[15];
  *(void *)(a5 + v25) = [objc_allocWithZone((Class)UISelectionFeedbackGenerator) init];
  uint64_t v26 = a5 + DetailsStackedChartView[17];
  type metadata accessor for BalanceDataProvider();
  sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  *(void *)uint64_t v26 = Environment.init<A>(_:)();
  *(unsigned char *)(v26 + 8) = v27 & 1;
  double v28 = (uint64_t *)(a5 + DetailsStackedChartView[18]);
  *double v28 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094DFC8);
  swift_storeEnumTagMultiPayload();
  double v29 = (uint64_t *)(a5 + DetailsStackedChartView[19]);
  *double v29 = swift_getKeyPath();
  sub_1000AFA94(&qword_100968CD0);
  swift_storeEnumTagMultiPayload();
  sub_1000AEF2C(a1, a5, &qword_1009614F0);
  *(void *)(a5 + DetailsStackedChartView[5]) = a3;
  id v30 = v49;
  *(void *)(a5 + DetailsStackedChartView[6]) = v49;
  uint64_t v45 = a5;
  id v49 = v30;
  id v47 = a3;
  uint64_t v31 = v51;
  GregorianDayRange.dayIndexRange.getter();
  unint64_t v32 = &v12[*(int *)(v10 + 44)];
  uint64_t v33 = v50;
  float64x2_t v34 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v35 = v52;
  v34(v9, v32, v52);
  sub_10008DB18((uint64_t)v12, &qword_100950728);
  uint64_t v36 = a5 + DetailsStackedChartView[11];
  *(void *)(v36 + *(int *)(sub_1000AFA94(&qword_1009614F8) + 28)) = 0;
  float64x2_t v37 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
  v37(v36, v9, v35);
  GregorianDayRange.dayIndexRange.getter();
  v34(v9, &v12[*(int *)(v46 + 44)], v35);
  sub_10008DB18((uint64_t)v12, &qword_100950728);
  uint64_t v38 = v45;
  v37(v45 + DetailsStackedChartView[16], v9, v35);
  id v39 = [self mainScreen];
  [v39 bounds];
  double v41 = v40;

  uint64_t v42 = type metadata accessor for GregorianDayRange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v31, v42);
  sub_10008DB18(v48, &qword_1009614F0);
  double result = v41 + -20.0;
  *(double *)(v38 + DetailsStackedChartView[9]) = v41 + -20.0;
  return result;
}

uint64_t type metadata accessor for LoadDetailsStackedChartView(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_100961560);
}

void *sub_10053E768()
{
  uint64_t v1 = type metadata accessor for EnvironmentValues();
  uint64_t v58 = *(void **)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100950748);
  __chkstk_darwin(v4 - 8);
  uint64_t v42 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SleepingSampleViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v56 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  BOOL v55 = (char *)v39 - v10;
  uint64_t v11 = type metadata accessor for SleepingSampleDataType();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v57 = (uint8_t *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v15 = (uint64_t *)(v0 + *(int *)(DetailsStackedChartView + 52));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  v59[0] = v17;
  v59[1] = v16;
  sub_1000AFA94(&qword_1009616A8);
  State.wrappedValue.getter();
  uint64_t v19 = *(void *)(v60 + 16);
  if (v19)
  {
    uint64_t v53 = v0 + *(int *)(DetailsStackedChartView + 68);
    uint64_t v20 = v12 + 16;
    uint64_t v52 = *(void (**)(uint8_t *, unint64_t, uint64_t))(v12 + 16);
    unint64_t v21 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v39[1] = v60;
    unint64_t v22 = v60 + v21;
    uint64_t v23 = *(void *)(v12 + 72);
    uint64_t v50 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v51 = v23;
    uint64_t v44 = (void (**)(char *, char *, uint64_t))(v7 + 16);
    uint64_t v45 = (void (**)(char *, uint64_t))(v58 + 1);
    uint64_t v43 = v7 + 8;
    uint64_t v48 = (void (**)(uint8_t *, uint64_t))(v12 + 8);
    id v49 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    uint64_t v58 = _swiftEmptyArrayStorage;
    *(void *)&long long v18 = 136315138;
    long long v41 = v18;
    unint64_t v40 = 0x80000001007BA960;
    v39[2] = (char *)&type metadata for Any + 8;
    uint64_t v24 = (uint64_t)v42;
    uint64_t v46 = v7;
    uint64_t v47 = v11;
    uint64_t v25 = v57;
    uint64_t v54 = v20;
    v52(v57, v60 + v21, v11);
    while (1)
    {
      uint64_t v26 = *(void **)v53;
      if (*(unsigned char *)(v53 + 8) == 1)
      {
        v59[0] = *(void *)v53;
        sub_1001AEDAC(v26, 1);
      }
      else
      {
        uint64_t v27 = v6;
        sub_1001AEDAC(v26, 0);
        swift_retain();
        os_log_type_t v28 = static os_log_type_t.fault.getter();
        double v29 = static Log.runtimeIssuesLog.getter();
        if (os_log_type_enabled(v29, v28))
        {
          uint64_t v30 = swift_slowAlloc();
          v59[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v30 = v41;
          *(void *)(v30 + 4) = sub_10008F1F4(0xD000000000000013, v40, v59);
          _os_log_impl((void *)&_mh_execute_header, v29, v28, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v30, 0xCu);
          swift_arrayDestroy();
          uint64_t v24 = (uint64_t)v42;
          swift_slowDealloc();
          uint64_t v11 = v47;
          swift_slowDealloc();
        }

        uint64_t v6 = v27;
        EnvironmentValues.init()();
        swift_getAtKeyPath();
        sub_1001AEDC8(v26, 0);
        (*v45)(v3, v1);
        sub_1001AEDC8(v26, 0);
        uint64_t v7 = v46;
        uint64_t v25 = v57;
      }
      uint64_t v31 = (void *)v59[0];
      sub_10021FA84(v25, v24);

      if ((*v50)(v24, 1, v6) == 1)
      {
        (*v48)(v25, v11);
        sub_10008DB18(v24, &qword_100950748);
      }
      else
      {
        unint64_t v32 = *v49;
        uint64_t v33 = v55;
        (*v49)(v55, v24, v6);
        (*v44)(v56, v33, v6);
        unint64_t v34 = (swift_isUniquelyReferenced_nonNull_native() & 1) != 0
            ? (unint64_t)v58
            : sub_1001E86B4(0, v58[2] + 1, 1, (unint64_t)v58);
        unint64_t v36 = *(void *)(v34 + 16);
        unint64_t v35 = *(void *)(v34 + 24);
        if (v36 >= v35 >> 1) {
          unint64_t v34 = sub_1001E86B4(v35 > 1, v36 + 1, 1, v34);
        }
        *(void *)(v34 + 16) = v36 + 1;
        unint64_t v37 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        uint64_t v58 = (void *)v34;
        v32((char *)(v34 + v37 + *(void *)(v7 + 72) * v36), (uint64_t)v56, v6);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v6);
        uint64_t v11 = v47;
        uint64_t v25 = v57;
        (*v48)(v57, v47);
      }
      v22 += v51;
      if (!--v19) {
        break;
      }
      v52(v25, v22, v11);
    }
    swift_bridgeObjectRelease();
    return v58;
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
}

uint64_t sub_10053EDD8()
{
  uint64_t v1 = type metadata accessor for WarmupProgress();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100961A00);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 68);
  id v13 = *(id *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_1001AEDAC(*(id *)v12, v14);
  id v15 = sub_1004E75C0(v13, v14);
  sub_1001AEDC8(v13, v14);
  sub_10021BB94();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  OvernightMetricsViewModel.warmupProgress.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = type metadata accessor for OvernightMetricsWarmupProgress();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
  {
    sub_10008DB18((uint64_t)v11, &qword_100961A00);
    char v18 = 0;
  }
  else
  {
    OvernightMetricsWarmupProgress.overallProgress.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v16);
    char v19 = WarmupProgress.isComplete.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    char v18 = v19 ^ 1;
  }
  return v18 & 1;
}

uint64_t sub_10053F09C()
{
  uint64_t v33 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v33);
  unint64_t v34 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for GregorianDayRange();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DayIndex();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  __chkstk_darwin(DetailsStackedChartView);
  char v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v0 + *(int *)(v15 + 56);
  char v17 = *(unsigned char *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  LOBYTE(v35) = v17;
  uint64_t v36 = v18;
  sub_1000AFA94(&qword_100961690);
  State.wrappedValue.getter();
  if (!v37)
  {
    swift_bridgeObjectRelease();
    sub_1005547CC(v0, (uint64_t)v14, type metadata accessor for LoadDetailsStackedChartView);
    goto LABEL_5;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  sub_1005547CC(v0, (uint64_t)v14, type metadata accessor for LoadDetailsStackedChartView);
  if (v19)
  {
LABEL_5:
    sub_1000AFA94(&qword_1009614F8);
    State.wrappedValue.getter();
    uint64_t v21 = &v14[*(int *)(DetailsStackedChartView + 68)];
    id v22 = *(id *)v21;
    char v23 = v21[8];
    sub_1001AEDAC(*(id *)v21, v23);
    uint64_t v24 = (char *)sub_1004E75C0(v22, v23);
    sub_1001AEDC8(v22, v23);
    swift_getKeyPath();
    unint64_t v35 = v24;
    sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v25 = &v24[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
    swift_beginAccess();
    uint64_t v27 = v31;
    uint64_t v26 = v32;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v4, v25, v32);

    uint64_t v28 = (uint64_t)v34;
    GregorianDayRange.dayIndexRange.getter();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v26);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v28 + *(int *)(v33 + 36), v5);
    sub_10008DB18(v28, &qword_100950728);
    sub_100085938(&qword_100950730, (void (*)(uint64_t))&type metadata accessor for DayIndex);
    LOBYTE(v25) = dispatch thunk of static Equatable.== infix(_:_:)();
    double v29 = *(void (**)(char *, uint64_t))(v6 + 8);
    v29(v8, v5);
    v29(v11, v5);
    sub_100554834((uint64_t)v14, type metadata accessor for LoadDetailsStackedChartView);
    char v20 = v25 ^ 1;
    return v20 & 1;
  }
  sub_100554834((uint64_t)v14, type metadata accessor for LoadDetailsStackedChartView);
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_10053F5A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SleepingSampleViewModelProvider.DataFreshness();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  __chkstk_darwin(DetailsStackedChartView);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v0 + *(int *)(v12 + 68);
  id v14 = *(id *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_1001AEDAC(*(id *)v13, v15);
  id v16 = sub_1004E75C0(v14, v15);
  sub_1001AEDC8(v14, v15);
  swift_retain();

  char ViewModel = dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.getter();
  swift_release();
  sub_1005547CC(v1, (uint64_t)v11, type metadata accessor for LoadDetailsStackedChartView);
  if (ViewModel)
  {
    char v18 = 1;
  }
  else
  {
    char v19 = &v11[*(int *)(DetailsStackedChartView + 68)];
    id v20 = *(id *)v19;
    char v21 = v19[8];
    sub_1001AEDAC(*(id *)v19, v21);
    id v22 = sub_1004E75C0(v20, v21);
    sub_1001AEDC8(v20, v21);
    sub_10021BB94();

    dispatch thunk of SleepingSampleViewModelProvider.dataFreshness.getter();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for SleepingSampleViewModelProvider.DataFreshness.receivedFromPreviousDayRange(_:), v2);
    char v18 = static SleepingSampleViewModelProvider.DataFreshness.== infix(_:_:)();
    char v23 = *(void (**)(char *, uint64_t))(v3 + 8);
    v23(v5, v2);
    v23(v8, v2);
  }
  sub_100554834((uint64_t)v11, type metadata accessor for LoadDetailsStackedChartView);
  return v18 & 1;
}

uint64_t sub_10053F83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v125 = a2;
  uint64_t v124 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  Swift::Int v122 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for DayIndex();
  uint64_t v105 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v103 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v6 = *(void *)(DetailsStackedChartView - 8);
  uint64_t v135 = (int *)(DetailsStackedChartView - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(DetailsStackedChartView - 8);
  uint64_t v8 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100961658);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100961648);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  char v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = (int *)sub_1000AFA94(&qword_100961630);
  __chkstk_darwin(v134);
  uint64_t v128 = (ValueMetadata *)((char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v106 = sub_1000AFA94(&qword_100961620);
  uint64_t v107 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v129 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000AFA94(&qword_100961618);
  uint64_t v110 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v130 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000AFA94(&qword_100961610);
  uint64_t v113 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v108 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1000AFA94(&qword_100961600);
  uint64_t v116 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  char v111 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1000AFA94(&qword_1009615F8);
  uint64_t v119 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v114 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000AFA94(&qword_1009615F0);
  uint64_t v121 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v117 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = static HorizontalAlignment.leading.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v23 = sub_1000AFA94(&qword_100961688);
  sub_1005408AC(a1, (uint64_t)&v11[*(int *)(v23 + 44)]);
  uint64_t v133 = type metadata accessor for LoadDetailsStackedChartView;
  sub_1005547CC(a1, (uint64_t)v8, type metadata accessor for LoadDetailsStackedChartView);
  uint64_t v24 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v132 = ((v24 + 16) & ~v24) + v7;
  uint64_t v25 = (v24 + 16) & ~v24;
  uint64_t v26 = v24 | 7;
  uint64_t v27 = swift_allocObject();
  uint64_t v126 = type metadata accessor for LoadDetailsStackedChartView;
  sub_100556A40((uint64_t)v8, v27 + v25, type metadata accessor for LoadDetailsStackedChartView);
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v15, &qword_100961658);
  uint64_t v28 = (uint64_t (**)())&v15[*(int *)(v13 + 44)];
  uint64_t v29 = (uint64_t)v15;
  *uint64_t v28 = sub_100553264;
  v28[1] = (uint64_t (*)())v27;
  id v28[2] = 0;
  v28[3] = 0;
  sub_10008DB18((uint64_t)v11, &qword_100961658);
  uint64_t v30 = v133;
  sub_1005547CC(a1, (uint64_t)v8, v133);
  uint64_t v31 = swift_allocObject();
  uint64_t v127 = v25;
  sub_100556A40((uint64_t)v8, v31 + v25, type metadata accessor for LoadDetailsStackedChartView);
  uint64_t v32 = (uint64_t)v128;
  sub_1000AEF2C(v29, (uint64_t)v128, &qword_100961648);
  uint64_t v33 = (void *)(v32 + v134[9]);
  *uint64_t v33 = 0;
  v33[1] = 0;
  v33[2] = sub_100553294;
  v33[3] = v31;
  sub_10008DB18(v29, &qword_100961648);
  uint64_t v131 = a1;
  sub_1000AFA94(&qword_1009614F8);
  unint64_t v34 = v103;
  State.wrappedValue.getter();
  sub_1005547CC(a1, (uint64_t)v8, v30);
  uint64_t v100 = v26;
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = (uint64_t)v8;
  char v37 = v126;
  sub_100556A40((uint64_t)v8, v35 + v25, v126);
  uint64_t v102 = sub_100555B30(&qword_100961638, &qword_100961630, (void (*)(void))sub_10055311C);
  uint64_t v101 = sub_100085938(&qword_100950730, (void (*)(uint64_t))&type metadata accessor for DayIndex);
  uint64_t v38 = (ValueMetadata *)v104;
  uint64_t v39 = (uint64_t)v128;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, ValueMetadata *))(v105 + 8))(v34, v38);
  sub_10008DB18(v39, &qword_100961630);
  uint64_t v40 = v131;
  uint64_t v41 = v131 + v135[19];
  id v42 = *(id *)v41;
  LOBYTE(v26) = *(unsigned char *)(v41 + 8);
  sub_1001AEDAC(*(id *)v41, v26);
  uint64_t v43 = (char *)sub_1004E75C0(v42, v26);
  sub_1001AEDC8(v42, v26);
  swift_getKeyPath();
  id v139 = (int *)v43;
  sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v44 = (uint64_t *)&v43[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutsWithEffortQuantities];
  swift_beginAccess();
  uint64_t v45 = *v44;
  swift_bridgeObjectRetain();

  uint64_t v137 = v45;
  uint64_t v99 = v36;
  uint64_t v46 = v133;
  sub_1005547CC(v40, v36, v133);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = v127;
  sub_100556A40(v36, v47 + v127, v37);
  uint64_t v128 = (ValueMetadata *)sub_1000AFA94(&qword_100961628);
  id v139 = v134;
  uint64_t v140 = v38;
  uint64_t v141 = v102;
  uint64_t v142 = (void *)v101;
  uint64_t v134 = (int *)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v50 = sub_10055503C(&qword_100961660, &qword_100961628, (void (*)(void))sub_1005531BC);
  uint64_t v51 = v129;
  uint64_t v52 = v106;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v51, v52);
  uint64_t v53 = v40 + v135[16];
  char v54 = *(unsigned char *)v53;
  BOOL v55 = *(ValueMetadata **)(v53 + 8);
  LOBYTE(v139) = v54;
  uint64_t v140 = v55;
  sub_1000AFA94(&qword_100961690);
  State.wrappedValue.getter();
  uint64_t v56 = v99;
  sub_1005547CC(v40, v99, v46);
  uint64_t v57 = swift_allocObject();
  uint64_t v58 = v126;
  sub_100556A40(v56, v57 + v48, v126);
  id v139 = (int *)v52;
  uint64_t v140 = v128;
  uint64_t v141 = OpaqueTypeConformance2;
  uint64_t v142 = (void *)v50;
  uint64_t v59 = swift_getOpaqueTypeConformance2();
  unint64_t v60 = sub_1003A2048();
  unint64_t v61 = v108;
  uint64_t v62 = v109;
  uint64_t v63 = v130;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v63, v62);
  uint64_t v64 = v131;
  uint64_t v65 = v131 + v135[14];
  char v66 = *(unsigned char *)v65;
  uint64_t v67 = *(ValueMetadata **)(v65 + 8);
  LOBYTE(v139) = v66;
  uint64_t v140 = v67;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  sub_1005547CC(v64, v56, v133);
  uint64_t v68 = swift_allocObject();
  sub_100556A40(v56, v68 + v127, v58);
  id v139 = (int *)v62;
  uint64_t v140 = &type metadata for DayRangeForStackedLoadCharts;
  uint64_t v141 = v59;
  uint64_t v142 = (void *)v60;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  uint64_t v70 = v111;
  uint64_t v71 = v112;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  char v72 = (int *)v71;
  (*(void (**)(char *, uint64_t))(v113 + 8))(v61, v71);
  uint64_t v136 = v131;
  uint64_t v73 = sub_1000AFA94(&qword_100961608);
  id v139 = v72;
  uint64_t v140 = (ValueMetadata *)&type metadata for Bool;
  uint64_t v141 = v69;
  uint64_t v142 = &protocol witness table for Bool;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  uint64_t v75 = sub_1000A1370(&qword_10094E2B8);
  uint64_t v76 = sub_1000A132C(&qword_100961680, &qword_10094E2B8);
  id v139 = (int *)v75;
  uint64_t v140 = (ValueMetadata *)v76;
  uint64_t v77 = swift_getOpaqueTypeConformance2();
  float64x2_t v78 = v114;
  uint64_t v79 = v115;
  View.toolbar<A>(content:)();
  uint64_t v80 = v70;
  uint64_t v81 = (int *)v79;
  (*(void (**)(char *, uint64_t))(v116 + 8))(v80, v79);
  id v82 = [self mainBundle];
  NSString v83 = String._bridgeToObjectiveC()();
  id v84 = [v82 localizedStringForKey:v83 value:0 table:0];

  uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v87 = v86;

  uint64_t v137 = v85;
  uint64_t v138 = v87;
  id v139 = v81;
  uint64_t v140 = (ValueMetadata *)v73;
  uint64_t v141 = v74;
  uint64_t v142 = (void *)v77;
  uint64_t v88 = swift_getOpaqueTypeConformance2();
  unint64_t v89 = sub_1000A06D0();
  uint64_t v90 = v117;
  uint64_t v91 = v118;
  View.navigationTitle<A>(_:)();
  swift_bridgeObjectRelease();
  uint64_t v92 = (int *)v91;
  (*(void (**)(char *, uint64_t))(v119 + 8))(v78, v91);
  uint64_t v93 = v123;
  uint64_t v94 = v122;
  uint64_t v95 = v124;
  (*(void (**)(char *, void, uint64_t))(v123 + 104))(v122, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v124);
  id v139 = v92;
  uint64_t v140 = (ValueMetadata *)&type metadata for String;
  uint64_t v141 = v88;
  uint64_t v142 = (void *)v89;
  swift_getOpaqueTypeConformance2();
  uint64_t v96 = v120;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
  return (*(uint64_t (**)(char *, uint64_t))(v121 + 8))(v90, v96);
}

uint64_t sub_1005408AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v149 = a2;
  uint64_t v150 = a1;
  uint64_t v143 = sub_1000AFA94(&qword_1009616B8);
  __chkstk_darwin(v143);
  uint64_t v145 = (uint64_t *)((char *)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = sub_1000AFA94(&qword_1009616C0);
  uint64_t v119 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v118 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  id v139 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009616C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v148 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v147 = (char *)&v117 - v9;
  uint64_t v137 = type metadata accessor for Divider();
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v135 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v151 = (char *)&v117 - v12;
  uint64_t v13 = sub_1000AFA94(&qword_1009616D0);
  __chkstk_darwin(v13 - 8);
  uint64_t v144 = (uint64_t)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  Swift::Int v154 = (uint64_t *)((char *)&v117 - v16);
  uint64_t v17 = sub_1000AFA94(&qword_1009616D8);
  __chkstk_darwin(v17 - 8);
  uint64_t v132 = (uint64_t *)((char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v134 = sub_1000AFA94(&qword_1009616E0) - 8;
  __chkstk_darwin(v134);
  uint64_t v142 = (uint64_t)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v133 = (uint64_t)&v117 - v21;
  __chkstk_darwin(v22);
  uint64_t v153 = (uint64_t)&v117 - v23;
  uint64_t v130 = type metadata accessor for SegmentedPickerStyle();
  uint64_t v138 = *(void (***)(char *, uint64_t))(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v123 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1000AFA94(&qword_1009616E8);
  uint64_t v127 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v26 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1000AFA94(&qword_1009616F0);
  uint64_t v125 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  Swift::Int v122 = (char *)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000AFA94(&qword_1009616F8);
  uint64_t v29 = v28 - 8;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1000AFA94(&qword_100961700) - 8;
  __chkstk_darwin(v126);
  uint64_t v33 = (char *)&v117 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_1000AFA94(&qword_100961708) - 8;
  __chkstk_darwin(v128);
  uint64_t v35 = (void (**)(char *, uint64_t))((char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v36);
  uint64_t v152 = (uint64_t)&v117 - v37;
  uint64_t v121 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v120 = v38;
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v39 = a1 + *(int *)(DetailsStackedChartView + 56);
  char v40 = *(unsigned char *)v39;
  uint64_t v41 = *(void *)(v39 + 8);
  char v156 = v40;
  uint64_t v157 = v41;
  sub_1000AFA94(&qword_100961690);
  State.projectedValue.getter();
  sub_1000AFA94(&qword_100961710);
  sub_1003A142C();
  sub_1000A132C(&qword_100961718, &qword_100961710);
  Picker<>.init(_:selection:content:)();
  id v42 = v123;
  SegmentedPickerStyle.init()();
  sub_1000A132C(&qword_100961720, &qword_1009616E8);
  uint64_t v43 = v122;
  uint64_t v44 = v124;
  uint64_t v45 = v130;
  View.pickerStyle<A>(_:)();
  v138[1](v42, v45);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v26, v44);
  LOBYTE(v45) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v54 = v125;
  uint64_t v55 = v129;
  (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v31, v43, v129);
  uint64_t v56 = &v31[*(int *)(v29 + 44)];
  *uint64_t v56 = v45;
  *((void *)v56 + 1) = v47;
  *((void *)v56 + 2) = v49;
  *((void *)v56 + 3) = v51;
  *((void *)v56 + 4) = v53;
  v56[40] = 0;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v43, v55);
  LOBYTE(v45) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  sub_1000AEF2C((uint64_t)v31, (uint64_t)v33, &qword_1009616F8);
  uint64_t v65 = &v33[*(int *)(v126 + 44)];
  *uint64_t v65 = v45;
  *((void *)v65 + 1) = v58;
  *((void *)v65 + 2) = v60;
  *((void *)v65 + 3) = v62;
  *((void *)v65 + 4) = v64;
  v65[40] = 0;
  sub_10008DB18((uint64_t)v31, &qword_1009616F8);
  LOBYTE(v45) = static Edge.Set.bottom.getter();
  sub_1000AEF2C((uint64_t)v33, (uint64_t)v35, &qword_100961700);
  char v66 = (char *)v35 + *(int *)(v128 + 44);
  *char v66 = v45;
  *(_OWORD *)(v66 + 8) = 0u;
  *(_OWORD *)(v66 + 24) = 0u;
  v66[40] = 1;
  sub_10008DB18((uint64_t)v33, &qword_100961700);
  uint64_t v138 = v35;
  sub_1000AEEC8((uint64_t)v35, v152, &qword_100961708);
  uint64_t v67 = static HorizontalAlignment.leading.getter();
  uint64_t v68 = (uint64_t)v132;
  uint64_t *v132 = v67;
  *(void *)(v68 + 8) = 0x4028000000000000;
  *(unsigned char *)(v68 + 16) = 0;
  uint64_t v69 = sub_1000AFA94(&qword_100961728);
  sub_100541BC0(v150, v68 + *(int *)(v69 + 44));
  LOBYTE(v45) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v78 = v133;
  sub_1000AEF2C(v68, v133, &qword_1009616D8);
  uint64_t v79 = v78 + *(int *)(v134 + 44);
  *(unsigned char *)uint64_t v79 = v45;
  *(void *)(v79 + 8) = v71;
  *(void *)(v79 + 16) = v73;
  *(void *)(v79 + 24) = v75;
  *(void *)(v79 + 32) = v77;
  *(unsigned char *)(v79 + 40) = 0;
  sub_10008DB18(v68, &qword_1009616D8);
  sub_1000AEEC8(v78, v153, &qword_1009616E0);
  uint64_t v80 = static HorizontalAlignment.center.getter();
  uint64_t v81 = v154;
  *Swift::Int v154 = v80;
  v81[1] = 0;
  *((unsigned char *)v81 + 16) = 0;
  id v82 = (char *)v81 + *(int *)(sub_1000AFA94(&qword_100961730) + 44);
  NSString v83 = v151;
  Divider.init()();
  uint64_t v84 = static Color.black.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v134 = v158;
  LOBYTE(v29) = v159;
  uint64_t v133 = v160;
  LOBYTE(v44) = v161;
  uint64_t v85 = v163;
  uint64_t v132 = v162;
  uint64_t v86 = v136;
  uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
  uint64_t v88 = v135;
  unint64_t v89 = v83;
  uint64_t v90 = v137;
  v87(v135, v89, v137);
  char v156 = v29;
  uint64_t v91 = v150;
  char v155 = v44;
  v87(v82, v88, v90);
  uint64_t v92 = &v82[*(int *)(sub_1000AFA94(&qword_100961738) + 48)];
  char v93 = v156;
  char v94 = v155;
  uint64_t v95 = v134;
  *(void *)uint64_t v92 = v84;
  *((void *)v92 + 1) = v95;
  v92[16] = v93;
  *((void *)v92 + 3) = v133;
  v92[32] = v94;
  *((void *)v92 + 5) = v132;
  *((void *)v92 + 6) = v85;
  uint64_t v96 = *(void (**)(char *, uint64_t))(v86 + 8);
  swift_retain();
  v96(v151, v90);
  swift_release();
  v96(v88, v90);
  uint64_t v97 = v91 + *(int *)(DetailsStackedChartView + 68);
  id v98 = *(id *)v97;
  LOBYTE(v82) = *(unsigned char *)(v97 + 8);
  sub_1001AEDAC(*(id *)v97, (char)v82);
  id v99 = sub_1004E75C0(v98, (char)v82);
  sub_1001AEDC8(v98, (char)v82);
  uint64_t v100 = v139;
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  LOBYTE(v98) = OvernightMetricsViewModel.isWatchExperienceAvailable.getter();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v100, v141);

  if (v98)
  {
    __chkstk_darwin(v101);
    static Axis.Set.vertical.getter();
    sub_1000AFA94(&qword_100961750);
    sub_100554430();
    uint64_t v104 = v118;
    ScrollView.init(_:showsIndicators:content:)();
    uint64_t v105 = v119;
    uint64_t v106 = v146;
    (*(void (**)(void *, char *, uint64_t))(v119 + 16))(v145, v104, v146);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100961740, &qword_1009616C0);
    uint64_t v103 = (uint64_t)v147;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v106);
  }
  else
  {
    uint64_t v102 = v145;
    *uint64_t v145 = 0;
    *((unsigned char *)v102 + 8) = 1;
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100961740, &qword_1009616C0);
    uint64_t v103 = (uint64_t)v147;
    _ConditionalContent<>.init(storage:)();
  }
  uint64_t v107 = v152;
  uint64_t v108 = (uint64_t)v138;
  sub_1000AEF2C(v152, (uint64_t)v138, &qword_100961708);
  uint64_t v109 = v153;
  uint64_t v110 = v142;
  sub_1000AEF2C(v153, v142, &qword_1009616E0);
  char v111 = v154;
  uint64_t v112 = v144;
  sub_1000AEF2C((uint64_t)v154, v144, &qword_1009616D0);
  uint64_t v113 = v148;
  sub_1000AEF2C(v103, v148, &qword_1009616C8);
  uint64_t v114 = v149;
  sub_1000AEF2C(v108, v149, &qword_100961708);
  uint64_t v115 = (int *)sub_1000AFA94(&qword_100961748);
  sub_1000AEF2C(v110, v114 + v115[12], &qword_1009616E0);
  sub_1000AEF2C(v112, v114 + v115[16], &qword_1009616D0);
  sub_1000AEF2C(v113, v114 + v115[20], &qword_1009616C8);
  sub_10008DB18(v103, &qword_1009616C8);
  sub_10008DB18((uint64_t)v111, &qword_1009616D0);
  sub_10008DB18(v109, &qword_1009616E0);
  sub_10008DB18(v107, &qword_100961708);
  sub_10008DB18(v113, &qword_1009616C8);
  sub_10008DB18(v112, &qword_1009616D0);
  sub_10008DB18(v110, &qword_1009616E0);
  return sub_10008DB18(v108, &qword_100961708);
}

uint64_t sub_100541894@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000A06D0();
  uint64_t v30 = Text.init<A>(_:)();
  uint64_t v31 = v6;
  uint64_t v29 = v7;
  char v28 = v8 & 1;
  id v9 = [v2 mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  LOBYTE(v9) = v17 & 1;
  id v18 = [v2 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v18 localizedStringForKey:v19 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = Text.init<A>(_:)();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  *(void *)a1 = v30;
  *(void *)(a1 + 8) = v31;
  *(unsigned char *)(a1 + 16) = v28;
  *(void *)(a1 + 24) = v29;
  *(_WORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 56) = (_BYTE)v9;
  *(void *)(a1 + 64) = v16;
  *(_WORD *)(a1 + 72) = 257;
  *(void *)(a1 + 80) = v21;
  *(void *)(a1 + 88) = v22;
  *(unsigned char *)(a1 + 96) = v24 & 1;
  *(void *)(a1 + 104) = v26;
  *(_WORD *)(a1 + 112) = 514;
  sub_1000A1750(v30, v31, v28);
  swift_bridgeObjectRetain();
  sub_1000A1750(v12, v14, (char)v9);
  swift_bridgeObjectRetain();
  sub_1000A1750(v21, v23, v25);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v21, v23, v25);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v12, v14, (char)v9);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v30, v31, v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100541BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100961A08);
  __chkstk_darwin(v3 - 8);
  uint64_t v36 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v36 - v6;
  uint64_t v8 = sub_1000AFA94(&qword_100961A10);
  __chkstk_darwin(v8 - 8);
  NSString v10 = (_OWORD *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000AFA94(&qword_100961A18);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100961A20);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  NSString v19 = (char *)&v36 - v18;
  if (qword_10094A6C0 != -1) {
    swift_once();
  }
  *NSString v10 = xmmword_100997838;
  uint64_t v20 = sub_1000AFA94(&qword_100961A28);
  sub_100541F4C(a1, (uint64_t)v10 + *(int *)(v20 + 44));
  char v21 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_1000AEF2C((uint64_t)v10, (uint64_t)v13, &qword_100961A10);
  uint64_t v30 = &v13[*(int *)(v11 + 36)];
  *uint64_t v30 = v21;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10008DB18((uint64_t)v10, &qword_100961A10);
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v16, &qword_100961A18);
  *(void *)&v16[*(int *)(v14 + 36)] = 0x3FF0000000000000;
  sub_10008DB18((uint64_t)v13, &qword_100961A18);
  sub_1000AEEC8((uint64_t)v16, (uint64_t)v19, &qword_100961A20);
  *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v31 = sub_1000AFA94(&qword_100961A30);
  sub_10054444C(a1, (uint64_t)&v7[*(int *)(v31 + 44)]);
  sub_1000AEF2C((uint64_t)v19, (uint64_t)v16, &qword_100961A20);
  uint64_t v32 = v36;
  sub_1000AEF2C((uint64_t)v7, v36, &qword_100961A08);
  uint64_t v33 = v37;
  sub_1000AEF2C((uint64_t)v16, v37, &qword_100961A20);
  uint64_t v34 = sub_1000AFA94(&qword_100961A38);
  sub_1000AEF2C(v32, v33 + *(int *)(v34 + 48), &qword_100961A08);
  sub_10008DB18((uint64_t)v7, &qword_100961A08);
  sub_10008DB18((uint64_t)v19, &qword_100961A20);
  sub_10008DB18(v32, &qword_100961A08);
  return sub_10008DB18((uint64_t)v16, &qword_100961A20);
}

uint64_t sub_100541F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v173 = a2;
  uint64_t v147 = type metadata accessor for DayIndex();
  uint64_t v146 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v145 = (char *)&v139 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ChartLollipopView = type metadata accessor for TrainingLoadChartLollipopView();
  __chkstk_darwin(ChartLollipopView);
  uint64_t v142 = (char *)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1000AFA94(&qword_100961B88);
  __chkstk_darwin(v141);
  uint64_t v144 = (uint64_t)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_1000AFA94(&qword_100961B90);
  uint64_t v175 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v143 = (uint64_t)&v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100961B98);
  __chkstk_darwin(v7 - 8);
  uint64_t v178 = (uint64_t)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v176 = (uint64_t)&v139 - v10;
  uint64_t v161 = sub_1000AFA94(&qword_100961BA0);
  __chkstk_darwin(v161);
  uint64_t v148 = (uint64_t)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v154 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v153 = (char *)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v156 = *(void *)(ViewModel - 8);
  __chkstk_darwin(ViewModel);
  uint64_t v158 = (char *)&v139 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1000AFA94(&qword_100961BA8);
  uint64_t v152 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v150 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v151 = (char *)&v139 - v16;
  uint64_t v172 = sub_1000AFA94(&qword_100961BB0);
  __chkstk_darwin(v172);
  uint64_t v159 = (uint64_t)&v139 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_100961BB8);
  __chkstk_darwin(v18 - 8);
  char v165 = (char *)&v139 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = type metadata accessor for GregorianDayRange();
  uint64_t v20 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  uint64_t v22 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for TrainingLoadChart.Configuration();
  __chkstk_darwin(v23 - 8);
  uint64_t v164 = (uint64_t)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Chart = type metadata accessor for TrainingLoadChart();
  uint64_t v168 = *(void *)(Chart - 8);
  __chkstk_darwin(Chart);
  char v167 = (char *)&v139 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_1000AFA94(&qword_100961BC0);
  __chkstk_darwin(v170);
  uint64_t v163 = (char *)&v139 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v139 - v28;
  __chkstk_darwin(v30);
  uint64_t v149 = (uint64_t)&v139 - v31;
  uint64_t v32 = sub_1000AFA94(&qword_100961BC8);
  __chkstk_darwin(v32 - 8);
  uint64_t v174 = (uint64_t)&v139 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  Swift::String v171 = (char *)&v139 - v35;
  char v36 = sub_10053F5A8();
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v37 = *(int *)(DetailsStackedChartView + 68);
  uint64_t v179 = a1;
  uint64_t v38 = a1 + v37;
  uint64_t v39 = *(void **)(a1 + v37);
  char v40 = *(unsigned char *)(v38 + 8);
  sub_1001AEDAC(v39, v40);
  id v41 = sub_1004E75C0(v39, v40);
  id v42 = (char *)sub_1004E75C0(v39, v40);
  sub_1001AEDC8(v39, v40);
  swift_getKeyPath();
  if (v36)
  {
    *(void *)&long long v185 = v42;
    sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v43 = &v42[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
    swift_beginAccess();
    uint64_t v44 = v162;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v43, v162);

    sub_10021F0EC((uint64_t)v22, v164);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v44);
    uint64_t v45 = (int *)DetailsStackedChartView;
    uint64_t v46 = v179;
    sub_1000AFA94(&qword_1009614F8);
    uint64_t v47 = v165;
    State.projectedValue.getter();
    uint64_t v48 = sub_1000AFA94(&qword_100961BD0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
    LOBYTE(v182) = 0;
    static Binding.constant(_:)();
    uint64_t v49 = v167;
    TrainingLoadChart.init(configuration:selectedDay:inSelectionMode:)();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v50 = v168;
    uint64_t v51 = Chart;
    (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v29, v49, Chart);
    uint64_t v52 = v170;
    uint64_t v53 = &v29[*(int *)(v170 + 36)];
    long long v54 = v183;
    *(_OWORD *)uint64_t v53 = v182;
    *((_OWORD *)v53 + 1) = v54;
    *((_OWORD *)v53 + 2) = v184;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
    uint64_t v55 = v149;
    sub_1000AEEC8((uint64_t)v29, v149, &qword_100961BC0);
    sub_1000AEF2C(v55, v159, &qword_100961BC0);
    swift_storeEnumTagMultiPayload();
    unint64_t v56 = sub_1005552AC();
    unint64_t v57 = sub_100555358();
    *(void *)&long long v185 = v52;
    *((void *)&v185 + 1) = v161;
    *(void *)&long long v186 = v56;
    *((void *)&v186 + 1) = v57;
    swift_getOpaqueTypeConformance2();
    uint64_t v58 = v171;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v55, &qword_100961BC0);
    uint64_t v59 = v173;
    uint64_t v60 = (uint64_t)v58;
  }
  else
  {
    *(void *)&long long v185 = v42;
    sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v61 = &v42[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
    swift_beginAccess();
    uint64_t v62 = v162;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v61, v162);

    id v63 = *(id *)v38;
    LOBYTE(v61) = *(unsigned char *)(v38 + 8);
    sub_1001AEDAC(*(id *)v38, (char)v61);
    id v64 = sub_1004E75C0(v63, (char)v61);
    sub_1001AEDC8(v63, (char)v61);
    swift_retain();

    sub_1000AFA94(&qword_1009614F0);
    uint64_t v65 = v153;
    uint64_t v66 = v179;
    Binding.wrappedValue.getter();
    uint64_t v67 = (uint64_t)v158;
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v154 + 8))(v65, DataType);
    sub_10021E838((uint64_t)v22, v67, v164);

    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v67, ViewModel);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v62);
    uint64_t v45 = (int *)DetailsStackedChartView;
    sub_1000AFA94(&qword_1009614F8);
    uint64_t v68 = v165;
    State.projectedValue.getter();
    uint64_t v69 = sub_1000AFA94(&qword_100961BD0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 1, v69);
    uint64_t v70 = (char *)(v66 + v45[12]);
    char v71 = *v70;
    uint64_t v72 = *((void *)v70 + 1);
    LOBYTE(v182) = v71;
    *((void *)&v182 + 1) = v72;
    sub_1000AFA94(&qword_10094DEE0);
    State.projectedValue.getter();
    uint64_t v73 = v167;
    TrainingLoadChart.init(configuration:selectedDay:inSelectionMode:)();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v74 = v168;
    uint64_t v75 = v163;
    uint64_t v76 = Chart;
    (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v163, v73, Chart);
    uint64_t v77 = v170;
    uint64_t v78 = &v75[*(int *)(v170 + 36)];
    long long v79 = v183;
    *(_OWORD *)uint64_t v78 = v182;
    *((_OWORD *)v78 + 1) = v79;
    *((_OWORD *)v78 + 2) = v184;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v76);
    if (sub_10053F5A8())
    {
      uint64_t v80 = sub_1000AFA94(&qword_1009618D8);
      uint64_t v81 = v148;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v148, 1, 1, v80);
    }
    else
    {
      uint64_t v81 = v148;
      sub_1005434E0(v148);
      uint64_t v82 = sub_1000AFA94(&qword_1009618D8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
    }
    uint64_t v83 = v161;
    uint64_t v84 = v160;
    uint64_t v85 = v159;
    static GestureMask.all.getter();
    unint64_t v86 = sub_1005552AC();
    unint64_t v87 = sub_100555358();
    uint64_t v88 = v150;
    uint64_t v89 = (uint64_t)v163;
    View.gesture<A>(_:including:)();
    sub_10008DB18(v81, &qword_100961BA0);
    sub_10008DB18(v89, &qword_100961BC0);
    uint64_t v90 = v152;
    uint64_t v91 = v151;
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v151, v88, v84);
    (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v85, v91, v84);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v185 = v77;
    *((void *)&v185 + 1) = v83;
    *(void *)&long long v186 = v86;
    *((void *)&v186 + 1) = v87;
    swift_getOpaqueTypeConformance2();
    uint64_t v60 = (uint64_t)v171;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v84);
    uint64_t v59 = v173;
    uint64_t v46 = v179;
  }
  type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v92 = *(void **)(v46 + v45[6]);
  if (v92)
  {
    char v93 = v45;
    uint64_t v94 = v46 + v45[12];
    uint64_t v95 = *(void *)(v94 + 8);
    LOBYTE(v185) = *(unsigned char *)v94;
    *((void *)&v185 + 1) = v95;
    uint64_t v96 = v92;
    sub_1000AFA94(&qword_10094DEE0);
    State.wrappedValue.getter();
    if (v180 == 1 && (sub_10053F5A8() & 1) == 0)
    {
      uint64_t v104 = v46 + v93[17];
      Swift::String v171 = v96;
      id v105 = *(id *)v104;
      char v106 = *(unsigned char *)(v104 + 8);
      sub_1001AEDAC(*(id *)v104, v106);
      id v107 = sub_1004E75C0(v105, v106);
      sub_1001AEDC8(v105, v106);
      swift_retain();

      sub_1000AFA94(&qword_1009614F0);
      uint64_t v108 = v153;
      Binding.wrappedValue.getter();
      dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v108, DataType);
      uint64_t v173 = v46 + v93[11];
      uint64_t v109 = (int *)ChartLollipopView;
      uint64_t v110 = (uint64_t)v142;
      uint64_t v172 = sub_1000AFA94(&qword_1009614F8);
      State.wrappedValue.getter();
      char v111 = (char *)(v46 + v93[14]);
      char v112 = *v111;
      uint64_t v113 = *((void *)v111 + 1);
      LOBYTE(v185) = v112;
      *((void *)&v185 + 1) = v113;
      sub_1000AFA94(&qword_100961690);
      State.wrappedValue.getter();
      LODWORD(v170) = v180;
      uint64_t v114 = (uint64_t *)(v46 + v93[7]);
      uint64_t v115 = v46;
      uint64_t v117 = *v114;
      uint64_t v116 = v114[1];
      *(void *)&long long v185 = v117;
      *((void *)&v185 + 1) = v116;
      sub_1000AFA94(&qword_100961698);
      State.wrappedValue.getter();
      uint64_t v118 = v180;
      long long v185 = *(_OWORD *)(v115 + v93[8]);
      sub_1000AFA94(&qword_1009616A0);
      State.wrappedValue.getter();
      uint64_t v119 = v180;
      uint64_t v120 = *(void *)(v94 + 8);
      LOBYTE(v180) = *(unsigned char *)v94;
      uint64_t v181 = v120;
      uint64_t v121 = v171;
      State.projectedValue.getter();
      uint64_t v123 = *((void *)&v185 + 1);
      uint64_t v122 = v185;
      char v124 = v186;
      (*(void (**)(uint64_t, char *, uint64_t))(v156 + 32))(v110, v158, ViewModel);
      *(unsigned char *)(v110 + v109[6]) = v170;
      *(void *)(v110 + v109[7]) = v118;
      uint64_t v125 = v60;
      *(void *)(v110 + v109[8]) = v119;
      *(void *)(v110 + v109[9]) = v121;
      uint64_t v126 = v110 + v109[10];
      *(void *)uint64_t v126 = v122;
      *(void *)(v126 + 8) = v123;
      *(unsigned char *)(v126 + 16) = v124;
      uint64_t v127 = v110 + v109[11];
      type metadata accessor for BalanceDataProvider();
      sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
      *(void *)uint64_t v127 = Environment.init<A>(_:)();
      *(unsigned char *)(v127 + 8) = v128 & 1;
      uint64_t v129 = v109[12];
      *(void *)(v110 + v129) = [self preferredFontForTextStyle:UIFontTextStyleLargeTitle];
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v130 = v144;
      sub_1005547CC(v110, v144, (uint64_t (*)(void))type metadata accessor for TrainingLoadChartLollipopView);
      uint64_t v131 = (_OWORD *)(v130 + *(int *)(v141 + 36));
      long long v132 = v186;
      _OWORD *v131 = v185;
      v131[1] = v132;
      v131[2] = v187;
      sub_100554834(v110, (uint64_t (*)(void))type metadata accessor for TrainingLoadChartLollipopView);
      uint64_t v133 = v145;
      State.wrappedValue.getter();
      sub_100543D70();
      uint64_t v135 = v134;
      (*(void (**)(char *, uint64_t))(v146 + 8))(v133, v147);

      uint64_t v136 = v143;
      sub_1000AEF2C(v130, v143, &qword_100961B88);
      uint64_t v98 = v177;
      uint64_t v137 = (void *)(v136 + *(int *)(v177 + 36));
      *uint64_t v137 = v135;
      v137[1] = 0x4051C00000000000;
      uint64_t v138 = v130;
      uint64_t v60 = v125;
      sub_10008DB18(v138, &qword_100961B88);
      uint64_t v99 = v176;
      sub_1000AEEC8(v136, v176, &qword_100961B90);
      uint64_t v97 = 0;
      goto LABEL_12;
    }
  }
  uint64_t v97 = 1;
  uint64_t v98 = v177;
  uint64_t v99 = v176;
LABEL_12:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v175 + 56))(v99, v97, 1, v98);
  uint64_t v100 = v174;
  sub_1000AEF2C(v60, v174, &qword_100961BC8);
  uint64_t v101 = v178;
  sub_1000AEF2C(v99, v178, &qword_100961B98);
  sub_1000AEF2C(v100, v59, &qword_100961BC8);
  uint64_t v102 = sub_1000AFA94(&qword_100961BF0);
  sub_1000AEF2C(v101, v59 + *(int *)(v102 + 48), &qword_100961B98);
  sub_10008DB18(v99, &qword_100961B98);
  sub_10008DB18(v60, &qword_100961BC8);
  sub_10008DB18(v101, &qword_100961B98);
  return sub_10008DB18(v100, &qword_100961BC8);
}

uint64_t sub_1005434E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v62 = a1;
  uint64_t v3 = type metadata accessor for DelayedLongPressGesture();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  uint64_t v61 = v4;
  __chkstk_darwin(v3);
  unint64_t v56 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100961968);
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  __chkstk_darwin(v6);
  unint64_t v57 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000AFA94(&qword_100961970) - 8;
  __chkstk_darwin(v55);
  long long v54 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SpatialTapGesture();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  uint64_t v53 = v10;
  __chkstk_darwin(v9);
  uint64_t v50 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000AFA94(&qword_100961978);
  uint64_t v66 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v65 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v14 = *(void *)(DetailsStackedChartView - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(DetailsStackedChartView - 8);
  uint64_t v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin(v48);
  uint64_t v17 = type metadata accessor for DragGesture();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000AFA94(&qword_10095C808);
  uint64_t v67 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  id v63 = (char *)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  id v64 = type metadata accessor for LoadDetailsStackedChartView;
  sub_1005547CC(v2, (uint64_t)v16, type metadata accessor for LoadDetailsStackedChartView);
  uint64_t v22 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v23 = (v22 + 16) & ~v22;
  uint64_t v46 = v22 | 7;
  v44[1] = v23 + v15;
  uint64_t v24 = swift_allocObject();
  v44[0] = v23;
  uint64_t v45 = type metadata accessor for LoadDetailsStackedChartView;
  sub_100556A40((uint64_t)v16, v24 + v23, type metadata accessor for LoadDetailsStackedChartView);
  sub_100085938(&qword_10095C850, (void (*)(uint64_t))&type metadata accessor for DragGesture);
  sub_100085938(&qword_10095C858, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
  uint64_t v25 = v63;
  Gesture<>.onChanged(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  static CoordinateSpaceProtocol<>.local.getter();
  uint64_t v26 = v50;
  SpatialTapGesture.init<A>(count:coordinateSpace:)();
  uint64_t v27 = v47;
  sub_1005547CC(v47, (uint64_t)v16, v64);
  uint64_t v28 = swift_allocObject() + v23;
  uint64_t v29 = v45;
  sub_100556A40((uint64_t)v16, v28, v45);
  sub_100085938(&qword_100961980, (void (*)(uint64_t))&type metadata accessor for SpatialTapGesture);
  uint64_t v30 = v65;
  uint64_t v31 = v52;
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v31);
  uint64_t v32 = (uint64_t)v54;
  uint64_t v33 = v51;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v54, v30, v51);
  uint64_t v34 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v32 + *(int *)(v55 + 60), v25, v49);
  uint64_t v35 = v56;
  DelayedLongPressGesture.init(minimumDuration:maximumDistance:)();
  sub_1005547CC(v27, (uint64_t)v16, v64);
  uint64_t v36 = swift_allocObject();
  sub_100556A40((uint64_t)v16, v36 + v44[0], v29);
  sub_100085938(&qword_100961988, (void (*)(uint64_t))&type metadata accessor for DelayedLongPressGesture);
  uint64_t v37 = v57;
  uint64_t v38 = v60;
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v38);
  uint64_t v40 = v58;
  uint64_t v39 = v59;
  uint64_t v41 = v62;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v62, v37, v59);
  uint64_t v42 = sub_1000AFA94(&qword_1009618D8);
  sub_1000AEF2C(v32, v41 + *(int *)(v42 + 52), &qword_100961970);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v39);
  sub_10008DB18(v32, &qword_100961970);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v63, v34);
}

uint64_t sub_100543D70()
{
  uint64_t v64 = type metadata accessor for DayIndex();
  uint64_t v1 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  unint64_t v57 = (char *)v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v60 = (char *)v47 - v4;
  uint64_t v53 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v53);
  unint64_t v56 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v47 - v7;
  uint64_t v9 = type metadata accessor for GregorianDayRange();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v54 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v47 - v13;
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v49 = *(int *)(DetailsStackedChartView + 36);
  uint64_t v59 = DayIndex.value.getter();
  uint64_t v16 = *(int *)(DetailsStackedChartView + 68);
  uint64_t v50 = v0;
  uint64_t v17 = v0 + v16;
  uint64_t v18 = *(void **)(v0 + v16);
  char v19 = *(unsigned char *)(v0 + v16 + 8);
  sub_1001AEDAC(*(id *)v17, *(unsigned char *)(v17 + 8));
  uint64_t v20 = (char *)sub_1004E75C0(v18, v19);
  sub_1001AEDC8(v18, v19);
  swift_getKeyPath();
  uint64_t v67 = v20;
  uint64_t v61 = sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v21 = &v20[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  uint64_t v22 = v10 + 16;
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v62(v14, v21, v9);

  GregorianDayRange.dayIndexRange.getter();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v55 = v9;
  uint64_t v63 = v10 + 8;
  v23(v14, v9);
  uint64_t v24 = v60;
  uint64_t v25 = v1 + 16;
  uint64_t v26 = v64;
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v52(v60, v8, v64);
  sub_10008DB18((uint64_t)v8, &qword_100950728);
  uint64_t v27 = DayIndex.value.getter();
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v58 = v1 + 8;
  uint64_t v51 = v28;
  uint64_t result = v28(v24, v26);
  if (__OFSUB__(v59, v27))
  {
    __break(1u);
    goto LABEL_5;
  }
  v47[0] = v59 - v27;
  id v30 = *(id *)v17;
  v47[2] = v22;
  char v31 = *(unsigned char *)(v17 + 8);
  sub_1001AEDAC(v30, v31);
  uint64_t v32 = (char *)sub_1004E75C0(v30, v31);
  uint64_t v33 = v23;
  uint64_t v48 = v23;
  uint64_t v34 = v32;
  sub_1001AEDC8(v30, v31);
  swift_getKeyPath();
  uint64_t v66 = v34;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v35 = &v34[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  uint64_t v36 = v55;
  v62(v14, v35, v55);

  GregorianDayRange.dayIndexRange.getter();
  v47[1] = v25;
  v33(v14, v36);
  uint64_t v37 = v64;
  uint64_t v38 = (void (*)(char *, uint64_t, uint64_t))v52;
  v52(v24, &v8[*(int *)(v53 + 36)], v64);
  sub_10008DB18((uint64_t)v8, &qword_100950728);
  uint64_t v59 = DayIndex.value.getter();
  uint64_t v39 = v51;
  v51(v24, v37);
  id v40 = *(id *)v17;
  LOBYTE(v34) = *(unsigned char *)(v17 + 8);
  sub_1001AEDAC(*(id *)v17, (char)v34);
  uint64_t v41 = (char *)sub_1004E75C0(v40, (char)v34);
  sub_1001AEDC8(v40, (char)v34);
  swift_getKeyPath();
  uint64_t v65 = v41;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v42 = &v41[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  uint64_t v43 = v54;
  v62(v54, v42, v36);

  uint64_t v44 = (uint64_t)v56;
  GregorianDayRange.dayIndexRange.getter();
  v48(v43, v36);
  uint64_t v45 = v57;
  v38(v57, v44, v37);
  sub_10008DB18(v44, &qword_100950728);
  uint64_t v46 = DayIndex.value.getter();
  uint64_t result = v39(v45, v37);
  if (__OFSUB__(v59, v46)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_10054444C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094BFB8);
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  __chkstk_darwin(v3);
  uint64_t v69 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000AFA94(&qword_100961A40);
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v70 = (uint64_t)&v67 - v7;
  uint64_t v8 = sub_1000AFA94(&qword_100961A48);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v74 = (uint64_t)&v67 - v12;
  uint64_t v13 = sub_1000AFA94(&qword_100961A50);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_100961A58);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  char v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100961A60);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v73 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v67 - v24;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v67 - v27;
  *(void *)uint64_t v15 = static HorizontalAlignment.leading.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v29 = sub_1000AFA94(&qword_100961A68);
  sub_100544A88(a1, &v15[*(int *)(v29 + 44)]);
  char v30 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_1000AEF2C((uint64_t)v15, (uint64_t)v19, &qword_100961A50);
  uint64_t v39 = &v19[*(int *)(v17 + 44)];
  *uint64_t v39 = v30;
  *((void *)v39 + 1) = v32;
  *((void *)v39 + 2) = v34;
  *((void *)v39 + 3) = v36;
  *((void *)v39 + 4) = v38;
  v39[40] = 0;
  sub_10008DB18((uint64_t)v15, &qword_100961A50);
  uint64_t v40 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 48);
  char v41 = *(unsigned char *)v40;
  uint64_t v42 = *(void *)(v40 + 8);
  char v76 = v41;
  uint64_t v77 = v42;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  if (v78) {
    double v43 = 0.6;
  }
  else {
    double v43 = 1.0;
  }
  sub_1000AEF2C((uint64_t)v19, (uint64_t)v25, &qword_100961A58);
  *(double *)&v25[*(int *)(v21 + 44)] = v43;
  sub_10008DB18((uint64_t)v19, &qword_100961A58);
  sub_1000AEEC8((uint64_t)v25, (uint64_t)v28, &qword_100961A60);
  if (sub_10053F5A8())
  {
    uint64_t v44 = v69;
    ProgressView<>.init<>()();
    char v45 = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v55 = v71;
    uint64_t v54 = v72;
    uint64_t v56 = (uint64_t)v67;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v67, v44, v72);
    uint64_t v57 = v56 + *(int *)(v68 + 36);
    *(unsigned char *)uint64_t v57 = v45;
    *(void *)(v57 + 8) = v47;
    *(void *)(v57 + 16) = v49;
    *(void *)(v57 + 24) = v51;
    *(void *)(v57 + 32) = v53;
    *(unsigned char *)(v57 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v54);
    uint64_t v58 = v70;
    sub_1000AEEC8(v56, v70, &qword_100961A40);
    sub_1000AEF2C(v58, v56, &qword_100961A40);
    *(void *)uint64_t v10 = 0;
    v10[8] = 1;
    uint64_t v59 = sub_1000AFA94(&qword_100961A80);
    sub_1000AEF2C(v56, (uint64_t)&v10[*(int *)(v59 + 48)], &qword_100961A40);
    sub_10008DB18(v58, &qword_100961A40);
    sub_10008DB18(v56, &qword_100961A40);
    uint64_t v60 = sub_1000AFA94(&qword_100961A70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v10, 0, 1, v60);
    uint64_t v61 = v74;
    sub_1000AEEC8((uint64_t)v10, v74, &qword_100961A48);
  }
  else
  {
    uint64_t v62 = sub_1000AFA94(&qword_100961A70);
    uint64_t v61 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v74, 1, 1, v62);
  }
  uint64_t v63 = v73;
  sub_1000AEF2C((uint64_t)v28, v73, &qword_100961A60);
  sub_1000AEF2C(v61, (uint64_t)v10, &qword_100961A48);
  uint64_t v64 = v75;
  sub_1000AEF2C(v63, v75, &qword_100961A60);
  uint64_t v65 = sub_1000AFA94(&qword_100961A78);
  sub_1000AEF2C((uint64_t)v10, v64 + *(int *)(v65 + 48), &qword_100961A48);
  sub_10008DB18(v61, &qword_100961A48);
  sub_10008DB18((uint64_t)v28, &qword_100961A60);
  sub_10008DB18((uint64_t)v10, &qword_100961A48);
  return sub_10008DB18(v63, &qword_100961A60);
}

uint64_t sub_100544A88@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  unint64_t v86 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v3 - 8);
  uint64_t v81 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v92 = *(void *)(DataType - 8);
  uint64_t v93 = DataType;
  __chkstk_darwin(DataType);
  uint64_t v89 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v90 = *(void *)(ViewModel - 8);
  uint64_t v91 = ViewModel;
  __chkstk_darwin(ViewModel);
  uint64_t v88 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  __chkstk_darwin(DetailsStackedChartView);
  uint64_t v80 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100961A88);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v83 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v79 - v15;
  __chkstk_darwin(v17);
  char v19 = (char *)&v79 - v18;
  uint64_t v94 = a1;
  uint64_t v96 = a1;
  uint64_t v95 = a1;
  sub_1000AFA94(&qword_100961A90);
  sub_1000AFA94(&qword_100961A98);
  uint64_t v20 = sub_1000A1370(&qword_100961AA0);
  uint64_t v21 = sub_1000A132C(&qword_100961AA8, &qword_100961AA0);
  unint64_t v22 = sub_1002B9910();
  uint64_t v98 = v20;
  uint64_t v99 = &type metadata for PickerLabelStyle;
  uint64_t v100 = v21;
  unint64_t v101 = v22;
  swift_getOpaqueTypeConformance2();
  sub_1000A132C(&qword_100961AB0, &qword_100961A98);
  Menu.init(content:label:)();
  uint64_t v84 = v12;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v82 = v19;
  uint64_t v85 = v11;
  v23(v19, v16, v11);
  uint64_t v87 = DetailsStackedChartView;
  uint64_t v24 = (char *)(v94 + *(int *)(DetailsStackedChartView + 56));
  char v25 = *v24;
  uint64_t v26 = (ValueMetadata *)*((void *)v24 + 1);
  LOBYTE(v98) = v25;
  uint64_t v99 = v26;
  sub_1000AFA94(&qword_100961690);
  State.wrappedValue.getter();
  if (v97)
  {
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v28 = v80;
    sub_1005547CC(v94, v80, type metadata accessor for LoadDetailsStackedChartView);
    if ((v27 & 1) == 0)
    {
      sub_100554834(v28, type metadata accessor for LoadDetailsStackedChartView);
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = v80;
    sub_1005547CC(v94, v80, type metadata accessor for LoadDetailsStackedChartView);
  }
  char v29 = sub_10053F5A8();
  sub_100554834(v28, type metadata accessor for LoadDetailsStackedChartView);
  if ((v29 & 1) == 0)
  {
    uint64_t v32 = v94 + *(int *)(v87 + 68);
    id v33 = *(id *)v32;
    char v34 = *(unsigned char *)(v32 + 8);
    sub_1001AEDAC(*(id *)v32, v34);
    id v35 = sub_1004E75C0(v33, v34);
    sub_1001AEDC8(v33, v34);
    swift_retain();

    sub_1000AFA94(&qword_1009614F0);
    uint64_t v36 = v89;
    Binding.wrappedValue.getter();
    uint64_t v37 = v88;
    dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v36, v93);
    uint64_t v30 = TrainingLoadViewModel.localizedDescription(onDay:)();
    unint64_t v31 = v38;
    (*(void (**)(char *, uint64_t))(v90 + 8))(v37, v91);
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
LABEL_8:
  uint64_t v98 = v30;
  uint64_t v99 = (ValueMetadata *)v31;
  sub_1000A06D0();
  uint64_t v39 = Text.init<A>(_:)();
  uint64_t v41 = v40;
  char v43 = v42 & 1;
  static Font.body.getter();
  uint64_t v44 = Text.font(_:)();
  uint64_t v46 = v45;
  char v48 = v47;
  swift_release();
  char v49 = v48 & 1;
  sub_1000A06C0(v39, v41, v43);
  swift_bridgeObjectRelease();
  uint64_t v50 = enum case for Font.Design.rounded(_:);
  uint64_t v51 = type metadata accessor for Font.Design();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 104))(v81, v50, v51);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v53, 0, 1, v51);
  uint64_t v54 = Text.fontDesign(_:)();
  uint64_t v56 = v55;
  LOBYTE(v50) = v57 & 1;
  sub_1000A06C0(v44, v46, v49);
  swift_bridgeObjectRelease();
  sub_10008DB18(v53, &qword_10094C448);
  uint64_t v58 = v94 + *(int *)(v87 + 68);
  id v59 = *(id *)v58;
  char v60 = *(unsigned char *)(v58 + 8);
  sub_1001AEDAC(*(id *)v58, v60);
  id v61 = sub_1004E75C0(v59, v60);
  sub_1001AEDC8(v59, v60);
  swift_retain();

  sub_1000AFA94(&qword_1009614F0);
  uint64_t v62 = v89;
  Binding.wrappedValue.getter();
  uint64_t v63 = v88;
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v62, v93);
  uint64_t v64 = TrainingLoadViewModel.color(onDay:)();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v63, v91);
  uint64_t v98 = v64;
  uint64_t v65 = Text.foregroundStyle<A>(_:)();
  uint64_t v67 = v66;
  uint64_t v94 = v68;
  LOBYTE(v63) = v69 & 1;
  sub_1000A06C0(v54, v56, v50);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v70 = v84;
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  uint64_t v72 = v83;
  uint64_t v73 = v82;
  uint64_t v74 = v85;
  v71(v83, v82, v85);
  uint64_t v75 = v86;
  v71(v86, v72, v74);
  char v76 = &v75[*(int *)(sub_1000AFA94(&qword_100961AB8) + 48)];
  *(void *)char v76 = v65;
  *((void *)v76 + 1) = v67;
  v76[16] = (char)v63;
  *((void *)v76 + 3) = v94;
  sub_1000A1750(v65, v67, (char)v63);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v70 + 8);
  swift_bridgeObjectRetain();
  v77(v73, v74);
  sub_1000A06C0(v65, v67, (char)v63);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v77)(v72, v74);
}

uint64_t sub_100545434()
{
  uint64_t v0 = sub_1000AFA94(&qword_1009614F0);
  __chkstk_darwin(v0);
  LocalizedStringKey.init(stringLiteral:)();
  Binding.projectedValue.getter();
  type metadata accessor for TrainingLoadDataType();
  sub_1000AFA94(&qword_100961AF8);
  sub_100085938(&qword_100961B00, (void (*)(uint64_t))&type metadata accessor for TrainingLoadDataType);
  sub_10055503C(&qword_100961B08, &qword_100961AF8, (void (*)(void))sub_1005550A8);
  return Picker<>.init(_:selection:content:)();
}

uint64_t sub_1005455D4(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 68);
  id v2 = *(id *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  sub_1001AEDAC(*(id *)v1, v3);
  id v4 = sub_1004E75C0(v2, v3);
  sub_1001AEDC8(v2, v3);
  swift_retain();

  dispatch thunk of TrainingLoadViewModelProvider.viewModels.getter();
  swift_release();
  swift_getKeyPath();
  sub_1000AFA94(&qword_100961B60);
  sub_1000AFA94(&qword_100961B18);
  sub_1000A132C(&qword_100961B68, &qword_100961B60);
  sub_100085938(&qword_100961B00, (void (*)(uint64_t))&type metadata accessor for TrainingLoadDataType);
  sub_1005550A8();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100545754()
{
  return TrainingLoadViewModel.dataType.getter();
}

uint64_t sub_100545778@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100961B70);
  __chkstk_darwin(v1 - 8);
  char v43 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_100961B48);
  __chkstk_darwin(v3 - 8);
  uint64_t v42 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100961B78);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100961B38);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v13 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000AFA94(&qword_100961B28) - 8;
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String View = TrainingLoadViewModel.localizedName()();
  sub_1000A06D0();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v45 = v18;
  uint64_t v46 = v17;
  uint64_t v47 = v19;
  int v21 = v20 & 1;
  uint64_t v37 = v15;
  TrainingLoadViewModel.dataType.getter();
  uint64_t v39 = v13;
  unint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v7, v15, DataType);
  uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  v23(v7, 0, 1, DataType);
  uint64_t v24 = v42;
  sub_1000AEF2C((uint64_t)v7, v42, &qword_100961B78);
  sub_1000AEF2C(v24, (uint64_t)&v11[*(int *)(v9 + 44)], &qword_100961B48);
  uint64_t v26 = v45;
  uint64_t v25 = v46;
  *(void *)uint64_t v11 = v46;
  *((void *)v11 + 1) = v26;
  int v38 = v21;
  v11[16] = v21;
  *((void *)v11 + 3) = v47;
  sub_1000A1750(v25, v26, v21);
  swift_bridgeObjectRetain();
  sub_10008DB18(v24, &qword_100961B48);
  sub_10008DB18((uint64_t)v7, &qword_100961B78);
  uint64_t v27 = (uint64_t)v43;
  uint64_t v28 = v37;
  v22(v43, v37, DataType);
  v23((char *)v27, 0, 1, DataType);
  uint64_t v29 = sub_1000AFA94(&qword_100961B80);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v27, 0, 1, v29);
  uint64_t v30 = (uint64_t)v40;
  sub_1000AEF2C(v27, (uint64_t)&v40[*(int *)(v41 + 44)], &qword_100961B70);
  sub_1000AEF2C((uint64_t)v11, v30, &qword_100961B38);
  sub_10008DB18(v27, &qword_100961B70);
  sub_10008DB18((uint64_t)v11, &qword_100961B38);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, DataType);
  sub_1000A06C0(v46, v45, v38);
  swift_bridgeObjectRelease();
  uint64_t v31 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v44;
  sub_1000AEF2C(v30, v44, &qword_100961B28);
  char v34 = (uint64_t *)(v33 + *(int *)(sub_1000AFA94(&qword_100961B18) + 36));
  *char v34 = KeyPath;
  v34[1] = v31;
  return sub_10008DB18(v30, &qword_100961B28);
}

uint64_t sub_100545C0C(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100961AA0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1;
  sub_1000AFA94(&qword_100961AC0);
  sub_1000AFA94(&qword_100961AC8);
  sub_100554E44();
  sub_100554EE4();
  Label.init(title:icon:)();
  sub_1000A132C(&qword_100961AA8, &qword_100961AA0);
  sub_1002B9910();
  View.labelStyle<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100545DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v5 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[0] = type metadata accessor for TrainingLoadViewModel();
  uint64_t v8 = *(void *)(v29[0] - 8);
  __chkstk_darwin(v29[0]);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 68);
  id v12 = *(id *)v11;
  char v13 = *(unsigned char *)(v11 + 8);
  sub_1001AEDAC(*(id *)v11, v13);
  id v14 = sub_1004E75C0(v12, v13);
  sub_1001AEDC8(v12, v13);
  swift_retain();

  sub_1000AFA94(&qword_1009614F0);
  Binding.wrappedValue.getter();
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, DataType);
  Swift::String View = TrainingLoadViewModel.localizedName()();
  (*(void (**)(char *, void))(v8 + 8))(v10, v29[0]);
  Swift::String v30 = View;
  sub_1000A06D0();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  LOBYTE(v7) = v19 & 1;
  static Font.body.getter();
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  LOBYTE(v14) = v23;
  uint64_t v25 = v24;
  swift_release();
  sub_1000A06C0(v16, v18, (char)v7);
  swift_bridgeObjectRelease();
  uint64_t v26 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  v30._countAndFlagsBits = v26;
  uint64_t result = AnyShapeStyle.init<A>(_:)();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v22;
  *(unsigned char *)(a2 + 16) = v14 & 1;
  *(void *)(a2 + 24) = v25;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = result;
  return result;
}

uint64_t sub_100546070@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100959E78);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100961AE8);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  id v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = Image.init(systemName:)();
  uint64_t v13 = static Font.body.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
  uint64_t v15 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 36), v8, v5);
  *uint64_t v4 = v15;
  sub_1000AEF2C((uint64_t)v4, (uint64_t)v12 + *(int *)(v10 + 44), &qword_100959E78);
  *id v12 = v21;
  v12[1] = KeyPath;
  v12[2] = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10008DB18((uint64_t)v4, &qword_100959E78);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v16 = static Color.white.getter();
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = v22;
  sub_1000AEF2C((uint64_t)v12, v22, &qword_100961AE8);
  char v19 = (uint64_t *)(v18 + *(int *)(sub_1000AFA94(&qword_100961AC8) + 36));
  *char v19 = v17;
  v19[1] = v16;
  return sub_10008DB18((uint64_t)v12, &qword_100961AE8);
}

uint64_t sub_100546338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100961798);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100961788);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100961778);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100961768);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0x4028000000000000;
  v5[16] = 0;
  uint64_t v18 = sub_1000AFA94(&qword_1009617B0);
  sub_1005466B0(a1, (uint64_t)&v5[*(int *)(v18 + 44)]);
  char v19 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v9, &qword_100961798);
  uint64_t v28 = &v9[*(int *)(v7 + 44)];
  *uint64_t v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_10008DB18((uint64_t)v5, &qword_100961798);
  LOBYTE(v7) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v13, &qword_100961788);
  uint64_t v37 = &v13[*(int *)(v11 + 44)];
  *uint64_t v37 = v7;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_10008DB18((uint64_t)v9, &qword_100961788);
  LOBYTE(v11) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v17, &qword_100961778);
  uint64_t v46 = &v17[*(int *)(v15 + 44)];
  char *v46 = v11;
  *((void *)v46 + 1) = v39;
  *((void *)v46 + 2) = v41;
  *((void *)v46 + 3) = v43;
  *((void *)v46 + 4) = v45;
  v46[40] = 0;
  sub_10008DB18((uint64_t)v13, &qword_100961778);
  uint64_t v47 = static Alignment.center.getter();
  uint64_t v49 = v48;
  uint64_t v50 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 48);
  char v51 = *(unsigned char *)v50;
  uint64_t v52 = *(void *)(v50 + 8);
  char v58 = v51;
  uint64_t v59 = v52;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  uint64_t v53 = 0;
  if (v60 == 1)
  {
    static Color.black.getter();
    uint64_t v53 = Color.opacity(_:)();
    swift_release();
  }
  uint64_t v54 = v57;
  sub_1000AEF2C((uint64_t)v17, v57, &qword_100961768);
  uint64_t v55 = (uint64_t *)(v54 + *(int *)(sub_1000AFA94(&qword_100961750) + 36));
  *uint64_t v55 = v53;
  v55[1] = v47;
  v55[2] = v49;
  return sub_10008DB18((uint64_t)v17, &qword_100961768);
}

uint64_t sub_1005466B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v248 = a2;
  uint64_t v247 = sub_1000AFA94(&qword_1009617B8);
  __chkstk_darwin(v247);
  uint64_t v210 = (uint64_t)&v203 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Divider();
  uint64_t v237 = *(void *)(v4 - 8);
  uint64_t v238 = v4;
  __chkstk_darwin(v4);
  v206 = (char *)&v203 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v208 = (char *)&v203 - v7;
  uint64_t v8 = sub_1000AFA94(&qword_1009617C0);
  uint64_t v211 = *(void *)(v8 - 8);
  uint64_t v212 = v8;
  __chkstk_darwin(v8);
  uint64_t v207 = (char *)&v203 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::String v209 = (char *)&v203 - v11;
  uint64_t v244 = sub_1000AFA94(&qword_1009617C8);
  __chkstk_darwin(v244);
  uint64_t v246 = (uint64_t)&v203 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_1000AFA94(&qword_1009617D0);
  __chkstk_darwin(v245);
  v236 = (_OWORD *)((char *)&v203 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v234 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v234);
  uint64_t v235 = (char *)&v203 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v231 = type metadata accessor for PlainButtonStyle();
  uint64_t v229 = *(void *)(v231 - 8);
  __chkstk_darwin(v231);
  id v225 = (char *)&v203 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = sub_1000AFA94(&qword_1009617D8);
  uint64_t v222 = *(void *)(v224 - 8);
  __chkstk_darwin(v224);
  long long v220 = (char *)&v203 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_10095FFB0);
  uint64_t v227 = *(void *)(v17 - 8);
  uint64_t v228 = v17;
  __chkstk_darwin(v17);
  uint64_t v221 = (char *)&v203 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_10095FFB8);
  __chkstk_darwin(v19 - 8);
  uint64_t v223 = (uint64_t)&v203 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = sub_1000AFA94(&qword_1009617E0);
  __chkstk_darwin(v219);
  uint64_t v232 = (uint64_t)&v203 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = sub_1000AFA94(&qword_1009617E8);
  __chkstk_darwin(v226);
  uint64_t v233 = (uint64_t)&v203 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = sub_1000AFA94(&qword_1009617F0);
  __chkstk_darwin(v230);
  uint64_t v250 = (uint64_t)&v203 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v249 = (uint64_t)&v203 - v25;
  uint64_t v26 = type metadata accessor for Font.Leading();
  uint64_t v217 = *(void *)(v26 - 8);
  uint64_t v218 = v26;
  __chkstk_darwin(v26);
  long long v216 = (char *)&v203 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Image.ResizingMode();
  uint64_t v214 = *(void *)(v28 - 8);
  uint64_t v215 = v28;
  __chkstk_darwin(v28);
  unint64_t v213 = (char *)&v203 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = type metadata accessor for EnvironmentValues();
  uint64_t v267 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  id v259 = (char *)&v203 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000AFA94(&qword_100950748);
  __chkstk_darwin(v31 - 8);
  uint64_t KeyPath = (char *)&v203 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v254 = type metadata accessor for SleepingSampleViewModel();
  v261 = *(char **)(v254 - 8);
  __chkstk_darwin(v254);
  Swift::String v269 = (char *)&v203 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  Swift::String v268 = (char *)&v203 - v35;
  uint64_t v271 = type metadata accessor for SleepingSampleDataType();
  uint64_t v36 = *(void *)(v271 - 8);
  __chkstk_darwin(v271);
  Swift::String v270 = (uint8_t *)&v203 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v241 = *(void *)(DetailsStackedChartView - 8);
  __chkstk_darwin(DetailsStackedChartView);
  v243 = (char *)&v203 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v240 = (uint64_t)&v203 - v41;
  uint64_t v242 = v42;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v203 - v44;
  uint64_t v46 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v47 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v49 = (char *)&v203 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = DetailsStackedChartView;
  uint64_t v50 = a1 + *(int *)(DetailsStackedChartView + 68);
  id v51 = *(id *)v50;
  char v52 = *(unsigned char *)(v50 + 8);
  sub_1001AEDAC(*(id *)v50, v52);
  id v53 = sub_1004E75C0(v51, v52);
  sub_1001AEDC8(v51, v52);
  sub_10021BB94();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  char v54 = OvernightMetricsViewModel.watchExperienceRequiresSetup.getter();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v46);
  if (v54 == 2)
  {
    sub_1005547CC(a1, (uint64_t)v45, type metadata accessor for LoadDetailsStackedChartView);
    uint64_t v55 = a1;
    uint64_t v56 = (uint64_t)v45;
  }
  else
  {
    sub_1005547CC(a1, (uint64_t)v45, type metadata accessor for LoadDetailsStackedChartView);
    uint64_t v55 = a1;
    uint64_t v56 = (uint64_t)v45;
    if (v54)
    {
      sub_100554834((uint64_t)v45, type metadata accessor for LoadDetailsStackedChartView);
      uint64_t v84 = v240;
      sub_1005547CC(a1, v240, type metadata accessor for LoadDetailsStackedChartView);
      uint64_t v85 = (uint64_t)v243;
      uint64_t v86 = v241;
LABEL_26:
      sub_100554834(v84, type metadata accessor for LoadDetailsStackedChartView);
      goto LABEL_27;
    }
  }
  uint64_t v57 = v239;
  char v58 = (uint64_t *)(v56 + *(int *)(v239 + 52));
  uint64_t v60 = *v58;
  uint64_t v59 = (void *)v58[1];
  char v292 = (char *)v60;
  v293 = v59;
  sub_1000AFA94(&qword_1009616A8);
  State.wrappedValue.getter();
  uint64_t v62 = *(void *)(v283 + 16);
  if (v62)
  {
    uint64_t v204 = v56;
    uint64_t v205 = v55;
    v266 = (void *)(v56 + *(int *)(v57 + 68));
    uint64_t v64 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v36 + 16);
    uint64_t v63 = v36 + 16;
    unint64_t v65 = (*(unsigned __int8 *)(v63 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 64);
    uint64_t v203 = v283;
    uint64_t v66 = v283 + v65;
    uint64_t v264 = *(void *)(v63 + 56);
    v265 = v64;
    v262 = v261 + 32;
    v263 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v261 + 48);
    id v257 = (void (**)(char *, char *, uint64_t))(v261 + 16);
    v258 = (void (**)(char *, uint64_t))(v267 + 8);
    BOOL v256 = v261 + 8;
    uint64_t v267 = v63;
    uint64_t v67 = (void (**)(uint8_t *, uint64_t))(v63 - 8);
    uint64_t v68 = (char *)_swiftEmptyArrayStorage;
    *(void *)&long long v61 = 136315138;
    long long v253 = v61;
    unint64_t v252 = 0x80000001007BA960;
    uint64_t v251 = (char *)&type metadata for Any + 8;
    uint64_t v70 = v254;
    uint64_t v69 = (uint64_t)KeyPath;
    uint64_t v71 = v270;
    v64(v270, v283 + v65, v271);
    while (1)
    {
      uint64_t v72 = (char *)*v266;
      if (*((unsigned char *)v266 + 8) == 1)
      {
        char v292 = (char *)*v266;
        sub_1001AEDAC(v72, 1);
      }
      else
      {
        sub_1001AEDAC(v72, 0);
        swift_retain();
        os_log_type_t v73 = static os_log_type_t.fault.getter();
        uint64_t v74 = static Log.runtimeIssuesLog.getter();
        if (os_log_type_enabled(v74, v73))
        {
          uint64_t v75 = swift_slowAlloc();
          char v292 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v75 = v253;
          *(void *)(v75 + 4) = sub_10008F1F4(0xD000000000000013, v252, (uint64_t *)&v292);
          _os_log_impl((void *)&_mh_execute_header, v74, v73, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v75, 0xCu);
          swift_arrayDestroy();
          uint64_t v70 = v254;
          swift_slowDealloc();
          uint64_t v69 = (uint64_t)KeyPath;
          swift_slowDealloc();
        }

        char v76 = v259;
        EnvironmentValues.init()();
        swift_getAtKeyPath();
        sub_1001AEDC8(v72, 0);
        (*v258)(v76, v260);
        sub_1001AEDC8(v72, 0);
        uint64_t v71 = v270;
      }
      uint64_t v77 = v292;
      sub_10021FA84(v71, v69);

      if ((*v263)(v69, 1, v70) == 1)
      {
        (*v67)(v71, v271);
        sub_10008DB18(v69, &qword_100950748);
      }
      else
      {
        char v78 = *(void (**)(char *, char *, uint64_t))v262;
        uint64_t v79 = v268;
        (*(void (**)(char *, uint64_t, uint64_t))v262)(v268, v69, v70);
        (*v257)(v269, v79, v70);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v68 = (char *)sub_1001E86B4(0, *((void *)v68 + 2) + 1, 1, (unint64_t)v68);
        }
        unint64_t v81 = *((void *)v68 + 2);
        unint64_t v80 = *((void *)v68 + 3);
        if (v81 >= v80 >> 1) {
          uint64_t v68 = (char *)sub_1001E86B4(v80 > 1, v81 + 1, 1, (unint64_t)v68);
        }
        *((void *)v68 + 2) = v81 + 1;
        uint64_t v82 = v261;
        v78(&v68[((v82[80] + 32) & ~(unint64_t)v82[80])+ *((void *)v261 + 9) * v81], v269, v70);
        (*((void (**)(char *, uint64_t))v82 + 1))(v268, v70);
        uint64_t v71 = v270;
        (*v67)(v270, v271);
      }
      v66 += v264;
      if (!--v62) {
        break;
      }
      v265(v71, v66, v271);
    }
    swift_bridgeObjectRelease();
    uint64_t v56 = v204;
    uint64_t v55 = v205;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v68 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v83 = *((void *)v68 + 2);
  swift_bridgeObjectRelease();
  sub_100554834(v56, type metadata accessor for LoadDetailsStackedChartView);
  uint64_t v84 = v240;
  sub_1005547CC(v55, v240, type metadata accessor for LoadDetailsStackedChartView);
  uint64_t v85 = (uint64_t)v243;
  uint64_t v86 = v241;
  if (!v83) {
    goto LABEL_26;
  }
  char v87 = sub_10053EDD8();
  sub_100554834(v84, type metadata accessor for LoadDetailsStackedChartView);
  if ((v87 & 1) == 0)
  {
    char v292 = (char *)sub_10053E768();
    swift_getKeyPath();
    sub_1005547CC(v55, v85, type metadata accessor for LoadDetailsStackedChartView);
    unint64_t v88 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
    uint64_t v89 = swift_allocObject();
    sub_100556A40(v85, v89 + v88, type metadata accessor for LoadDetailsStackedChartView);
    sub_1000AFA94(&qword_1009617F8);
    sub_1000AFA94(&qword_100961800);
    uint64_t v90 = v55;
    sub_1000A132C(&qword_100961808, &qword_1009617F8);
    sub_100085938(&qword_100961810, (void (*)(uint64_t))&type metadata accessor for SleepingSampleDataType);
    v262 = (char *)&protocol conformance descriptor for TupleView<A>;
    sub_1000A132C(&qword_100961818, &qword_100961800);
    uint64_t v91 = v209;
    ForEach<>.init(_:id:content:)();
    uint64_t v92 = v239;
    uint64_t v93 = v55 + *(int *)(v239 + 40);
    char v94 = *(unsigned char *)v93;
    uint64_t v95 = *(void *)(v93 + 8);
    LOBYTE(v283) = v94;
    *((void *)&v283 + 1) = v95;
    sub_1000AFA94(&qword_10094DEE0);
    State.projectedValue.getter();
    uint64_t v271 = (uint64_t)v292;
    v266 = v293;
    LODWORD(v260) = v294;
    uint64_t v96 = (uint64_t *)(v55 + *(int *)(v92 + 52));
    uint64_t v98 = *v96;
    uint64_t v97 = v96[1];
    *(void *)&long long v283 = v98;
    *((void *)&v283 + 1) = v97;
    sub_1000AFA94(&qword_1009616A8);
    State.projectedValue.getter();
    Swift::String v269 = (char *)v293;
    v263 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v292;
    uint64_t v264 = (uint64_t)v294;
    type metadata accessor for BalanceDataProvider();
    sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
    Swift::String v270 = (uint8_t *)Environment.init<A>(_:)();
    char v100 = v99 & 1;
    LODWORD(v268) = v99 & 1;
    unint64_t v101 = v208;
    Divider.init()();
    id v259 = *(char **)(v90 + *(int *)(v92 + 20));
    v261 = v259;
    v265 = (void (*)(uint8_t *, uint64_t, uint64_t))Environment.init<A>(_:)();
    char v103 = v102 & 1;
    LODWORD(v267) = v102 & 1;
    uint64_t v104 = *(void (**)(char *, char *, uint64_t))(v211 + 16);
    v104(v207, v91, v212);
    LOBYTE(v292) = v260;
    LOBYTE(v283) = v100;
    v258 = *(void (***)(char *, uint64_t))(v237 + 16);
    id v105 = v206;
    ((void (*)(char *, char *, uint64_t))v258)(v206, v101, v238);
    LOBYTE(v319) = v103;
    uint64_t v106 = v210;
    ((void (*)(uint64_t))v104)(v210);
    id v107 = (int *)sub_1000AFA94(&qword_100961820);
    uint64_t v108 = v106 + v107[12];
    char v109 = (char)v292;
    char v110 = v283;
    LODWORD(v260) = v283;
    char v111 = v266;
    *(void *)uint64_t v108 = v271;
    *(void *)(v108 + 8) = v111;
    *(unsigned char *)(v108 + 16) = v109;
    uint64_t v112 = v264;
    uint64_t v113 = v269;
    *(void *)(v108 + 24) = v263;
    *(void *)(v108 + 32) = v113;
    uint64_t v114 = v270;
    *(void *)(v108 + 40) = v112;
    *(void *)(v108 + 48) = v114;
    *(unsigned char *)(v108 + 56) = v110;
    ((void (*)(uint64_t, char *, uint64_t))v258)(v106 + v107[16], v105, v238);
    uint64_t v115 = v106 + v107[20];
    LOBYTE(v107) = (_BYTE)v319;
    uint64_t v116 = v265;
    *(void *)uint64_t v115 = v259;
    *(void *)(v115 + 8) = v116;
    *(unsigned char *)(v115 + 16) = (_BYTE)v107;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v117 = v261;
    swift_retain();
    swift_retain();
    uint64_t v118 = v270;
    sub_1001AEDAC(v270, v260);
    uint64_t v119 = v117;
    v261 = v119;
    sub_1001AEDAC(v116, (char)v107);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v120 = v118;
    sub_1001AEDAC(v118, (char)v268);
    sub_1001AEDAC(v116, v267);

    sub_1001AEDC8(v116, (char)v107);
    uint64_t v121 = *(void (**)(char *, uint64_t))(v237 + 8);
    v237 += 8;
    v121(v206, v238);
    LOBYTE(v111) = v283;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1001AEDC8(v120, (char)v111);
    uint64_t v122 = v212;
    uint64_t v123 = *(void (**)(char *, uint64_t))(v211 + 8);
    v123(v207, v212);
    uint64_t v124 = v210;
    sub_1000AEF2C(v210, v246, &qword_1009617B8);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100961828, &qword_1009617D0);
    sub_1000A132C(&qword_100961830, &qword_1009617B8);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v124, &qword_1009617B8);

    sub_1001AEDC8(v265, v267);
    v121(v208, v238);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1001AEDC8(v270, (char)v268);
    return ((uint64_t (*)(char *, uint64_t))v123)(v209, v122);
  }
LABEL_27:
  Image.init(_:bundle:)();
  uint64_t v127 = v213;
  uint64_t v126 = v214;
  uint64_t v128 = v215;
  (*(void (**)(char *, void, uint64_t))(v214 + 104))(v213, enum case for Image.ResizingMode.stretch(_:), v215);
  uint64_t v271 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v128);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  unsigned __int8 v129 = v320;
  v265 = v319;
  v266 = v321;
  LOBYTE(v128) = v322;
  Swift::String v268 = v323;
  uint64_t v267 = v324;
  LODWORD(v269) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v131 = v130;
  uint64_t v133 = v132;
  uint64_t v135 = v134;
  uint64_t v137 = v136;
  int v138 = static Edge.Set.bottom.getter();
  char v139 = v138;
  LODWORD(v242) = v138;
  EdgeInsets.init(_all:)();
  uint64_t v141 = v140;
  id v257 = v143;
  v258 = v142;
  BOOL v256 = v144;
  unsigned __int8 v282 = v129;
  unsigned __int8 v280 = v128;
  unsigned __int8 v275 = 0;
  unsigned __int8 v272 = 0;
  sub_100548BE0((uint64_t)&v292);
  v261 = (char *)v293;
  Swift::String v270 = v294;
  v263 = v295;
  uint64_t v264 = (uint64_t)v292;
  LODWORD(v262) = v296;
  static Font.body.getter();
  uint64_t v146 = v216;
  uint64_t v145 = v217;
  uint64_t v147 = v218;
  (*(void (**)(char *, void, uint64_t))(v217 + 104))(v216, enum case for Font.Leading.tight(_:), v218);
  uint64_t v260 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v146, v147);
  uint64_t KeyPath = (char *)swift_getKeyPath();
  id v148 = [self secondaryLabelColor];
  id v259 = (char *)Color.init(_:)();
  LODWORD(v254) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  unint64_t v252 = v150;
  *(void *)&long long v253 = v149;
  uint64_t v251 = v151;
  v243 = v152;
  sub_1005547CC(v55, v85, type metadata accessor for LoadDetailsStackedChartView);
  unint64_t v153 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  uint64_t v154 = swift_allocObject();
  uint64_t v155 = sub_100556A40(v85, v154 + v153, type metadata accessor for LoadDetailsStackedChartView);
  __chkstk_darwin(v155);
  sub_1000AFA94(&qword_100961838);
  uint64_t v156 = sub_1000A1370(&qword_100961840);
  unint64_t v157 = sub_1005546F4();
  char v292 = (char *)v156;
  v293 = (void *)v157;
  swift_getOpaqueTypeConformance2();
  uint64_t v158 = v220;
  Button.init(action:label:)();
  uint64_t v159 = v225;
  PlainButtonStyle.init()();
  sub_1000A132C(&qword_100961850, &qword_1009617D8);
  sub_100085938(&qword_100961858, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v160 = v221;
  uint64_t v161 = v224;
  uint64_t v162 = v231;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v229 + 8))(v159, v162);
  (*(void (**)(char *, uint64_t))(v222 + 8))(v158, v161);
  uint64_t v163 = static Alignment.center.getter();
  uint64_t v164 = v223;
  double v166 = sub_1004DDED0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v223, 0.0, 1, 0.0, 1, v163, v165);
  (*(void (**)(char *, uint64_t, double))(v227 + 8))(v160, v228, v166);
  char v167 = static Edge.Set.all.getter();
  uint64_t v168 = v232;
  sub_1000AEF2C(v164, v232, &qword_10095FFB8);
  uint64_t v169 = v168 + *(int *)(v219 + 36);
  *(unsigned char *)uint64_t v169 = v167;
  *(_OWORD *)(v169 + 8) = 0u;
  *(_OWORD *)(v169 + 24) = 0u;
  *(unsigned char *)(v169 + 40) = 1;
  sub_10008DB18(v164, &qword_10095FFB8);
  id v170 = sub_10005DB50();
  uint64_t v171 = Color.init(uiColor:)();
  LOBYTE(v159) = static Edge.Set.all.getter();
  uint64_t v172 = v233;
  sub_1000AEF2C(v168, v233, &qword_1009617E0);
  uint64_t v173 = v172 + *(int *)(v226 + 36);
  *(void *)uint64_t v173 = v171;
  *(unsigned char *)(v173 + 8) = (_BYTE)v159;
  sub_10008DB18(v168, &qword_1009617E0);
  uint64_t v174 = v235;
  uint64_t v175 = &v235[*(int *)(v234 + 20)];
  uint64_t v176 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v177 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v177 - 8) + 104))(v175, v176, v177);
  __asm { FMOV            V0.2D, #10.0 }
  _OWORD *v174 = _Q0;
  uint64_t v183 = v250;
  uint64_t v184 = v250 + *(int *)(v230 + 36);
  sub_1005547CC((uint64_t)v174, v184, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v184 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C(v172, v183, &qword_1009617E8);
  sub_100554834((uint64_t)v174, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10008DB18(v172, &qword_1009617E8);
  uint64_t v185 = v249;
  sub_1000AEEC8(v183, v249, &qword_1009617F0);
  LOBYTE(v172) = v282;
  LODWORD(v238) = v282;
  LOBYTE(v174) = v280;
  LODWORD(v239) = v280;
  LOBYTE(v176) = v275;
  LODWORD(v240) = v275;
  LOBYTE(v145) = v272;
  LODWORD(v241) = v272;
  sub_1000AEF2C(v185, v183, &qword_1009617F0);
  *(void *)&long long v283 = v271;
  *((void *)&v283 + 1) = v265;
  LOBYTE(v284) = v172;
  *(_DWORD *)((char *)&v284 + 1) = *(_DWORD *)v281;
  DWORD1(v284) = *(_DWORD *)&v281[3];
  *((void *)&v284 + 1) = v266;
  LOBYTE(v285) = (_BYTE)v174;
  *(_DWORD *)((char *)&v285 + 1) = *(_DWORD *)v279;
  DWORD1(v285) = *(_DWORD *)&v279[3];
  *((void *)&v285 + 1) = v268;
  *(void *)&long long v286 = v267;
  WORD4(v286) = 256;
  HIWORD(v286) = v278;
  *(_DWORD *)((char *)&v286 + 10) = v277;
  LOBYTE(v287) = (_BYTE)v269;
  DWORD1(v287) = *(_DWORD *)&v276[3];
  *(_DWORD *)((char *)&v287 + 1) = *(_DWORD *)v276;
  *((void *)&v287 + 1) = v131;
  *(void *)&long long v288 = v133;
  *((void *)&v288 + 1) = v135;
  *(void *)&long long v289 = v137;
  BYTE8(v289) = v176;
  *(_DWORD *)((char *)&v289 + 9) = *(_DWORD *)v274;
  HIDWORD(v289) = *(_DWORD *)&v274[3];
  LOBYTE(v290) = v139;
  DWORD1(v290) = *(_DWORD *)&v273[3];
  *(_DWORD *)((char *)&v290 + 1) = *(_DWORD *)v273;
  *((void *)&v290 + 1) = v141;
  long long v187 = v257;
  long long v186 = v258;
  *(void *)&v291[0] = v258;
  *((void *)&v291[0] + 1) = v257;
  uint64_t v188 = v256;
  *(void *)&v291[1] = v256;
  BYTE8(v291[1]) = v145;
  long long v189 = v284;
  uint64_t v190 = (uint64_t)v236;
  _OWORD *v236 = v283;
  *(_OWORD *)(v190 + 16) = v189;
  long long v191 = v285;
  long long v192 = v286;
  long long v193 = v288;
  long long v194 = v289;
  *(_OWORD *)(v190 + 64) = v287;
  *(_OWORD *)(v190 + 80) = v193;
  *(_OWORD *)(v190 + 32) = v191;
  *(_OWORD *)(v190 + 48) = v192;
  long long v195 = v290;
  long long v196 = v291[0];
  *(_OWORD *)(v190 + 137) = *(_OWORD *)((char *)v291 + 9);
  *(_OWORD *)(v190 + 112) = v195;
  *(_OWORD *)(v190 + 128) = v196;
  *(_OWORD *)(v190 + 96) = v194;
  Swift::String v198 = v263;
  uint64_t v197 = v264;
  *(void *)(v190 + 160) = v264;
  uint64_t v199 = v260;
  uint64_t v200 = (uint64_t)v261;
  unint64_t v201 = v270;
  *(void *)(v190 + 168) = v261;
  *(void *)(v190 + 176) = v201;
  *(void *)(v190 + 184) = v198;
  *(unsigned char *)(v190 + 192) = (_BYTE)v262;
  *(void *)(v190 + 200) = KeyPath;
  *(void *)(v190 + 208) = v199;
  *(void *)(v190 + 216) = v259;
  *(unsigned char *)(v190 + 224) = v254;
  *(void *)&long long v195 = v252;
  *(void *)(v190 + 232) = v253;
  *(void *)(v190 + 240) = v195;
  *(void *)&long long v195 = v243;
  *(void *)(v190 + 248) = v251;
  *(void *)(v190 + 256) = v195;
  *(unsigned char *)(v190 + 264) = 0;
  uint64_t v202 = sub_1000AFA94(&qword_100961860);
  sub_1000AEF2C(v250, v190 + *(int *)(v202 + 64), &qword_1009617F0);
  sub_1001A91A8((uint64_t)&v283);
  sub_1001BB600(v197, v200, (char)v201);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  LOBYTE(v176) = (_BYTE)v270;
  sub_1001BB600(v197, v200, (char)v270);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10008DB18(v250, &qword_1009617F0);
  sub_1001BB654(v197, v200, v176);
  swift_release();
  swift_release();
  swift_release();
  char v292 = (char *)v271;
  v293 = v265;
  LOBYTE(v294) = v238;
  *(_DWORD *)((char *)&v294 + 1) = *(_DWORD *)v281;
  HIDWORD(v294) = *(_DWORD *)&v281[3];
  uint64_t v295 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v266;
  unsigned __int8 v296 = v239;
  *(_DWORD *)uint64_t v297 = *(_DWORD *)v279;
  *(_DWORD *)&v297[3] = *(_DWORD *)&v279[3];
  uint64_t v298 = v268;
  uint64_t v299 = v267;
  char v300 = 0;
  char v301 = 1;
  __int16 v303 = v278;
  int v302 = v277;
  char v304 = (char)v269;
  *(_DWORD *)&v305[3] = *(_DWORD *)&v276[3];
  *(_DWORD *)uint64_t v305 = *(_DWORD *)v276;
  uint64_t v306 = v131;
  uint64_t v307 = v133;
  uint64_t v308 = v135;
  uint64_t v309 = v137;
  char v310 = v240;
  *(_DWORD *)char v311 = *(_DWORD *)v274;
  *(_DWORD *)&v311[3] = *(_DWORD *)&v274[3];
  char v312 = v242;
  *(_DWORD *)&v313[3] = *(_DWORD *)&v273[3];
  *(_DWORD *)uint64_t v313 = *(_DWORD *)v273;
  uint64_t v314 = v141;
  uint64_t v315 = v186;
  BOOL v316 = v187;
  uint64_t v317 = v188;
  char v318 = v241;
  sub_100554894((uint64_t)&v292);
  sub_1000AEF2C(v190, v246, &qword_1009617D0);
  swift_storeEnumTagMultiPayload();
  sub_1000A132C(&qword_100961828, &qword_1009617D0);
  sub_1000A132C(&qword_100961830, &qword_1009617B8);
  _ConditionalContent<>.init(storage:)();
  sub_10008DB18(v190, &qword_1009617D0);
  sub_10008DB18(v249, &qword_1009617F0);
  sub_1001BB654(v264, (uint64_t)v261, (char)v270);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10054876C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EffortUtilities.OvernightVitalsState();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = sub_10053EDD8();
  uint64_t result = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v12 = *(void *)(a1 + *(int *)(result + 20));
  if (v10)
  {
    if (!v12) {
      return result;
    }
    uint64_t v13 = a1 + *(int *)(result + 68);
    id v14 = *(id *)v13;
    char v15 = *(unsigned char *)(v13 + 8);
    sub_1001AEDAC(*(id *)v13, v15);
    id v16 = sub_1004E75C0(v14, v15);
    sub_1001AEDC8(v14, v15);
    sub_10021BB94();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    OvernightMetricsViewModel.overnightVitalsState.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1004AF4A4((uint64_t)v9);
  }
  else
  {
    if (!v12) {
      return result;
    }
    uint64_t v17 = a1 + *(int *)(result + 68);
    id v18 = *(id *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    sub_1001AEDAC(*(id *)v17, v19);
    id v20 = sub_1004E75C0(v18, v19);
    sub_1001AEDC8(v18, v19);
    sub_10021BB94();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    OvernightMetricsViewModel.overnightVitalsState.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1004AF4D4((uint64_t)v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1005489E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v13 = a1;
  uint64_t v1 = type metadata accessor for Font.Leading();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100548BE0((uint64_t)&v14);
  uint64_t v5 = v14;
  uint64_t v6 = v15;
  uint64_t v7 = v16;
  uint64_t v8 = v17;
  char v9 = v18;
  static Font.body.getter();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Font.Leading.tight(_:), v1);
  uint64_t v10 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = v7;
  uint64_t v17 = v8;
  char v18 = v9;
  uint64_t v19 = KeyPath;
  uint64_t v20 = v10;
  static Font.Weight.semibold.getter();
  sub_1000AFA94(&qword_100961840);
  sub_1005546F4();
  View.fontWeight(_:)();
  sub_1001BB654(v5, v6, v7);
  swift_release();
  return swift_release();
}

double sub_100548BE0@<D0>(uint64_t a1@<X8>)
{
  sub_10053EDD8();
  LocalizedStringKey.init(stringLiteral:)();
  Text.init(_:tableName:bundle:comment:)();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_100548CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_100548DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Divider();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = sub_1000AFA94(&qword_100961868);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v18 = (char *)&v24 - v17;
  *(void *)char v18 = static HorizontalAlignment.leading.getter();
  *((void *)v18 + 1) = 0x4028000000000000;
  v18[16] = 0;
  uint64_t v19 = sub_1000AFA94(&qword_100961870);
  sub_100548FF4(a1, a2, (uint64_t)&v18[*(int *)(v19 + 44)]);
  Divider.init()();
  sub_1000AEF2C((uint64_t)v18, (uint64_t)v15, &qword_100961868);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v20(v9, v12, v6);
  sub_1000AEF2C((uint64_t)v15, a3, &qword_100961868);
  uint64_t v21 = sub_1000AFA94(&qword_100961878);
  v20((char *)(a3 + *(int *)(v21 + 48)), v9, v6);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22(v12, v6);
  sub_10008DB18((uint64_t)v18, &qword_100961868);
  v22(v9, v6);
  return sub_10008DB18((uint64_t)v15, &qword_100961868);
}

uint64_t sub_100548FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000AFA94(&qword_100961880);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (_OWORD *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1000AFA94(&qword_100961888);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = sub_1000AFA94(&qword_100961890);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v35 - v19;
  *(void *)uint64_t v20 = static VerticalAlignment.center.getter();
  *((void *)v20 + 1) = 0x4010000000000000;
  v20[16] = 0;
  uint64_t v21 = sub_1000AFA94(&qword_100961898);
  sub_1005492FC(a1, a2, (uint64_t)&v20[*(int *)(v21 + 44)]);
  if (qword_10094A6C0 != -1) {
    swift_once();
  }
  _OWORD *v8 = xmmword_100997838;
  uint64_t v22 = sub_1000AFA94(&qword_1009618A0);
  sub_10054AB24(a1, a2, (uint64_t)v8 + *(int *)(v22 + 44));
  char v23 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_1000AEF2C((uint64_t)v8, (uint64_t)v11, &qword_100961880);
  uint64_t v32 = &v11[*(int *)(v9 + 36)];
  *uint64_t v32 = v23;
  *((void *)v32 + 1) = v25;
  *((void *)v32 + 2) = v27;
  *((void *)v32 + 3) = v29;
  *((void *)v32 + 4) = v31;
  v32[40] = 0;
  sub_10008DB18((uint64_t)v8, &qword_100961880);
  sub_1000AEEC8((uint64_t)v11, (uint64_t)v14, &qword_100961888);
  sub_1000AEF2C((uint64_t)v20, (uint64_t)v17, &qword_100961890);
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v11, &qword_100961888);
  sub_1000AEF2C((uint64_t)v17, a3, &qword_100961890);
  uint64_t v33 = sub_1000AFA94(&qword_1009618A8);
  sub_1000AEF2C((uint64_t)v11, a3 + *(int *)(v33 + 48), &qword_100961888);
  sub_10008DB18((uint64_t)v14, &qword_100961888);
  sub_10008DB18((uint64_t)v20, &qword_100961890);
  sub_10008DB18((uint64_t)v11, &qword_100961888);
  return sub_10008DB18((uint64_t)v17, &qword_100961890);
}

uint64_t sub_1005492FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v142 = a2;
  uint64_t v143 = a1;
  uint64_t v141 = a3;
  uint64_t v3 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v3 - 8);
  uint64_t v125 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1000AFA94(&qword_100961990);
  uint64_t v122 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v121 = (char *)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100961998);
  uint64_t v128 = *(void *)(v6 - 8);
  uint64_t v129 = v6;
  __chkstk_darwin(v6);
  uint64_t v123 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000AFA94(&qword_1009619A0);
  __chkstk_darwin(v120);
  uint64_t v130 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_1009619A8);
  uint64_t v138 = *(void *)(v9 - 8);
  uint64_t v139 = v9;
  __chkstk_darwin(v9);
  uint64_t v127 = (uint64_t)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v126 = (uint64_t)&v116 - v12;
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  __chkstk_darwin(DetailsStackedChartView);
  uint64_t v133 = (uint64_t)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_1009619B0);
  __chkstk_darwin(v14 - 8);
  uint64_t v140 = (uint64_t)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v146 = (uint64_t)&v116 - v17;
  uint64_t v18 = sub_1000AFA94(&qword_100959E78) - 8;
  __chkstk_darwin(v18);
  uint64_t v137 = (uint64_t *)((char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v136 = type metadata accessor for Image.Scale();
  uint64_t v20 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v22 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SleepingSampleDataType();
  uint64_t v134 = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v116 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000AFA94(&qword_100959E80);
  uint64_t v56 = v27 - 8;
  __chkstk_darwin(v27);
  uint64_t v29 = (uint64_t *)((char *)&v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v30);
  uint64_t v145 = (char *)&v116 - v31;
  SleepingSampleViewModel.dataType.getter();
  uint64_t v32 = SleepingSampleDataType.preferredImage.getter();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v132 = v24 + 8;
  uint64_t v135 = v33;
  v33(v26, v23);
  *(void *)&long long v131 = v20;
  uint64_t v34 = v22;
  uint64_t v35 = v22;
  uint64_t v36 = v136;
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v35, enum case for Image.Scale.small(_:), v136);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = *(int *)(v18 + 36);
  uint64_t v39 = v137;
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))((uint64_t)v137 + v38, v34, v36);
  uint64_t v40 = (uint64_t)v39;
  *uint64_t v39 = KeyPath;
  uint64_t v41 = (uint64_t)v145;
  uint64_t v42 = v40;
  sub_1000AEF2C(v40, (uint64_t)v29 + *(int *)(v56 + 44), &qword_100959E78);
  *uint64_t v29 = v32;
  swift_retain();
  sub_10008DB18(v42, &qword_100959E78);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v34, v36);
  swift_release();
  uint64_t v137 = v29;
  uint64_t v43 = (uint64_t)v29;
  uint64_t v44 = v41;
  sub_1000AEEC8(v43, v41, &qword_100959E80);
  SleepingSampleViewModel.dataType.getter();
  uint64_t v45 = SleepingSampleDataType.localizedName.getter();
  uint64_t v47 = v46;
  v135(v26, v134);
  *(void *)&v160[0] = v45;
  *((void *)&v160[0] + 1) = v47;
  uint64_t v48 = v142;
  sub_1000A06D0();
  uint64_t v49 = Text.init<A>(_:)();
  uint64_t v51 = v50;
  LOBYTE(v26) = v52 & 1;
  static Font.body.getter();
  uint64_t v53 = Text.font(_:)();
  uint64_t v134 = v54;
  uint64_t v135 = (void (*)(char *, uint64_t))v53;
  LODWORD(v56) = v55;
  uint64_t v136 = v57;
  swift_release();
  sub_1000A06C0(v49, v51, (char)v26);
  swift_bridgeObjectRelease();
  uint64_t v58 = v48 + *(int *)(DetailsStackedChartView + 56);
  char v59 = *(unsigned char *)v58;
  uint64_t v60 = *(void *)(v58 + 8);
  LOBYTE(v160[0]) = v59;
  *((void *)&v160[0] + 1) = v60;
  sub_1000AFA94(&qword_100961690);
  State.wrappedValue.getter();
  if ((_BYTE)v148)
  {
    char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v62 = v133;
    sub_1005547CC(v48, v133, type metadata accessor for LoadDetailsStackedChartView);
    uint64_t v63 = v146;
    if ((v61 & 1) == 0)
    {
      sub_100554834(v62, type metadata accessor for LoadDetailsStackedChartView);
LABEL_6:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v138 + 56))(v63, 1, 1, v139);
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = v133;
    sub_1005547CC(v48, v133, type metadata accessor for LoadDetailsStackedChartView);
    uint64_t v63 = v146;
  }
  char v64 = sub_10053F5A8();
  sub_100554834(v62, type metadata accessor for LoadDetailsStackedChartView);
  if (v64) {
    goto LABEL_6;
  }
  uint64_t v132 = static VerticalAlignment.firstTextBaseline.getter();
  sub_100549FE4(v143, (uint64_t *)v160);
  uint64_t v65 = *(void *)&v160[0];
  long long v131 = *(_OWORD *)((char *)v160 + 8);
  LODWORD(v133) = v56;
  uint64_t v66 = *((void *)&v160[1] + 1);
  uint64_t v67 = *(void *)&v161[0];
  uint64_t v68 = *((void *)&v161[1] + 1);
  char v69 = v162[0];
  long long v118 = *(_OWORD *)((char *)v162 + 8);
  long long v119 = *(_OWORD *)((char *)v161 + 8);
  uint64_t v70 = *((void *)&v162[1] + 1);
  uint64_t v117 = v163;
  char v159 = 0;
  char v158 = v162[0];
  uint64_t v71 = SleepingSampleViewModel.primaryTintColor.getter();
  uint64_t v72 = static Font.body.getter();
  uint64_t v73 = swift_getKeyPath();
  *(void *)&v160[0] = v132;
  *((void *)&v160[0] + 1) = 0x4000000000000000;
  LOBYTE(v160[1]) = 0;
  *((void *)&v160[1] + 1) = v65;
  v161[0] = v131;
  *(void *)&v161[1] = v66;
  *((void *)&v161[1] + 1) = v67;
  v162[0] = v119;
  *(void *)&v162[1] = v68;
  BYTE8(v162[1]) = v69;
  long long v163 = v118;
  *(void *)&long long v164 = v70;
  *((void *)&v164 + 1) = v117;
  *(void *)&long long v165 = v71;
  *((void *)&v165 + 1) = v73;
  uint64_t v166 = v72;
  long long v154 = v118;
  long long v155 = v164;
  long long v156 = v165;
  uint64_t v157 = v72;
  long long v150 = v131;
  long long v151 = v161[1];
  long long v152 = v119;
  long long v153 = v162[1];
  long long v148 = v160[0];
  long long v149 = v160[1];
  static Font.Weight.medium.getter();
  uint64_t v74 = sub_1000AFA94(&qword_1009619C0);
  unint64_t v75 = sub_100554B10();
  uint64_t v56 = (uint64_t)v121;
  View.fontWeight(_:)();
  sub_100554C74((uint64_t)v160);
  uint64_t v76 = enum case for Font.Design.rounded(_:);
  uint64_t v77 = type metadata accessor for Font.Design();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 104))(v125, v76, v77);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v79, 0, 1, v77);
  *(void *)&long long v148 = v74;
  *((void *)&v148 + 1) = v75;
  uint64_t v80 = v146;
  swift_getOpaqueTypeConformance2();
  uint64_t v82 = v123;
  uint64_t v81 = v124;
  View.fontDesign(_:)();
  uint64_t v83 = (uint64_t)v79;
  uint64_t v63 = v80;
  sub_10008DB18(v83, &qword_10094C448);
  uint64_t v84 = v56;
  LOBYTE(v56) = v133;
  uint64_t v44 = (uint64_t)v145;
  (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v84, v81);
  LOBYTE(v76) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v94 = v128;
  uint64_t v93 = v129;
  uint64_t v95 = (uint64_t)v130;
  (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v130, v82, v129);
  uint64_t v96 = v95 + *(int *)(v120 + 36);
  *(unsigned char *)uint64_t v96 = v76;
  *(void *)(v96 + 8) = v86;
  *(void *)(v96 + 16) = v88;
  *(void *)(v96 + 24) = v90;
  *(void *)(v96 + 32) = v92;
  *(unsigned char *)(v96 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v94 + 8))(v82, v93);
  uint64_t v97 = v142 + *(int *)(DetailsStackedChartView + 48);
  char v98 = *(unsigned char *)v97;
  uint64_t v99 = *(void *)(v97 + 8);
  LOBYTE(v148) = v98;
  *((void *)&v148 + 1) = v99;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  if (v147) {
    double v100 = 0.6;
  }
  else {
    double v100 = 1.0;
  }
  uint64_t v101 = v127;
  sub_1000AEF2C(v95, v127, &qword_1009619A0);
  uint64_t v102 = v139;
  *(double *)(v101 + *(int *)(v139 + 36)) = v100;
  sub_10008DB18(v95, &qword_1009619A0);
  uint64_t v103 = v126;
  sub_1000AEEC8(v101, v126, &qword_1009619A8);
  sub_1000AEEC8(v103, v63, &qword_1009619A8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v138 + 56))(v63, 0, 1, v102);
LABEL_11:
  char v104 = v56 & 1;
  uint64_t v105 = v44;
  uint64_t v106 = (uint64_t)v137;
  sub_1000AEF2C(v44, (uint64_t)v137, &qword_100959E80);
  uint64_t v107 = v63;
  uint64_t v108 = v140;
  sub_1000AEF2C(v107, v140, &qword_1009619B0);
  uint64_t v109 = v141;
  sub_1000AEF2C(v106, v141, &qword_100959E80);
  char v110 = (int *)sub_1000AFA94(&qword_1009619B8);
  uint64_t v111 = v109 + v110[12];
  uint64_t v112 = v134;
  uint64_t v113 = (uint64_t)v135;
  *(void *)uint64_t v111 = v135;
  *(void *)(v111 + 8) = v112;
  *(unsigned char *)(v111 + 16) = v104;
  *(void *)(v111 + 24) = v136;
  uint64_t v114 = v109 + v110[16];
  *(void *)uint64_t v114 = 0;
  *(unsigned char *)(v114 + 8) = 0;
  sub_1000AEF2C(v108, v109 + v110[20], &qword_1009619B0);
  sub_1000A1750(v113, v112, v104);
  swift_bridgeObjectRetain();
  sub_10008DB18(v146, &qword_1009619B0);
  sub_10008DB18(v105, &qword_100959E80);
  sub_10008DB18(v108, &qword_1009619B0);
  sub_1000A06C0(v113, v112, v104);
  swift_bridgeObjectRelease();
  return sub_10008DB18(v106, &qword_100959E80);
}

uint64_t sub_100549FE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v103 = a2;
  uint64_t v95 = type metadata accessor for Text.Scale();
  uint64_t v97 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v96 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for SleepingSampleDataType();
  uint64_t v107 = *(void (***)(char *, void, uint64_t))(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v105 = (char *)&v93 - v7;
  uint64_t v8 = type metadata accessor for LocalizationFeature();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AttributedString();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v93 - v20;
  uint64_t v106 = a1;
  SleepingSampleViewModel.formattedCurrentAggregateValue.getter();
  uint64_t v102 = v16;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10095BFD0);
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for LocalizationFeature.workout(_:), v8);
    uint64_t v22 = static Localization.workoutUILocalizedString(_:feature:)();
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v117.value._uint64_t countAndFlagsBits = v22;
    v117.value._object = v24;
    sub_1000A06D0();
    uint64_t v110 = Text.init<A>(_:)();
    uint64_t v111 = v26;
    uint64_t v112 = v25 & 1;
    uint64_t v113 = v27;
    long long v114 = 0u;
    long long v115 = 0u;
    char v116 = 1;
    sub_1000AFA94(&qword_1009619F0);
    sub_1000A132C(&qword_1009619F8, &qword_1009619F0);
    _ConditionalContent<>.init(storage:)();
    uint64_t countAndFlagsBits = v117.value._countAndFlagsBits;
    object = (void (**)(char *, void, uint64_t))v117.value._object;
    uint64_t v30 = v118;
    uint64_t v101 = v119;
    uint64_t v100 = v120;
    uint64_t v109 = v121;
    uint64_t v99 = v122;
    uint64_t v108 = v123;
    int v98 = v124;
    uint64_t v31 = v104;
    uint64_t v32 = (uint64_t)v107;
    uint64_t v33 = v105;
  }
  else
  {
    uint64_t v34 = v102;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v21, v14, v15);
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    uint64_t v93 = v21;
    uint64_t v94 = v15;
    v35(v18, v21, v15);
    uint64_t v108 = Text.init(_:)();
    uint64_t v101 = v36;
    uint64_t v109 = v37;
    uint64_t v100 = v38 & 1;
    uint64_t v39 = v105;
    SleepingSampleViewModel.dataType.getter();
    uint64_t v40 = (uint64_t)v107;
    uint64_t v41 = v104;
    v107[13](v5, enum case for SleepingSampleDataType.wristTemperature(_:), v104);
    sub_100085938(&qword_100950750, (void (*)(uint64_t))&type metadata accessor for SleepingSampleDataType);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v42 = v117.value._countAndFlagsBits;
    uint64_t v43 = v110;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
    v44(v5, v41);
    v44(v39, v41);
    if (v42 == v43)
    {
      LocalizedStringKey.init(stringLiteral:)();
      uint64_t v45 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v47 = v46;
      char v49 = v48 & 1;
      uint64_t v50 = v96;
      static Text.Scale.secondary.getter();
      uint64_t v51 = Text.textScale(_:isEnabled:)();
      uint64_t v53 = v52;
      uint64_t v55 = v54;
      uint64_t v57 = v56 & 1;
      uint64_t v58 = v45;
      uint64_t v59 = v95;
      sub_1000A06C0(v58, v47, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v50, v59);
    }
    else
    {
      uint64_t v51 = 0;
      uint64_t v53 = 0;
      uint64_t v57 = 0;
      uint64_t v55 = 0;
    }
    uint64_t v60 = v108;
    uint64_t v61 = v101;
    uint64_t v62 = v100;
    sub_1000A1750(v108, v101, v100);
    uint64_t v63 = v109;
    swift_bridgeObjectRetain();
    sub_1000A17A4(v51, v53, v57, v55);
    sub_1000A1750(v60, v61, v62);
    swift_bridgeObjectRetain();
    sub_1000A17A4(v51, v53, v57, v55);
    sub_1000A1760(v51, v53, v57, v55);
    sub_1000A06C0(v60, v61, v62);
    swift_bridgeObjectRelease();
    uint64_t v110 = v60;
    uint64_t v111 = v61;
    uint64_t v112 = v62;
    uint64_t v113 = v63;
    *(void *)&long long v114 = v51;
    *((void *)&v114 + 1) = v53;
    *(void *)&long long v115 = v57;
    *((void *)&v115 + 1) = v55;
    char v116 = 0;
    sub_1000A1750(v60, v61, v62);
    swift_bridgeObjectRetain();
    sub_1000A17A4(v51, v53, v57, v55);
    sub_1000AFA94(&qword_1009619F0);
    sub_1000A132C(&qword_1009619F8, &qword_1009619F0);
    _ConditionalContent<>.init(storage:)();
    sub_1000A1760(v51, v53, v57, v55);
    sub_1000A06C0(v60, v61, v62);
    swift_bridgeObjectRelease();
    sub_1000A1760(v51, v53, v57, v55);
    sub_1000A06C0(v60, v61, v62);
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = v117.value._countAndFlagsBits;
    object = (void (**)(char *, void, uint64_t))v117.value._object;
    uint64_t v30 = v118;
    uint64_t v101 = v119;
    uint64_t v100 = v120;
    uint64_t v109 = v121;
    uint64_t v99 = v122;
    uint64_t v108 = v123;
    int v98 = v124;
    (*(void (**)(char *, uint64_t))(v102 + 8))(v93, v94);
    uint64_t v32 = (uint64_t)v107;
    uint64_t v33 = v105;
    uint64_t v31 = v104;
  }
  SleepingSampleViewModel.dataType.getter();
  char v64 = (void *)SleepingSampleViewModel.preferredAggregateValueUnit.getter();
  Swift::String_optional v65 = SleepingSampleDataType.localizedUnitString(for:)((HKUnit)v64);
  uint64_t v66 = v65.value._object;

  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
  uint64_t v107 = object;
  if (v65.value._object)
  {
    Swift::String_optional v117 = v65;
    sub_1000A06D0();
    uint64_t v67 = Text.init<A>(_:)();
    uint64_t v69 = v68;
    uint64_t v102 = v30;
    uint64_t v70 = countAndFlagsBits;
    char v72 = v71 & 1;
    uint64_t v73 = v96;
    static Text.Scale.secondary.getter();
    uint64_t v106 = Text.textScale(_:isEnabled:)();
    uint64_t v105 = v74;
    uint64_t v104 = v75;
    uint64_t v66 = (void *)(v76 & 1);
    char v77 = v72;
    uint64_t countAndFlagsBits = v70;
    sub_1000A06C0(v67, v69, v77);
    uint64_t v30 = v102;
    swift_bridgeObjectRelease();
    uint64_t v78 = v73;
    object = v107;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v78, v95);
  }
  else
  {
    uint64_t v106 = 0;
    uint64_t v105 = 0;
    uint64_t v104 = 0;
  }
  uint64_t v79 = v103;
  *uint64_t v103 = countAndFlagsBits;
  v79[1] = (uint64_t)object;
  uint64_t v80 = (uint64_t)object;
  char v81 = v30;
  uint64_t v82 = v101;
  v79[2] = v30;
  v79[3] = v82;
  uint64_t v83 = v100;
  uint64_t v84 = v109;
  v79[4] = v100;
  v79[5] = v84;
  uint64_t v85 = v84;
  uint64_t v109 = v84;
  char v86 = v99;
  uint64_t v87 = v108;
  v79[6] = v99;
  v79[7] = v87;
  uint64_t v108 = v87;
  char v88 = v98;
  *((unsigned char *)v79 + 64) = v98;
  uint64_t v89 = v106;
  uint64_t v90 = (uint64_t)v105;
  v79[9] = v106;
  v79[10] = v90;
  uint64_t v91 = v104;
  v79[11] = (uint64_t)v66;
  v79[12] = v91;
  sub_100554DA0(countAndFlagsBits, v80, v81, v82, v83, v85, v86, v87, v88);
  sub_1000A17A4(v89, v90, (char)v66, v91);
  sub_1000A1760(v89, v90, (char)v66, v91);
  return sub_100554D14(countAndFlagsBits, (uint64_t)v107, v81, v82, v83, v109, v86, v108, v88);
}

uint64_t sub_10054AB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v129 = a1;
  uint64_t v124 = a3;
  uint64_t v128 = sub_1000AFA94(&qword_1009618B0);
  __chkstk_darwin(v128);
  uint64_t v121 = (uint64_t)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_1009618B8);
  __chkstk_darwin(v5 - 8);
  uint64_t v101 = (uint64_t *)((char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = sub_1000AFA94(&qword_1009618C0);
  __chkstk_darwin(v99);
  uint64_t v102 = (uint64_t)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1000AFA94(&qword_1009618C8);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v100 = (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_1009618D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v119 = (uint64_t)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v120 = (uint64_t)&v92 - v12;
  uint64_t v109 = sub_1000AFA94(&qword_1009618D8);
  __chkstk_darwin(v109);
  uint64_t v106 = (uint64_t)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1000AFA94(&qword_1009618E0);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v108 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1000AFA94(&qword_1009618E8);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v113 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1000AFA94(&qword_1009618F0);
  __chkstk_darwin(v107);
  long long v114 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v112 = (uint64_t)&v92 - v18;
  uint64_t v126 = sub_1000AFA94(&qword_1009618F8);
  __chkstk_darwin(v126);
  uint64_t v127 = (uint64_t)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000AFA94(&qword_100961900);
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v21 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1000AFA94(&qword_100961908);
  __chkstk_darwin(v125);
  uint64_t v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v105 = (uint64_t)&v92 - v25;
  uint64_t v26 = type metadata accessor for DayIndex();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (void (**)(char *, uint64_t, uint64_t))((char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t DetailsStackedChartView = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v31 = a2 + DetailsStackedChartView[11];
  uint64_t v94 = sub_1000AFA94(&qword_1009614F8);
  uint64_t v95 = v31;
  State.wrappedValue.getter();
  uint64_t v32 = a2 + DetailsStackedChartView[12];
  uint64_t v33 = *(void *)(v32 + 8);
  LOBYTE(v131) = *(unsigned char *)v32;
  *((void *)&v131 + 1) = v33;
  uint64_t v123 = sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  int v34 = v135;
  uint64_t v35 = (char *)(a2 + DetailsStackedChartView[14]);
  char v36 = *v35;
  uint64_t v37 = *((void *)v35 + 1);
  LOBYTE(v131) = v36;
  *((void *)&v131 + 1) = v37;
  sub_1000AFA94(&qword_100961690);
  State.wrappedValue.getter();
  int v38 = v34;
  uint64_t v39 = v129;
  uint64_t v40 = sub_1005C83C8(v29, v38);
  uint64_t v41 = *(void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t))(v27 + 8);
  uint64_t v96 = v29;
  uint64_t v98 = v26;
  uint64_t v97 = v27 + 8;
  uint64_t v93 = v41;
  v41(v29, v26);
  uint64_t v122 = a2;
  if (sub_10053F5A8())
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v131 = _swiftEmptyArrayStorage;
    *((void *)&v131 + 1) = _swiftEmptyArrayStorage;
    long long v132 = 0uLL;
    LOBYTE(v133) = 1;
    *((void *)&v133 + 1) = _swiftEmptyArrayStorage;
    char v134 = 0;
    sub_1005548DC();
    View.chartXAxis(_:)();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v42 = v103;
    uint64_t v43 = v104;
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v23, v21, v104);
    uint64_t v44 = &v23[*(int *)(v125 + 36)];
    long long v45 = v132;
    *(_OWORD *)uint64_t v44 = v131;
    *((_OWORD *)v44 + 1) = v45;
    *((_OWORD *)v44 + 2) = v133;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v43);
    uint64_t v46 = &qword_100961908;
    uint64_t v47 = v105;
    sub_1000AEEC8((uint64_t)v23, v105, &qword_100961908);
    sub_1000AEF2C(v47, v127, &qword_100961908);
    swift_storeEnumTagMultiPayload();
    sub_100554930();
    sub_1000A132C(&qword_100961930, &qword_1009618B0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v48 = v47;
  }
  else
  {
    uint64_t v49 = SleepingSampleViewModel.chronologicalBaselineComparisons.getter();
    __chkstk_darwin(v49);
    *(&v92 - 2) = v39;
    uint64_t v50 = sub_1006DE924((void (*)(void))sub_1005548C0, (uint64_t)(&v92 - 4), v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    SleepingSampleViewModel.chartableMedialRange.getter();
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v55 = SleepingSampleViewModel.keyDatesForTimeAxis.getter();
    uint64_t v56 = *(void *)(v32 + 8);
    LOBYTE(v131) = *(unsigned char *)v32;
    *((void *)&v131 + 1) = v56;
    State.wrappedValue.getter();
    *(void *)&long long v131 = v50;
    *((void *)&v131 + 1) = v40;
    *(void *)&long long v132 = v52;
    *((void *)&v132 + 1) = v54;
    LOBYTE(v133) = 0;
    *((void *)&v133 + 1) = v55;
    char v134 = v135;
    uint64_t v57 = v106;
    sub_1005434E0(v106);
    static GestureMask.all.getter();
    unint64_t v58 = sub_1005548DC();
    uint64_t v59 = sub_1000A132C(&qword_100961918, &qword_1009618D8);
    uint64_t v60 = v108;
    uint64_t v61 = v109;
    View.gesture<A>(_:including:)();
    sub_10008DB18(v57, &qword_1009618D8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v131 = &type metadata for SleepingSampleMetricChartView;
    *((void *)&v131 + 1) = v61;
    *(void *)&long long v132 = v58;
    *((void *)&v132 + 1) = v59;
    swift_getOpaqueTypeConformance2();
    uint64_t v62 = v113;
    uint64_t v63 = v111;
    View.chartXAxis(_:)();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v60, v63);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v64 = v115;
    uint64_t v65 = (uint64_t)v114;
    uint64_t v66 = v116;
    (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v114, v62, v116);
    uint64_t v67 = (_OWORD *)(v65 + *(int *)(v107 + 36));
    long long v68 = v136;
    *uint64_t v67 = v135;
    v67[1] = v68;
    v67[2] = v137;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v66);
    uint64_t v69 = v112;
    sub_1000AEEC8(v65, v112, &qword_1009618F0);
    uint64_t v70 = *(void *)(v32 + 8);
    LOBYTE(v131) = *(unsigned char *)v32;
    *((void *)&v131 + 1) = v70;
    State.wrappedValue.getter();
    uint64_t v71 = v65;
    if (v130 == 1)
    {
      uint64_t v72 = v122;
      sub_10053F09C();
      uint64_t v73 = static VerticalAlignment.center.getter();
      uint64_t v74 = (uint64_t)v101;
      *uint64_t v101 = v73;
      *(void *)(v74 + 8) = 0x4000000000000000;
      *(unsigned char *)(v74 + 16) = 0;
      uint64_t v75 = sub_1000AFA94(&qword_100961938);
      sub_10054B9C0((uint64_t)v40, v129, v72, v74 + *(int *)(v75 + 44));
      swift_bridgeObjectRelease();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v76 = v102;
      sub_1000AEF2C(v74, v102, &qword_1009618B8);
      char v77 = (_OWORD *)(v76 + *(int *)(v99 + 36));
      long long v78 = v132;
      *char v77 = v131;
      v77[1] = v78;
      v77[2] = v133;
      sub_10008DB18(v74, &qword_1009618B8);
      uint64_t v79 = v96;
      State.wrappedValue.getter();
      sub_100543D70();
      uint64_t v81 = v80;
      v93(v79, v98);
      uint64_t v82 = v100;
      sub_1000AEF2C(v76, v100, &qword_1009618C0);
      uint64_t v83 = v118;
      uint64_t v84 = (void *)(v82 + *(int *)(v118 + 36));
      void *v84 = v81;
      v84[1] = 0xC049000000000000;
      sub_10008DB18(v76, &qword_1009618C0);
      uint64_t v85 = v120;
      sub_1000AEEC8(v82, v120, &qword_1009618C8);
      uint64_t v86 = 0;
      uint64_t v87 = v127;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v86 = 1;
      uint64_t v85 = v120;
      uint64_t v87 = v127;
      uint64_t v83 = v118;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v85, v86, 1, v83);
    uint64_t v46 = &qword_1009618F0;
    sub_1000AEF2C(v69, v71, &qword_1009618F0);
    uint64_t v88 = v119;
    sub_1000AEF2C(v85, v119, &qword_1009618D0);
    uint64_t v89 = v121;
    sub_1000AEF2C(v71, v121, &qword_1009618F0);
    uint64_t v90 = sub_1000AFA94(&qword_100961920);
    sub_1000AEF2C(v88, v89 + *(int *)(v90 + 48), &qword_1009618D0);
    sub_10008DB18(v88, &qword_1009618D0);
    sub_10008DB18(v71, &qword_1009618F0);
    sub_1000AEF2C(v89, v87, &qword_1009618B0);
    swift_storeEnumTagMultiPayload();
    sub_100554930();
    sub_1000A132C(&qword_100961930, &qword_1009618B0);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v89, &qword_1009618B0);
    sub_10008DB18(v85, &qword_1009618D0);
    uint64_t v48 = v69;
  }
  return sub_10008DB18(v48, v46);
}

uint64_t sub_10054B9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v141 = a2;
  uint64_t v137 = a4;
  uint64_t v129 = type metadata accessor for DayIndex();
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v125 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v126 = (char *)&v117 - v8;
  __chkstk_darwin(v9);
  long long v131 = (char *)&v117 - v10;
  uint64_t v144 = type metadata accessor for SleepingSampleViewModel();
  uint64_t v11 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  long long v132 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100961940);
  __chkstk_darwin(v13 - 8);
  uint64_t v136 = (uint64_t)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v143 = (uint64_t)&v117 - v16;
  uint64_t v142 = sub_1000AFA94(&qword_100961948);
  __chkstk_darwin(v142);
  uint64_t v140 = (uint64_t)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (int *)type metadata accessor for SleepingSampleChartLollipopView();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_100961950);
  uint64_t v133 = *(void *)(v21 - 8);
  uint64_t v134 = v21;
  __chkstk_darwin(v21);
  uint64_t v135 = (uint64_t)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v127 = (char *)&v117 - v24;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v117 - v26;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(a1 + 16);
  uint64_t v138 = v11;
  if (v28)
  {
    uint64_t v122 = v28;
    uint64_t v29 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
    uint64_t v118 = *(void *)(v29 - 8);
    unint64_t v139 = v29 - 8;
    uint64_t v30 = v118;
    unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v121 = a1;
    uint64_t v32 = a1 + v31;
    uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
    int v34 = (char *)(a3 + *(int *)(DetailsStackedChartView + 56));
    char v35 = *v34;
    uint64_t v36 = *((void *)v34 + 1);
    LOBYTE(v147) = v35;
    uint64_t v148 = v36;
    sub_1000AFA94(&qword_100961690);
    State.wrappedValue.getter();
    LODWORD(v123) = v145;
    sub_1000AFA94(&qword_1009614F8);
    State.wrappedValue.getter();
    uint64_t v37 = (uint64_t)&v20[v18[7]];
    sub_1005547CC(v32, v37, (uint64_t (*)(void))type metadata accessor for SleepingSampleBaselineRelativeChartPoint);
    int v38 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56);
    uint64_t v124 = v29;
    uint64_t v39 = v138;
    v38(v37, 0, 1, v29);
    uint64_t v130 = DetailsStackedChartView;
    uint64_t v40 = (char *)(a3 + *(int *)(DetailsStackedChartView + 48));
    uint64_t v41 = a3;
    unsigned __int8 v42 = *v40;
    uint64_t v43 = *((void *)v40 + 1);
    unsigned __int8 v145 = v42;
    uint64_t v146 = v43;
    sub_1000AFA94(&qword_10094DEE0);
    State.projectedValue.getter();
    uint64_t v44 = v147;
    uint64_t v45 = v148;
    char v46 = v149;
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    v47(v20, v141, v144);
    v20[v18[5]] = (char)v123;
    v20[v18[8]] = 1;
    uint64_t v48 = &v20[v18[9]];
    *(void *)uint64_t v48 = v44;
    *((void *)v48 + 1) = v45;
    v48[16] = v46;
    uint64_t v49 = v18[10];
    uint64_t v50 = self;
    UIFontTextStyle v120 = UIFontTextStyleLargeTitle;
    *(void *)&v20[v49] = [v50 preferredFontForTextStyle:];
    uint64_t v51 = v140;
    sub_1005547CC((uint64_t)v20, v140, (uint64_t (*)(void))type metadata accessor for SleepingSampleChartLollipopView);
    swift_storeEnumTagMultiPayload();
    uint64_t v119 = sub_100085938(&qword_100961958, (void (*)(uint64_t))type metadata accessor for SleepingSampleChartLollipopView);
    _ConditionalContent<>.init(storage:)();
    sub_100554834((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for SleepingSampleChartLollipopView);
    char v52 = sub_10053F09C();
    uint64_t v53 = 1;
    if (v52)
    {
      uint64_t v54 = v47;
      uint64_t v55 = v130;
      uint64_t v123 = v27;
      if ((unint64_t)v122 >= 2)
      {
        uint64_t v56 = v118;
        unint64_t v139 = v121
             + *(void *)(v118 + 72)
             + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
        v54(v132, v141, v144);
        uint64_t v57 = (char *)(v41 + *(int *)(v55 + 56));
        char v58 = *v57;
        uint64_t v59 = *((void *)v57 + 1);
        LOBYTE(v147) = v58;
        uint64_t v148 = v59;
        sub_1000AFA94(&qword_100961690);
        State.wrappedValue.getter();
        LODWORD(v141) = v145;
        sub_1000AFA94(&qword_1009614F8);
        uint64_t v60 = v126;
        State.wrappedValue.getter();
        uint64_t v61 = v125;
        DayIndex.init(integerLiteral:)();
        static DayIndex.+ infix(_:_:)();
        uint64_t v62 = v128;
        uint64_t v63 = *(void (**)(char *, uint64_t))(v128 + 8);
        uint64_t v64 = v61;
        uint64_t v65 = v129;
        v63(v64, v129);
        v63(v60, v65);
        uint64_t v66 = (uint64_t)&v20[v18[7]];
        sub_1005547CC(v139, v66, (uint64_t (*)(void))type metadata accessor for SleepingSampleBaselineRelativeChartPoint);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v66, 0, 1, v124);
        uint64_t v67 = (char *)(v41 + *(int *)(v130 + 48));
        unsigned __int8 v68 = *v67;
        uint64_t v69 = *((void *)v67 + 1);
        unsigned __int8 v145 = v68;
        uint64_t v146 = v69;
        sub_1000AFA94(&qword_10094DEE0);
        State.projectedValue.getter();
        uint64_t v70 = v147;
        uint64_t v71 = v148;
        char v72 = v149;
        (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v20, v132, v144);
        v20[v18[5]] = v141;
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v20[v18[6]], v131, v65);
        v20[v18[8]] = 0;
        uint64_t v73 = &v20[v18[9]];
        *(void *)uint64_t v73 = v70;
        *((void *)v73 + 1) = v71;
        v73[16] = v72;
        uint64_t v74 = v18[10];
        *(void *)&v20[v74] = [self preferredFontForTextStyle:v120];
        sub_1005547CC((uint64_t)v20, v51, (uint64_t (*)(void))type metadata accessor for SleepingSampleChartLollipopView);
        swift_storeEnumTagMultiPayload();
        uint64_t v75 = (uint64_t)v127;
LABEL_9:
        _ConditionalContent<>.init(storage:)();
        sub_100554834((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for SleepingSampleChartLollipopView);
        sub_1000AEEC8(v75, v143, &qword_100961950);
        uint64_t v53 = 0;
        uint64_t v27 = v123;
        goto LABEL_10;
      }
      unint64_t v139 = v139 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
      v47(v132, v141, v144);
LABEL_8:
      type metadata accessor for LoadDetailsStackedChartView(0);
      uint64_t v91 = (char *)(v41 + *(int *)(v55 + 56));
      char v92 = *v91;
      uint64_t v93 = *((void *)v91 + 1);
      LOBYTE(v147) = v92;
      uint64_t v148 = v93;
      sub_1000AFA94(&qword_100961690);
      uint64_t v94 = v55;
      State.wrappedValue.getter();
      LODWORD(v141) = v145;
      sub_1000AFA94(&qword_1009614F8);
      uint64_t v95 = v126;
      State.wrappedValue.getter();
      uint64_t v96 = v125;
      DayIndex.init(integerLiteral:)();
      uint64_t v97 = v131;
      static DayIndex.+ infix(_:_:)();
      uint64_t v98 = v128;
      uint64_t v99 = *(void (**)(char *, uint64_t))(v128 + 8);
      uint64_t v100 = v96;
      uint64_t v101 = v129;
      v99(v100, v129);
      v99(v95, v101);
      uint64_t v102 = &v20[v18[7]];
      type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v102, 1, 1);
      uint64_t v103 = (char *)(v41 + *(int *)(v94 + 48));
      unsigned __int8 v104 = *v103;
      uint64_t v105 = *((void *)v103 + 1);
      unsigned __int8 v145 = v104;
      uint64_t v146 = v105;
      sub_1000AFA94(&qword_10094DEE0);
      State.projectedValue.getter();
      uint64_t v106 = v147;
      uint64_t v107 = v148;
      char v108 = v149;
      (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v20, v132, v144);
      v20[v18[5]] = v141;
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v20[v18[6]], v97, v101);
      v20[v18[8]] = 0;
      uint64_t v109 = &v20[v18[9]];
      *(void *)uint64_t v109 = v106;
      *((void *)v109 + 1) = v107;
      v109[16] = v108;
      uint64_t v110 = v18[10];
      *(void *)&v20[v110] = [self preferredFontForTextStyle:UIFontTextStyleLargeTitle];
      sub_1005547CC((uint64_t)v20, v140, (uint64_t (*)(void))type metadata accessor for SleepingSampleChartLollipopView);
      swift_storeEnumTagMultiPayload();
      sub_100085938(&qword_100961958, (void (*)(uint64_t))type metadata accessor for SleepingSampleChartLollipopView);
      uint64_t v75 = (uint64_t)v127;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v76 = type metadata accessor for LoadDetailsStackedChartView(0);
    char v77 = (char *)(a3 + *(int *)(v76 + 56));
    char v78 = *v77;
    uint64_t v79 = *((void *)v77 + 1);
    LOBYTE(v147) = v78;
    uint64_t v148 = v79;
    sub_1000AFA94(&qword_100961690);
    State.wrappedValue.getter();
    LODWORD(v124) = v145;
    sub_1000AFA94(&qword_1009614F8);
    State.wrappedValue.getter();
    uint64_t v80 = &v20[v18[7]];
    uint64_t v81 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
    uint64_t v82 = *(void *)(v81 - 8);
    unint64_t v139 = v81 - 8;
    uint64_t v41 = a3;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v80, 1, 1, v81);
    uint64_t v130 = v76;
    uint64_t v83 = (char *)(a3 + *(int *)(v76 + 48));
    unsigned __int8 v84 = *v83;
    uint64_t v85 = *((void *)v83 + 1);
    unsigned __int8 v145 = v84;
    uint64_t v146 = v85;
    sub_1000AFA94(&qword_10094DEE0);
    State.projectedValue.getter();
    uint64_t v86 = v147;
    uint64_t v87 = v148;
    LOBYTE(v76) = v149;
    uint64_t v122 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v122(v20, v141, v144);
    v20[v18[5]] = v124;
    v20[v18[8]] = 1;
    uint64_t v88 = &v20[v18[9]];
    *(void *)uint64_t v88 = v86;
    *((void *)v88 + 1) = v87;
    v88[16] = v76;
    uint64_t v89 = v18[10];
    *(void *)&v20[v89] = [self preferredFontForTextStyle:UIFontTextStyleLargeTitle];
    sub_1005547CC((uint64_t)v20, v140, (uint64_t (*)(void))type metadata accessor for SleepingSampleChartLollipopView);
    swift_storeEnumTagMultiPayload();
    sub_100085938(&qword_100961958, (void (*)(uint64_t))type metadata accessor for SleepingSampleChartLollipopView);
    _ConditionalContent<>.init(storage:)();
    sub_100554834((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for SleepingSampleChartLollipopView);
    char v90 = sub_10053F09C();
    uint64_t v53 = 1;
    if (v90)
    {
      uint64_t v124 = v81;
      uint64_t v123 = v27;
      unint64_t v139 = v139 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
      uint64_t v55 = v130;
      v122(v132, v141, v144);
      goto LABEL_8;
    }
  }
LABEL_10:
  uint64_t v111 = v143;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56))(v143, v53, 1, v134);
  uint64_t v112 = v135;
  sub_1000AEF2C((uint64_t)v27, v135, &qword_100961950);
  uint64_t v113 = v136;
  sub_1000AEF2C(v111, v136, &qword_100961940);
  uint64_t v114 = v137;
  sub_1000AEF2C(v112, v137, &qword_100961950);
  uint64_t v115 = sub_1000AFA94(&qword_100961960);
  sub_1000AEF2C(v113, v114 + *(int *)(v115 + 48), &qword_100961940);
  sub_10008DB18(v111, &qword_100961940);
  sub_10008DB18((uint64_t)v27, &qword_100961950);
  sub_10008DB18(v113, &qword_100961940);
  return sub_10008DB18(v112, &qword_100961950);
}

void sub_10054C8A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10054CAB8();
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(DetailsStackedChartView + 52));
  uint64_t v8 = v7[1];
  uint64_t v23 = *v7;
  uint64_t v24 = v8;
  sub_1000AFA94(&qword_1009616A8);
  State.wrappedValue.getter();
  uint64_t v9 = *((void *)v25 + 2);
  swift_bridgeObjectRelease();
  if (!v9)
  {
    uint64_t v10 = a1 + *(int *)(DetailsStackedChartView + 68);
    id v11 = *(id *)v10;
    char v12 = *(unsigned char *)(v10 + 8);
    sub_1001AEDAC(*(id *)v10, v12);
    id v13 = sub_1004E75C0(v11, v12);
    sub_1001AEDC8(v11, v12);
    uint64_t v14 = sub_100335FB8();
    sub_10021BB94();
    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    uint64_t v15 = OvernightMetricsViewModel.visibleDataTypes.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v16 = sub_100553FCC((uint64_t)v14, v15);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v7[1];
    uint64_t v23 = *v7;
    uint64_t v24 = v17;
    uint64_t v25 = v16;
    State.wrappedValue.setter();
  }
  uint64_t v18 = a1 + *(int *)(DetailsStackedChartView + 68);
  id v19 = *(id *)v18;
  char v20 = *(unsigned char *)(v18 + 8);
  sub_1001AEDAC(*(id *)v18, v20);
  id v21 = sub_1004E75C0(v19, v20);
  sub_1001AEDC8(v19, v20);
  sub_10021D878();
}

uint64_t sub_10054CAB8()
{
  uint64_t v1 = v0;
  uint64_t DetailsStackedChartView = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v3 = v0 + DetailsStackedChartView[17];
  id v4 = *(id *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  sub_1001AEDAC(*(id *)v3, v5);
  uint64_t v6 = (char *)sub_1004E75C0(v4, v5);
  sub_1001AEDC8(v4, v5);
  swift_getKeyPath();
  *(void *)&long long v21 = v6;
  sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsInDayRange];
  swift_bridgeObjectRetain();

  uint64_t v19 = v1;
  uint64_t v8 = sub_1006DE4C4((void (*)(uint64_t *__return_ptr, uint64_t))sub_100553F88, (uint64_t)v18, v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(v1 + DetailsStackedChartView[7]);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *(void *)&long long v21 = v11;
  *((void *)&v21 + 1) = v10;
  char v20 = v8;
  sub_1000AFA94(&qword_100961698);
  State.wrappedValue.setter();
  id v12 = *(id *)v3;
  LOBYTE(v8) = *(unsigned char *)(v3 + 8);
  sub_1001AEDAC(*(id *)v3, (char)v8);
  id v13 = (char *)sub_1004E75C0(v12, (char)v8);
  sub_1001AEDC8(v12, (char)v8);
  swift_getKeyPath();
  *(void *)&long long v21 = v13;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__activitySummaries];
  swift_bridgeObjectRetain();

  v17[2] = v1;
  uint64_t v15 = sub_1004823BC(sub_100553FAC, (uint64_t)v17, v14);
  swift_bridgeObjectRelease();
  long long v21 = *(_OWORD *)(v1 + DetailsStackedChartView[8]);
  char v20 = v15;
  sub_1000AFA94(&qword_1009616A0);
  return State.wrappedValue.setter();
}

void sub_10054CD00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GregorianDayRange();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = a1 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 68);
  id v7 = *(id *)v6;
  char v8 = *(unsigned char *)(v6 + 8);
  sub_1001AEDAC(*(id *)v6, v8);
  id v9 = sub_1004E75C0(v7, v8);
  sub_1001AEDC8(v7, v8);
  sub_1003A1480(0, (uint64_t)v5);
  swift_getKeyPath();
  id v11 = v9;
  id v12 = v5;
  id v13 = v9;
  sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10054CEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
    [*(id *)(a3 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 60)) selectionChanged];
  }
  return sub_10054CAB8();
}

void sub_10054CF68(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for GregorianDayRange();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v9 = *a2;
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  id v11 = (char *)(a3 + *(int *)(DetailsStackedChartView + 48));
  char v12 = *v11;
  uint64_t v13 = *((void *)v11 + 1);
  LOBYTE(v21) = v12;
  uint64_t v22 = v13;
  char v20 = 0;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.setter();
  uint64_t v14 = a3 + *(int *)(DetailsStackedChartView + 68);
  id v15 = *(id *)v14;
  LOBYTE(a3) = *(unsigned char *)(v14 + 8);
  sub_1001AEDAC(*(id *)v14, a3);
  id v16 = sub_1004E75C0(v15, a3);
  sub_1001AEDC8(v15, a3);
  sub_1003A1480(v9, (uint64_t)v8);
  swift_getKeyPath();
  id v18 = v16;
  uint64_t v19 = v8;
  id v21 = v16;
  sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10054D164(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v5 = type metadata accessor for DayIndex();
  uint64_t v32 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for GregorianDayRange();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    if ((*a2 & 1) == 0)
    {
      uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
      uint64_t v30 = v5;
      uint64_t v31 = DetailsStackedChartView;
      uint64_t v19 = v33 + *(int *)(DetailsStackedChartView + 68);
      id v20 = *(id *)v19;
      char v21 = *(unsigned char *)(v19 + 8);
      sub_1001AEDAC(*(id *)v19, v21);
      uint64_t v22 = (char *)sub_1004E75C0(v20, v21);
      sub_1001AEDC8(v20, v21);
      swift_getKeyPath();
      int v34 = v22;
      sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v23 = &v22[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v23, v14);

      GregorianDayRange.dayIndexRange.getter();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      uint64_t v24 = &v13[*(int *)(v11 + 36)];
      uint64_t v25 = v32;
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      uint64_t v27 = v30;
      v26(v10, v24, v30);
      sub_10008DB18((uint64_t)v13, &qword_100950728);
      v26(v7, v10, v27);
      sub_1000AFA94(&qword_1009614F8);
      State.wrappedValue.setter();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v27);
    }
  }
  else if (*a2)
  {
    uint64_t v28 = *(void **)(v33 + *(int *)(type metadata accessor for LoadDetailsStackedChartView(0) + 60));
    [v28 selectionChanged];
  }
}

uint64_t sub_10054D52C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000AFA94(&qword_10094E2B8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v9 = a1;
  sub_1000AFA94(&qword_10094E2C0);
  sub_1001C52BC();
  ToolbarItem<>.init(placement:content:)();
  sub_1000A132C(&qword_100961680, &qword_10094E2B8);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10054D6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094E320);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v7 = *(void *)(DetailsStackedChartView - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(DetailsStackedChartView - 8);
  uint64_t v9 = sub_1000AFA94(&qword_10094E2E8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_10094E2D8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005547CC(a1, (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LoadDetailsStackedChartView);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  sub_100556A40((uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for LoadDetailsStackedChartView);
  Button.init(action:label:)();
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v19 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 0, 1, v19);
  uint64_t KeyPath = swift_getKeyPath();
  char v21 = (uint64_t *)&v16[*(int *)(v14 + 44)];
  uint64_t v22 = sub_1000AFA94(&qword_10094E2F8);
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v21 + *(int *)(v22 + 28), &qword_10094E320);
  *char v21 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v12, v9);
  sub_10008DB18((uint64_t)v5, &qword_10094E320);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v23 = [self secondaryLabelColor];
  uint64_t v24 = Color.init(_:)();
  uint64_t v25 = v28;
  sub_1000AEF2C((uint64_t)v16, v28, &qword_10094E2D8);
  *(void *)(v25 + *(int *)(sub_1000AFA94(&qword_10094E2C0) + 36)) = v24;
  return sub_10008DB18((uint64_t)v16, &qword_10094E2D8);
}

uint64_t sub_10054DA7C()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LoadDetailsStackedChartView(0);
  sub_1004E7580((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10054DB60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LayoutDirection();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v9 = &v20[-v8];
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v11 = (char *)(a2 + *(int *)(DetailsStackedChartView + 48));
  char v12 = *v11;
  uint64_t v13 = *((void *)v11 + 1);
  v20[8] = v12;
  uint64_t v21 = v13;
  sub_1000AFA94(&qword_10094DEE0);
  uint64_t result = State.wrappedValue.getter();
  if (v22 == 1)
  {
    sub_1004E7AB8((uint64_t)v9);
    (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for LayoutDirection.leftToRight(_:), v3);
    char v15 = static LayoutDirection.== infix(_:_:)();
    uint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
    v16(v6, v3);
    v16(v9, v3);
    if (v15)
    {
      DragGesture.Value.location.getter();
    }
    else
    {
      double v18 = *(double *)(a2 + *(int *)(DetailsStackedChartView + 36));
      DragGesture.Value.location.getter();
      double v17 = v18 - v19;
    }
    return sub_10054DD34(v17);
  }
  return result;
}

uint64_t sub_10054DD34(double a1)
{
  uint64_t v3 = type metadata accessor for DayIndex();
  uint64_t v99 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v89 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v90 = (char *)&v82 - v6;
  __chkstk_darwin(v7);
  uint64_t v86 = (char *)&v82 - v8;
  __chkstk_darwin(v9);
  uint64_t v98 = (char *)&v82 - v10;
  __chkstk_darwin(v11);
  uint64_t v91 = (char *)&v82 - v12;
  __chkstk_darwin(v13);
  uint64_t v97 = (char *)&v82 - v14;
  __chkstk_darwin(v15);
  unsigned __int8 v104 = (char *)&v82 - v16;
  uint64_t v17 = sub_1000AFA94(&qword_100950718);
  __chkstk_darwin(v17 - 8);
  double v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  char v22 = (char *)&v82 - v21;
  uint64_t v96 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v96);
  uint64_t v87 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v82 - v25;
  uint64_t v27 = type metadata accessor for GregorianDayRange();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  unsigned __int8 v84 = (char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v82 - v31;
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  double v34 = *(double *)(v1 + *(int *)(DetailsStackedChartView + 36));
  uint64_t v88 = DetailsStackedChartView;
  uint64_t v35 = *(int *)(DetailsStackedChartView + 68);
  uint64_t v92 = v1;
  uint64_t v36 = v1 + v35;
  uint64_t v37 = *(void **)v36;
  uint64_t v83 = v36;
  char v38 = *(unsigned char *)(v36 + 8);
  sub_1001AEDAC(v37, v38);
  uint64_t v39 = (char *)sub_1004E75C0(v37, v38);
  sub_1001AEDC8(v37, v38);
  swift_getKeyPath();
  char v108 = v39;
  uint64_t v102 = sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v40 = &v39[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  uint64_t v101 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v101(v32, v40, v27);

  GregorianDayRange.dayIndexRange.getter();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v82 = v32;
  uint64_t v85 = v27;
  uint64_t v103 = v28 + 8;
  uint64_t v100 = v41;
  v41(v32, v27);
  uint64_t v42 = v99;
  uint64_t v43 = v99 + 16;
  uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
  v95(v22, v26, v3);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  v44(v22, 0, 1, v3);
  v44(v19, 1, 1, v3);
  uint64_t v45 = sub_100456C9C((uint64_t)v22, (uint64_t)v19);
  sub_10008DB18((uint64_t)v19, &qword_100950718);
  sub_10008DB18((uint64_t)v22, &qword_100950718);
  uint64_t v46 = (uint64_t)v26;
  uint64_t result = sub_10008DB18((uint64_t)v26, &qword_100950728);
  if (__OFSUB__(v45, 1))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v48 = v34 + -9.0;
  double v49 = 0.0;
  if (a1 >= 0.0) {
    double v49 = a1;
  }
  if (v48 < v49) {
    double v49 = v34 + -9.0;
  }
  double v50 = (v48 - v49) * (double)(v45 - 1) / v48;
  if ((~*(void *)&v50 & 0x7FF0000000000000) == 0) {
    goto LABEL_17;
  }
  if (v50 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v50 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v51 = v83;
  id v52 = *(id *)v83;
  char v53 = *(unsigned char *)(v83 + 8);
  sub_1001AEDAC(*(id *)v83, v53);
  uint64_t v54 = (char *)sub_1004E75C0(v52, v53);
  uint64_t v94 = v28 + 16;
  uint64_t v55 = v54;
  sub_1001AEDC8(v52, v53);
  swift_getKeyPath();
  uint64_t v107 = v55;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v56 = &v55[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  uint64_t v57 = v82;
  uint64_t v93 = v43;
  uint64_t v58 = v85;
  v101(v82, v56, v85);

  GregorianDayRange.dayIndexRange.getter();
  v100(v57, v58);
  uint64_t v59 = v97;
  v95(v97, (char *)(v46 + *(int *)(v96 + 36)), v3);
  sub_10008DB18(v46, &qword_100950728);
  static DayIndex.- infix(_:_:)();
  uint64_t v99 = *(void *)(v99 + 8);
  ((void (*)(char *, uint64_t))v99)(v59, v3);
  id v60 = *(id *)v51;
  char v61 = *(unsigned char *)(v51 + 8);
  sub_1001AEDAC(*(id *)v51, v61);
  uint64_t v62 = (char *)sub_1004E75C0(v60, v61);
  sub_1001AEDC8(v60, v61);
  swift_getKeyPath();
  uint64_t v106 = v62;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v63 = &v62[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  v101(v57, v63, v58);

  GregorianDayRange.dayIndexRange.getter();
  v100(v57, v58);
  uint64_t v64 = (void (*)(char *, uint64_t, uint64_t))v95;
  v95(v59, (char *)v46, v3);
  sub_10008DB18(v46, &qword_100950728);
  uint64_t v65 = v86;
  DayIndex.init(integerLiteral:)();
  static DayIndex.+ infix(_:_:)();
  uint64_t v66 = v65;
  uint64_t v67 = (void (*)(char *, uint64_t))v99;
  ((void (*)(char *, uint64_t))v99)(v66, v3);
  v67(v59, v3);
  unsigned __int8 v68 = v67;
  id v69 = *(id *)v51;
  char v70 = *(unsigned char *)(v51 + 8);
  sub_1001AEDAC(*(id *)v51, v70);
  uint64_t v71 = (char *)sub_1004E75C0(v69, v70);
  sub_1001AEDC8(v69, v70);
  swift_getKeyPath();
  uint64_t v105 = v71;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v72 = &v71[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  uint64_t v73 = v84;
  v101(v84, v72, v58);

  uint64_t v74 = (uint64_t)v87;
  GregorianDayRange.dayIndexRange.getter();
  v100(v73, v58);
  uint64_t v75 = v89;
  v64(v89, v74 + *(int *)(v96 + 36), v3);
  sub_10008DB18(v74, &qword_100950728);
  sub_100085938((unint64_t *)&qword_100950740, (void (*)(uint64_t))&type metadata accessor for DayIndex);
  uint64_t v76 = v104;
  if (dispatch thunk of static Comparable.< infix(_:_:)()) {
    char v77 = v76;
  }
  else {
    char v77 = v75;
  }
  char v78 = v90;
  v64(v90, (uint64_t)v77, v3);
  v68(v75, v3);
  uint64_t v79 = v98;
  if (dispatch thunk of static Comparable.>= infix(_:_:)()) {
    uint64_t v80 = v78;
  }
  else {
    uint64_t v80 = v79;
  }
  uint64_t v81 = v91;
  v64(v91, (uint64_t)v80, v3);
  v68(v78, v3);
  v68(v79, v3);
  v64(v97, (uint64_t)v81, v3);
  sub_1000AFA94(&qword_1009614F8);
  State.wrappedValue.setter();
  v68(v81, v3);
  return ((uint64_t (*)(char *, uint64_t))v68)(v104, v3);
}

uint64_t sub_10054E85C(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a1;
  uint64_t v3 = type metadata accessor for LayoutDirection();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v35 = type metadata accessor for DayIndex();
  uint64_t v10 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v32 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t DetailsStackedChartView = (int *)type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v16 = a2 + DetailsStackedChartView[11];
  sub_1000AFA94(&qword_1009614F8);
  double v34 = v14;
  uint64_t v31 = v16;
  State.wrappedValue.getter();
  sub_1004E7AB8((uint64_t)v9);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for LayoutDirection.leftToRight(_:), v3);
  LOBYTE(v16) = static LayoutDirection.== infix(_:_:)();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v6, v3);
  v17(v9, v3);
  if (v16)
  {
    SpatialTapGesture.Value.location.getter();
  }
  else
  {
    double v19 = *(double *)(a2 + DetailsStackedChartView[9]);
    SpatialTapGesture.Value.location.getter();
    double v18 = v19 - v20;
  }
  sub_10054DD34(v18);
  uint64_t v21 = (char *)(a2 + DetailsStackedChartView[12]);
  char v22 = *v21;
  uint64_t v23 = *((void *)v21 + 1);
  LOBYTE(v36) = *v21;
  uint64_t v37 = v23;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  if (v38)
  {
    uint64_t v26 = v32;
    State.wrappedValue.getter();
    sub_100085938(&qword_100950738, (void (*)(uint64_t))&type metadata accessor for DayIndex);
    dispatch thunk of Strideable.distance(to:)();
    uint64_t v27 = v36;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v26, v24);
    if (!v27)
    {
      uint64_t v29 = *((void *)v21 + 1);
      LOBYTE(v36) = *v21;
      uint64_t v37 = v29;
      char v38 = 0;
      State.wrappedValue.setter();
    }
  }
  else
  {
    LOBYTE(v36) = v22;
    uint64_t v37 = v23;
    char v38 = 1;
    State.wrappedValue.setter();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
  }
  return ((uint64_t (*)(char *, uint64_t))v28)(v25, v24);
}

uint64_t sub_10054EBD8()
{
  return State.wrappedValue.setter();
}

void sub_10054EC44(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v6 = type metadata accessor for Calendar();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for GregorianDayRange();
  uint64_t v40 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v41 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DayIndex();
  uint64_t v43 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Date();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - v16;
  sub_10008E75C(a1, (uint64_t)&v48);
  sub_1000AFA94((uint64_t *)&unk_100955630);
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v38 = v7;
  id v18 = v49;
  id v19 = [v49 endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v39 = v3;
  uint64_t v21 = DetailsStackedChartView;
  sub_1000AFA94(&qword_1009614F8);
  State.wrappedValue.getter();
  uint64_t v22 = a2 + *(int *)(v21 + 68);
  uint64_t v23 = *(void **)v22;
  uint64_t v36 = v6;
  uint64_t v37 = v10;
  char v24 = *(unsigned char *)(v22 + 8);
  sub_1001AEDAC(v23, v24);
  uint64_t v25 = (char *)sub_1004E75C0(v23, v24);
  sub_1001AEDC8(v23, v24);
  swift_getKeyPath();
  double v48 = v25;
  sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v26 = &v25[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  uint64_t v28 = v40;
  uint64_t v27 = v41;
  uint64_t v29 = v45;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v41, v26, v45);

  uint64_t v30 = v46;
  GregorianDayRange.gregorianCalendar.getter();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
  DayIndex.startDate(in:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v36);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v37);
  char v31 = Date.isSameDay(as:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v42 + 8);
  uint64_t v33 = v14;
  uint64_t v34 = v44;
  v32(v33, v44);
  v32(v17, v34);
  if ((v31 & 1) == 0)
  {

LABEL_4:
    id v18 = 0;
  }
  *uint64_t v47 = v18;
}

uint64_t sub_10054F10C(id *a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v64 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v62 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for GregorianDayRange();
  uint64_t v63 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DayIndex();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin(v8);
  uint64_t v65 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = __chkstk_darwin(v17).n128_u64[0];
  double v20 = (char *)&v49 - v19;
  id v21 = [*a1 _startDate];
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_5;
  }
  uint64_t v22 = v21;
  uint64_t v58 = v3;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v23(v12, v16, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_5:
    sub_10008DB18((uint64_t)v12, (uint64_t *)&unk_10095B890);
    char v45 = 0;
    return v45 & 1;
  }
  uint64_t v57 = v20;
  v23(v20, v12, v13);
  uint64_t DetailsStackedChartView = type metadata accessor for LoadDetailsStackedChartView(0);
  uint64_t v25 = v59;
  sub_1000AFA94(&qword_1009614F8);
  State.wrappedValue.getter();
  uint64_t v59 = v25 + *(int *)(DetailsStackedChartView + 68);
  id v26 = *(id *)v59;
  uint64_t v27 = v7;
  char v28 = *(unsigned char *)(v59 + 8);
  sub_1001AEDAC(*(id *)v59, v28);
  uint64_t v29 = (char *)sub_1004E75C0(v26, v28);
  sub_1001AEDC8(v26, v28);
  swift_getKeyPath();
  uint64_t v67 = v29;
  uint64_t v55 = sub_100085938(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v30 = &v29[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  uint64_t v56 = v13;
  uint64_t v31 = v63;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  id v52 = v16;
  char v53 = v32;
  uint64_t v54 = v63 + 16;
  double v50 = v27;
  uint64_t v51 = v5;
  v32(v27, v30, v5);

  uint64_t v33 = v62;
  GregorianDayRange.gregorianCalendar.getter();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
  v34(v27, v5);
  uint64_t v35 = v65;
  DayIndex.startDate(in:)();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v64 + 8);
  v36(v33, v58);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v61);
  id v37 = *(id *)v59;
  LOBYTE(v35) = *(unsigned char *)(v59 + 8);
  sub_1001AEDAC(*(id *)v59, (char)v35);
  uint64_t v38 = (char *)sub_1004E75C0(v37, (char)v35);
  sub_1001AEDC8(v37, (char)v35);
  swift_getKeyPath();
  uint64_t v66 = v38;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v39 = &v38[OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__dayRange];
  swift_beginAccess();
  uint64_t v40 = v50;
  uint64_t v41 = v39;
  uint64_t v42 = v51;
  v53(v50, v41, v51);

  GregorianDayRange.gregorianCalendar.getter();
  v34(v40, v42);
  uint64_t v43 = v57;
  uint64_t v44 = v52;
  char v45 = Calendar.isDate(_:inSameDayAs:)();
  v36(v33, v58);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v47 = v56;
  v46(v44, v56);
  v46(v43, v47);
  return v45 & 1;
}

uint64_t sub_10054F784()
{
  return NavigationView.init(content:)();
}

uint64_t sub_10054FAC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v77 = a1;
  uint64_t v67 = type metadata accessor for DynamicTypeSize();
  uint64_t v64 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v63 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_100961C08);
  uint64_t v68 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v61 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000AFA94(&qword_100961C10);
  uint64_t v71 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v62 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000AFA94(&qword_100961C18) - 8;
  __chkstk_darwin(v70);
  uint64_t v65 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000AFA94(&qword_100961C20);
  __chkstk_darwin(v72);
  uint64_t v69 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000AFA94(&qword_100961C68);
  uint64_t v76 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v74 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = static VerticalAlignment.center.getter();
  sub_100553B40((uint64_t)&v80);
  uint64_t v9 = v80;
  uint64_t v10 = v81;
  uint64_t v58 = v80;
  char v11 = v82;
  uint64_t v13 = v83;
  uint64_t v12 = v84;
  uint64_t v60 = v83;
  char v14 = v85;
  uint64_t v15 = v86;
  uint64_t v59 = v86;
  uint64_t v16 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v80 = v57;
  uint64_t v81 = 0;
  char v82 = 1;
  uint64_t v83 = v9;
  uint64_t v84 = v10;
  char v85 = v11;
  uint64_t v86 = v13;
  uint64_t v87 = v12;
  char v88 = v14;
  uint64_t v89 = v15;
  char v90 = 0;
  uint64_t v91 = KeyPath;
  uint64_t v92 = v16;
  static Font.Weight.semibold.getter();
  uint64_t v18 = sub_1000AFA94(&qword_100961C28);
  unint64_t v19 = sub_10055597C();
  double v20 = v61;
  View.fontWeight(_:)();
  sub_1000A06C0(v58, v10, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v21 = v64;
  uint64_t v22 = v63;
  uint64_t v23 = v67;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, enum case for DynamicTypeSize.large(_:), v67);
  uint64_t v80 = v18;
  uint64_t v81 = v19;
  swift_getOpaqueTypeConformance2();
  char v24 = v62;
  uint64_t v25 = v66;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v25);
  id v26 = [self secondaryLabelColor];
  uint64_t v27 = Color.init(_:)();
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = v71;
  uint64_t v30 = (uint64_t)v65;
  uint64_t v31 = v24;
  uint64_t v32 = v24;
  uint64_t v33 = v73;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v65, v31, v73);
  uint64_t v34 = (uint64_t *)(v30 + *(int *)(v70 + 44));
  *uint64_t v34 = v28;
  v34[1] = v27;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v33);
  LOBYTE(v27) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v43 = v69;
  sub_1000AEF2C(v30, v69, &qword_100961C18);
  uint64_t v44 = v72;
  uint64_t v45 = v43 + *(int *)(v72 + 36);
  *(unsigned char *)uint64_t v45 = v27;
  *(void *)(v45 + 8) = v36;
  *(void *)(v45 + 16) = v38;
  *(void *)(v45 + 24) = v40;
  *(void *)(v45 + 32) = v42;
  *(unsigned char *)(v45 + 40) = 0;
  sub_10008DB18(v30, &qword_100961C18);
  uint64_t v46 = (_OWORD *)swift_allocObject();
  long long v47 = v2[1];
  v46[1] = *v2;
  v46[2] = v47;
  v46[3] = v2[2];
  *(_OWORD *)((char *)v46 + 57) = *(_OWORD *)((char *)v2 + 41);
  sub_100555CC8((uint64_t)v2);
  uint64_t v48 = sub_100555B30(&qword_100961C58, &qword_100961C20, (void (*)(void))sub_100555BAC);
  uint64_t v49 = v74;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18(v43, &qword_100961C20);
  long long v78 = *v2;
  char v79 = *((unsigned char *)v2 + 16);
  sub_1000AFA94(&qword_10094E168);
  Binding.projectedValue.getter();
  double v50 = (_OWORD *)swift_allocObject();
  long long v51 = v2[1];
  v50[1] = *v2;
  v50[2] = v51;
  v50[3] = v2[2];
  *(_OWORD *)((char *)v50 + 57) = *(_OWORD *)((char *)v2 + 41);
  id v52 = (_OWORD *)swift_allocObject();
  long long v53 = v2[1];
  v52[1] = *v2;
  v52[2] = v53;
  v52[3] = v2[2];
  *(_OWORD *)((char *)v52 + 57) = *(_OWORD *)((char *)v2 + 41);
  sub_100555CC8((uint64_t)v2);
  sub_100555CC8((uint64_t)v2);
  type metadata accessor for OvernightMetricsReorderingView(0);
  uint64_t v80 = v44;
  uint64_t v81 = v48;
  swift_getOpaqueTypeConformance2();
  sub_100085938(&qword_100961C70, (void (*)(uint64_t))type metadata accessor for OvernightMetricsReorderingView);
  uint64_t v54 = v75;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v49, v54);
}

uint64_t sub_10055038C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  sub_1001A91A8((uint64_t)&v2);
  swift_retain();
  sub_1000AFA94(&qword_10094E168);
  Binding.wrappedValue.getter();
  Binding.wrappedValue.setter();
  sub_100554894((uint64_t)&v2);
  return swift_release();
}

uint64_t sub_100550438()
{
  sub_1000AFA94(&qword_100961C78);
  Binding.wrappedValue.getter();
  sub_1003369F0(v1);
  return swift_bridgeObjectRelease();
}

__n128 sub_100550498@<Q0>(uint64_t *a1@<X8>)
{
  sub_1000AFA94(&qword_100961C78);
  Binding.projectedValue.getter();
  *a1 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094DFC8);
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (char *)a1 + *(int *)(type metadata accessor for OvernightMetricsReorderingView(0) + 20);
  *(void *)uint64_t v2 = v4;
  __n128 result = v5;
  *(__n128 *)(v2 + 8) = v5;
  return result;
}

uint64_t sub_10055053C@<X0>(uint64_t a1@<X8>)
{
  return sub_10054FAC8(a1);
}

uint64_t sub_100550580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v63 = a2;
  uint64_t v3 = type metadata accessor for OvernightMetricsReorderingView(0);
  uint64_t v60 = *(void *)(v3 - 8);
  uint64_t v59 = *(void *)(v60 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v57 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094E150);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  uint64_t v62 = v6;
  __chkstk_darwin(v5);
  uint64_t v58 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  __chkstk_darwin(v8);
  id v52 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EditMode();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100961D50);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100961D38);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  double v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_100961D20);
  uint64_t v50 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_100961D18);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v55 = v24;
  uint64_t v56 = v25;
  __chkstk_darwin(v24);
  uint64_t v64 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = a1;
  sub_1000AFA94(&qword_100961D58);
  sub_1005568F0();
  List<>.init(content:)();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for EditMode.active(_:), v10);
  static Binding.constant(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v28 = sub_1000AFA94(&qword_100961D88);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v16, 0, 1, v28);
  uint64_t v29 = (uint64_t *)&v23[*(int *)(v21 + 36)];
  uint64_t v30 = sub_1000AFA94(&qword_100961D48);
  sub_1000AEF2C((uint64_t)v16, (uint64_t)v29 + *(int *)(v30 + 28), &qword_100961D50);
  *uint64_t v29 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v20, v17);
  sub_10008DB18((uint64_t)v16, &qword_100961D50);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v31 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v33 = v32;
  LOBYTE(v20) = v34 & 1;
  uint64_t v35 = v52;
  uint64_t v36 = v53;
  uint64_t v37 = v54;
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v54);
  unint64_t v38 = sub_100556824();
  uint64_t v39 = v50;
  View.navigationBarTitle(_:displayMode:)();
  sub_1000A06C0(v31, v33, (char)v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
  sub_10008DB18((uint64_t)v23, &qword_100961D20);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v40 = v57;
  sub_1005547CC(v51, v57, type metadata accessor for OvernightMetricsReorderingView);
  unint64_t v41 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v42 = swift_allocObject();
  sub_100556A40(v40, v42 + v41, type metadata accessor for OvernightMetricsReorderingView);
  uint64_t v43 = v58;
  Button<>.init(_:action:)();
  uint64_t v66 = v39;
  unint64_t v67 = v38;
  swift_getOpaqueTypeConformance2();
  sub_1000A132C(&qword_10094E158, &qword_10094E150);
  uint64_t v44 = v43;
  uint64_t v45 = v55;
  uint64_t v46 = v61;
  long long v47 = v64;
  View.navigationBarItems<A>(trailing:)();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v47, v45);
}

uint64_t sub_100550D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = type metadata accessor for OvernightMetricsReorderingView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v17 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v17 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = sub_1000AFA94(&qword_100961D70);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1 + *(int *)(v4 + 28);
  uint64_t v19 = *(void **)v10;
  long long v20 = *(_OWORD *)(v10 + 8);
  sub_1000AFA94(&qword_100961C78);
  Binding.wrappedValue.getter();
  swift_getKeyPath();
  sub_1000AFA94(&qword_1009614E8);
  sub_1000AFA94(&qword_100961D90);
  sub_1000A132C(&qword_100961D98, &qword_1009614E8);
  uint64_t v19 = &type metadata for Text;
  *(void *)&long long v20 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  ForEach<>.init(_:id:content:)();
  sub_1005547CC(a1, (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for OvernightMetricsReorderingView);
  unint64_t v11 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v12 = swift_allocObject();
  sub_100556A40((uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for OvernightMetricsReorderingView);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100556C10;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v18, v9, v6);
  uint64_t v15 = (void *)(v14 + *(int *)(sub_1000AFA94(&qword_100961D58) + 36));
  *uint64_t v15 = sub_100556CC8;
  v15[1] = v13;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100551064()
{
  SleepingSampleDataType.localizedName.getter();
  sub_1000A06D0();
  uint64_t v0 = Text.init<A>(_:)();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  static Font.headline.getter();
  uint64_t v5 = Text.font(_:)();
  uint64_t v7 = v6;
  char v9 = v8;
  swift_release();
  sub_1000A06C0(v0, v2, v4);
  swift_bridgeObjectRelease();
  static VerticalEdge.Set.all.getter();
  View.listRowSeparator(_:edges:)();
  sub_1000A06C0(v5, v7, v9 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10055117C()
{
  return swift_release();
}

uint64_t sub_1005512A0()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004E7580((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100551370()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_100551394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100548CF0(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

void *sub_1005513D4(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t DataType = type metadata accessor for TrainingLoadDataType();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(DataType - 8) + 16))(v9, v10, DataType);
    uint64_t v12 = a3[5];
    uint64_t v13 = a3[6];
    uint64_t v14 = *(void **)((char *)a2 + v12);
    *(void *)((char *)a1 + v12) = v14;
    uint64_t v64 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v64;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (void *)((char *)a1 + v15);
    uint64_t v18 = (void *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    long long v20 = (void *)((char *)a1 + v16);
    uint64_t v21 = (char *)a2 + v16;
    uint64_t v60 = *(void **)v21;
    uint64_t v61 = *((void *)v21 + 1);
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = *(void *)((char *)a2 + v22);
    *long long v20 = v60;
    v20[1] = v61;
    *(void *)((char *)a1 + v22) = v24;
    uint64_t v25 = (char *)a1 + v23;
    *uint64_t v25 = *((unsigned char *)a2 + v23);
    *((void *)v25 + 1) = *(void *)((char *)a2 + v23 + 8);
    uint64_t v26 = a3[11];
    uint64_t v62 = (char *)a2 + v26;
    uint64_t v63 = (char *)a1 + v26;
    uint64_t v66 = type metadata accessor for DayIndex();
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
    id v27 = v14;
    id v28 = v64;
    swift_bridgeObjectRetain();
    swift_retain();
    id v29 = v60;
    swift_retain();
    swift_retain();
    v65(v63, v62, v66);
    uint64_t v30 = sub_1000AFA94(&qword_1009614F8);
    *(void *)&v63[*(int *)(v30 + 28)] = *(void *)&v62[*(int *)(v30 + 28)];
    uint64_t v31 = a3[12];
    uint64_t v32 = a3[13];
    uint64_t v33 = (char *)a1 + v31;
    char v34 = (char *)a2 + v31;
    *uint64_t v33 = *v34;
    *((void *)v33 + 1) = *((void *)v34 + 1);
    uint64_t v35 = (void *)((char *)a1 + v32);
    uint64_t v36 = (void *)((char *)a2 + v32);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = a3[14];
    uint64_t v39 = a3[15];
    uint64_t v40 = (char *)a1 + v38;
    unint64_t v41 = (char *)a2 + v38;
    *uint64_t v40 = *v41;
    uint64_t v42 = *(void **)((char *)a2 + v39);
    *((void *)v40 + 1) = *((void *)v41 + 1);
    *(void *)((char *)a1 + v39) = v42;
    uint64_t v43 = a3[16];
    uint64_t v44 = (char *)a1 + v43;
    uint64_t v45 = (char *)a2 + v43;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v46 = v42;
    v65(v44, v45, v66);
    uint64_t v47 = a3[17];
    uint64_t v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    id v50 = *(id *)v49;
    LOBYTE(v10) = v49[8];
    sub_1001AEDAC(*(id *)v49, (char)v10);
    *(void *)uint64_t v48 = v50;
    v48[8] = (char)v10;
    uint64_t v51 = a3[18];
    id v52 = (void *)((char *)a1 + v51);
    uint64_t v53 = (void *)((char *)a2 + v51);
    sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v54 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    }
    else
    {
      void *v52 = *v53;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = a3[19];
    uint64_t v56 = (void *)((char *)a1 + v55);
    uint64_t v57 = (void *)((char *)a2 + v55);
    sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    }
    else
    {
      *uint64_t v56 = *v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005517E0(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(DataType - 8) + 8))(v4, DataType);

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  uint64_t v6 = a1 + a2[11];
  uint64_t v7 = type metadata accessor for DayIndex();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  sub_1000AFA94(&qword_1009614F8);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  v8(a1 + a2[16], v7);
  sub_1001AEDC8(*(id *)(a1 + a2[17]), *(unsigned char *)(a1 + a2[17] + 8));
  uint64_t v9 = a1 + a2[18];
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[19];
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for LayoutDirection();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100551A94(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(DataType - 8) + 16))(v8, v9, DataType);
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v13;
  uint64_t v63 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v63;
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  long long v20 = (char *)a2 + v15;
  uint64_t v59 = *(void **)v20;
  uint64_t v60 = *((void *)v20 + 1);
  uint64_t v21 = a3[9];
  uint64_t v22 = a3[10];
  uint64_t v23 = *(void *)((char *)a2 + v21);
  *uint64_t v19 = v59;
  v19[1] = v60;
  *(void *)((char *)a1 + v21) = v23;
  uint64_t v24 = (char *)a1 + v22;
  *uint64_t v24 = *((unsigned char *)a2 + v22);
  *((void *)v24 + 1) = *(void *)((char *)a2 + v22 + 8);
  uint64_t v25 = a3[11];
  uint64_t v61 = (char *)a2 + v25;
  uint64_t v62 = (char *)a1 + v25;
  uint64_t v65 = type metadata accessor for DayIndex();
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
  id v26 = v13;
  id v27 = v63;
  swift_bridgeObjectRetain();
  swift_retain();
  id v28 = v59;
  swift_retain();
  swift_retain();
  v64(v62, v61, v65);
  uint64_t v29 = sub_1000AFA94(&qword_1009614F8);
  *(void *)&v62[*(int *)(v29 + 28)] = *(void *)&v61[*(int *)(v29 + 28)];
  uint64_t v30 = a3[12];
  uint64_t v31 = a3[13];
  uint64_t v32 = (char *)a1 + v30;
  uint64_t v33 = (char *)a2 + v30;
  *uint64_t v32 = *v33;
  *((void *)v32 + 1) = *((void *)v33 + 1);
  char v34 = (void *)((char *)a1 + v31);
  uint64_t v35 = (void *)((char *)a2 + v31);
  uint64_t v36 = v35[1];
  *char v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a3[14];
  uint64_t v38 = a3[15];
  uint64_t v39 = (char *)a1 + v37;
  uint64_t v40 = (char *)a2 + v37;
  *uint64_t v39 = *v40;
  unint64_t v41 = *(void **)((char *)a2 + v38);
  *((void *)v39 + 1) = *((void *)v40 + 1);
  *(void *)((char *)a1 + v38) = v41;
  uint64_t v42 = a3[16];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v45 = v41;
  v64(v43, v44, v65);
  uint64_t v46 = a3[17];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  id v49 = *(id *)v48;
  LOBYTE(v9) = v48[8];
  sub_1001AEDAC(*(id *)v48, (char)v9);
  *(void *)uint64_t v47 = v49;
  v47[8] = (char)v9;
  uint64_t v50 = a3[18];
  uint64_t v51 = (void *)((char *)a1 + v50);
  id v52 = (void *)((char *)a2 + v50);
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  }
  else
  {
    *uint64_t v51 = *v52;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = a3[19];
  uint64_t v55 = (void *)((char *)a1 + v54);
  uint64_t v56 = (void *)((char *)a2 + v54);
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v57 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
  }
  else
  {
    *uint64_t v55 = *v56;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100551E48(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(DataType - 8) + 24))(v7, v8, DataType);
  uint64_t v10 = a3[5];
  uint64_t v11 = *(void **)&a1[v10];
  uint64_t v12 = *(void **)&a2[v10];
  *(void *)&a1[v10] = v12;
  id v13 = v12;

  uint64_t v14 = a3[6];
  uint64_t v15 = *(void **)&a1[v14];
  uint64_t v16 = *(void **)&a2[v14];
  *(void *)&a1[v14] = v16;
  id v17 = v16;

  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  long long v20 = &a2[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_retain();
  swift_release();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *(void **)&a1[v21];
  uint64_t v25 = *(void **)&a2[v21];
  *(void *)uint64_t v22 = v25;
  id v26 = v25;

  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_retain();
  swift_release();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v27 = a3[10];
  id v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *id v28 = *v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_retain();
  swift_release();
  uint64_t v30 = a3[11];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for DayIndex();
  char v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24);
  v34(v31, v32, v33);
  uint64_t v35 = sub_1000AFA94(&qword_1009614F8);
  *(void *)&v31[*(int *)(v35 + 28)] = *(void *)&v32[*(int *)(v35 + 28)];
  swift_retain();
  swift_release();
  uint64_t v36 = a3[12];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  *uint64_t v37 = *v38;
  *((void *)v37 + 1) = *((void *)v38 + 1);
  swift_retain();
  swift_release();
  uint64_t v39 = a3[13];
  uint64_t v40 = &a1[v39];
  unint64_t v41 = &a2[v39];
  *(void *)&a1[v39] = *(void *)&a2[v39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v40 + 1) = *((void *)v41 + 1);
  swift_retain();
  swift_release();
  uint64_t v42 = a3[14];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  *uint64_t v43 = *v44;
  *((void *)v43 + 1) = *((void *)v44 + 1);
  swift_retain();
  swift_release();
  uint64_t v45 = a3[15];
  uint64_t v46 = *(void **)&a2[v45];
  uint64_t v47 = *(void **)&a1[v45];
  *(void *)&a1[v45] = v46;
  id v48 = v46;

  v34(&a1[a3[16]], &a2[a3[16]], v33);
  uint64_t v49 = a3[17];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  id v52 = *(id *)v51;
  LOBYTE(v47) = v51[8];
  sub_1001AEDAC(*(id *)v51, (char)v47);
  uint64_t v53 = *(void **)v50;
  char v54 = v50[8];
  *(void *)uint64_t v50 = v52;
  v50[8] = (char)v47;
  sub_1001AEDC8(v53, v54);
  if (a1 != a2)
  {
    uint64_t v55 = a3[18];
    uint64_t v56 = &a1[v55];
    uint64_t v57 = &a2[v55];
    sub_10008DB18((uint64_t)&a1[v55], &qword_10094DFC8);
    sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    }
    else
    {
      *(void *)uint64_t v56 = *(void *)v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = a3[19];
    uint64_t v60 = &a1[v59];
    uint64_t v61 = &a2[v59];
    sub_10008DB18((uint64_t)&a1[v59], &qword_100968CD0);
    sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v62 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
    }
    else
    {
      *(void *)uint64_t v60 = *(void *)v61;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1005522AC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(DataType - 8) + 32))(v8, v9, DataType);
  uint64_t v11 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  uint64_t v12 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  uint64_t v13 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[11];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for DayIndex();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  uint64_t v19 = sub_1000AFA94(&qword_1009614F8);
  *(void *)&v15[*(int *)(v19 + 28)] = *(void *)&v16[*(int *)(v19 + 28)];
  uint64_t v20 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  uint64_t v21 = a3[15];
  *(_OWORD *)&a1[a3[14]] = *(_OWORD *)&a2[a3[14]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  v18(&a1[a3[16]], &a2[a3[16]], v17);
  uint64_t v22 = a3[17];
  uint64_t v23 = a3[18];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  id v26 = &a1[v23];
  uint64_t v27 = &a2[v23];
  uint64_t v28 = sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  uint64_t v30 = a3[19];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  return a1;
}

char *sub_100552588(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_release();
  uint64_t v6 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(DataType - 8) + 40))(v7, v8, DataType);
  uint64_t v10 = a3[5];
  uint64_t v11 = *(void **)&a1[v10];
  *(void *)&a1[v10] = *(void *)&a2[v10];

  uint64_t v12 = a3[6];
  uint64_t v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_bridgeObjectRelease();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void **)&a1[v17];
  *(void *)uint64_t v18 = *(void *)v19;

  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_release();
  uint64_t v21 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *uint64_t v22 = *v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_release();
  uint64_t v24 = a3[11];
  uint64_t v25 = &a1[v24];
  id v26 = &a2[v24];
  uint64_t v27 = type metadata accessor for DayIndex();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40);
  v28(v25, v26, v27);
  uint64_t v29 = sub_1000AFA94(&qword_1009614F8);
  *(void *)&v25[*(int *)(v29 + 28)] = *(void *)&v26[*(int *)(v29 + 28)];
  swift_release();
  uint64_t v30 = a3[12];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  *uint64_t v31 = *v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_release();
  uint64_t v33 = a3[13];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *(void *)&a1[v33] = *(void *)&a2[v33];
  swift_bridgeObjectRelease();
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_release();
  uint64_t v36 = a3[14];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  *uint64_t v37 = *v38;
  *((void *)v37 + 1) = *((void *)v38 + 1);
  swift_release();
  uint64_t v39 = a3[15];
  uint64_t v40 = *(void **)&a1[v39];
  *(void *)&a1[v39] = *(void *)&a2[v39];

  v28(&a1[a3[16]], &a2[a3[16]], v27);
  uint64_t v41 = a3[17];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  uint64_t v44 = *(void *)v43;
  LOBYTE(v43) = v43[8];
  uint64_t v45 = *(void **)v42;
  char v46 = v42[8];
  *(void *)uint64_t v42 = v44;
  v42[8] = (char)v43;
  sub_1001AEDC8(v45, v46);
  if (a1 != a2)
  {
    uint64_t v47 = a3[18];
    id v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    sub_10008DB18((uint64_t)&a1[v47], &qword_10094DFC8);
    uint64_t v50 = sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v48, v49, v51);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    uint64_t v52 = a3[19];
    uint64_t v53 = &a1[v52];
    char v54 = &a2[v52];
    sub_10008DB18((uint64_t)&a1[v52], &qword_100968CD0);
    uint64_t v55 = sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v56 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v53, v54, v56);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10055298C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005529A0);
}

uint64_t sub_1005529A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_1009614F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[7]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = sub_1000AFA94(&qword_1009614F8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[11];
LABEL_13:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_14;
  }
  uint64_t v16 = type metadata accessor for DayIndex();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[16];
    goto LABEL_13;
  }
  uint64_t v17 = sub_1000AFA94(&qword_10094DFD0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[18];
    goto LABEL_13;
  }
  uint64_t v18 = sub_1000AFA94(&qword_100961500);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[19];

  return v19(v21, a2, v20);
}

uint64_t sub_100552BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100552BDC);
}

uint64_t sub_100552BDC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000AFA94(&qword_1009614F0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7]) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_1000AFA94(&qword_1009614F8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[11];
LABEL_11:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = type metadata accessor for DayIndex();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_11;
  }
  uint64_t v17 = sub_1000AFA94(&qword_10094DFD0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[18];
    goto LABEL_11;
  }
  uint64_t v18 = sub_1000AFA94(&qword_100961500);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[19];

  return v19(v21, a2, a2, v20);
}

void sub_100552E04()
{
  sub_100553094(319, (unint64_t *)&qword_100961570, (uint64_t (*)(uint64_t))&type metadata accessor for TrainingLoadDataType, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v0 <= 0x3F)
  {
    sub_100553094(319, &qword_100961578, (uint64_t (*)(uint64_t))&type metadata accessor for DayIndex, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F)
    {
      type metadata accessor for DayIndex();
      if (v2 <= 0x3F)
      {
        sub_100553094(319, (unint64_t *)&qword_10094E040, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F)
        {
          sub_100553094(319, (unint64_t *)&qword_100961580, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_100553094(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1005530F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100553114@<X0>(uint64_t a1@<X8>)
{
  return sub_10053F83C(*(void *)(v1 + 16), a1);
}

unint64_t sub_10055311C()
{
  unint64_t result = qword_100961640;
  if (!qword_100961640)
  {
    sub_1000A1370(&qword_100961648);
    sub_1000A132C(&qword_100961650, &qword_100961658);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961640);
  }
  return result;
}

uint64_t sub_1005531BC()
{
  return sub_10055503C(&qword_100961668, &qword_100961670, (void (*)(void))sub_1005531F8);
}

unint64_t sub_1005531F8()
{
  unint64_t result = qword_100961678;
  if (!qword_100961678)
  {
    sub_10007E2D8(255, &qword_100954730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961678);
  }
  return result;
}

uint64_t sub_100553264()
{
  return sub_1005532C0(type metadata accessor for LoadDetailsStackedChartView, (uint64_t (*)(uint64_t))sub_10054C8A0);
}

uint64_t sub_100553294()
{
  return sub_1005532C0(type metadata accessor for LoadDetailsStackedChartView, (uint64_t (*)(uint64_t))sub_10054CD00);
}

uint64_t sub_1005532C0(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

uint64_t sub_100553340(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for LoadDetailsStackedChartView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10054CEB8(a1, a2, v6);
}

uint64_t sub_1005533C0()
{
  return NavigationView.init(content:)();
}

uint64_t sub_1005534E0@<X0>(void *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v67 = a3;
  uint64_t v65 = a1;
  uint64_t v66 = a2;
  uint64_t v68 = a4;
  uint64_t v58 = type metadata accessor for DynamicTypeSize();
  uint64_t v55 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  char v54 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_100961C08);
  uint64_t v59 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v52 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000AFA94(&qword_100961C10);
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v53 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000AFA94(&qword_100961C18) - 8;
  __chkstk_darwin(v61);
  uint64_t v56 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000AFA94(&qword_100961C20);
  __chkstk_darwin(v63);
  uint64_t v60 = (uint64_t)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = static VerticalAlignment.center.getter();
  sub_100553B40((uint64_t)&v69);
  uint64_t v10 = v69;
  uint64_t v11 = v70;
  char v12 = v71;
  uint64_t v14 = v72;
  uint64_t v13 = v73;
  v51[2] = v72;
  char v15 = v74;
  uint64_t v16 = v75;
  v51[1] = v75;
  uint64_t v17 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v69 = v9;
  unint64_t v70 = 0;
  char v71 = 1;
  uint64_t v72 = v10;
  uint64_t v73 = v11;
  char v74 = v12;
  uint64_t v75 = v14;
  uint64_t v76 = v13;
  char v77 = v15;
  uint64_t v78 = v16;
  char v79 = 0;
  uint64_t v80 = KeyPath;
  uint64_t v81 = v17;
  static Font.Weight.semibold.getter();
  uint64_t v19 = sub_1000AFA94(&qword_100961C28);
  unint64_t v20 = sub_10055597C();
  uint64_t v21 = v52;
  View.fontWeight(_:)();
  sub_1000A06C0(v10, v11, v12);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = v55;
  uint64_t v23 = v54;
  uint64_t v24 = v58;
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, enum case for DynamicTypeSize.large(_:), v58);
  uint64_t v69 = v19;
  unint64_t v70 = v20;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v53;
  uint64_t v26 = v57;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v21, v26);
  id v27 = [self secondaryLabelColor];
  uint64_t v28 = Color.init(_:)();
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = v62;
  uint64_t v31 = v56;
  uint64_t v32 = v64;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v56, v25, v64);
  uint64_t v33 = (uint64_t *)&v31[*(int *)(v61 + 44)];
  uint64_t v34 = (uint64_t)v31;
  *uint64_t v33 = v29;
  v33[1] = v28;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v32);
  LOBYTE(v28) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v43 = (uint64_t)v31;
  uint64_t v44 = v60;
  sub_1000AEF2C(v43, v60, &qword_100961C18);
  uint64_t v45 = v44 + *(int *)(v63 + 36);
  *(unsigned char *)uint64_t v45 = v28;
  *(void *)(v45 + 8) = v36;
  *(void *)(v45 + 16) = v38;
  *(void *)(v45 + 24) = v40;
  *(void *)(v45 + 32) = v42;
  *(unsigned char *)(v45 + 40) = 0;
  sub_10008DB18(v34, &qword_100961C18);
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v65;
  id v48 = v66;
  *(void *)(v46 + 16) = v65;
  *(void *)(v46 + 24) = v48;
  LOBYTE(v29) = v67 & 1;
  *(unsigned char *)(v46 + 32) = v67 & 1;
  id v49 = v47;
  sub_1001AEDAC(v48, v29);
  sub_100555B30(&qword_100961C58, &qword_100961C20, (void (*)(void))sub_100555BAC);
  View.onTapGesture(count:perform:)();
  swift_release();
  return sub_10008DB18(v44, &qword_100961C20);
}

uint64_t sub_100553B40@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = Image.init(systemName:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  sub_1000A1750(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v2, v4, v8);

  return swift_bridgeObjectRelease();
}

void sub_100553C20(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EffortUtilities.OvernightVitalsState();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    char v14 = a3 & 1;
    sub_1001AEDAC(a2, v14);
    id v15 = sub_1004E75C0(a2, v14);
    sub_1001AEDC8(a2, v14);
    sub_10021BB94();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    OvernightMetricsViewModel.overnightVitalsState.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1004AF4A4((uint64_t)v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_100553DF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1005534E0(*(void **)v1, *(void **)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_100553E08()
{
  return sub_10054CAB8();
}

uint64_t sub_100553E68(uint64_t a1, uint64_t a2)
{
  return sub_100553E9C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10054CF68);
}

uint64_t sub_100553E84(uint64_t a1, uint64_t a2)
{
  return sub_100553E9C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10054D164);
}

uint64_t sub_100553E9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for LoadDetailsStackedChartView(0) - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7);
}

uint64_t sub_100553F30()
{
  return sub_10054D52C(*(void *)(v0 + 16));
}

uint64_t sub_100553F38@<X0>(uint64_t a1@<X8>)
{
  return sub_10054D6D0(*(void *)(v1 + 16), a1);
}

uint64_t sub_100553F44()
{
  return sub_1005532C0(type metadata accessor for LoadDetailsStackedChartView, (uint64_t (*)(uint64_t))sub_10054DA7C);
}

void sub_100553F88(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_10054EC44(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100553FAC(id *a1)
{
  return sub_10054F10C(a1, *(void *)(v1 + 16)) & 1;
}

char *sub_100553FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SleepingSampleDataType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v54 = (char *)&v39 - v9;
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v39 - v12;
  unint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v57 = (char *)_swiftEmptyArrayStorage;
  uint64_t v49 = *(void *)(a1 + 16);
  if (!v49) {
    return result;
  }
  uint64_t v15 = 0;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v17 = v6 + 16;
  uint64_t v16 = v18;
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64);
  uint64_t v20 = *(void *)(v17 + 56);
  uint64_t v48 = a1 + v19;
  uint64_t v21 = (void (**)(char *, uint64_t))(v17 - 8);
  uint64_t v43 = a2;
  uint64_t v44 = a2 + v19;
  uint64_t v41 = a2 + v19 + v20;
  unint64_t v42 = v19;
  uint64_t v46 = (void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v56 = v20;
  uint64_t v39 = v2;
  uint64_t v40 = a2 + v19 + 2 * v20;
  uint64_t v50 = v17;
  uint64_t v51 = (void (**)(char *, uint64_t))(v17 - 8);
  uint64_t v22 = v54;
  ((void (*)(char *, unint64_t, uint64_t, __n128))v18)(v13, a1 + v19, v5, v11);
  while (1)
  {
    uint64_t v55 = *(void *)(a2 + 16);
    if (!v55)
    {
      (*v21)(v13, v5);
      goto LABEL_4;
    }
    uint64_t v45 = (unint64_t)v21 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v16(v22, v44, v5);
    uint64_t v24 = sub_100085938(&qword_1009616B0, (void (*)(uint64_t))&type metadata accessor for SleepingSampleDataType);
    swift_bridgeObjectRetain();
    uint64_t v52 = v24;
    char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v22 = v54;
    char v26 = v25;
    uint64_t v53 = *v21;
    v53(v54, v5);
    if ((v26 & 1) == 0)
    {
      if (v55 == 1) {
        goto LABEL_22;
      }
      v16(v22, v41, v5);
      char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = v54;
      char v28 = v27;
      v53(v54, v5);
      if ((v28 & 1) == 0) {
        break;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v29 = *v46;
    (*v46)(v47, v13, v5);
    uint64_t v30 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1001C9048(0, *((void *)v30 + 2) + 1, 1);
      uint64_t v22 = v54;
      uint64_t v30 = v57;
    }
    unint64_t v32 = *((void *)v30 + 2);
    unint64_t v31 = *((void *)v30 + 3);
    if (v32 >= v31 >> 1)
    {
      sub_1001C9048(v31 > 1, v32 + 1, 1);
      uint64_t v22 = v54;
      uint64_t v30 = v57;
    }
    *((void *)v30 + 2) = v32 + 1;
    v29(&v30[v42 + v32 * v56], v47, v5);
    uint64_t v57 = v30;
    a2 = v43;
    uint64_t v21 = v51;
LABEL_4:
    if (++v15 == v49) {
      return v57;
    }
    ((void (*)(char *, uint64_t, uint64_t, __n128))v16)(v13, v48 + v56 * v15, v5, v23);
  }
  if (v55 == 2)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    v53(v13, v5);
    goto LABEL_4;
  }
  uint64_t v33 = v40;
  uint64_t v34 = 2;
  while (1)
  {
    unint64_t result = (char *)((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v22, v33, v5);
    uint64_t v35 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    uint64_t v36 = v22;
    char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v38 = v36;
    uint64_t v21 = v51;
    v53(v38, v5);
    if (v37)
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = v54;
      goto LABEL_11;
    }
    ++v34;
    v33 += v56;
    uint64_t v22 = v54;
    if (v35 == v55)
    {
      a2 = v43;
      goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100554428@<X0>(uint64_t a1@<X8>)
{
  return sub_100546338(*(void *)(v1 + 16), a1);
}

unint64_t sub_100554430()
{
  unint64_t result = qword_100961758;
  if (!qword_100961758)
  {
    sub_1000A1370(&qword_100961750);
    sub_100555B30(&qword_100961760, &qword_100961768, (void (*)(void))sub_1005544FC);
    sub_1000A132C(&qword_1009617A0, &qword_1009617A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961758);
  }
  return result;
}

uint64_t sub_1005544FC()
{
  return sub_100555B30(&qword_100961770, &qword_100961778, (void (*)(void))sub_10055452C);
}

unint64_t sub_10055452C()
{
  unint64_t result = qword_100961780;
  if (!qword_100961780)
  {
    sub_1000A1370(&qword_100961788);
    sub_1000A132C(&qword_100961790, &qword_100961798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961780);
  }
  return result;
}

uint64_t sub_1005545CC()
{
  return SleepingSampleViewModel.dataType.getter();
}

uint64_t sub_1005545F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100548CF0(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for SleepingSampleDataType, (uint64_t (*)(char *))&SleepingSampleViewModel.dataType.setter);
}

uint64_t sub_100554634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LoadDetailsStackedChartView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100548DC0(a1, v6, a2);
}

uint64_t sub_1005546C0()
{
  return sub_1005532C0(type metadata accessor for LoadDetailsStackedChartView, sub_10054876C);
}

uint64_t sub_1005546EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1005489E8(a1);
}

unint64_t sub_1005546F4()
{
  unint64_t result = qword_100961848;
  if (!qword_100961848)
  {
    sub_1000A1370(&qword_100961840);
    sub_10055503C((unint64_t *)&qword_100959898, &qword_1009598A0, (void (*)(void))sub_10038CA4C);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961848);
  }
  return result;
}

uint64_t sub_1005547CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100554834(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100554894(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005548C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005C7A78(a1, a2);
}

unint64_t sub_1005548DC()
{
  unint64_t result = qword_100961910;
  if (!qword_100961910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961910);
  }
  return result;
}

unint64_t sub_100554930()
{
  unint64_t result = qword_100961928;
  if (!qword_100961928)
  {
    sub_1000A1370(&qword_100961908);
    sub_1005548DC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961928);
  }
  return result;
}

uint64_t sub_1005549DC(uint64_t a1)
{
  return sub_100554A10(a1, sub_10054DB60);
}

uint64_t sub_1005549F8(uint64_t a1)
{
  return sub_100554A10(a1, sub_10054E85C);
}

uint64_t sub_100554A10(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for LoadDetailsStackedChartView(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_100554A98()
{
  type metadata accessor for LoadDetailsStackedChartView(0);

  return sub_10054EBD8();
}

unint64_t sub_100554B10()
{
  unint64_t result = qword_1009619C8;
  if (!qword_1009619C8)
  {
    sub_1000A1370(&qword_1009619C0);
    sub_100554BB0();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009619C8);
  }
  return result;
}

unint64_t sub_100554BB0()
{
  unint64_t result = qword_1009619D0;
  if (!qword_1009619D0)
  {
    sub_1000A1370(&qword_1009619D8);
    sub_1000A132C(&qword_1009619E0, &qword_1009619E8);
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009619D0);
  }
  return result;
}

uint64_t sub_100554C74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v5 = *(void *)(a1 + 120);
  sub_100554D14(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  sub_1000A1760(v2, v3, v4, v5);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100554D14(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  sub_1000A06C0(a1, a2, a3 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  if ((a9 & 1) == 0)
  {
    return sub_1000A1760(a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_100554DA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  sub_1000A1750(a1, a2, a3 & 1);
  uint64_t result = swift_bridgeObjectRetain();
  if ((a9 & 1) == 0)
  {
    return sub_1000A17A4(a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_100554E2C()
{
  return sub_100545434();
}

uint64_t sub_100554E34()
{
  return sub_100545C0C(*(void *)(v0 + 16));
}

uint64_t sub_100554E3C@<X0>(uint64_t a1@<X8>)
{
  return sub_100545DAC(*(void *)(v1 + 16), a1);
}

unint64_t sub_100554E44()
{
  unint64_t result = qword_100961AD0;
  if (!qword_100961AD0)
  {
    sub_1000A1370(&qword_100961AC0);
    sub_1000A132C(&qword_1009532A8, &qword_1009532B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961AD0);
  }
  return result;
}

unint64_t sub_100554EE4()
{
  unint64_t result = qword_100961AD8;
  if (!qword_100961AD8)
  {
    sub_1000A1370(&qword_100961AC8);
    sub_100554F84();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961AD8);
  }
  return result;
}

unint64_t sub_100554F84()
{
  unint64_t result = qword_100961AE0;
  if (!qword_100961AE0)
  {
    sub_1000A1370(&qword_100961AE8);
    sub_1002857C0();
    sub_1000A132C(&qword_100961AF0, &qword_100959E78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961AE0);
  }
  return result;
}

uint64_t sub_100555034()
{
  return sub_1005455D4(*(void *)(v0 + 16));
}

uint64_t sub_10055503C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005550A8()
{
  unint64_t result = qword_100961B10;
  if (!qword_100961B10)
  {
    sub_1000A1370(&qword_100961B18);
    sub_100555148();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961B10);
  }
  return result;
}

unint64_t sub_100555148()
{
  unint64_t result = qword_100961B20;
  if (!qword_100961B20)
  {
    sub_1000A1370(&qword_100961B28);
    sub_1005551E8();
    sub_1000A132C(&qword_100961B50, &qword_100961B58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961B20);
  }
  return result;
}

unint64_t sub_1005551E8()
{
  unint64_t result = qword_100961B30;
  if (!qword_100961B30)
  {
    sub_1000A1370(&qword_100961B38);
    sub_1000A132C(&qword_100961B40, &qword_100961B48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961B30);
  }
  return result;
}

uint64_t sub_100555288()
{
  return TrainingLoadViewModel.dataType.getter();
}

unint64_t sub_1005552AC()
{
  unint64_t result = qword_100961BD8;
  if (!qword_100961BD8)
  {
    sub_1000A1370(&qword_100961BC0);
    sub_100085938(&qword_100961BE0, (void (*)(uint64_t))&type metadata accessor for TrainingLoadChart);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961BD8);
  }
  return result;
}

unint64_t sub_100555358()
{
  unint64_t result = qword_100961BE8;
  if (!qword_100961BE8)
  {
    sub_1000A1370(&qword_100961BA0);
    sub_1000A132C(&qword_100961918, &qword_1009618D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961BE8);
  }
  return result;
}

void destroy for LearnMoreButton(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);

  sub_1001AEDC8(v2, v3);
}

uint64_t _s10FitnessApp15LearnMoreButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 16);
  id v6 = v3;
  sub_1001AEDAC(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LearnMoreButton(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void **)a1;
  char v5 = *a2;
  *(void *)a1 = *a2;
  id v6 = v5;

  uint64_t v7 = v2[1];
  LOBYTE(v2) = *((unsigned char *)v2 + 16);
  sub_1001AEDAC(v7, (char)v2);
  uint64_t v8 = *(void **)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = (_BYTE)v2;
  sub_1001AEDC8(v8, v9);
  return a1;
}

uint64_t assignWithTake for LearnMoreButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  char v5 = *(unsigned char *)(a2 + 16);
  id v6 = *(void **)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1001AEDC8(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for LearnMoreButton(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LearnMoreButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LearnMoreButton()
{
  return &type metadata for LearnMoreButton;
}

void destroy for ReorderOvernightMetricsButtonView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);

  sub_1001AEDC8(v2, v3);
}

uint64_t initializeWithCopy for ReorderOvernightMetricsButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  char v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AEDAC(v5, v6);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = v6;
  return a1;
}

uint64_t assignWithCopy for ReorderOvernightMetricsButtonView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = v2[1];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)v2 + 16);
  *(void *)(a1 + 24) = v2[3];
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = v2[4];
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_1001AEDAC(v4, (char)v2);
  char v5 = *(void **)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_1001AEDC8(v5, v6);
  return a1;
}

uint64_t assignWithTake for ReorderOvernightMetricsButtonView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 56);
  char v5 = *(void **)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v4;
  sub_1001AEDC8(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReorderOvernightMetricsButtonView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReorderOvernightMetricsButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReorderOvernightMetricsButtonView()
{
  return &type metadata for ReorderOvernightMetricsButtonView;
}

uint64_t sub_100555908()
{
  return sub_1000A132C(&qword_100961BF8, &qword_100961C00);
}

uint64_t sub_100555944()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100555960()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10055597C()
{
  unint64_t result = qword_100961C30;
  if (!qword_100961C30)
  {
    sub_1000A1370(&qword_100961C28);
    sub_100555A1C();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961C30);
  }
  return result;
}

unint64_t sub_100555A1C()
{
  unint64_t result = qword_100961C38;
  if (!qword_100961C38)
  {
    sub_1000A1370(&qword_100961C40);
    sub_1000A132C(&qword_100961C48, &qword_100961C50);
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961C38);
  }
  return result;
}

uint64_t sub_100555AE0()
{
  sub_1001AEDC8(*(id *)(v0 + 24), *(unsigned char *)(v0 + 32));

  return swift_deallocObject();
}

void sub_100555B24()
{
  sub_100553C20(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_100555B30(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100555BAC()
{
  unint64_t result = qword_100961C60;
  if (!qword_100961C60)
  {
    sub_1000A1370(&qword_100961C18);
    sub_1000A1370(&qword_100961C08);
    sub_1000A1370(&qword_100961C28);
    sub_10055597C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961C60);
  }
  return result;
}

uint64_t sub_100555CC0()
{
  return sub_10055038C((uint64_t *)(v0 + 16));
}

uint64_t sub_100555CC8(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1001AEDAC(v2, v3);
  return a1;
}

uint64_t sub_100555D4C()
{
  return sub_100550438();
}

uint64_t sub_100555D58()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1001AEDC8(*(id *)(v0 + 64), *(unsigned char *)(v0 + 72));

  return swift_deallocObject();
}

double sub_100555DBC@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_100550498(a1).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for OvernightMetricsReorderingView(uint64_t a1)
{
  return sub_10009CFF8(a1, qword_100961CD8);
}

uint64_t *sub_100555DE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    __n128 v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    v10[2] = v11[2];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100555F24(uint64_t a1)
{
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_100555FD8(void *a1, void *a2, uint64_t a3)
{
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1005560C8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094DFC8);
    sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  *((void *)v8 + 2) = *((void *)v9 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1005561F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((void *)v9 + 2) = *((void *)v10 + 2);
  return a1;
}

char *sub_1005562D8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094DFC8);
    uint64_t v6 = sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)v10;
  swift_release();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  *((void *)v9 + 2) = *((void *)v10 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005563F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100556408);
}

uint64_t sub_100556408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094DFD0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1005564D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005564E4);
}

uint64_t sub_1005564E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094DFD0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1005565A8()
{
  sub_100553094(319, (unint64_t *)&qword_10094E040, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10055666C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005566F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100556800()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10055681C@<X0>(uint64_t a1@<X8>)
{
  return sub_100550580(*(void *)(v1 + 16), a1);
}

unint64_t sub_100556824()
{
  unint64_t result = qword_100961D28;
  if (!qword_100961D28)
  {
    sub_1000A1370(&qword_100961D20);
    sub_1000A132C(&qword_100961D30, &qword_100961D38);
    sub_1000A132C(&qword_100961D40, &qword_100961D48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961D28);
  }
  return result;
}

uint64_t sub_1005568E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100550D2C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1005568F0()
{
  unint64_t result = qword_100961D60;
  if (!qword_100961D60)
  {
    sub_1000A1370(&qword_100961D58);
    sub_100556990();
    sub_1000A132C(&qword_100961D78, &qword_100961D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961D60);
  }
  return result;
}

unint64_t sub_100556990()
{
  unint64_t result = qword_100961D68;
  if (!qword_100961D68)
  {
    sub_1000A1370(&qword_100961D70);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961D68);
  }
  return result;
}

uint64_t sub_100556A40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100556AA8()
{
  return sub_1005532C0(type metadata accessor for OvernightMetricsReorderingView, (uint64_t (*)(uint64_t))sub_1005512A0);
}

uint64_t sub_100556ADC()
{
  uint64_t v1 = *(void *)(type metadata accessor for OvernightMetricsReorderingView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100556C10()
{
  type metadata accessor for OvernightMetricsReorderingView(0);

  return sub_10055117C();
}

uint64_t sub_100556C90()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100556CC8(uint64_t a1, void *a2)
{
  return sub_100589058(a1, a2, *(uint64_t (**)(uint64_t, void))(v2 + 16));
}

uint64_t sub_100556CD0()
{
  return sub_1000A132C(&qword_100961DA8, (uint64_t *)&unk_100961DB0);
}

void *sub_100556D0C(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_10052995C((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = __CocoaDictionary.lookup(_:)();

  if (!v4) {
    return 0;
  }
  sub_10007E2D8(0, &qword_100961E00);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

id sub_100556DE4(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:a1];
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend);
  id result = [v4 snapshots];
  if (result)
  {
    unint64_t v6 = result;
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    sub_10007E2D8(0, &qword_100961E00);
    sub_1005590FC();
    uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v8 = v3;
    uint64_t v9 = sub_100556D0C(v8, v7);

    swift_bridgeObjectRelease();
    if (v9)
    {
      id v10 = [v9 activitySummary];
      if (v10)
      {
        if ([v4 isMe]) {
          id v11 = [*(id *)(v1+ OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_pauseRingsCoordinator) isPausedForActivitySummaryCacheIndex:a1];
        }
        else {
          id v11 = 0;
        }
        [v10 setDeprecatedPauseForInternalSwiftClient:v11];
      }

      id v8 = v9;
    }
    else
    {
      id v10 = 0;
    }

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100556FB8()
{
  id result = [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend) snapshots];
  if (result)
  {
    uint64_t v2 = result;
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    sub_10007E2D8(0, &qword_100961E00);
    sub_1005590FC();
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v3 & 0xC000000000000001) != 0) {
      uint64_t v4 = __CocoaDictionary.count.getter();
    }
    else {
      uint64_t v4 = *(void *)(v3 + 16);
    }
    swift_bridgeObjectRelease();
    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005570C4()
{
  return sub_100557128(sub_1005579EC);
}

uint64_t sub_100557110()
{
  return sub_100557128(sub_100558160);
}

uint64_t sub_100557128(void (*a1)(void *))
{
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend) snapshots];
  if (!v3)
  {
LABEL_14:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v4 = v3;
  sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
  sub_10007E2D8(0, &qword_100961E00);
  sub_1005590FC();
  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_100369C98(v5);
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t)v6;
  sub_100557968(&v13, a1);
  swift_bridgeObjectRelease();
  uint64_t v7 = v13;
  if (v13 < 0 || (v13 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (v12) {
      goto LABEL_5;
    }
  }
  else if (*(void *)(v13 + 16))
  {
LABEL_5:
    if ((v7 & 0xC000000000000001) != 0)
    {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
    if (*(void *)(v7 + 16))
    {
      id v8 = *(id *)(v7 + 32);
LABEL_8:
      uint64_t v9 = v8;
      swift_release();
      id v10 = [v9 longLongValue];

      return (uint64_t)v10;
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_release();
  return 0;
}

uint64_t sub_1005572E8()
{
  uint64_t v1 = type metadata accessor for DateComponents();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  __chkstk_darwin(v1);
  id v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v35 - v15;
  *(void *)&double v18 = __chkstk_darwin(v17).n128_u64[0];
  uint64_t v20 = (char *)&v35 - v19;
  id v21 = [*(id *)(v0 + OBJC_IVAR____TtC10FitnessApp50ActivitySharingFriendDetailActivitySummaryProvider_friend) currentSnapshot:v18];
  if (v21)
  {
    uint64_t v22 = v21;
    [v21 snapshotIndex];

    id v23 = (id)_HKStartDateForSnapshotIndex();
    if (v23)
    {
      uint64_t v24 = v23;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      char v25 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v25(v9, v16, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
      {
        v25(v20, v9, v10);
        goto LABEL_8;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    }
    sub_10023636C((uint64_t)v9);
  }
  Date.init()();
LABEL_8:
  static Calendar.current.getter();
  Date.startOfFitnessWeek(for:)();
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v26 = type metadata accessor for Calendar.Component();
  uint64_t v27 = *(void *)(v26 - 8);
  unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1007509E0;
  (*(void (**)(unint64_t, void, uint64_t))(v27 + 104))(v29 + v28, enum case for Calendar.Component.day(_:), v26);
  sub_1000C6A18(v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = DateComponents.day.getter();
  LOBYTE(v26) = v31;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v3, v38);
  unint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v13, v10);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v36);
  v32(v20, v10);
  if (v26) {
    uint64_t v33 = 0;
  }
  else {
    uint64_t v33 = v30;
  }
  uint64_t result = 6 - v33;
  if (__OFSUB__(6, v33)) {
    __break(1u);
  }
  return result;
}

id sub_1005578C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendDetailActivitySummaryProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySharingFriendDetailActivitySummaryProvider()
{
  return self;
}

uint64_t sub_100557968(uint64_t *a1, void (*a2)(void *))
{
  uint64_t v4 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_1001F11C4(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  a2(v8);
  return specialized ContiguousArray._endMutation()();
}

void sub_1005579EC(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      sub_1005588D4(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  Swift::Int v104 = v4;
  uint64_t v99 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v111 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v110 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v93 = *v99;
        do
        {
          unint64_t v94 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v93) {
            goto LABEL_139;
          }
          uint64_t v95 = *(void *)&v8[16 * v94 + 32];
          uint64_t v96 = *(void *)&v8[16 * v11 + 24];
          sub_100558ABC((id *)(v93 + 8 * v95), (id *)(v93 + 8 * *(void *)&v8[16 * v11 + 16]), v93 + 8 * v96, v110);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1001EEF68((uint64_t)v8);
          }
          if (v94 >= *((void *)v8 + 2)) {
            goto LABEL_129;
          }
          uint64_t v97 = &v8[16 * v94 + 32];
          *(void *)uint64_t v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v8 + 2);
          if (v11 > v98) {
            goto LABEL_130;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v98 - v11));
          *((void *)v8 + 2) = v98 - 1;
          unint64_t v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v110 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v111 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v100 = *a1 - 8;
  uint64_t v101 = *a1 + 16;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v107 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    Swift::Int v108 = v12;
    if (v9 < v3)
    {
      uint64_t v13 = *(void **)(v10 + 8 * v12);
      id v14 = *(id *)(v10 + 8 * v9);
      id v15 = v13;
      id v105 = [v14 longLongValue];
      id v16 = [v15 longLongValue];

      Swift::Int v3 = v107;
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v107)
      {
        uint64_t v102 = v8;
        uint64_t v17 = (id *)(v101 + 8 * v12);
        while (1)
        {
          double v18 = *(v17 - 1);
          id v19 = *v17;
          id v20 = v18;
          id v21 = [v19 longLongValue];
          id v22 = [v20 longLongValue];

          if ((uint64_t)v105 < (uint64_t)v16 == (uint64_t)v21 >= (uint64_t)v22) {
            break;
          }
          ++v9;
          ++v17;
          Swift::Int v3 = v107;
          if (v107 == v9)
          {
            Swift::Int v9 = v107;
            uint64_t v8 = v102;
            goto LABEL_22;
          }
        }
        uint64_t v8 = v102;
        Swift::Int v3 = v107;
LABEL_22:
        Swift::Int v12 = v108;
      }
      if ((uint64_t)v105 < (uint64_t)v16)
      {
        if (v9 < v12) {
          goto LABEL_133;
        }
        if (v12 < v9)
        {
          id v23 = (uint64_t *)(v100 + 8 * v9);
          Swift::Int v24 = v9;
          Swift::Int v25 = v12;
          uint64_t v26 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v25 != --v24)
            {
              if (!v10) {
                goto LABEL_138;
              }
              uint64_t v27 = *v26;
              *uint64_t v26 = *v23;
              *id v23 = v27;
            }
            ++v25;
            --v23;
            ++v26;
          }
          while (v25 < v24);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_131;
      }
      if (v9 - v12 < v104) {
        break;
      }
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1001EE868(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v40 = *((void *)v8 + 2);
    unint64_t v39 = *((void *)v8 + 3);
    unint64_t v11 = v40 + 1;
    if (v40 >= v39 >> 1) {
      uint64_t v8 = sub_1001EE868((char *)(v39 > 1), v40 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    uint64_t v41 = v8 + 32;
    unint64_t v42 = &v8[16 * v40 + 32];
    *(void *)unint64_t v42 = v12;
    *((void *)v42 + 1) = v9;
    if (v40)
    {
      Swift::Int v109 = v9;
      while (1)
      {
        unint64_t v43 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v48 = &v41[16 * v11];
          uint64_t v49 = *((void *)v48 - 8);
          uint64_t v50 = *((void *)v48 - 7);
          BOOL v54 = __OFSUB__(v50, v49);
          uint64_t v51 = v50 - v49;
          if (v54) {
            goto LABEL_115;
          }
          uint64_t v53 = *((void *)v48 - 6);
          uint64_t v52 = *((void *)v48 - 5);
          BOOL v54 = __OFSUB__(v52, v53);
          uint64_t v46 = v52 - v53;
          char v47 = v54;
          if (v54) {
            goto LABEL_116;
          }
          unint64_t v55 = v11 - 2;
          uint64_t v56 = &v41[16 * v11 - 32];
          uint64_t v58 = *(void *)v56;
          uint64_t v57 = *((void *)v56 + 1);
          BOOL v54 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          if (v54) {
            goto LABEL_118;
          }
          BOOL v54 = __OFADD__(v46, v59);
          uint64_t v60 = v46 + v59;
          if (v54) {
            goto LABEL_121;
          }
          if (v60 >= v51)
          {
            uint64_t v78 = &v41[16 * v43];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v54 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v54) {
              goto LABEL_125;
            }
            BOOL v71 = v46 < v81;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v72 = *((void *)v8 + 4);
            uint64_t v73 = *((void *)v8 + 5);
            BOOL v54 = __OFSUB__(v73, v72);
            uint64_t v65 = v73 - v72;
            char v66 = v54;
            goto LABEL_80;
          }
          uint64_t v45 = *((void *)v8 + 4);
          uint64_t v44 = *((void *)v8 + 5);
          BOOL v54 = __OFSUB__(v44, v45);
          uint64_t v46 = v44 - v45;
          char v47 = v54;
        }
        if (v47) {
          goto LABEL_117;
        }
        unint64_t v55 = v11 - 2;
        uint64_t v61 = &v41[16 * v11 - 32];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v64 = __OFSUB__(v62, v63);
        uint64_t v65 = v62 - v63;
        char v66 = v64;
        if (v64) {
          goto LABEL_120;
        }
        int v67 = &v41[16 * v43];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v54 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v54) {
          goto LABEL_123;
        }
        if (__OFADD__(v65, v70)) {
          goto LABEL_124;
        }
        if (v65 + v70 >= v46)
        {
          BOOL v71 = v46 < v70;
LABEL_86:
          if (v71) {
            unint64_t v43 = v55;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v66) {
          goto LABEL_119;
        }
        char v74 = &v41[16 * v43];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        BOOL v54 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v54) {
          goto LABEL_122;
        }
        if (v77 < v65) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v82 = v43 - 1;
        if (v43 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v83 = v10;
        if (!v10) {
          goto LABEL_137;
        }
        uint64_t v84 = v8;
        char v85 = &v41[16 * v82];
        uint64_t v86 = *(void *)v85;
        uint64_t v87 = v41;
        unint64_t v88 = v43;
        uint64_t v89 = &v41[16 * v43];
        uint64_t v90 = *((void *)v89 + 1);
        uint64_t v91 = v83;
        sub_100558ABC((id *)(v83 + 8 * *(void *)v85), (id *)(v83 + 8 * *(void *)v89), v83 + 8 * v90, v110);
        if (v1) {
          goto LABEL_109;
        }
        if (v90 < v86) {
          goto LABEL_112;
        }
        if (v88 > *((void *)v84 + 2)) {
          goto LABEL_113;
        }
        *(void *)char v85 = v86;
        *(void *)&v87[16 * v82 + 8] = v90;
        unint64_t v92 = *((void *)v84 + 2);
        if (v88 >= v92) {
          goto LABEL_114;
        }
        uint64_t v8 = v84;
        unint64_t v11 = v92 - 1;
        memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
        uint64_t v41 = v87;
        *((void *)v84 + 2) = v92 - 1;
        uint64_t v10 = v91;
        Swift::Int v9 = v109;
        if (v92 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    Swift::Int v3 = v107;
    if (v9 >= v107) {
      goto LABEL_98;
    }
  }
  if (__OFADD__(v12, v104)) {
    goto LABEL_134;
  }
  if (v12 + v104 >= v3) {
    Swift::Int v28 = v3;
  }
  else {
    Swift::Int v28 = v12 + v104;
  }
  if (v28 >= v12)
  {
    if (v9 != v28)
    {
      uint64_t v103 = v8;
      uint64_t v29 = v100 + 8 * v9;
      Swift::Int v106 = v28;
      do
      {
        uint64_t v30 = *(void **)(v10 + 8 * v9);
        Swift::Int v31 = v12;
        uint64_t v32 = v29;
        do
        {
          uint64_t v33 = *(void **)v32;
          id v34 = v30;
          id v35 = v33;
          id v36 = [v34 longLongValue];
          id v37 = [v35 longLongValue];

          if ((uint64_t)v36 >= (uint64_t)v37) {
            break;
          }
          if (!v10) {
            goto LABEL_136;
          }
          uint64_t v38 = *(void **)v32;
          uint64_t v30 = *(void **)(v32 + 8);
          *(void *)uint64_t v32 = v30;
          *(void *)(v32 + 8) = v38;
          v32 -= 8;
          ++v31;
        }
        while (v9 != v31);
        ++v9;
        v29 += 8;
        Swift::Int v12 = v108;
      }
      while (v9 != v106);
      Swift::Int v9 = v106;
      uint64_t v8 = v103;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100558160(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      sub_1005589C8(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  Swift::Int v104 = v4;
  uint64_t v99 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v111 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v110 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v93 = *v99;
        do
        {
          unint64_t v94 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v93) {
            goto LABEL_139;
          }
          uint64_t v95 = *(void *)&v8[16 * v94 + 32];
          uint64_t v96 = *(void *)&v8[16 * v11 + 24];
          sub_100558DDC((id *)(v93 + 8 * v95), (id *)(v93 + 8 * *(void *)&v8[16 * v11 + 16]), v93 + 8 * v96, v110);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1001EEF68((uint64_t)v8);
          }
          if (v94 >= *((void *)v8 + 2)) {
            goto LABEL_129;
          }
          uint64_t v97 = &v8[16 * v94 + 32];
          *(void *)uint64_t v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v8 + 2);
          if (v11 > v98) {
            goto LABEL_130;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v98 - v11));
          *((void *)v8 + 2) = v98 - 1;
          unint64_t v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v110 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v111 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v100 = *a1 - 8;
  uint64_t v101 = *a1 + 16;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v107 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    Swift::Int v108 = v12;
    if (v9 < v3)
    {
      uint64_t v13 = *(void **)(v10 + 8 * v12);
      id v14 = *(id *)(v10 + 8 * v9);
      id v15 = v13;
      id v105 = [v14 longLongValue];
      id v16 = [v15 longLongValue];

      Swift::Int v3 = v107;
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v107)
      {
        uint64_t v102 = v8;
        uint64_t v17 = (id *)(v101 + 8 * v12);
        while (1)
        {
          double v18 = *(v17 - 1);
          id v19 = *v17;
          id v20 = v18;
          id v21 = [v19 longLongValue];
          id v22 = [v20 longLongValue];

          if ((uint64_t)v16 < (uint64_t)v105 == (uint64_t)v22 >= (uint64_t)v21) {
            break;
          }
          ++v9;
          ++v17;
          Swift::Int v3 = v107;
          if (v107 == v9)
          {
            Swift::Int v9 = v107;
            uint64_t v8 = v102;
            goto LABEL_22;
          }
        }
        uint64_t v8 = v102;
        Swift::Int v3 = v107;
LABEL_22:
        Swift::Int v12 = v108;
      }
      if ((uint64_t)v16 < (uint64_t)v105)
      {
        if (v9 < v12) {
          goto LABEL_133;
        }
        if (v12 < v9)
        {
          id v23 = (uint64_t *)(v100 + 8 * v9);
          Swift::Int v24 = v9;
          Swift::Int v25 = v12;
          uint64_t v26 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v25 != --v24)
            {
              if (!v10) {
                goto LABEL_138;
              }
              uint64_t v27 = *v26;
              *uint64_t v26 = *v23;
              *id v23 = v27;
            }
            ++v25;
            --v23;
            ++v26;
          }
          while (v25 < v24);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_131;
      }
      if (v9 - v12 < v104) {
        break;
      }
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1001EE868(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v40 = *((void *)v8 + 2);
    unint64_t v39 = *((void *)v8 + 3);
    unint64_t v11 = v40 + 1;
    if (v40 >= v39 >> 1) {
      uint64_t v8 = sub_1001EE868((char *)(v39 > 1), v40 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    uint64_t v41 = v8 + 32;
    unint64_t v42 = &v8[16 * v40 + 32];
    *(void *)unint64_t v42 = v12;
    *((void *)v42 + 1) = v9;
    if (v40)
    {
      Swift::Int v109 = v9;
      while (1)
      {
        unint64_t v43 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v48 = &v41[16 * v11];
          uint64_t v49 = *((void *)v48 - 8);
          uint64_t v50 = *((void *)v48 - 7);
          BOOL v54 = __OFSUB__(v50, v49);
          uint64_t v51 = v50 - v49;
          if (v54) {
            goto LABEL_115;
          }
          uint64_t v53 = *((void *)v48 - 6);
          uint64_t v52 = *((void *)v48 - 5);
          BOOL v54 = __OFSUB__(v52, v53);
          uint64_t v46 = v52 - v53;
          char v47 = v54;
          if (v54) {
            goto LABEL_116;
          }
          unint64_t v55 = v11 - 2;
          uint64_t v56 = &v41[16 * v11 - 32];
          uint64_t v58 = *(void *)v56;
          uint64_t v57 = *((void *)v56 + 1);
          BOOL v54 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          if (v54) {
            goto LABEL_118;
          }
          BOOL v54 = __OFADD__(v46, v59);
          uint64_t v60 = v46 + v59;
          if (v54) {
            goto LABEL_121;
          }
          if (v60 >= v51)
          {
            uint64_t v78 = &v41[16 * v43];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v54 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v54) {
              goto LABEL_125;
            }
            BOOL v71 = v46 < v81;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v72 = *((void *)v8 + 4);
            uint64_t v73 = *((void *)v8 + 5);
            BOOL v54 = __OFSUB__(v73, v72);
            uint64_t v65 = v73 - v72;
            char v66 = v54;
            goto LABEL_80;
          }
          uint64_t v45 = *((void *)v8 + 4);
          uint64_t v44 = *((void *)v8 + 5);
          BOOL v54 = __OFSUB__(v44, v45);
          uint64_t v46 = v44 - v45;
          char v47 = v54;
        }
        if (v47) {
          goto LABEL_117;
        }
        unint64_t v55 = v11 - 2;
        uint64_t v61 = &v41[16 * v11 - 32];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v64 = __OFSUB__(v62, v63);
        uint64_t v65 = v62 - v63;
        char v66 = v64;
        if (v64) {
          goto LABEL_120;
        }
        int v67 = &v41[16 * v43];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v54 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v54) {
          goto LABEL_123;
        }
        if (__OFADD__(v65, v70)) {
          goto LABEL_124;
        }
        if (v65 + v70 >= v46)
        {
          BOOL v71 = v46 < v70;
LABEL_86:
          if (v71) {
            unint64_t v43 = v55;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v66) {
          goto LABEL_119;
        }
        char v74 = &v41[16 * v43];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        BOOL v54 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v54) {
          goto LABEL_122;
        }
        if (v77 < v65) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v82 = v43 - 1;
        if (v43 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v83 = v10;
        if (!v10) {
          goto LABEL_137;
        }
        uint64_t v84 = v8;
        char v85 = &v41[16 * v82];
        uint64_t v86 = *(void *)v85;
        uint64_t v87 = v41;
        unint64_t v88 = v43;
        uint64_t v89 = &v41[16 * v43];
        uint64_t v90 = *((void *)v89 + 1);
        uint64_t v91 = v83;
        sub_100558DDC((id *)(v83 + 8 * *(void *)v85), (id *)(v83 + 8 * *(void *)v89), v83 + 8 * v90, v110);
        if (v1) {
          goto LABEL_109;
        }
        if (v90 < v86) {
          goto LABEL_112;
        }
        if (v88 > *((void *)v84 + 2)) {
          goto LABEL_113;
        }
        *(void *)char v85 = v86;
        *(void *)&v87[16 * v82 + 8] = v90;
        unint64_t v92 = *((void *)v84 + 2);
        if (v88 >= v92) {
          goto LABEL_114;
        }
        uint64_t v8 = v84;
        unint64_t v11 = v92 - 1;
        memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
        uint64_t v41 = v87;
        *((void *)v84 + 2) = v92 - 1;
        uint64_t v10 = v91;
        Swift::Int v9 = v109;
        if (v92 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    Swift::Int v3 = v107;
    if (v9 >= v107) {
      goto LABEL_98;
    }
  }
  if (__OFADD__(v12, v104)) {
    goto LABEL_134;
  }
  if (v12 + v104 >= v3) {
    Swift::Int v28 = v3;
  }
  else {
    Swift::Int v28 = v12 + v104;
  }
  if (v28 >= v12)
  {
    if (v9 != v28)
    {
      uint64_t v103 = v8;
      uint64_t v29 = v100 + 8 * v9;
      Swift::Int v106 = v28;
      do
      {
        uint64_t v30 = *(void **)(v10 + 8 * v9);
        Swift::Int v31 = v12;
        uint64_t v32 = v29;
        do
        {
          uint64_t v33 = *(void **)v32;
          id v34 = v30;
          id v35 = v33;
          id v36 = [v34 longLongValue];
          id v37 = [v35 longLongValue];

          if ((uint64_t)v37 >= (uint64_t)v36) {
            break;
          }
          if (!v10) {
            goto LABEL_136;
          }
          uint64_t v38 = *(void **)v32;
          uint64_t v30 = *(void **)(v32 + 8);
          *(void *)uint64_t v32 = v30;
          *(void *)(v32 + 8) = v38;
          v32 -= 8;
          ++v31;
        }
        while (v9 != v31);
        ++v9;
        v29 += 8;
        Swift::Int v12 = v108;
      }
      while (v9 != v106);
      Swift::Int v9 = v106;
      uint64_t v8 = v103;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1005588D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v17 = v6;
    while (1)
    {
      Swift::Int v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      id v12 = [v10 longLongValue];
      id v13 = [v11 longLongValue];

      if ((uint64_t)v12 >= (uint64_t)v13)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v17 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      id v14 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

void sub_1005589C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v17 = v6;
    while (1)
    {
      Swift::Int v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      id v12 = [v10 longLongValue];
      id v13 = [v11 longLongValue];

      if ((uint64_t)v13 >= (uint64_t)v12)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v17 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      id v14 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100558ABC(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v38 = __src;
  id v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      id v22 = &a4[v11];
      id v36 = (char *)v22;
      uint64_t v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        id v23 = (id *)(a3 - 8);
        Swift::Int v24 = v4;
        uint64_t v32 = v5;
        do
        {
          id v35 = v4;
          Swift::Int v25 = v23 + 1;
          uint64_t v26 = *--v24;
          id v27 = *(v22 - 1);
          id v28 = v26;
          id v29 = [v27 longLongValue];
          id v30 = [v28 longLongValue];

          if ((uint64_t)v29 >= (uint64_t)v30)
          {
            id v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22) {
              *id v23 = *(v22 - 1);
            }
            Swift::Int v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35) {
              *id v23 = *v24;
            }
            uint64_t v38 = v24;
          }
          if (v24 <= v32) {
            break;
          }
          --v23;
          uint64_t v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    id v12 = &a4[v8];
    id v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      id v13 = a4;
      do
      {
        id v14 = v5;
        id v15 = *v13;
        id v16 = *v4;
        id v17 = v15;
        id v18 = [v16 longLongValue];
        id v19 = [v17 longLongValue];

        if ((uint64_t)v18 >= (uint64_t)v19)
        {
          id v21 = v14;
          if (v14 != v13) {
            *id v14 = *v13;
          }
          id v37 = ++v13;
          id v20 = v4;
        }
        else
        {
          id v20 = v4 + 1;
          id v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4) {
            *id v14 = *v4;
          }
        }
        uint64_t v5 = v21 + 1;
        if (v13 >= v12) {
          break;
        }
        uint64_t v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      uint64_t v38 = v5;
    }
LABEL_43:
    sub_1001EE998(&v38, &v37, &v36);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100558DDC(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v38 = __src;
  id v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      id v22 = &a4[v11];
      id v36 = (char *)v22;
      uint64_t v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        id v23 = (id *)(a3 - 8);
        Swift::Int v24 = v4;
        uint64_t v32 = v5;
        do
        {
          id v35 = v4;
          Swift::Int v25 = v23 + 1;
          uint64_t v26 = *--v24;
          id v27 = *(v22 - 1);
          id v28 = v26;
          id v29 = [v27 longLongValue];
          id v30 = [v28 longLongValue];

          if ((uint64_t)v30 >= (uint64_t)v29)
          {
            id v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22) {
              *id v23 = *(v22 - 1);
            }
            Swift::Int v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35) {
              *id v23 = *v24;
            }
            uint64_t v38 = v24;
          }
          if (v24 <= v32) {
            break;
          }
          --v23;
          uint64_t v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    id v12 = &a4[v8];
    id v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      id v13 = a4;
      do
      {
        id v14 = v5;
        id v15 = *v13;
        id v16 = *v4;
        id v17 = v15;
        id v18 = [v16 longLongValue];
        id v19 = [v17 longLongValue];

        if ((uint64_t)v19 >= (uint64_t)v18)
        {
          id v21 = v14;
          if (v14 != v13) {
            *id v14 = *v13;
          }
          id v37 = ++v13;
          id v20 = v4;
        }
        else
        {
          id v20 = v4 + 1;
          id v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4) {
            *id v14 = *v4;
          }
        }
        uint64_t v5 = v21 + 1;
        if (v13 >= v12) {
          break;
        }
        uint64_t v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      uint64_t v38 = v5;
    }
LABEL_43:
    sub_1001EE998(&v38, &v37, &v36);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1005590FC()
{
  unint64_t result = qword_100955BF0;
  if (!qword_100955BF0)
  {
    sub_10007E2D8(255, (unint64_t *)&qword_100955BE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100955BF0);
  }
  return result;
}

void *sub_100559168(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for EmptyFriendView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for EmptyFriendView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for EmptyFriendView()
{
  return &type metadata for EmptyFriendView;
}

uint64_t sub_100559268()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100559284()
{
  double result = 15.0;
  xmmword_100961E08 = xmmword_10075E630;
  *(_OWORD *)&qword_100961E18 = xmmword_1007509D0;
  return result;
}

uint64_t sub_1005592A4()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t sub_100559328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v19 = a3;
  uint64_t v23 = a4;
  uint64_t v6 = sub_1000AFA94(&qword_100961E48);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100961E28);
  __chkstk_darwin(v20);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = static HorizontalAlignment.center.getter();
  sub_1005596DC(a1, a2, (uint64_t)v26);
  *(_OWORD *)((char *)&v28[11] + 7) = v26[11];
  *(_OWORD *)((char *)&v28[12] + 7) = v26[12];
  *(_OWORD *)((char *)&v28[13] + 7) = v27[0];
  v28[14] = *(_OWORD *)((char *)v27 + 9);
  *(_OWORD *)((char *)&v28[7] + 7) = v26[7];
  *(_OWORD *)((char *)&v28[8] + 7) = v26[8];
  *(_OWORD *)((char *)&v28[9] + 7) = v26[9];
  *(_OWORD *)((char *)&v28[10] + 7) = v26[10];
  *(_OWORD *)((char *)&v28[3] + 7) = v26[3];
  *(_OWORD *)((char *)&v28[4] + 7) = v26[4];
  *(_OWORD *)((char *)&v28[5] + 7) = v26[5];
  *(_OWORD *)((char *)&v28[6] + 7) = v26[6];
  *(_OWORD *)((char *)v28 + 7) = v26[0];
  *(_OWORD *)((char *)&v28[1] + 7) = v26[1];
  *(_OWORD *)((char *)&v28[2] + 7) = v26[2];
  *(_OWORD *)((char *)&v25[22] + 1) = v28[11];
  *(_OWORD *)((char *)&v25[24] + 1) = v28[12];
  *(_OWORD *)((char *)&v25[26] + 1) = v28[13];
  *(_OWORD *)((char *)&v25[28] + 1) = *(_OWORD *)((char *)v27 + 9);
  *(_OWORD *)((char *)&v25[14] + 1) = v28[7];
  *(_OWORD *)((char *)&v25[16] + 1) = v28[8];
  *(_OWORD *)((char *)&v25[18] + 1) = v28[9];
  *(_OWORD *)((char *)&v25[20] + 1) = v28[10];
  *(_OWORD *)((char *)&v25[6] + 1) = v28[3];
  *(_OWORD *)((char *)&v25[8] + 1) = v28[4];
  *(_OWORD *)((char *)&v25[10] + 1) = v28[5];
  *(_OWORD *)((char *)&v25[12] + 1) = v28[6];
  *(_OWORD *)((char *)v25 + 1) = v28[0];
  *(_OWORD *)((char *)&v25[2] + 1) = v28[1];
  char v29 = 0;
  long long v24 = (unint64_t)v11;
  LOBYTE(v25[0]) = 0;
  *(_OWORD *)((char *)&v25[4] + 1) = v28[2];
  static Edge.Set.horizontal.getter();
  sub_1000AFA94(&qword_100961E38);
  sub_1000A132C(&qword_100961E40, &qword_100961E38);
  View.scenePadding(_:)();
  sub_100559C6C(v26);
  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v13 = v21;
  uint64_t v12 = v22;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v10, v8, v22);
  id v14 = &v10[*(int *)(v20 + 36)];
  long long v15 = *(_OWORD *)&v25[8];
  *((_OWORD *)v14 + 4) = *(_OWORD *)&v25[6];
  *((_OWORD *)v14 + 5) = v15;
  *((_OWORD *)v14 + 6) = *(_OWORD *)&v25[10];
  long long v16 = *(_OWORD *)v25;
  *(_OWORD *)id v14 = v24;
  *((_OWORD *)v14 + 1) = v16;
  long long v17 = *(_OWORD *)&v25[4];
  *((_OWORD *)v14 + 2) = *(_OWORD *)&v25[2];
  *((_OWORD *)v14 + 3) = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  return sub_100559D5C((uint64_t)v10, v23);
}

uint64_t sub_1005596DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for ActivitySharingFriendListDataProvider();
  sub_100559DC4((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
  uint64_t v6 = EnvironmentObject.init()();
  uint64_t v8 = v7;
  type metadata accessor for ActivitySharingNavigationCoordinator();
  sub_100559DC4(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
  EnvironmentObject.init()();
  uint64_t v10 = v9;
  if (qword_10094AE40 != -1) {
    swift_once();
  }
  long long v11 = xmmword_100961E08;
  uint64_t v33 = unk_100961E20;
  uint64_t v34 = qword_100961E18;
  char v32 = static Edge.Set.all.getter();
  if (a2)
  {
    uint64_t v35 = v10;
    uint64_t v36 = v8;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v12 = *(void *)(v37 + 16);
    swift_bridgeObjectRelease();
    if (v12)
    {
      type metadata accessor for ReachableContactsDataSource();
      sub_100559DC4(&qword_10094BF20, (void (*)(uint64_t))type metadata accessor for ReachableContactsDataSource);
      swift_retain();
      uint64_t v13 = EnvironmentObject.init()();
      uint64_t v30 = v14;
      uint64_t v31 = v13;
      LOBYTE(v12) = static Edge.Set.all.getter();
      EdgeInsets.init(_all:)();
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      uint64_t v19 = a1;
      uint64_t v21 = v20;
      uint64_t v29 = v22;
      uint64_t v12 = v12;
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v19 = 0;
      uint64_t v16 = 0;
      uint64_t v18 = 0;
      uint64_t v21 = 0;
      uint64_t v29 = 0;
    }
    char v28 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    *(void *)a3 = v6;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = v11;
    *(void *)(a3 + 24) = v35;
    *(unsigned char *)(a3 + 32) = v32;
    *(_OWORD *)(a3 + 40) = v11;
    *(void *)(a3 + 56) = v34;
    *(void *)(a3 + 64) = v33;
    *(unsigned char *)(a3 + 72) = 0;
    *(void *)(a3 + 80) = v31;
    *(void *)(a3 + 88) = v30;
    *(void *)(a3 + 96) = v19;
    *(void *)(a3 + 104) = v12;
    *(void *)(a3 + 112) = v16;
    *(void *)(a3 + 120) = v18;
    *(void *)(a3 + 128) = v21;
    *(void *)(a3 + 136) = v29;
    *(unsigned char *)(a3 + 144) = 0;
    *(void *)(a3 + 152) = 0xD00000000000001DLL;
    *(void *)(a3 + 160) = 0x80000001007BCFB0;
    *(_WORD *)(a3 + 168) = 257;
    *(unsigned char *)(a3 + 176) = v28;
    *(void *)(a3 + 184) = v23;
    *(void *)(a3 + 192) = v24;
    *(void *)(a3 + 200) = v25;
    *(void *)(a3 + 208) = v26;
    *(unsigned char *)(a3 + 216) = 0;
    *(void *)(a3 + 224) = 0;
    *(unsigned char *)(a3 + 232) = 1;
    swift_retain();
    swift_retain();
    sub_100559E14(v31, v30, v19);
    sub_100559D18(v31, v30, v19);
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for ReachableContactsDataSource();
    sub_100559DC4(&qword_10094BF20, (void (*)(uint64_t))type metadata accessor for ReachableContactsDataSource);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100559ABC@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = (uint64_t (*)())swift_allocObject();
  *((void *)v6 + 2) = v3;
  *((void *)v6 + 3) = v4;
  *((void *)v6 + 4) = v5;
  *a1 = sub_100559B78;
  a1[1] = v6;
  swift_retain();

  return swift_retain();
}

uint64_t sub_100559B38()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100559B78()
{
  return sub_1005592A4();
}

uint64_t sub_100559B84@<X0>(uint64_t a1@<X8>)
{
  return sub_100559328(v1[2], v1[3], v1[5], a1);
}

unint64_t sub_100559B90()
{
  unint64_t result = qword_100961E30;
  if (!qword_100961E30)
  {
    sub_1000A1370(&qword_100961E28);
    sub_1000A1370(&qword_100961E38);
    sub_1000A132C(&qword_100961E40, &qword_100961E38);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961E30);
  }
  return result;
}

void *sub_100559C6C(void *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  uint64_t v5 = a1[10];
  swift_release();
  swift_release();
  sub_100559D18(v5, v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100559D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100559D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100961E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100559DC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100559E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100559E54()
{
  return sub_1000A132C(&qword_100961E50, &qword_100961E58);
}

void *initializeWithCopy for IntervalsTargetValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_retain();
  swift_retain();
  id v6 = v4;
  id v7 = v5;
  return a1;
}

void *assignWithCopy for IntervalsTargetValue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[3];
  uint64_t v5 = (void *)a1[3];
  a1[3] = v4;
  id v6 = v4;

  id v7 = (void *)a2[4];
  uint64_t v8 = (void *)a1[4];
  a1[4] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for IntervalsTargetValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();

  uint64_t v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for IntervalsTargetValue()
{
  return &type metadata for IntervalsTargetValue;
}

uint64_t sub_100559FE8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10055A004(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TargetZone.ZoneType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TargetZone.type.getter();
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for TargetZone.ZoneType.rollingPace(_:))
  {
    v87[0] = *(_OWORD *)v1;
    swift_retain();
    MetricsPublisher.rollingPace.getter();
    uint64_t v10 = v9;
    sub_1000E2384((uint64_t)v87);
    long long v11 = *(void **)(v1 + 24);
    uint64_t v12 = *(void **)(v1 + 32);
    sub_1000E2358((uint64_t)v87);
    id v13 = v11;
    id v14 = v12;
    MetricsPublisher.workoutStatePublisher.getter();
    sub_1000E2384((uint64_t)v87);
    LOBYTE(v12) = WorkoutStatePublisher.gpsUnavailable.getter();
    swift_release();
    *(void *)&long long v79 = v10;
    *((void *)&v79 + 1) = v13;
    *(void *)&long long v80 = v14;
    *((void *)&v80 + 1) = 14;
    LOWORD(v81) = v12 & 1;
LABEL_5:
    sub_10055AEE8();
    id v20 = v13;
    id v21 = v14;
    _ConditionalContent<>.init(storage:)();
    if (BYTE1(v85)) {
      __int16 v22 = 256;
    }
    else {
      __int16 v22 = 0;
    }
    long long v79 = v83;
    long long v80 = v84;
    LOWORD(v81) = v22 | v85;
    BYTE2(v81) = 0;
    goto LABEL_9;
  }
  int v15 = v8;
  if (v8 == enum case for TargetZone.ZoneType.averagePace(_:))
  {
    v87[0] = *(_OWORD *)v2;
    swift_retain();
    MetricsPublisher.averagePace.getter();
    uint64_t v17 = v16;
    sub_1000E2384((uint64_t)v87);
    uint64_t v18 = *(void **)(v2 + 24);
    uint64_t v19 = *(void **)(v2 + 32);
    sub_1000E2358((uint64_t)v87);
    id v13 = v18;
    id v14 = v19;
    MetricsPublisher.workoutStatePublisher.getter();
    sub_1000E2384((uint64_t)v87);
    LOBYTE(v19) = WorkoutStatePublisher.gpsUnavailable.getter();
    swift_release();
    *(void *)&long long v79 = v17;
    *((void *)&v79 + 1) = v13;
    *(void *)&long long v80 = v14;
    *((void *)&v80 + 1) = 8;
    LOBYTE(v81) = v19 & 1;
    BYTE1(v81) = 1;
    goto LABEL_5;
  }
  if (v8 == enum case for TargetZone.ZoneType.instantaneousPace(_:))
  {
    v87[0] = *(_OWORD *)v2;
    swift_retain();
    MetricsPublisher.currentPace.getter();
    uint64_t v29 = v28;
    sub_1000E2384((uint64_t)v87);
    uint64_t v30 = *(void **)(v2 + 24);
    uint64_t v31 = *(void **)(v2 + 32);
    sub_1000E2358((uint64_t)v87);
    id v32 = v30;
    id v33 = v31;
    MetricsPublisher.workoutStatePublisher.getter();
    sub_1000E2384((uint64_t)v87);
    LOBYTE(v31) = WorkoutStatePublisher.gpsUnavailable.getter();
    swift_release();
    *(void *)&long long v79 = v29;
    *((void *)&v79 + 1) = v32;
    *(void *)&long long v80 = v33;
    *((void *)&v80 + 1) = 4;
    LOWORD(v81) = v31 & 1;
    sub_10055AEE8();
    sub_10055AF78();
    id v20 = v32;
    id v21 = v33;
    _ConditionalContent<>.init(storage:)();
    __int16 v34 = v85;
    if (BYTE1(v85)) {
      __int16 v35 = 256;
    }
    else {
      __int16 v35 = 0;
    }
LABEL_30:
    long long v79 = v83;
    long long v80 = v84;
    LOWORD(v81) = v35 | v34;
    BYTE2(v81) = 1;
LABEL_9:
    sub_1000AFA94(&qword_100961E88);
    sub_1000AFA94(&qword_100961EA0);
    sub_10055AE74();
    sub_10055AF3C();
    _ConditionalContent<>.init(storage:)();
    long long v79 = v83;
    long long v80 = v84;
    HIWORD(v81) = BYTE2(v85) != 0;
    LOWORD(v81) = v85;
LABEL_10:
    sub_1000AFA94(&qword_100961E78);
    sub_1000AFA94(&qword_100961EB8);
    sub_10055AE38();
    sub_10055AFCC();
    _ConditionalContent<>.init(storage:)();
    if (HIBYTE(v85)) {
      int v23 = 0x1000000;
    }
    else {
      int v23 = 0;
    }
    long long v79 = v83;
    long long v80 = v84;
    int v81 = v23 | (unsigned __int16)v85 | (BYTE2(v85) << 16);
    char v82 = 0;
    sub_1000AFA94(&qword_100961E60);
    sub_10055B044(&qword_100961E68, &qword_100961E60, (void (*)(void))sub_10055AE38, (void (*)(void))sub_10055AFCC);
    _ConditionalContent<>.init(storage:)();

    goto LABEL_14;
  }
  if (v8 == enum case for TargetZone.ZoneType.instantaneousCadence(_:))
  {
    v87[0] = *(_OWORD *)v2;
    swift_retain();
    uint64_t v36 = MetricsPublisher.currentCadence.getter();
    uint64_t v38 = v37 & 1;
    sub_1000E2384((uint64_t)v87);
    uint64_t v41 = v2 + 24;
    unint64_t v39 = *(void **)(v2 + 24);
    unint64_t v40 = *(void **)(v41 + 8);
    *(void *)&long long v79 = v36;
    *((void *)&v79 + 1) = v38;
    *(void *)&long long v80 = v40;
    *((void *)&v80 + 1) = v39;
    LOBYTE(v81) = 0;
    sub_10055AF78();
    sub_10055B0CC();
    id v42 = v40;
    id v43 = v39;
    id v20 = v42;
    id v21 = v43;
    _ConditionalContent<>.init(storage:)();
    long long v79 = v83;
    long long v80 = v84;
    LOWORD(v81) = v85;
    sub_1000AFA94(&qword_100961EC8);
    sub_1000AFA94(&qword_100961EE0);
    sub_10055B008();
    sub_10055B120();
    _ConditionalContent<>.init(storage:)();
    if (BYTE1(v85)) {
      __int16 v44 = 256;
    }
    else {
      __int16 v44 = 0;
    }
    long long v79 = v83;
    long long v80 = v84;
    LOWORD(v81) = v44 | v85;
    HIWORD(v81) = 256;
    goto LABEL_10;
  }
  if (v8 == enum case for TargetZone.ZoneType.averageCadence(_:))
  {
    v87[0] = *(_OWORD *)v2;
    swift_retain();
    uint64_t v45 = MetricsPublisher.averageCadence.getter();
    uint64_t v47 = v46 & 1;
    sub_1000E2384((uint64_t)v87);
    uint64_t v50 = v2 + 24;
    uint64_t v48 = *(void **)(v2 + 24);
    uint64_t v49 = *(void **)(v50 + 8);
    *(void *)&long long v79 = v45;
    *((void *)&v79 + 1) = v47;
    *(void *)&long long v80 = v49;
    *((void *)&v80 + 1) = v48;
    LOWORD(v81) = 256;
    sub_10055AEE8();
    sub_10055AF78();
    id v51 = v49;
    id v52 = v48;
    id v20 = v51;
    id v21 = v52;
    _ConditionalContent<>.init(storage:)();
    __int16 v34 = v85;
    if (BYTE1(v85)) {
      __int16 v35 = 256;
    }
    else {
      __int16 v35 = 0;
    }
    goto LABEL_30;
  }
  if (v8 == enum case for TargetZone.ZoneType.instantaneousPower(_:))
  {
    v87[0] = *(_OWORD *)v2;
    swift_retain();
    MetricsPublisher.powerMetricsPublisher.getter();
    sub_1000E2384((uint64_t)v87);
    uint64_t v53 = PowerMetricsPublisher.currentPower.getter();
    char v55 = v54;
    swift_release();
    uint64_t v56 = *(void **)(v2 + 24);
    *(void *)&long long v79 = v53;
    *((void *)&v79 + 1) = v55 & 1;
    long long v80 = (unint64_t)v56;
    LOBYTE(v81) = 1;
    sub_10055AF78();
    sub_10055B0CC();
    id v20 = v56;
    _ConditionalContent<>.init(storage:)();
    long long v79 = v83;
    long long v80 = v84;
    LOWORD(v81) = v85;
    sub_1000AFA94(&qword_100961EC8);
    sub_1000AFA94(&qword_100961EE0);
    sub_10055B008();
    sub_10055B120();
    _ConditionalContent<>.init(storage:)();
    if (BYTE1(v85)) {
      __int16 v57 = 256;
    }
    else {
      __int16 v57 = 0;
    }
    long long v79 = v83;
    long long v80 = v84;
    LOWORD(v81) = v57 | v85;
    HIWORD(v81) = 256;
    sub_1000AFA94(&qword_100961E78);
    sub_1000AFA94(&qword_100961EB8);
    sub_10055AE38();
    sub_10055AFCC();
    _ConditionalContent<>.init(storage:)();
    int v58 = (unsigned __int16)v85 | (BYTE2(v85) << 16);
    if (HIBYTE(v85)) {
      int v59 = 0x1000000;
    }
    else {
      int v59 = 0;
    }
LABEL_45:
    long long v79 = v83;
    long long v80 = v84;
    int v81 = v59 | v58;
    char v82 = 0;
    sub_1000AFA94(&qword_100961E60);
    sub_10055B044(&qword_100961E68, &qword_100961E60, (void (*)(void))sub_10055AE38, (void (*)(void))sub_10055AFCC);
    _ConditionalContent<>.init(storage:)();
LABEL_14:

    goto LABEL_15;
  }
  if (v8 == enum case for TargetZone.ZoneType.averagePower(_:))
  {
    v87[0] = *(_OWORD *)v2;
    swift_retain();
    MetricsPublisher.powerMetricsPublisher.getter();
    sub_1000E2384((uint64_t)v87);
    uint64_t v60 = PowerMetricsPublisher.averagePower.getter();
    char v62 = v61;
    swift_release();
    uint64_t v63 = *(void **)(v2 + 24);
    *(void *)&long long v79 = v60;
    *((void *)&v79 + 1) = v62 & 1;
    long long v80 = (unint64_t)v63;
    LOBYTE(v81) = 0;
    sub_10055B0CC();
    id v20 = v63;
    _ConditionalContent<>.init(storage:)();
    long long v79 = v83;
    long long v80 = v84;
    LOBYTE(v81) = v85;
    BYTE1(v81) = 1;
    sub_1000AFA94(&qword_100961EC8);
    sub_1000AFA94(&qword_100961EE0);
    sub_10055B008();
    sub_10055B120();
    _ConditionalContent<>.init(storage:)();
    if (BYTE1(v85)) {
      __int16 v64 = 256;
    }
    else {
      __int16 v64 = 0;
    }
    long long v79 = v83;
    long long v80 = v84;
    LOWORD(v81) = v64 | v85;
    HIWORD(v81) = 256;
    sub_1000AFA94(&qword_100961E78);
    sub_1000AFA94(&qword_100961EB8);
    sub_10055AE38();
    sub_10055AFCC();
    _ConditionalContent<>.init(storage:)();
    int v58 = (unsigned __int16)v85 | (BYTE2(v85) << 16);
    if (HIBYTE(v85)) {
      int v59 = 0x1000000;
    }
    else {
      int v59 = 0;
    }
    goto LABEL_45;
  }
  int v65 = enum case for TargetZone.ZoneType.none(_:);
  LocalizedStringKey.init(stringLiteral:)();
  if (v15 != v65)
  {
    *(void *)&long long v79 = Text.init(_:tableName:bundle:comment:)();
    *((void *)&v79 + 1) = v74;
    *(void *)&long long v80 = v75 & 1;
    *((void *)&v80 + 1) = v76;
    int v81 = 0;
    char v82 = 1;
    sub_1000AFA94(&qword_100961E60);
    sub_10055B044(&qword_100961E68, &qword_100961E60, (void (*)(void))sub_10055AE38, (void (*)(void))sub_10055AFCC);
    _ConditionalContent<>.init(storage:)();
    long long v78 = v83;
    long long v77 = v84;
    int v26 = v85;
    char v27 = v86;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    long long v25 = v77;
    long long v24 = v78;
    goto LABEL_16;
  }
  uint64_t v66 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v68 = v67;
  char v70 = v69 & 1;
  *(void *)&long long v79 = v66;
  *((void *)&v79 + 1) = v67;
  *(void *)&long long v80 = v69 & 1;
  *((void *)&v80 + 1) = v71;
  LOBYTE(v81) = 1;
  sub_1000A1750(v66, v67, v69 & 1);
  sub_10055B0CC();
  swift_bridgeObjectRetain();
  _ConditionalContent<>.init(storage:)();
  long long v79 = v83;
  long long v80 = v84;
  LOBYTE(v81) = v85;
  BYTE1(v81) = 1;
  sub_1000AFA94(&qword_100961EC8);
  sub_1000AFA94(&qword_100961EE0);
  sub_10055B008();
  sub_10055B120();
  _ConditionalContent<>.init(storage:)();
  if (BYTE1(v85)) {
    __int16 v72 = 256;
  }
  else {
    __int16 v72 = 0;
  }
  long long v79 = v83;
  long long v80 = v84;
  LOWORD(v81) = v72 | v85;
  HIWORD(v81) = 256;
  sub_1000AFA94(&qword_100961E78);
  sub_1000AFA94(&qword_100961EB8);
  sub_10055AE38();
  sub_10055AFCC();
  _ConditionalContent<>.init(storage:)();
  if (HIBYTE(v85)) {
    int v73 = 0x1000000;
  }
  else {
    int v73 = 0;
  }
  long long v79 = v83;
  long long v80 = v84;
  int v81 = v73 | (unsigned __int16)v85 | (BYTE2(v85) << 16);
  char v82 = 0;
  sub_1000AFA94(&qword_100961E60);
  sub_10055B044(&qword_100961E68, &qword_100961E60, (void (*)(void))sub_10055AE38, (void (*)(void))sub_10055AFCC);
  _ConditionalContent<>.init(storage:)();
  sub_1000A06C0(v66, v68, v70);
  swift_bridgeObjectRelease();
LABEL_15:
  long long v24 = v83;
  long long v25 = v84;
  int v26 = v85;
  char v27 = v86;
LABEL_16:
  *(_OWORD *)a1 = v24;
  *(_OWORD *)(a1 + 16) = v25;
  *(_DWORD *)(a1 + 32) = v26;
  *(unsigned char *)(a1 + 36) = v27;
}

uint64_t sub_10055AE38()
{
  return sub_10055B044(&qword_100961E70, &qword_100961E78, (void (*)(void))sub_10055AE74, (void (*)(void))sub_10055AF3C);
}

unint64_t sub_10055AE74()
{
  unint64_t result = qword_100961E80;
  if (!qword_100961E80)
  {
    sub_1000A1370(&qword_100961E88);
    sub_10055AEE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961E80);
  }
  return result;
}

unint64_t sub_10055AEE8()
{
  unint64_t result = qword_100961E90;
  if (!qword_100961E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961E90);
  }
  return result;
}

uint64_t sub_10055AF3C()
{
  return sub_10055B044(&qword_100961E98, &qword_100961EA0, (void (*)(void))sub_10055AEE8, (void (*)(void))sub_10055AF78);
}

unint64_t sub_10055AF78()
{
  unint64_t result = qword_100961EA8;
  if (!qword_100961EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961EA8);
  }
  return result;
}

uint64_t sub_10055AFCC()
{
  return sub_10055B044(&qword_100961EB0, &qword_100961EB8, (void (*)(void))sub_10055B008, (void (*)(void))sub_10055B120);
}

uint64_t sub_10055B008()
{
  return sub_10055B044(&qword_100961EC0, &qword_100961EC8, (void (*)(void))sub_10055AF78, (void (*)(void))sub_10055B0CC);
}

uint64_t sub_10055B044(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10055B0CC()
{
  unint64_t result = qword_100961ED0;
  if (!qword_100961ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961ED0);
  }
  return result;
}

unint64_t sub_10055B120()
{
  unint64_t result = qword_100961ED8;
  if (!qword_100961ED8)
  {
    sub_1000A1370(&qword_100961EE0);
    sub_10055B0CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961ED8);
  }
  return result;
}

unint64_t sub_10055B1A0()
{
  unint64_t result = qword_100961EE8;
  if (!qword_100961EE8)
  {
    sub_1000A1370(&qword_100961EF0);
    sub_10055B044(&qword_100961E68, &qword_100961E60, (void (*)(void))sub_10055AE38, (void (*)(void))sub_10055AFCC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961EE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UnitSettingsPoolLengthUnit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10055B320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnitSettingsPoolLengthUnit()
{
  return &type metadata for UnitSettingsPoolLengthUnit;
}

void sub_10055B358(void *a1@<X8>)
{
  *a1 = &off_1008B6C70;
}

void sub_10055B368(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000025;
  if (*v1) {
    unint64_t v2 = 0xD000000000000026;
  }
  unint64_t v3 = 0x80000001007CD660;
  if (!*v1) {
    unint64_t v3 = 0x80000001007CD690;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_10055B3AC()
{
  unint64_t result = qword_100961EF8;
  if (!qword_100961EF8)
  {
    sub_1000A1370(&qword_100961F00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961EF8);
  }
  return result;
}

unint64_t sub_10055B40C()
{
  unint64_t result = qword_100961F08;
  if (!qword_100961F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100961F08);
  }
  return result;
}

BOOL sub_10055B460(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  BOOL result = 0;
  switch(v1)
  {
    case 0:
      return 1;
    case 1:
      os_log_type_t v8 = static os_log_type_t.error.getter();
      uint64_t v9 = (void *)HKLogActivity;
      os_log_type_t v10 = v8;
      if (os_log_type_enabled(HKLogActivity, v8))
      {
        long long v11 = v9;
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v11, v10, "Unexpected pool length units %lu. Setting pool length unit to meters", v12, 0xCu);
        swift_slowDealloc();
      }
      return 1;
    case 2:
    case 4:
      os_log_type_t v3 = static os_log_type_t.error.getter();
      unsigned int v4 = (void *)HKLogActivity;
      os_log_type_t v5 = v3;
      BOOL result = os_log_type_enabled(HKLogActivity, v3);
      if (result)
      {
        unsigned int v6 = v4;
        id v7 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v7 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v6, v5, "Unexpected pool length units %lu. Setting pool length unit to yards", v7, 0xCu);
        swift_slowDealloc();

        return 0;
      }
      return result;
    case 3:
      return result;
    default:
      os_log_type_t v13 = static os_log_type_t.error.getter();
      id v14 = (void *)HKLogActivity;
      os_log_type_t v15 = v13;
      if (os_log_type_enabled(HKLogActivity, v13))
      {
        uint64_t v16 = v14;
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v16, v15, "Unexpected pool length units %lu. Setting pool length unit to meters", v17, 0xCu);
        swift_slowDealloc();
      }
      return 1;
  }
}

uint64_t sub_10055B6D0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, void *a5)
{
  uint64_t v73 = a4;
  uint64_t v71 = a2;
  id v72 = a5;
  uint64_t v70 = a1;
  int v5 = a3;
  uint64_t v62 = type metadata accessor for IndexPath();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  __int16 v64 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImpressionMetrics.ID();
  uint64_t v59 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ImpressionMetrics();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v63 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v54 - v14;
  __chkstk_darwin(v13);
  uint64_t v66 = (char *)&v54 - v15;
  uint64_t v16 = type metadata accessor for ScalarDictionary();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for MetricClickElement();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v68 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  char v69 = (char *)&v54 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v54 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v54 - v29;
  uint64_t v74 = (char *)&v54 - v29;
  if (v5 == 2)
  {
    uint64_t v67 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_100182B64(2);
    uint64_t v54 = v31;
    uint64_t v56 = v10;
    uint64_t v32 = enum case for MetricClickElement.swoosh(_:);
    uint64_t v57 = v7;
    char v55 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
    v55(v20, enum case for MetricClickElement.swoosh(_:), v17);
    static MetricConstants.itemIdentifierType.getter();
    uint64_t v65 = v9;
    sub_10035193C((uint64_t)_swiftEmptyArrayStorage);
    ScalarDictionary.init()();
    ImpressionMetrics.init(parentId:elementId:name:clickElement:index:idType:additionalFields:custom:)();
    uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v67(v74, 0, 1, v65);
    sub_100182B64(2);
    v55(v20, v32, v17);
    static MetricConstants.itemIdentifierType.getter();
    sub_10035193C((uint64_t)_swiftEmptyArrayStorage);
    ScalarDictionary.init()();
    uint64_t v9 = v65;
    id v33 = v66;
    ImpressionMetrics.init(parentId:elementId:name:clickElement:index:idType:additionalFields:custom:)();
    __int16 v34 = v58;
    ImpressionMetrics.id.getter();
    uint64_t v35 = v56;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v9);
    uint64_t v36 = ImpressionMetrics.ID.element.getter();
    uint64_t v30 = v74;
    uint64_t v66 = (char *)v36;
    uint64_t v38 = v37;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v34, v57);
  }
  else
  {
    uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v67((char *)&v54 - v29, 1, 1, v9);
    uint64_t v66 = 0;
    uint64_t v38 = 0;
    uint64_t v35 = v10;
  }
  sub_10055C900((uint64_t)v30, (uint64_t)v28);
  unint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  if (v39(v28, 1, v9) == 1)
  {
    sub_10055C8A0((uint64_t)v28);
    uint64_t v40 = v73;
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v65 = v38;
    id v42 = v60;
    v41(v60, v28, v9);
    uint64_t v40 = v73;
    [v72 rectForSection:IndexPath.section.getter()];
    uint64_t v43 = IndexPath.section.getter();
    uint64_t v44 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v69, v42, v9);
    v67((char *)v44, 0, 1, v9);
    swift_beginAccess();
    sub_1005CDFB0(v44, v43);
    swift_endAccess();
    sub_10055C168();
    ImpressionsCalculator.addElement(_:at:)();
    swift_release();
    uint64_t v45 = v42;
    uint64_t v38 = v65;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v45, v9);
  }
  uint64_t v46 = (uint64_t)v68;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v48 = IndexPath.row.getter();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 16))(v66, v38, v48, ObjectType);
  swift_bridgeObjectRelease();
  if (v39((char *)v46, 1, v9) == 1)
  {
    sub_10055C8A0((uint64_t)v74);
  }
  else
  {
    uint64_t v49 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v63, v46, v9);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v72 rectForRowAtIndexPath:isa];

    uint64_t v51 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v64, v40, v62);
    uint64_t v52 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v69, v49, v9);
    v67((char *)v52, 0, 1, v9);
    swift_beginAccess();
    sub_1005CE20C(v52, v51);
    swift_endAccess();
    sub_10055C168();
    ImpressionsCalculator.addElement(_:at:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v49, v9);
    uint64_t v46 = (uint64_t)v74;
  }
  return sub_10055C8A0(v46);
}

uint64_t sub_10055BFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  os_log_type_t v3 = v2;
  unint64_t v5 = sub_100005758(a1);
  if (v6)
  {
    unint64_t v7 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    uint64_t v19 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1004F3130();
      uint64_t v9 = v19;
    }
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for ImpressionMetrics();
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v7, v11);
    sub_1005DCF00(v7, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for ImpressionMetrics();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t sub_10055C168()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ImpressionsCalculator.Configuration();
  __chkstk_darwin(v2 - 8);
  if (*(void *)(v0 + 32))
  {
    uint64_t v3 = *(void *)(v0 + 32);
  }
  else
  {
    type metadata accessor for ImpressionsCalculator();
    static ImpressionsCalculator.Configuration.half.getter();
    swift_unknownObjectRetain();
    uint64_t v3 = ImpressionsCalculator.__allocating_init(configuration:tracker:)();
    *(void *)(v1 + 32) = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v3;
}

uint64_t sub_10055C248()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityTileImpressionsTracker()
{
  return self;
}

uint64_t sub_10055C2BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)[a3 numberOfSections] <= a1)
  {
    swift_beginAccess();
    sub_10055BFEC(a1, (uint64_t)v7);
    sub_10055C8A0((uint64_t)v7);
    swift_endAccess();
    sub_10055C168();
    ImpressionsCalculator.removeElement(_:)();
    return swift_release();
  }
  else
  {
    [a3 rectForSection:a1];
    sub_10055C168();
    ImpressionsCalculator.addElement(_:at:)();
    return swift_release();
  }
}

uint64_t sub_10055C440(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = IndexPath.section.getter();
  if (v8 >= (uint64_t)[a3 numberOfSections]
    || (uint64_t v9 = IndexPath.row.getter(),
        v9 >= (uint64_t)[a3 numberOfRowsInSection:IndexPath.section.getter()]))
  {
    swift_beginAccess();
    sub_1005DBBC4(a1, (uint64_t)v7);
    sub_10055C8A0((uint64_t)v7);
    swift_endAccess();
    sub_10055C168();
    ImpressionsCalculator.removeElement(_:)();
    return swift_release();
  }
  else
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [a3 rectForRowAtIndexPath:isa];

    sub_10055C168();
    ImpressionsCalculator.addElement(_:at:)();
    return swift_release();
  }
}

uint64_t sub_10055C600(uint64_t a1)
{
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v18[-v7];
  uint64_t v9 = type metadata accessor for ImpressionMetrics();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v13 = *(void *)(v1 + 48);
  if (!*(void *)(v13 + 16))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    return sub_10055C8A0((uint64_t)v8);
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_100529B44(a1);
  if (v15)
  {
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v10 + 16))(v8, *(void *)(v13 + 56) + *(void *)(v10 + 72) * v14, v9);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 1;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v16, 1, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10055C8A0((uint64_t)v8);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
  swift_beginAccess();
  sub_1005DBBC4(a1, (uint64_t)v6);
  sub_10055C8A0((uint64_t)v6);
  swift_endAccess();
  sub_10055C168();
  ImpressionsCalculator.removeElement(_:)();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10055C8A0(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10055C900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10055C968()
{
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100754580;
  id v2 = [v0 mondayGoal];
  id v3 = [v0 goalType];
  uint64_t v4 = (objc_class *)type metadata accessor for GoalDay();
  uint64_t v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v2;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v3;
  v31.receiver = v5;
  v31.super_class = v4;
  [super init];
  id v6 = [v0 tuesdayGoal];
  id v7 = [v0 goalType];
  uint64_t v8 = objc_allocWithZone(v4);
  v8[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 1;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v6;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v7;
  v30.receiver = v8;
  v30.super_class = v4;
  *(void *)(v1 + 40) = [super init];
  id v9 = [v0 wednesdayGoal];
  id v10 = [v0 goalType];
  uint64_t v11 = objc_allocWithZone(v4);
  v11[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 2;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v9;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v10;
  v29.receiver = v11;
  v29.super_class = v4;
  [super init];
  id v12 = [v0 thursdayGoal];
  id v13 = [v0 goalType];
  unint64_t v14 = objc_allocWithZone(v4);
  v14[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 3;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v12;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v13;
  v28.receiver = v14;
  v28.super_class = v4;
  [super init];
  id v15 = [v0 fridayGoal];
  id v16 = [v0 goalType];
  uint64_t v17 = objc_allocWithZone(v4);
  v17[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 4;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v15;
  *(void *)&v17[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v16;
  v27.receiver = v17;
  v27.super_class = v4;
  *(void *)(v1 + 64) = [super init];
  id v18 = [v0 saturdayGoal];
  id v19 = [v0 goalType];
  id v20 = objc_allocWithZone(v4);
  v20[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 5;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v18;
  *(void *)&v20[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v19;
  v26.receiver = v20;
  v26.super_class = v4;
  [super init];
  id v21 = [v0 sundayGoal];
  id v22 = [v0 goalType];
  uint64_t v23 = objc_allocWithZone(v4);
  v23[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] = 6;
  *(void *)&v23[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal] = v21;
  *(void *)&v23[OBJC_IVAR____TtC10FitnessApp7GoalDay_goalType] = v22;
  v25.receiver = v23;
  v25.super_class = v4;
  [super init];
  specialized Array._endMutation()();
  return v1;
}

id sub_10055CD28()
{
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v0 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Calendar();
  uint64_t v3 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DateComponents();
  uint64_t v6 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v9 = type metadata accessor for Calendar.Component();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1007509E0;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, enum case for Calendar.Component.weekday(_:), v9);
  sub_1000C6A18(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  Date.init()();
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  uint64_t v13 = DateComponents.weekday.getter();
  LOBYTE(v10) = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
  id result = 0;
  if ((v10 & 1) == 0)
  {
    if ((unint64_t)(v13 - 1) > 6) {
      return 0;
    }
    else {
      return [v16 *(&off_1008CDFA0)[v13 - 1]];
    }
  }
  return result;
}

char *sub_10055D0C0(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)type metadata accessor for Date();
  uint64_t v5 = (char *)*(v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_105;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_39;
  }
LABEL_3:
  unint64_t v9 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
LABEL_108:
  }
    uint64_t v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  else {
    uint64_t v10 = (char *)*(id *)(a1 + 32);
  }
  unint64_t v11 = v10;
  if (!v10[OBJC_IVAR____TtC10FitnessApp7GoalDay_day])
  {
    uint64_t v79 = a2;
    long long v80 = v7;
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_21;
    }
    goto LABEL_23;
  }

  if (v8 == 1) {
    goto LABEL_39;
  }
  if (!v9)
  {
    uint64_t v15 = 5;
    while (1)
    {
      uint64_t v16 = v15 - 3;
      if (__OFADD__(v15 - 4, 1)) {
        goto LABEL_104;
      }
      uint64_t v17 = *(unsigned char **)(a1 + 8 * v15);
      if (!v17[OBJC_IVAR____TtC10FitnessApp7GoalDay_day]) {
        break;
      }
      ++v15;
      if (v16 == v8) {
        goto LABEL_39;
      }
    }
    uint64_t v79 = a2;
    long long v80 = v7;
    unint64_t v11 = v17;
    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v18 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain();
    uint64_t v7 = v18;
    a2 = 1;
    goto LABEL_24;
  }
  uint64_t v12 = 1;
  while (1)
  {
    uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v14 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (!v8) {
        goto LABEL_39;
      }
      goto LABEL_3;
    }
    unint64_t v11 = (char *)v13;
    if (!*(unsigned char *)(v13 + OBJC_IVAR____TtC10FitnessApp7GoalDay_day)) {
      break;
    }
    swift_unknownObjectRelease();
    ++v12;
    if (v14 == v8) {
      goto LABEL_39;
    }
  }
  uint64_t v79 = a2;
  long long v80 = v7;
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRetain();
  uint64_t v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  a2 = 0;
LABEL_24:
  if (v7[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] != 1)
  {

    if (v8 != 1)
    {
      uint64_t v23 = 5;
      do
      {
        uint64_t v24 = a2
            ? (char *)*(id *)(a1 + 8 * v23)
            : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = v24;
        uint64_t v25 = v23 - 3;
        if (__OFADD__(v23 - 4, 1)) {
          goto LABEL_103;
        }
        if (v24[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 1) {
          goto LABEL_25;
        }

        ++v23;
      }
      while (v25 != v8);
    }

LABEL_39:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_25:
  long long v78 = v5;
  swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v19 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain();
    id v20 = v19;
    goto LABEL_27;
  }
  while (2)
  {
    swift_bridgeObjectRetain();
    id v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_27:
    uint64_t v5 = v20;
    if (v20[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] != 2)
    {

      if (v8 == 1)
      {
LABEL_50:

        swift_bridgeObjectRelease();
        return 0;
      }
      unint64_t v9 = 5;
      while (1)
      {
        objc_super v28 = a2
            ? (char *)*(id *)(a1 + 8 * v9)
            : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v5 = v28;
        unint64_t v29 = v9 - 3;
        if (__OFADD__(v9 - 4, 1)) {
          break;
        }
        if (v28[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 2) {
          goto LABEL_28;
        }

        ++v9;
        if (v29 == v8) {
          goto LABEL_50;
        }
      }
      __break(1u);
      goto LABEL_108;
    }
LABEL_28:
    long long v77 = v4;
    swift_bridgeObjectRelease();
    if (a2)
    {
      id v21 = *(void **)(a1 + 32);
      swift_bridgeObjectRetain();
      id v22 = v21;
    }
    else
    {
      swift_bridgeObjectRetain();
      id v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    uint64_t v4 = v22;
    if (*((unsigned char *)v22 + OBJC_IVAR____TtC10FitnessApp7GoalDay_day) != 3)
    {

      if (v8 == 1)
      {
LABEL_63:

        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v32 = 5;
      while (1)
      {
        id v33 = a2
            ? *(id *)(a1 + 8 * v32)
            : (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = v33;
        uint64_t v34 = v32 - 3;
        if (__OFADD__(v32 - 4, 1)) {
          break;
        }
        if (*((unsigned char *)v33 + OBJC_IVAR____TtC10FitnessApp7GoalDay_day) == 3) {
          goto LABEL_53;
        }

        ++v32;
        if (v34 == v8) {
          goto LABEL_63;
        }
      }
      __break(1u);
LABEL_110:
      __break(1u);
      continue;
    }
    break;
  }
LABEL_53:
  swift_bridgeObjectRelease();
  if (a2)
  {
    objc_super v30 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain();
    objc_super v31 = v30;
  }
  else
  {
    swift_bridgeObjectRetain();
    objc_super v31 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  if (v31[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] != 4)
  {

    if (v8 == 1)
    {
LABEL_76:

      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v36 = 5;
    while (1)
    {
      objc_super v31 = a2
          ? (char *)*(id *)(a1 + 8 * v36)
          : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v37 = v36 - 3;
      if (__OFADD__(v36 - 4, 1)) {
        goto LABEL_110;
      }
      if (v31[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 4) {
        break;
      }

      ++v36;
      if (v37 == v8) {
        goto LABEL_76;
      }
    }
  }
  uint64_t v76 = v31;
  swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v35 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain();
    id result = v35;
  }
  else
  {
    swift_bridgeObjectRetain();
    id result = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  if (result[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 5)
  {
LABEL_79:
    char v75 = result;
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v38 = *(void **)(a1 + 32);
      swift_bridgeObjectRetain();
      id result = v38;
    }
    else
    {
      swift_bridgeObjectRetain();
      id result = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    if (result[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 6)
    {
LABEL_92:
      uint64_t v41 = result;
      swift_bridgeObjectRelease();
      Date.init()();
      id v42 = *(void **)&v11[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      uint64_t v43 = *(void **)&v7[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      uint64_t v44 = *(void **)&v5[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      uint64_t v45 = *(void **)((char *)v4 + OBJC_IVAR____TtC10FitnessApp7GoalDay_goal);
      uint64_t v46 = *(void **)&v76[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      Class v69 = *(Class *)&v75[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      id v74 = v41;
      uint64_t v47 = *(void **)&v41[OBJC_IVAR____TtC10FitnessApp7GoalDay_goal];
      id v70 = self;
      id v73 = v42;
      id v72 = v43;
      id v71 = v44;
      id v48 = v45;
      id v49 = v46;
      uint64_t v50 = v69;
      uint64_t v67 = v50;
      id v51 = v47;
      id v68 = v51;
      id v52 = [v70 localDevice];
      id v70 = v52;
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      Class v69 = isa;
      uint64_t v54 = self;
      id v66 = v52;
      __int16 v64 = v50;
      id v65 = v51;
      id v63 = v49;
      char v55 = v49;
      Class v56 = isa;
      int v58 = v72;
      uint64_t v57 = v73;
      uint64_t v59 = v71;
      uint64_t v60 = v48;
      id v26 = [v54 activityGoalScheduleWithDate:v56 goalType:v79 mondayGoal:v73 tuesdayGoal:v72 wednesdayGoal:v71 thursdayGoal:v48 fridayGoal:v63 saturdayGoal:v64 sundayGoal:v65 device:v66 metadata:0];

      (*((void (**)(char *, void *))v78 + 1))(v80, v77);
      return (char *)v26;
    }

    if (v8 == 1)
    {
LABEL_101:

      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v61 = 5;
    while (1)
    {
      id result = a2
             ? (char *)*(id *)(a1 + 8 * v61)
             : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v62 = v61 - 3;
      if (__OFADD__(v61 - 4, 1)) {
        break;
      }
      if (result[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 6) {
        goto LABEL_92;
      }

      ++v61;
      if (v62 == v8) {
        goto LABEL_101;
      }
    }
  }
  else
  {

    if (v8 == 1)
    {
LABEL_89:

      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v39 = 5;
    while (1)
    {
      id result = a2
             ? (char *)*(id *)(a1 + 8 * v39)
             : (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v40 = v39 - 3;
      if (__OFADD__(v39 - 4, 1)) {
        break;
      }
      if (result[OBJC_IVAR____TtC10FitnessApp7GoalDay_day] == 5) {
        goto LABEL_79;
      }

      ++v39;
      if (v40 == v8) {
        goto LABEL_89;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for DiveDisplayStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10055D9C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiveDisplayStyle()
{
  return &type metadata for DiveDisplayStyle;
}

unint64_t sub_10055DA00()
{
  unint64_t result = qword_100962010;
  if (!qword_100962010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962010);
  }
  return result;
}

uint64_t sub_10055DA54()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  unsigned int v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unsigned int v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[TV Connection] requestGuestAuthentication succeeded!", v6, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10055DBAC()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RemoteParticipant();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v9 = (void *)result;
    RemoteParticipantDiscovered.participant.getter();
    static Log.default.getter();
    v10._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
    v10._object = (void *)0x80000001007CD810;
    v11._object = (void *)0x80000001007CD990;
    v11._uint64_t countAndFlagsBits = 0xD000000000000025;
    Logger.trace(file:function:)(v10, v11);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_10055F788((uint64_t)v7);
    sub_100560D04();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_10055DD9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), void (*a5)(char *))
{
  uint64_t v7 = a3(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v13 - v9;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = (void *)result;
    a4();
    a5(v10);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_10055DF08()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v51 + 64);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - v6;
  __chkstk_darwin(v5);
  id v49 = (char *)&v45 - v8;
  uint64_t v9 = type metadata accessor for TVConnectionManager.State(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v50 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v20 = (char *)&v45 - v19;
  static Log.default.getter();
  v21._object = (void *)0x80000001007CD810;
  v21._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
  v22._uint64_t countAndFlagsBits = 0x6F63736944646E65;
  v22._object = (void *)0xEE00292879726576;
  Logger.trace(file:function:)(v21, v22);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  uint64_t v47 = v15;
  id v48 = v23;
  v23(v20, v15);
  uint64_t v24 = v1;
  uint64_t v25 = (uint64_t)&v1[OBJC_IVAR___NLTVConnectionManager_state];
  swift_beginAccess();
  sub_10006B688(v25, (uint64_t)v14);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v1) = sub_10056156C((uint64_t)v14, (uint64_t)v12);
  sub_10006B590((uint64_t)v12);
  uint64_t result = sub_10006B590((uint64_t)v14);
  if ((v1 & 1) == 0)
  {
    sub_10006B688(v25, (uint64_t)v14);
    swift_storeEnumTagMultiPayload();
    char v27 = sub_10056156C((uint64_t)v14, (uint64_t)v12);
    sub_10006B590((uint64_t)v12);
    uint64_t result = sub_10006B590((uint64_t)v14);
    if ((v27 & 1) == 0)
    {
      id v45 = v24;
      sub_10007E4EC(&v24[OBJC_IVAR___NLTVConnectionManager_participantClient], *(void *)&v24[OBJC_IVAR___NLTVConnectionManager_participantClient + 24]);
      dispatch thunk of RemoteParticipantClientProtocol.endDiscoveringParticipants()();
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v24;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = sub_100561C64;
      *(void *)(v29 + 24) = v28;
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = sub_1000E02E0;
      *(void *)(v30 + 24) = v29;
      uint64_t v31 = v51;
      uint64_t v32 = v46;
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v46, v7, v2);
      unint64_t v33 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v34 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v34 + v33, v32, v2);
      uint64_t v35 = (void *)(v34 + ((v3 + v33 + 7) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v35 = sub_1000E2B90;
      v35[1] = v30;
      id v36 = v45;
      uint64_t v37 = v49;
      Promise.init(asyncOperation:)();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v31 + 8);
      v38(v7, v2);
      uint64_t v39 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = 0;
      *(void *)(v40 + 24) = 0;
      v39(sub_10006D36C, v40);
      swift_release();
      swift_release();
      v38(v37, v2);
      uint64_t v41 = v50;
      static Log.default.getter();
      id v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "[TV Connection] Ended discovering advertising TVs", v44, 2u);
        swift_slowDealloc();
      }

      return v48(v41, v47);
    }
  }
  return result;
}

uint64_t sub_10055E4A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = a1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess();
  sub_1000E82F4((uint64_t)v4, v5);
  swift_endAccess();
  uint64_t v6 = dispatch thunk of GuestPairingNotificationCoordinator.remove()();
  return sub_10006B35C(v6);
}

uint64_t sub_10055E5C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v63 - v6;
  uint64_t v8 = type metadata accessor for RemoteParticipant();
  uint64_t v76 = *(void **)(v8 - 8);
  uint64_t v77 = v8;
  uint64_t v9 = v76[8];
  __chkstk_darwin(v8);
  id v73 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v75 = (char *)&v63 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v63 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v74 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v20 = (char *)&v63 - v19;
  static Log.default.getter();
  v21._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
  v21._object = (void *)0x80000001007CD810;
  v22._object = (void *)0x80000001007CD910;
  v22._uint64_t countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v21, v22);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v20, v15);
  uint64_t v24 = (uint64_t)v1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess();
  sub_10006B688(v24, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_10006B590((uint64_t)v7);
  }
  id v72 = v23;
  id v70 = v1;
  uint64_t v26 = v15;
  char v27 = v76;
  uint64_t v28 = v7;
  uint64_t v29 = v77;
  id v68 = (void (*)(char *, char *, uint64_t))v76[4];
  Class v69 = v76 + 4;
  v68(v14, v28, v77);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_1000E82F4((uint64_t)v4, v24);
  swift_endAccess();
  uint64_t v30 = v74;
  static Log.default.getter();
  uint64_t v31 = v27;
  uint64_t v32 = v26;
  unint64_t v33 = v30;
  id v36 = (void (*)(void, void, void))v31[2];
  uint64_t v34 = v31 + 2;
  uint64_t v35 = v36;
  id v71 = v14;
  v36(v75, v14, v29);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = v73;
  if (v39)
  {
    uint64_t v41 = swift_slowAlloc();
    os_log_t v64 = v37;
    id v42 = (uint8_t *)v41;
    uint64_t v65 = swift_slowAlloc();
    aBlock[0] = v65;
    uint64_t v67 = v34;
    *(_DWORD *)id v42 = 136315138;
    id v63 = v42 + 4;
    uint64_t v66 = v32;
    os_log_type_t v43 = v40;
    uint64_t v44 = v35;
    id v45 = v75;
    uint64_t v46 = RemoteParticipant.description.getter();
    uint64_t v78 = sub_10008F1F4(v46, v47, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v49 = v76;
    uint64_t v48 = v77;
    uint64_t v50 = v45;
    uint64_t v35 = v44;
    uint64_t v40 = v43;
    char v75 = (char *)v76[1];
    ((void (*)(char *, uint64_t))v75)(v50, v77);
    os_log_t v51 = v64;
    _os_log_impl((void *)&_mh_execute_header, v64, v38, "[TV Connection] User allowed TV connection for remote participant %s", v42, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v72(v33, v66);
    uint64_t v52 = v48;
    uint64_t v53 = v49;
  }
  else
  {
    uint64_t v54 = v75;
    uint64_t v53 = v76;
    uint64_t v52 = v77;
    char v75 = (char *)v76[1];
    ((void (*)(char *, uint64_t))v75)(v54, v77);

    v72(v33, v32);
  }
  char v55 = v70;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v57 = v71;
  if (Strong)
  {
    int v58 = (void *)Strong;
    v35(v40, v71, v52);
    unint64_t v59 = (*((unsigned __int8 *)v53 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v53 + 80);
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = v55;
    v68((char *)(v60 + v59), v40, v52);
    aBlock[4] = (uint64_t)sub_100561A30;
    aBlock[5] = v60;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1004AE478;
    aBlock[3] = (uint64_t)&unk_1008CE1A8;
    uint64_t v61 = _Block_copy(aBlock);
    id v62 = v55;
    swift_release();
    [v58 presentBrowsingConsentAlertWithCompletion:v61];
    _Block_release(v61);
    swift_unknownObjectRelease();
  }
  return ((uint64_t (*)(char *, uint64_t))v75)(v57, v52);
}

uint64_t sub_10055EC24(char a1, char *a2, uint64_t a3)
{
  id v73 = a2;
  uint64_t v72 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v72);
  uint64_t v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RemoteParticipant();
  uint64_t v70 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  __chkstk_darwin(v7);
  uint64_t v67 = v8;
  id v68 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  os_log_t v64 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v65 = (char *)&v59 - v13;
  __chkstk_darwin(v14);
  uint64_t v66 = (char *)&v59 - v15;
  __chkstk_darwin(v16);
  Class v69 = (char *)&v59 - v17;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  Swift::String v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v59 - v23;
  if (a1)
  {
    uint64_t v72 = a3;
    static Log.default.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      char v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[TV Connection] Consent granted", v27, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
    sub_10007E4EC(&v73[OBJC_IVAR___NLTVConnectionManager_browsingClient], *(void *)&v73[OBJC_IVAR___NLTVConnectionManager_browsingClient + 24]);
    uint64_t v28 = v65;
    dispatch thunk of RemoteBrowsingClientProtocol.requestGuestAuthentication(to:)();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_10055DA54;
    *(void *)(v29 + 24) = 0;
    id v63 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v30 = v64;
    v63(v64, v28, v9);
    uint64_t v31 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v32 = (v31 + 16) & ~v31;
    uint64_t v60 = v32;
    unint64_t v33 = (v11 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v61 = v33 + 16;
    uint64_t v62 = v31 | 7;
    uint64_t v34 = swift_allocObject();
    unint64_t v59 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v59(v34 + v32, v30, v9);
    uint64_t v35 = (uint64_t (**)(uint64_t))(v34 + v33);
    unint64_t v36 = v33;
    *uint64_t v35 = sub_10003936C;
    v35[1] = (uint64_t (*)(uint64_t))v29;
    uint64_t v37 = v66;
    Promise.init(asyncOperation:)();
    os_log_t v64 = *(char **)(v10 + 8);
    ((void (*)(char *, uint64_t))v64)(v28, v9);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10055F380;
    *(void *)(v38 + 24) = 0;
    v63(v28, v37, v9);
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v9;
    v59(v39 + v60, v28, v9);
    uint64_t v41 = (uint64_t (**)(uint64_t))(v39 + v36);
    *uint64_t v41 = sub_1001B36B8;
    v41[1] = (uint64_t (*)(uint64_t))v38;
    id v42 = v69;
    Promise.init(asyncOperation:)();
    os_log_type_t v43 = v37;
    uint64_t v44 = (uint64_t (*)(char *, uint64_t))v64;
    ((void (*)(char *, uint64_t))v64)(v43, v9);
    uint64_t v46 = v70;
    uint64_t v45 = v71;
    unint64_t v47 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v68, v72, v71);
    unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v49 = swift_allocObject();
    uint64_t v50 = v73;
    *(void *)(v49 + 16) = v73;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v49 + v48, v47, v45);
    id v51 = v50;
    uint64_t v52 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = sub_100561BB4;
    *(void *)(v53 + 24) = v49;
    swift_retain();
    v52(sub_10006D36C, v53);
    swift_release();
    swift_release();
    swift_release();
    return v44(v42, v40);
  }
  else
  {
    static Log.default.getter();
    char v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "[TV Connection] Consent declined", v57, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = (uint64_t)&v73[OBJC_IVAR___NLTVConnectionManager_state];
    swift_beginAccess();
    sub_1000E82F4((uint64_t)v6, v58);
    swift_endAccess();
    dispatch thunk of GuestPairingNotificationCoordinator.remove()();
    return sub_10006B35C();
  }
}

uint64_t sub_10055F380()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = v0;
    uint64_t v8 = (uint8_t *)v7;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v13 = v1;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v12 = v8 + 4;
    swift_getErrorValue();
    uint64_t v9 = Error.localizedDescription.getter();
    uint64_t v15 = sub_10008F1F4(v9, v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[TV Connection] requestGuestAuthentication failed with error %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v13);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_10055F5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a2 + OBJC_IVAR___NLTVConnectionManager_state;
    swift_beginAccess();
    sub_1000E82F4((uint64_t)v8, v9);
    swift_endAccess();
    dispatch thunk of GuestPairingNotificationCoordinator.remove()();
  }
  else
  {
    uint64_t v10 = type metadata accessor for RemoteParticipant();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, a3, v10);
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a2 + OBJC_IVAR___NLTVConnectionManager_state;
    swift_beginAccess();
    sub_1000E82F4((uint64_t)v8, v11);
    swift_endAccess();
  }
  return sub_10006B35C();
}

uint64_t sub_10055F788(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TVConnectionManager.State(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v19[-v8];
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Log.default.getter();
  v14._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
  v14._object = (void *)0x80000001007CD810;
  v15._object = (void *)0x80000001007CD8E0;
  v15._uint64_t countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v14, v15);
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v16 = v2 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess();
  sub_10006B688(v16, (uint64_t)v9);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t result = sub_10006B590((uint64_t)v9);
      break;
    case 2:
    case 4:
    case 5:
      return result;
    case 3:
      goto LABEL_3;
    default:
      sub_10006B590((uint64_t)v9);
LABEL_3:
      uint64_t v18 = type metadata accessor for RemoteParticipant();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v7, a1, v18);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_1000E82F4((uint64_t)v7, v16);
      uint64_t result = swift_endAccess();
      break;
  }
  return result;
}

uint64_t sub_10055FA08(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v26 = a1;
  uint64_t v3 = type metadata accessor for RemoteParticipant();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = type metadata accessor for TVConnectionManager.State(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::String v14 = (char *)&v26 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v19._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
  v19._object = (void *)0x80000001007CD810;
  v20._object = (void *)0x80000001007CD8C0;
  v20._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v19, v20);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v21 = v2 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess();
  sub_10006B688(v21, (uint64_t)v14);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v24 = v27;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v8, v14, v3);
      if (static RemoteParticipant.== infix(_:_:)())
      {
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        sub_1000E82F4((uint64_t)v12, v21);
        swift_endAccess();
        sub_10006B35C();
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v3);
      break;
    case 2:
    case 3:
      return result;
    case 4:
    case 5:
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong cleanupGuestAuthentication:v26];
        swift_unknownObjectRelease();
      }
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_1000E82F4((uint64_t)v12, v21);
      swift_endAccess();
      dispatch thunk of GuestPairingNotificationCoordinator.remove()();
      uint64_t result = sub_10006B35C();
      break;
    default:
      uint64_t v25 = v27;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v6, v14, v3);
      if (static RemoteParticipant.== infix(_:_:)())
      {
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        sub_1000E82F4((uint64_t)v12, v21);
        swift_endAccess();
        sub_10006B35C();
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v6, v3);
      break;
  }
  return result;
}

void sub_10055FE38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = type metadata accessor for TVConnectionManager.State(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&aBlock[-1] - v7;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&aBlock[-1] - v14;
  static Log.default.getter();
  v16._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
  v16._object = (void *)0x80000001007CD810;
  v17._object = (void *)0x80000001007CD880;
  v17._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v16, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v15, v9);
  uint64_t v19 = v2 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess();
  sub_10006B688(v19, (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_10006B590((uint64_t)v8);
  if (EnumCaseMultiPayload == 4)
  {
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1000E82F4((uint64_t)v6, v19);
    swift_endAccess();
    static Log.default.getter();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[TV Connection] Presenting passcode prompt", v23, 2u);
      swift_slowDealloc();
    }

    v18(v13, v9);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v25 = (void *)Strong;
      uint64_t v26 = RemoteParticipantPasswordChallenge.passwordLength.getter();
      uint64_t v27 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1005619CC;
      aBlock[5] = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100560C88;
      aBlock[3] = &unk_1008CE0B8;
      uint64_t v28 = _Block_copy(aBlock);
      swift_release();
      [v25 promptForPasscodeWithLength:v26 completion:v28, v29];
      swift_unknownObjectRelease();
      _Block_release(v28);
    }
  }
}

uint64_t sub_1005601CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::String v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    swift_bridgeObjectRetain();
    Swift::String v17 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = a3;
    v18[3] = a1;
    unsigned char v18[4] = a2;
    uint64_t v35 = sub_100561A1C;
    unint64_t v36 = v18;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    uint64_t v19 = &unk_1008CE130;
  }
  else
  {
    static Log.default.getter();
    Swift::String v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = v7;
      *(_WORD *)os_log_type_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[TV Connection] User cancelled pairing passcode prompt", v22, 2u);
      uint64_t v7 = v28;
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    Swift::String v17 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v35 = sub_1005619D4;
    unint64_t v36 = a3;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    uint64_t v19 = &unk_1008CE0E0;
  }
  unint64_t v33 = sub_100070394;
  uint64_t v34 = v19;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  uint64_t v25 = v29;
  uint64_t v24 = v30;
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v24);
}

void sub_1005605FC()
{
  uint64_t v0 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v0);
  uint64_t v2 = &v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    swift_storeEnumTagMultiPayload();
    uint64_t v5 = (uint64_t)v4 + OBJC_IVAR___NLTVConnectionManager_state;
    swift_beginAccess();
    sub_1000E82F4((uint64_t)v2, v5);
    swift_endAccess();
    dispatch thunk of GuestPairingNotificationCoordinator.remove()();
    sub_10006B35C();
  }
}

uint64_t sub_100560700()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TVConnectionManager.State(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = (uint64_t)v8 + OBJC_IVAR___NLTVConnectionManager_state;
    swift_beginAccess();
    sub_1000E82F4((uint64_t)v6, v9);
    swift_endAccess();
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    sub_10008E75C(result + OBJC_IVAR___NLTVConnectionManager_browsingClient, (uint64_t)v15);

    sub_10007E4EC(v15, v15[3]);
    dispatch thunk of RemoteBrowsingClientProtocol.tryPassword(_:)();
    uint64_t v12 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_100560984;
    *(void *)(v13 + 24) = 0;
    v12(sub_10006D8B4, v13);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v15);
  }
  return result;
}

uint64_t sub_100560984(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v19 - v7;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v9 = *(void *)a1;
    swift_errorRetain();
    static Log.default.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      v19[1] = v12 + 4;
      swift_getErrorValue();
      uint64_t v13 = Error.localizedDescription.getter();
      v19[2] = sub_10008F1F4(v13, v14, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10006D814(v9, 1);
      sub_10006D814(v9, 1);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "[TV Connection] Passcode entry failed with error %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10006D814(v9, 1);
    }
    else
    {
      sub_10006D814(v9, 1);
      sub_10006D814(v9, 1);
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    static Log.default.getter();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      Swift::String v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[TV Connection] Passcode entry succeeded", v17, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

uint64_t sub_100560C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  swift_retain();
  v2(v3, v5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100560D04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_100962148);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TVConnectionManager.State(0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  os_log_type_t v11 = (char *)&v17 - v10;
  uint64_t v12 = v1 + OBJC_IVAR___NLTVConnectionManager_state;
  swift_beginAccess();
  sub_10006B688(v12, (uint64_t)v11);
  sub_10006B688((uint64_t)v11, (uint64_t)v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10006B590((uint64_t)v9);
      return sub_10006B590((uint64_t)v11);
    case 2u:
    case 3u:
      goto LABEL_3;
    case 4u:
    case 5u:
      return sub_10006B590((uint64_t)v11);
    default:
      sub_10006B590((uint64_t)v9);
LABEL_3:
      sub_10006B590((uint64_t)v11);
      sub_10007E4EC((void *)(v1 + OBJC_IVAR___NLTVConnectionManager_sessionClient), *(void *)(v1 + OBJC_IVAR___NLTVConnectionManager_sessionClient + 24));
      dispatch thunk of SessionClientProtocol.queryActiveSession()();
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      unint64_t v14 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_100561958;
      *(void *)(v15 + 24) = v13;
      swift_retain();
      v14(sub_1000DC468, v15);
      swift_release();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_100560FB8(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100962150);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100561964(a1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_10008DB18((uint64_t)v4, &qword_100962150);
  }
  sub_10008DB18((uint64_t)v4, &qword_100962150);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    swift_retain();

    dispatch thunk of GuestPairingNotificationCoordinator.post()();
    return swift_release();
  }
  return result;
}

id sub_1005610FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVConnectionManager(0);
  return [super dealloc];
}

uint64_t *sub_1005611F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for RemoteParticipant();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_100561340(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10006B590((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for RemoteParticipant();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_10056145C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for RemoteParticipant();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10056156C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteParticipant();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = type metadata accessor for TVConnectionManager.State(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = sub_1000AFA94(&qword_100962140);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_10006B688(a1, (uint64_t)v19);
  sub_10006B688(a2, v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10006B688((uint64_t)v19, (uint64_t)v13);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_6;
      }
      uint64_t v21 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v7, v20, v4);
      char v22 = static RemoteParticipant.== infix(_:_:)();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v21 + 8);
      v23(v7, v4);
      v23(v13, v4);
      goto LABEL_16;
    case 2u:
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_8;
      }
      goto LABEL_14;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_14;
      }
      goto LABEL_8;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_14;
      }
      goto LABEL_8;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_14;
      }
LABEL_8:
      sub_10006B590((uint64_t)v19);
      char v22 = 1;
      break;
    default:
      sub_10006B688((uint64_t)v19, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v13 = v15;
LABEL_6:
        (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v4);
LABEL_14:
        sub_10008DB18((uint64_t)v19, &qword_100962140);
        char v22 = 0;
      }
      else
      {
        uint64_t v24 = v28;
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v9, v20, v4);
        char v22 = static RemoteParticipant.== infix(_:_:)();
        uint64_t v25 = *(void (**)(char *, uint64_t))(v24 + 8);
        v25(v9, v4);
        v25(v15, v4);
LABEL_16:
        sub_10006B590((uint64_t)v19);
      }
      break;
  }
  return v22 & 1;
}

uint64_t sub_100561920()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100561958(uint64_t a1)
{
  return sub_100560FB8(a1);
}

uint64_t sub_100561964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100962150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005619CC(uint64_t a1, uint64_t a2)
{
  return sub_1005601CC(a1, a2, v2);
}

void sub_1005619D4()
{
}

uint64_t sub_1005619DC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100561A1C()
{
  return sub_100560700();
}

uint64_t sub_100561A30(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RemoteParticipant() - 8);
  uint64_t v4 = *(char **)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10055EC24(a1, v4, v5);
}

uint64_t sub_100561AA4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100561AE8()
{
  uint64_t v1 = type metadata accessor for RemoteParticipant();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100561BB4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RemoteParticipant() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10055F5C8(a1, v4, v5);
}

uint64_t sub_100561C2C()
{
  return swift_deallocObject();
}

uint64_t sub_100561C64()
{
  return sub_10055E4A8(*(void *)(v0 + 16));
}

uint64_t sub_100561C7C()
{
  return sub_10055DBAC();
}

uint64_t sub_100561C84(uint64_t a1)
{
  return sub_10055DD9C(a1, v1, (uint64_t (*)(void))&type metadata accessor for RemoteParticipant, (void (*)(void))&RemoteParticipantLost.participant.getter, (void (*)(char *))sub_10055FA08);
}

uint64_t sub_100561CDC(uint64_t a1)
{
  return sub_10055DD9C(a1, v1, (uint64_t (*)(void))&type metadata accessor for RemoteParticipantPasswordChallenge, (void (*)(void))&RemoteParticipantPasswordRequired.challenge.getter, (void (*)(char *))sub_10055FE38);
}

void static ShapeStyle<>.timeYellow.getter()
{
  id v0 = [self elapsedTimeColors];
  if (!v0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v1 = v0;
  id v2 = [v0 nonGradientTextColor];

  if (!v2)
  {
LABEL_7:
    __break(1u);
    return;
  }

  Color.init(uiColor:)();
}

ValueMetadata *type metadata accessor for DivingDetailChartContainer()
{
  return &type metadata for DivingDetailChartContainer;
}

uint64_t sub_100561DDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100561DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100962188);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v15[-v9];
  uint64_t v16 = a1;
  static Axis.Set.vertical.getter();
  sub_1000AFA94(&qword_100962190);
  sub_1000A132C(&qword_100962198, &qword_100962190);
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16);
  v11(v7, v10, v4);
  *(void *)a2 = 0x4014000000000000;
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v12 = sub_1000AFA94(&qword_1009621A0);
  v11((unsigned char *)(a2 + *(int *)(v12 + 48)), v7, v4);
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v13(v10, v4);
  return ((uint64_t (*)(unsigned char *, uint64_t))v13)(v7, v4);
}

__n128 sub_100561FCC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.leading.getter();
  sub_100562060(a1, (uint64_t)&v13);
  char v5 = v14;
  uint64_t v6 = v15;
  char v7 = v17;
  char v8 = v18;
  char v9 = v20;
  __n128 result = v13;
  long long v11 = v16;
  long long v12 = v19;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(unsigned char *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(_OWORD *)(a2 + 56) = v11;
  *(unsigned char *)(a2 + 72) = v7;
  *(unsigned char *)(a2 + 73) = v8;
  *(_OWORD *)(a2 + 80) = v12;
  *(unsigned char *)(a2 + 96) = v9;
  return result;
}

void sub_100562060(void *a1@<X0>, uint64_t a2@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v39[8] = v37;
  v40[0] = *(_OWORD *)v38;
  *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)&v38[9];
  v39[4] = v33;
  v39[5] = v34;
  v39[6] = v35;
  v39[7] = v36;
  v39[0] = v29;
  v39[1] = v30;
  v39[2] = v31;
  void v39[3] = v32;
  swift_bridgeObjectRetain();
  sub_100264974((uint64_t)v39);
  sub_1000A06D0();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  char v8 = v7;
  id v9 = [self elapsedTimeColors];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v28 = a1;
    id v11 = [v9 nonGradientTextColor];

    if (v11)
    {
      Color.init(uiColor:)();
      uint64_t v12 = Text.foregroundStyle<A>(_:)();
      uint64_t v14 = v13;
      char v16 = v15 & 1;
      sub_1000A06C0(v4, v6, v8 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      static Font.title3.getter();
      uint64_t v17 = Text.font(_:)();
      uint64_t v19 = v18;
      char v21 = v20;
      uint64_t v23 = v22;
      swift_release();
      char v24 = v21 & 1;
      sub_1000A06C0(v12, v14, v16);
      swift_bridgeObjectRelease();
      uint64_t v25 = (void *)swift_allocObject();
      void v25[2] = v28;
      uint64_t v26 = (void *)swift_allocObject();
      v26[2] = v28;
      *(void *)a2 = v17;
      *(void *)(a2 + 8) = v19;
      *(unsigned char *)(a2 + 16) = v24;
      *(void *)(a2 + 24) = v23;
      *(void *)(a2 + 32) = sub_100562444;
      *(void *)(a2 + 40) = v25;
      *(_WORD *)(a2 + 48) = 0;
      *(void *)(a2 + 56) = sub_1001D7D00;
      *(void *)(a2 + 64) = v26;
      *(unsigned char *)(a2 + 72) = 0;
      id v27 = v28;
      sub_1000A1750(v17, v19, v24);
      swift_bridgeObjectRetain();
      sub_10026063C((uint64_t)sub_100562444, v25, 0);
      sub_10026063C((uint64_t)sub_1001D7D00, v26, 0);
      sub_10026065C((uint64_t)sub_1001D7D00, (uint64_t)v26, 0);
      sub_10026065C((uint64_t)sub_100562444, (uint64_t)v25, 0);
      sub_1000A06C0(v17, v19, v24);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10056236C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_1000AFA94(&qword_100962180);
  return sub_100561DF8(v3, a1 + *(int *)(v4 + 44));
}

double sub_1005623BC@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_100561FCC((void *)*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_1005623CC()
{
  return swift_deallocObject();
}

uint64_t sub_100562404()
{
  return sub_1000A132C(&qword_1009621A8, &qword_1009621B0);
}

uint64_t initializeWithCopy for MetricTimescalePicker(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MetricTimescalePicker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for MetricTimescalePicker(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for MetricTimescalePicker()
{
  return &type metadata for MetricTimescalePicker;
}

uint64_t sub_1005625A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005625C4@<X0>(uint64_t a1@<X8>)
{
  v14[3] = a1;
  uint64_t v2 = type metadata accessor for SegmentedPickerStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009621B8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = LocalizedStringKey.init(stringLiteral:)();
  v14[1] = v11;
  v14[2] = v10;
  v14[0] = v12;
  v16[0] = *v1;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 9);
  sub_1000AFA94(&qword_100951098);
  Binding.projectedValue.getter();
  char v15 = v1;
  sub_1000AFA94(&qword_1009621C0);
  sub_1002B9C40();
  sub_1000A132C(&qword_1009621C8, &qword_1009621C0);
  Picker<>.init(_:selection:content:)();
  SegmentedPickerStyle.init()();
  sub_1000A132C(&qword_1009621D0, &qword_1009621B8);
  View.pickerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10056286C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v123 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_1009621D8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v124 = (uint64_t)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v122 = (uint64_t)&v113 - v7;
  __chkstk_darwin(v8);
  uint64_t v121 = (uint64_t)&v113 - v9;
  __chkstk_darwin(v10);
  UIFontTextStyle v120 = (char *)&v113 - v11;
  __chkstk_darwin(v12);
  uint64_t v128 = (uint64_t)&v113 - v13;
  __chkstk_darwin(v14);
  uint64_t v127 = (uint64_t)&v113 - v15;
  uint64_t v16 = sub_1000AFA94(&qword_1009621E0);
  __chkstk_darwin(v16 - 8);
  uint64_t v119 = (uint64_t)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = __chkstk_darwin(v18);
  BOOL v21 = *(unsigned char *)(a1 + 40) == 1;
  uint64_t v129 = (uint64_t)&v113 - v19;
  uint64_t v118 = a1;
  if (v21 && !*(void *)(a1 + 32))
  {
    uint64_t v22 = self;
    id v23 = [v22 mainBundle];
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    uint64_t v132 = v26;
    uint64_t v133 = v28;
    unint64_t v126 = sub_1000A06D0();
    uint64_t v29 = Text.init<A>(_:)();
    uint64_t v31 = v30;
    unint64_t v125 = v32;
    uint64_t v132 = v29;
    uint64_t v133 = v30;
    char v34 = v33 & 1;
    char v134 = v33 & 1;
    unint64_t v135 = v32;
    uint64_t v136 = 0;
    __int16 v137 = 1;
    uint64_t v138 = 0;
    __int16 v139 = 1;
    char v140 = 0;
    id v35 = [v22 mainBundle];
    NSString v36 = String._bridgeToObjectiveC()();
    id v37 = [v35 localizedStringForKey:v36 value:0 table:0];

    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v39;

    uint64_t v130 = v38;
    uint64_t v131 = v40;
    sub_1000AFA94(&qword_1009621E8);
    sub_100563324();
    uint64_t v41 = v129;
    View.accessibilityLabel<A>(_:)();
    swift_bridgeObjectRelease();
    sub_1000A06C0(v29, v31, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, __n128))(v4 + 56))(v41, 0, 1, v3, v42);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))((char *)&v113 - v19, 1, 1, v3, v20);
  }
  os_log_type_t v43 = self;
  id v117 = v43;
  id v44 = [v43 mainBundle];
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = [v44 localizedStringForKey:v45 value:0 table:0];

  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v49 = v48;

  uint64_t v132 = v47;
  uint64_t v133 = v49;
  unint64_t v50 = sub_1000A06D0();
  uint64_t v51 = Text.init<A>(_:)();
  uint64_t v53 = v52;
  uint64_t v132 = v51;
  uint64_t v133 = v52;
  char v55 = v54 & 1;
  char v134 = v54 & 1;
  unint64_t v135 = v56;
  uint64_t v136 = 1;
  __int16 v137 = 1;
  uint64_t v138 = 1;
  __int16 v139 = 1;
  char v140 = 0;
  id v57 = [v43 mainBundle];
  NSString v58 = String._bridgeToObjectiveC()();
  id v59 = [v57 localizedStringForKey:v58 value:0 table:0];

  uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v61;

  uint64_t v130 = v60;
  uint64_t v131 = v62;
  unint64_t v126 = sub_1000AFA94(&qword_1009621E8);
  unint64_t v125 = sub_100563324();
  unint64_t v116 = v50;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v51, v53, v55);
  swift_bridgeObjectRelease();
  id v63 = v117;
  id v64 = [v117 mainBundle];
  NSString v65 = String._bridgeToObjectiveC()();
  id v66 = [v64 localizedStringForKey:v65 value:0 table:0];

  uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v69 = v68;

  uint64_t v132 = v67;
  uint64_t v133 = v69;
  uint64_t v114 = Text.init<A>(_:)();
  uint64_t v71 = v70;
  unint64_t v115 = v72;
  uint64_t v132 = v114;
  uint64_t v133 = v70;
  char v74 = v73 & 1;
  char v134 = v73 & 1;
  unint64_t v135 = v72;
  uint64_t v136 = 2;
  __int16 v137 = 1;
  uint64_t v138 = 2;
  __int16 v139 = 1;
  char v140 = 0;
  char v75 = v63;
  id v76 = [v63 mainBundle];
  NSString v77 = String._bridgeToObjectiveC()();
  id v78 = [v76 localizedStringForKey:v77 value:0 table:0];

  uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v81 = v80;

  uint64_t v130 = v79;
  uint64_t v131 = v81;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v114, v71, v74);
  swift_bridgeObjectRelease();
  id v82 = [v75 mainBundle];
  NSString v83 = String._bridgeToObjectiveC()();
  id v84 = [v82 localizedStringForKey:v83 value:0 table:0];

  uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v87 = v86;

  uint64_t v132 = v85;
  uint64_t v133 = v87;
  uint64_t v88 = Text.init<A>(_:)();
  uint64_t v90 = v89;
  unint64_t v92 = v91;
  char v94 = v93 & 1;
  uint64_t v95 = sub_10050F2FC(*(void *)(v118 + 48));
  uint64_t v132 = v88;
  uint64_t v133 = v90;
  char v134 = v94;
  unint64_t v135 = v92;
  uint64_t v136 = v95;
  __int16 v137 = v96 & 1;
  uint64_t v138 = v95;
  __int16 v139 = v137;
  char v140 = 0;
  id v97 = [v75 mainBundle];
  NSString v98 = String._bridgeToObjectiveC()();
  id v99 = [v97 localizedStringForKey:v98 value:0 table:0];

  uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v102 = v101;

  uint64_t v130 = v100;
  uint64_t v131 = v102;
  uint64_t v103 = (uint64_t)v120;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_1000A06C0(v88, v90, v94);
  swift_bridgeObjectRelease();
  uint64_t v104 = v119;
  sub_1000AEF2C(v129, v119, &qword_1009621E0);
  uint64_t v105 = v127;
  uint64_t v106 = v121;
  sub_1000AEF2C(v127, v121, &qword_1009621D8);
  uint64_t v107 = v128;
  uint64_t v108 = v122;
  sub_1000AEF2C(v128, v122, &qword_1009621D8);
  uint64_t v109 = v124;
  sub_1000AEF2C(v103, v124, &qword_1009621D8);
  uint64_t v110 = v123;
  sub_1000AEF2C(v104, v123, &qword_1009621E0);
  uint64_t v111 = (int *)sub_1000AFA94(&qword_100962228);
  sub_1000AEF2C(v106, v110 + v111[12], &qword_1009621D8);
  sub_1000AEF2C(v108, v110 + v111[16], &qword_1009621D8);
  sub_1000AEF2C(v109, v110 + v111[20], &qword_1009621D8);
  sub_10008DB18(v103, &qword_1009621D8);
  sub_10008DB18(v107, &qword_1009621D8);
  sub_10008DB18(v105, &qword_1009621D8);
  sub_10008DB18(v129, &qword_1009621E0);
  sub_10008DB18(v109, &qword_1009621D8);
  sub_10008DB18(v108, &qword_1009621D8);
  sub_10008DB18(v106, &qword_1009621D8);
  return sub_10008DB18(v104, &qword_1009621E0);
}

uint64_t sub_1005632D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1005625C4(a1);
}

uint64_t sub_10056331C@<X0>(uint64_t a1@<X8>)
{
  return sub_10056286C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100563324()
{
  unint64_t result = qword_1009621F0;
  if (!qword_1009621F0)
  {
    sub_1000A1370(&qword_1009621E8);
    sub_1005633C4();
    sub_1000A132C(&qword_100962218, &qword_100962220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009621F0);
  }
  return result;
}

unint64_t sub_1005633C4()
{
  unint64_t result = qword_1009621F8;
  if (!qword_1009621F8)
  {
    sub_1000A1370(&qword_100962200);
    sub_1000A132C(&qword_100962208, &qword_100962210);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009621F8);
  }
  return result;
}

uint64_t sub_100563464()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100563504()
{
  uint64_t v1 = type metadata accessor for MirrorHeartRateZonesMetricsPlatter();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1 - 8);
  uint64_t v5 = *(void *)(*(void *)(v0 + *(int *)(v4 + 48)) + 16);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1004F8FD0(v6, v5);
  swift_bridgeObjectRelease();
  uint64_t v19 = v7;
  swift_getKeyPath();
  sub_100564A8C(v0, (uint64_t)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  sub_100564C14((uint64_t)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100564C78;
  *(void *)(v10 + 24) = v9;
  sub_1000AFA94(&qword_10094C0C8);
  sub_1000AFA94(&qword_1009622D8);
  sub_1000A132C(&qword_10094C0D8, &qword_10094C0C8);
  uint64_t v11 = sub_1000A1370(&qword_1009622E0);
  uint64_t v12 = sub_1000A1370(&qword_1009622E8);
  unint64_t v13 = sub_100564D38();
  uint64_t v17 = v12;
  unint64_t v18 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = v11;
  unint64_t v18 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

int *sub_10056375C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v41 = a1;
  uint64_t v37 = a4;
  uint64_t v36 = type metadata accessor for WorkoutViewStyle();
  uint64_t v6 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  id v35 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100962300);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_1009622E8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_1009622E0);
  uint64_t v33 = *(void *)(v17 - 8);
  uint64_t v34 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_1009622D8);
  uint64_t v31 = *(void *)(v20 - 8);
  uint64_t v32 = v20;
  __chkstk_darwin(v20);
  uint64_t v30 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a3;
  sub_100563BF4(a2, (uint64_t)v13);
  unint64_t result = (int *)(id)HKWorkoutMetricTypeDescription();
  if (result)
  {
    id v23 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100564DE4();
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v13, &qword_100962300);
    static AccessibilityChildBehavior.combine.getter();
    unint64_t v24 = sub_100564D38();
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
    sub_10008DB18((uint64_t)v16, &qword_1009622E8);
    unint64_t result = (int *)type metadata accessor for MirrorHeartRateZonesMetricsPlatter();
    if ((v41 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v25 = *(void *)(v38 + result[10]);
      if (*(void *)(v25 + 16) > v41)
      {
        uint64_t v27 = v35;
        uint64_t v26 = v36;
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v35, v25+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v41, v36);
        uint64_t v42 = v14;
        unint64_t v43 = v24;
        swift_getOpaqueTypeConformance2();
        uint64_t v28 = v30;
        uint64_t v29 = v34;
        View.workoutViewStyle(_:)();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v26);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v29);
        return (int *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v37, v28, v32);
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100563BF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v36 = a2;
  uint64_t v2 = sub_1000AFA94(&qword_10094C100);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000AFA94(&qword_10094C108);
  uint64_t v31 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v30 = (char *)&v28 - v8;
  uint64_t v33 = sub_1000AFA94(&qword_100962320);
  __chkstk_darwin(v33);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ZoneViewType();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for ZoneMetricView();
  uint64_t v29 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v17 = HeartRateMetricsPublisher.liveHeartRateZones.getter();
  swift_release();
  if (v17)
  {
    unint64_t v18 = dispatch thunk of LiveZones.zones.getter();
    swift_release();
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  if (v32 == 38 && v17 <= 0)
  {
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for ZoneViewType.heartRateZone(_:), v11);
    type metadata accessor for LiveHeartRateZone();
    static LiveHeartRateZone.canonicals()();
    uint64_t v19 = sub_1000AFA94(&qword_100962328);
    swift_allocObject();
    uint64_t v20 = LiveZones.init(zones:currentZoneIndex:isStale:)();
    uint64_t v38 = v19;
    uint64_t v39 = sub_1000A132C(&qword_100962330, &qword_100962328);
    uint64_t v37 = v20;
    ZoneMetricView.init(zoneViewType:liveZones:value:isStale:)();
    uint64_t v21 = v29;
    uint64_t v22 = v34;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v10, v16, v34);
    swift_storeEnumTagMultiPayload();
    sub_100564F1C(&qword_100962318, (void (*)(uint64_t))&type metadata accessor for ZoneMetricView);
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v16, v22);
  }
  else
  {
    uint64_t v24 = type metadata accessor for MetricPlatterType();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v4, 1, 1, v24);
    static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
    sub_10008DB18((uint64_t)v4, &qword_10094C100);
    uint64_t v26 = v30;
    uint64_t v25 = v31;
    uint64_t v27 = v35;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v30, v6, v35);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v10, v26, v27);
    swift_storeEnumTagMultiPayload();
    sub_100564F1C(&qword_100962318, (void (*)(uint64_t))&type metadata accessor for ZoneMetricView);
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  }
}

void *sub_1005641C8(void *a1)
{
  uint64_t v1 = a1;
  if (a1[2] >= 3uLL && a1[4] == 38)
  {
    uint64_t v2 = a1[5];
    swift_bridgeObjectRetain();
    if (v2 == 5)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v1 = sub_1005EC210(v1);
      }
      *((_OWORD *)v1 + 2) = xmmword_10076B8D0;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t *sub_10056424C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = (void *)a2[3];
    uint64_t v10 = (void *)a2[4];
    a1[3] = (uint64_t)v9;
    a1[4] = (uint64_t)v10;
    uint64_t v11 = a3[8];
    unint64_t v18 = (char *)a2 + v11;
    uint64_t v19 = (char *)a1 + v11;
    uint64_t v12 = type metadata accessor for MetricPlatterConstants();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    id v14 = v9;
    id v15 = v10;
    v13(v19, v18, v12);
    uint64_t v16 = a3[10];
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v7 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_100564388(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for MetricPlatterConstants();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100564438(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = (void *)a2[4];
  a1[4] = v8;
  uint64_t v9 = a3[8];
  uint64_t v16 = (char *)a2 + v9;
  uint64_t v17 = (char *)a1 + v9;
  uint64_t v10 = type metadata accessor for MetricPlatterConstants();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  id v12 = v7;
  id v13 = v8;
  v11(v17, v16, v10);
  uint64_t v14 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100564528(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a2[3];
  uint64_t v7 = (void *)a1[3];
  a1[3] = v6;
  id v8 = v6;

  uint64_t v9 = (void *)a2[4];
  uint64_t v10 = (void *)a1[4];
  a1[4] = v9;
  id v11 = v9;

  uint64_t v12 = a3[8];
  id v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for MetricPlatterConstants();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100564644(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for MetricPlatterConstants();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  return a1;
}

void *sub_1005646F4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_release();
  uint64_t v7 = (void *)a1[3];
  a1[3] = a2[3];

  uint64_t v8 = (void *)a1[4];
  a1[4] = a2[4];

  uint64_t v9 = a3[8];
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for MetricPlatterConstants();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005647E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005647F4);
}

uint64_t sub_1005647F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MetricPlatterConstants();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005648A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005648B8);
}

void *sub_1005648B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MetricPlatterConstants();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MirrorHeartRateZonesMetricsPlatter()
{
  uint64_t result = qword_100962288;
  if (!qword_100962288) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005649AC()
{
  uint64_t result = type metadata accessor for MetricPlatterConstants();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100564A70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100564A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorHeartRateZonesMetricsPlatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100564AF0()
{
  unint64_t v1 = (int *)(type metadata accessor for MirrorHeartRateZonesMetricsPlatter() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();

  uint64_t v3 = v2 + v1[10];
  uint64_t v4 = type metadata accessor for MetricPlatterConstants();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100564C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorHeartRateZonesMetricsPlatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

int *sub_100564C78@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for MirrorHeartRateZonesMetricsPlatter() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10056375C(a1, a2, v8, a3);
}

uint64_t sub_100564D00()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_100564D38()
{
  unint64_t result = qword_1009622F0;
  if (!qword_1009622F0)
  {
    sub_1000A1370(&qword_1009622E8);
    sub_100564DE4();
    sub_100564F1C((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009622F0);
  }
  return result;
}

unint64_t sub_100564DE4()
{
  unint64_t result = qword_1009622F8;
  if (!qword_1009622F8)
  {
    sub_1000A1370(&qword_100962300);
    sub_100564E58();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009622F8);
  }
  return result;
}

unint64_t sub_100564E58()
{
  unint64_t result = qword_100962308;
  if (!qword_100962308)
  {
    sub_1000A1370(&qword_100962310);
    sub_100564F1C(&qword_100962318, (void (*)(uint64_t))&type metadata accessor for ZoneMetricView);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962308);
  }
  return result;
}

uint64_t sub_100564F1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100564F68()
{
  unint64_t result = qword_100962338;
  if (!qword_100962338)
  {
    sub_1000A1370(&qword_100962340);
    sub_1000A132C(&qword_100962348, &qword_100962350);
    sub_100565008();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962338);
  }
  return result;
}

unint64_t sub_100565008()
{
  unint64_t result = qword_100962358;
  if (!qword_100962358)
  {
    sub_1000A1370(&qword_100962360);
    sub_1000A1370(&qword_1009622E0);
    sub_1000A1370(&qword_1009622E8);
    sub_100564D38();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962358);
  }
  return result;
}

uint64_t sub_1005650EC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10056516C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

id sub_1005651DC()
{
  id v0 = [objc_allocWithZone((Class)NSLengthFormatter) init];
  id result = [v0 setUnitStyle:1];
  qword_100962368 = (uint64_t)v0;
  return result;
}

uint64_t sub_10056522C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_1005652A0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_dataCalculator];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workout];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workoutActivity];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  v7[4] = sub_100568164;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100565E74;
  v7[3] = &unk_1008CE618;
  uint64_t v5 = _Block_copy(v7);
  uint64_t v6 = v0;
  swift_release();
  [v1 swimmingSplitsForWorkout:v2 workoutActivity:v3 completion:v5];
  _Block_release(v5);
}

void sub_1005653B4(uint64_t a1, uint64_t a2, char *a3)
{
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    uint64_t v4 = (void *)HKLogWorkouts;
    os_log_type_t v5 = v3;
    if (os_log_type_enabled(HKLogWorkouts, v3))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v6 = v4;
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      v109[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_getErrorValue();
      uint64_t v8 = Error.localizedDescription.getter();
      sub_10008F1F4(v8, v9, v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v5, "Error loading swimming splits: %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  if (!a1)
  {
LABEL_93:
    sub_100566CAC();
    return;
  }
  uint64_t v93 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v99 = v11 & *(void *)(a1 + 64);
  uint64_t v106 = &a3[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_averagePaces];
  int64_t v94 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
LABEL_10:
  if (!v99)
  {
    BOOL v16 = __OFADD__(v12, 1);
    int64_t v17 = v12 + 1;
    uint64_t v15 = a1;
    if (v16) {
      goto LABEL_100;
    }
    if (v17 < v94)
    {
      unint64_t v18 = *(void *)(v93 + 8 * v17);
      if (v18)
      {
LABEL_22:
        unint64_t v99 = (v18 - 1) & v18;
        int64_t v98 = v17;
        unint64_t v14 = __clz(__rbit64(v18)) + (v17 << 6);
        goto LABEL_23;
      }
      int64_t v19 = v17 + 1;
      if (v17 + 1 < v94)
      {
        unint64_t v18 = *(void *)(v93 + 8 * v19);
        if (v18) {
          goto LABEL_21;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 < v94)
        {
          unint64_t v18 = *(void *)(v93 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = v17 + 3;
            if (v17 + 3 < v94)
            {
              unint64_t v18 = *(void *)(v93 + 8 * v19);
              if (v18) {
                goto LABEL_21;
              }
              while (1)
              {
                int64_t v17 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_101;
                }
                if (v17 >= v94) {
                  break;
                }
                unint64_t v18 = *(void *)(v93 + 8 * v17);
                ++v19;
                if (v18) {
                  goto LABEL_22;
                }
              }
            }
            goto LABEL_92;
          }
LABEL_21:
          int64_t v17 = v19;
          goto LABEL_22;
        }
      }
    }
LABEL_92:
    swift_release();
    goto LABEL_93;
  }
  unint64_t v13 = __clz(__rbit64(v99));
  v99 &= v99 - 1;
  int64_t v98 = v12;
  unint64_t v14 = v13 | (v12 << 6);
  uint64_t v15 = a1;
LABEL_23:
  uint64_t v20 = 8 * v14;
  unint64_t v21 = *(void *)(*(void *)(v15 + 56) + v20);
  id v22 = *(id *)(*(void *)(v15 + 48) + v20);
  swift_bridgeObjectRetain();
  id v97 = v22;
  id v23 = [v22 integerValue];
  uint64_t v24 = a3;
  uint64_t v25 = sub_100568264(v21, (uint64_t)v24);
  swift_bridgeObjectRelease();

  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v26 = (void (*)(uint64_t *, void))static Published.subscript.modify();
  uint64_t v28 = v27;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v107 = *v28;
  *uint64_t v28 = 0x8000000000000000;
  sub_1004F1140((uint64_t)v25, (uint64_t)v23, isUniquelyReferenced_nonNull_native);
  *uint64_t v28 = v107;
  swift_bridgeObjectRelease();
  v26(v109, 0);
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v102 = v24;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int64_t v30 = 0;
  uint64_t v100 = v109[0] + 64;
  uint64_t v103 = v109[0];
  uint64_t v31 = 1 << *(unsigned char *)(v109[0] + 32);
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  else {
    uint64_t v32 = -1;
  }
  unint64_t v33 = v32 & *(void *)(v109[0] + 64);
  int64_t v101 = (unint64_t)(v31 + 63) >> 6;
  while (1)
  {
    if (v33)
    {
      unint64_t v35 = __clz(__rbit64(v33));
      uint64_t v36 = (v33 - 1) & v33;
      unint64_t v37 = v35 | (v30 << 6);
    }
    else
    {
      int64_t v38 = v30 + 1;
      if (__OFADD__(v30, 1)) {
        goto LABEL_98;
      }
      if (v38 >= v101)
      {
LABEL_9:

        swift_release();
        int64_t v12 = v98;
        goto LABEL_10;
      }
      unint64_t v39 = *(void *)(v100 + 8 * v38);
      ++v30;
      if (!v39)
      {
        int64_t v30 = v38 + 1;
        if (v38 + 1 >= v101) {
          goto LABEL_9;
        }
        unint64_t v39 = *(void *)(v100 + 8 * v30);
        if (!v39)
        {
          int64_t v30 = v38 + 2;
          if (v38 + 2 >= v101) {
            goto LABEL_9;
          }
          unint64_t v39 = *(void *)(v100 + 8 * v30);
          if (!v39)
          {
            int64_t v40 = v38 + 3;
            if (v40 >= v101) {
              goto LABEL_9;
            }
            unint64_t v39 = *(void *)(v100 + 8 * v40);
            if (!v39)
            {
              while (1)
              {
                int64_t v30 = v40 + 1;
                if (__OFADD__(v40, 1)) {
                  goto LABEL_99;
                }
                if (v30 >= v101) {
                  goto LABEL_9;
                }
                unint64_t v39 = *(void *)(v100 + 8 * v30);
                ++v40;
                if (v39) {
                  goto LABEL_44;
                }
              }
            }
            int64_t v30 = v40;
          }
        }
      }
LABEL_44:
      uint64_t v36 = (v39 - 1) & v39;
      unint64_t v37 = __clz(__rbit64(v39)) + (v30 << 6);
    }
    uint64_t v41 = 8 * v37;
    uint64_t v105 = *(void *)(*(void *)(v103 + 48) + v41);
    unint64_t v42 = *(void *)(*(void *)(v103 + 56) + v41);
    uint64_t v43 = v42 & 0xFFFFFFFFFFFFFF8;
    if (v42 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v92 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v44 = v92;
      if (!v92)
      {
        swift_bridgeObjectRelease();
        double v46 = 0.0;
        char v49 = 1;
LABEL_53:
        swift_bridgeObjectRetain();
        uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
      if (v92 < 1) {
        goto LABEL_95;
      }
    }
    else
    {
      uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v44)
      {
        swift_bridgeObjectRelease();
        double v46 = 0.0;
        char v50 = 1;
        goto LABEL_55;
      }
    }
    uint64_t v45 = 0;
    double v46 = 0.0;
    do
    {
      if ((v42 & 0xC000000000000001) != 0) {
        uint64_t v47 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v47 = swift_retain();
      }
      ++v45;
      double v48 = *(double *)(v47 + 64);
      swift_release();
      double v46 = v46 + v48;
    }
    while (v44 != v45);
    swift_bridgeObjectRelease();
    char v49 = 0;
    char v50 = 0;
    uint64_t v43 = v42 & 0xFFFFFFFFFFFFFF8;
    if (v42 >> 62) {
      goto LABEL_53;
    }
LABEL_55:
    uint64_t v51 = *(void *)(v43 + 16);
    char v49 = v50;
LABEL_56:
    double v52 = (double)v51;
    id v53 = [*(id *)&v102[OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager] fitnessUIFormattingManager:v93];
    id v54 = [v53 stringWithDuration:1 durationFormat:round(v46 / (double)v51)];

    if (v54)
    {
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v57 = v56;

      double v58 = 0.0;
      if (v49) {
        goto LABEL_69;
      }
    }
    else
    {
      uint64_t v55 = 0;
      unint64_t v57 = 0xE000000000000000;
      double v58 = 0.0;
      if (v49) {
        goto LABEL_69;
      }
    }
    if (v44 < 1) {
      goto LABEL_96;
    }
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v44; ++i)
    {
      if ((v42 & 0xC000000000000001) != 0) {
        uint64_t v60 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v60 = swift_retain();
      }
      int v61 = *(unsigned __int8 *)(v60 + 128);
      uint64_t v62 = *(void *)(v60 + 120);
      swift_release();
      double v63 = (double)v62;
      if (v61) {
        double v63 = 0.0;
      }
      double v58 = v58 + v63;
    }
    swift_bridgeObjectRelease();
LABEL_69:
    unint64_t v104 = v36;
    swift_bridgeObjectRelease();
    id v64 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v58 / v52];
    id v65 = [self stringWithNumber:v64 decimalPrecision:1];
    if (v65)
    {
      id v66 = v65;
      int64_t v67 = v30;
      uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v70 = v69;
    }
    else
    {
      int64_t v67 = v30;
      uint64_t v68 = 0;
      unint64_t v70 = 0xE000000000000000;
    }
    id v71 = [self mainBundle];
    NSString v72 = String._bridgeToObjectiveC()();
    id v73 = [v71 localizedStringForKey:v72 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_10074E640;
    *(void *)(v74 + 56) = &type metadata for String;
    unint64_t v75 = sub_1000AA64C();
    *(void *)(v74 + 32) = v55;
    *(void *)(v74 + 40) = v57;
    *(void *)(v74 + 96) = &type metadata for String;
    *(void *)(v74 + 104) = v75;
    *(void *)(v74 + 64) = v75;
    *(void *)(v74 + 72) = v68;
    *(void *)(v74 + 80) = v70;
    uint64_t v76 = String.init(format:_:)();
    uint64_t v78 = v77;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v79 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v80 = *(void **)v106;
    uint64_t v108 = v80;
    *(void *)uint64_t v106 = 0x8000000000000000;
    unint64_t v82 = sub_100005758(v105);
    uint64_t v83 = v80[2];
    BOOL v84 = (v81 & 1) == 0;
    uint64_t v85 = v83 + v84;
    if (__OFADD__(v83, v84)) {
      break;
    }
    char v86 = v81;
    if (v80[3] >= v85)
    {
      if ((v79 & 1) == 0) {
        sub_1004F56F8();
      }
    }
    else
    {
      sub_1004ED8B0(v85, v79);
      unint64_t v87 = sub_100005758(v105);
      if ((v86 & 1) != (v88 & 1)) {
        goto LABEL_102;
      }
      unint64_t v82 = v87;
    }
    int64_t v30 = v67;
    unint64_t v33 = v104;
    if (v86)
    {
      uint64_t v34 = (uint64_t *)(v80[7] + 16 * v82);
      swift_bridgeObjectRelease();
      *uint64_t v34 = v76;
      v34[1] = v78;
    }
    else
    {
      v80[(v82 >> 6) + 8] |= 1 << v82;
      *(void *)(v80[6] + 8 * v82) = v105;
      uint64_t v89 = (uint64_t *)(v80[7] + 16 * v82);
      *uint64_t v89 = v76;
      v89[1] = v78;
      uint64_t v90 = v80[2];
      BOOL v16 = __OFADD__(v90, 1);
      uint64_t v91 = v90 + 1;
      if (v16) {
        goto LABEL_97;
      }
      v80[2] = v91;
    }
    *(void *)uint64_t v106 = v108;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t sub_100565E74(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  os_log_type_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    sub_1000AFA94(&qword_100962408);
    sub_1005590FC();
    uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100565F38()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (*(void *)(v5 + 16) && (unint64_t v0 = sub_100005758(v5), (v1 & 1) != 0))
  {
    unint64_t v2 = *(void *)(*(void *)(v5 + 56) + 8 * v0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

unint64_t sub_10056607C(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns);
  if (*(void *)(v2 + 16) <= result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v3 = *(unsigned __int8 *)(v2 + result + 32);
  uint64_t v4 = v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columnSizes;
  id result = swift_beginAccess();
  if (*(void *)(*(void *)v4 + 16))
  {
    swift_bridgeObjectRetain();
    sub_100529A74(v3);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    else {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_100566140(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns);
  if (*(void *)(v2 + 16) <= a1)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v3 = v2 + a1;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager);
  char v5 = *(unsigned char *)(v3 + 32);
  id v6 = [v4 fitnessUIFormattingManager];
  sub_1002522C0(v6, v5);
}

void sub_1005661DC(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_10094DEF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns);
  if (*(void *)(v12 + 16) <= a2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  int v13 = *(unsigned __int8 *)(v12 + a2 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v49 = v5;
  uint64_t v50 = v9;
  uint64_t v47 = v6;
  double v48 = v11;
  double v46 = v8;
  if (v13 == 3)
  {
    uint64_t v23 = sub_100566968(a1, (uint64_t)v51);
LABEL_10:
    uint64_t v20 = (void *)v23;
    id v22 = v24;
    goto LABEL_12;
  }
  if (v13 == 1)
  {
    sub_100566694(a1, (uint64_t)v51);
    goto LABEL_10;
  }
  if (v13)
  {
    uint64_t v20 = 0;
    id v22 = (void *)0xE000000000000000;
    goto LABEL_12;
  }
  uint64_t v14 = self;
  BOOL v15 = __OFADD__(a1, 1);
  unint64_t v16 = a1 + 1;
  if (!v15)
  {
    int64_t v17 = (void *)v14;
    id v18 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v16];
    id v19 = [v17 localizedStringFromNumber:v18 numberStyle:0];

    uint64_t v20 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v22 = v21;

LABEL_12:
    uint64_t v51 = v20;
    double v52 = v22;
    sub_1000A06D0();
    uint64_t v25 = Text.init<A>(_:)();
    uint64_t v27 = v26;
    char v29 = v28 & 1;
    static Font.body.getter();
    uint64_t v30 = Text.font(_:)();
    uint64_t v32 = v31;
    char v34 = v33;
    swift_release();
    sub_1000A06C0(v25, v27, v29);
    swift_bridgeObjectRelease();
    sub_1002528C4(v13);
    unint64_t v35 = (void *)Text.foregroundColor(_:)();
    unint64_t v37 = v36;
    char v39 = v38;
    uint64_t v41 = v40;
    swift_release();
    sub_1000A06C0(v30, v32, v34 & 1);
    swift_bridgeObjectRelease();
    uint64_t v51 = v35;
    double v52 = v37;
    char v53 = v39 & 1;
    uint64_t v54 = v41;
    uint64_t v43 = v46;
    uint64_t v42 = v47;
    uint64_t v44 = v49;
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for DynamicTypeSize.large(_:), v49);
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    sub_1000A06C0((uint64_t)v51, (uint64_t)v52, v53);
    swift_bridgeObjectRelease();
    uint64_t v51 = &type metadata for Text;
    double v52 = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    AnyView.init<A>(_:)();
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1005665C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_averagePaces);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_100005758(v7);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 16 * v3);
  swift_bridgeObjectRetain();
  return v5;
}

void sub_100566694(uint64_t a1, uint64_t a2)
{
  id v5 = [*(id *)(v2 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager) fitnessUIFormattingManager];
  id v6 = [v5 unitManager];

  if (!v6) {
    goto LABEL_12;
  }
  id v7 = [v6 userDistanceHKUnitForDistanceType:3];

  if (qword_10094AE48 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend((id)qword_100962368, "unitStringFromValue:unit:", objc_msgSend(self, "lengthFormatterUnitFromUnit:", v7), 1.0);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  uint64_t v12 = self;
  uint64_t v13 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((unsigned __int128)(a2 * (__int128)v13) >> 64 != (a2 * v13) >> 63)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v14 = (void *)v12;
  id v15 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a2 * v13];
  id v16 = [v14 stringWithNumber:v15 decimalPrecision:1];

  if (v16)
  {
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    unint64_t v19 = 0xE000000000000000;
  }
  id v20 = [self mainBundle];
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v20 localizedStringForKey:v21 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10074E640;
  *(void *)(v23 + 56) = &type metadata for String;
  unint64_t v24 = sub_1000AA64C();
  *(void *)(v23 + 32) = v17;
  *(void *)(v23 + 40) = v19;
  *(void *)(v23 + 96) = &type metadata for String;
  *(void *)(v23 + 104) = v24;
  *(void *)(v23 + 64) = v24;
  *(void *)(v23 + 72) = v9;
  *(void *)(v23 + 80) = v11;
  String.init(format:_:)();

  swift_bridgeObjectRelease();
}

uint64_t sub_100566968(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!*(void *)(v29 + 16) || (unint64_t v6 = sub_100005758(a2), (v7 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v8 = *(void *)(*(void *)(v29 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v8 & 0xC000000000000001) != 0)
  {
    uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(v10 + 40) & 1) == 0 && (*(unsigned char *)(v10 + 128) & 1) == 0 && *(double *)(v10 + 32) > 0.0)
    {
      uint64_t v11 = *(void *)(v10 + 120);
      id v12 = [*(id *)(v3 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_formattingManager) fitnessUIFormattingManager];
      id v13 = [v12 stringWithDuration:1 durationFormat:*(double *)(v10 + 64)];

      if (v13)
      {
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v16 = v15;
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v16 = 0xE000000000000000;
      }
      unint64_t v18 = self;
      id v19 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v11];
      id v20 = [v18 stringWithNumber:v19 decimalPrecision:1];

      if (v20)
      {
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v23 = v22;
      }
      else
      {
        uint64_t v21 = 0;
        unint64_t v23 = 0xE000000000000000;
      }
      id v24 = [self mainBundle];
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_10074E640;
      *(void *)(v27 + 56) = &type metadata for String;
      unint64_t v28 = sub_1000AA64C();
      *(void *)(v27 + 32) = v14;
      *(void *)(v27 + 40) = v16;
      *(void *)(v27 + 96) = &type metadata for String;
      *(void *)(v27 + 104) = v28;
      *(void *)(v27 + 64) = v28;
      *(void *)(v27 + 72) = v21;
      *(void *)(v27 + 80) = v23;
      uint64_t v17 = String.init(format:_:)();
      swift_release();
      swift_bridgeObjectRelease();
      return v17;
    }
    swift_release();
    return 0;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    uint64_t v10 = *(void *)(v8 + 8 * a1 + 32);
    swift_retain();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100566CAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v66 = v79 + 64;
  uint64_t v68 = v79;
  int64_t v69 = 0;
  uint64_t v1 = 1 << *(unsigned char *)(v79 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  unint64_t v70 = v2 & *(void *)(v79 + 64);
  uint64_t v65 = OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns;
  uint64_t v73 = v0;
  uint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columnSizes);
  int64_t v67 = (unint64_t)(v1 + 63) >> 6;
  while (1)
  {
LABEL_4:
    if (v70)
    {
      unint64_t v4 = __clz(__rbit64(v70));
      v70 &= v70 - 1;
      unint64_t v5 = v4 | (v69 << 6);
    }
    else
    {
      int64_t v6 = v69 + 1;
      if (__OFADD__(v69, 1)) {
        goto LABEL_73;
      }
      if (v6 >= v67) {
        return swift_release();
      }
      unint64_t v7 = *(void *)(v66 + 8 * v6);
      int64_t v8 = v69 + 1;
      if (!v7)
      {
        int64_t v8 = v69 + 2;
        if (v69 + 2 >= v67) {
          return swift_release();
        }
        unint64_t v7 = *(void *)(v66 + 8 * v8);
        if (!v7)
        {
          int64_t v8 = v69 + 3;
          if (v69 + 3 >= v67) {
            return swift_release();
          }
          unint64_t v7 = *(void *)(v66 + 8 * v8);
          if (!v7)
          {
            int64_t v9 = v69 + 4;
            if (v69 + 4 >= v67) {
              return swift_release();
            }
            unint64_t v7 = *(void *)(v66 + 8 * v9);
            if (!v7)
            {
              while (1)
              {
                int64_t v8 = v9 + 1;
                if (__OFADD__(v9, 1)) {
                  goto LABEL_74;
                }
                if (v8 >= v67) {
                  return swift_release();
                }
                unint64_t v7 = *(void *)(v66 + 8 * v8);
                ++v9;
                if (v7) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v8 = v69 + 4;
          }
        }
      }
LABEL_19:
      int64_t v69 = v8;
      unint64_t v70 = (v7 - 1) & v7;
      unint64_t v5 = __clz(__rbit64(v7)) + (v8 << 6);
    }
    uint64_t v10 = 8 * v5;
    uint64_t v74 = *(void *)(*(void *)(v68 + 48) + v10);
    unint64_t v11 = *(void *)(*(void *)(v68 + 56) + v10);
    if (v11 >> 62) {
      break;
    }
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_22:
    if (v12)
    {
      unint64_t v13 = 0;
      uint64_t v77 = *(void *)(v73 + v65);
      uint64_t v76 = *(void *)(v77 + 16);
      uint64_t v71 = v12;
      while (1)
      {
        if (v13 == v12)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          JUMPOUT(0x1005675A8);
        }
        unint64_t v72 = v13 + 1;
        if (v76) {
          break;
        }
LABEL_25:
        unint64_t v13 = v72;
        if (v72 == v12) {
          goto LABEL_4;
        }
      }
      unint64_t v75 = v13;
      sub_1000AFA94(&qword_100952850);
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v14 = 0;
      while (1)
      {
        uint64_t v15 = *(unsigned __int8 *)(v77 + v14++ + 32);
        switch(v15)
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
            char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v16) {
              goto LABEL_35;
            }
            uint64_t v17 = &qword_1009978F8;
            if (qword_10094A728 != -1)
            {
              swift_once();
              uint64_t v17 = &qword_1009978F8;
            }
            break;
          default:
            swift_bridgeObjectRelease();
LABEL_35:
            uint64_t v17 = &qword_1009978F0;
            if (qword_10094A720 != -1)
            {
              swift_once();
              uint64_t v17 = &qword_1009978F0;
            }
            break;
        }
        unint64_t v18 = (void *)*v17;
        if (v15 == 3)
        {
          id v25 = v18;
          sub_100566968(v75, v74);
        }
        else if (v15 == 1)
        {
          id v24 = v18;
          sub_100566694(v75, v74);
        }
        else if (v15)
        {
          id v26 = v18;
        }
        else
        {
          id v19 = self;
          id v20 = objc_allocWithZone((Class)NSNumber);
          id v21 = v18;
          id v22 = [v20 initWithInteger:v72];
          id v23 = [v19 localizedStringFromNumber:v22 numberStyle:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        NSString v27 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v81[0] = NSFontAttributeName;
        v81[4] = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
        v81[1] = v18;
        unint64_t v28 = (void *)static _DictionaryStorage.allocate(capacity:)();
        sub_100364990((uint64_t)v81, (uint64_t)&v79);
        uint64_t v29 = v79;
        id v30 = v18;
        uint64_t v31 = NSFontAttributeName;
        unint64_t v32 = sub_10005BC7C(v29);
        if (v33) {
          goto LABEL_67;
        }
        v28[(v32 >> 6) + 8] |= 1 << v32;
        *(void *)(v28[6] + 8 * v32) = v29;
        sub_10005C2B0(&v80, (_OWORD *)(v28[7] + 32 * v32));
        uint64_t v34 = v28[2];
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35) {
          goto LABEL_68;
        }
        id v28[2] = v36;
        sub_1000AFA94(&qword_100952858);
        swift_arrayDestroy();
        type metadata accessor for Key(0);
        sub_10056846C((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_release();
        [v27 boundingRectWithSize:1 options:isa context:0];
        CGFloat v39 = v38;
        CGFloat v41 = v40;
        CGFloat v43 = v42;
        CGFloat v45 = v44;

        v82.origin.x = v39;
        v82.origin.y = v41;
        v82.size.width = v43;
        v82.size.height = v45;
        double v46 = ceil(CGRectGetWidth(v82));
        uint64_t v47 = *v3;
        if (!*(void *)(*v3 + 16)) {
          goto LABEL_53;
        }
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_100529A74(v15);
        if ((v49 & 1) == 0) {
          break;
        }
        double v50 = *(double *)(*(void *)(v47 + 56) + 8 * v48);
        swift_bridgeObjectRelease();
        if (v50 >= v46) {
          goto LABEL_31;
        }
LABEL_54:
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v52 = *v3;
        uint64_t v78 = (void *)*v3;
        uint64_t *v3 = 0x8000000000000000;
        unint64_t v54 = sub_100529A74(v15);
        uint64_t v55 = *(void *)(v52 + 16);
        BOOL v56 = (v53 & 1) == 0;
        uint64_t v57 = v55 + v56;
        if (__OFADD__(v55, v56)) {
          goto LABEL_69;
        }
        char v58 = v53;
        if (*(void *)(v52 + 24) >= v57)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            int v61 = v78;
            if ((v53 & 1) == 0) {
              goto LABEL_61;
            }
          }
          else
          {
            sub_1004F2A48();
            int v61 = v78;
            if ((v58 & 1) == 0) {
              goto LABEL_61;
            }
          }
        }
        else
        {
          sub_1004E9864(v57, isUniquelyReferenced_nonNull_native);
          uint64_t v59 = sub_100529A74(v15);
          if ((v58 & 1) != (v60 & 1)) {
            goto LABEL_75;
          }
          unint64_t v54 = v59;
          int v61 = v78;
          if ((v58 & 1) == 0)
          {
LABEL_61:
            v61[(v54 >> 6) + 8] |= 1 << v54;
            *(unsigned char *)(v61[6] + v54) = v15;
            *(double *)(v61[7] + 8 * v54) = v46;
            uint64_t v62 = v61[2];
            BOOL v35 = __OFADD__(v62, 1);
            uint64_t v63 = v62 + 1;
            if (v35) {
              goto LABEL_70;
            }
            v61[2] = v63;
            goto LABEL_30;
          }
        }
        *(double *)(v61[7] + 8 * v54) = v46;
LABEL_30:
        uint64_t *v3 = (uint64_t)v61;
        swift_bridgeObjectRelease();
        swift_endAccess();
LABEL_31:

        if (v76 == v14)
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = v71;
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease();
LABEL_53:
      if (v46 <= 0.0) {
        goto LABEL_31;
      }
      goto LABEL_54;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v12 & 0x8000000000000000) == 0) {
    goto LABEL_22;
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
  return swift_release();
}

void *sub_1005675D8(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v9 = sub_1000AFA94(&qword_100962400);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = &v4[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource__metrics];
  v16[1] = _swiftEmptyDictionarySingleton;
  uint64_t v14 = v4;
  sub_1000AFA94(&qword_1009623C0);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(void *)&v14[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_averagePaces] = _swiftEmptyDictionarySingleton;
  *(void *)&v14[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns] = &off_1008B4A28;
  *(void *)&v14[OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columnSizes] = _swiftEmptyDictionarySingleton;

  return sub_1002DF234(a1, a2, a3, a4);
}

uint64_t sub_1005677B0()
{
  uint64_t v1 = v0 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource__metrics;
  uint64_t v2 = sub_1000AFA94(&qword_100962400);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100567850()
{
  return sub_100567FD8(type metadata accessor for WorkoutDetailSwimmingSplitDataSource);
}

uint64_t sub_10056790C()
{
  return type metadata accessor for WorkoutDetailSwimmingSplitDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailSwimmingSplitDataSource(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_1009623A8);
}

void sub_100567934()
{
  sub_1005679D4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1005679D4()
{
  if (!qword_1009623B8)
  {
    sub_1000A1370(&qword_1009623C0);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009623B8);
    }
  }
}

uint64_t sub_100567A30()
{
  return 3;
}

uint64_t sub_100567A38()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x160))();
}

uint64_t sub_100567A74()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x178))();
}

uint64_t sub_100567AB4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x180))();
}

uint64_t sub_100567AF0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailSwimmingSplitDataSource(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100567B30()
{
  return 8;
}

unint64_t sub_100567B38@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v3 = result;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_titles);
  if (*(void *)(v5 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  int64_t v8 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
  unint64_t v9 = v5
     + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
     + *(void *)(v7 + 72) * v3;

  return v8(a2, v9, v6);
}

uint64_t sub_100567BE4(uint64_t result, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)(*(void *)(v2
                             + OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_values)
                 + 16) <= a2)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = result;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1007509E0;
  if (__OFADD__(v4, 1))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(void *)(result + 56) = &type metadata for Int;
  *(void *)(result + 64) = &protocol witness table for Int;
  *(void *)(result + 32) = v4 + 1;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  sub_1000A06D0();
  uint64_t result = Text.init<A>(_:)();
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR___CHWorkoutDetailSwimmingSplitDataSource_columns);
  if (*(void *)(v7 + 16) > a2)
  {
    uint64_t v8 = result;
    uint64_t v9 = v5;
    char v10 = v6 & 1;
    sub_1002528C4(*(unsigned char *)(v7 + a2 + 32));
    Text.foregroundColor(_:)();
    swift_release();
    uint64_t v11 = AnyView.init<A>(_:)();
    sub_1000A06C0(v8, v9, v10);
    swift_bridgeObjectRelease();
    return v11;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100567D9C()
{
  return 0x39342F2238332732;
}

void *sub_100567DB4(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_titles;
  sub_1000AFA94(&qword_10094E898);
  type metadata accessor for AttributedString();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100752410;
  char v10 = v4;
  AttributedString.init(stringLiteral:)();
  AttributedString.init(stringLiteral:)();
  AttributedString.init(stringLiteral:)();
  *(void *)&v4[v8] = v9;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp50WorkoutDetailColumnMetricSwimmingPreviewDataSource_values] = &off_1008B4A50;

  return sub_1005675D8(a1, a2, a3, a4);
}

uint64_t sub_100567F80()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100567FC0()
{
  return sub_100567FD8(type metadata accessor for WorkoutDetailColumnMetricSwimmingPreviewDataSource);
}

id sub_100567FD8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t sub_100568064()
{
  return type metadata accessor for WorkoutDetailColumnMetricSwimmingPreviewDataSource(0);
}

uint64_t type metadata accessor for WorkoutDetailColumnMetricSwimmingPreviewDataSource(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_1009623F0);
}

uint64_t sub_10056808C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1005680D4(uint64_t a1)
{
  uint64_t result = sub_10056846C((unint64_t *)&qword_1009552D0, (void (*)(uint64_t))type metadata accessor for WorkoutDetailSwimmingSplitDataSource);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10056812C()
{
  return swift_deallocObject();
}

void sub_100568164(uint64_t a1, uint64_t a2)
{
  sub_1005653B4(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_10056816C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005681EC(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

void *sub_100568264(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v4) {
      break;
    }
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    uint64_t v7 = *(void **)(a2 + OBJC_IVAR___WorkoutDetailSwimmingActivityDataSource_workout);
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      ++v6;
      type metadata accessor for WorkoutDurationMetrics();
      a2 = swift_allocObject();
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 16) = 0;
      *(unsigned char *)(a2 + 40) = 1;
      *(void *)(a2 + 48) = 0;
      *(unsigned char *)(a2 + 56) = 1;
      *(void *)(a2 + 72) = 0;
      *(unsigned char *)(a2 + 80) = 1;
      *(_OWORD *)(a2 + 88) = 0u;
      *(_OWORD *)(a2 + 104) = 0u;
      *(void *)(a2 + 120) = 0;
      *(unsigned char *)(a2 + 128) = 1;
      *(void *)(a2 + 144) = 0;
      *(void *)(a2 + 152) = 0;
      *(void *)(a2 + 136) = 0;
      id v10 = v7;
      id v11 = v9;
      *(double *)(a2 + 32) = (double)(uint64_t)[v11 splitDelimiterDistance];
      *(unsigned char *)(a2 + 40) = 0;
      [v11 durationScaledToFillSplit];
      *(void *)(a2 + 64) = v12;
      *(void *)(a2 + 120) = [v11 strokeCountScaledToFillSplit];
      *(unsigned char *)(a2 + 128) = 0;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v4 == v6) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10056846C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1005684BC@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_100568544(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10056BAFC(v1, v2, v3, v4, v5);
  swift_retain();
  return static Published.subscript.setter();
}

double sub_1005685F0@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_100568674@<X0>(void *a1@<X0>, unint64_t a2@<X8>)
{
  sub_1004C9B6C((uint64_t)a1, (uint64_t)&v525);
  id v4 = v525;
  char v5 = (char **)type metadata accessor for Alert.Button();
  uint64_t v6 = (void (**)(unsigned char *, uint64_t, uint64_t, char **))*(v5 - 1);
  __chkstk_darwin(v5);
  id v8 = &v496[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  id v11 = &v496[-v10];
  __chkstk_darwin(v12);
  uint64_t v514 = (uint64_t)&v496[-v13];
  __chkstk_darwin(v14);
  v515 = &v496[-v15];
  __chkstk_darwin(v16);
  v516 = &v496[-v17];
  __chkstk_darwin(v18);
  v517 = &v496[-v19];
  uint64_t v20 = sub_1000AFA94(&qword_100962528);
  __chkstk_darwin(v20 - 8);
  v519 = &v496[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v520 = a1;
  sub_1004C9B6C((uint64_t)a1, (uint64_t)&v526);
  id v22 = v526;
  switch(v530)
  {
    case 1:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      id v34 = v4;
      [v22 isMuted];
      id v35 = (id)ActivitySharingBundle();
      NSString v36 = String._bridgeToObjectiveC()();
      id v37 = [v35 localizedStringForKey:v36 value:0 table:0];

      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      uint64_t v523 = v38;
      uint64_t v524 = v40;
      sub_1000A06D0();
      v517 = (unsigned char *)Text.init<A>(_:)();
      id v41 = [self mainBundle];
      NSString v474 = String._bridgeToObjectiveC()();
      id v475 = [v41 localizedStringForKey:v474 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v476 = swift_allocObject();
      *(_OWORD *)(v476 + 16) = xmmword_1007509E0;
      id v477 = [v22 displayName];
      if (!v477) {
        goto LABEL_54;
      }
      v478 = v477;
      uint64_t v479 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v481 = v480;

      *(void *)(v476 + 56) = &type metadata for String;
      *(void *)(v476 + 64) = sub_1000AA64C();
      *(void *)(v476 + 32) = v479;
      *(void *)(v476 + 40) = v481;
      uint64_t v482 = String.init(format:_:)();
      uint64_t v484 = v483;
      swift_bridgeObjectRelease();
      uint64_t v523 = v482;
      uint64_t v524 = v484;
      sub_1000A06D0();
      goto LABEL_38;
    case 2:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      id v42 = v4;
      id v43 = (id)ActivitySharingBundle();
      NSString v44 = String._bridgeToObjectiveC()();
      id v45 = [v43 localizedStringForKey:v44 value:0 table:0];

      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v48 = v47;

      uint64_t v523 = v46;
      uint64_t v524 = v48;
      a2 = sub_1000A06D0();
      uint64_t v49 = Text.init<A>(_:)();
      v516 = v50;
      v517 = (unsigned char *)v49;
      LODWORD(v514) = v51;
      v515 = v52;
      id v53 = (id)ActivitySharingBundle();
      NSString v54 = String._bridgeToObjectiveC()();
      id v55 = [v53 localizedStringForKey:v54 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_10074E640;
      id v57 = [v22 displayName];
      if (!v57)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        JUMPOUT(0x10056B518);
      }
      char v58 = v57;
      id v4 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v59;

      *(void *)(v56 + 56) = &type metadata for String;
      char v5 = (char **)sub_1000AA64C();
      *(void *)(v56 + 64) = v5;
      *(void *)(v56 + 32) = v4;
      *(void *)(v56 + 40) = v6;
      id v60 = [v22 displayName];
      if (v60) {
        goto LABEL_9;
      }
      __break(1u);
LABEL_7:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      id v61 = v4;
      id v62 = (id)ActivitySharingBundle();
      NSString v63 = String._bridgeToObjectiveC()();
      id v64 = [v62 localizedStringForKey:v63 value:0 table:0];

      uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v67 = v66;

      uint64_t v523 = v65;
      uint64_t v524 = v67;
      sub_1000A06D0();
      uint64_t v68 = Text.init<A>(_:)();
      v516 = v69;
      v517 = (unsigned char *)v68;
      LODWORD(v514) = v70;
      v515 = v71;
      id v72 = (id)ActivitySharingBundle();
      NSString v73 = String._bridgeToObjectiveC()();
      id v74 = [v72 localizedStringForKey:v73 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_10074E640;
      id v75 = [v22 displayName];
      if (!v75) {
        goto LABEL_42;
      }
      uint64_t v76 = v75;
      uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v79 = v78;

      *(void *)(v56 + 56) = &type metadata for String;
      char v5 = (char **)sub_1000AA64C();
      *(void *)(v56 + 64) = v5;
      *(void *)(v56 + 32) = v77;
      *(void *)(v56 + 40) = v79;
      id v60 = [v22 displayName];
      if (!v60) {
        goto LABEL_43;
      }
LABEL_9:
      long long v80 = v60;
      uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v83 = v82;

      *(void *)(v56 + 96) = &type metadata for String;
      *(void *)(v56 + 104) = v5;
      *(void *)(v56 + 72) = v81;
      *(void *)(v56 + 80) = v83;
      uint64_t v84 = String.init(format:_:)();
      uint64_t v86 = v85;
      swift_bridgeObjectRelease();
      uint64_t v523 = v84;
      uint64_t v524 = v86;
LABEL_38:
      Text.init<A>(_:)();
      v518[7](v519, 1, 1, v522);
LABEL_39:
      Alert.init(title:message:dismissButton:)();
      return sub_10056BB18((uint64_t)v520);
    case 3:
      goto LABEL_7;
    case 4:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      unint64_t v87 = self;
      id v88 = v4;
      id v89 = [v87 mainBundle];
      NSString v90 = String._bridgeToObjectiveC()();
      id v91 = [v89 localizedStringForKey:v90 value:0 table:0];

      uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v94 = v93;

      uint64_t v523 = v92;
      uint64_t v524 = v94;
      sub_1000A06D0();
      uint64_t v95 = Text.init<A>(_:)();
      v516 = v96;
      v517 = (unsigned char *)v95;
      LODWORD(v514) = v97;
      v515 = v98;
      [v22 isMyActivityDataCurrentlyHidden];
      id v99 = [v87 mainBundle];
      NSString v485 = String._bridgeToObjectiveC()();
      id v486 = [v99 localizedStringForKey:v485 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v487 = swift_allocObject();
      *(_OWORD *)(v487 + 16) = xmmword_1007509E0;
      id v488 = [v22 displayName];
      if (v488) {
        goto LABEL_37;
      }
      goto LABEL_55;
    case 5:
      v519 = v527;
      swift_retain();
      id v100 = (id)ActivitySharingBundle();
      NSString v101 = String._bridgeToObjectiveC()();
      uint64_t v521 = a2;
      id v102 = [v100 localizedStringForKey:v101 value:0 table:0];

      uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v518 = v6;
      uint64_t v105 = v104;

      uint64_t v523 = v103;
      uint64_t v524 = v105;
      sub_1000A06D0();
      uint64_t v106 = Text.init<A>(_:)();
      uint64_t v512 = v107;
      *(void *)&long long v513 = v106;
      LODWORD(v510) = v108;
      v511 = v109;
      id v110 = (id)ActivitySharingBundle();
      NSString v111 = String._bridgeToObjectiveC()();
      id v112 = [v110 localizedStringForKey:v111 value:0 table:0];

      uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v522 = v5;
      uint64_t v115 = v114;

      uint64_t v523 = v113;
      uint64_t v524 = v115;
      uint64_t v116 = Text.init<A>(_:)();
      uint64_t v507 = v117;
      unint64_t v508 = v116;
      v509 = v118;
      uint64_t v506 = v119 & 1;
      id v120 = (id)ActivitySharingBundle();
      NSString v121 = String._bridgeToObjectiveC()();
      id v122 = [v120 localizedStringForKey:v121 value:0 table:0];

      uint64_t v123 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v125 = v124;

      uint64_t v523 = v123;
      uint64_t v524 = v125;
      uint64_t v126 = Text.init<A>(_:)();
      uint64_t v503 = v127;
      uint64_t v504 = v126;
      uint64_t v505 = v128;
      LODWORD(v502) = v129 & 1;
      uint64_t v130 = v517;
      static Alert.Button.cancel(_:action:)();
      id v131 = (id)ActivitySharingBundle();
      NSString v132 = String._bridgeToObjectiveC()();
      id v133 = [v131 localizedStringForKey:v132 value:0 table:0];

      uint64_t v134 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v136 = v135;

      uint64_t v523 = v134;
      uint64_t v524 = v136;
      uint64_t v137 = Text.init<A>(_:)();
      uint64_t v499 = v138;
      unint64_t v500 = v137;
      uint64_t v501 = v139;
      char v141 = v140 & 1;
      uint64_t v142 = swift_allocObject();
      uint64_t v143 = v519;
      *(void *)(v142 + 16) = v22;
      *(void *)(v142 + 24) = v143;
      swift_retain();
      uint64_t v144 = v516;
      static Alert.Button.destructive(_:action:)();
      unsigned __int8 v145 = v518[2];
      uint64_t v146 = v522;
      ((void (*)(unsigned char *, unsigned char *, char **))v145)(v515, v130, v522);
      ((void (*)(uint64_t, unsigned char *, char **))v145)(v514, v144, v146);
      uint64_t v148 = v507;
      uint64_t v147 = v508;
      LOBYTE(v136) = v506;
      sub_1000A1750(v508, v507, v506);
      swift_bridgeObjectRetain();
      Alert.init(title:message:primaryButton:secondaryButton:)();
      sub_1000A06C0(v500, v499, v141);
      swift_bridgeObjectRelease();
      sub_1000A06C0(v504, v503, v502);
      swift_bridgeObjectRelease();
      sub_10056BB18((uint64_t)v520);
      sub_1000A06C0(v147, v148, v136);
      swift_release();
      swift_bridgeObjectRelease();
      char v149 = v518[1];
      long long v150 = v522;
      ((void (*)(unsigned char *, char **))v149)(v144, v522);
      return ((uint64_t (*)(unsigned char *, char **))v149)(v517, v150);
    case 6:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      long long v152 = self;
      id v153 = v4;
      id v154 = [v152 mainBundle];
      NSString v155 = String._bridgeToObjectiveC()();
      char v5 = &selRef_initUsingEarnedShader_;
      id v156 = [v154 localizedStringForKey:v155 value:0 table:0];

      uint64_t v157 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v159 = v158;

      uint64_t v523 = v157;
      uint64_t v524 = v159;
      a2 = sub_1000A06D0();
      uint64_t v160 = Text.init<A>(_:)();
      v516 = v161;
      v517 = (unsigned char *)v160;
      LODWORD(v514) = v162;
      v515 = v163;
      id v4 = [v152 mainBundle];
      NSString v164 = String._bridgeToObjectiveC()();
      uint64_t v6 = (void (**)(unsigned char *, uint64_t, uint64_t, char **))[v4 localizedStringForKey:v164 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v487 = swift_allocObject();
      *(_OWORD *)(v487 + 16) = xmmword_1007509E0;
      id v488 = [v22 displayName];
      if (v488) {
        goto LABEL_37;
      }
      __break(1u);
LABEL_14:
      id v165 = v4;
      id v166 = [v22 as_competitionSendConfirmationTitle];
      uint64_t v167 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v169 = v168;

      uint64_t v523 = v167;
      uint64_t v524 = v169;
      sub_1000A06D0();
      uint64_t v521 = a2;
      uint64_t v170 = Text.init<A>(_:)();
      v517 = v171;
      v518 = (void (**)(unsigned char *, uint64_t, uint64_t, char **))v170;
      id v172 = [self mainBundle];
      uint64_t v173 = v6;
      NSString v174 = String._bridgeToObjectiveC()();
      id v175 = [v172 localizedStringForKey:v174 value:0 table:0];

      uint64_t v176 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v178 = v177;

      uint64_t v523 = v176;
      uint64_t v524 = v178;
      Text.init<A>(_:)();
      v173[7](v519, 1, 1, v5);
      goto LABEL_39;
    case 7:
      goto LABEL_14;
    case 8:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      v412 = v527;
      v509 = v528;
      v413 = v529;
      id v414 = v526;
      v519 = v413;
      swift_retain();
      id v415 = [v414 as_competitionSendConfirmationTitle];
      uint64_t v416 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v418 = v417;

      uint64_t v523 = v416;
      uint64_t v524 = v418;
      sub_1000A06D0();
      uint64_t v419 = Text.init<A>(_:)();
      v511 = v420;
      uint64_t v512 = v419;
      LODWORD(v508) = v421;
      v510 = v422;
      id v423 = [v414 as_competitionSendConfirmationMessageForExperienceType:v412];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v514 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v424 = swift_allocObject();
      long long v513 = xmmword_1007509E0;
      *(_OWORD *)(v424 + 16) = xmmword_1007509E0;
      id v520 = v414;
      id v425 = [v414 displayName];
      if (!v425) {
        goto LABEL_52;
      }
      v426 = v425;
      uint64_t v427 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v429 = v428;

      *(void *)(v424 + 56) = &type metadata for String;
      unint64_t v500 = sub_1000AA64C();
      *(void *)(v424 + 64) = v500;
      *(void *)(v424 + 32) = v427;
      *(void *)(v424 + 40) = v429;
      uint64_t v430 = String.init(format:_:)();
      uint64_t v432 = v431;
      swift_bridgeObjectRelease();
      uint64_t v523 = v430;
      uint64_t v524 = v432;
      uint64_t v433 = Text.init<A>(_:)();
      uint64_t v505 = v434;
      uint64_t v506 = v433;
      char v436 = v435;
      uint64_t v507 = v437;
      id v438 = [self mainBundle];
      NSString v439 = String._bridgeToObjectiveC()();
      id v440 = [v438 localizedStringForKey:v439 value:0 table:0];

      uint64_t v441 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v443 = v442;

      uint64_t v523 = v441;
      uint64_t v524 = v443;
      uint64_t v444 = Text.init<A>(_:)();
      uint64_t v502 = v445;
      uint64_t v503 = v444;
      LODWORD(v501) = v446 & 1;
      uint64_t v504 = v447;
      static Alert.Button.cancel(_:action:)();
      id v448 = (id)ActivitySharingBundle();
      NSString v449 = String._bridgeToObjectiveC()();
      id v450 = [v448 localizedStringForKey:v449 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v451 = swift_allocObject();
      *(_OWORD *)(v451 + 16) = v513;
      id v452 = [v520 displayName];
      if (!v452) {
        goto LABEL_53;
      }
      v453 = v452;
      uint64_t v514 = v436 & 1;
      uint64_t v454 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v456 = v455;

      unint64_t v457 = v500;
      *(void *)(v451 + 56) = &type metadata for String;
      *(void *)(v451 + 64) = v457;
      *(void *)(v451 + 32) = v454;
      *(void *)(v451 + 40) = v456;
      uint64_t v458 = String.init(format:_:)();
      uint64_t v460 = v459;
      swift_bridgeObjectRelease();
      uint64_t v523 = v458;
      uint64_t v524 = v460;
      uint64_t v461 = Text.init<A>(_:)();
      uint64_t v498 = v462;
      uint64_t v499 = v461;
      unint64_t v500 = v463;
      int v497 = v464 & 1;
      uint64_t v465 = swift_allocObject();
      v466 = v519;
      *(void *)(v465 + 16) = v509;
      *(void *)(v465 + 24) = v466;
      *(void *)&long long v513 = v465;
      swift_retain();
      v467 = v517;
      static Alert.Button.default(_:action:)();
      v468 = v518;
      v469 = v518[2];
      v470 = v522;
      ((void (*)(unsigned char *, unsigned char *, char **))v469)(v516, v11, v522);
      ((void (*)(unsigned char *, unsigned char *, char **))v469)(v515, v467, v470);
      uint64_t v471 = v505;
      uint64_t v472 = v506;
      LOBYTE(v467) = v514;
      sub_1000A1750(v506, v505, v514);
      swift_bridgeObjectRetain();
      Alert.init(title:message:primaryButton:secondaryButton:)();
      sub_1000A06C0(v499, v498, v497);
      swift_bridgeObjectRelease();
      sub_1000A06C0(v503, v502, v501);

      swift_release();
      swift_bridgeObjectRelease();
      sub_1000A06C0(v472, v471, (char)v467);
      swift_release();
      swift_bridgeObjectRelease();
      v473 = v468[1];
      ((void (*)(unsigned char *, char **))v473)(v517, v470);
      return ((uint64_t (*)(unsigned char *, char **))v473)(v11, v470);
    case 9:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      id v179 = v4;
      id v180 = (id)ActivitySharingBundle();
      NSString v181 = String._bridgeToObjectiveC()();
      id v182 = [v180 localizedStringForKey:v181 value:0 table:0];

      uint64_t v183 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v185 = v184;

      uint64_t v523 = v183;
      uint64_t v524 = v185;
      sub_1000A06D0();
      uint64_t v186 = Text.init<A>(_:)();
      v516 = v187;
      v517 = (unsigned char *)v186;
      LODWORD(v514) = v188;
      v515 = v189;
      id v190 = (id)ActivitySharingBundle();
      NSString v191 = String._bridgeToObjectiveC()();
      id v192 = [v190 localizedStringForKey:v191 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v487 = swift_allocObject();
      *(_OWORD *)(v487 + 16) = xmmword_1007509E0;
      id v488 = [v22 displayName];
      if (!v488) {
        goto LABEL_44;
      }
LABEL_37:
      v489 = v488;
      uint64_t v490 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v492 = v491;

      *(void *)(v487 + 56) = &type metadata for String;
      *(void *)(v487 + 64) = sub_1000AA64C();
      *(void *)(v487 + 32) = v490;
      *(void *)(v487 + 40) = v492;
      uint64_t v493 = String.init(format:_:)();
      uint64_t v495 = v494;
      swift_bridgeObjectRelease();
      uint64_t v523 = v493;
      uint64_t v524 = v495;
      goto LABEL_38;
    case 10:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      id v193 = v4;
      id v194 = [v22 as_competitionSendConfirmationTitle];
      uint64_t v195 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v197 = v196;

      uint64_t v523 = v195;
      uint64_t v524 = v197;
      sub_1000A06D0();
      uint64_t v198 = Text.init<A>(_:)();
      v516 = v199;
      v517 = (unsigned char *)v198;
      v515 = v200;
      id v201 = (id)ActivitySharingBundle();
      NSString v202 = String._bridgeToObjectiveC()();
      id v203 = [v201 localizedStringForKey:v202 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v204 = swift_allocObject();
      *(_OWORD *)(v204 + 16) = xmmword_1007509E0;
      id v205 = [v22 displayName];
      if (!v205) {
        goto LABEL_45;
      }
      v206 = v205;
      uint64_t v207 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v209 = v208;

      *(void *)(v204 + 56) = &type metadata for String;
      *(void *)(v204 + 64) = sub_1000AA64C();
      *(void *)(v204 + 32) = v207;
      *(void *)(v204 + 40) = v209;
      uint64_t v210 = String.init(format:_:)();
      uint64_t v212 = v211;
      swift_bridgeObjectRelease();
      uint64_t v523 = v210;
      uint64_t v524 = v212;
      Text.init<A>(_:)();
      v518[7](v519, 1, 1, v522);
      goto LABEL_39;
    case 11:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      unint64_t v213 = v528;
      v510 = v527;
      id v214 = v526;
      v519 = v213;
      swift_retain();
      id v215 = [v214 as_competitionSendConfirmationTitle];
      uint64_t v216 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v218 = v217;

      uint64_t v523 = v216;
      uint64_t v524 = v218;
      unint64_t v508 = sub_1000A06D0();
      uint64_t v219 = Text.init<A>(_:)();
      uint64_t v512 = v220;
      *(void *)&long long v513 = v219;
      LODWORD(v509) = v221;
      v511 = v222;
      uint64_t v223 = self;
      id v224 = [v223 mainBundle];
      NSString v225 = String._bridgeToObjectiveC()();
      id v226 = [v224 localizedStringForKey:v225 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v227 = swift_allocObject();
      *(_OWORD *)(v227 + 16) = xmmword_10074E640;
      id v520 = v214;
      id v228 = [v214 displayName];
      if (!v228) {
        goto LABEL_46;
      }
      uint64_t v229 = v228;
      uint64_t v230 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v232 = v231;

      *(void *)(v227 + 56) = &type metadata for String;
      unint64_t v233 = sub_1000AA64C();
      *(void *)(v227 + 64) = v233;
      *(void *)(v227 + 32) = v230;
      *(void *)(v227 + 40) = v232;
      id v234 = [v520 displayName];
      if (!v234) {
        goto LABEL_47;
      }
      uint64_t v235 = v234;
      uint64_t v236 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v238 = v237;

      *(void *)(v227 + 96) = &type metadata for String;
      *(void *)(v227 + 104) = v233;
      *(void *)(v227 + 72) = v236;
      *(void *)(v227 + 80) = v238;
      uint64_t v239 = String.init(format:_:)();
      uint64_t v241 = v240;
      swift_bridgeObjectRelease();
      uint64_t v523 = v239;
      uint64_t v524 = v241;
      uint64_t v242 = Text.init<A>(_:)();
      uint64_t v506 = v243;
      uint64_t v507 = v244;
      uint64_t v504 = v242;
      uint64_t v505 = v245 & 1;
      id v246 = [v223 mainBundle];
      NSString v247 = String._bridgeToObjectiveC()();
      id v248 = [v246 localizedStringForKey:v247 value:0 table:0];

      uint64_t v249 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v251 = v250;

      uint64_t v523 = v249;
      uint64_t v524 = v251;
      uint64_t v252 = Text.init<A>(_:)();
      uint64_t v501 = v253;
      uint64_t v502 = v252;
      uint64_t v503 = v254;
      LODWORD(v500) = v255 & 1;
      BOOL v256 = v517;
      static Alert.Button.cancel(_:action:)();
      id v257 = (id)ActivitySharingBundle();
      NSString v258 = String._bridgeToObjectiveC()();
      id v259 = [v257 localizedStringForKey:v258 value:0 table:0];

      uint64_t v260 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v262 = v261;

      uint64_t v523 = v260;
      uint64_t v524 = v262;
      uint64_t v263 = Text.init<A>(_:)();
      uint64_t v498 = v264;
      uint64_t v499 = v263;
      unint64_t v508 = v265;
      int v497 = v266 & 1;
      uint64_t v267 = swift_allocObject();
      *(void *)(v267 + 16) = v510;
      *(void *)(v267 + 24) = v519;
      swift_retain();
      Swift::String v268 = v516;
      static Alert.Button.default(_:action:)();
      Swift::String v269 = v518;
      Swift::String v270 = v518[2];
      uint64_t v271 = v522;
      ((void (*)(unsigned char *, unsigned char *, char **))v270)(v515, v256, v522);
      ((void (*)(uint64_t, unsigned char *, char **))v270)(v514, v268, v271);
      uint64_t v272 = v504;
      LOBYTE(v268) = v505;
      uint64_t v273 = v506;
      sub_1000A1750(v504, v506, v505);
      swift_bridgeObjectRetain();
      Alert.init(title:message:primaryButton:secondaryButton:)();
      sub_1000A06C0(v499, v498, v497);
      swift_bridgeObjectRelease();
      sub_1000A06C0(v502, v501, v500);

      swift_release();
      swift_bridgeObjectRelease();
      sub_1000A06C0(v272, v273, (char)v268);
      swift_release();
      swift_bridgeObjectRelease();
      id v274 = v269[1];
      ((void (*)(unsigned char *, char **))v274)(v516, v271);
      return ((uint64_t (*)(unsigned char *, char **))v274)(v517, v271);
    case 12:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      unsigned __int8 v275 = v527;
      v511 = v528;
      v276 = v529;
      id v277 = v526;
      id v520 = v276;
      swift_retain();
      id v278 = [v277 as_competitionReceivedNotificationTitle];
      uint64_t v279 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v281 = v280;

      uint64_t v523 = v279;
      uint64_t v524 = v281;
      sub_1000A06D0();
      uint64_t v514 = Text.init<A>(_:)();
      uint64_t v512 = v283;
      *(void *)&long long v513 = v282;
      LODWORD(v510) = v284;
      id v285 = [v277 as_competitionReceivedNotificationMessageForExperienceType:v275];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v286 = swift_allocObject();
      *(_OWORD *)(v286 + 16) = xmmword_1007509E0;
      v519 = v277;
      id v287 = [v277 displayName];
      if (!v287) {
        goto LABEL_48;
      }
      long long v288 = v287;
      uint64_t v289 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v291 = v290;

      *(void *)(v286 + 56) = &type metadata for String;
      *(void *)(v286 + 64) = sub_1000AA64C();
      *(void *)(v286 + 32) = v289;
      *(void *)(v286 + 40) = v291;
      uint64_t v292 = String.init(format:_:)();
      uint64_t v294 = v293;
      swift_bridgeObjectRelease();
      uint64_t v523 = v292;
      uint64_t v524 = v294;
      uint64_t v295 = Text.init<A>(_:)();
      uint64_t v507 = v296;
      unint64_t v508 = v295;
      char v298 = v297;
      v509 = v299;
      id v300 = [self mainBundle];
      NSString v301 = String._bridgeToObjectiveC()();
      id v302 = [v300 localizedStringForKey:v301 value:0 table:0];

      uint64_t v303 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v305 = v304;

      uint64_t v523 = v303;
      uint64_t v524 = v305;
      uint64_t v306 = Text.init<A>(_:)();
      uint64_t v504 = v307;
      uint64_t v505 = v306;
      LODWORD(v503) = v308 & 1;
      uint64_t v506 = v309;
      static Alert.Button.cancel(_:action:)();
      NSString v310 = String._bridgeToObjectiveC()();
      id v311 = (id)ActivitySharingBundle();
      id v312 = (id)FIRandomStringForPrefixWithTableName();

      if (!v312) {
        goto LABEL_49;
      }
      uint64_t v501 = v298 & 1;
      uint64_t v313 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v315 = v314;

      uint64_t v523 = v313;
      uint64_t v524 = v315;
      uint64_t v316 = Text.init<A>(_:)();
      uint64_t v498 = v317;
      uint64_t v499 = v316;
      unint64_t v500 = v318;
      int v497 = v319 & 1;
      uint64_t v320 = swift_allocObject();
      id v321 = v520;
      *(void *)(v320 + 16) = v511;
      *(void *)(v320 + 24) = v321;
      uint64_t v502 = v320;
      swift_retain();
      char v322 = v517;
      static Alert.Button.default(_:action:)();
      v323 = v518;
      uint64_t v324 = v518[2];
      uint64_t v325 = v522;
      ((void (*)(unsigned char *, unsigned char *, char **))v324)(v516, v8, v522);
      ((void (*)(unsigned char *, unsigned char *, char **))v324)(v515, v322, v325);
      uint64_t v326 = v507;
      uint64_t v327 = v508;
      char v328 = v501;
      sub_1000A1750(v508, v507, v501);
      swift_bridgeObjectRetain();
      Alert.init(title:message:primaryButton:secondaryButton:)();
      sub_1000A06C0(v499, v498, v497);
      swift_bridgeObjectRelease();
      sub_1000A06C0(v505, v504, v503);

      swift_release();
      swift_bridgeObjectRelease();
      sub_1000A06C0(v327, v326, v328);
      swift_release();
      swift_bridgeObjectRelease();
      v329 = v323[1];
      ((void (*)(unsigned char *, char **))v329)(v517, v325);
      return ((uint64_t (*)(unsigned char *, char **))v329)(v8, v325);
    case 13:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      uint64_t v330 = v527;
      id v331 = v4;
      id v332 = [v22 as_competitionAcceptConfirmationTitle];
      uint64_t v333 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v335 = v334;

      uint64_t v523 = v333;
      uint64_t v524 = v335;
      sub_1000A06D0();
      v517 = (unsigned char *)Text.init<A>(_:)();
      id v336 = [v22 competitionPendingAcceptance];
      if (!v336) {
        goto LABEL_50;
      }
      unint64_t v337 = v336;
      id v338 = [v22 as_competitionAcceptConfirmationMessageForCompetition:v336 experienceType:v330];

      uint64_t v339 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v341 = v340;

      uint64_t v523 = v339;
      uint64_t v524 = v341;
      goto LABEL_38;
    case 14:
      id v342 = v4;
      id v343 = (id)ActivitySharingBundle();
      NSString v344 = String._bridgeToObjectiveC()();
      id v345 = [v343 localizedStringForKey:v344 value:0 table:0];

      uint64_t v346 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::Int v347 = v6;
      uint64_t v349 = v348;

      uint64_t v523 = v346;
      uint64_t v524 = v349;
      sub_1000A06D0();
      uint64_t v521 = Text.init<A>(_:)();
      v517 = v351;
      v518 = v350;
      id v352 = [v22 as_competitionAcceptErrorMessage];
      uint64_t v353 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v355 = v354;

      uint64_t v523 = v353;
      uint64_t v524 = v355;
      Text.init<A>(_:)();
      v347[7](v519, 1, 1, v5);
      goto LABEL_39;
    case 15:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      uint64_t v356 = v528;
      v510 = v527;
      id v357 = v526;
      id v520 = v356;
      swift_retain();
      id v358 = [v357 as_competitionReceivedNotificationTitle];
      uint64_t v359 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v361 = v360;

      uint64_t v523 = v359;
      uint64_t v524 = v361;
      sub_1000A06D0();
      uint64_t v362 = Text.init<A>(_:)();
      uint64_t v512 = v363;
      *(void *)&long long v513 = v362;
      LODWORD(v509) = v364;
      v511 = v365;
      v366 = self;
      id v367 = [v366 mainBundle];
      NSString v368 = String._bridgeToObjectiveC()();
      id v369 = [v367 localizedStringForKey:v368 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v370 = swift_allocObject();
      *(_OWORD *)(v370 + 16) = xmmword_1007509E0;
      v519 = v357;
      id v371 = [v357 displayName];
      if (!v371) {
        goto LABEL_51;
      }
      v372 = v371;
      uint64_t v373 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v375 = v374;

      *(void *)(v370 + 56) = &type metadata for String;
      *(void *)(v370 + 64) = sub_1000AA64C();
      *(void *)(v370 + 32) = v373;
      *(void *)(v370 + 40) = v375;
      uint64_t v376 = String.init(format:_:)();
      uint64_t v378 = v377;
      swift_bridgeObjectRelease();
      uint64_t v523 = v376;
      uint64_t v524 = v378;
      uint64_t v379 = Text.init<A>(_:)();
      uint64_t v507 = v380;
      unint64_t v508 = v381;
      uint64_t v505 = v379;
      uint64_t v506 = v382 & 1;
      id v383 = [v366 mainBundle];
      NSString v384 = String._bridgeToObjectiveC()();
      id v385 = [v383 localizedStringForKey:v384 value:0 table:0];

      uint64_t v386 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v388 = v387;

      uint64_t v523 = v386;
      uint64_t v524 = v388;
      uint64_t v389 = Text.init<A>(_:)();
      uint64_t v502 = v390;
      uint64_t v503 = v389;
      uint64_t v504 = v391;
      LODWORD(v501) = v392 & 1;
      uint64_t v393 = v517;
      static Alert.Button.cancel(_:action:)();
      id v394 = (id)ActivitySharingBundle();
      NSString v395 = String._bridgeToObjectiveC()();
      id v396 = [v394 localizedStringForKey:v395 value:0 table:0];

      uint64_t v397 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v399 = v398;

      uint64_t v523 = v397;
      uint64_t v524 = v399;
      uint64_t v400 = Text.init<A>(_:)();
      uint64_t v498 = v401;
      uint64_t v499 = v400;
      unint64_t v500 = v402;
      int v497 = v403 & 1;
      uint64_t v404 = swift_allocObject();
      *(void *)(v404 + 16) = v510;
      *(void *)(v404 + 24) = v520;
      swift_retain();
      v405 = v516;
      static Alert.Button.default(_:action:)();
      v406 = v518;
      v407 = v518[2];
      v408 = v522;
      ((void (*)(unsigned char *, unsigned char *, char **))v407)(v515, v393, v522);
      ((void (*)(uint64_t, unsigned char *, char **))v407)(v514, v405, v408);
      uint64_t v409 = v505;
      LOBYTE(v405) = v506;
      uint64_t v410 = v507;
      sub_1000A1750(v505, v507, v506);
      swift_bridgeObjectRetain();
      Alert.init(title:message:primaryButton:secondaryButton:)();
      sub_1000A06C0(v499, v498, v497);
      swift_bridgeObjectRelease();
      sub_1000A06C0(v503, v502, v501);

      swift_release();
      swift_bridgeObjectRelease();
      sub_1000A06C0(v409, v410, (char)v405);
      swift_release();
      swift_bridgeObjectRelease();
      v411 = v406[1];
      ((void (*)(unsigned char *, char **))v411)(v516, v408);
      return ((uint64_t (*)(unsigned char *, char **))v411)(v517, v408);
    case 16:
      uint64_t v521 = a2;
      v522 = v5;
      v518 = v6;
      LocalizedStringKey.init(stringLiteral:)();
      Text.init(_:tableName:bundle:comment:)();
      LocalizedStringKey.init(stringLiteral:)();
      Text.init(_:tableName:bundle:comment:)();
      v518[7](v519, 1, 1, v522);
      return Alert.init(title:message:dismissButton:)();
    default:
      id v23 = v527;
      id v24 = v4;
      id v25 = [v22 as_competitionLearnMoreTitleForExperienceType:v23];
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      uint64_t v523 = v26;
      uint64_t v524 = v28;
      sub_1000A06D0();
      v522 = v5;
      uint64_t v521 = Text.init<A>(_:)();
      v518 = v29;
      id v30 = [v22 as_competitionLearnMoreFullDescriptionForExperienceType:1];
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;

      uint64_t v523 = v31;
      uint64_t v524 = v33;
      Text.init<A>(_:)();
      v6[7](v519, 1, 1, v522);
      goto LABEL_39;
  }
}

uint64_t sub_10056B55C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_100058A1C((uint64_t)v4);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_100962520;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10056B798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  return _swift_task_switch(sub_10056B7B8, 0, 0);
}

uint64_t sub_10056B7B8()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 64) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10056B84C, v2, v1);
}

uint64_t sub_10056B84C()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(unsigned char *)(v0 + 48) = -1;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10056B908()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp43ActivitySharingFriendDetailAlertCoordinator__presentedAlertType;
  uint64_t v2 = sub_1000AFA94(&qword_10094C020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10056B988()
{
  return type metadata accessor for ActivitySharingFriendDetailAlertCoordinator();
}

uint64_t sub_10056B990@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ActivitySharingFriendDetailAlertCoordinator();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10056B9D0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10056BA10()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10005DB5C;
  v3[7] = v2;
  return _swift_task_switch(sub_10056B7B8, 0, 0);
}

uint64_t sub_10056BABC()
{
  swift_release();

  return swift_deallocObject();
}

id sub_10056BAFC(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_10034690C(result, a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_10056BB10()
{
  return sub_10069F0C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10056BB18(uint64_t a1)
{
  return a1;
}

char *sub_10056BB68(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    id v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v42(a1, a2, v7);
    int v8 = (int *)type metadata accessor for FitnessPlusStackViewModel();
    *(void *)&a1[v8[5]] = *(void *)&a2[v8[5]];
    uint64_t v9 = v8[6];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = v8[7];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v8[8];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v18, v19, v7);
    uint64_t v20 = v8[9];
    uint64_t v21 = &a1[v20];
    id v22 = &a2[v20];
    uint64_t v23 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[5];
    uint64_t v25 = a3[6];
    uint64_t v26 = *(void **)&a2[v24];
    *(void *)&a1[v24] = v26;
    uint64_t v27 = *(void **)&a2[v25];
    *(void *)&a1[v25] = v27;
    uint64_t v28 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    uint64_t v29 = &a1[v28];
    id v30 = &a2[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    uint64_t v32 = a3[9];
    uint64_t v33 = &a1[v32];
    id v34 = &a2[v32];
    uint64_t v35 = type metadata accessor for AttributedString();
    NSString v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    id v37 = v26;
    id v38 = v27;
    swift_retain();
    swift_retain();
    v36(v33, v34, v35);
    uint64_t v39 = sub_1000AFA94(&qword_100950BB0);
    *(void *)&v33[*(int *)(v39 + 28)] = *(void *)&v34[*(int *)(v39 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_10056BDC0(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = type metadata accessor for FitnessPlusStackViewModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(v6 + 32), v4);
  uint64_t v7 = a1 + *(int *)(v6 + 36);
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  swift_release();
  swift_release();
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  sub_1000AFA94(&qword_100950BB0);

  return swift_release();
}

uint64_t sub_10056BF54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v40(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for FitnessPlusStackViewModel();
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = v7[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v7[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40(v17, v18, v6);
  uint64_t v19 = v7[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[5];
  uint64_t v24 = a3[6];
  uint64_t v25 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v25;
  uint64_t v26 = *(void **)(a2 + v24);
  *(void *)(a1 + v24) = v26;
  uint64_t v27 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[9];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = type metadata accessor for AttributedString();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
  id v36 = v25;
  id v37 = v26;
  swift_retain();
  swift_retain();
  v35(v32, v33, v34);
  uint64_t v38 = sub_1000AFA94(&qword_100950BB0);
  *(void *)(v32 + *(int *)(v38 + 28)) = *(void *)(v33 + *(int *)(v38 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_10056C160(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for FitnessPlusStackViewModel();
  *(void *)(a1 + v8[5]) = *(void *)(a2 + v8[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v8[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v8[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + v8[8], a2 + v8[8], v6);
  uint64_t v15 = v8[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[5];
  uint64_t v20 = *(void **)(a2 + v19);
  uint64_t v21 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  id v22 = v20;

  uint64_t v23 = a3[6];
  uint64_t v24 = *(void **)(a2 + v23);
  uint64_t v25 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = v24;
  id v26 = v24;

  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v27 = a3[8];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  swift_retain();
  swift_release();
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  swift_retain();
  swift_release();
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  uint64_t v34 = sub_1000AFA94(&qword_100950BB0);
  *(void *)(v31 + *(int *)(v34 + 28)) = *(void *)(v32 + *(int *)(v34 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10056C3B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for FitnessPlusStackViewModel();
  *(void *)(a1 + v8[5]) = *(void *)(a2 + v8[5]);
  *(_OWORD *)(a1 + v8[6]) = *(_OWORD *)(a2 + v8[6]);
  *(_OWORD *)(a1 + v8[7]) = *(_OWORD *)(a2 + v8[7]);
  v7(a1 + v8[8], a2 + v8[8], v6);
  uint64_t v9 = v8[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = sub_1000AFA94(&qword_100950BB0);
  *(void *)(v16 + *(int *)(v19 + 28)) = *(void *)(v17 + *(int *)(v19 + 28));
  return a1;
}

uint64_t sub_10056C550(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for FitnessPlusStackViewModel();
  *(void *)(a1 + v8[5]) = *(void *)(a2 + v8[5]);
  swift_bridgeObjectRelease();
  uint64_t v9 = v8[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = v8[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v7(a1 + v8[8], a2 + v8[8], v6);
  uint64_t v19 = v8[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[5];
  uint64_t v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);

  uint64_t v25 = a3[6];
  id v26 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);

  uint64_t v27 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  swift_release();
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  swift_release();
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = sub_1000AFA94(&qword_100950BB0);
  *(void *)(v31 + *(int *)(v34 + 28)) = *(void *)(v32 + *(int *)(v34 + 28));
  swift_release();
  return a1;
}

uint64_t sub_10056C754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10056C768);
}

uint64_t sub_10056C768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1000AFA94(&qword_100950BB0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10056C898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10056C8AC);
}

uint64_t sub_10056C8AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1000AFA94(&qword_100950BB0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for FitnessPlusStackItemView()
{
  uint64_t result = qword_100962590;
  if (!qword_100962590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10056CA28()
{
  type metadata accessor for FitnessPlusStackViewModel();
  if (v0 <= 0x3F)
  {
    sub_10022D41C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10056CB14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10056CB30()
{
  uint64_t result = static Font.body.getter();
  qword_100962530 = result;
  return result;
}

uint64_t sub_10056CB50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v64 = type metadata accessor for TaskPriority();
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  id v61 = &v51[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for FitnessPlusStackItemView();
  uint64_t v5 = v4 - 8;
  uint64_t v57 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v58 = v6;
  uint64_t v59 = &v51[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000AFA94(&qword_1009625D8);
  __chkstk_darwin(v7 - 8);
  id v55 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v15 = &v51[-v14];
  uint64_t v16 = (int *)sub_1000AFA94(&qword_1009625E0);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)&v51[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  NSString v54 = &v51[-v20];
  uint64_t v53 = sub_1000AFA94(&qword_1009625E8);
  __chkstk_darwin(v53);
  uint64_t v56 = &v51[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v52 = *(unsigned __int8 *)(v2 + *(int *)(v5 + 36));
  sub_1000AFA94(&qword_100950BB0);
  State.wrappedValue.getter();
  sub_100475CC4();
  AttributedString.init(_:)();
  uint64_t v22 = self;
  uint64_t v60 = v2;
  v23.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  if (qword_10094AC48 != -1) {
    swift_once();
  }
  id v24 = [v22 formattedListStringForDate:v23.super.isa font:qword_10095D848];

  id v25 = [v24 string];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  *uint64_t v18 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = (char *)v18 + v16[15];
  *(_OWORD *)uint64_t v29 = xmmword_100756700;
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  *((unsigned char *)v18 + v16[9]) = v52;
  uint64_t v30 = *(void (**)(char *, unsigned char *, uint64_t))(v10 + 16);
  v30((char *)v18 + v16[10], v15, v9);
  v30((char *)v18 + v16[11], v12, v9);
  uint64_t v31 = (uint64_t *)((char *)v18 + v16[12]);
  *uint64_t v31 = v26;
  v31[1] = v28;
  *(uint64_t *)((char *)v18 + v16[13]) = 0;
  uint64_t v32 = v55;
  uint64_t v33 = v60;
  sub_10056D1B8(v60, (uint64_t)v55);
  uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v10 + 8);
  v34(v12, v9);
  v34(v15, v9);
  sub_1000AEEC8((uint64_t)v32, (uint64_t)v18 + v16[14], &qword_1009625D8);
  uint64_t v35 = v54;
  sub_1000AEEC8((uint64_t)v18, (uint64_t)v54, &qword_1009625E0);
  uint64_t v36 = v33 + *(int *)(type metadata accessor for FitnessPlusStackViewModel() + 36);
  id v37 = v56;
  sub_1000AEF2C((uint64_t)v35, (uint64_t)v56, &qword_1009625E0);
  uint64_t v38 = &v37[*(int *)(v53 + 52)];
  uint64_t v39 = type metadata accessor for UUID();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v38, v36, v39);
  sub_10008DB18((uint64_t)v35, &qword_1009625E0);
  uint64_t v40 = v59;
  sub_10056E7F4(v33, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackItemView);
  unint64_t v41 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v42 = swift_allocObject();
  sub_10056E38C((uint64_t)v40, v42 + v41);
  id v43 = v61;
  static TaskPriority.userInitiated.getter();
  uint64_t v44 = sub_1000AFA94(&qword_100962600);
  uint64_t v45 = v63;
  uint64_t v46 = (char *)(v63 + *(int *)(v44 + 36));
  uint64_t v47 = type metadata accessor for _TaskModifier();
  uint64_t v48 = v62;
  uint64_t v49 = v64;
  (*(void (**)(char *, unsigned char *, uint64_t))(v62 + 16))(&v46[*(int *)(v47 + 20)], v43, v64);
  *(void *)uint64_t v46 = &unk_1009625F8;
  *((void *)v46 + 1) = v42;
  sub_1000AEF2C((uint64_t)v37, v45, &qword_1009625E8);
  (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v43, v49);
  return sub_10008DB18((uint64_t)v37, &qword_1009625E8);
}

void sub_10056D1B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v49 = sub_1000AFA94(&qword_10094E460);
  __chkstk_darwin(v49);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v47);
  uint64_t v6 = (_OWORD *)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = sub_1000AFA94(&qword_100962608);
  __chkstk_darwin(v48);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100962610);
  __chkstk_darwin(v9);
  uint64_t v50 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = sub_1000AFA94(&qword_100962618);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FitnessPlusStackItemView();
  long long v53 = *(_OWORD *)(a1 + *(int *)(v17 + 32));
  sub_1000AFA94(&qword_100950388);
  State.wrappedValue.getter();
  uint64_t v18 = v52;
  if (v52)
  {
    uint64_t v43 = v17;
    uint64_t v44 = a1;
    uint64_t v45 = v14;
    uint64_t v46 = v13;
    uint64_t v19 = self;
    swift_retain();
    id v20 = [v19 briskColors];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v42 = v9;
      id v22 = [v20 nonGradientTextColor];

      if (v22)
      {
        uint64_t v23 = Color.init(_:)();
        uint64_t KeyPath = swift_getKeyPath();
        id v25 = (char *)v6 + *(int *)(v47 + 20);
        uint64_t v26 = enum case for RoundedCornerStyle.continuous(_:);
        uint64_t v27 = type metadata accessor for RoundedCornerStyle();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
        __asm { FMOV            V0.2D, #4.0 }
        *uint64_t v6 = _Q0;
        sub_10056E7F4((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
        *(_WORD *)&v4[*(int *)(v49 + 36)] = 256;
        sub_1000AEF2C((uint64_t)v4, (uint64_t)&v8[*(int *)(v48 + 36)], &qword_10094E460);
        *(void *)uint64_t v8 = v18;
        *((void *)v8 + 1) = 0;
        *((_WORD *)v8 + 8) = 1;
        *((void *)v8 + 3) = KeyPath;
        *((void *)v8 + 4) = v23;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_10008DB18((uint64_t)v4, &qword_10094E460);
        sub_10056E85C((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
        swift_release();
        swift_release();
        swift_release();
        static Alignment.center.getter();
        _FrameLayout.init(width:height:alignment:)();
        uint64_t v33 = v50;
        sub_1000AEF2C((uint64_t)v8, v50, &qword_100962608);
        uint64_t v34 = (_OWORD *)(v33 + *(int *)(v42 + 36));
        long long v35 = v54;
        *uint64_t v34 = v53;
        v34[1] = v35;
        v34[2] = v55;
        sub_10008DB18((uint64_t)v8, &qword_100962608);
        uint64_t v36 = (uint64_t)v46;
        sub_1000AEEC8(v33, (uint64_t)v46, &qword_100962610);
        sub_1000AEF2C(v36, (uint64_t)v16, &qword_100962610);
        swift_storeEnumTagMultiPayload();
        sub_1000AFA94(&qword_1009503E0);
        sub_10056E610();
        sub_1002190D0((unint64_t *)&qword_100950408, &qword_1009503E0);
        _ConditionalContent<>.init(storage:)();
        swift_release();
        sub_10008DB18(v36, &qword_100962610);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v37 = v53;
    char v38 = BYTE8(v53);
    uint64_t v39 = v54;
    char v40 = BYTE8(v54);
    *(void *)uint64_t v16 = 0;
    v16[8] = 1;
    *((void *)v16 + 2) = v37;
    v16[24] = v38;
    *((void *)v16 + 4) = v39;
    v16[40] = v40;
    *((_OWORD *)v16 + 3) = v55;
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_1009503E0);
    sub_10056E610();
    sub_1002190D0((unint64_t *)&qword_100950408, &qword_1009503E0);
    _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_10056D790(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = type metadata accessor for FitnessPlusStackItemView();
  v1[6] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[7] = v3;
  v1[8] = *(void *)(v3 + 64);
  v1[9] = swift_task_alloc();
  type metadata accessor for FitnessPlusStackViewModel();
  v1[10] = swift_task_alloc();
  sub_1000AFA94(&qword_100950CD0);
  v1[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Image.ResizingMode();
  v1[12] = v4;
  v1[13] = *(void *)(v4 - 8);
  v1[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[15] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10056D944, v6, v5);
}

uint64_t sub_10056D944()
{
  swift_release();
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self smm_systemImageNamed:v1];

  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    id v9 = v2;
    Image.init(uiImage:)();
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for Image.ResizingMode.stretch(_:), v6);
    Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v6);
    uint64_t v10 = enum case for Image.TemplateRenderingMode.template(_:);
    uint64_t v11 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(v5, v10, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
    uint64_t v13 = Image.renderingMode(_:)();
    swift_release();
    sub_10008DB18(v5, &qword_100950CD0);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v8 + *(int *)(v7 + 32));
    *(void *)(v0 + 32) = v13;
    sub_1000AFA94(&qword_100950388);
    State.wrappedValue.setter();
  }
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 56);
  uint64_t v17 = *(void *)(v0 + 40);
  sub_10056E7F4(v17, v14, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
  sub_10056E7F4(v17, v15, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackItemView);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = swift_allocObject();
  sub_10056E38C(v15, v19 + v18);
  sub_100483D24(v14, (void (*)(void))sub_10056E4C0, v19);
  swift_release();
  sub_10056E85C(v14, (uint64_t (*)(void))type metadata accessor for FitnessPlusStackViewModel);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_10056DC70(char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FitnessPlusStackItemView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = type metadata accessor for AttributedString();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v28 = v5;
    uint64_t v29 = v9;
    uint64_t v12 = *(void **)&a1[OBJC_IVAR___CHCatalogItemViewModel_title];
    uint64_t v27 = a1;
    id v13 = v12;
    AttributedString.init(_:)();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v26 - 2) = v15;
    swift_getKeyPath();
    uint64_t v30 = static Color.white.getter();
    sub_1000A5D60();
    AttributedString.subscript.setter();
    uint64_t v16 = swift_getKeyPath();
    __chkstk_darwin(v16);
    *(&v26 - 2) = v17;
    swift_getKeyPath();
    if (qword_10094AE50 != -1) {
      swift_once();
    }
    uint64_t v30 = qword_100962530;
    sub_1000AA6A0();
    swift_retain();
    uint64_t v18 = AttributedString.subscript.setter();
    __chkstk_darwin(v18);
    *(&v26 - 2) = a2;
    *(&v26 - 1) = (uint64_t)v11;
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    swift_release();
    sub_10056E7F4(a2, (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FitnessPlusStackItemView);
    unint64_t v19 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v20 = swift_allocObject();
    sub_10056E38C((uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
    uint64_t v21 = v27;
    sub_100485D1C(v27, (uint64_t)sub_10056E558, v20);
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v29);
  }
  else
  {
    static os_log_type_t.error.getter();
    uint64_t v23 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1007509E0;
    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 64) = sub_1000AA64C();
    *(void *)(v24 + 32) = 0xD000000000000019;
    *(void *)(v24 + 40) = 0x80000001007CDF20;
    id v25 = v23;
    os_log(_:dso:log:_:_:)();

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10056E0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v13 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)v13 - v9, a2, v3, v8);
  type metadata accessor for FitnessPlusStackItemView();
  ((void (*)(char *, char *, uint64_t))v11)(v6, v10, v3);
  sub_1000AFA94(&qword_100950BB0);
  State.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_10056E254(uint64_t result)
{
  if (result)
  {
    __chkstk_darwin(result);
    id v2 = v1;
    static Animation.default.getter();
    withAnimation<A>(_:_:)();

    return swift_release();
  }
  return result;
}

uint64_t sub_10056E304(uint64_t a1, void *a2)
{
  id v2 = a2;
  Image.init(uiImage:)();
  type metadata accessor for FitnessPlusStackItemView();
  sub_1000AFA94(&qword_100950388);
  return State.wrappedValue.setter();
}

uint64_t sub_10056E38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FitnessPlusStackItemView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10056E3F0()
{
  uint64_t v2 = *(void *)(type metadata accessor for FitnessPlusStackItemView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10005DB5C;
  return sub_10056D790(v3);
}

uint64_t sub_10056E4C0(uint64_t a1)
{
  return sub_10056E570(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10056DC70);
}

uint64_t sub_10056E4E4()
{
  return 8;
}

uint64_t sub_10056E4F0()
{
  return swift_release();
}

uint64_t sub_10056E4F8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_10056E50C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10056E524()
{
  return 8;
}

uint64_t sub_10056E538()
{
  return sub_10056E0F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10056E558(uint64_t a1)
{
  return sub_10056E570(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10056E254);
}

uint64_t sub_10056E570(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for FitnessPlusStackItemView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_10056E5F4()
{
  return sub_10056E304(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_10056E610()
{
  unint64_t result = qword_100962620;
  if (!qword_100962620)
  {
    sub_1000A1370(&qword_100962610);
    sub_10056E68C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962620);
  }
  return result;
}

unint64_t sub_10056E68C()
{
  unint64_t result = qword_100962628;
  if (!qword_100962628)
  {
    sub_1000A1370(&qword_100962608);
    sub_10056E72C();
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962628);
  }
  return result;
}

unint64_t sub_10056E72C()
{
  unint64_t result = qword_100962630;
  if (!qword_100962630)
  {
    sub_1000A1370(&qword_100962638);
    sub_1002190D0((unint64_t *)&qword_1009539F8, &qword_100953A00);
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962630);
  }
  return result;
}

uint64_t sub_10056E7F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10056E85C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10056E8C0()
{
  unint64_t result = qword_100962640;
  if (!qword_100962640)
  {
    sub_1000A1370(&qword_100962600);
    sub_1000A132C(&qword_100962648, &qword_1009625E8);
    sub_1003B4158();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962640);
  }
  return result;
}

Class sub_10056E9AC(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  __n128 v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = a1;
  a3();

  v10.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v10.super.isa;
}

id sub_10056EE84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownhillRunBridge();
  [super dealloc];
}

uint64_t type metadata accessor for DownhillRunBridge()
{
  return self;
}

uint64_t sub_10056EEEC(uint64_t a1)
{
  return sub_10056EF2C(a1, qword_100962680, (uint64_t (*)(void))&static UIListContentConfiguration.extraProminentInsetGroupedHeader());
}

uint64_t sub_10056EF0C(uint64_t a1)
{
  return sub_10056EF2C(a1, qword_100962698, (uint64_t (*)(void))&static UIListContentConfiguration.subtitleCell());
}

uint64_t sub_10056EF2C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = type metadata accessor for UIListContentConfiguration();
  sub_1000258C4(v5, a2);
  sub_1000876DC(v5, (uint64_t)a2);
  return a3();
}

id sub_10056EF84()
{
  id result = [self _preferredFontForTextStyle:UIFontTextStyleBody variant:256];
  qword_1009626B0 = (uint64_t)result;
  return result;
}

void sub_10056EFD0()
{
  id v0 = [self briskColors];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [v0 nonGradientTextColor];

    if (v2)
    {
      qword_1009626B8 = (uint64_t)v2;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

char *sub_10056F044(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a2;
  v38[1] = a1;
  uint64_t v4 = type metadata accessor for UIListContentConfiguration.TextProperties();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel;
  id v8 = objc_allocWithZone((Class)UILabel);
  char v40 = v3;
  id v9 = [v8 initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AE58 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for UIListContentConfiguration();
  uint64_t v41 = sub_1000876DC(v10, (uint64_t)qword_100962680);
  UIListContentConfiguration.textProperties.getter();
  uint64_t v11 = (void *)UIListContentConfiguration.TextProperties.font.getter();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  id v13 = (void *)UILabel.withFont(_:)();

  uint64_t v14 = self;
  id v15 = [v14 labelColor];
  uint64_t v16 = (void *)UILabel.withTextColor(_:)();

  [v16 setLineBreakMode:0];
  [v16 setNumberOfLines:0];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v39] = v16;
  uint64_t v39 = OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel;
  id v17 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AE60 != -1) {
    swift_once();
  }
  sub_1000876DC(v10, (uint64_t)qword_100962698);
  UIListContentConfiguration.textProperties.getter();
  uint64_t v18 = (void *)UIListContentConfiguration.TextProperties.font.getter();
  v12(v7, v4);
  unint64_t v19 = (void *)UILabel.withFont(_:)();

  id v20 = [v14 secondaryLabelColor];
  uint64_t v21 = (void *)UILabel.withTextColor(_:)();

  [v21 setLineBreakMode:0];
  [v21 setNumberOfLines:0];
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v22 = v40;
  *(void *)&v40[v39] = v21;
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_button;
  id v24 = [self buttonWithType:1];
  if (qword_10094AE70 != -1) {
    swift_once();
  }
  [v24 setTintColor:qword_1009626B8];
  if (qword_10094AE68 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_1009626B0;
  id v26 = [v24 titleLabel];
  [v26 setFont:v25];

  [v24 setHidden:1];
  [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v22[v23] = v24;
  uint64_t v27 = &v22[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  *(void *)&v22[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_activeConstraints] = _swiftEmptyArrayStorage;

  if (v42)
  {
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v28 = 0;
  }
  uint64_t v29 = (objc_class *)type metadata accessor for ActivityTileSectionHeader();
  v43.receiver = v22;
  v43.super_class = v29;
  [super initWithReuseIdentifier:v28];

  uint64_t v31 = (char *)v30;
  UIListContentConfiguration.directionalLayoutMargins.getter();
  [v31 setDirectionalLayoutMargins:];
  [v31 setIsAccessibilityElement:0];
  id v32 = [v31 contentView];
  [v32 addSubview:*(void *)&v31[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel]];

  id v33 = [v31 contentView];
  [v33 addSubview:*(void *)&v31[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel]];

  uint64_t v34 = *(void **)&v31[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_button];
  [v34 addTarget:v31 action:"didTapButton" forControlEvents:64];
  id v35 = [v31 contentView];
  id v36 = v34;
  [v35 addSubview:v36];

  return v31;
}

void sub_10056F64C(double a1)
{
  id v2 = v1;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100751160;
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel];
  id v6 = [v5 leadingAnchor];
  id v7 = [v2 contentView];
  id v8 = [v7 leadingAnchor];

  id v9 = [v6 constraintEqualToAnchor:v8 constant:a1];
  *(void *)(v4 + 32) = v9;
  id v10 = [v5 topAnchor];
  id v11 = [v2 contentView];
  id v12 = [v11 topAnchor];

  id v13 = [v10 constraintEqualToAnchor:v12 constant:25.0];
  *(void *)(v4 + 40) = v13;
  id v82 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel];
  id v14 = [v82 leadingAnchor];
  id v15 = [v5 leadingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v4 + 48) = v16;
  id v80 = *(id *)&v2[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_button];
  id v17 = [v80 trailingAnchor];
  id v18 = [v2 contentView];
  id v19 = [v18 trailingAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19 constant:-a1];
  *(void *)(v4 + 56) = v20;
  specialized Array._endMutation()();
  uint64_t v81 = v4;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10075C680;
  id v22 = [v5 leadingAnchor];
  id v23 = [v2 contentView];
  id v24 = [v23 leadingAnchor];

  id v25 = [v22 constraintEqualToAnchor:v24 constant:a1];
  *(void *)(v21 + 32) = v25;
  id v26 = [v5 topAnchor];
  id v27 = [v2 contentView];
  id v28 = [v27 topAnchor];

  id v29 = [v26 constraintEqualToAnchor:v28 constant:25.0];
  *(void *)(v21 + 40) = v29;
  id v30 = [v5 trailingAnchor];
  id v31 = [v2 contentView];
  id v32 = [v31 trailingAnchor];

  id v33 = [v30 constraintEqualToAnchor:v32 constant:-a1];
  *(void *)(v21 + 48) = v33;
  id v34 = [v82 leadingAnchor];
  id v35 = [v5 leadingAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v21 + 56) = v36;
  id v37 = [v80 leadingAnchor];
  id v38 = [v5 leadingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v21 + 64) = v39;
  specialized Array._endMutation()();
  [v5 systemLayoutSizeFittingSize:1.79769313e308, 1.79769313e308];
  double v41 = v40;
  [v80 systemLayoutSizeFittingSize:1.79769313e308, 1.79769313e308];
  double v43 = v42;
  id v44 = [self mainScreen];
  [v44 bounds];
  double v46 = v45;

  id v47 = [v5 text];
  if (v47)
  {

    id v48 = [v5 bottomAnchor];
  }
  else
  {
    id v49 = [v2 contentView];
    id v48 = [v49 topAnchor];
  }
  double v50 = v41 + v43;
  id v51 = [v82 topAnchor];
  id v52 = [v51 constraintEqualToAnchor:v48 constant:9.0];

  id v53 = [v82 text];
  long long v54 = v5;
  if (v53)
  {

    long long v54 = v82;
  }
  id v55 = v54;
  if (v50 <= v46 + -36.0)
  {
    id v61 = [v80 lastBaselineAnchor:v48];
    id v62 = [v5 lastBaselineAnchor];
    id v58 = [v61 constraintEqualToAnchor:v62];

    unint64_t v60 = v81;
    uint64_t v59 = v55;
  }
  else
  {
    id v56 = [v80 topAnchor:v48];
    id v57 = [v55 bottomAnchor];
    id v58 = [v56 constraintEqualToAnchor:v57];

    if ([v80 isHidden]) {
      uint64_t v59 = v55;
    }
    else {
      uint64_t v59 = v80;
    }
    unint64_t v60 = v21;
  }
  id v63 = v59;
  id v64 = [v63 bottomAnchor];
  id v65 = [v2 contentView];
  id v66 = [v65 bottomAnchor];

  id v67 = [v64 constraintEqualToAnchor:v66 constant:-9.0];
  LODWORD(v68) = 1132068864;
  [v67 setPriority:v68];
  id v69 = v52;
  id v70 = v58;
  id v71 = v67;
  swift_bridgeObjectRelease();
  if (v60 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
    BOOL v78 = __OFADD__(v77, 3);
    uint64_t v73 = v77 + 3;
    if (!v78)
    {
LABEL_14:
      sub_1005708D8(v73);
      specialized Array._endMutation()();
      id v69 = v69;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v72 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v73 = v72 + 3;
    if (!__OFADD__(v72, 3)) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_25:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_15:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v74 = v70;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v75 = v71;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();

  *(void *)&v2[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_activeConstraints] = v60;
  swift_bridgeObjectRelease();
  uint64_t v76 = self;
  sub_1001ABF94();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v76 activateConstraints:isa];
}

void sub_100570074(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v8 = v7;
  id v16 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel);
  if (a2) {
    NSString v17 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v17 = 0;
  }
  [v16 setText:v17];

  id v18 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel);
  if (a4) {
    NSString v19 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v19 = 0;
  }
  [v18 setText:v19];

  if (a5)
  {
    id v20 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_button);
    id v39 = self;
    id v21 = [v39 mainBundle];
    uint64_t v40 = a5;
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v21 localizedStringForKey:v22 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 setTitle:v24 forState:0];

    [v20 setHidden:0];
    if (a2)
    {
      id v25 = a2;
    }
    else
    {
      a1 = 0;
      id v25 = (void *)0xE000000000000000;
    }
    if (a4)
    {
      id v26 = a4;
    }
    else
    {
      a3 = 0;
      id v26 = (void *)0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    v27._uint64_t countAndFlagsBits = a1;
    v27._object = v25;
    String.append(_:)(v27);
    v28._uint64_t countAndFlagsBits = 32;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    v29._uint64_t countAndFlagsBits = a3;
    v29._object = v26;
    String.append(_:)(v29);
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 setAccessibilityIdentifier:v30];

    id v31 = [v39 mainBundle];
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = [v31 localizedStringForKey:v32 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_10074E640;
    *(void *)(v34 + 56) = &type metadata for String;
    unint64_t v35 = sub_1000AA64C();
    *(void *)(v34 + 32) = a1;
    *(void *)(v34 + 40) = v25;
    *(void *)(v34 + 96) = &type metadata for String;
    *(void *)(v34 + 104) = v35;
    *(void *)(v34 + 64) = v35;
    *(void *)(v34 + 72) = a3;
    *(void *)(v34 + 80) = v26;
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 setAccessibilityLabel:v36];

    id v37 = (void *)(v8 + OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction);
    uint64_t v38 = *(void *)(v8 + OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction);
    *id v37 = v40;
    v37[1] = a6;
    swift_retain();
    sub_10005E5F8(v38);
  }

  sub_10056F64C(a7);
}

uint64_t sub_100570584()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ActivityTileSectionHeader();
  [super prepareForReuse];
  uint64_t v1 = self;
  sub_1001ABF94();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 deactivateConstraints:isa];

  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel] setText:0];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel] setText:0];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_button];
  [v3 setTitle:0 forState:0];
  [v3 setHidden:1];
  uint64_t v4 = &v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction];
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  return sub_10005E5F8(v5);
}

id sub_1005707A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityTileSectionHeader();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivityTileSectionHeader()
{
  return self;
}

unint64_t sub_1005708BC()
{
  return 0xD000000000000019;
}

uint64_t sub_1005708D8(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *uint64_t v1 = result;
  }
  return result;
}

void sub_100570998()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIListContentConfiguration.TextProperties();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_titleLabel;
  id v6 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AE58 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for UIListContentConfiguration();
  sub_1000876DC(v7, (uint64_t)qword_100962680);
  UIListContentConfiguration.textProperties.getter();
  uint64_t v8 = (void *)UIListContentConfiguration.TextProperties.font.getter();
  id v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  id v10 = (void *)UILabel.withFont(_:)();

  id v11 = self;
  id v12 = [v11 labelColor];
  id v13 = (void *)UILabel.withTextColor(_:)();

  [v13 setLineBreakMode:0];
  [v13 setNumberOfLines:0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v26] = v13;
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_subtitleLabel;
  id v15 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  if (qword_10094AE60 != -1) {
    swift_once();
  }
  sub_1000876DC(v7, (uint64_t)qword_100962698);
  UIListContentConfiguration.textProperties.getter();
  id v16 = (void *)UIListContentConfiguration.TextProperties.font.getter();
  v9(v5, v2);
  NSString v17 = (void *)UILabel.withFont(_:)();

  id v18 = [v11 secondaryLabelColor];
  NSString v19 = (void *)UILabel.withTextColor(_:)();

  [v19 setLineBreakMode:0];
  [v19 setNumberOfLines:0];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v14] = v19;
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_button;
  id v21 = [self buttonWithType:1];
  if (qword_10094AE70 != -1) {
    swift_once();
  }
  [v21 setTintColor:qword_1009626B8];
  if (qword_10094AE68 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_1009626B0;
  id v23 = [v21 titleLabel];
  [v23 setFont:v22];

  [v21 setHidden:1];
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v20] = v21;
  NSString v24 = &v1[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_buttonAction];
  *(void *)NSString v24 = 0;
  *((void *)v24 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25ActivityTileSectionHeader_activeConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100570E14()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_100570E4C(char a1)
{
  return sub_10060FBD4(a1, *(void *)(v1 + 16));
}

id sub_100570E54()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider];
  uint64_t v3 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_queryExecutor];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_chartQuery];
  if (v4)
  {
    uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore];
    id v6 = v2;
    uint64_t v7 = v3;
    [v5 stopQuery:v4];
  }
  else
  {
    uint64_t v8 = v2;
    id v9 = v3;
  }
  if (*(void *)&v3[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_basalEnergyQuery]) {
    [v3[OBJC_IVAR____TtC10FitnessApp21ActivityQueryExecutor_healthStore] stopQuery:];
  }

  uint64_t v10 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener];
  swift_beginAccess();
  sub_100335DBC(v10, (uint64_t)&v28);
  if (v29)
  {
    sub_10005C2B0(&v28, &v30);
    id v11 = [self defaultCenter];
    sub_10007E4EC(&v30, v31);
    [v11 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v30);
  }
  else
  {
    sub_100074898((uint64_t)&v28);
  }
  uint64_t v12 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener];
  swift_beginAccess();
  sub_100335DBC(v12, (uint64_t)&v28);
  if (v29)
  {
    sub_10005C2B0(&v28, &v30);
    id v13 = [self defaultCenter];
    sub_10007E4EC(&v30, v31);
    [v13 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v30);
  }
  else
  {
    sub_100074898((uint64_t)&v28);
  }
  uint64_t v14 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener];
  swift_beginAccess();
  sub_100335DBC(v14, (uint64_t)&v28);
  if (v29)
  {
    sub_10005C2B0(&v28, &v30);
    id v15 = [self defaultCenter];
    sub_10007E4EC(&v30, v31);
    [v15 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v30);
  }
  else
  {
    sub_100074898((uint64_t)&v28);
  }
  uint64_t v16 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener];
  swift_beginAccess();
  sub_100335DBC(v16, (uint64_t)&v28);
  if (v29)
  {
    sub_10005C2B0(&v28, &v30);
    id v17 = [self defaultCenter];
    sub_10007E4EC(&v30, v31);
    [v17 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v30);
  }
  else
  {
    sub_100074898((uint64_t)&v28);
  }
  uint64_t v18 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener];
  swift_beginAccess();
  sub_100335DBC(v18, (uint64_t)&v28);
  if (v29)
  {
    sub_10005C2B0(&v28, &v30);
    id v19 = [self defaultCenter];
    sub_10007E4EC(&v30, v31);
    [v19 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v30);
  }
  else
  {
    sub_100074898((uint64_t)&v28);
  }
  uint64_t v20 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener];
  swift_beginAccess();
  sub_100335DBC(v20, (uint64_t)&v28);
  if (v29)
  {
    sub_10005C2B0(&v28, &v30);
    id v21 = [self defaultCenter];
    sub_10007E4EC(&v30, v31);
    [v21 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v30);
  }
  else
  {
    sub_100074898((uint64_t)&v28);
  }
  uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery];
  if (v22)
  {
    id v23 = v22;
    dispatch thunk of ActivityAwardsDateQuery.deactivate()();
  }
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription;
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription];
  if (v25) {
    [v25 invalidate];
  }
  *(void *)&v1[v24] = 0;
  swift_unknownObjectRelease();
  v27.receiver = v1;
  v27.super_class = (Class)type metadata accessor for HistoryDayViewController();
  return [super dealloc];
}

uint64_t sub_1005716D0()
{
  return type metadata accessor for HistoryDayViewController();
}

uint64_t type metadata accessor for HistoryDayViewController()
{
  uint64_t result = qword_100962758;
  if (!qword_100962758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005717B0(void *a1)
{
  uint64_t v2 = (uint64_t)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_delegate];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary] = 0;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell] = 0;
  uint64_t v19 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell] = 0;
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell] = 0;
  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell] = 0;
  uint64_t v26 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell] = 0;
  uint64_t v28 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell] = 0;
  uint64_t v29 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringsConfigurationCell;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringsConfigurationCell] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener];
  _OWORD *v3 = 0u;
  v3[1] = 0u;
  uint64_t v4 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener];
  *uint64_t v4 = 0u;
  v4[1] = 0u;
  uint64_t v5 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener];
  _OWORD *v5 = 0u;
  v5[1] = 0u;
  id v6 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener];
  *id v6 = 0u;
  v6[1] = 0u;
  uint64_t v7 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener];
  *uint64_t v7 = 0u;
  v7[1] = 0u;
  uint64_t v27 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery] = 0;
  uint64_t v8 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener];
  _OWORD *v8 = 0u;
  v8[1] = 0u;
  v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_viewAppeared] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels] = 0;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards;
  uint64_t v10 = v1;

  *(void *)&v1[v9] = _swiftEmptyArrayStorage;
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController] = 0;
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData] = 0;
  v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didSetInitialChartData] = 0;
  v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation] = 0;
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy] = 0;
  v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads] = 0;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage] = 0;
  id v11 = &v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingText];
  *id v11 = 0;
  v11[1] = 0;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator] = 0;
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC] = 0;
  sub_10019B9F8(v2);

  swift_unknownObjectRelease();
  sub_100074898((uint64_t)v3);
  sub_100074898((uint64_t)v4);
  sub_100074898((uint64_t)v5);
  sub_100074898((uint64_t)v6);
  sub_100074898((uint64_t)v7);

  sub_100074898((uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v12 = *(void **)&v10[v21];

  type metadata accessor for HistoryDayViewController();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_100571BA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (objc_class *)type metadata accessor for HistoryDayViewController();
  v27.receiver = v0;
  v27.super_class = v6;
  [super viewDidLoad];
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider];
  [*(id *)(*(void *)(v7 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_activitySummaryListener)+ OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_observers) addObject:v1];
  id result = [v1 view];
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView];
    [result addSubview:v10];

    [v10 setDataSource:v1];
    [v10 setDelegate:v1];
    id v11 = [self systemBackgroundColor];
    [v10 setBackgroundColor:v11];

    [v10 setSeparatorStyle:0];
    [v10 setRowHeight:UITableViewAutomaticDimension];
    [v10 setEstimatedRowHeight:100.0];
    [v10 setSectionHeaderTopPadding:0.0];
    [v10 contentInset];
    [v10 setContentInset:];
    [v10 contentInset];
    [v10 setContentInset:];
    [v10 contentInset];
    [v10 setContentInset:];
    uint64_t v12 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date];
    id v13 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v13(v5, &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date], v2);
    v25[0] = v7;
    uint64_t v14 = sub_10023C810();
    uint64_t v15 = v2;
    uint64_t v16 = v14;
    uint64_t v17 = *(void (**)(char *))(v3 + 8);
    uint64_t v18 = v15;
    v25[1] = v3 + 8;
    v17(v5);
    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts] = v16;
    swift_bridgeObjectRelease();
    if ((ACHShouldUseNewAwardsSystem() & 1) == 0)
    {
      uint64_t v19 = v12;
      uint64_t v20 = v18;
      v13(v5, v19, v18);
      uint64_t v21 = sub_10023CB74((uint64_t)v5);
      ((void (*)(char *, uint64_t))v17)(v5, v20);
      *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards] = v21;
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionDataProvider];
    uint64_t v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_100578E04;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100007CA4;
    aBlock[3] = &unk_1008CED20;
    uint64_t v24 = _Block_copy(aBlock);
    swift_release();
    [v22 allMindfulnessSessionsWithCompletion:v24];
    _Block_release(v24);
    sub_1005753E0();
    sub_1002287E0(v10);
    return sub_100572004();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100572004()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v101 = type metadata accessor for Date();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  id v99 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for Calendar();
  uint64_t v98 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  int v97 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for DateComponents();
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  id v102 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v105 = (char *)&v94 - v6;
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider);
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_workoutDataProvider;
  uint64_t v10 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_workoutDataProvider);
  uint64_t v113 = sub_100578EC4;
  uint64_t v114 = v7;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v110 = 1107296256;
  NSString v111 = sub_100070394;
  id v112 = &unk_1008CEAF0;
  id v11 = _Block_copy(&aBlock);
  id v12 = v10;
  swift_retain();
  swift_release();
  [v12 addUpdateHandler:v11];
  _Block_release(v11);

  id v13 = *(void **)(v8 + v9);
  uint64_t v113 = sub_100578EC4;
  uint64_t v114 = v7;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v110 = 1107296256;
  NSString v111 = sub_100070394;
  id v112 = &unk_1008CEB18;
  uint64_t v14 = _Block_copy(&aBlock);
  uint64_t v107 = v7;
  swift_retain();
  id v15 = v13;
  swift_release();
  [v15 addAnimatedUpdateHandler:v14];
  _Block_release(v14);

  uint64_t v16 = self;
  id v17 = [v16 defaultCenter];
  if (qword_10094A6E0 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_100997870;
  uint64_t v19 = self;
  id v20 = v18;
  id v21 = [v19 mainQueue];
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v113 = sub_100578ECC;
  uint64_t v114 = v22;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v110 = 1107296256;
  NSString v111 = sub_1000711BC;
  id v112 = &unk_1008CEB40;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v24 = (void **)[v17 addObserverForName:v20 object:0 queue:v21 usingBlock:v23];
  _Block_release(v23);

  id v112 = (void *)swift_getObjectType();
  long long aBlock = v24;
  uint64_t v25 = v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_wheelchairListener;
  swift_beginAccess();
  sub_1000DDEE8((uint64_t)&aBlock, v25);
  swift_endAccess();
  id v26 = [v16 defaultCenter];
  id v27 = [v19 mainQueue];
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v113 = sub_100578ED4;
  uint64_t v114 = v28;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v110 = 1107296256;
  NSString v111 = sub_1000711BC;
  id v112 = &unk_1008CEB68;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_release();
  long long v30 = (void **)[v26 addObserverForName:UIApplicationSignificantTimeChangeNotification object:0 queue:v27 usingBlock:v29];
  _Block_release(v29);

  id v112 = (void *)swift_getObjectType();
  long long aBlock = v30;
  uint64_t v31 = v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dateChangeListener;
  swift_beginAccess();
  sub_1000DDEE8((uint64_t)&aBlock, v31);
  swift_endAccess();
  id v32 = [v16 defaultCenter];
  uint64_t v33 = kFIMindfulnessSessionDataProviderDidUpdateNotification;
  id v34 = [v19 mainQueue];
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v113 = sub_100578EDC;
  uint64_t v114 = v35;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v110 = 1107296256;
  NSString v111 = sub_1000711BC;
  id v112 = &unk_1008CEB90;
  NSString v36 = _Block_copy(&aBlock);
  swift_release();
  id v37 = (void **)[v32 addObserverForName:v33 object:0 queue:v34 usingBlock:v36];
  _Block_release(v36);

  id v112 = (void *)swift_getObjectType();
  long long aBlock = v37;
  uint64_t v38 = v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionsListener;
  swift_beginAccess();
  sub_1000DDEE8((uint64_t)&aBlock, v38);
  swift_endAccess();
  if (!ACHShouldUseNewAwardsSystem())
  {
    id v63 = [v16 defaultCenter];
    uint64_t v64 = AAUIAchievementsDataProviderDidFinishInitialLoadNotification;
    id v65 = [v19 mainQueue];
    uint64_t v66 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v113 = sub_100578EE4;
    uint64_t v114 = v66;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v110 = 1107296256;
    NSString v111 = sub_1000711BC;
    id v112 = &unk_1008CEBB8;
    id v67 = _Block_copy(&aBlock);
    swift_release();
    double v68 = (void **)[v63 addObserverForName:v64 object:0 queue:v65 usingBlock:v67];
    _Block_release(v67);

    id v112 = (void *)swift_getObjectType();
    long long aBlock = v68;
    uint64_t v69 = v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsListener;
    swift_beginAccess();
    sub_1000DDEE8((uint64_t)&aBlock, v69);
    swift_endAccess();
    id v70 = [v16 defaultCenter];
    uint64_t v71 = AAUIAchievementsDataProviderDidUpdateAchievementNotification;
    uint64_t v59 = v19;
    id v72 = [v19 mainQueue];
    uint64_t v73 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v113 = sub_100578EE4;
    uint64_t v114 = v73;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v110 = 1107296256;
    NSString v111 = sub_1000711BC;
    id v112 = &unk_1008CEBE0;
    id v74 = _Block_copy(&aBlock);
    swift_release();
    id v62 = &selRef_setPercentMinimized_;
    id v75 = (void **)[v70 addObserverForName:v71 object:0 queue:v72 usingBlock:v74];
    _Block_release(v74);

    id v112 = (void *)swift_getObjectType();
    long long aBlock = v75;
    uint64_t v76 = v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsUpdateListener;
    swift_beginAccess();
    sub_1000DDEE8((uint64_t)&aBlock, v76);
    swift_endAccess();
    id v61 = &selRef_configurePlayer;
    goto LABEL_9;
  }
  uint64_t v95 = v16;
  char v96 = v19;
  if (qword_10094A5E8 != -1) {
    swift_once();
  }
  uint64_t v39 = v108;
  uint64_t v40 = sub_1000876DC(v108, (uint64_t)qword_100997610);
  uint64_t v41 = v98;
  double v42 = v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v97, v40, v39);
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v43 = type metadata accessor for Calendar.Component();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(void *)(v44 + 72);
  unint64_t v46 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_100752410;
  unint64_t v48 = v47 + v46;
  id v49 = *(void (**)(unint64_t, void, uint64_t))(v44 + 104);
  v49(v48, enum case for Calendar.Component.day(_:), v43);
  v49(v48 + v45, enum case for Calendar.Component.month(_:), v43);
  v49(v48 + 2 * v45, enum case for Calendar.Component.year(_:), v43);
  sub_1000C6A18(v47);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v50 = v100;
  id v51 = v99;
  uint64_t v52 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v99, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v101);
  id v53 = v105;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v108);
  uint64_t v54 = v103;
  uint64_t v55 = v104;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v102, v53, v104);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v56 = objc_allocWithZone((Class)type metadata accessor for ActivityAwardsDateQuery());
  uint64_t v57 = ActivityAwardsDateQuery.init(dateComponents:initialAwardsHandler:updateHandler:)();
  static os_log_type_t.default.getter();
  id result = (id)ACHLogUI();
  uint64_t v59 = v96;
  if (result)
  {
    unint64_t v60 = result;
    os_log(_:dso:log:_:_:)();

    dispatch thunk of ActivityAwardsDateQuery.activate()();
    id v61 = &selRef_configurePlayer;
    id v62 = &selRef_setPercentMinimized_;
    uint64_t v77 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery);
    *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsQuery) = v57;

    (*(void (**)(char *, uint64_t))(v54 + 8))(v105, v55);
    uint64_t v16 = v95;
LABEL_9:
    id v78 = [v16 v61[112]];
    id v79 = [v59 mainQueue];
    id v80 = v59;
    uint64_t v81 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v113 = sub_100578F00;
    uint64_t v114 = v81;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v110 = 1107296256;
    NSString v111 = sub_1000711BC;
    id v112 = &unk_1008CEC08;
    id v82 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v83 = (void **)[v78 v62[172] UIContentSizeCategoryDidChangeNotification 0 v79 v82];
    _Block_release(v82);

    id v112 = (void *)swift_getObjectType();
    long long aBlock = v83;
    uint64_t v84 = v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fontListener;
    swift_beginAccess();
    sub_1000DDEE8((uint64_t)&aBlock, v84);
    swift_endAccess();
    id v85 = [v16 v61[112]];
    id v86 = [self didUpdatePauseStateNotification];
    id v87 = [v80 mainQueue];
    uint64_t v88 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v89 = swift_allocObject();
    uint64_t v90 = ObjectType;
    *(void *)(v89 + 16) = v88;
    *(void *)(v89 + 24) = v90;
    uint64_t v113 = sub_100578F40;
    uint64_t v114 = v89;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v110 = 1107296256;
    NSString v111 = sub_1000711BC;
    id v112 = &unk_1008CEC58;
    id v91 = _Block_copy(&aBlock);
    swift_release();
    id v92 = [v85 v62[172] v86 0 v87 v91];
    _Block_release(v91);
    swift_unknownObjectRelease();

    id v93 = objc_msgSend(objc_msgSend(self, "subjectMonitorRegistry"), "addMonitor:", v1);
    swift_unknownObjectRelease();
    *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_protectedAppsSubscription) = v93;
    swift_release();
    return (id)swift_unknownObjectRelease();
  }
  __break(1u);
  __break(1u);
  return result;
}

void sub_100573268()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100574468();
  }
}

void sub_1005732BC()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1000DE24C((uint64_t)v18), (v3 & 1) != 0))
    {
      sub_10008F484(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v19);
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1000DEDB4((uint64_t)v18);
    if (*((void *)&v20 + 1))
    {
      if (swift_dynamicCast())
      {
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v5 = (void *)Strong;
          uint64_t v6 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell);
          uint64_t v7 = v6;

          if (v6)
          {
            v7[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isWheelchair] = 16;
            sub_1003ADC58();
          }
        }
        swift_beginAccess();
        uint64_t v8 = swift_unknownObjectWeakLoadStrong();
        if (v8)
        {
          uint64_t v9 = (void *)v8;
          uint64_t v10 = *(void **)(v8 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell);
          id v11 = v10;

          if (v10)
          {
            v11[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_isWheelchair] = 16;
            sub_100232480();
          }
        }
        swift_beginAccess();
        uint64_t v12 = swift_unknownObjectWeakLoadStrong();
        if (v12)
        {
          id v13 = (void *)v12;
          uint64_t v14 = *(void **)(v12 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell);
          id v15 = v14;

          if (v14)
          {
            v15[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair] = 16;
            sub_100610698();
          }
        }
        swift_beginAccess();
        uint64_t v16 = swift_unknownObjectWeakLoadStrong();
        if (v16)
        {
          id v17 = (void *)v16;
          sub_100574074((uint64_t)&off_1008B6D18, 1u);
        }
      }
    }
    else
    {
      sub_100074898((uint64_t)&v19);
    }
  }
}

void sub_100573500()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (unsigned char *)Strong;
    if (qword_10094A5F8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1000876DC(v4, (uint64_t)qword_100997640);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
    (*(void (**)(char *, unsigned char *, uint64_t))(v1 + 16))(v3, &v9[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date], v0);
    int v11 = Calendar.isDateInToday(_:)() & 1;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v11 != v9[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday])
    {
      v9[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday] = v11;
      sub_100574074((uint64_t)&off_1008B6D40, 1u);
    }
  }
}

void sub_10057374C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionDataProvider);
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_100578E04;
    aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100007CA4;
    aBlock[3] = &unk_1008CECD0;
    uint64_t v4 = _Block_copy(aBlock);
    swift_release();
    [v2 allMindfulnessSessionsWithCompletion:v4];
    _Block_release(v4);
  }
}

void sub_10057385C(unint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_100574CCC(a1);
  }
}

void sub_1005738B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10057513C();
  }
}

void sub_10057390C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView) reloadData];
  }
}

uint64_t sub_100573974()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v30 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  uint64_t v6 = (void *)HKLogActivity;
  os_log_type_t v7 = v5;
  if (os_log_type_enabled(HKLogActivity, v5))
  {
    os_log_t v26 = v6;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v28 = v0;
    uint64_t v9 = v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v27 = v1;
    aBlock[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = _typeName(_:qualified:)();
    uint64_t v33 = sub_10008F1F4(v11, v12, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    id v13 = [self didUpdatePauseStateNotification];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;

    uint64_t v33 = sub_10008F1F4(v14, v16, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v17 = v26;
    _os_log_impl((void *)&_mh_execute_header, v26, v7, "%s received notification %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    uint64_t v1 = v27;
    swift_slowDealloc();
    uint64_t v0 = v28;
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    long long v19 = (void *)result;
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    long long v20 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    aBlock[4] = (uint64_t)sub_100578F64;
    aBlock[5] = v21;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100070394;
    aBlock[3] = (uint64_t)&unk_1008CECA8;
    uint64_t v22 = _Block_copy(aBlock);
    id v23 = v19;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    uint64_t v24 = v30;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v24, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v4, v31);
  }
  return result;
}

uint64_t sub_100573EA0(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for HistoryDayViewController();
  [super viewDidAppear:a1 & 1];
  id v3 = [v1 navigationController];
  if (v3)
  {
    uint64_t v4 = v3;
    [v3 setDelegate:v1];
  }
  os_log_type_t v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator] = 0;

  v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_viewAppeared] = 1;
  sub_1005767C0();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  os_log_type_t v7 = v1;
  sub_1001FAB90((uint64_t)sub_100578F94, v6);
  return swift_release();
}

uint64_t sub_100573F90(uint64_t a1)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didSetInitialChartData) == 1
    && (*(unsigned char *)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation) & 1) == 0)
  {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation) = 1;
    sub_100576260(1);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1002D936C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100574074(uint64_t a1, unsigned int a2)
{
  unsigned int v39 = a2;
  uint64_t v3 = type metadata accessor for IndexSet();
  uint64_t v4 = *(void **)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)&v34 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  unint64_t v16 = (char *)&v34 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - v17;
  IndexSet.init()();
  long long v19 = (void (*)(char *, char *, uint64_t))v4[2];
  id v37 = v16;
  v19(v13, v16, v3);
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v35 = v18;
    NSString v36 = v4;
    uint64_t v21 = (void (**)(char *, uint64_t))(v4 + 1);
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v4 + 4);
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    uint64_t v34 = (unint64_t)v22 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    do
    {
      ++v23;
      IndexSet.init(integer:)();
      IndexSet.union(_:)();
      uint64_t v24 = *v21;
      (*v21)(v7, v3);
      v24(v13, v3);
      uint64_t v25 = *v22;
      (*v22)(v13, v10, v3);
    }
    while (v20 != v23);
    swift_bridgeObjectRelease();
    uint64_t v18 = v35;
    uint64_t v4 = v36;
  }
  else
  {
    uint64_t v25 = (void (*)(char *, char *, uint64_t))v4[4];
  }
  v25(v18, v13, v3);
  os_log_t v26 = (void (*)(char *, uint64_t))v4[1];
  v26(v37, v3);
  uint64_t v27 = *(void **)(v38 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView);
  if (v39)
  {
    id v28 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v38
                                                                + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_tableView), "window"));

    if (!v28)
    {
      [v27 reloadData];
      return ((uint64_t (*)(char *, uint64_t))v26)(v18, v3);
    }
    IndexSet._bridgeToObjectiveC()(v29);
    uint64_t v31 = v30;
    [v27 reloadSections:v30 withRowAnimation:100 v34];
  }
  else
  {
    IndexSet._bridgeToObjectiveC()((NSIndexSet *)v39);
    uint64_t v31 = v32;
    [v27 reloadSections:v32 withRowAnimation:5, v34];
  }

  return ((uint64_t (*)(char *, uint64_t))v26)(v18, v3);
}

void sub_100574468()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v2);
    uint64_t v11 = sub_10023C810();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v12 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts;
    if (*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts)
      && (unint64_t v13 = swift_bridgeObjectRetain(),
          char v14 = sub_100228264(v13, (unint64_t)v11),
          swift_bridgeObjectRelease(),
          (v14 & 1) != 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)(v1 + v12) = v11;
      swift_bridgeObjectRelease();
      sub_100574074((uint64_t)&off_1008B6CF0, 1u);
      uint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData);
      if (v15)
      {
        id v16 = v15;
        sub_100575F5C(v16);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005746EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_100578E54;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008CEA78;
  unint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

uint64_t sub_100574988()
{
  uint64_t v0 = type metadata accessor for Calendar();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (char *)result;
    static Calendar.current.getter();
    type metadata accessor for MindfulnessSessionViewModel();
    uint64_t v6 = static MindfulnessSessionViewModel.makeMindfulnessSessionViewModels(from:)();
    __chkstk_darwin(v6);
    *(&v12 - 2) = (uint64_t)v3;
    *(&v12 - 1) = (uint64_t)v5;
    uint64_t v8 = sub_1006239C4((uint64_t (*)(id *))sub_100578E5C, &v12 - 4, v7);
    uint64_t v9 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels;
    if (*(void *)&v5[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionViewModels]
      && (swift_bridgeObjectRetain(),
          unint64_t v10 = swift_bridgeObjectRetain(),
          unsigned __int8 v11 = sub_100375C90(v10, (uint64_t)v8),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v11 & 1) != 0))
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)&v5[v9] = v8;
      swift_bridgeObjectRelease();
      sub_100574074((uint64_t)&off_1008B6DB8, 1u);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_100574B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v14 - v9;
  MindfulnessSessionViewModel.endDate.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v4);
  char v11 = Calendar.isDate(_:inSameDayAs:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  return v11 & 1;
}

uint64_t sub_100574CCC(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = _swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v25 = v7;
    uint64_t v26 = v6;
    if (v10) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_15:
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    uint64_t v18 = v24;
    *(void *)(v17 + 24) = v24;
    aBlock[4] = sub_100578EBC;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008CEAC8;
    long long v19 = _Block_copy(aBlock);
    id v20 = v18;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = result;
  uint64_t v25 = v7;
  uint64_t v26 = v6;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v22 = v3;
    uint64_t v23 = v2;
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      if ([v13 hasClientRequiredURLs])
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)aBlock[0];
    uint64_t v3 = v22;
    uint64_t v2 = v23;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100575068(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards;
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
  swift_bridgeObjectRetain();
  unsigned __int8 v6 = sub_1003759A4(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    unint64_t v8 = *(void *)(a2 + v4);
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(a2 + v4) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return sub_100574074((uint64_t)&off_1008B6DE0, v9 == 0);
  }
  return result;
}

uint64_t sub_10057513C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  unint64_t v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v2);
  unint64_t v10 = (unint64_t)sub_10023CB74((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards;
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards);
  swift_bridgeObjectRetain();
  unsigned __int8 v12 = sub_1003759A4(v10, v11);
  swift_bridgeObjectRelease();
  if (v12) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v14 = *(void *)(v1 + v6);
  if (v14 >> 62) {
    goto LABEL_9;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
  *(void *)(v1 + v6) = v10;
  swift_bridgeObjectRelease();
  return sub_100574074((uint64_t)&off_1008B6D68, v15 == 0);
}

void sub_1005753E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v40[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v39 = type metadata accessor for Calendar();
  uint64_t v6 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned __int8 v12 = (uint64_t *)&v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *unsigned __int8 v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    static Calendar.current.getter();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v2);
    char v14 = Calendar.isDateInToday(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v39);
    uint64_t v15 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController;
    uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController);
    uint64_t v17 = v1;
    if (v14)
    {
      if (!v16)
      {
        sub_10008E75C(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_appRecommendationDataProvider, (uint64_t)v44);
        uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext);
        sub_10008E75C(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_seymourRecommendationDataProvider, (uint64_t)v42);
        sub_10008E75C(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_walkSuggestionDataProvider, (uint64_t)v40);
        uint64_t v19 = sub_1000DDC00((uint64_t)v44, v45);
        uint64_t v39 = (uint64_t)&v39;
        __n128 v20 = __chkstk_darwin(v19);
        uint64_t v22 = (uint64_t *)&v40[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
        (*(void (**)(uint64_t *, __n128))(v23 + 16))(v22, v20);
        uint64_t v24 = sub_1000DDC00((uint64_t)v42, v43);
        __n128 v25 = __chkstk_darwin(v24);
        uint64_t v27 = (uint64_t *)&v40[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
        (*(void (**)(uint64_t *, __n128))(v28 + 16))(v27, v25);
        uint64_t v29 = sub_1000DDC00((uint64_t)v40, v41);
        uint64_t v30 = v17;
        __n128 v31 = __chkstk_darwin(v29);
        (*(void (**)(__n128))(v32 + 16))(v31);
        uint64_t v33 = *v22;
        uint64_t v34 = *v27;
        id v35 = v18;
        id v36 = sub_100577BC0(v33, v35, v34);

        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v40);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v42);
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v44);
        id v37 = *(void **)(v30 + v15);
        *(void *)(v30 + v15) = v36;

        uint64_t v38 = *(void *)(v30 + v15);
        if (v38)
        {
          *(void *)(v38 + OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_delegate + 8) = &off_1008CE850;
          swift_unknownObjectWeakAssign();
        }
      }
      sub_100574074((uint64_t)&off_1008B6CC8, v16 == 0);
    }
    else
    {
      *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController) = 0;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10057595C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    unsigned __int8 v12 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
    if (v12)
    {
      id v29 = v12;
      id v28 = [v29 activityMoveMode];
      char v13 = *(char **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider);
      uint64_t v14 = v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date;
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      v15(v5, v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date, v2);
      uint64_t v16 = sub_10023C810();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v17 = v3 + 8;
      uint64_t v18 = v19;
      v19(v5, v2);
      *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts) = v16;
      swift_bridgeObjectRelease();
      if ((ACHShouldUseNewAwardsSystem() & 1) == 0)
      {
        v15(v5, v14, v2);
        __n128 v20 = sub_10023CB74((uint64_t)v5);
        v18(v5, v2);
        *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awards) = v20;
        swift_bridgeObjectRelease();
      }
      v27[1] = v17;
      uint64_t v21 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_mindfulnessSessionDataProvider);
      uint64_t v22 = v18;
      uint64_t v23 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_100578E04;
      aBlock[5] = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100007CA4;
      aBlock[3] = &unk_1008CEA28;
      uint64_t v24 = _Block_copy(aBlock);
      swift_release();
      [v21 allMindfulnessSessionsWithCompletion:v24];
      _Block_release(v24);
      v15(v5, v14, v2);
      uint64_t v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100240488((uint64_t)v5, (uint64_t)v28, v13, v25);
      v22(v5, v2);
      swift_release();
      v15(v5, v14, v2);
      uint64_t v26 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      sub_10023DE8C((uint64_t)v5, (uint64_t)sub_100578E0C, v26);

      swift_release();
      v22(v5, v2);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100575DB8(void *a1)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = (void *)Strong;
      id v4 = a1;
      sub_100575F5C(v4);
    }
  }
}

void sub_100575E24(void *a1)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = (char *)Strong;
      id v4 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
      if (v4)
      {
        uint64_t v5 = v4;
        id v6 = a1;
        id v7 = [v5 activeEnergyBurned];
        id v8 = [v7 _quantityByAddingQuantity:v6];
        uint64_t v9 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy;
        char v10 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy];
        *(void *)&v3[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_totalEnergy] = v8;
        id v11 = v8;

        unsigned __int8 v12 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell];
        if (v12)
        {
          char v13 = *(void **)&v3[v9];
          id v14 = v13;
          id v15 = v12;
          sub_1003E5D44(v13);

          id v7 = v15;
          id v11 = v14;
        }

        uint64_t v3 = v5;
      }
    }
  }
}

void sub_100575F5C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData];
  if (v4)
  {
    *(void *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData] = a1;
    id v5 = a1;

    sub_100576260(0);
  }
  else
  {
    v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didSetInitialChartData] = 1;
    id v6 = *(void **)&v2[v3];
    *(void *)&v2[v3] = a1;
    id v7 = a1;

    uint64_t v8 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell;
    uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell];
    if (v9)
    {
      *(void *)(v9 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts) = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell;
    uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell];
    if (v11)
    {
      *(void *)(v11 + OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_workouts) = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unsigned __int8 v12 = *(void **)&v2[v10];
      if (v12)
      {
        char v13 = self;
        id v14 = v12;
        id v15 = [v13 minuteUnit];
        id v16 = [self quantityWithUnit:v15 doubleValue:(double)*(uint64_t *)&v7[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_numberOfActiveMinutes]];

        sub_1003E5D44(v16);
      }
    }
    uint64_t v17 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell];
    if (v17)
    {
      *(void *)&v17[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData] = *(void *)&v7[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_standData];
      uint64_t v18 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_100232650();
    }
    uint64_t v19 = *(char **)&v2[v8];
    if (v19 && *(void *)&v19[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartData])
    {
      __n128 v20 = v19;
      sub_1003EA940();
    }
    uint64_t v21 = *(char **)&v2[v10];
    if (v21 && *(void *)&v21[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartData])
    {
      uint64_t v22 = v21;
      sub_1003EA940();
    }
    if (v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_viewAppeared] == 1)
    {
      v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_didInitialChartAnimation] = 1;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v2;
      uint64_t v24 = v2;
      sub_1001FAB90((uint64_t)sub_100578DA4, v23);
      swift_release();
    }
  }
}

uint64_t sub_100576260(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t result = __chkstk_darwin(v8);
  unsigned __int8 v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData];
  if (v13)
  {
    uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workouts];
    if (v14)
    {
      uint64_t v32 = v10;
      uint64_t v33 = v5;
      if (a1)
      {
        id v15 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell];
        id v16 = v13;
        swift_bridgeObjectRetain();
        if (v15)
        {
          id v17 = v15;
          uint64_t v18 = swift_bridgeObjectRetain();
          sub_1003E4140(v18, v14, 0, 0);

          swift_bridgeObjectRelease();
        }
        __n128 v20 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell];
        if (v20)
        {
          id v21 = v20;
          uint64_t v22 = swift_bridgeObjectRetain();
          sub_1003E4140(v22, v14, 0, 0);

          swift_bridgeObjectRelease();
        }
        uint64_t v23 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell];
        if (v23)
        {
          *(void *)&v23[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData] = *(void *)&v13[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_standData];
          uint64_t v24 = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_100232650();
        }
      }
      else
      {
        uint64_t v19 = v13;
        swift_bridgeObjectRetain();
      }
      uint64_t v25 = *(char **)&v2[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell];
      if (v25)
      {
        *(void *)&v25[OBJC_IVAR____TtC10FitnessApp30DayViewStandChartTableViewCell_chartData] = *(void *)&v13[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_standData];
        uint64_t v26 = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_100232650();
      }
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      uint64_t v27 = (void *)static OS_dispatch_queue.main.getter();
      id v28 = (void *)swift_allocObject();
      id v28[2] = v2;
      v28[3] = v13;
      v28[4] = v14;
      aBlock[4] = sub_100578D98;
      aBlock[5] = v28;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100070394;
      aBlock[3] = &unk_1008CE9B0;
      id v29 = _Block_copy(aBlock);
      uint64_t v30 = v13;
      __n128 v31 = v2;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100075B54();
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_100075AF8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v8);
    }
  }
  return result;
}

id sub_1005766A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = self;
  [v5 begin];
  [v5 setAnimationDuration:0.25];
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1003E4140(v8, a3, 1, 1);

    swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell);
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_1003E4140(v11, a3, 1, 1);

    swift_bridgeObjectRelease();
  }

  return [v5 commit];
}

void sub_1005767C0()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell);
  if (*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary))
  {
    if (!v1) {
      return;
    }
    uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_ringsView];
    uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_activitySummary];
    uint64_t v4 = v1;
    [v2 hk_configureWithActivitySummary:v3 animated:1];
    id v5 = [v2 ringGroup];
    [v5 setIsPaused:v4[OBJC_IVAR____TtC10FitnessApp33DayViewActivityRingsTableViewCell_isPaused]];
  }
  else
  {
    if (!v1) {
      return;
    }
    uint64_t v4 = v1;
    id v5 = (id)ARUIRingsView.emptyRings()();
  }
}

void sub_100576944()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary];
  if (v6)
  {
    id v7 = &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date];
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v8(v5, &v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date], v2);
    id v9 = v6;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
    v11(v5, v2);
    char v12 = *(unsigned char *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider]
                   + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_isWheelchairUser);
    id v31 = v9;
    id v13 = sub_1000FC8E4(v9, isa, v12);

    v8(v5, v7, v2);
    Class v14 = Date._bridgeToObjectiveC()().super.isa;
    v11(v5, v2);
    id v15 = sub_1000FCBC0(v14);

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_100752410;
    *(void *)(v19 + 56) = type metadata accessor for HistoryDayViewController();
    *(void *)(v19 + 32) = v1;
    uint64_t v20 = sub_10007E2D8(0, (unint64_t *)&qword_100957EF0);
    *(void *)(v19 + 64) = v13;
    *(void *)(v19 + 120) = &type metadata for String;
    *(void *)(v19 + 88) = v20;
    *(void *)(v19 + 96) = v16;
    *(void *)(v19 + 104) = v18;
    id v21 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage];
    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage] = v13;
    id v22 = v13;
    uint64_t v23 = v1;
    swift_bridgeObjectRetain();

    uint64_t v24 = (uint64_t *)&v23[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingText];
    *uint64_t v24 = v16;
    v24[1] = v18;
    swift_bridgeObjectRelease();
    id v25 = objc_allocWithZone((Class)UIActivityViewController);
    Class v26 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v27 = [v25 initWithActivityItems:v26 applicationActivities:0];

    Class v28 = (Class)sub_1000FCD04();
    if (!v28)
    {
      type metadata accessor for ActivityType(0);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
      Class v28 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    [v27 setExcludedActivityTypes:v28];

    aBlock[4] = ASFriendListDisplayMode.id.getter;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008CE960;
    id v29 = _Block_copy(aBlock);
    [v23 presentViewController:v27 animated:1 completion:v29];
    _Block_release(v29);
  }
}

uint64_t sub_100576CF4(void *a1, char *a2, double a3, double a4, double a5, double a6)
{
  if (AAUIShouldUseNewTrophyCase())
  {
    id v56 = (id)type metadata accessor for TrophyCaseAwardDetailViewController();
    id v13 = *(void **)(*(void *)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider]
                   + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_healthStore);
    Class v14 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_friendListManager];
    sub_10008E75C((uint64_t)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsDataProvider], (uint64_t)&aBlock);
    id v15 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_badgeImageFactory];
    uint64_t v16 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementResourceProvider];
    uint64_t v17 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager];
    uint64_t v18 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementLocalizationProvider];
    uint64_t v19 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator];
    uint64_t v47 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fitnessAppContext];
    unint64_t v48 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutFormattingManager];
    id v49 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_workoutDataProvider];
    id v20 = a1;
    id v55 = v13;
    id v54 = v14;
    id v53 = v15;
    id v52 = v16;
    id v51 = v17;
    id v50 = v18;
    id v21 = v19;
    id v22 = v47;
    id v23 = v48;
    id v24 = v49;
    LOBYTE(v17) = [v20 unearned] ^ 1;
    uint64_t v25 = (uint64_t)v61;
    uint64_t v26 = (uint64_t)v62;
    uint64_t v27 = sub_1000DDC00((uint64_t)&aBlock, (uint64_t)v61);
    *(void *)&long long v46 = v21;
    *((void *)&v46 + 1) = v22;
    id v28 = sub_1006C8960(v20, v55, v54, v27, v53, v52, v51, v50, v46, v23, v24, 0, 0, (char)v17, 1, 0, (uint64_t)v56, v25, v26);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&aBlock);
  }
  else
  {
    id v28 = [objc_allocWithZone((Class)CHAchievementDetailViewController) initWithAchievement:a1 locProvider:*(void *)&v6[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_achievementLocalizationProvider] formatsForFriend:0 forDayView:1 forModalPresentation:0 shouldShowCelebration:0];
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a2;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a2;
  id v31 = *(void **)&a2[OBJC_IVAR____TtC10FitnessApp29AchievementsListTableViewCell_insetContentView];
  id v32 = objc_allocWithZone((Class)AAUIAchievementDetailTransitionAnimator);
  id v62 = sub_100578CE8;
  uint64_t v63 = v29;
  id v57 = v32;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  unint64_t v60 = sub_100070394;
  id v61 = &unk_1008CE910;
  uint64_t v33 = _Block_copy(&aBlock);
  uint64_t v34 = a2;
  swift_unknownObjectRetain();
  id v35 = v31;
  swift_retain();
  swift_retain();
  id v36 = v6;
  swift_release();
  id v62 = sub_100578D1C;
  uint64_t v63 = v30;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  unint64_t v60 = sub_100070394;
  id v61 = &unk_1008CE938;
  id v37 = _Block_copy(&aBlock);
  swift_release();
  id v38 = [v57 initWithPresentingViewController:v36 detailViewController:v28 shouldPlayFlipInAnimation:1 initialBadgeFrame:v35 conversionView:v33 didStartAnimationBlock:a3 didFinishAnimationBlock:a4];

  swift_unknownObjectRelease();
  _Block_release(v37);
  _Block_release(v33);
  uint64_t v39 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator;
  uint64_t v40 = *(void **)&v36[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator];
  *(void *)&v36[OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator] = v38;

  uint64_t v41 = *(void **)&v36[v39];
  if (v41) {
    [v41 setShouldAdjustForInset:0];
  }
  self;
  uint64_t v42 = swift_dynamicCastObjCClass();
  if (v42)
  {
    uint64_t v43 = v42;
    swift_unknownObjectRetain();
    id v44 = [v36 navigationController];
    [v44 pushViewController:v43 animated:1];

    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1005771D0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_100577464(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100577470()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  return sub_100574074((uint64_t)&off_1008B6E30, 1u);
}

id sub_100577554(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  v44[3] = type metadata accessor for AppRecommendationDataProvider();
  v44[4] = &off_1008CFB48;
  v44[0] = a1;
  v43[3] = type metadata accessor for SeymourWorkoutRecommendationDataProvider();
  v43[4] = &off_1008B9478;
  v43[0] = a3;
  *(void *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_lastCollectionViewContentHeight] = 0;
  uint64_t v41 = &type metadata for WalkSuggestionDataProvider;
  uint64_t v42 = &off_1008D2D18;
  *(void *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_protectedAppsSubscription] = 0;
  uint64_t v8 = &a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_suggestedMinutesToWalk];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  *(void *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionCell] = 0;
  *(void *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendations] = _swiftEmptyArrayStorage;
  *(void *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appStoreRecommendations] = _swiftEmptyArrayStorage;
  *(void *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_recentWorkoutAppRecommendations] = _swiftEmptyArrayStorage;
  sub_10008E75C((uint64_t)v44, (uint64_t)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_appRecommendationDataProvider]);
  *(void *)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_fitnessAppContext] = a2;
  sub_10008E75C((uint64_t)v43, (uint64_t)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_seymourWorkoutRecommendationDataProvider]);
  sub_10008E75C((uint64_t)v40, (uint64_t)&a4[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_walkSuggestionDataProvider]);
  type metadata accessor for BasicImpressionsTracker();
  id v9 = a4;
  a2;
  *(void *)&v9[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_impressionsTracker] = BasicImpressionsTracker.__allocating_init(threshold:)();
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100955550);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(v39, (uint64_t)&v9[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_artworkImageLoader]);
  swift_retain();
  sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v10 = *((void *)&v39[0] + 1);
  uint64_t v11 = &v9[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_eventHub];
  *(void *)uint64_t v11 = *(void *)&v39[0];
  *((void *)v11 + 1) = v10;
  type metadata accessor for SubscriptionToken();
  swift_allocObject();
  swift_unknownObjectRetain();
  *(void *)&v9[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_subscriptionToken] = SubscriptionToken.init(eventHub:)();
  swift_retain();
  sub_1000AFA94(&qword_100962770);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  sub_100093E60(v39, (uint64_t)&v9[OBJC_IVAR____TtC10FitnessApp37AddToYourRingCollectionViewController_networkEvaluator]);

  id v12 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
  v38.receiver = v9;
  v38.super_class = (Class)type metadata accessor for AddToYourRingCollectionViewController();
  [super initWithCollectionViewLayout:v12];

  id v14 = v13;
  id result = [v14 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v16 = result;
  id v17 = sub_1006EC158();
  [v16 setCollectionViewLayout:v17];

  id result = [v14 collectionView];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v18 = result;
  type metadata accessor for WalkSuggestionCollectionViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v20 = String._bridgeToObjectiveC()();
  [v18 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v20];

  id result = [v14 collectionView];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v21 = result;
  type metadata accessor for WorkoutAppRecommendationCollectionViewCell();
  uint64_t v22 = swift_getObjCClassFromMetadata();
  NSString v23 = String._bridgeToObjectiveC()();
  [v21 registerClass:v22 forCellWithReuseIdentifier:v23];

  id result = [v14 collectionView];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v24 = result;
  type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
  uint64_t v25 = swift_getObjCClassFromMetadata();
  NSString v26 = String._bridgeToObjectiveC()();
  [v24 registerClass:v25 forCellWithReuseIdentifier:v26];

  id result = [v14 collectionView];
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v27 = result;
  type metadata accessor for AppStoreAppRecommendationCollectionViewCell();
  uint64_t v28 = swift_getObjCClassFromMetadata();
  NSString v29 = String._bridgeToObjectiveC()();
  [v27 registerClass:v28 forCellWithReuseIdentifier:v29];

  id result = [v14 collectionView];
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v30 = result;
  type metadata accessor for AddToYourRingSectionHeaderView();
  uint64_t v31 = swift_getObjCClassFromMetadata();
  id v32 = UICollectionElementKindSectionHeader;
  NSString v33 = String._bridgeToObjectiveC()();
  [v30 registerClass:v31 forSupplementaryViewOfKind:v32 withReuseIdentifier:v33];

  id result = [v14 collectionView];
  if (result)
  {
    uint64_t v34 = result;
    type metadata accessor for AddToYourRingSectionSeparatorView();
    uint64_t v35 = swift_getObjCClassFromMetadata();
    id v36 = UICollectionElementKindSectionFooter;
    NSString v37 = String._bridgeToObjectiveC()();
    [v34 registerClass:v35 forSupplementaryViewOfKind:v36 withReuseIdentifier:v37];

    sub_1006D5990();
    sub_1006D60B4();

    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v40);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v43);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v44);
    return v14;
  }
LABEL_15:
  __break(1u);
  return result;
}

id sub_100577BC0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v30 = type metadata accessor for AppRecommendationDataProvider();
  uint64_t v31 = &off_1008CFB48;
  v29[0] = a1;
  uint64_t v27 = type metadata accessor for SeymourWorkoutRecommendationDataProvider();
  uint64_t v28 = &off_1008B9478;
  v26[0] = a3;
  id v24 = &type metadata for WalkSuggestionDataProvider;
  uint64_t v25 = &off_1008D2D18;
  uint64_t v6 = (char *)objc_allocWithZone((Class)type metadata accessor for AddToYourRingCollectionViewController());
  uint64_t v7 = sub_1000DDC00((uint64_t)v29, v30);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)&v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
  uint64_t v12 = sub_1000DDC00((uint64_t)v26, v27);
  __n128 v13 = __chkstk_darwin(v12);
  id v15 = (uint64_t *)&v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
  uint64_t v17 = sub_1000DDC00((uint64_t)v23, (uint64_t)v24);
  __n128 v18 = __chkstk_darwin(v17);
  (*(void (**)(__n128))(v19 + 16))(v18);
  id v20 = sub_100577554(*v10, a2, *v15, v6);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v23);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v26);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v29);
  return v20;
}

id sub_100577E4C()
{
  id v1 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingImage);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = UIImagePNGRepresentation(v3);
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v8 = v7;

      id v9 = objc_allocWithZone((Class)LPImage);
      sub_10025C56C(v6, v8);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [v9 initWithData:isa MIMEType:v11];
      sub_1000939A4(v6, v8);

      [v1 setImage:v12];
      if (*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_sharingText + 8))
      {
        swift_bridgeObjectRetain();
        NSString v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v13 = 0;
      }
      [v1 setSummary:v13];

      sub_1000939A4(v6, v8);
    }
  }
  return v1;
}

void *sub_100577FD8(void *a1, void *a2, void *a3)
{
  uint64_t v4 = a1;
  if (!a1) {
    return v4;
  }
  uint64_t v5 = v3;
  if (a1 != (void *)2)
  {
    if (a1 == (void *)1)
    {
      type metadata accessor for TrophyCaseAwardDetailViewController();
      uint64_t v4 = 0;
      if (![a3 isKindOfClass:swift_getObjCClassFromMetadata()]) {
        return v4;
      }
      type metadata accessor for HistoryPagingViewController();
      uint64_t v4 = 0;
      if (![a2 isKindOfClass:swift_getObjCClassFromMetadata()]) {
        return v4;
      }
      unint64_t v8 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC);
      *(void *)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC) = a2;
      id v9 = a2;

      goto LABEL_9;
    }
    os_log_type_t v15 = static os_log_type_t.fault.getter();
    uint64_t v16 = (void *)HKLogActivity;
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(HKLogActivity, v15))
    {
      __n128 v18 = v16;
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      sub_10008F1F4(0xD000000000000037, 0x80000001007BE490, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "%s found unexpected UINavigationController.Operation; skipping transition",
        v19,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    return 0;
  }
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fromVC);
  if (!v10) {
    return 0;
  }
  sub_10007E2D8(0, (unint64_t *)&qword_1009559C0);
  id v11 = a3;
  id v12 = v10;
  char v13 = static NSObject.== infix(_:_:)();

  uint64_t v4 = 0;
  if ((v13 & 1) == 0) {
    return v4;
  }
LABEL_9:
  uint64_t v4 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_awardsTransitionAnimator);
  if (v4) {
    id v14 = v4;
  }
  return v4;
}

void sub_100578214(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v75 = a2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (uint64_t *)((char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *id v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v73 = v6;
  uint64_t v74 = v5;
  id v14 = HKLogActivity;
  static os_log_type_t.default.getter();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1007509E0;
  unint64_t v77 = 0;
  unint64_t v78 = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  unint64_t v77 = 0xD00000000000001CLL;
  unint64_t v78 = 0x80000001007CE380;
  uint64_t v76 = a1;
  v16._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 8236;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  uint64_t v18 = v75;
  uint64_t v76 = v75;
  v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 93;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  unint64_t v21 = v77;
  unint64_t v22 = v78;
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_1000AA64C();
  *(void *)(v15 + 32) = v21;
  *(void *)(v15 + 40) = v22;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex;
  uint64_t v24 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_summaryIndex);
  if (v24 >= a1 && v24 <= v18)
  {
    uint64_t v25 = v3;
    uint64_t v26 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_dataProvider);
    uint64_t v27 = v3 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_date;
    uint64_t v29 = v73;
    uint64_t v28 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v8, v27, v74);
    id v30 = [*(id *)(v26 + OBJC_IVAR____TtC10FitnessApp20ActivityDataProvider_summaryCache) activitySummaryForCacheIndex:sub_1000CBADC()];
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v28);
    if (v30)
    {
      uint64_t v31 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary;
      id v32 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_activitySummary);
      if (v32)
      {
        id v33 = v32;
        if ([v33 _allFieldsAreEqual:v30])
        {
          static os_log_type_t.default.getter();
          id v34 = HKLogActivity;
          os_log(_:dso:log:_:_:)();
          goto LABEL_36;
        }

        uint64_t v35 = *(void **)(v25 + v31);
      }
      else
      {
        uint64_t v35 = 0;
      }
      *(void *)(v25 + v31) = v30;
      id v34 = v30;

      id v36 = *(void **)(v25 + v31);
      if (!v36)
      {
LABEL_38:

        return;
      }
      id v37 = v36;
      if (!v35) {
        sub_10057595C();
      }
      objc_super v38 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_ringCell);
      if (v38)
      {
        uint64_t v39 = *(void *)(v25 + v23);
        uint64_t v40 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_pauseRingsCoordinator);
        int v41 = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary);
        char v42 = *(unsigned char *)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isToday);
        id v43 = v37;
        id v44 = v38;
        sub_1003AF2A4(v39, v36, v40, v41, v42);
      }
      sub_1005767C0();
      uint64_t v45 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_moveCell);
      id v46 = v45;
      id v33 = v37;
      sub_1006FFE88(v45, v36);

      uint64_t v47 = OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell;
      unint64_t v48 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_exerciseCell);
      if (v48)
      {
        id v49 = v48;
        id v50 = [v33 appleExerciseTime];
        id v51 = [v33 appleExerciseTimeGoal];
        if (v49[OBJC_IVAR____TtC10FitnessApp40DayViewMoveAndExerciseChartTableViewCell_chartViewType]) {
          sub_1003E5BD0(v50, v51);
        }
        else {
          sub_1003E5A30(v50, v51);
        }

        id v52 = *(void **)(v25 + v47);
        if (v52)
        {
          id v53 = *(id *)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_chartData);
          if (v53)
          {
            id v54 = self;
            id v55 = v52;
            id v56 = (char *)v53;
            id v57 = [v54 minuteUnit];
            id v53 = [self quantityWithUnit:v57 doubleValue:(double)*(uint64_t *)&v56[OBJC_IVAR____TtC10FitnessApp17ActivityChartData_numberOfActiveMinutes]];
          }
          else
          {
            id v58 = v52;
          }
          sub_1003E5D44(v53);
        }
      }
      uint64_t v59 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_standCell);
      if (v59)
      {
        id v60 = v59;
        id v61 = [v33 appleStandHours];
        id v62 = [v33 appleStandHoursGoal];
        sub_100233380(v61, v62);
      }
      uint64_t v63 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_stepsAndDistanceCell);
      if (v63)
      {
        id v64 = v63;
        id v65 = [v33 stepCount];
        id v66 = [v33 _pushCount];
        id v67 = [v33 distanceWalkingRunning];
        sub_100611530(v65, v66, v67, *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_fiuiFormattingManager));
      }
      double v68 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_flightsCell);
      if (v68)
      {
        id v69 = v68;
        id v70 = [v33 _flightsClimbed];
        sub_1002C2CA8(v70);
      }
      unsigned int v71 = [v33 _isStandalonePhoneSummary];
      if (v71 != *(unsigned __int8 *)(v25
                                     + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary))
      {
        *(unsigned char *)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_isStandalonePhoneSummary) = v71;
        sub_100574074((uint64_t)&off_1008B6E08, 1u);
      }
      if (*(unsigned char *)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads) == 1)
      {
        *(unsigned char *)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_shareWhenDataLoads) = 0;
        sub_100576944();
      }
      id v72 = *(void **)(v25 + OBJC_IVAR____TtC10FitnessApp24HistoryDayViewController_addToYourRingViewController);
      if (!v72)
      {
LABEL_37:

        goto LABEL_38;
      }
      id v30 = v72;
      sub_1006D60B4();
LABEL_36:

      goto LABEL_37;
    }
  }
}

uint64_t sub_100578A1C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_100578CE0;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008CE898;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100075B54();
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100578CA8()
{
  return swift_deallocObject();
}

uint64_t sub_100578CE0()
{
  return sub_100577470();
}

id sub_100578CE8()
{
  return [*(id *)(*(void *)(*(void *)(v0 + 16)+ OBJC_IVAR____TtC10FitnessApp29AchievementsListTableViewCell_achievementCellContentView)+ OBJC_IVAR____TtC10FitnessApp26AchievementCellContentView_achievementBadgeView) setHidden:1];
}

id sub_100578D1C()
{
  return [*(id *)(*(void *)(*(void *)(v0 + 16)+ OBJC_IVAR____TtC10FitnessApp29AchievementsListTableViewCell_achievementCellContentView)+ OBJC_IVAR____TtC10FitnessApp26AchievementCellContentView_achievementBadgeView) setHidden:0];
}

uint64_t sub_100578D50()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_100578D98()
{
  return sub_1005766A4(v0[2], v0[3], v0[4]);
}

uint64_t sub_100578DA4()
{
  return sub_100576260(1);
}

uint64_t sub_100578DCC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100578E04(uint64_t a1)
{
  return sub_1005746EC(a1, v1);
}

void sub_100578E0C(void *a1)
{
}

uint64_t sub_100578E14()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100578E54()
{
  return sub_100574988();
}

uint64_t sub_100578E5C(uint64_t a1)
{
  return sub_100574B70(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_100578E7C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100578EBC()
{
  return sub_100575068(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100578EC4()
{
}

void sub_100578ECC()
{
}

void sub_100578ED4()
{
}

void sub_100578EDC()
{
}

void sub_100578EE4()
{
}

void sub_100578F00()
{
}

uint64_t sub_100578F08()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100578F40()
{
  return sub_100573974();
}

void sub_100578F48(unint64_t a1)
{
}

uint64_t sub_100578F64()
{
  return sub_100574074((uint64_t)&off_1008B6D90, 1u);
}

uint64_t sub_100578F94()
{
  return sub_100573F90(*(void *)(v0 + 16));
}

uint64_t sub_100579034()
{
  uint64_t v1 = 1952541798;
  if (*v0 != 1) {
    uint64_t v1 = 1853321060;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 28789;
  }
}

void sub_100579074()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer);
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors);
  *(_OWORD *)(v2 + 16) = xmmword_10074E640;
  id v5 = [*(id *)(v4 + OBJC_IVAR____TtC10FitnessApp14GradientColors_dark) CGColor];
  type metadata accessor for CGColor(0);
  uint64_t v7 = v6;
  *(void *)(v2 + 56) = v6;
  *(void *)(v2 + 32) = v5;
  id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(v0 + v3)
                                                             + OBJC_IVAR____TtC10FitnessApp14GradientColors_light), "CGColor"));
  *(void *)(v2 + 88) = v7;
  *(void *)(v2 + 64) = v8;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setColors:isa];
}

char *sub_1005791A0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer;
  id v10 = objc_allocWithZone((Class)CALayer);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer;
  id v15 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  Swift::String v16 = self;
  id v17 = [v16 clearColor];
  [v15 setBackgroundColor:v17];

  *(void *)&v11[v14] = v15;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors;
  sub_100006248();
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.6, 1.0, 0.0, 1.0).super.isa;
  Class v20 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.84706, 1.0, 0.0, 1.0).super.isa;
  unint64_t v21 = (objc_class *)type metadata accessor for GradientColors();
  unint64_t v22 = (char *)objc_allocWithZone(v21);
  *(void *)&v22[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(void *)&v22[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v20;
  v63.receiver = v22;
  v63.super_class = v21;
  id v23 = [super init];
  Class v24 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.65068, 1.0, 0.0, 1.0).super.isa;
  uint64_t v25 = (objc_class *)type metadata accessor for MetricColors();
  uint64_t v26 = (char *)objc_allocWithZone(v25);
  *(void *)&v26[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v23;
  *(void *)&v26[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v24;
  v62.receiver = v26;
  v62.super_class = v25;
  uint64_t v27 = (char *)[super init];
  id v28 = *(id *)&v27[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  *(void *)&v11[v18] = v28;
  uint64_t v29 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_circleColor;
  *(UIColor *)&v11[v29] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.14902, 0.14902, 0.14902, 1.0);
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX] = 0;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX] = 0;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY] = 0;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY] = 0;
  *(_OWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_upArrowNormalizedCenterStart] = xmmword_10076BF50;
  *(_OWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_downArrowNormalizedCenterStart] = xmmword_10076BF60;
  __asm { FMOV            V0.2D, #0.5 }
  *(_OWORD *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_normalizedArrowCenter] = _Q0;
  v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState] = 1;
  v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection] = 1;
  v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection] = 3;
  v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation] = 1;
  uint64_t v35 = &v11[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_lastBounds];
  *(_OWORD *)uint64_t v35 = 0u;
  *((_OWORD *)v35 + 1) = 0u;

  v61.receiver = v11;
  v61.super_class = (Class)type metadata accessor for TrendArrowIndicatorView();
  id v36 = [super initWithFrame:a1, a2, a3, a4];
  [v36 setClipsToBounds:1];
  id v37 = [v36 layer];
  uint64_t v38 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer;
  [v37 addSublayer:*(void *)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer]];

  uint64_t v39 = *(void **)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_circleColor];
  id v40 = *(id *)&v36[v38];
  id v41 = [v39 CGColor];
  [v40 setBackgroundColor:v41];

  uint64_t v42 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer;
  id v43 = *(void **)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer];
  [v36 addSubview:v43];
  sub_100579074();
  id v44 = [v43 layer];
  uint64_t v45 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer;
  [v44 addSublayer:*(void *)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer]];

  id v46 = [*(id *)&v36[v42] layer];
  uint64_t v47 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer;
  [v46 addSublayer:*(void *)&v36[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer]];

  unint64_t v48 = *(void **)&v36[v47];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v49 = objc_allocWithZone((Class)CAFilter);
  id v50 = v48;
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v52 = [v49 initWithType:v51];

  [v50 setCompositingFilter:v52];
  id v53 = *(id *)&v36[v45];
  id v54 = [v16 blackColor];
  id v55 = [v54 CGColor];

  [v53 setStrokeColor:v55];
  id v56 = *(id *)&v36[v45];
  id v57 = [v16 clearColor];
  id v58 = [v57 CGColor];

  [v56 setFillColor:v58];
  uint64_t v59 = *(void **)&v36[v45];
  [v59 setLineCap:kCALineCapRound];
  [v59 setLineJoin:kCALineJoinMiter];
  sub_100579B8C();

  return v36;
}

uint64_t sub_1005797D0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer;
  uint64_t v34 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer;
  id v4 = objc_allocWithZone((Class)CALayer);
  id v5 = v2;
  *(void *)&v2[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer;
  uint64_t v32 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer;
  uint64_t v31 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer;
  id v9 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v10 = [self clearColor];
  [v9 setBackgroundColor:v10];

  *(void *)&v5[v8] = v9;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors;
  sub_100006248();
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.6, 1.0, 0.0, 1.0).super.isa;
  Class v13 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.84706, 1.0, 0.0, 1.0).super.isa;
  uint64_t v14 = (objc_class *)type metadata accessor for GradientColors();
  id v15 = (char *)objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
  *(void *)&v15[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v13;
  v36.receiver = v15;
  v36.super_class = v14;
  [super init];
  Class v17 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.65068, 1.0, 0.0, 1.0).super.isa;
  uint64_t v18 = (objc_class *)type metadata accessor for MetricColors();
  Swift::String v19 = (char *)objc_allocWithZone(v18);
  *(void *)&v19[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v16;
  *(void *)&v19[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v17;
  v35.receiver = v19;
  v35.super_class = v18;
  Class v20 = [super init];
  id v21 = *(id *)&v20[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];

  *(void *)&v5[v11] = v21;
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_circleColor;
  *(UIColor *)&v5[v22] = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.14902, 0.14902, 0.14902, 1.0);
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY] = 0;
  *(_OWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_upArrowNormalizedCenterStart] = xmmword_10076BF50;
  *(_OWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_downArrowNormalizedCenterStart] = xmmword_10076BF60;

  __asm { FMOV            V0.2D, #0.5 }
  *(_OWORD *)&v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_normalizedArrowCenter] = _Q0;
  v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState] = 1;
  v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection] = 1;
  v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection] = 3;
  v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation] = 1;
  id v28 = &v5[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_lastBounds];
  *(_OWORD *)id v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;

  uint64_t v29 = *(void **)&v5[v22];
  type metadata accessor for TrendArrowIndicatorView();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_100579B8C()
{
  [v0 bounds];
  CGFloat Width = CGRectGetWidth(v14);
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX;
  *(CGFloat *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX] = Width * 0.24;
  [v0 bounds];
  CGFloat MaxX = CGRectGetMaxX(v15);
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX;
  *(CGFloat *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX] = MaxX - *(double *)&v0[v2];
  [v0 bounds];
  CGFloat v5 = CGRectGetHeight(v16) * 0.33;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY;
  *(CGFloat *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY] = v5;
  [v0 bounds];
  CGFloat Height = CGRectGetHeight(v17);
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY;
  *(CGFloat *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY] = v5 + Height * 0.24;
  if (qword_10094AE00 != -1) {
    swift_once();
  }
  UIRoundToScale();
  *(void *)&v0[v2] = v9;
  UIRoundToScale();
  *(void *)&v0[v4] = v10;
  UIRoundToScale();
  *(void *)&v0[v6] = v11;
  uint64_t result = UIRoundToScale();
  *(void *)&v0[v8] = v13;
  return result;
}

id sub_100579CD8()
{
  id v1 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY;
  [v1 moveToPoint:*(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX], *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY]];
  [v0 bounds];
  [v1 addLineToPoint:CGRectGetMidX(v4), *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY]];
  [v1 addLineToPoint:[v0 OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX] [v0 v2]];
  return v1;
}

id sub_100579D8C()
{
  id v1 = [objc_allocWithZone((Class)UIBezierPath) init];
  double v2 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX];
  [v0 bounds];
  CGFloat MaxY = CGRectGetMaxY(v8);
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY;
  [v1 moveToPoint:v2 MaxY - *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTailY]];
  [v0 bounds];
  double MidX = CGRectGetMidX(v9);
  [v0 bounds];
  [v1 addLineToPoint:MidX, CGRectGetMaxY(v10) - *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY]];
  double v6 = *(double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX];
  [v0 bounds];
  [v1 addLineToPoint:v6, CGRectGetMaxY(v11) - *(double *)&v0[v4]];
  return v1;
}

void sub_100579EA0(void *a1, char a2)
{
  int v5 = v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection];
  v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection] = (_BYTE)a1;
  v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection] = v5;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation;
  if ((v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation] & 1) != 0
    || v5 == 1
    || v5 != a1)
  {
    [v2 bounds];
    v78.origin.x = 0.0;
    v78.origin.y = 0.0;
    v78.size.width = 0.0;
    v78.size.height = 0.0;
    int v7 = 0;
    if (!CGRectEqualToRect(v62, v78) && (a2 & 1) != 0)
    {
      sub_10057A828(a1);
      v2[v6] = 0;
      int v7 = 1;
    }
  }
  else
  {
    int v7 = 0;
  }
  CGRect v8 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer];
  [v8 setAlpha:1.0];
  [v2 bounds];
  double Width = CGRectGetWidth(v63);
  [v2 bounds];
  double Height = CGRectGetHeight(v64);
  CGRect v11 = &selRef_setPercentMinimized_;
  if ((_BYTE)a1)
  {
    id v12 = [objc_allocWithZone((Class)UIBezierPath) init];
    if (a1 == 1)
    {
      uint64_t v13 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX;
      double v14 = *(double *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX];
      [v2 bounds];
      [v12 moveToPoint:v14, CGRectGetMidY(v65)];
      [v2 bounds];
      double MidX = CGRectGetMidX(v66);
      [v2 bounds];
      [v12 addLineToPoint:MidX, CGRectGetMidY(v67)];
      CGRect v16 = v8;
      uint64_t v17 = OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX;
      double v18 = *(double *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX];
      [v2 bounds];
      [v12 addLineToPoint:v18, CGRectGetMidY(v68)];
      id v19 = [v12 CGPath];

      id v20 = [objc_allocWithZone((Class)UIBezierPath) init];
      double v21 = *(double *)&v2[v13];
      [v2 bounds];
      [v20 moveToPoint:v21, CGRectGetMidY(v69)];
      [v2 bounds];
      double v22 = CGRectGetMidX(v70);
      [v2 bounds];
      [v20 addLineToPoint:v22, CGRectGetMidY(v71)];
      double v23 = *(double *)&v2[v17];
      CGRect v8 = v16;
      CGRect v11 = &selRef_setPercentMinimized_;
      [v2 bounds];
      [v20 addLineToPoint:v23, CGRectGetMidY(v72)];
      double v24 = 7.0;
      double v25 = 0.0;
      double v26 = 115.0;
    }
    else
    {
      [v2 bounds];
      double v30 = CGRectGetMidX(v74);
      [v2 bounds];
      CGFloat v31 = CGRectGetMaxY(v75) - *(double *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY];
      [v12 moveToPoint:v30, v31];
      [v12 addLineToPoint:v30, v31];
      id v19 = [v12 CGPath];

      id v20 = sub_100579D8C();
      double v24 = 8.0;
      double v25 = 0.0;
      double v26 = 150.0;
    }
  }
  else
  {
    id v27 = [objc_allocWithZone((Class)UIBezierPath) init];
    [v2 bounds];
    double v28 = CGRectGetMidX(v73);
    double v29 = *(double *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY];
    [v27 moveToPoint:v28, v29];
    [v27 addLineToPoint:v28, v29];
    id v19 = [v27 CGPath];

    id v20 = sub_100579CD8();
    double v24 = 7.0;
    double v25 = 11.0;
    double v26 = 115.0;
  }
  double v32 = Width * 0.5;
  double v33 = Height * 0.5;
  id v34 = [v20 v11[238]];

  [v2 bounds];
  CGRectGetWidth(v76);
  [v2 bounds];
  CGRectGetHeight(v77);
  if (v7)
  {
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = [self animationWithKeyPath:v35];

    id v37 = v36;
    [v37 setBeginTime:CACurrentMediaTime() + 0.133];

    [v37 setDuration:0.33];
    id v38 = objc_allocWithZone((Class)CAMediaTimingFunction);
    id v39 = v37;
    LODWORD(v40) = 1039516303;
    LODWORD(v41) = 1043878380;
    LODWORD(v42) = 1044549468;
    LODWORD(v43) = 1.0;
    id v44 = [v38 initWithControlPoints:v40 :v41 :v42 :v43];
    [v39 setTimingFunction:v44];

    [v39 setFromValue:v19];
    [v39 setToValue:v34];
    NSString v45 = String._bridgeToObjectiveC()();
    id v46 = [self animationWithKeyPath:v45];

    [v46 setDuration:0.84];
    uint64_t v47 = self;
    id v48 = v46;
    id v49 = [v47 functionWithName:kCAMediaTimingFunctionLinear];
    [v48 setTimingFunction:v49];

    [v48 setStiffness:1000.0];
    [v48 setDamping:v26];
    [v48 setMass:v24];
    [v48 setInitialVelocity:v25];
    id v50 = v48;
    Class isa = CGPoint._bridgeToObjectiveC()().super.isa;
    [v50 setFromValue:isa];

    Class v52 = CGPoint._bridgeToObjectiveC()().super.isa;
    [v50 setToValue:v52];

    id v53 = [v8 layer];
    NSString v54 = String._bridgeToObjectiveC()();
    [v53 addAnimation:v50 forKey:v54];

    id v55 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer];
    NSString v56 = String._bridgeToObjectiveC()();
    [v55 addAnimation:v39 forKey:v56];

    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = v2;
    *(void *)(v57 + 24) = v34;
    *(double *)(v57 + 32) = v32;
    *(double *)(v57 + 40) = v33;
    id v58 = v2;
    id v59 = v34;
    sub_1001FAB90((uint64_t)sub_10057B3E0, v57);
    swift_release();
    id v34 = v19;
    id v19 = v59;
  }
  else
  {
    id v60 = self;
    [v60 begin];
    [v60 setDisableActions:1];
    [*(id *)&v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer] setPath:v34];
    id v61 = [v8 layer];
    [v61 setPosition:v32, v33];

    [v60 commit];
  }

  v2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState] = 1;
}

void sub_10057A788(uint64_t a1, uint64_t a2, double a3, double a4)
{
  [*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer) setPath:a2];
  id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer), "layer"));
  [v7 setPosition:a3, a4];
}

id sub_10057A828(id result)
{
  char v2 = (char)result;
  if ((v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_isInitialDirectionChangeAnimation] & 1) != 0
    || (int v3 = v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_oldDirection], (v3 | 2) == 3)
    || v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection] != v3)
  {
    v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState] = 0;
    [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer] setAlpha:0.0];
    uint64_t v4 = self;
    [v4 begin];
    [v4 setDisableActions:1];
    sub_10057A91C(v2, v1);
    return [v4 commit];
  }
  return result;
}

void sub_10057A91C(char a1, char *a2)
{
  if (a1)
  {
    int v3 = *(void **)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer];
    if (a1 == 1)
    {
      id v4 = [objc_allocWithZone((Class)UIBezierPath) init];
      double v5 = *(double *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLeadingX];
      [a2 bounds];
      [v4 moveToPoint:v5, CGRectGetMidY(v20)];
      [a2 bounds];
      double MidX = CGRectGetMidX(v21);
      [a2 bounds];
      [v4 addLineToPoint:MidX, CGRectGetMidY(v22)];
      double v7 = *(double *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTrailingX];
      [a2 bounds];
      [v4 addLineToPoint:v7, CGRectGetMidY(v23)];
      id v8 = [v4 CGPath];

      [v3 setPath:v8];
      double v9 = 0.5;
    }
    else
    {
      id v14 = [objc_allocWithZone((Class)UIBezierPath) init];
      [a2 bounds];
      double v15 = CGRectGetMidX(v25);
      [a2 bounds];
      CGFloat v16 = CGRectGetMaxY(v26) - *(double *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY];
      [v14 moveToPoint:v15, v16];
      [v14 addLineToPoint:v15, v16];
      id v8 = [v14 CGPath];

      [v3 setPath:v8];
      double v9 = -0.3;
    }
  }
  else
  {
    CGRect v10 = *(void **)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer];
    id v11 = [objc_allocWithZone((Class)UIBezierPath) init];
    [a2 bounds];
    double v12 = CGRectGetMidX(v24);
    double v13 = *(double *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowTipY];
    [v11 moveToPoint:v12, v13];
    [v11 addLineToPoint:v12, v13];
    id v8 = [v11 CGPath];

    [v10 setPath:v8];
    double v9 = 1.3;
  }

  id v18 = [*(id *)&a2[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer] layer];
  [a2 bounds];
  CGFloat v17 = CGRectGetWidth(v27) * 0.5;
  [a2 bounds];
  [v18 setPosition:v17, CGRectGetHeight(v28) * v9];
}

void sub_10057AC70()
{
  [v0 bounds];
  double v2 = v1;
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for TrendArrowIndicatorView();
  [super layoutSubviews];
  double v9 = (double *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_lastBounds];
  v22.origin.x = v2;
  v22.origin.y = v4;
  v22.size.width = v6;
  v22.size.height = v8;
  if (!CGRectEqualToRect(v22, *(CGRect *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_lastBounds]))
  {
    *double v9 = v2;
    v9[1] = v4;
    v9[2] = v6;
    v9[3] = v8;
    CGRect v10 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowContainer];
    [v10 setFrame:v2, v4, v6, v8];
    [v10 bounds];
    double v12 = v11;
    double v14 = v13;
    double v16 = v15;
    double v18 = v17;
    sub_100579B8C();
    id v19 = self;
    [v19 begin];
    [v19 setDisableActions:1];
    sub_10057AE08((uint64_t)v0, v2, v4, v6, v8, v12, v14, v16, v18);
    [v19 commit];
    unint64_t v20 = v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_currentDirection];
    if (v0[OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_animationState]) {
      sub_100579EA0((void *)v20, 0);
    }
    else {
      sub_10057A828((id)v20);
    }
  }
}

id sub_10057AE08(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v17 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowLayer);
  CGRectGetWidth(*(CGRect *)&a2);
  if (qword_10094AE00 != -1) {
    swift_once();
  }
  UIRoundToScale();
  [v17 setLineWidth:];
  double v18 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_backgroundLayer);
  [v18 setFrame:a2, a3, a4, a5];
  id v19 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_arrowGradientLayer);
  [v19 setFrame:a6, a7, a8, a9];
  [v19 bounds];
  [v17 setFrame:];
  [v18 bounds];
  [v18 setCornerRadius:CGRectGetWidth(v23) * 0.5];
  [v19 setEndPoint:0.5, 0.275];

  return [v19 setStartPoint:0.5, 0.725];
}

id sub_10057B014()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendArrowIndicatorView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendArrowIndicatorView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for TrendArrowIndicatorAnimationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057B1C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendArrowIndicatorAnimationState()
{
  return &type metadata for TrendArrowIndicatorAnimationState;
}

unsigned char *storeEnumTagSinglePayload for TrendArrowIndicatorDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057B2C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unint64_t sub_10057B2F4()
{
  unint64_t result = qword_100962830;
  if (!qword_100962830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962830);
  }
  return result;
}

unint64_t sub_10057B34C()
{
  unint64_t result = qword_100962838;
  if (!qword_100962838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962838);
  }
  return result;
}

uint64_t sub_10057B3A0()
{
  return swift_deallocObject();
}

void sub_10057B3E0()
{
  sub_10057A788(*(void *)(v0 + 16), *(void *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

void destroy for MirrorRaceOnRouteView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

  objc_super v2 = *(void **)(a1 + 56);
}

void *initializeWithCopy for MirrorRaceOnRouteView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  unsigned int v6 = (void *)a2[6];
  double v7 = (void *)a2[7];
  a1[6] = v6;
  a1[7] = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  id v8 = v6;
  id v9 = v7;
  return a1;
}

void *assignWithCopy for MirrorRaceOnRouteView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[6];
  uint64_t v5 = (void *)a1[6];
  a1[6] = v4;
  id v6 = v4;

  double v7 = (void *)a2[7];
  id v8 = (void *)a1[7];
  a1[7] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for MirrorRaceOnRouteView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  double v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for MirrorRaceOnRouteView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MirrorRaceOnRouteView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorRaceOnRouteView()
{
  return &type metadata for MirrorRaceOnRouteView;
}

uint64_t sub_10057B688()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10057B6A4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094C100);
  __chkstk_darwin(v3 - 8);
  uint64_t v101 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1000AFA94(&qword_10094C108);
  uint64_t v103 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v100 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1000AFA94(&qword_10095C3D0);
  uint64_t v126 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v125 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v114 = (char *)&v85 - v8;
  uint64_t v98 = type metadata accessor for RaceRemainingDistanceMetricView();
  uint64_t v99 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  int v97 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1000AFA94(&qword_100962840);
  uint64_t v112 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v124 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v120 = (char *)&v85 - v12;
  uint64_t v96 = type metadata accessor for MetricPlatterConstants();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  id v93 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RacePosition();
  __chkstk_darwin(v14 - 8);
  uint64_t v88 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for RaceElevationMetricView();
  uint64_t v92 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v89 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000AFA94(&qword_100962848);
  __chkstk_darwin(v91);
  uint64_t v90 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1000AFA94(&qword_100962850);
  uint64_t v117 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v123 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  NSString v121 = (char *)&v85 - v20;
  uint64_t v105 = type metadata accessor for WorkoutViewStyle();
  uint64_t v21 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  CGRect v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for RaceSecondsAheadOfGhostMetricView();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  CGRect v27 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000AFA94(&qword_100962858);
  uint64_t v118 = *(void *)(v28 - 8);
  uint64_t v119 = v28;
  __chkstk_darwin(v28);
  uint64_t v116 = (char *)&v85 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  double v32 = (char *)&v85 - v31;
  NSString v111 = (char *)&v85 - v31;
  uint64_t v110 = a1;
  long long v129 = *((_OWORD *)a1 + 1);
  swift_retain();
  RacePositionStatePublisher.secondsAheadOfGhost.getter();
  sub_1000E2384((uint64_t)&v129);
  type metadata accessor for RaceWorkoutConfiguration();
  swift_retain();
  RacePositionStatePublisher.secondsAheadOfGhost.getter();
  sub_1000E2384((uint64_t)&v129);
  static RaceWorkoutConfiguration.performanceColorFor(_:)();
  Color.init(_:)();
  id v86 = a1[7];
  RaceSecondsAheadOfGhostMetricView.init(secondsAheadOfGhost:color:formattingManager:didCrossFinishLine:)();
  uint64_t v33 = v21;
  id v34 = *(void (**)(void, void, void))(v21 + 104);
  uint64_t v107 = v21 + 104;
  uint64_t v108 = v34;
  uint64_t v35 = v105;
  v34(v23, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v105);
  sub_10057C788(&qword_100962860, (void (*)(uint64_t))&type metadata accessor for RaceSecondsAheadOfGhostMetricView);
  id v36 = v116;
  View.workoutViewStyle(_:)();
  id v87 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v106 = v33 + 8;
  v87(v23, v35);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v32, v36, v119);
  swift_retain();
  RacePositionStatePublisher.racePosition.getter();
  sub_1000E2384((uint64_t)&v129);
  swift_retain();
  RacePositionStatePublisher.positionOnRoute.getter();
  sub_1000E2384((uint64_t)&v129);
  swift_retain();
  RacePositionStatePublisher.ghostPositionOnRoute.getter();
  sub_1000E2384((uint64_t)&v129);
  id v37 = v110[6];
  long long v128 = *((_OWORD *)v110 + 2);
  uint64_t v109 = (void (*)(char *, char *, uint64_t))v37;
  sub_1000E2358((uint64_t)&v128);
  RaceInformationPublisher.routePoints.getter();
  sub_1000E2384((uint64_t)&v128);
  type metadata accessor for RaceElevationChartProperties();
  swift_allocObject();
  RaceElevationChartProperties.init(activityType:chartPoints:)();
  id v86 = v86;
  id v38 = v89;
  RaceElevationMetricView.init(racePosition:positionOnRoute:ghostPositionOnRoute:chartProperties:formattingManager:)();
  LOBYTE(v27) = static Edge.Set.bottom.getter();
  id v39 = v93;
  MetricPlatterConstants.init()();
  MetricPlatterConstants.heightOfChartLabels.getter();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v39, v96);
  EdgeInsets.init(_all:)();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v48 = v92;
  uint64_t v49 = (uint64_t)v90;
  uint64_t v50 = v94;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v90, v38, v94);
  uint64_t v51 = v49 + *(int *)(v91 + 36);
  *(unsigned char *)uint64_t v51 = (_BYTE)v27;
  *(void *)(v51 + 8) = v41;
  *(void *)(v51 + 16) = v43;
  *(void *)(v51 + 24) = v45;
  *(void *)(v51 + 32) = v47;
  *(unsigned char *)(v51 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v50);
  uint64_t v52 = v105;
  id v53 = (void (*)(char *, void, uint64_t))v108;
  v108(v23, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v105);
  sub_10057C6DC();
  NSString v54 = v123;
  View.workoutViewStyle(_:)();
  id v55 = v87;
  v87(v23, v52);
  sub_10008DB18(v49, &qword_100962848);
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v121, v54, v113);
  swift_retain();
  RacePositionStatePublisher.remainingRouteDistance.getter();
  sub_1000E2384((uint64_t)&v129);
  id v56 = v86;
  FIUIDistanceTypeForActivityType();
  uint64_t v57 = v97;
  RaceRemainingDistanceMetricView.init(remainingDistance:formattingManager:distanceType:)();
  uint64_t v58 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  v53(v23, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v52);
  sub_10057C788(&qword_100962870, (void (*)(uint64_t))&type metadata accessor for RaceRemainingDistanceMetricView);
  id v59 = v124;
  uint64_t v60 = v98;
  View.workoutViewStyle(_:)();
  v55(v23, v52);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v57, v60);
  uint64_t v61 = v112;
  (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v120, v59, v122);
  uint64_t v62 = type metadata accessor for MetricPlatterType();
  uint64_t v63 = (uint64_t)v101;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v101, 1, 1, v62);
  long long v127 = *(_OWORD *)v110;
  swift_retain();
  CGRect v64 = v100;
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  sub_1000E2384((uint64_t)&v127);
  sub_10008DB18(v63, &qword_10094C100);
  v108(v23, v58, v52);
  swift_getOpaqueTypeConformance2();
  CGRect v65 = v125;
  uint64_t v66 = v102;
  View.workoutViewStyle(_:)();
  v55(v23, v52);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v64, v66);
  uint64_t v67 = v126;
  CGRect v68 = v114;
  uint64_t v69 = v115;
  (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v114, v65, v115);
  uint64_t v108 = *(void (**)(void, void, void))(v118 + 16);
  CGRect v70 = v116;
  uint64_t v71 = v119;
  v108(v116, v111, v119);
  uint64_t v110 = *(id **)(v117 + 16);
  uint64_t v72 = v113;
  ((void (*)(char *, char *, uint64_t))v110)(v123, v121, v113);
  uint64_t v109 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v109(v124, v120, v122);
  CGRect v73 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  CGRect v74 = v68;
  uint64_t v75 = v69;
  v73(v125, v74, v69);
  uint64_t v76 = v104;
  v108(v104, v70, v71);
  CGRect v77 = (int *)sub_1000AFA94(&qword_100962878);
  ((void (*)(uint64_t, char *, uint64_t))v110)(v76 + v77[12], v123, v72);
  uint64_t v78 = v122;
  v109((char *)(v76 + v77[16]), v124, v122);
  v73((char *)(v76 + v77[20]), v125, v75);
  id v79 = *(void (**)(char *, uint64_t))(v126 + 8);
  v126 += 8;
  v79(v114, v75);
  id v80 = *(void (**)(char *, uint64_t))(v112 + 8);
  v80(v120, v78);
  uint64_t v81 = *(void (**)(char *, uint64_t))(v117 + 8);
  v81(v121, v72);
  uint64_t v82 = v119;
  uint64_t v83 = *(void (**)(char *, uint64_t))(v118 + 8);
  v83(v111, v119);
  v79(v125, v115);
  v80(v124, v78);
  v81(v123, v72);
  return ((uint64_t (*)(char *, uint64_t))v83)(v116, v82);
}

uint64_t sub_10057C6A8@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[1];
  v5[0] = *v1;
  v5[1] = v2;
  long long v3 = v1[3];
  Swift::Int v5[2] = v1[2];
  v5[3] = v3;
  return sub_10057B6A4((id *)v5, a1);
}

unint64_t sub_10057C6DC()
{
  unint64_t result = qword_100962868;
  if (!qword_100962868)
  {
    sub_1000A1370(&qword_100962848);
    sub_10057C788(&qword_100951678, (void (*)(uint64_t))&type metadata accessor for RaceElevationMetricView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962868);
  }
  return result;
}

uint64_t sub_10057C788(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10057C7D4()
{
  unint64_t result = qword_100962880;
  if (!qword_100962880)
  {
    sub_1000A1370(&qword_100962888);
    sub_1000A132C(&qword_100962348, &qword_100962350);
    sub_1000A132C(&qword_100962890, &qword_100962898);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962880);
  }
  return result;
}

uint64_t sub_10057C898@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v33 = a6;
  id v31 = a4;
  LODWORD(v32) = a5 & 1;
  uint64_t v11 = type metadata accessor for AttributedString();
  v30[0] = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v30 - v15;
  uint64_t v17 = type metadata accessor for WorkoutItemView();
  uint64_t v18 = *(int *)(v17 + 44);
  uint64_t v19 = v17;
  v30[1] = v17;
  uint64_t v34 = 0;
  sub_1000AFA94(&qword_100950278);
  State.init(wrappedValue:)();
  *(_OWORD *)(a7 + v18) = v35;
  uint64_t v20 = *(int *)(v19 + 48);
  uint64_t v34 = 0;
  State.init(wrappedValue:)();
  *(_OWORD *)(a7 + v20) = v35;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  uint64_t v21 = a2;
  id v22 = v31;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = v22;
  *(unsigned char *)(a7 + 32) = (_BYTE)v32;
  *(void *)(a7 + 40) = v33;
  id v23 = a1;
  id v24 = v21;
  id v32 = a3;
  id v31 = v22;
  swift_retain();
  uint64_t v25 = v23;
  id v26 = [v24 formattedTypeForWorkout:v23 workoutActivity:0 context:@"WorkoutsListDisplayContext"];
  AttributedString.init(_:)();
  static Font.body.getter();
  AttributedString.with(font:)();
  swift_release();
  uint64_t v27 = v30[0];
  uint64_t v28 = *(void (**)(char *, uint64_t))(v30[0] + 8);
  v28(v13, v11);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v13, v16, v11);
  State.init(wrappedValue:)();
  v28(v16, v11);

  return swift_release();
}

uint64_t type metadata accessor for WorkoutItemView()
{
  uint64_t result = qword_1009628F8;
  if (!qword_1009628F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_10057CB74(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[1];
    uint64_t v9 = a2[2];
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v9;
    uint64_t v10 = a2[3];
    *((void *)a1 + 3) = v10;
    a1[32] = *((unsigned char *)a2 + 32);
    uint64_t v11 = a3[10];
    uint64_t v29 = &a1[v11];
    uint64_t v12 = (uint64_t)a2 + v11;
    *((void *)a1 + 5) = a2[5];
    uint64_t v13 = type metadata accessor for AttributedString();
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v14 = v4;
    uint64_t v15 = v8;
    uint64_t v16 = v9;
    uint64_t v17 = v10;
    swift_retain();
    v28(v29, v12, v13);
    uint64_t v18 = sub_1000AFA94(&qword_100950BB0);
    *(void *)&v29[*(int *)(v18 + 28)] = *(void *)(v12 + *(int *)(v18 + 28));
    uint64_t v19 = a3[11];
    uint64_t v20 = a3[12];
    uint64_t v21 = &v7[v19];
    id v22 = (char **)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    *(void *)uint64_t v21 = *v22;
    *((void *)v21 + 1) = v23;
    id v24 = &v7[v20];
    uint64_t v25 = (char **)((char *)a2 + v20);
    uint64_t v26 = v25[1];
    *(void *)id v24 = *v25;
    *((void *)v24 + 1) = v26;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_10057CD04(id *a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1000AFA94(&qword_100950BB0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_10057CDEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v8 = *(void **)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v9 = a3[10];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v12 = type metadata accessor for AttributedString();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  id v13 = v5;
  id v14 = v6;
  id v15 = v8;
  id v16 = v7;
  swift_retain();
  v27(v10, v11, v12);
  uint64_t v17 = sub_1000AFA94(&qword_100950BB0);
  *(void *)(v10 + *(int *)(v17 + 28)) = *(void *)(v11 + *(int *)(v17 + 28));
  uint64_t v18 = a3[11];
  uint64_t v19 = a3[12];
  uint64_t v20 = (void *)(a1 + v18);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = (void *)(a1 + v19);
  id v24 = (void *)(a2 + v19);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10057CF2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(void **)(a2 + 16);
  id v13 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  id v14 = v12;

  id v15 = *(void **)(a2 + 24);
  id v16 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v15;
  id v17 = v15;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = sub_1000AFA94(&qword_100950BB0);
  *(void *)(v19 + *(int *)(v22 + 28)) = *(void *)(v20 + *(int *)(v22 + 28));
  swift_retain();
  swift_release();
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  swift_retain();
  swift_release();
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_retain();
  swift_release();
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  swift_retain();
  swift_release();
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10057D0C0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a3[10];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = sub_1000AFA94(&qword_100950BB0);
  *(void *)(v8 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
  uint64_t v12 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_10057D188(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = sub_1000AFA94(&qword_100950BB0);
  *(void *)(v11 + *(int *)(v14 + 28)) = *(void *)(v12 + *(int *)(v14 + 28));
  swift_release();
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_release();
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_release();
  uint64_t v18 = a3[12];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (void *)(a2 + v18);
  *(void *)(a1 + v18) = *v20;
  swift_release();
  *(void *)(v19 + 8) = v20[1];
  swift_release();
  return a1;
}

uint64_t sub_10057D2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10057D2F0);
}

uint64_t sub_10057D2F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94(&qword_100950BB0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10057D3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10057D3B8);
}

void *sub_10057D3B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000AFA94(&qword_100950BB0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 40);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10057D464()
{
  sub_10022D41C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10057D528()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10057D544@<X0>(uint64_t a1@<X8>)
{
  long long v2 = (id *)v1;
  uint64_t v88 = a1;
  uint64_t v89 = type metadata accessor for TaskPriority();
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  id v86 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WorkoutItemView();
  uint64_t v82 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v83 = v5;
  uint64_t v84 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AppEntityVisualState();
  uint64_t v80 = *(void *)(v6 - 8);
  uint64_t v81 = v6;
  __chkstk_darwin(v6);
  id v79 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100962950);
  __chkstk_darwin(v8 - 8);
  uint64_t v73 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)sub_1000AFA94(&qword_100962958);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v68 = *(void *)(v13 - 8);
  uint64_t v69 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for AttributedString();
  uint64_t v16 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v64 - v20;
  uint64_t v74 = sub_1000AFA94(&qword_100962960);
  __chkstk_darwin(v74);
  uint64_t v75 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_100962968);
  uint64_t v77 = *(void *)(v23 - 8);
  uint64_t v78 = v23;
  __chkstk_darwin(v23);
  uint64_t v76 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v67 = *(unsigned __int8 *)(v1 + 32);
  sub_1000AFA94(&qword_100950BB0);
  CGRect v70 = v21;
  State.wrappedValue.getter();
  id v25 = *(id *)v1;
  id v26 = v2[1];
  id v27 = [v26 formattedGoalForWorkout:*v2 context:@"WorkoutsListDisplayContext"];
  uint64_t v72 = v18;
  AttributedString.init(_:)();
  id v28 = [v26 formattedDateForWorkout:v25 context:@"WorkoutsListDisplayContext"];
  id v29 = [v28 string];

  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v65 = v31;
  uint64_t v66 = v30;

  uint64_t v85 = v2;
  id v32 = [v25 UUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v15, v69);
  unint64_t v33 = AAUIAwardsDataProvider.achievements(forWorkoutIdentifier:)();
  swift_bridgeObjectRelease();
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *uint64_t v12 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  long long v35 = (char *)v12 + v10[15];
  *(_OWORD *)long long v35 = xmmword_100756700;
  *((void *)v35 + 2) = 0;
  *((void *)v35 + 3) = 0;
  *((unsigned char *)v12 + v10[9]) = v67;
  id v36 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  id v38 = v70;
  uint64_t v37 = v71;
  v36((char *)v12 + v10[10], v70, v71);
  id v39 = v72;
  v36((char *)v12 + v10[11], v72, v37);
  uint64_t v40 = (uint64_t *)((char *)v12 + v10[12]);
  uint64_t v41 = v65;
  *uint64_t v40 = v66;
  v40[1] = v41;
  *(uint64_t *)((char *)v12 + v10[13]) = v34;
  uint64_t v42 = v73;
  uint64_t v43 = v85;
  sub_10057DEEC((uint64_t)v85, v73);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v16 + 8);
  v44(v39, v37);
  v44(v38, v37);
  sub_1000AEEC8(v42, (uint64_t)v12 + v10[14], &qword_100962950);
  uint64_t v45 = v75;
  sub_1000AEEC8((uint64_t)v12, v75, &qword_100962958);
  id v46 = *v43;
  id v47 = [*v43 UUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10020F97C(v46, v43[1], v90);
  *(void *)&v91[0] = _swiftEmptyArrayStorage;
  sub_10057FB1C((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  sub_1000AFA94((uint64_t *)&unk_10096AA80);
  sub_1000A132C((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
  uint64_t v48 = v79;
  uint64_t v49 = v81;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_1000A132C(&qword_100962970, &qword_100962960);
  sub_1001B5C6C();
  uint64_t v50 = v76;
  View.appEntity<A>(_:state:)();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v48, v49);
  v91[12] = v90[12];
  v91[13] = v90[13];
  v91[14] = v90[14];
  v91[15] = v90[15];
  v91[8] = v90[8];
  v91[9] = v90[9];
  v91[10] = v90[10];
  v91[11] = v90[11];
  v91[4] = v90[4];
  v91[5] = v90[5];
  v91[6] = v90[6];
  v91[7] = v90[7];
  v91[0] = v90[0];
  v91[1] = v90[1];
  v91[2] = v90[2];
  v91[3] = v90[3];
  sub_1001B5CC0((uint64_t)v91);
  sub_10008DB18(v45, &qword_100962960);
  uint64_t v51 = v84;
  sub_10057F930((uint64_t)v43, v84, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
  unint64_t v52 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  uint64_t v53 = swift_allocObject();
  sub_10057F410(v51, v53 + v52);
  NSString v54 = v86;
  static TaskPriority.userInitiated.getter();
  uint64_t v55 = sub_1000AFA94(&qword_100962988);
  uint64_t v56 = v88;
  uint64_t v57 = (char *)(v88 + *(int *)(v55 + 36));
  uint64_t v58 = type metadata accessor for _TaskModifier();
  uint64_t v59 = v87;
  uint64_t v60 = v89;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(&v57[*(int *)(v58 + 20)], v54, v89);
  *(void *)uint64_t v57 = &unk_100962980;
  *((void *)v57 + 1) = v53;
  uint64_t v62 = v77;
  uint64_t v61 = v78;
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v56, v50, v78);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v54, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v50, v61);
}

uint64_t sub_10057DEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v33 = sub_1000AFA94(&qword_10094E460);
  __chkstk_darwin(v33);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v32);
  uint64_t v6 = (_OWORD *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = sub_1000AFA94(&qword_100950CB0);
  __chkstk_darwin(v35);
  uint64_t v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v34 = sub_1000AFA94(&qword_1009629B0);
  __chkstk_darwin(v34);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WorkoutItemView();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v38 = *(_OWORD *)(a1 + *(int *)(v17 + 48));
  sub_1000AFA94(&qword_100950388);
  State.wrappedValue.getter();
  uint64_t v18 = v37;
  sub_10057F930(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
  if (v18)
  {
    sub_10057F998((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
  }
  else
  {
    long long v38 = *(_OWORD *)&v16[*(int *)(v14 + 44)];
    State.wrappedValue.getter();
    uint64_t v18 = v37;
    sub_10057F998((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
    if (!v18)
    {
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v28 = v38;
      char v29 = BYTE8(v38);
      uint64_t v30 = v39;
      char v31 = v40;
      *(void *)uint64_t v13 = 0;
      v13[8] = 1;
      *((void *)v13 + 2) = v28;
      v13[24] = v29;
      *((void *)v13 + 4) = v30;
      v13[40] = v31;
      *((_OWORD *)v13 + 3) = v41;
      swift_storeEnumTagMultiPayload();
      sub_1000AFA94(&qword_1009503E0);
      sub_10022D7C8();
      sub_10042D1E4();
      return _ConditionalContent<>.init(storage:)();
    }
  }
  uint64_t v19 = (char *)v6 + *(int *)(v32 + 20);
  uint64_t v20 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v21 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  __asm { FMOV            V0.2D, #4.0 }
  *uint64_t v6 = _Q0;
  sub_10057F930((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v4[*(int *)(v33 + 36)] = 256;
  sub_1000AEF2C((uint64_t)v4, (uint64_t)v8 + *(int *)(v35 + 36), &qword_10094E460);
  void *v8 = v18;
  swift_retain();
  sub_10008DB18((uint64_t)v4, &qword_10094E460);
  sub_10057F998((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000AEEC8((uint64_t)v8, (uint64_t)v11, &qword_100950CB0);
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v13, &qword_100950CB0);
  swift_storeEnumTagMultiPayload();
  sub_1000AFA94(&qword_1009503E0);
  sub_10022D7C8();
  sub_10042D1E4();
  _ConditionalContent<>.init(storage:)();
  swift_release();
  return sub_10008DB18((uint64_t)v11, &qword_100950CB0);
}

uint64_t sub_10057E39C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = *(void *)(type metadata accessor for WorkoutItemView() - 8);
  v1[3] = v2;
  v1[4] = *(void *)(v2 + 64);
  v1[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10057E494, v4, v3);
}

uint64_t sub_10057E494()
{
  uint64_t v1 = v0[2];
  swift_release();
  uint64_t v2 = *(char **)(v1 + 16);
  id v3 = *(id *)v1;
  char v4 = sub_1007194DC(v3);

  if (v4)
  {
    uint64_t v5 = v0[5];
    uint64_t v6 = v0[3];
    sub_10057F930(v0[2], v5, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = swift_allocObject();
    sub_10057F410(v5, v8 + v7);
    id v9 = v3;
    sub_1001B173C(v9, (void (*)(void))sub_10057F544, v8, v2);
    swift_release();
  }
  sub_10057E5C4();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10057E5C4()
{
  uint64_t v1 = type metadata accessor for WorkoutItemView();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1 - 8);
  char v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v18 = v9 + 56;
  v17(v7, 1, 1, v8);
  sub_10057F930(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
  type metadata accessor for MainActor();
  uint64_t v10 = static MainActor.shared.getter();
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  sub_10057F410((uint64_t)v4, v12 + v11);
  sub_1000713D0((uint64_t)v7, (uint64_t)&unk_100962998, v12);
  swift_release();
  v17(v7, 1, 1, v8);
  sub_10057F930(v16[1], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = &protocol witness table for MainActor;
  sub_10057F410((uint64_t)v4, v14 + v11);
  sub_1000713D0((uint64_t)v7, (uint64_t)&unk_1009629A8, v14);
  return swift_release();
}

uint64_t sub_10057E834(uint64_t a1, void **a2)
{
  if (a1)
  {
    __chkstk_darwin(a1);
    id v4 = v3;
    static Animation.default.getter();
    withAnimation<A>(_:_:)();

    return swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    uint64_t v6 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_10074E640;
    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_1000AA64C();
    *(void *)(v7 + 32) = 0xD000000000000010;
    *(void *)(v7 + 40) = 0x80000001007BA850;
    uint64_t v8 = *a2;
    *(void *)(v7 + 96) = sub_1002DDB04();
    *(void *)(v7 + 104) = sub_10057FB1C((unint64_t *)&qword_100966470, (void (*)(uint64_t))sub_1002DDB04);
    *(void *)(v7 + 72) = v8;
    id v9 = v6;
    id v10 = v8;
    os_log(_:dso:log:_:_:)();

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057EA00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v9 = (char *)v12 - v8;
  id v10 = *(id *)(a2 + OBJC_IVAR___CHCatalogItemViewModel_title);
  AttributedString.init(_:)();
  type metadata accessor for WorkoutItemView();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_1000AFA94(&qword_100950BB0);
  State.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_10057EB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10057EBF4, v6, v5);
}

uint64_t sub_10057EBF4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  dispatch thunk of WorkoutImageProvider.placeholderImage(for:width:)();
  uint64_t v2 = Image.init(uiImage:)();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + *(int *)(type metadata accessor for WorkoutItemView() + 44));
  *(void *)(v0 + 32) = v2;
  sub_1000AFA94(&qword_100950388);
  State.wrappedValue.setter();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10057ECC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for WorkoutItemView();
  v4[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_10057ED88, v6, v5);
}

uint64_t sub_10057ED88()
{
  uint64_t v1 = *(uint64_t **)(v0 + 40);
  uint64_t v7 = (uint64_t (*)(uint64_t, __n128))((char *)&async function pointer to dispatch thunk of WorkoutImageProvider.fetchImage(for:width:)
                                               + async function pointer to dispatch thunk of WorkoutImageProvider.fetchImage(for:width:));
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 32)) {
    double v3 = 48.0;
  }
  else {
    double v3 = 34.0;
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10057EE5C;
  v5.n128_f64[0] = v3;
  return v7(v2, v5);
}

uint64_t sub_10057EE5C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[8];
    uint64_t v6 = v4[9];
    uint64_t v7 = sub_10057F058;
  }
  else
  {
    v4[12] = a1;
    uint64_t v5 = v4[8];
    uint64_t v6 = v4[9];
    uint64_t v7 = sub_10057EF84;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10057EF84()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v0[5];
  swift_release();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10057F058()
{
  uint64_t v19 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  swift_release();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  uint64_t v4 = HKLogActivity;
  sub_10057F930(v1, v2, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
  if (os_log_type_enabled(v4, v3))
  {
    os_log_type_t type = v3;
    uint64_t v5 = (id *)v0[6];
    uint64_t v14 = (uint64_t)v5;
    swift_errorRetain();
    swift_errorRetain();
    log = v4;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    v0[2] = sub_10008F1F4(0x4974756F6B726F57, 0xEF776569566D6574, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2080;
    id v7 = [*v5 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    v0[3] = sub_10008F1F4(v8, v10, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10057F998(v14, (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
    *(_WORD *)(v6 + 22) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "%s Error fetching workout image for workout: %s with error: %@", (uint8_t *)v6, 0x20u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    sub_10057F998(v0[6], (uint64_t (*)(void))type metadata accessor for WorkoutItemView);
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10057F388(uint64_t a1, void *a2)
{
  id v2 = a2;
  Image.init(uiImage:)();
  type metadata accessor for WorkoutItemView();
  sub_1000AFA94(&qword_100950388);
  return State.wrappedValue.setter();
}

uint64_t sub_10057F410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutItemView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10057F474()
{
  uint64_t v2 = *(void *)(type metadata accessor for WorkoutItemView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000DBD6C;
  return sub_10057E39C(v3);
}

uint64_t sub_10057F544(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for WorkoutItemView() - 8);
  uint64_t v4 = (void **)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_10057E834(a1, v4);
}

uint64_t sub_10057F5B4()
{
  return sub_10057EA00(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10057F5D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WorkoutItemView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1000DBD6C;
  return sub_10057EB5C(a1, v5, v6, v7);
}

uint64_t sub_10057F6C4()
{
  uint64_t v1 = (int *)(type metadata accessor for WorkoutItemView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();

  swift_release();
  unint64_t v3 = v0 + v2 + v1[12];
  uint64_t v4 = type metadata accessor for AttributedString();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1000AFA94(&qword_100950BB0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10057F828(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WorkoutItemView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10005DB5C;
  return sub_10057ECC4(a1, v5, v6, v7);
}

uint64_t sub_10057F914()
{
  return sub_10057F388(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10057F930(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10057F998(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10057F9FC()
{
  unint64_t result = qword_1009629B8;
  if (!qword_1009629B8)
  {
    sub_1000A1370(&qword_100962988);
    sub_1000A1370(&qword_100962960);
    sub_1000A132C(&qword_100962970, &qword_100962960);
    sub_1001B5C6C();
    swift_getOpaqueTypeConformance2();
    sub_10057FB1C((unint64_t *)&qword_100950478, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009629B8);
  }
  return result;
}

uint64_t sub_10057FB1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for DiscoverySheetDataModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DiscoverySheetDataModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DiscoverySheetDataModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DiscoverySheetDataModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DiscoverySheetDataModel()
{
  return &type metadata for DiscoverySheetDataModel;
}

uint64_t sub_10057FCB8()
{
  uint64_t v32 = type metadata accessor for SheetItem();
  uint64_t v0 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = IntroSheet.title.getter();
  uint64_t v5 = v4;
  uint64_t v6 = IntroSheet.items.getter();
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    void v27[2] = v5;
    v27[3] = v3;
    uint64_t v35 = _swiftEmptyArrayStorage;
    sub_1001C9374(0, v7, 0);
    unint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 16);
    uint64_t v8 = v0 + 16;
    uint64_t v10 = *(unsigned __int8 *)(v8 + 64);
    v27[1] = v6;
    uint64_t v11 = v6 + ((v10 + 32) & ~v10);
    uint64_t v29 = *(void *)(v8 + 56);
    uint64_t v30 = v9;
    uint64_t v28 = (void (**)(char *, uint64_t))(v8 - 8);
    uint64_t v31 = v8;
    do
    {
      uint64_t v12 = v32;
      v30(v2, v11, v32);
      uint64_t v13 = SheetItem.title.getter();
      uint64_t v33 = v14;
      uint64_t v34 = v13;
      uint64_t v15 = SheetItem.body.getter();
      uint64_t v17 = v16;
      uint64_t v18 = SheetItem.imageName.getter();
      uint64_t v20 = v19;
      (*v28)(v2, v12);
      uint64_t v21 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001C9374(0, v21[2] + 1, 1);
        uint64_t v21 = v35;
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1)
      {
        sub_1001C9374(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v35;
      }
      v21[2] = v23 + 1;
      uint64_t v24 = &v21[6 * v23];
      uint64_t v25 = v33;
      v24[4] = v34;
      v24[5] = v25;
      v24[6] = v15;
      v24[7] = v17;
      v24[8] = v18;
      v24[9] = v20;
      v11 += v29;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10057FF04()
{
  uint64_t v32 = type metadata accessor for SheetItem();
  uint64_t v0 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = WhatsNewSheet.title.getter();
  uint64_t v5 = v4;
  uint64_t v6 = WhatsNewSheet.items.getter();
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    void v27[2] = v5;
    v27[3] = v3;
    uint64_t v35 = _swiftEmptyArrayStorage;
    sub_1001C9374(0, v7, 0);
    unint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 16);
    uint64_t v8 = v0 + 16;
    uint64_t v10 = *(unsigned __int8 *)(v8 + 64);
    v27[1] = v6;
    uint64_t v11 = v6 + ((v10 + 32) & ~v10);
    uint64_t v29 = *(void *)(v8 + 56);
    uint64_t v30 = v9;
    uint64_t v28 = (void (**)(char *, uint64_t))(v8 - 8);
    uint64_t v31 = v8;
    do
    {
      uint64_t v12 = v32;
      v30(v2, v11, v32);
      uint64_t v13 = SheetItem.title.getter();
      uint64_t v33 = v14;
      uint64_t v34 = v13;
      uint64_t v15 = SheetItem.body.getter();
      uint64_t v17 = v16;
      uint64_t v18 = SheetItem.imageName.getter();
      uint64_t v20 = v19;
      (*v28)(v2, v12);
      uint64_t v21 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001C9374(0, v21[2] + 1, 1);
        uint64_t v21 = v35;
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1)
      {
        sub_1001C9374(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v35;
      }
      v21[2] = v23 + 1;
      uint64_t v24 = &v21[6 * v23];
      uint64_t v25 = v33;
      v24[4] = v34;
      v24[5] = v25;
      v24[6] = v15;
      v24[7] = v17;
      v24[8] = v18;
      v24[9] = v20;
      v11 += v29;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t destroy for DiscoverySheetDataModel.BulletedItemDataModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DiscoverySheetDataModel.BulletedItemDataModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DiscoverySheetDataModel.BulletedItemDataModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DiscoverySheetDataModel.BulletedItemDataModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DiscoverySheetDataModel.BulletedItemDataModel()
{
  return &type metadata for DiscoverySheetDataModel.BulletedItemDataModel;
}

unsigned char *storeEnumTagSinglePayload for DiscoverySheetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005803B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoverySheetType()
{
  return &type metadata for DiscoverySheetType;
}

unint64_t sub_1005803EC()
{
  unint64_t result = qword_1009629C0;
  if (!qword_1009629C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009629C0);
  }
  return result;
}

uint64_t *sub_100580440(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    uint64_t v12 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v12;
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = (uint64_t)v15;
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v14);
    uint64_t v19 = *((void *)v17 + 1);
    char v20 = v17[16];
    id v21 = v11;
    id v22 = v12;
    id v23 = v15;
    sub_100091494(v18, v19, v20);
    *(void *)uint64_t v16 = v18;
    *((void *)v16 + 1) = v19;
    v16[16] = v20;
  }
  return a1;
}

uint64_t sub_1005805B4(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  uint64_t v5 = a1 + a2[8];
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  char v8 = *(unsigned char *)(v5 + 16);

  return sub_1000917F8(v6, v7, v8);
}

void *sub_100580680(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v9;
  uint64_t v10 = *(void **)((char *)a2 + v8);
  *(void *)((char *)a1 + v8) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v13;
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  uint64_t v16 = *(void *)((char *)a2 + v12);
  uint64_t v17 = *((void *)v15 + 1);
  char v18 = v15[16];
  id v19 = v9;
  id v20 = v10;
  id v21 = v13;
  sub_100091494(v16, v17, v18);
  *(void *)uint64_t v14 = v16;
  *((void *)v14 + 1) = v17;
  v14[16] = v18;
  return a1;
}

void *sub_1005807A4(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)((char *)a2 + v7);
  uint64_t v9 = *(void **)((char *)a1 + v7);
  *(void *)((char *)a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)((char *)a2 + v11);
  uint64_t v13 = *(void **)((char *)a1 + v11);
  *(void *)((char *)a1 + v11) = v12;
  id v14 = v12;

  uint64_t v15 = a3[7];
  uint64_t v16 = *(void **)((char *)a2 + v15);
  uint64_t v17 = *(void **)((char *)a1 + v15);
  *(void *)((char *)a1 + v15) = v16;
  id v18 = v16;

  uint64_t v19 = a3[8];
  id v20 = (char *)a1 + v19;
  id v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *((void *)v21 + 1);
  LOBYTE(v17) = v21[16];
  sub_100091494(*(void *)v21, v23, (char)v17);
  uint64_t v24 = *(void *)v20;
  uint64_t v25 = *((void *)v20 + 1);
  *(void *)id v20 = v22;
  *((void *)v20 + 1) = v23;
  char v26 = v20[16];
  unsigned char v20[16] = (char)v17;
  sub_1000917F8(v24, v25, v26);
  return a1;
}

char *sub_100580904(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  id v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(_OWORD *)id v10 = *(_OWORD *)v11;
  unsigned char v10[16] = v11[16];
  return a1;
}

char *sub_100580A04(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = *(void **)&a1[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];

  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)&a1[v10];
  *(void *)&a1[v10] = *(void *)&a2[v10];

  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  char v17 = v16[16];
  uint64_t v18 = *(void *)v15;
  uint64_t v19 = *((void *)v15 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  char v20 = v15[16];
  unsigned char v15[16] = v17;
  sub_1000917F8(v18, v19, v20);
  return a1;
}

uint64_t sub_100580B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100580B5C);
}

uint64_t sub_100580B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100580C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100580C34);
}

uint64_t sub_100580C34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for FriendCompetitionView()
{
  uint64_t result = qword_100962A20;
  if (!qword_100962A20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100580D40()
{
  sub_100008C84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100580DE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100580E04()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v11, enum case for Font.TextStyle.caption(_:), v7, v9);
  uint64_t v12 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v6, &qword_10094C448);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v13 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1009984D8 = v13;
  return result;
}

uint64_t sub_100581084()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v11, enum case for Font.TextStyle.title3(_:), v7, v9);
  uint64_t v12 = enum case for Font.Design.rounded(_:);
  uint64_t v13 = type metadata accessor for Font.Design();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v6, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  static Font.Weight.medium.getter();
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v6, &qword_10094C448);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v15 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1009984E0 = v15;
  return result;
}

uint64_t sub_10058134C()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v11, enum case for Font.TextStyle.caption(_:), v7, v9);
  uint64_t v12 = enum case for Font.Design.rounded(_:);
  uint64_t v13 = type metadata accessor for Font.Design();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v6, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v6, &qword_10094C448);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v15 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1009984E8 = v15;
  return result;
}

uint64_t sub_100581610@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_1000AFA94(&qword_100962A68);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000AFA94(&qword_100962A70);
  __chkstk_darwin(v36);
  uint64_t v37 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = static HorizontalAlignment.leading.getter();
  uint64_t v13 = v1 + *(int *)(type metadata accessor for FriendCompetitionView() + 32);
  unint64_t v15 = *(void *)v13;
  uint64_t v14 = *(void *)(v13 + 8);
  int v16 = *(unsigned __int8 *)(v13 + 16);
  sub_100092088((uint64_t)v8);
  int v17 = v16;
  uint64_t v18 = v3;
  LODWORD(v14) = sub_100092DA4((uint64_t)v8, v15, v14, v17);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v8, v2);
  uint64_t v34 = v18;
  if (v14 > 1)
  {
    uint64_t v21 = 0x4028000000000000;
  }
  else
  {
    sub_100092088((uint64_t)v8);
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v5, enum case for DynamicTypeSize.xxLarge(_:), v2);
    char v20 = static DynamicTypeSize.< infix(_:_:)();
    v19(v5, v2);
    v19(v8, v2);
    uint64_t v21 = 0x402E000000000000;
    if (v20) {
      uint64_t v21 = 0x4034000000000000;
    }
  }
  *(void *)uint64_t v11 = v35;
  *((void *)v11 + 1) = v21;
  v11[16] = 0;
  uint64_t v22 = sub_1000AFA94(&qword_100962A78);
  sub_1005819D0(v1, (uint64_t)&v11[*(int *)(v22 + 44)]);
  unint64_t v23 = *(void *)v13;
  uint64_t v24 = *(void *)(v13 + 8);
  int v25 = *(unsigned __int8 *)(v13 + 16);
  sub_100092088((uint64_t)v8);
  LODWORD(v23) = sub_100092DA4((uint64_t)v8, v23, v24, v25);
  v19(v8, v2);
  if (v23 > 1)
  {
    unint64_t v28 = 0;
    unint64_t v27 = 0x4000000000000000;
  }
  else
  {
    sub_100092088((uint64_t)v8);
    (*(void (**)(char *, void, uint64_t))(v34 + 104))(v5, enum case for DynamicTypeSize.xxLarge(_:), v2);
    char v26 = static DynamicTypeSize.< infix(_:_:)();
    v19(v5, v2);
    v19(v8, v2);
    if (v26) {
      unint64_t v27 = 0xC000000000000000;
    }
    else {
      unint64_t v27 = 0;
    }
    if (v26) {
      unint64_t v28 = 0xC014000000000000;
    }
    else {
      unint64_t v28 = 0;
    }
  }
  char v29 = static Edge.Set.all.getter();
  uint64_t v30 = v37;
  sub_1000AEF2C((uint64_t)v11, v37, &qword_100962A68);
  uint64_t v31 = v30 + *(int *)(v36 + 36);
  *(unsigned char *)uint64_t v31 = v29;
  *(void *)(v31 + 8) = v27;
  *(void *)(v31 + 16) = 0;
  *(void *)(v31 + 24) = 0;
  *(void *)(v31 + 32) = v28;
  *(unsigned char *)(v31 + 40) = 0;
  sub_10008DB18((uint64_t)v11, &qword_100962A68);
  return sub_1000AEEC8(v30, v38, &qword_100962A70);
}

uint64_t sub_1005819D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v97 = type metadata accessor for Date();
  uint64_t v102 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v98 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for AttributedString();
  uint64_t v103 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v92 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v101 = (uint64_t)&v80 - v12;
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v80 - v14;
  uint64_t v91 = type metadata accessor for CompetitionRowView();
  __chkstk_darwin(v91);
  uint64_t v95 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v93 = (uint64_t *)((char *)&v80 - v18);
  __chkstk_darwin(v19);
  uint64_t v94 = (uint64_t)&v80 - v20;
  __chkstk_darwin(v21);
  unint64_t v23 = (uint64_t *)((char *)&v80 - v22);
  __chkstk_darwin(v24);
  uint64_t v99 = (uint64_t)&v80 - v25;
  char v26 = (int *)type metadata accessor for FriendCompetitionView();
  unint64_t v27 = *(void **)(a1 + v26[6]);
  uint64_t v28 = a1;
  uint64_t v84 = (void (*)(uint64_t, uint64_t, uint64_t))sub_100582314(v27);
  id v29 = [v27 displayName];
  if (v29)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v90 = v9;
  __chkstk_darwin(KeyPath);
  *(&v80 - 2) = v31;
  swift_getKeyPath();
  if (qword_10094AE78 != -1) {
    swift_once();
  }
  uint64_t v104 = qword_1009984D8;
  unint64_t v89 = sub_1000AA6A0();
  swift_retain();
  AttributedString.subscript.setter();
  swift_bridgeObjectRelease();
  uint64_t v32 = v26[7];
  uint64_t v33 = *(void **)(a1 + v32);
  uint64_t v83 = v32;
  id v34 = [v33 opponentTotalScore];
  sub_1005824F4((uint64_t)v34, v101);
  uint64_t v35 = v98;
  Date.init()();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v102 + 8);
  v102 += 8;
  uint64_t v88 = v37;
  v37(v35, v97);
  id v38 = [v33 dailyScoreForParticipant:1 onDate:isa];

  sub_100582D1C((uint64_t)v38, (uint64_t)v6);
  id v87 = self;
  id v39 = [v87 as_colorForParticipant:1 competition:*(void *)(v28 + v32)];
  uint64_t v82 = Color.init(uiColor:)();
  uint64_t v86 = v28 + v26[8];
  uint64_t v40 = *(void *)v86;
  uint64_t v41 = *(void *)(v86 + 8);
  char v42 = *(unsigned char *)(v86 + 16);
  *unint64_t v23 = swift_getKeyPath();
  uint64_t v85 = sub_1000AFA94(&qword_10094C578);
  swift_storeEnumTagMultiPayload();
  uint64_t v80 = v26;
  uint64_t v43 = (int *)v91;
  *(uint64_t *)((char *)v23 + *(int *)(v91 + 20)) = (uint64_t)v84;
  uint64_t v44 = (char *)v23 + v43[6];
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32);
  v103 += 32;
  uint64_t v84 = v45;
  id v46 = v15;
  uint64_t v47 = v100;
  v45((uint64_t)v44, (uint64_t)v46, v100);
  v45((uint64_t)v23 + v43[7], v101, v47);
  uint64_t v48 = (uint64_t)v23 + v43[8];
  uint64_t v81 = v6;
  sub_1000AEEC8((uint64_t)v6, v48, (uint64_t *)&unk_10095BFD0);
  *(uint64_t *)((char *)v23 + v43[9]) = v82;
  uint64_t v49 = (char *)v23 + v43[10];
  *(void *)uint64_t v49 = v40;
  *((void *)v49 + 1) = v41;
  v49[16] = v42;
  sub_1005835D8((uint64_t)v23, v99);
  uint64_t v50 = *(void **)(v28 + v80[5]);
  sub_100091494(v40, v41, v42);
  uint64_t v82 = sub_100582314(v50);
  id v51 = [self mainBundle];
  NSString v52 = String._bridgeToObjectiveC()();
  id v53 = [v51 localizedStringForKey:v52 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  uint64_t v54 = v101;
  AttributedString.init(_:attributes:)();
  uint64_t v55 = swift_getKeyPath();
  __chkstk_darwin(v55);
  *(&v80 - 2) = v56;
  swift_getKeyPath();
  uint64_t v104 = qword_1009984D8;
  swift_retain();
  AttributedString.subscript.setter();
  swift_bridgeObjectRelease();
  uint64_t v57 = v83;
  uint64_t v58 = *(void **)(v28 + v83);
  id v59 = [v58 myTotalScore];
  uint64_t v60 = v92;
  sub_1005824F4((uint64_t)v59, v92);
  uint64_t v61 = v98;
  Date.init()();
  Class v62 = Date._bridgeToObjectiveC()().super.isa;
  v88(v61, v97);
  id v63 = [v58 dailyScoreForParticipant:0 onDate:v62];

  sub_100582D1C((uint64_t)v63, (uint64_t)v6);
  id v64 = [v87 as_colorForParticipant:0 competition:*(void *)(v28 + v57)];
  uint64_t v65 = Color.init(uiColor:)();
  uint64_t v66 = *(void *)v86;
  uint64_t v67 = *(void *)(v86 + 8);
  LOBYTE(v57) = *(unsigned char *)(v86 + 16);
  uint64_t v68 = swift_getKeyPath();
  uint64_t v69 = (uint64_t)v93;
  *id v93 = v68;
  swift_storeEnumTagMultiPayload();
  *(void *)(v69 + v43[5]) = v82;
  uint64_t v70 = v54;
  uint64_t v71 = v100;
  uint64_t v72 = v84;
  v84(v69 + v43[6], v70, v100);
  v72(v69 + v43[7], v60, v71);
  sub_1000AEEC8((uint64_t)v81, v69 + v43[8], (uint64_t *)&unk_10095BFD0);
  *(void *)(v69 + v43[9]) = v65;
  uint64_t v73 = v69 + v43[10];
  *(void *)uint64_t v73 = v66;
  *(void *)(v73 + 8) = v67;
  *(unsigned char *)(v73 + 16) = v57;
  uint64_t v74 = v94;
  sub_1005835D8(v69, v94);
  uint64_t v75 = v99;
  sub_10058363C(v99, v69);
  uint64_t v76 = v95;
  sub_10058363C(v74, v95);
  uint64_t v77 = v96;
  sub_10058363C(v69, v96);
  uint64_t v78 = sub_1000AFA94(&qword_100962A80);
  sub_10058363C(v76, v77 + *(int *)(v78 + 48));
  sub_100091494(v66, v67, v57);
  sub_1005836A0(v74);
  sub_1005836A0(v75);
  sub_1005836A0(v76);
  return sub_1005836A0(v69);
}

uint64_t sub_100582314(void *a1)
{
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = v1 + *(int *)(type metadata accessor for FriendCompetitionView() + 32);
  unint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  int v13 = *(unsigned __int8 *)(v10 + 16);
  sub_100092088((uint64_t)v9);
  unsigned int v14 = sub_100092DA4((uint64_t)v9, v11, v12, v13);
  unint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v9, v3);
  if (v14 > 1)
  {
    double v17 = 40.0;
  }
  else
  {
    sub_100092088((uint64_t)v9);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DynamicTypeSize.xxLarge(_:), v3);
    char v16 = static DynamicTypeSize.< infix(_:_:)();
    v15(v6, v3);
    v15(v9, v3);
    if (v16) {
      double v17 = 40.0;
    }
    else {
      double v17 = 20.0;
    }
  }
  type metadata accessor for ActivitySharingAvatarProvider();
  sub_1005B6D30(a1, v17);
  return Image.init(uiImage:)();
}

uint64_t sub_1005824F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100960A18);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100960988);
  __chkstk_darwin(v10 - 8);
  uint64_t v65 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_100960990);
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  int v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v62 = (uint64_t)&v56 - v15;
  uint64_t v16 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for AttributedString();
  uint64_t v63 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v67 = (char *)&v56 - v21;
  uint64_t v22 = self;
  id v23 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:a1];
  id v24 = [v22 stringWithNumber:v23 decimalPrecision:1];

  if (v24)
  {
    uint64_t v56 = v13;
    uint64_t v57 = v6;
    uint64_t v61 = a2;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v58 = v26;
    uint64_t v59 = v25;

    unint64_t v27 = self;
    id v28 = [v27 mainBundle];
    NSString v29 = String._bridgeToObjectiveC()();
    uint64_t v60 = v17;
    id v30 = [v28 localizedStringForKey:v29 value:0 table:0];

    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;

    id v34 = [v27 mainBundle];
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = [v34 localizedStringForKey:v35 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_10074E640;
    *(void *)(v37 + 56) = &type metadata for String;
    unint64_t v38 = sub_1000AA64C();
    uint64_t v39 = v58;
    *(void *)(v37 + 32) = v59;
    *(void *)(v37 + 40) = v39;
    *(void *)(v37 + 96) = &type metadata for String;
    *(void *)(v37 + 104) = v38;
    *(void *)(v37 + 64) = v38;
    *(void *)(v37 + 72) = v31;
    *(void *)(v37 + 80) = v33;
    swift_bridgeObjectRetain();
    uint64_t v40 = v60;
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    AttributeContainer.init()();
    uint64_t v41 = v67;
    AttributedString.init(_:attributes:)();
    uint64_t v42 = v63;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v19, v41, v40);
    v68[0] = v31;
    v68[1] = v33;
    uint64_t v43 = type metadata accessor for Locale();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v9, 1, 1, v43);
    sub_1005836FC();
    sub_1000A06D0();
    uint64_t v44 = (uint64_t)v65;
    AttributedStringProtocol.range<A>(of:options:locale:)();
    sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_10095BF60);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v40);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v44, 1, v66) == 1)
    {
      sub_10008DB18(v44, &qword_100960988);
      uint64_t v45 = v67;
    }
    else
    {
      uint64_t v47 = v62;
      sub_1000AEEC8(v44, v62, &qword_100960990);
      uint64_t v48 = (uint64_t)v56;
      sub_1000AEF2C(v47, (uint64_t)v56, &qword_100960990);
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(&v56 - 2) = (char *)v50;
      swift_getKeyPath();
      id v51 = v57;
      static Text.Scale.secondary.getter();
      uint64_t v52 = type metadata accessor for Text.Scale();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 0, 1, v52);
      sub_1000A132C((unint64_t *)&qword_1009609A0, &qword_100960990);
      uint64_t v45 = v67;
      id v53 = (void (*)(void *, void))AttributedString.subscript.modify();
      sub_1000AA7AC();
      AttributedSubstring.subscript.setter();
      v53(v68, 0);
      sub_10008DB18(v48, &qword_100960990);
      sub_10008DB18(v47, &qword_100960990);
    }
    uint64_t v54 = swift_getKeyPath();
    __chkstk_darwin(v54);
    *(&v56 - 2) = (char *)v55;
    swift_getKeyPath();
    if (qword_10094AE80 != -1) {
      swift_once();
    }
    v68[0] = qword_1009984E0;
    sub_1000AA6A0();
    swift_retain();
    AttributedString.subscript.setter();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v61, v45, v40);
  }
  else
  {
    return AttributedString.init()();
  }
}

uint64_t sub_100582D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000AFA94(&qword_100960A18);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100960988);
  __chkstk_darwin(v11 - 8);
  int v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100960990);
  uint64_t v69 = *(void *)(v14 - 8);
  uint64_t v70 = v14;
  __chkstk_darwin(v14);
  uint64_t v68 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v67 = (uint64_t)&v60 - v17;
  uint64_t v18 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for AttributedString();
  uint64_t v71 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  id v24 = (char *)&v60 - v23;
  if ([*(id *)(v2 + *(int *)(type metadata accessor for FriendCompetitionView() + 28)) stage] == (id)1
    && (uint64_t v25 = self,
        id v26 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:a1],
        id v27 = [v25 stringWithNumber:v26 decimalPrecision:1],
        v26,
        v27))
  {
    uint64_t v61 = v7;
    uint64_t v65 = a2;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v63 = v29;
    uint64_t v64 = v28;

    id v30 = self;
    id v31 = [v30 mainBundle];
    uint64_t v66 = v24;
    id v32 = v31;
    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [v32 localizedStringForKey:v33 value:0 table:0];

    uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;

    id v37 = [v30 mainBundle];
    NSString v38 = String._bridgeToObjectiveC()();
    id v39 = [v37 localizedStringForKey:v38 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_10074E640;
    *(void *)(v40 + 56) = &type metadata for String;
    unint64_t v41 = sub_1000AA64C();
    uint64_t v42 = v63;
    *(void *)(v40 + 32) = v64;
    *(void *)(v40 + 40) = v42;
    *(void *)(v40 + 96) = &type metadata for String;
    *(void *)(v40 + 104) = v41;
    uint64_t v43 = v62;
    *(void *)(v40 + 64) = v41;
    *(void *)(v40 + 72) = v43;
    *(void *)(v40 + 80) = v36;
    swift_bridgeObjectRetain();
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    AttributeContainer.init()();
    uint64_t v44 = v66;
    AttributedString.init(_:attributes:)();
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v21, v44, v19);
    v72[0] = v43;
    v72[1] = v36;
    uint64_t v45 = type metadata accessor for Locale();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v10, 1, 1, v45);
    sub_1005836FC();
    sub_1000A06D0();
    AttributedStringProtocol.range<A>(of:options:locale:)();
    sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_10095BF60);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v21, v19);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v13, 1, v70) == 1)
    {
      id v46 = &qword_100960988;
      uint64_t v47 = (uint64_t)v13;
    }
    else
    {
      uint64_t v50 = v67;
      sub_1000AEEC8((uint64_t)v13, v67, &qword_100960990);
      uint64_t v51 = v68;
      sub_1000AEF2C(v50, v68, &qword_100960990);
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(&v60 - 2) = v53;
      swift_getKeyPath();
      uint64_t v54 = v61;
      static Text.Scale.secondary.getter();
      uint64_t v55 = type metadata accessor for Text.Scale();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
      sub_1000A132C((unint64_t *)&qword_1009609A0, &qword_100960990);
      uint64_t v56 = (void (*)(void *, void))AttributedString.subscript.modify();
      sub_1000AA7AC();
      AttributedSubstring.subscript.setter();
      v56(v72, 0);
      sub_10008DB18(v51, &qword_100960990);
      uint64_t v47 = v50;
      id v46 = &qword_100960990;
    }
    sub_10008DB18(v47, v46);
    uint64_t v57 = swift_getKeyPath();
    __chkstk_darwin(v57);
    *(&v60 - 2) = v58;
    swift_getKeyPath();
    uint64_t v59 = v65;
    if (qword_10094AE88 != -1) {
      swift_once();
    }
    v72[0] = qword_1009984E8;
    sub_1000AA6A0();
    swift_retain();
    AttributedString.subscript.setter();
    (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v59, v44, v19);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v59, 0, 1, v19);
  }
  else
  {
    uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
    return v48(a2, 1, 1, v19);
  }
}

uint64_t sub_10058359C()
{
  return 8;
}

uint64_t sub_1005835A8()
{
  return swift_release();
}

uint64_t sub_1005835B0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1005835C4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1005835D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CompetitionRowView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10058363C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CompetitionRowView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005836A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CompetitionRowView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1005836FC()
{
  unint64_t result = qword_100960998;
  if (!qword_100960998)
  {
    type metadata accessor for AttributedString();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960998);
  }
  return result;
}

uint64_t sub_100583760()
{
  return 8;
}

unint64_t sub_100583778()
{
  unint64_t result = qword_100962A88;
  if (!qword_100962A88)
  {
    sub_1000A1370(&qword_100962A70);
    sub_1000A132C(&qword_100962A90, &qword_100962A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962A88);
  }
  return result;
}

uint64_t sub_100583824(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v4)
  {
LABEL_12:
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 setColors:isa];

    return (uint64_t)v2;
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001C8EB4(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    uint64_t v7 = v17;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      id v10 = [v8 CGColor];
      type metadata accessor for CGColor(0);
      uint64_t v16 = v11;

      *(void *)&long long v15 = v10;
      uint64_t v17 = v7;
      unint64_t v13 = v7[2];
      unint64_t v12 = v7[3];
      if (v13 >= v12 >> 1)
      {
        sub_1001C8EB4(v12 > 1, v13 + 1, 1);
        uint64_t v7 = v17;
      }
      ++v6;
      v7[2] = v13 + 1;
      sub_10005C2B0(&v15, &v7[4 * v13 + 4]);
    }
    while (v4 != v6);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005839C8(_OWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  long long v8 = a1[1];
  *(_OWORD *)(v4 + 16) = *a1;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 43) = *(_OWORD *)((char *)a1 + 27);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 80) = v9;
  long long v10 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 144) = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  long long v13 = *(_OWORD *)a2;
  long long v12 = *(_OWORD *)(a2 + 16);
  long long v14 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 96) = v14;
  *(_OWORD *)(v4 + 112) = v11;
  *(void *)(v4 + 184) = 0;
  *(void *)(v4 + 192) = 6;
  *(void *)(v4 + 208) = 0;
  *(void *)(v4 + 216) = 0;
  *(void *)(v4 + 200) = 0;
  *(unsigned char *)(v4 + 160) = *(unsigned char *)(a2 + 96);
  *(void *)(v4 + 168) = a3;
  *(void *)(v4 + 176) = 0;
  uint64_t v49 = *(void *)(a2 + 48);
  v48[1] = v12;
  v48[2] = v14;
  v48[0] = v13;
  char v15 = *(unsigned char *)(a2 + 58);
  int v16 = *(unsigned __int8 *)(a2 + 56);
  sub_1000B013C(a2);
  sub_1000B013C(a2);
  sub_1001D9EF4((uint64_t)a1);
  id v17 = a3;
  uint64_t v18 = sub_100584F44((uint64_t *)v48);
  double v19 = sub_100585150(v18, v15, v17);
  double v21 = v20;
  swift_bridgeObjectRelease();
  if (v19 < v21 && v16 == 2)
  {
    swift_release();
    sub_1000B008C(a2);
    uint64_t v22 = sub_1000AAF10();
    uint64_t v24 = v23;
    sub_1001D0774((uint64_t)a1);
    static os_log_type_t.error.getter();
    uint64_t v25 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v47 = v17;
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1007509E0;
    *(void *)(v26 + 56) = &type metadata for String;
    unint64_t v27 = sub_1000AA64C();
    *(void *)(v26 + 64) = v27;
    *(void *)(v26 + 32) = v22;
    *(void *)(v26 + 40) = v24;
    id v28 = v25;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(50);
    v29._uint64_t countAndFlagsBits = 0xD000000000000019;
    v29._object = (void *)0x80000001007CE720;
    String.append(_:)(v29);
    Double.write<A>(to:)();
    v30._uint64_t countAndFlagsBits = 0xD000000000000015;
    v30._object = (void *)0x80000001007CE740;
    String.append(_:)(v30);
    Double.write<A>(to:)();
    static os_log_type_t.error.getter();
    id v31 = (void *)HKLogActivity;
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1007509E0;
    *(void *)(v32 + 56) = &type metadata for String;
    *(void *)(v32 + 64) = v27;
    *(void *)(v32 + 32) = 0;
    *(void *)(v32 + 40) = 0xE000000000000000;
    id v33 = v31;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    v34._uint64_t countAndFlagsBits = 1853321060;
    v34._object = (void *)0xE400000000000000;
    String.append(_:)(v34);
    swift_bridgeObjectRelease();
    sub_1000B008C(a2);
    static os_log_type_t.error.getter();
    uint64_t v35 = (void *)HKLogActivity;
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1007509E0;
    *(void *)(v36 + 56) = &type metadata for String;
    *(void *)(v36 + 64) = v27;
    *(void *)(v36 + 32) = 0xD000000000000011;
    *(void *)(v36 + 40) = 0x80000001007CE760;
    id v37 = v35;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    static os_log_type_t.error.getter();
    id v38 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    sub_1001EF79C();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    sub_1001D0774((uint64_t)a1);
    sub_1000B008C(a2);
    uint64_t v39 = *(void *)(*(void *)&v48[0] + 16);
    if (v39 == 365)
    {

      sub_1000B008C(a2);
    }
    else
    {
      _StringGuts.grow(_:)(58);
      v40._uint64_t countAndFlagsBits = 0xD000000000000037;
      v40._object = (void *)0x80000001007B8810;
      String.append(_:)(v40);
      sub_1000B008C(a2);
      uint64_t v50 = v39;
      v41._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      v42._uint64_t countAndFlagsBits = 46;
      v42._object = (void *)0xE100000000000000;
      String.append(_:)(v42);
      static os_log_type_t.error.getter();
      uint64_t v43 = (void *)HKLogActivity;
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_1007509E0;
      *(void *)(v44 + 56) = &type metadata for String;
      *(void *)(v44 + 64) = sub_1000AA64C();
      *(void *)(v44 + 32) = 0;
      *(void *)(v44 + 40) = 0xE000000000000000;
      id v45 = v43;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
    }
  }
  return v4;
}

void sub_100583F7C(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  if (*(unsigned char *)(v1 + 192) == 6)
  {
    uint64_t v63 = a1;
    char v3 = *(unsigned char *)(v1 + 122);
    uint64_t v4 = sub_1000AAF10();
    uint64_t v6 = v5;
    static os_log_type_t.default.getter();
    uint64_t v7 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1007509E0;
    *(void *)(v8 + 56) = &type metadata for String;
    unint64_t v66 = sub_1000AA64C();
    *(void *)(v8 + 64) = v66;
    *(void *)(v8 + 32) = v4;
    *(void *)(v8 + 40) = v6;
    id v9 = v7;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    long long v10 = *(_OWORD *)(v2 + 80);
    v72[0] = *(_OWORD *)(v2 + 64);
    v72[1] = v10;
    _OWORD v72[2] = *(_OWORD *)(v2 + 96);
    uint64_t v73 = *(void *)(v2 + 112);
    uint64_t v71 = sub_100584F44((uint64_t *)v72);
    uint64_t v11 = sub_10058499C(&v71);
    char v65 = v3;
    char v12 = v3;
    long long v13 = *(void **)(v2 + 168);
    double v14 = sub_100585150(v71, v12, v13);
    double v16 = v15;
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    *(void *)&long long v67 = 0;
    *((void *)&v67 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(103);
    v19._uint64_t countAndFlagsBits = 0xD000000000000027;
    v19._object = (void *)0x80000001007CE7E0;
    String.append(_:)(v19);
    v20._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = 0xD000000000000010;
    v21._object = (void *)0x80000001007CE780;
    String.append(_:)(v21);
    Double.write<A>(to:)();
    v22._object = (void *)0x80000001007CE7A0;
    v22._uint64_t countAndFlagsBits = 0x1000000000000011;
    String.append(_:)(v22);
    Double.write<A>(to:)();
    v23._uint64_t countAndFlagsBits = 0x1000000000000017;
    v23._object = (void *)0x80000001007CE7C0;
    String.append(_:)(v23);
    Double.write<A>(to:)();
    static os_log_type_t.default.getter();
    uint64_t v24 = (void *)HKLogActivity;
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1007509E0;
    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 64) = v66;
    *(_OWORD *)(v25 + 32) = v67;
    id v26 = v24;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    if (v11 < 2)
    {
      unsigned __int8 v29 = 0;
      char v27 = v65;
      id v28 = v13;
    }
    else
    {
      char v27 = v65;
      id v28 = v13;
      if ((unint64_t)v11 < 8)
      {
        unsigned __int8 v29 = 1;
      }
      else if ((unint64_t)v11 <= 0x5A)
      {
        unsigned __int8 v29 = 2;
      }
      else
      {
        unsigned __int8 v29 = 3;
      }
    }
    double v31 = sub_1005F2D50(v28, v27, v16);
    *(double *)(v2 + 176) = v31;
    uint64_t v64 = v11;
    *(void *)(v2 + 184) = v11;
    *(void *)(v2 + 192) = v29;
    *(double *)(v2 + 200) = v14;
    *(double *)(v2 + 208) = v16;
    *(void *)(v2 + 216) = v18;
    *(void *)&long long v68 = 0;
    *((void *)&v68 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(50);
    v32._uint64_t countAndFlagsBits = 0xD000000000000019;
    v32._object = (void *)0x80000001007CE720;
    String.append(_:)(v32);
    Double.write<A>(to:)();
    v33._object = (void *)0x80000001007CE740;
    v33._uint64_t countAndFlagsBits = 0xD000000000000015;
    String.append(_:)(v33);
    Double.write<A>(to:)();
    static os_log_type_t.default.getter();
    Swift::String v34 = (void *)HKLogActivity;
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1007509E0;
    *(void *)(v35 + 56) = &type metadata for String;
    *(void *)(v35 + 64) = v66;
    *(_OWORD *)(v35 + 32) = v68;
    id v36 = v34;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    *(void *)&long long v69 = 0xD000000000000011;
    *((void *)&v69 + 1) = 0x80000001007CE760;
    uint64_t v37 = 1952541798;
    if (*(unsigned char *)(v2 + 120) != 1) {
      uint64_t v37 = 1853321060;
    }
    if (*(unsigned char *)(v2 + 120)) {
      uint64_t v38 = v37;
    }
    else {
      uint64_t v38 = 28789;
    }
    if (*(unsigned char *)(v2 + 120)) {
      unint64_t v39 = 0xE400000000000000;
    }
    else {
      unint64_t v39 = 0xE200000000000000;
    }
    unint64_t v40 = v39;
    String.append(_:)(*(Swift::String *)&v38);
    swift_bridgeObjectRelease();
    static os_log_type_t.default.getter();
    Swift::String v41 = (void *)HKLogActivity;
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1007509E0;
    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = v66;
    *(_OWORD *)(v42 + 32) = v69;
    id v43 = v41;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    *(void *)&long long v70 = 0;
    *((void *)&v70 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(40);
    v44._uint64_t countAndFlagsBits = 0xD000000000000018;
    v44._object = (void *)0x80000001007CE810;
    String.append(_:)(v44);
    Double.write<A>(to:)();
    v45._uint64_t countAndFlagsBits = 0x20726F6620;
    v45._object = (void *)0xE500000000000000;
    String.append(_:)(v45);
    v46._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v46);
    swift_bridgeObjectRelease();
    v47._uint64_t countAndFlagsBits = 0x29732879616420;
    v47._object = (void *)0xE700000000000000;
    String.append(_:)(v47);
    static os_log_type_t.default.getter();
    uint64_t v48 = (void *)HKLogActivity;
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_1007509E0;
    *(void *)(v49 + 56) = &type metadata for String;
    *(void *)(v49 + 64) = v66;
    *(_OWORD *)(v49 + 32) = v70;
    id v50 = v48;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    *(void *)&long long v70 = 0;
    *((void *)&v70 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(35);
    v51._uint64_t countAndFlagsBits = 0xD000000000000021;
    v51._object = (void *)0x80000001007CE830;
    String.append(_:)(v51);
    Double.write<A>(to:)();
    static os_log_type_t.default.getter();
    uint64_t v52 = (void *)HKLogActivity;
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1007509E0;
    *(void *)(v53 + 56) = &type metadata for String;
    *(void *)(v53 + 64) = v66;
    *(_OWORD *)(v53 + 32) = v70;
    id v54 = v52;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    *(void *)&long long v70 = 0;
    *((void *)&v70 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    v55._uint64_t countAndFlagsBits = 0xD000000000000017;
    v55._object = (void *)0x80000001007CE860;
    String.append(_:)(v55);
    _print_unlocked<A, B>(_:_:)();
    static os_log_type_t.default.getter();
    uint64_t v56 = (void *)HKLogActivity;
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1007509E0;
    *(void *)(v57 + 56) = &type metadata for String;
    *(void *)(v57 + 64) = v66;
    *(_OWORD *)(v57 + 32) = v70;
    id v58 = v56;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    *(void *)&long long v70 = 0;
    *((void *)&v70 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    v59._object = (void *)0x80000001007CE880;
    v59._uint64_t countAndFlagsBits = 0xD000000000000015;
    String.append(_:)(v59);
    _print_unlocked<A, B>(_:_:)();
    static os_log_type_t.default.getter();
    uint64_t v60 = (void *)HKLogActivity;
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_1007509E0;
    *(void *)(v61 + 56) = &type metadata for String;
    *(void *)(v61 + 64) = v66;
    *(_OWORD *)(v61 + 32) = v70;
    id v62 = v60;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    uint64_t v30 = v64;
    a1 = v63;
  }
  else
  {
    double v16 = *(double *)(v1 + 208);
    uint64_t v18 = *(void *)(v1 + 216);
    double v14 = *(double *)(v1 + 200);
    uint64_t v30 = *(void *)(v1 + 184);
    unsigned __int8 v29 = *(unsigned char *)(v1 + 192);
    double v31 = *(double *)(v2 + 176);
  }
  *(double *)a1 = v31;
  *(void *)(a1 + 8) = v30;
  *(unsigned char *)(a1 + 16) = v29;
  *(double *)(a1 + 24) = v14;
  *(double *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v18;
}

uint64_t sub_10058499C(void **a1)
{
  char v3 = *(unsigned char *)(v1 + 122);
  double v4 = *(double *)(v1 + 128);
  uint64_t v5 = *a1;
  uint64_t v6 = sub_100585020(*a1, 0x5AuLL);
  double v7 = sub_10022A2C0((uint64_t)v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(v1 + 168);
  double v9 = sub_100585150(v5, v3, v8);
  if (v9 < v10) {
    return 0;
  }
  id v36 = a1;
  uint64_t v11 = 0;
  while (1)
  {
    char v12 = sub_100585020(v5, 0x16DuLL);
    sub_10022A2C0((uint64_t)v12);
    swift_bridgeObjectRelease();
    long long v13 = sub_100585020(v5, 0x5AuLL);
    sub_10022A2C0((uint64_t)v13);
    double v15 = v14;
    swift_bridgeObjectRelease();
    uint64_t v16 = v5[2];
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    uint64_t v17 = (void *)swift_dynamicCastClass();
    if (!v17)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = v17[2];
    swift_release();
    if (v18 == v16 - (v16 != 0))
    {
      Swift::String v19 = (void *)swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        Swift::String v19 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      Swift::String v19 = sub_1003691F8((uint64_t)v5, (uint64_t)(v5 + 4), v16 != 0, (2 * v16) | 1);
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_100585020(v19, 0x5AuLL)[2];
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v19 = sub_100087CD4(0, v19[2] + 1, 1, v19);
    }
    unint64_t v22 = v19[2];
    unint64_t v21 = v19[3];
    uint64_t v5 = v22 >= v21 >> 1 ? sub_100087CD4((void *)(v21 > 1), v22 + 1, 1, v19) : v19;
    Swift::Int v5[2] = v22 + 1;
    Swift::String v23 = (double *)&v5[3 * v22];
    v23[4] = v4 * v7;
    v23[5] = v15 / (double)v20;
    *((unsigned char *)v23 + 48) = 0;
    _StringGuts.grow(_:)(93);
    v24._uint64_t countAndFlagsBits = 0x73646E657274235BLL;
    v24._object = (void *)0xEE0020796144205DLL;
    String.append(_:)(v24);
    v25._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 0xD000000000000010;
    v26._object = (void *)0x80000001007CE780;
    String.append(_:)(v26);
    Double.write<A>(to:)();
    v27._uint64_t countAndFlagsBits = 0x1000000000000011;
    v27._object = (void *)0x80000001007CE7A0;
    String.append(_:)(v27);
    Double.write<A>(to:)();
    v28._uint64_t countAndFlagsBits = 0x1000000000000017;
    v28._object = (void *)0x80000001007CE7C0;
    String.append(_:)(v28);
    Double.write<A>(to:)();
    v29._uint64_t countAndFlagsBits = 0x69655720A280E220;
    v29._object = (void *)0xAD0000203A746867;
    String.append(_:)(v29);
    Double.write<A>(to:)();
    static os_log_type_t.debug.getter();
    uint64_t v30 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1007509E0;
    *(void *)(v31 + 56) = &type metadata for String;
    *(void *)(v31 + 64) = sub_1000AA64C();
    *(void *)(v31 + 32) = 0;
    *(void *)(v31 + 40) = 0xE000000000000000;
    id v32 = v30;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    if (v11 == 364) {
      break;
    }
    ++v11;
    double v33 = sub_100585150(v5, v3, v8);
    if (v33 < v34) {
      goto LABEL_19;
    }
  }
  uint64_t v11 = 365;
LABEL_19:
  void *v36 = v5;
  return v11;
}

uint64_t sub_100584E40(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for TrendListMetric();
    return a2;
  }
  return result;
}

uint64_t sub_100584EC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrendsCoachingStatisticsManager()
{
  return self;
}

void *sub_100584F44(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *(void *)(*a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  char v3 = sub_100087CD4(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v4 = v3[2];
  uint64_t v5 = 3 * v4;
  uint64_t v6 = (unsigned char *)(v1 + 48);
  do
  {
    long long v7 = *((_OWORD *)v6 - 1);
    char v8 = *v6;
    unint64_t v9 = v3[3];
    unint64_t v10 = v4 + 1;
    if (v4 >= v9 >> 1)
    {
      long long v14 = *((_OWORD *)v6 - 1);
      char v12 = sub_100087CD4((void *)(v9 > 1), v4 + 1, 1, v3);
      long long v7 = v14;
      char v3 = v12;
    }
    v3[2] = v10;
    uint64_t v11 = &v3[v5];
    *((_OWORD *)v11 + 2) = v7;
    *((unsigned char *)v11 + 48) = v8;
    v5 += 3;
    v6 += 24;
    unint64_t v4 = v10;
    --v2;
  }
  while (v2);
  return v3;
}

void *sub_100585020(void *result, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    char v3 = result;
    unint64_t v4 = result[2];
    unint64_t v5 = v4 - a2;
    if (v4 < a2) {
      unint64_t v5 = 0;
    }
    if (v5 == v4) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 < v4)
    {
      swift_bridgeObjectRetain();
      if (v4 >= a2) {
        unint64_t v7 = a2;
      }
      else {
        unint64_t v7 = v4;
      }
      char v8 = (char *)v3 + 24 * v4 - 24 * v7 + 48;
      uint64_t v6 = _swiftEmptyArrayStorage;
      do
      {
        if ((*v8 & 1) == 0)
        {
          long long v11 = *((_OWORD *)v8 - 1);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1001E70FC(0, v6[2] + 1, 1, v6);
          }
          unint64_t v10 = v6[2];
          unint64_t v9 = v6[3];
          if (v10 >= v9 >> 1) {
            uint64_t v6 = sub_1001E70FC((void *)(v9 > 1), v10 + 1, 1, v6);
          }
          v6[2] = v10 + 1;
          *(_OWORD *)&v6[2 * v10 + 4] = v11;
        }
        v8 += 24;
        --v7;
      }
      while (v7);
      swift_unknownObjectRelease();
      return v6;
    }
  }
  __break(1u);
  return result;
}

double sub_100585150(void *a1, char a2, void *a3)
{
  uint64_t v6 = sub_100585020(a1, 0x16DuLL);
  double v7 = sub_10022A2C0((uint64_t)v6);
  swift_bridgeObjectRelease();
  double v8 = sub_1005F2D50(a3, a2, v7);
  id v9 = sub_1005F20F4(a3, a2);
  unint64_t v10 = self;
  id v11 = [v10 quantityWithUnit:v9 doubleValue:v8];

  LOBYTE(v9) = byte_10076C542[a2];
  id v12 = sub_10008CC68((char)v9);
  [v11 doubleValueForUnit:v12];
  double v14 = v13;

  double v15 = sub_100585020(a1, 0x5AuLL);
  double v16 = sub_10022A2C0((uint64_t)v15);
  swift_bridgeObjectRelease();
  double v17 = sub_1005F2D50(a3, a2, v16);
  id v18 = sub_1005F20F4(a3, a2);
  id v19 = [v10 quantityWithUnit:v18 doubleValue:v17];

  id v20 = sub_10008CC68((char)v9);
  [v19 doubleValueForUnit:v20];

  return v14;
}

unint64_t sub_1005852FC()
{
  unint64_t result = qword_100962B80;
  if (!qword_100962B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962B80);
  }
  return result;
}

unint64_t sub_100585354()
{
  unint64_t result = qword_100962B88[0];
  if (!qword_100962B88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100962B88);
  }
  return result;
}

uint64_t sub_1005853AC@<X0>(uint64_t *a1@<X8>)
{
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v2 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094D340);
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_100585460(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  double v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100962BD8 + dword_100962BD8);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10024C1D0;
  return v7(a1, v4);
}

uint64_t sub_100585514(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  char v3 = *(void **)(v1 + 8);
  uint64_t v6 = (uint64_t (*)(void *))((char *)&dword_100962BD0 + dword_100962BD0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1001A0E60;
  return v6(v3);
}

unint64_t sub_1005855C4()
{
  unint64_t result = qword_100962BA0;
  if (!qword_100962BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962BA0);
  }
  return result;
}

unint64_t sub_10058561C()
{
  unint64_t result = qword_100962BA8;
  if (!qword_100962BA8)
  {
    sub_1000A1370(qword_100962BB0);
    sub_1002BD560();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962BA8);
  }
  return result;
}

uint64_t sub_100585690(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002BCAA0();
  void *v5 = v2;
  v5[1] = sub_10005DB5C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for WorkoutSplitEntityQuery()
{
  return &type metadata for WorkoutSplitEntityQuery;
}

uint64_t sub_100585754(uint64_t result, unint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v3 = 0;
  uint64_t v4 = result + 48;
  unint64_t v19 = v2 - 1;
  unint64_t v5 = _swiftEmptyArrayStorage;
  unint64_t v24 = *(void *)(result + 16);
  uint64_t v20 = result + 48;
  do
  {
    unint64_t v21 = v5;
    if (v3 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v3;
    }
    unint64_t v26 = v6;
    uint64_t v7 = v4 + 72 * v3;
    for (unint64_t i = v3; ; ++i)
    {
      if (v26 == i)
      {
        __break(1u);
        return result;
      }
      long long v28 = *(_OWORD *)(v7 - 16);
      long long v29 = *(_OWORD *)v7;
      uint64_t v9 = *(void *)(v7 + 16);
      uint64_t v10 = *(void *)(v7 + 32);
      uint64_t v22 = *(void *)(v7 + 24);
      uint64_t v23 = *(void *)(v7 + 40);
      uint64_t v11 = *(void *)(v7 + 48);
      unint64_t v27 = i + 1;
      uint64_t v12 = *(void *)(v7 - 16);
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v13 = v9;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      LOBYTE(v9) = sub_1003B06D0(v12, a2);
      swift_release();
      if (v9) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      unint64_t result = swift_release();
      v7 += 72;
      if (v24 == v27) {
        return (uint64_t)v21;
      }
    }
    unint64_t v5 = v21;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_1001C9640(0, v21[2] + 1, 1);
      unint64_t v5 = v21;
    }
    long long v14 = v28;
    long long v15 = v29;
    unint64_t v17 = v5[2];
    unint64_t v16 = v5[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t result = sub_1001C9640(v16 > 1, v17 + 1, 1);
      long long v15 = v29;
      long long v14 = v28;
      unint64_t v5 = v21;
    }
    Swift::Int v5[2] = v17 + 1;
    id v18 = &v5[9 * v17];
    *((_OWORD *)v18 + 2) = v14;
    *((_OWORD *)v18 + 3) = v15;
    v18[8] = v13;
    v18[9] = v22;
    v18[10] = v10;
    v18[11] = v23;
    v18[12] = v11;
    uint64_t v4 = v20;
    unint64_t v2 = v24;
    unint64_t v3 = i + 1;
  }
  while (v19 != i);
  return (uint64_t)v5;
}

void sub_1005859B4(void *a1, char a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094F110);
  __chkstk_darwin(v4 - 8);
  uint64_t v61 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094F070);
  __chkstk_darwin(v6 - 8);
  uint64_t v60 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_10094F0A0);
  __chkstk_darwin(v8 - 8);
  Swift::String v59 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v57 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v62 = a1;
  id v12 = [a1 fiui_activityType];
  if (v12)
  {
    uint64_t v13 = v12;
    AppDependency.wrappedValue.getter();
    long long v14 = *(void **)&v63[0];
    id v15 = [*(id *)&v63[0] unitManager];

    if (v15)
    {
      int v16 = a2 & 1;
      id v17 = [v15 userDistanceHKUnitForActivityType:v13];

      uint64_t v55 = FIUIDistanceTypeForActivityType();
      unsigned int v18 = [v17 _isMetricDistance];
      uint64_t v19 = 1;
      if (!v18) {
        uint64_t v19 = 2;
      }
      uint64_t v54 = v19;
      int v56 = v16;
      if (v16) {
        id v20 = [v62 fiui_workoutCustomSplits];
      }
      else {
        id v20 = [v62 fiui_workoutSplitsForUserPreferredDistanceUnit:v17];
      }
      id v21 = v20;
      if (!v21)
      {

LABEL_26:
        return;
      }
      sub_10007E2D8(0, &qword_100962BC8);
      unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v45 = v17;
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      Swift::String v46 = v13;
      if (!v23)
      {
LABEL_25:

        swift_bridgeObjectRelease();
        id v17 = v46;
        goto LABEL_26;
      }
      id v53 = self;
      id v52 = self;
      id v51 = self;
      if (v23 >= 1)
      {
        uint64_t v24 = 0;
        unint64_t v48 = v22 & 0xC000000000000001;
        Swift::String v47 = (void (**)(char *, uint64_t))(v10 + 8);
        Swift::String v25 = _swiftEmptyArrayStorage;
        unint64_t v50 = v22;
        uint64_t v49 = v23;
        uint64_t v27 = (uint64_t)v59;
        uint64_t v26 = (uint64_t)v60;
        do
        {
          if (v48) {
            id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v28 = *(id *)(v22 + 8 * v24 + 32);
          }
          id v29 = v28;
          id v30 = [v62 UUID:v45];
          uint64_t v31 = v57;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v32 = UUID.uuidString.getter();
          unint64_t v34 = v33;
          (*v47)(v31, v58);
          [v29 duration];
          id v35 = [v53 seconds];
          sub_10007E2D8(0, &qword_10094F0E8);
          Measurement.init(value:unit:)();
          [v29 distanceInMeters];
          id v36 = [v52 meters];
          sub_10007E2D8(0, &qword_10094F128);
          Measurement.init(value:unit:)();
          [v29 distanceInMeters];
          [v29 duration];
          id v37 = [v51 metersPerSecond];
          sub_10007E2D8(0, &qword_10094F108);
          uint64_t v38 = (uint64_t)v61;
          Measurement.init(value:unit:)();
          sub_1002BF2E4(v24, v27, v26, v38, v55, v32, v34, v56, (uint64_t *)v63, v54);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v25 = sub_1001E7F58(0, v25[2] + 1, 1, v25);
          }
          unint64_t v40 = v25[2];
          unint64_t v39 = v25[3];
          if (v40 >= v39 >> 1) {
            Swift::String v25 = sub_1001E7F58((void *)(v39 > 1), v40 + 1, 1, v25);
          }
          ++v24;
          void v25[2] = v40 + 1;
          Swift::String v41 = &v25[9 * v40];
          *((_OWORD *)v41 + 2) = v63[0];
          long long v42 = v63[1];
          long long v43 = v63[2];
          long long v44 = v63[3];
          v41[12] = v64;
          *((_OWORD *)v41 + 4) = v43;
          *((_OWORD *)v41 + 5) = v44;
          *((_OWORD *)v41 + 3) = v42;

          unint64_t v22 = v50;
        }
        while (v49 != v24);
        goto LABEL_25;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_100586038(uint64_t a1, void *a2)
{
  v2[34] = a1;
  v2[35] = a2;
  v2[36] = *a2;
  return _swift_task_switch(sub_100586080, 0, 0);
}

uint64_t sub_100586080()
{
  unint64_t v1 = v0[34];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    uint64_t result = sub_1000ABAB8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = *(void *)(v5 + 16);
        uint64_t v6 = *(void *)(v5 + 24);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        unint64_t v9 = _swiftEmptyArrayStorage[2];
        unint64_t v8 = _swiftEmptyArrayStorage[3];
        if (v9 >= v8 >> 1) {
          sub_1000ABAB8(v8 > 1, v9 + 1, 1);
        }
        ++v4;
        _swiftEmptyArrayStorage[2] = v9 + 1;
        uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
        v10[4] = v7;
        v10[5] = v6;
      }
      while (v2 != v4);
    }
    else
    {
      uint64_t v11 = v0[34] + 32;
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v13 = 2 * v12;
      do
      {
        uint64_t v15 = *(void *)(*(void *)v11 + 16);
        uint64_t v14 = *(void *)(*(void *)v11 + 24);
        unint64_t v16 = _swiftEmptyArrayStorage[3];
        int64_t v17 = v12 + 1;
        swift_bridgeObjectRetain();
        if (v12 >= v16 >> 1) {
          sub_1000ABAB8(v16 > 1, v17, 1);
        }
        _swiftEmptyArrayStorage[2] = v17;
        unsigned int v18 = &_swiftEmptyArrayStorage[v13];
        unsigned char v18[4] = v15;
        v18[5] = v14;
        v13 += 2;
        v11 += 8;
        ++v12;
        --v2;
      }
      while (v2);
    }
  }
  v0[37] = _swiftEmptyArrayStorage;
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v19 = AppDependency.__allocating_init(key:manager:)();
  v0[38] = v19;
  static AppDependencyManager.shared.getter();
  uint64_t v20 = AppDependency.__allocating_init(key:manager:)();
  v0[39] = v20;
  sub_1000AFA94(&qword_10094FF10);
  static AppDependencyManager.shared.getter();
  uint64_t v21 = AppDependency.__allocating_init(key:manager:)();
  v0[40] = v21;
  unint64_t v22 = (void *)swift_task_alloc();
  v0[41] = v22;
  *unint64_t v22 = v0;
  v22[1] = sub_10058635C;
  return sub_10024EF88((uint64_t)_swiftEmptyArrayStorage, v19, v20, v21);
}

uint64_t sub_10058635C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 336) = a1;
  *(void *)(v3 + 344) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_100586624;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v4 = sub_10058649C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10058649C()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (long long *)(v1 + 32);
    for (uint64_t i = v2 - 1; ; --i)
    {
      long long v5 = v3[3];
      long long v7 = *v3;
      long long v6 = v3[1];
      *(_OWORD *)(v0 + 48) = v3[2];
      *(_OWORD *)(v0 + 64) = v5;
      *(_OWORD *)(v0 + 16) = v7;
      *(_OWORD *)(v0 + 32) = v6;
      long long v8 = v3[7];
      long long v10 = v3[4];
      long long v9 = v3[5];
      *(_OWORD *)(v0 + 112) = v3[6];
      *(_OWORD *)(v0 + 128) = v8;
      *(_OWORD *)(v0 + 80) = v10;
      *(_OWORD *)(v0 + 96) = v9;
      long long v11 = v3[11];
      long long v13 = v3[8];
      long long v12 = v3[9];
      *(_OWORD *)(v0 + 176) = v3[10];
      *(_OWORD *)(v0 + 192) = v11;
      *(_OWORD *)(v0 + 144) = v13;
      *(_OWORD *)(v0 + 160) = v12;
      long long v14 = v3[15];
      long long v16 = v3[12];
      long long v15 = v3[13];
      *(_OWORD *)(v0 + 240) = v3[14];
      *(_OWORD *)(v0 + 256) = v14;
      *(_OWORD *)(v0 + 208) = v16;
      *(_OWORD *)(v0 + 224) = v15;
      int64_t v17 = *(void **)(v0 + 240);
      sub_1001B5A54(v0 + 16);
      sub_1005859B4(v17, 0);
      sub_1001E4FD8(v18);
      sub_1005859B4(v17, 1);
      sub_1001E4FD8(v19);
      sub_1001B5CC0(v0 + 16);
      if (!i) {
        break;
      }
      v3 += 16;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v20 = *(void *)(v0 + 272);
  swift_bridgeObjectRetain();
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_100585754(v21, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v23 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v23(v22);
}

uint64_t sub_100586624()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005866AC(void *a1)
{
  *(void *)(v1 + 272) = a1;
  *(void *)(v1 + 280) = *a1;
  return _swift_task_switch(sub_1005866F4, 0, 0);
}

uint64_t sub_1005866F4()
{
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v1 = AppDependency.__allocating_init(key:manager:)();
  v0[36] = v1;
  static AppDependencyManager.shared.getter();
  uint64_t v2 = AppDependency.__allocating_init(key:manager:)();
  v0[37] = v2;
  sub_1000AFA94(&qword_10094FF10);
  static AppDependencyManager.shared.getter();
  uint64_t v3 = AppDependency.__allocating_init(key:manager:)();
  v0[38] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[39] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100586850;
  return sub_10024FB5C(v1, v2, v3);
}

uint64_t sub_100586850(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 320) = a1;
  *(void *)(v3 + 328) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1004D300C;
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v4 = sub_100586988;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100586988()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    long long v3 = *(_OWORD *)(v1 + 32);
    long long v4 = *(_OWORD *)(v1 + 48);
    long long v5 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v0 + 64) = v5;
    *(_OWORD *)(v0 + 16) = v3;
    *(_OWORD *)(v0 + 32) = v4;
    long long v6 = *(_OWORD *)(v1 + 96);
    long long v7 = *(_OWORD *)(v1 + 112);
    long long v8 = *(_OWORD *)(v1 + 144);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v1 + 128);
    *(_OWORD *)(v0 + 128) = v8;
    *(_OWORD *)(v0 + 80) = v6;
    *(_OWORD *)(v0 + 96) = v7;
    long long v9 = *(_OWORD *)(v1 + 160);
    long long v10 = *(_OWORD *)(v1 + 176);
    long long v11 = *(_OWORD *)(v1 + 208);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v1 + 192);
    *(_OWORD *)(v0 + 192) = v11;
    *(_OWORD *)(v0 + 144) = v9;
    *(_OWORD *)(v0 + 160) = v10;
    long long v12 = *(_OWORD *)(v1 + 224);
    long long v13 = *(_OWORD *)(v1 + 240);
    long long v14 = *(_OWORD *)(v1 + 272);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v1 + 256);
    *(_OWORD *)(v0 + 256) = v14;
    *(_OWORD *)(v0 + 208) = v12;
    *(_OWORD *)(v0 + 224) = v13;
    long long v15 = *(void **)(v0 + 240);
    sub_1001B5A54(v0 + 16);
    sub_1005859B4(v15, 1);
    int64_t v17 = v16;
    if (v16[2])
    {
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1001B5CC0(v0 + 16);
    }
    else
    {
      unint64_t v20 = (long long *)(v1 + 288);
      while (1)
      {
        swift_bridgeObjectRelease();
        sub_1005859B4(v15, 0);
        int64_t v17 = v21;
        sub_1001B5CC0(v0 + 16);
        if (v17[2]) {
          break;
        }
        swift_bridgeObjectRelease();
        if (!--v2) {
          goto LABEL_4;
        }
        long long v22 = *v20;
        long long v23 = v20[1];
        long long v24 = v20[3];
        *(_OWORD *)(v0 + 48) = v20[2];
        *(_OWORD *)(v0 + 64) = v24;
        *(_OWORD *)(v0 + 16) = v22;
        *(_OWORD *)(v0 + 32) = v23;
        long long v25 = v20[4];
        long long v26 = v20[5];
        long long v27 = v20[7];
        *(_OWORD *)(v0 + 112) = v20[6];
        *(_OWORD *)(v0 + 128) = v27;
        *(_OWORD *)(v0 + 80) = v25;
        *(_OWORD *)(v0 + 96) = v26;
        long long v28 = v20[8];
        long long v29 = v20[9];
        long long v30 = v20[11];
        *(_OWORD *)(v0 + 176) = v20[10];
        *(_OWORD *)(v0 + 192) = v30;
        *(_OWORD *)(v0 + 144) = v28;
        *(_OWORD *)(v0 + 160) = v29;
        long long v31 = v20[12];
        long long v32 = v20[13];
        long long v33 = v20[15];
        *(_OWORD *)(v0 + 240) = v20[14];
        *(_OWORD *)(v0 + 256) = v33;
        *(_OWORD *)(v0 + 208) = v31;
        *(_OWORD *)(v0 + 224) = v32;
        long long v15 = *(void **)(v0 + 240);
        sub_1001B5A54(v0 + 16);
        sub_1005859B4(v15, 1);
        int64_t v17 = v34;
        v20 += 16;
        if (v34[2]) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_4:
    swift_bridgeObjectRelease();
    int64_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v18 = *(uint64_t (**)(void *))(v0 + 8);
  return v18(v17);
}

char *sub_100586B68(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  long long v11 = v4;
  id v12 = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v13 = [v12 layer];
  [v13 setCornerRadius:6.0];

  [v12 setClipsToBounds:1];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v9] = v12;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
  long long v14 = [(char *)[super initWithFrame:a1 a2:a2 a3:a3 a4:a4]];
  id v15 = [v14 contentView];
  [v15 addSubview:*(void *)&v14[OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView]];

  sub_100586CF0();
  return v14;
}

void sub_100586CF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100751160;
  long long v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView];
  id v5 = [v4 topAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 topAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7];
  *(void *)(v3 + 32) = v8;
  id v9 = [v4 leadingAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 leadingAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11];
  *(void *)(v3 + 40) = v12;
  id v13 = [v4 trailingAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 trailingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15];
  *(void *)(v3 + 48) = v16;
  id v17 = [v4 bottomAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 bottomAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19];
  *(void *)(v3 + 56) = v20;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_100586FD4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailGuidedRunMediaMomentArtworkCell()
{
  return self;
}

void sub_10058703C()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp44WorkoutDetailGuidedRunMediaMomentArtworkCell_imageView;
  id v2 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v3 = [v2 layer];
  [v3 setCornerRadius:6.0];

  [v2 setClipsToBounds:1];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t *sub_100587130(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_10058724C(uint64_t a1)
{
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_1005872EC(void *a1, void *a2, uint64_t a3)
{
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

void *sub_1005873BC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094DFC8);
    sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1005874B0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_100587584(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094DFC8);
    uint64_t v6 = sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_100587678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10058768C);
}

uint64_t sub_10058768C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094DFD0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100587750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100587764);
}

uint64_t sub_100587764(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094DFD0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutChartableMetricsView()
{
  uint64_t result = qword_100962C68;
  if (!qword_100962C68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100587870()
{
  sub_1001BC5F4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100587908()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100587924()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_100587948(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100961D50);
  __chkstk_darwin(v2 - 8);
  sub_100588DCC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return EnvironmentValues.editMode.setter();
}

uint64_t sub_1005879D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v60 = a2;
  uint64_t v3 = type metadata accessor for WorkoutChartableMetricsView();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v56 = *(void *)(v57 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10094E150);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  uint64_t v59 = v6;
  __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  __chkstk_darwin(v8);
  uint64_t v49 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EditMode();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100961D50);
  __chkstk_darwin(v14 - 8);
  id v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100962CC8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_100962CB0);
  __chkstk_darwin(v21);
  long long v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_100962CA8);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v52 = v24;
  uint64_t v53 = v25;
  __chkstk_darwin(v24);
  uint64_t v61 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a1;
  sub_1000AFA94(&qword_100962CD0);
  sub_100588C60();
  List<>.init(content:)();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for EditMode.active(_:), v10);
  static Binding.constant(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v28 = sub_1000AFA94(&qword_100961D88);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v16, 0, 1, v28);
  long long v29 = (uint64_t *)&v23[*(int *)(v21 + 36)];
  uint64_t v30 = sub_1000AFA94(&qword_100961D48);
  sub_100588DCC((uint64_t)v16, (uint64_t)v29 + *(int *)(v30 + 28));
  *long long v29 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v20, v17);
  sub_10008DB18((uint64_t)v16, &qword_100961D50);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v31 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v33 = v32;
  LOBYTE(v29) = v34 & 1;
  uint64_t v35 = v49;
  uint64_t v36 = v50;
  uint64_t v37 = v51;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v51);
  unint64_t v38 = sub_100588B94();
  View.navigationBarTitle(_:displayMode:)();
  sub_1000A06C0(v31, v33, (char)v29);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
  sub_10008DB18((uint64_t)v23, &qword_100962CB0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v39 = v54;
  sub_1005890F0(v48, v54, (uint64_t (*)(void))type metadata accessor for WorkoutChartableMetricsView);
  unint64_t v40 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v41 = swift_allocObject();
  sub_100588E38(v39, v41 + v40);
  long long v42 = v55;
  Button<>.init(_:action:)();
  uint64_t v63 = v21;
  unint64_t v64 = v38;
  swift_getOpaqueTypeConformance2();
  sub_1000A132C(&qword_10094E158, &qword_10094E150);
  long long v43 = v42;
  uint64_t v44 = v52;
  uint64_t v45 = v58;
  Swift::String v46 = v61;
  View.navigationBarItems<A>(trailing:)();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v46, v44);
}

uint64_t sub_100588154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for WorkoutChartableMetricsView();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100962CE8);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(v4 + 28);
  uint64_t v24 = a1;
  uint64_t v12 = *(void *)(a1 + v11);
  swift_beginAccess();
  uint64_t v30 = *(void *)(v12 + 16);
  long long v23 = type metadata accessor for WorkoutChartableMetricsView;
  sub_1005890F0(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WorkoutChartableMetricsView);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  sub_100588E38((uint64_t)v7, v14 + v13);
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_100962CF0);
  sub_1000AFA94(&qword_100961D90);
  sub_1000A132C(&qword_100962CF8, &qword_100962CF0);
  uint64_t v28 = &type metadata for Text;
  long long v29 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  sub_100588F80();
  ForEach<>.init(_:content:)();
  sub_1005890F0(v24, (uint64_t)v7, (uint64_t (*)(void))v23);
  uint64_t v15 = swift_allocObject();
  sub_100588E38((uint64_t)v7, v15 + v13);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100588FD8;
  *(void *)(v16 + 24) = v15;
  uint64_t v18 = v25;
  uint64_t v17 = v26;
  uint64_t v19 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v27, v10, v26);
  id v20 = (void *)(v19 + *(int *)(sub_1000AFA94(&qword_100962CD0) + 36));
  *id v20 = sub_1005890BC;
  v20[1] = v16;
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v10, v17);
}

uint64_t sub_1005884AC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000AFA94(&qword_100961D90);
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  __chkstk_darwin(v7);
  uint64_t v45 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *a1;
  uint64_t v48 = sub_100651900();
  uint64_t v49 = v10;
  sub_1000A06D0();
  uint64_t v11 = Text.init<A>(_:)();
  uint64_t v13 = v12;
  LODWORD(v15) = v14;
  type metadata accessor for WorkoutChartableMetricsView();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v16 = v48;
  if (*(void *)(v48 + 16) && (uint64_t v17 = sub_10052A09C(v9), (v18 & 1) != 0))
  {
    uint64_t v19 = v17;
    int v43 = v15;
    uint64_t v15 = *(void *)(v16 + 56);
    uint64_t v20 = type metadata accessor for WorkoutChartViewModel(0);
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v44 = v13;
    uint64_t v22 = a2;
    uint64_t v23 = v21;
    uint64_t v24 = v15 + *(void *)(v21 + 72) * v19;
    LOBYTE(v15) = v43;
    sub_1005890F0(v24, (uint64_t)v6, type metadata accessor for WorkoutChartViewModel);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56))(v6, 0, 1, v20);
    a2 = v22;
    uint64_t v13 = v44;
  }
  else
  {
    uint64_t v20 = type metadata accessor for WorkoutChartViewModel(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for WorkoutChartViewModel(0);
  int v25 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v6, 1, v20);
  sub_10008DB18((uint64_t)v6, &qword_10094D448);
  if (v25 == 1) {
    static Color.gray.getter();
  }
  else {
    static Color.white.getter();
  }
  char v26 = v15 & 1;
  uint64_t v27 = Text.foregroundColor(_:)();
  uint64_t v29 = v28;
  char v31 = v30;
  swift_release();
  char v32 = v31 & 1;
  sub_1000A06C0(v11, v13, v26);
  swift_bridgeObjectRelease();
  static Font.headline.getter();
  uint64_t v33 = Text.font(_:)();
  uint64_t v35 = v34;
  char v37 = v36;
  uint64_t v39 = v38;
  swift_release();
  v37 &= 1u;
  sub_1000A06C0(v27, v29, v32);
  swift_bridgeObjectRelease();
  uint64_t v48 = v33;
  uint64_t v49 = v35;
  char v50 = v37;
  uint64_t v51 = v39;
  static VerticalEdge.Set.all.getter();
  unint64_t v40 = v45;
  View.listRowSeparator(_:edges:)();
  sub_1000A06C0(v33, v35, v37);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v46 + 32))(a2, v40, v47);
}

uint64_t sub_1005888E0()
{
  return swift_endAccess();
}

uint64_t sub_1005889A0()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004E7580((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100588A6C()
{
  return NavigationView.init(content:)();
}

uint64_t sub_100588B8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1005879D4(*(void *)(v1 + 16), a1);
}

unint64_t sub_100588B94()
{
  unint64_t result = qword_100962CB8;
  if (!qword_100962CB8)
  {
    sub_1000A1370(&qword_100962CB0);
    sub_1000A132C(&qword_100962CC0, &qword_100962CC8);
    sub_1000A132C(&qword_100961D40, &qword_100961D48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962CB8);
  }
  return result;
}

uint64_t sub_100588C58@<X0>(uint64_t a1@<X8>)
{
  return sub_100588154(*(void *)(v1 + 16), a1);
}

unint64_t sub_100588C60()
{
  unint64_t result = qword_100962CD8;
  if (!qword_100962CD8)
  {
    sub_1000A1370(&qword_100962CD0);
    sub_100588D00();
    sub_1000A132C(&qword_100961D78, &qword_100961D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962CD8);
  }
  return result;
}

unint64_t sub_100588D00()
{
  unint64_t result = qword_100962CE0;
  if (!qword_100962CE0)
  {
    sub_1000A1370(&qword_100962CE8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962CE0);
  }
  return result;
}

uint64_t sub_100588DA4()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_100588DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100961D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100588E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutChartableMetricsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100588E9C()
{
  type metadata accessor for WorkoutChartableMetricsView();

  return sub_1005889A0();
}

uint64_t sub_100588F00@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for WorkoutChartableMetricsView();

  return sub_1005884AC(a1, a2);
}

unint64_t sub_100588F80()
{
  unint64_t result = qword_100962D00;
  if (!qword_100962D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962D00);
  }
  return result;
}

uint64_t sub_100588FD8()
{
  type metadata accessor for WorkoutChartableMetricsView();

  return sub_1005888E0();
}

uint64_t sub_100589058(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, void))
{
  return a3(a1, *a2);
}

uint64_t sub_100589084()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005890BC(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

uint64_t sub_1005890F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100589158()
{
  return sub_1000A132C(&qword_100962D10, &qword_100962D18);
}

ValueMetadata *type metadata accessor for LinearFunction()
{
  return &type metadata for LinearFunction;
}

ValueMetadata *type metadata accessor for FitLine()
{
  return &type metadata for FitLine;
}

uint64_t getEnumTagSinglePayload for MannKendallParameters(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MannKendallParameters(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MannKendallParameters()
{
  return &type metadata for MannKendallParameters;
}

uint64_t sub_100589218(uint64_t a1)
{
  uint64_t v8 = a1;
  swift_bridgeObjectRetain();
  sub_100589B04(&v8);
  uint64_t v2 = v8;
  uint64_t v3 = sub_1001E564C(a1)[2];
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 - 1;
  if (v3 < 1) {
    uint64_t v4 = v3;
  }
  unint64_t v5 = v4 >> 1;
  if (v3) {
    unint64_t v5 = (unint64_t)v3 >> 1;
  }
  unint64_t v6 = *(void *)(v2 + 16);
  if (v6)
  {
    if (v5 < v6) {
      return swift_release();
    }
    goto LABEL_12;
  }
  if (v5 >= v6)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v5 + 1 < v6) {
    return swift_release();
  }
LABEL_13:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100589308()
{
  double v1 = *(double *)(v0 + 32);
  double v2 = v1 * 100.0;
  double v3 = (1.0 - v1) * 100.0;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1007526C0;
  uint64_t v5 = *(void *)(v0 + 8);
  *(void *)(v4 + 56) = &type metadata for Double;
  *(void *)(v4 + 64) = &protocol witness table for Double;
  *(void *)(v4 + 32) = v5;
  uint64_t v6 = *(void *)(v0 + 24);
  *(void *)(v4 + 96) = &type metadata for Double;
  *(void *)(v4 + 104) = &protocol witness table for Double;
  *(void *)(v4 + 72) = v6;
  *(void *)(v4 + 136) = &type metadata for Double;
  *(void *)(v4 + 144) = &protocol witness table for Double;
  *(double *)(v4 + 112) = v2;
  *(void *)(v4 + 176) = &type metadata for Double;
  *(void *)(v4 + 184) = &protocol witness table for Double;
  *(double *)(v4 + 152) = v3;

  return String.init(format:_:)();
}

uint64_t sub_1005893CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    uint64_t v19 = _swiftEmptyDictionarySingleton;
LABEL_23:
    uint64_t v24 = swift_bridgeObjectRetain();
    unint64_t v25 = sub_10058A474(v24, (uint64_t)v19);
    swift_bridgeObjectRelease_n();
    return v25;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = _swiftEmptyDictionarySingleton;
  while (1)
  {
    double v5 = *(double *)(a1 + 8 * v3 + 32);
    uint64_t v6 = v4[2];
    if (v6)
    {
      unint64_t v7 = sub_100529C18(*(double *)(a1 + 8 * v3 + 32));
      if (v8) {
        uint64_t v6 = *(void *)(v4[7] + 8 * v7);
      }
      else {
        uint64_t v6 = 0;
      }
    }
    uint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = sub_100529C18(v5);
    uint64_t v13 = v4[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_25;
    }
    char v16 = v11;
    if (v4[3] >= v15)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = v4;
        if (v11) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1004F3428();
        uint64_t v19 = v4;
        if (v16) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1004EA978(v15, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = sub_100529C18(v5);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_27;
      }
      unint64_t v12 = v17;
      uint64_t v19 = v4;
      if (v16)
      {
LABEL_3:
        *(void *)(v19[7] + 8 * v12) = v9;
        goto LABEL_4;
      }
    }
    v19[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v20 = 8 * v12;
    *(double *)(v19[6] + v20) = v5;
    *(void *)(v19[7] + v20) = v9;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_26;
    }
    v19[2] = v23;
LABEL_4:
    ++v3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v19;
    if (v1 == v3)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

double sub_1005895D4(int64x2_t *a1, uint64_t a2)
{
  unint64_t v2 = a1[1].u64[0];
  if (!v2)
  {
    double v4 = 0.0;
    return (((double)a2 + -1.0) * (double)a2 * ((double)a2 + (double)a2 + 5.0) - v4) / 18.0;
  }
  if (v2 < 4)
  {
    uint64_t v3 = 0;
    double v4 = 0.0;
LABEL_8:
    unint64_t v17 = v2 - v3;
    char v18 = &a1[2].i64[v3];
    do
    {
      uint64_t v19 = *v18++;
      double v4 = v4 + ((double)v19 + -1.0) * (double)v19 * ((double)v19 + (double)v19 + 5.0);
      --v17;
    }
    while (v17);
    return (((double)a2 + -1.0) * (double)a2 * ((double)a2 + (double)a2 + 5.0) - v4) / 18.0;
  }
  uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFCLL;
  double v5 = a1 + 3;
  double v4 = 0.0;
  __asm
  {
    FMOV            V1.2D, #-1.0
    FMOV            V2.2D, #5.0
  }
  uint64_t v12 = v2 & 0x7FFFFFFFFFFFFFFCLL;
  do
  {
    float64x2_t v13 = vcvtq_f64_s64(v5[-1]);
    float64x2_t v14 = vcvtq_f64_s64(*v5);
    float64x2_t v15 = vmulq_f64(vmulq_f64(vaddq_f64(v13, _Q1), v13), vaddq_f64(vaddq_f64(v13, v13), _Q2));
    float64x2_t v16 = vmulq_f64(vmulq_f64(vaddq_f64(v14, _Q1), v14), vaddq_f64(vaddq_f64(v14, v14), _Q2));
    double v4 = v4 + v15.f64[0] + v15.f64[1] + v16.f64[0] + v16.f64[1];
    v5 += 2;
    v12 -= 4;
  }
  while (v12);
  if (v2 != v3) {
    goto LABEL_8;
  }
  return (((double)a2 + -1.0) * (double)a2 * ((double)a2 + (double)a2 + 5.0) - v4) / 18.0;
}

double sub_1005896DC(int64x2_t *a1, uint64_t a2)
{
  unint64_t v2 = a1[1].u64[0];
  if (!v2)
  {
    double v5 = 0.0;
    goto LABEL_11;
  }
  if (v2 >= 4)
  {
    uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFCLL;
    uint64_t v6 = a1 + 3;
    double v4 = 0.0;
    __asm { FMOV            V1.2D, #-1.0 }
    uint64_t v12 = v2 & 0x7FFFFFFFFFFFFFFCLL;
    do
    {
      float64x2_t v13 = vcvtq_f64_s64(v6[-1]);
      float64x2_t v14 = vcvtq_f64_s64(*v6);
      float64x2_t v15 = vmulq_f64(vaddq_f64(v13, _Q1), v13);
      float64x2_t v16 = vmulq_f64(vaddq_f64(v14, _Q1), v14);
      double v4 = v4 + v15.f64[0] + v15.f64[1] + v16.f64[0] + v16.f64[1];
      v6 += 2;
      v12 -= 4;
    }
    while (v12);
    if (v2 == v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = 0;
    double v4 = 0.0;
  }
  unint64_t v17 = v2 - v3;
  char v18 = &a1[2].i64[v3];
  do
  {
    uint64_t v19 = *v18++;
    double v4 = v4 + ((double)v19 + -1.0) * (double)v19;
    --v17;
  }
  while (v17);
LABEL_10:
  double v5 = v4 * 0.5;
LABEL_11:
  double v20 = ((double)a2 + -1.0) * (double)a2 * 0.5;
  double result = sqrt(v20) * sqrt(v20 - v5);
  if (fabs(result) < 2.22044605e-16) {
    return 1.0;
  }
  return result;
}

uint64_t sub_1005897D4()
{
  double v1 = *v0 * 86400.0;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1007509E0;
  *(void *)(v2 + 56) = &type metadata for Double;
  *(void *)(v2 + 64) = &protocol witness table for Double;
  *(double *)(v2 + 32) = v1;

  return String.init(format:_:)();
}

double sub_100589864(uint64_t a1, double a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_1001C8E34(0, v2, 0);
    unint64_t v5 = _swiftEmptyArrayStorage[2];
    uint64_t v6 = (double *)(a1 + 40);
    do
    {
      double v7 = *(v6 - 1);
      double v8 = *v6;
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v5 >= v9 >> 1) {
        sub_1001C8E34(v9 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      *(double *)&_swiftEmptyArrayStorage[v5 + 4] = v8 - v7 * a2;
      v6 += 2;
      ++v5;
      --v2;
    }
    while (v2);
  }
  sub_100589218((uint64_t)_swiftEmptyArrayStorage);
  double v11 = v10;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t *sub_10058995C@<X0>(uint64_t *result@<X0>, double *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)a2 + 1;
  if (__OFADD__(*(void *)a2, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7 < v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v5 < 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = *result;
  if (v5 == v7)
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = _swiftEmptyArrayStorage;
LABEL_6:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001E4098((uint64_t)v9);
    swift_bridgeObjectRelease();
    double result = (uint64_t *)swift_bridgeObjectRelease();
    *a4 = v8;
    return result;
  }
  if (v5 < (unint64_t)v7)
  {
    double v10 = a2[1];
    double v11 = a2[2];
    swift_bridgeObjectRetain();
    uint64_t v12 = ~v4 + v7;
    float64x2_t v13 = (double *)(a3 + 16 * v4 + 56);
    float64x2_t v14 = _swiftEmptyArrayStorage;
    unint64_t v9 = _swiftEmptyArrayStorage;
    do
    {
      double v15 = *(v13 - 1);
      double v16 = *v13;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v9 = sub_100087DFC(0, v14[2] + 1, 1, v14);
      }
      unint64_t v18 = v9[2];
      unint64_t v17 = v9[3];
      if (v18 >= v17 >> 1) {
        unint64_t v9 = sub_100087DFC((void *)(v17 > 1), v18 + 1, 1, v9);
      }
      v9[2] = v18 + 1;
      *(double *)&v9[v18 + 4] = (v16 - v11) / (v15 - v10);
      swift_bridgeObjectRelease();
      v13 += 2;
      float64x2_t v14 = v9;
      --v12;
    }
    while (v12);
    goto LABEL_6;
  }
LABEL_18:
  __break(1u);
  return result;
}

Swift::Int sub_100589B04(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001EEFCC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100589B70(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100589B70(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v83 = *(double *)(v81 + 8 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(void *)(v85 + 8) = *(void *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v97 = result;
  Swift::Int v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      double v11 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          uint64_t v88 = v11;
          unint64_t v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_10058A204((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(void *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v88 = sub_1001EEF68((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          uint64_t v92 = &v88[16 * v87 + 32];
          *(void *)uint64_t v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          double v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      v96[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    Swift::Int v3 = v98;
    uint64_t v96 = (void *)v7;
    __dst = (double *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v94 = v2;
  uint64_t v95 = *v2 - 8;
  double v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v99 = *v2;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      double v14 = *(double *)(v10 + 8 * v9);
      double v15 = *(double *)(v10 + 8 * v13);
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        double v16 = v14;
        while (1)
        {
          double v17 = v16;
          double v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          unint64_t v18 = (uint64_t *)(v95 + 8 * v9);
          Swift::Int v19 = v9;
          Swift::Int v20 = v13;
          uint64_t v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              uint64_t v22 = *v21;
              *uint64_t v21 = *v18;
              *unint64_t v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    Swift::Int v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      Swift::Int v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (double *)(v95 + 8 * v9);
      do
      {
        double v25 = *(double *)(v10 + 8 * v9);
        Swift::Int v26 = v13;
        uint64_t v27 = v24;
        do
        {
          double v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *uint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      Swift::Int v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v11 = sub_1001EE868(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      id v79 = sub_1001EE868((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      double v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    char v31 = v11 + 32;
    char v32 = &v11[16 * v30 + 32];
    *(void *)char v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          uint64_t v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            long long v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        uint64_t v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        unint64_t v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        uint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        uint64_t v75 = v31;
        uint64_t v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_10058A204((double *)(v10 + 8 * *(void *)v73), (double *)(v10 + 8 * *(void *)v76), v10 + 8 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        char v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10058A204(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  Swift::Int v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      double v16 = &v4[v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        double v17 = (double *)(a3 - 8);
        while (1)
        {
          unint64_t v18 = v17 + 1;
          Swift::Int v19 = v6 - 1;
          double v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *double v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *double v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    double v14 = &v4[v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          Swift::Int v23 = ++v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1001EEB24((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10058A474(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = _swiftEmptyArrayStorage;
  while (1)
  {
    while (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      if (*(void *)(a2 + 16)) {
        goto LABEL_20;
      }
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v12 >= v10) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    if (!v17) {
      break;
    }
LABEL_19:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
    if (*(void *)(a2 + 16))
    {
LABEL_20:
      double v19 = *(double *)(*(void *)(a1 + 48) + 8 * v15);
      unint64_t result = sub_100529C18(v19);
      if (v20)
      {
        uint64_t v21 = *(void *)(a2 + 56);
        if (*(uint64_t *)(v21 + 8 * result) >= 2)
        {
          unint64_t result = sub_100529C18(v19);
          if (v22)
          {
            uint64_t v27 = v3;
            uint64_t v23 = *(void *)(v21 + 8 * result);
            unint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              unint64_t result = (unint64_t)sub_1001E7A8C(0, v13[2] + 1, 1, v13);
              uint64_t v13 = (void *)result;
            }
            unint64_t v25 = v13[2];
            unint64_t v24 = v13[3];
            unint64_t v26 = v25 + 1;
            if (v25 >= v24 >> 1)
            {
              unint64_t result = (unint64_t)sub_1001E7A8C((void *)(v24 > 1), v25 + 1, 1, v13);
              unint64_t v26 = v25 + 1;
              uint64_t v13 = (void *)result;
            }
            void v13[2] = v26;
            v13[v25 + 4] = v23;
            uint64_t v3 = v27;
          }
        }
      }
    }
  }
  int64_t v18 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v12 + 2;
  if (v12 + 2 >= v10) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v12 + 3;
  if (v12 + 3 >= v10) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_32:
    swift_release();
    return (unint64_t)v13;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
LABEL_18:
    int64_t v12 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10058A6A0@<X0>(uint64_t result@<X0>, double *a2@<X8>)
{
  uint64_t v4 = *(void *)(result + 16);
  if (!v4) {
    goto LABEL_46;
  }
  uint64_t v6 = (v4 - 1) & 0x7FFFFFFFFFFFFFFFLL;
  if (!v6)
  {
    double v13 = 0.0;
    goto LABEL_22;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v4 - 2;
  double v9 = 0.0;
  uint64_t v10 = 1;
  double v11 = 1.0;
  int64_t v12 = (double *)(result + 32);
  double v13 = 0.0;
  while (1)
  {
    if (v4 < (unint64_t)v10)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v10 != v4) {
      break;
    }
    double v13 = v13 + 0.0;
    if (v4 == v6) {
      goto LABEL_22;
    }
LABEL_5:
    int64_t v12 = (double *)(result + 32 + 8 * v10);
    ++v7;
    if (__OFADD__(v10++, 1)) {
      goto LABEL_45;
    }
  }
  double v15 = *v12;
  double v16 = 0.0;
  uint64_t v17 = v7;
  while (1)
  {
    double v18 = *(double *)(result + 40 + 8 * v17);
    if (vabdd_f64(v18, v15) < 2.22044605e-16)
    {
      double v16 = v16 + 0.0;
      if (v8 == v17) {
        goto LABEL_19;
      }
      goto LABEL_16;
    }
    if (v18 - v15 <= 0.0) {
      break;
    }
    double v16 = v16 + 1.0;
    if (v8 == v17) {
      goto LABEL_19;
    }
LABEL_16:
    uint64_t v19 = v17 + 2;
    if (v17 + 2 >= v10)
    {
      ++v17;
      if (v19 < v4) {
        continue;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
  double v16 = v16 + -1.0;
  if (v8 != v17) {
    goto LABEL_16;
  }
LABEL_19:
  double v13 = v13 + v16;
  if (v10 != v6) {
    goto LABEL_5;
  }
LABEL_22:
  char v20 = (int64x2_t *)sub_1005893CC(result);
  double v2 = sub_1005896DC(v20, v4);
  double v3 = sub_1005895D4(v20, v4);
  unint64_t result = swift_bridgeObjectRelease();
  if (v3 <= 0.0)
  {
    double v23 = 1.0;
    BOOL v22 = v13 <= 0.0;
    if (v13 != 0.0) {
      goto LABEL_27;
    }
    double v21 = 0.0;
  }
  else
  {
    double v21 = 0.0;
    BOOL v22 = v13 <= 0.0;
    double v23 = sqrt(v3);
    if (v13 != 0.0)
    {
LABEL_27:
      if (v22) {
        double v24 = 1.0;
      }
      else {
        double v24 = -1.0;
      }
      double v21 = v13 + v24;
    }
  }
  double v9 = v21 / v23;
  double v11 = fabs(v9);
  if (v11 <= 2.58)
  {
    if (v11 <= 2.33)
    {
      if (v11 <= 1.96)
      {
LABEL_38:
        if (v11 <= 1.645)
        {
          BOOL v22 = v11 <= 1.28;
          double v25 = 0.8;
          if (v22) {
            double v25 = 0.0;
          }
        }
        else
        {
          double v25 = 0.9;
        }
      }
      else
      {
        double v25 = 0.95;
      }
    }
    else
    {
      double v25 = 0.98;
    }
  }
  else
  {
    double v25 = 0.99;
  }
  *a2 = v13;
  a2[1] = v13 / v2;
  a2[2] = v3;
  a2[3] = v9;
  a2[4] = v25;
  return result;
}

unsigned char *storeEnumTagSinglePayload for MathError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10058A9C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MathError()
{
  return &type metadata for MathError;
}

unint64_t sub_10058AA00()
{
  unint64_t result = qword_100962D20;
  if (!qword_100962D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962D20);
  }
  return result;
}

char *sub_10058AA54(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp32TrophyCaseAwardDetailWorkoutCell_workoutContentView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for WorkoutsListContentView());
  double v11 = v4;
  id v12 = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v9] = v12;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailWorkoutCell();
  double v13 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC10FitnessApp32TrophyCaseAwardDetailWorkoutCell_workoutContentView];
  double v15 = v13;
  [v15 addSubview:v14];
  sub_10058AC3C();

  return v15;
}

void sub_10058AC3C()
{
  uint64_t v1 = v0;
  double v2 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100751160;
  unsigned int v4 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp32TrophyCaseAwardDetailWorkoutCell_workoutContentView];
  id v5 = [v4 topAnchor];
  id v6 = [v1 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = [v4 trailingAnchor];
  id v9 = [v1 trailingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v3 + 40) = v10;
  id v11 = [v4 leadingAnchor];
  id v12 = [v1 leadingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v3 + 48) = v13;
  id v14 = [v4 bottomAnchor];
  id v15 = [v1 bottomAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v3 + 56) = v16;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_10058AE8C(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v8 = *(unsigned char **)(v4 + OBJC_IVAR____TtC10FitnessApp32TrophyCaseAwardDetailWorkoutCell_workoutContentView);
  id v9 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workout];
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_workout] = a1;
  id v10 = a1;

  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_achievementCount] = a4;
  id v11 = *(void **)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_formattingManager];
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_formattingManager] = a3;
  id v12 = a3;

  v8[OBJC_IVAR____TtC10FitnessApp23WorkoutsListContentView_diveDisplayStyle] = 1;
  sub_100717ADC(v10, a2, v12, a4, 1, 0, 0);

  return [v8 configureWithCurrentWorkout];
}

id sub_10058AF6C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailWorkoutCell();
  [super dealloc];
}

uint64_t type metadata accessor for TrophyCaseAwardDetailWorkoutCell()
{
  return self;
}

id sub_10058B074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel] = 0;
  *(void *)&v3[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  if (a3)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for WorkoutDetailMapAndWeatherTableViewCell();
  id v7 = [super initWithStyle:a1 reuseIdentifier:v6];

  id v8 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100751040;
  id v10 = v7;
  id v11 = [v10 contentView];
  id v12 = [v11 heightAnchor];

  id v13 = [v12 constraintGreaterThanOrEqualToConstant:132.0];
  *(void *)(v9 + 32) = v13;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 activateConstraints:isa];

  return v10;
}

void sub_10058B340(void *a1, uint64_t a2, void *a3)
{
  id v6 = [a1 formattedDescriptionForWorkout:a2 context:@"DayViewDisplayContext"];
  id v7 = v6;
  if (v6)
  {
    id v8 = [v6 string];

    id v7 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = [a1 shareTextForWorkout:a2];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  if (v10) {
    uint64_t v15 = (uint64_t)v7;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v10) {
    uint64_t v16 = v10;
  }
  else {
    uint64_t v16 = 0xE000000000000000;
  }
  id v17 = sub_1000FCD04();
  type metadata accessor for ActivityType(0);
  uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  objc_allocWithZone((Class)type metadata accessor for WorkoutRouteViewController());
  id v19 = sub_100346DB4(a3, v15, v16, 1, v12, v14, v18);
  id v20 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v19];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong && (BOOL v22 = (void *)Strong, v23 = (void *)swift_unknownObjectWeakLoadStrong(), v22, v23))
  {
    uint64_t v24 = swift_allocObject();
    swift_beginAccess();
    double v25 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    void v27[4] = sub_10058D524;
    v27[5] = v24;
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 1107296256;
    void v27[2] = sub_100070394;
    v27[3] = &unk_1008CF588;
    unint64_t v26 = _Block_copy(v27);
    swift_release();
    [v23 presentViewController:v20 completion:v26];

    swift_unknownObjectRelease();
    _Block_release(v26);
  }
  else
  {
  }
}

void sub_10058B5EC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    objc_super v2 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      [v2 didPresentRouteView];
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10058B66C(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_10058D4C4;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008CF560;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10058D4CC((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v16);
}

void sub_10058B974(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void *)(Strong + OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel);
    swift_retain();

    if (v5)
    {
      swift_retain();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.setter();
    }
  }
  if (a2)
  {
    swift_beginAccess();
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      uint64_t v8 = *(void *)(v6 + OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel);
      swift_retain();
      id v9 = a2;

      if (v8)
      {
        swift_retain();
        swift_release();
        id v9 = v9;
        Image.init(uiImage:)();
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        static Published.subscript.setter();
        swift_release();
      }
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      uint64_t v12 = *(void *)(v10 + OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel);
      swift_retain();

      if (v12)
      {
        swift_retain();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.setter();
      }
    }
  }
}

id sub_10058BC44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailMapAndWeatherTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailMapAndWeatherTableViewCell()
{
  return self;
}

uint64_t sub_10058BD08(void *a1, id a2)
{
  if (!a2 || (id v3 = [a2 metadata]) == 0)
  {
    long long v25 = 0u;
    long long v26 = 0u;
    goto LABEL_10;
  }
  uint64_t v4 = v3;
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v5 + 16) || (unint64_t v8 = sub_1000DA1C0(v6, v7), (v9 & 1) == 0))
  {
    long long v25 = 0u;
    long long v26 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v5 + 56) + 32 * v8, (uint64_t)&v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v26 + 1))
  {
LABEL_10:
    sub_10008DB18((uint64_t)&v25, &qword_100955A00);
LABEL_11:
    id v10 = [a1 metadata];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(void *)(v12 + 16) && (unint64_t v15 = sub_1000DA1C0(v13, v14), (v16 & 1) != 0))
      {
        sub_10008F484(*(void *)(v12 + 56) + 32 * v15, (uint64_t)&v25);
      }
      else
      {
        long long v25 = 0u;
        long long v26 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v26 + 1))
      {
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_23;
        }
        goto LABEL_18;
      }
    }
    else
    {
      long long v25 = 0u;
      long long v26 = 0u;
    }
    sub_10008DB18((uint64_t)&v25, &qword_100955A00);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
LABEL_18:
  if (v23 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v24 != v17)
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v20)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    if (v23 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v24 != v21)
    {
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v18 = v22 ^ 1;
      return v18 & 1;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_23:
  char v18 = 0;
  return v18 & 1;
}

void sub_10058BFDC(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  id v179 = a4;
  uint64_t v9 = sub_1000AFA94(&qword_100962DA0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100962DA8);
  *(void *)&double v14 = __chkstk_darwin(v13 - 8).n128_u64[0];
  char v16 = (char *)&v175 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = a2;
  id v17 = [a3 waterTemperatureForWorkout:a1 workoutActivity:a2];
  NSString v191 = v5;
  id v182 = a3;
  uint64_t v178 = v9;
  uint64_t v181 = v10;
  id v180 = v12;
  if (v17)
  {
    char v18 = v17;
    id v19 = (id)_HKWeatherTemperatureUnit();
    if (!v19)
    {
      __break(1u);
      goto LABEL_71;
    }
    char v20 = v19;
    uint64_t v21 = self;
    [v18 doubleValueForUnit:v20];
    double v23 = v22;

    id v24 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v23];
    id v25 = [v21 stringWithNumber:v24 decimalPrecision:1];

    if (v25)
    {
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      unint64_t v29 = self;
      id v30 = [v29 mainBundle];
      NSString v31 = String._bridgeToObjectiveC()();
      id v32 = [v30 localizedStringForKey:v31 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1007509E0;
      *(void *)(v33 + 56) = &type metadata for String;
      *(void *)(v33 + 64) = sub_1000AA64C();
      *(void *)(v33 + 32) = v26;
      *(void *)(v33 + 40) = v28;
      uint64_t v188 = String.init(format:_:)();
      uint64_t v189 = v34;
      swift_bridgeObjectRelease();
      [a1 fiui_swimmingLocationType];
      id v35 = [v29 mainBundle];
      NSString v36 = String._bridgeToObjectiveC()();
      id v37 = [v35 localizedStringForKey:v36 value:0 table:0];

      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      *(void *)&long long v194 = v38;
      *((void *)&v194 + 1) = v40;
      sub_1000A06D0();
      uint64_t v41 = StringProtocol.localizedUppercase.getter();
      uint64_t v186 = v42;
      uint64_t v187 = v41;
      swift_bridgeObjectRelease();

      a3 = v182;
      uint64_t v43 = (void *)v190;
      uint64_t v5 = v191;
      char v44 = 0;
      uint64_t v184 = 0x80000001007CECA0;
      uint64_t v185 = (void *)0xD00000000000001CLL;
      int v183 = 1;
      goto LABEL_7;
    }
  }
  uint64_t v184 = 0;
  uint64_t v185 = 0;
  uint64_t v186 = 0;
  uint64_t v187 = 0;
  uint64_t v188 = 0;
  uint64_t v189 = 0;
  int v183 = 254;
  char v44 = 1;
  uint64_t v43 = (void *)v190;
LABEL_7:
  id v45 = [a3 weatherTemperatureForWorkout:a1 workoutActivity:v43];
  if (!v45)
  {
    uint64_t v65 = _swiftEmptyArrayStorage;
    if (v44) {
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  uint64_t v46 = v45;
  id v47 = (id)_HKWeatherTemperatureUnit();
  if (!v47)
  {
LABEL_71:
    sub_10058D46C(v185, v184, v187, v186, 0, 0, v188, v189, v183);
    __break(1u);
    return;
  }
  uint64_t v48 = v47;
  uint64_t v49 = self;
  [v46 doubleValueForUnit:v48];
  double v51 = v50;

  id v52 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v51];
  id v53 = [v49 stringWithNumber:v52 decimalPrecision:1];

  if (v53)
  {
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v56 = v55;

    uint64_t v57 = type metadata accessor for FitnessUILocalizationFeature();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v16, 1, 1, v57);
    String.fitnessUILocalizedString(feature:)();
    sub_10008DB18((uint64_t)v16, &qword_100962DA8);
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v58 = v43;
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_1007509E0;
    *(void *)(v59 + 56) = &type metadata for String;
    *(void *)(v59 + 64) = sub_1000AA64C();
    *(void *)(v59 + 32) = v54;
    *(void *)(v59 + 40) = v56;
    uint64_t v177 = String.init(format:_:)();
    uint64_t v176 = v60;
    swift_bridgeObjectRelease();
    uint64_t v61 = sub_1003EDE94(a1, v58);
    uint64_t v175 = v62;
    id v63 = [self mainBundle];
    NSString v64 = String._bridgeToObjectiveC()();
    id v66 = [v63 localizedStringForKey:v64 value:0 table:0];

    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v69 = v68;

    *(void *)&long long v194 = v67;
    *((void *)&v194 + 1) = v69;
    sub_1000A06D0();
    uint64_t v70 = StringProtocol.localizedUppercase.getter();
    uint64_t v72 = v71;
    swift_bridgeObjectRelease();
    uint64_t v65 = sub_1001E871C(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v74 = v65[2];
    unint64_t v73 = v65[3];
    if (v74 >= v73 >> 1) {
      uint64_t v65 = sub_1001E871C((void *)(v73 > 1), v74 + 1, 1, v65);
    }
    v65[2] = v74 + 1;
    uint64_t v75 = &v65[9 * v74];
    v75[4] = 0xD000000000000012;
    v75[5] = 0x80000001007CEC20;
    v75[6] = v70;
    v75[7] = v72;
    uint64_t v76 = v175;
    v75[8] = v61;
    v75[9] = v76;
    uint64_t v77 = v176;
    v75[10] = v177;
    v75[11] = v77;
    *((unsigned char *)v75 + 96) = 1;
    uint64_t v43 = (void *)v190;
    uint64_t v5 = v191;
    a3 = v182;
  }
  else
  {
    uint64_t v65 = _swiftEmptyArrayStorage;
  }

  if ((v44 & 1) == 0)
  {
LABEL_18:
    sub_1002AF84C(v185, v184, v187, v186, 0, 0, v188, v189, v183);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v65 = sub_1001E871C(0, v65[2] + 1, 1, v65);
    }
    unint64_t v79 = v65[2];
    unint64_t v78 = v65[3];
    if (v79 >= v78 >> 1) {
      uint64_t v65 = sub_1001E871C((void *)(v78 > 1), v79 + 1, 1, v65);
    }
    v65[2] = v79 + 1;
    uint64_t v80 = &v65[9 * v79];
    uint64_t v81 = v184;
    v80[4] = v185;
    v80[5] = v81;
    uint64_t v82 = v186;
    v80[6] = v187;
    v80[7] = v82;
    v80[8] = 0;
    v80[9] = 0;
    uint64_t v83 = v189;
    v80[10] = v188;
    v80[11] = v83;
    *((unsigned char *)v80 + 96) = v183;
  }
LABEL_23:
  id v84 = [a3 weatherHumidityForWorkout:a1 workoutActivity:v43];
  if (v84)
  {
    uint64_t v85 = v84;
    uint64_t v86 = self;
    id v87 = [self percentUnit];
    [v85 doubleValueForUnit:v87];
    double v89 = v88;

    id v90 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v89 / 100.0];
    id v91 = [v86 percentStringWithNumber:v90];

    if (v91)
    {
      uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v94 = v93;

      id v95 = [self mainBundle];
      NSString v96 = String._bridgeToObjectiveC()();
      id v97 = [v95 localizedStringForKey:v96 value:0 table:0];

      uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v100 = v99;

      *(void *)&long long v194 = v98;
      *((void *)&v194 + 1) = v100;
      sub_1000A06D0();
      uint64_t v101 = StringProtocol.localizedUppercase.getter();
      uint64_t v103 = v102;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v65 = sub_1001E871C(0, v65[2] + 1, 1, v65);
      }
      unint64_t v105 = v65[2];
      unint64_t v104 = v65[3];
      if (v105 >= v104 >> 1) {
        uint64_t v65 = sub_1001E871C((void *)(v104 > 1), v105 + 1, 1, v65);
      }
      v65[2] = v105 + 1;
      uint64_t v106 = &v65[9 * v105];
      *((_OWORD *)v106 + 2) = xmmword_10076C980;
      v106[6] = v101;
      v106[7] = v103;
      v106[8] = 0;
      v106[9] = 0;
      v106[10] = v92;
      v106[11] = v94;
      *((unsigned char *)v106 + 96) = 1;
      uint64_t v43 = (void *)v190;
      uint64_t v5 = v191;
      a3 = v182;
    }
  }
  id v107 = [a3 airQualityIndexForWorkout:a1 workoutActivity:v43];
  if (v107)
  {
    uint64_t v108 = v107;
    id v109 = [self stringWithNumber:v107 decimalPrecision:1];
    if (v109)
    {
      uint64_t v110 = v109;
      uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v113 = v112;

      id v114 = [self mainBundle];
      NSString v115 = String._bridgeToObjectiveC()();
      id v116 = [v114 localizedStringForKey:v115 value:0 table:0];

      uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v119 = v118;

      *(void *)&long long v194 = v117;
      *((void *)&v194 + 1) = v119;
      sub_1000A06D0();
      uint64_t v120 = StringProtocol.localizedUppercase.getter();
      uint64_t v122 = v121;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v65 = sub_1001E871C(0, v65[2] + 1, 1, v65);
      }
      unint64_t v124 = v65[2];
      unint64_t v123 = v65[3];
      if (v124 >= v123 >> 1) {
        uint64_t v65 = sub_1001E871C((void *)(v123 > 1), v124 + 1, 1, v65);
      }
      v65[2] = v124 + 1;
      uint64_t v125 = &v65[9 * v124];
      *((_OWORD *)v125 + 2) = xmmword_10076C990;
      v125[6] = v120;
      v125[7] = v122;
      v125[8] = 0;
      v125[9] = 0;
      v125[10] = v111;
      v125[11] = v113;
      *((unsigned char *)v125 + 96) = 1;
      uint64_t v43 = (void *)v190;
      uint64_t v5 = v191;
      a3 = v182;
    }
  }
  id v126 = [a3 locationForWorkout:a1 workoutActivity:v43];
  if (v126)
  {
    long long v127 = v126;
    if (sub_10058BD08(a1, v43))
    {
      id v128 = v127;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v65 = sub_1001E871C(0, v65[2] + 1, 1, v65);
      }
      unint64_t v130 = v65[2];
      unint64_t v129 = v65[3];
      if (v130 >= v129 >> 1) {
        uint64_t v65 = sub_1001E871C((void *)(v129 > 1), v130 + 1, 1, v65);
      }
      v65[2] = v130 + 1;
      id v131 = &v65[9 * v130];
      v131[4] = v127;
      *(_OWORD *)(v131 + 5) = 0u;
      *(_OWORD *)(v131 + 7) = 0u;
      *(_OWORD *)(v131 + 9) = 0u;
      v131[11] = 0;
      *((unsigned char *)v131 + 96) = 0x80;
    }
  }
  uint64_t v132 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v133 = (void *)swift_allocObject();
  v133[2] = a3;
  v133[3] = a1;
  uint64_t v134 = v179;
  v133[4] = v179;
  v133[5] = v132;
  type metadata accessor for WorkoutDetailMapView.ViewModel();
  swift_allocObject();
  id v135 = a3;
  id v136 = a1;
  id v137 = v134;
  uint64_t v138 = sub_10051FEEC(1, 0, (uint64_t)sub_10058D400, (uint64_t)v133);
  type metadata accessor for WorkoutDetailMapAndWeatherView.ViewModel();
  uint64_t v139 = swift_allocObject();
  *(void *)(v139 + 16) = v138;
  *(void *)(v139 + 24) = v65;
  sub_10058D4CC(&qword_100962DB0, (void (*)(uint64_t))type metadata accessor for WorkoutDetailMapAndWeatherView.ViewModel);
  swift_retain();
  swift_retain();
  uint64_t v190 = ObservedObject.init(wrappedValue:)();
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_mapAndWeatherViewModel] = v139;
  swift_retain();
  swift_release();
  id v140 = [v136 metadata];
  if (!v140)
  {
    long long v194 = 0u;
    long long v195 = 0u;
LABEL_57:
    sub_10008DB18((uint64_t)&v194, &qword_100955A00);
    goto LABEL_58;
  }
  char v141 = v140;
  uint64_t v142 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v143 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v142 + 16) && (unint64_t v145 = sub_1000DA1C0(v143, v144), (v146 & 1) != 0))
  {
    sub_10008F484(*(void *)(v142 + 56) + 32 * v145, (uint64_t)&v194);
  }
  else
  {
    long long v194 = 0u;
    long long v195 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v191;
  if (!*((void *)&v195 + 1)) {
    goto LABEL_57;
  }
  sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_58:
    uint64_t v149 = v178;
    goto LABEL_59;
  }
  id v147 = v193;
  unsigned int v148 = [v193 BOOLValue];
  uint64_t v149 = v178;
  if (v148)
  {
    uint64_t v150 = type metadata accessor for WorkoutExtendedModePathRenderer();
    long long v151 = (objc_class *)type metadata accessor for WorkoutRouteMapGenerator();
    long long v152 = objc_allocWithZone(v151);
    v152[OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive] = 0;
    *(void *)&v152[OBJC_IVAR___CHWorkoutRouteMapGenerator_pinWidth] = 0x402E000000000000;
    *(void *)&v152[OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings] = 0;
    *(void *)&v152[OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter] = 0;
    id v153 = &v152[OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize];
    *(void *)id v153 = 0;
    *((void *)v153 + 1) = 0;
    v153[16] = 1;
    *(void *)&v152[OBJC_IVAR___CHWorkoutRouteMapGenerator_pathRendererClass] = v150;
    v192.receiver = v152;
    v192.super_class = v151;
    uint64_t v5 = v191;
    id v154 = [super init];
    NSString v155 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator];
    *(void *)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator] = v154;

    goto LABEL_60;
  }

LABEL_59:
  uint64_t v156 = type metadata accessor for WorkoutGradientPathRenderer();
  uint64_t v157 = (objc_class *)type metadata accessor for WorkoutRouteMapGenerator();
  uint64_t v158 = objc_allocWithZone(v157);
  v158[OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive] = 0;
  *(void *)&v158[OBJC_IVAR___CHWorkoutRouteMapGenerator_pinWidth] = 0x402E000000000000;
  *(void *)&v158[OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings] = 0;
  *(void *)&v158[OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter] = 0;
  uint64_t v159 = &v158[OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize];
  *(void *)uint64_t v159 = 0;
  *((void *)v159 + 1) = 0;
  v159[16] = 1;
  *(void *)&v158[OBJC_IVAR___CHWorkoutRouteMapGenerator_pathRendererClass] = v156;
  v197.receiver = v158;
  v197.super_class = v157;
  id v160 = [super init];
  NSString v155 = *(void **)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator];
  *(void *)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator] = v160;
LABEL_60:

  id v161 = [v136 workoutActivityType];
  uint64_t v162 = OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator;
  if (v161 == (id)84)
  {
    uint64_t v163 = *(void *)&v5[OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator];
    if (v163)
    {
      *(unsigned char *)(v163 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) = 1;
      uint64_t v162 = OBJC_IVAR___CHWorkoutDetailMapAndWeatherTableViewCell_snapshotGenerator;
    }
  }
  uint64_t v164 = *(void *)&v5[v162];
  if (v164)
  {
    id v165 = *(void **)(v164 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
    *(void *)(v164 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings) = v137;
    id v166 = v137;

    uint64_t v167 = *(void **)&v5[v162];
    if (v167)
    {
      uint64_t v168 = qword_10094ADF8;
      id v169 = v167;
      if (v168 != -1) {
        swift_once();
      }
      double v170 = *(double *)&qword_1009982E8;
      double v171 = *(double *)&qword_1009982F0;
      sub_10007E2D8(0, &qword_100962DB8);
      id v172 = (void *)static UITraitCollection.withSystemPreferredContentSizeCategory.getter();
      uint64_t v173 = v5;
      sub_100653FCC((uint64_t)v172, (uint64_t)v169, v173, v170, v171, 3.0, 16.0, 16.0, 16.0, 16.0);
    }
  }
  __chkstk_darwin(v161);
  sub_10058D418();
  NSString v174 = v180;
  UIHostingConfiguration<>.init(content:)();
  static Edge.Set.all.getter();
  *((void *)&v195 + 1) = v149;
  uint64_t v196 = sub_1000A132C(qword_100962DC8, &qword_100962DA0);
  sub_1000B1710((uint64_t *)&v194);
  UIHostingConfiguration.margins(_:_:)();
  (*(void (**)(char *, uint64_t))(v181 + 8))(v174, v149);
  UITableViewCell.contentConfiguration.setter();
  sub_10058D46C(v185, v184, v187, v186, 0, 0, v188, v189, v183);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_10058D378()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10058D3B0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10058D400()
{
  sub_10058B340(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10058D40C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_retain();
}

unint64_t sub_10058D418()
{
  unint64_t result = qword_100962DC0;
  if (!qword_100962DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962DC0);
  }
  return result;
}

void sub_10058D46C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 <= 0xFDu) {
    sub_1002AF90C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
}

uint64_t sub_10058D484()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10058D4C4()
{
  sub_10058B974(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10058D4CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10058D524()
{
}

void sub_10058D530()
{
  sub_100008C84();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10058D610(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unsigned int v12 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (((v8 & 0xFFFFFFFFFFFFFFF8) + v11 + 49) & ~v11) + *(void *)(*(void *)(v9 - 8) + 64) > 0x18)
  {
    uint64_t v15 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v16 = a2[v8];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v18 = v8;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v19 = *(_DWORD *)a2;
          if (v8 < 4) {
LABEL_23:
          }
            unsigned int v16 = (v19 | (v17 << (8 * v8))) + 2;
          else {
LABEL_25:
          }
            unsigned int v16 = v19 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v20 = v8 + 1;
    if (v16 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      char v21 = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      swift_retain();
      char v21 = 0;
    }
    *((unsigned char *)a1 + v8) = v21;
    unint64_t v22 = ((unint64_t)a1 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (unint64_t)&a2[v20 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = *(void *)(v23 + 24);
    *(void *)(v22 + 24) = v24;
    *(void *)(v22 + 32) = *(void *)(v23 + 32);
    (**(void (***)(unint64_t, unint64_t))(v24 - 8))(v22, v23);
    *(unsigned char *)(v22 + 40) = *(unsigned char *)(v23 + 40);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((v22 + v11 + 41) & ~v11, (v23 + v11 + 41) & ~v11, v9);
  }
  return a1;
}

uint64_t sub_10058D8CC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else {
    swift_release();
  }
  unint64_t v11 = (unint64_t)&a1[v5 + 8] & 0xFFFFFFFFFFFFFFF8;
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v11);
  uint64_t v12 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v13 = *(uint64_t (**)(unint64_t))(v12 + 8);
  unint64_t v14 = (v11 + *(unsigned __int8 *)(v12 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);

  return v13(v14);
}

void *sub_10058DA64(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v13 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
    char v13 = 0;
  }
  *((unsigned char *)a1 + v7) = v13;
  uint64_t v14 = v7 + 8;
  unint64_t v15 = ((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (unint64_t)&a2[v14] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void *)(v16 + 24);
  *(void *)(v15 + 24) = v17;
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  (**(void (***)(unint64_t, unint64_t))(v17 - 8))(v15, v16);
  *(unsigned char *)(v15 + 40) = *(unsigned char *)(v16 + 40);
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 16))((*(unsigned __int8 *)(v18 + 80) + 41 + v15) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(unsigned __int8 *)(v18 + 80) + 41 + v16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

unsigned __int8 *sub_10058DC5C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(type metadata accessor for DynamicTypeSize() - 8) + 64);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  unint64_t v18 = v17 + 8;
  unint64_t v19 = (unint64_t)&a1[v18] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (unint64_t)&a2[v18] & 0xFFFFFFFFFFFFFFF8;
  sub_10009EDF0((uint64_t *)v19, (uint64_t *)v20);
  *(unsigned char *)(v19 + 40) = *(unsigned char *)(v20 + 40);
  uint64_t v21 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 24))((*(unsigned __int8 *)(v21 + 80) + 41 + v19) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (*(unsigned __int8 *)(v21 + 80) + 41 + v20) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

void *sub_10058DF50(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v13;
  unint64_t v14 = ((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8;
  long long v16 = *(_OWORD *)v15;
  long long v17 = *(_OWORD *)(v15 + 16);
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  *(_OWORD *)unint64_t v14 = v16;
  *(_OWORD *)(v14 + 16) = v17;
  *(unsigned char *)(v14 + 40) = *(unsigned char *)(v15 + 40);
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 32))((*(unsigned __int8 *)(v18 + 80) + 41 + v14) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(unsigned __int8 *)(v18 + 80) + 41 + v15) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

unsigned __int8 *sub_10058E114(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(type metadata accessor for DynamicTypeSize() - 8) + 64);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  unint64_t v19 = v18 + 8;
  unint64_t v20 = (unint64_t)&a1[v19] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (unint64_t)&a2[v19] & 0xFFFFFFFFFFFFFFF8;
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v20);
  long long v22 = *(_OWORD *)v21;
  long long v23 = *(_OWORD *)(v21 + 16);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(_OWORD *)unint64_t v20 = v22;
  *(_OWORD *)(v20 + 16) = v23;
  *(unsigned char *)(v20 + 40) = *(unsigned char *)(v21 + 40);
  uint64_t v24 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 40))((*(unsigned __int8 *)(v24 + 80) + 41 + v20) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(unsigned __int8 *)(v24 + 80) + 41 + v21) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_10058E410(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(type metadata accessor for DynamicTypeSize() - 8) + 64);
  uint64_t v7 = 8;
  if (v6 > 8) {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v11) {
    goto LABEL_27;
  }
  unint64_t v12 = (((v7 & 0xFFFFFFFFFFFFFFF8) + v10 + 49) & ~v10) + *(void *)(v8 + 64);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((a2 - v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 < 2)
    {
LABEL_27:
      unint64_t v20 = ((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8;
      if ((v9 & 0x80000000) != 0)
      {
        long long v22 = *(uint64_t (**)(unint64_t))(v8 + 48);
        return v22((v20 + v10 + 41) & ~v10);
      }
      else
      {
        unint64_t v21 = *(void *)(v20 + 24);
        if (v21 >= 0xFFFFFFFF) {
          LODWORD(v21) = -1;
        }
        return (v21 + 1);
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_27;
  }
LABEL_17:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 <= 3) {
      int v18 = v12;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v11 + (v19 | v17) + 1;
}

void sub_10058E638(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(type metadata accessor for DynamicTypeSize() - 8) + 64);
  uint64_t v9 = 8;
  if (v8 > 8) {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  size_t v14 = (((v9 & 0xFFFFFFFFFFFFFFF8) + v12 + 49) & ~v12) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v18 = ((a3 - v13 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v18))
    {
      int v15 = 4;
    }
    else if (v18 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v18 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v16 = ~v13 + a2;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      if (v14)
      {
        int v19 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x10058E8ECLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        unint64_t v20 = (unint64_t)&a1[v9 + 8] & 0xFFFFFFFFFFFFFFF8;
        if ((v11 & 0x80000000) != 0)
        {
          unint64_t v21 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
          v21((v20 + v12 + 41) & ~v12, a2);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(_OWORD *)(v20 + 8) = 0u;
          *(_OWORD *)(v20 + 24) = 0u;
          *(void *)unint64_t v20 = a2 ^ 0x80000000;
        }
        else
        {
          *(void *)(v20 + 24) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CardFamilyEntryLinkView()
{
  return sub_100049E84();
}

uint64_t sub_10058E92C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10058E970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v45 = *(void *)(a1 + 16);
  type metadata accessor for ModifiedContent();
  sub_1000A1370(&qword_100962E50);
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  sub_1000A1370(&qword_10094C7A8);
  uint64_t v4 = type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v58 = sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
  uint64_t v46 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v44 = v4;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v53 = v4;
  uint64_t v54 = (ValueMetadata *)&type metadata for Never;
  uint64_t v55 = v42;
  uint64_t v56 = &protocol witness table for Never;
  uint64_t v5 = type metadata accessor for NavigationLink();
  uint64_t v43 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v38 = (char *)&OpaqueTypeMetadata2 - v6;
  uint64_t v7 = swift_getWitnessTable();
  uint64_t v36 = v7;
  unint64_t v35 = sub_10058F89C();
  uint64_t v53 = v5;
  uint64_t v54 = &type metadata for OpaqueButtonStyle;
  uint64_t v55 = v7;
  uint64_t v56 = (void *)v35;
  uint64_t v39 = &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v40 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v9 = (char *)&OpaqueTypeMetadata2 - v8;
  sub_1000A1370(&qword_100954C70);
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v41 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&OpaqueTypeMetadata2 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v37 = (uint64_t)&OpaqueTypeMetadata2 - v14;
  uint64_t v15 = a1;
  uint64_t v16 = v2;
  int v17 = (void *)(v2 + *(int *)(a1 + 36));
  uint64_t v18 = v17[3];
  uint64_t v19 = v17[4];
  sub_10007E4EC(v17, v18);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  uint64_t v22 = v21;
  LOBYTE(v19) = v23;
  LOBYTE(v7) = sub_10007CCD8(v20, v21, v23);
  sub_1000917F8(v20, v22, v19);
  LOBYTE(v53) = v7;
  uint64_t v24 = *(void *)(v15 + 24);
  uint64_t v48 = v45;
  uint64_t v49 = v24;
  uint64_t v50 = v16;
  sub_1001C50C4();
  id v25 = v38;
  NavigationLink<>.init<A>(value:label:)();
  uint64_t v26 = v36;
  uint64_t v27 = (void *)v35;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v5);
  static Color.white.getter();
  uint64_t v53 = v5;
  uint64_t v54 = &type metadata for OpaqueButtonStyle;
  uint64_t v55 = v26;
  uint64_t v56 = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = OpaqueTypeMetadata2;
  View.accentColor(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v29);
  uint64_t v30 = sub_1000A132C(&qword_100954C68, &qword_100954C70);
  uint64_t v51 = OpaqueTypeConformance2;
  uint64_t v52 = v30;
  swift_getWitnessTable();
  uint64_t v31 = v37;
  sub_10004C704((uint64_t)v12, v10, v37);
  id v32 = *(void (**)(char *, uint64_t))(v41 + 8);
  v32(v12, v10);
  sub_10004C704(v31, v10, v47);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v31, v10);
}

uint64_t sub_10058EF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  type metadata accessor for ModifiedContent();
  sub_1000A1370(&qword_100962E50);
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v5 = type metadata accessor for VStack();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - v7;
  sub_1000A1370(&qword_10094C7A8);
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v24 = a2;
  uint64_t v25 = v22;
  uint64_t v26 = v21;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_10058F908();
  View.contentShape<A>(_:eoFill:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
  uint64_t v27 = WitnessTable;
  uint64_t v28 = v17;
  swift_getWitnessTable();
  sub_10004C704((uint64_t)v12, v9, (uint64_t)v15);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  sub_10004C704((uint64_t)v15, v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

uint64_t sub_10058F24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v5 = type metadata accessor for ModifiedContent();
  uint64_t v45 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v44 - v9;
  uint64_t v52 = (char *)&v44 - v9;
  uint64_t v11 = type metadata accessor for CardFamilyEntryLinkView();
  static Edge.Set.bottom.getter();
  sub_10058F730(v11);
  View.padding(_:_:)();
  v75[3] = a2;
  v75[4] = &protocol witness table for _PaddingLayout;
  uint64_t v47 = v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v46 = v7;
  sub_10004C704((uint64_t)v7, v5, (uint64_t)v10);
  uint64_t v12 = v45;
  uint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v50 = v45 + 8;
  v49(v7, v5);
  uint64_t v13 = (void *)(a1 + *(int *)(v11 + 36));
  uint64_t v14 = v13[3];
  uint64_t v15 = v13[4];
  sub_10007E4EC(v13, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  uint64_t v18 = v17;
  LOBYTE(v15) = v19;
  char v20 = sub_10007CCD8(v16, v17, v19);
  sub_1000917F8(v16, v18, v15);
  uint64_t v59 = sub_1001C6148(v20);
  uint64_t v60 = v21;
  sub_1000A06D0();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  uint64_t v44 = v25;
  LOBYTE(v16) = v26 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v7) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v36 = static Font.footnote.getter();
  uint64_t v37 = swift_getKeyPath();
  int v38 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v40 = v46;
  uint64_t v41 = v47;
  v39(v46, v52, v47);
  uint64_t v59 = v22;
  uint64_t v60 = v24;
  char v61 = v16;
  uint64_t v62 = v44;
  uint64_t v63 = KeyPath;
  char v64 = 1;
  char v65 = (char)v7;
  uint64_t v66 = v29;
  uint64_t v67 = v31;
  uint64_t v68 = v33;
  uint64_t v69 = v35;
  char v70 = 0;
  __int16 v71 = 256;
  uint64_t v72 = v37;
  uint64_t v73 = v36;
  int v74 = v38;
  v75[0] = v40;
  v75[1] = &v59;
  uint64_t v57 = 0;
  char v58 = 0;
  v75[2] = &v57;
  sub_1000A1750(v22, v24, v16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v56[0] = v41;
  v56[1] = sub_1000AFA94(&qword_100962E50);
  v56[2] = &type metadata for Spacer;
  uint64_t v53 = WitnessTable;
  unint64_t v54 = sub_10058F96C();
  uint64_t v55 = &protocol witness table for Spacer;
  sub_10063ACF0((uint64_t)v75, 3uLL, (uint64_t)v56);
  sub_1000A06C0(v22, v24, v16);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v42 = (uint64_t (*)(char *, uint64_t))v49;
  v49(v52, v41);
  sub_1000A06C0(v59, v60, v61);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v42(v40, v41);
}

double sub_10058F730(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_100092088((uint64_t)&v13 - v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DynamicTypeSize.xxxLarge(_:), v3);
  char v10 = static DynamicTypeSize.< infix(_:_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  double result = 15.0;
  if ((v10 & 1) == 0)
  {
    double result = 94.0;
    if (!*(unsigned char *)(v1 + *(int *)(a1 + 40))) {
      return 30.0;
    }
  }
  return result;
}

unint64_t sub_10058F89C()
{
  unint64_t result = qword_100962E58;
  if (!qword_100962E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962E58);
  }
  return result;
}

uint64_t sub_10058F8F0@<X0>(uint64_t a1@<X8>)
{
  return sub_10058EF20(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10058F8FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10058F24C(*(void *)(v1 + 32), *(void *)(v1 + 24), a1);
}

unint64_t sub_10058F908()
{
  unint64_t result = qword_100962E60;
  if (!qword_100962E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962E60);
  }
  return result;
}

unint64_t sub_10058F96C()
{
  unint64_t result = qword_100962E68;
  if (!qword_100962E68)
  {
    sub_1000A1370(&qword_100962E50);
    sub_10058FA0C();
    sub_1000A132C(&qword_10094D9C8, &qword_10094D9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962E68);
  }
  return result;
}

unint64_t sub_10058FA0C()
{
  unint64_t result = qword_100962E70;
  if (!qword_100962E70)
  {
    sub_1000A1370(&qword_100962E78);
    sub_10058FAD8(&qword_100962E80, &qword_100962E88, (void (*)(void))sub_1001C549C);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962E70);
  }
  return result;
}

uint64_t sub_10058FAD8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10058FB54()
{
  return swift_getWitnessTable();
}

uint64_t sub_10058FDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v70 = a2;
  uint64_t v72 = a4;
  uint64_t v66 = type metadata accessor for NavigationSource();
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v67 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for NavigationPriority();
  uint64_t v60 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  char v64 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v62 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for NavigationIntent();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for NavigationRequest();
  uint64_t v55 = *(void *)(v71 - 8);
  uint64_t v10 = __chkstk_darwin(v71);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v11;
  __chkstk_darwin(v10);
  char v61 = (char *)&v49 - v13;
  uint64_t v73 = type metadata accessor for NavigationResource();
  uint64_t v14 = *(void *)(v73 - 8);
  uint64_t v15 = __chkstk_darwin(v73);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v19 = (char *)&v49 - v18;
  uint64_t v68 = type metadata accessor for NavigationAnnotation();
  uint64_t v20 = *(void *)(v68 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  __chkstk_darwin(v68);
  uint64_t v69 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000AFA94(&qword_10095DD40);
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v22 = *(void *)(v51 + 64);
  uint64_t v23 = __chkstk_darwin(v52);
  uint64_t v50 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v49 - v24;
  sub_100334350(a1, (uint64_t)&v77);
  uint64_t v26 = v78;
  if (v78)
  {
    char v27 = v79;
    uint64_t v28 = v80;
    uint64_t v29 = v81;
    uint64_t v53 = v81;
    *(void *)char v19 = v77;
    *((void *)v19 + 1) = v26;
    v19[16] = v27;
    *((void *)v19 + 3) = v28;
    *((void *)v19 + 4) = v29;
    uint64_t v30 = v73;
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v19, enum case for NavigationResource.trainerTipsEditorialGallery(_:), v73);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v49 = v17;
    v31(v17, v19, v30);
    *uint64_t v9 = 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v54 + 104))(v9, enum case for NavigationIntent.push(_:), v56);
    (*(void (**)(char *, void, uint64_t))(v57 + 104))(v62, enum case for NavigationRoutingBehavior.takeover(_:), v58);
    (*(void (**)(char *, void, uint64_t))(v60 + 104))(v64, enum case for NavigationPriority.takeover(_:), v63);
    uint64_t v32 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v69, v70, v68);
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v67, enum case for NavigationSource.default(_:), v66);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v33 = v61;
    NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
    uint64_t v34 = v71;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v12, v33, v71);
    unint64_t v35 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v36 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v36 + v35, v12, v34);
    Promise.init(synchronousOperation:)();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v73);
  }
  else
  {
    sub_1000AFA94(&qword_10095DF90);
    dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
    sub_1000AFA94((uint64_t *)&unk_1009669B0);
    dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
    sub_10007E4EC(v76, v76[3]);
    dispatch thunk of CatalogClientProtocol.fetchRemoteExploreTrainerTipShelfLockupDescriptor()();
    sub_10008E75C((uint64_t)v75, (uint64_t)v74);
    int v38 = v69;
    uint64_t v39 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v69, v70, v68);
    unint64_t v40 = (*(unsigned __int8 *)(v20 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v41 = swift_allocObject();
    sub_100093E60(v74, v41 + 16);
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v41 + v40, v38, v39);
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_100590E5C;
    *(void *)(v42 + 24) = v41;
    uint64_t v43 = v51;
    uint64_t v44 = v50;
    uint64_t v45 = v52;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v50, v25, v52);
    unint64_t v46 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v47 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v47 + v46, v44, v45);
    uint64_t v48 = (uint64_t (**)(uint64_t))(v47 + ((v22 + v46 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v48 = sub_100590F14;
    v48[1] = (uint64_t (*)(uint64_t))v42;
    Promise.init(asyncOperation:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v45);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v75);
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v76);
  }
}

uint64_t sub_100590768@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v48 = a3;
  uint64_t v47 = type metadata accessor for NavigationSource();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v44 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NavigationAnnotation();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NavigationPriority();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  __chkstk_darwin(v7);
  int v38 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  __chkstk_darwin(v9);
  unint64_t v35 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NavigationIntent();
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for NavigationResource();
  uint64_t v14 = *(void *)(v32 - 8);
  uint64_t v15 = __chkstk_darwin(v32);
  uint64_t v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v31 - v17;
  sub_10007E4EC(a1, a1[3]);
  uint64_t v19 = ShelfLockupDescriptor.titleTags.getter();
  Class isa = MediaTagStringBuilding.attributedString(for:)((Swift::OpaquePointer)v19).super.isa;
  swift_bridgeObjectRelease();
  id v21 = [(objc_class *)isa string];

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  uint64_t v25 = ShelfLockupDescriptor.identifier.getter();
  uint64_t v27 = v26;
  char v28 = ShelfLockupDescriptor.galleryDisplayStyle.getter();
  *(void *)uint64_t v18 = v25;
  *((void *)v18 + 1) = v27;
  char v18[16] = v28;
  *((void *)v18 + 3) = v22;
  *((void *)v18 + 4) = v24;
  uint64_t v29 = v32;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v18, enum case for NavigationResource.trainerTipsEditorialGallery(_:), v32);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v31, v18, v29);
  *uint64_t v13 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v33 + 104))(v13, enum case for NavigationIntent.push(_:), v34);
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for NavigationRoutingBehavior.takeover(_:), v37);
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, enum case for NavigationPriority.takeover(_:), v40);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v46, v43);
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v44, enum case for NavigationSource.default(_:), v47);
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, v29);
}

uint64_t sub_100590C94()
{
  uint64_t v1 = type metadata accessor for NavigationRequest();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100590D24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for NavigationRequest() - 8);
  return sub_10066223C(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_100590D90()
{
  uint64_t v1 = type metadata accessor for NavigationAnnotation();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100590E5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for NavigationAnnotation() - 8);
  return sub_100590768((void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_100590EDC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100590F14(uint64_t a1)
{
  return sub_10048B554(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100590F1C()
{
  uint64_t v1 = sub_1000AFA94(&qword_10095DD40);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100590FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000AFA94(&qword_10095DD40) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_10048B970(a1, a2, v7, v9, v10);
}

uint64_t assignWithCopy for DashboardCardProgressView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DashboardCardProgressView(uint64_t a1, uint64_t a2)
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DashboardCardProgressView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DashboardCardProgressView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1005911B8()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100591214()
{
  return sub_1005911B8();
}

uint64_t sub_10059121C()
{
  return sub_100013B94(&qword_100962E98, &qword_100962E90, (void (*)(void))sub_1000E1C2C);
}

char *sub_100591260(char *a1, char **a2, uint64_t a3)
{
  long long v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v46 = *a2;
    *(void *)a1 = *a2;
    long long v4 = &v46[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    unint64_t v6 = *a2;
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    a1[8] = v7;
    uint64_t v8 = (int *)type metadata accessor for ActivitySharingHighlight();
    uint64_t v9 = v8[5];
    uint64_t v10 = &v4[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v6;
    v13(v10, v11, v12);
    uint64_t v15 = v8[6];
    uint64_t v16 = &v4[v15];
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = v8[7];
    uint64_t v20 = *(char **)((char *)a2 + v19);
    *(void *)&v4[v19] = v20;
    *(void *)&v4[v8[8]] = *(char **)((char *)a2 + v8[8]);
    id v21 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
    uint64_t v22 = v21[5];
    uint64_t v23 = *(char **)((char *)a2 + v22);
    *(void *)&v4[v22] = v23;
    uint64_t v24 = v21[6];
    uint64_t v25 = *(char **)((char *)a2 + v24);
    *(void *)&v4[v24] = v25;
    uint64_t v26 = v21[7];
    uint64_t v27 = *(char **)((char *)a2 + v26);
    *(void *)&v4[v26] = v27;
    uint64_t v28 = v21[8];
    uint64_t v29 = *(char **)((char *)a2 + v28);
    *(void *)&v4[v28] = v29;
    v4[v21[9]] = *((unsigned char *)a2 + v21[9]);
    uint64_t v30 = v21[10];
    uint64_t v49 = (uint64_t)a2 + v30;
    uint64_t v50 = &v4[v30];
    uint64_t v31 = type metadata accessor for FIUIRelativeDateTimeFormatter();
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
    id v32 = v20;
    id v33 = v23;
    id v34 = v25;
    id v35 = v27;
    id v36 = v29;
    v48(v50, v49, v31);
    uint64_t v37 = v21[11];
    int v38 = *(char **)((char *)a2 + v37);
    *(void *)&v4[v37] = v38;
    uint64_t v39 = *(int *)(a3 + 20);
    uint64_t v40 = &v4[v39];
    uint64_t v41 = (uint64_t)a2 + v39;
    uint64_t v43 = *(void **)v41;
    uint64_t v42 = *(void *)(v41 + 8);
    *(void *)uint64_t v40 = *(void *)v41;
    *((void *)v40 + 1) = v42;
    id v44 = v38;
    id v45 = v43;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1005914B0(id *a1, uint64_t a2)
{
  long long v4 = (int *)type metadata accessor for ActivitySharingHighlight();
  int v5 = (char *)a1 + v4[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  char v7 = (char *)a1 + v4[6];
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  uint64_t v9 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v10 = (char *)a1 + v9[10];
  uint64_t v11 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  return swift_release();
}

uint64_t sub_100591628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(void **)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  char v7 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v5;
  v12(v9, v10, v11);
  uint64_t v14 = v7[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = v7[7];
  uint64_t v19 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v19;
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v20 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v21 = v20[5];
  uint64_t v22 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v22;
  uint64_t v23 = v20[6];
  uint64_t v24 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v24;
  uint64_t v25 = v20[7];
  uint64_t v26 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v26;
  uint64_t v27 = v20[8];
  uint64_t v28 = *(void **)(a2 + v27);
  *(void *)(a1 + v27) = v28;
  *(unsigned char *)(a1 + v20[9]) = *(unsigned char *)(a2 + v20[9]);
  uint64_t v29 = v20[10];
  uint64_t v47 = a2 + v29;
  uint64_t v48 = a1 + v29;
  uint64_t v30 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  id v31 = v19;
  id v32 = v22;
  id v33 = v24;
  id v34 = v26;
  id v35 = v28;
  v46(v48, v47, v30);
  uint64_t v36 = v20[11];
  uint64_t v37 = *(void **)(a2 + v36);
  *(void *)(a1 + v36) = v37;
  uint64_t v38 = *(int *)(a3 + 20);
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = a2 + v38;
  uint64_t v42 = *(void **)v40;
  uint64_t v41 = *(void *)(v40 + 8);
  *uint64_t v39 = *(void *)v40;
  v39[1] = v41;
  id v43 = v37;
  id v44 = v42;
  swift_retain();
  return a1;
}

uint64_t sub_10059182C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  uint64_t v8 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  id v9 = v6;

  uint64_t v10 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v11 = v10[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = v10[7];
  uint64_t v20 = *(void **)(a2 + v19);
  uint64_t v21 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  id v22 = v20;

  *(void *)(a1 + v10[8]) = *(void *)(a2 + v10[8]);
  uint64_t v23 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v24 = v23[5];
  uint64_t v25 = *(void **)(a2 + v24);
  uint64_t v26 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = v25;
  id v27 = v25;

  uint64_t v28 = v23[6];
  uint64_t v29 = *(void **)(a2 + v28);
  uint64_t v30 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = v29;
  id v31 = v29;

  uint64_t v32 = v23[7];
  id v33 = *(void **)(a2 + v32);
  id v34 = *(void **)(a1 + v32);
  *(void *)(a1 + v32) = v33;
  id v35 = v33;

  uint64_t v36 = v23[8];
  uint64_t v37 = *(void **)(a2 + v36);
  uint64_t v38 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = v37;
  id v39 = v37;

  *(unsigned char *)(a1 + v23[9]) = *(unsigned char *)(a2 + v23[9]);
  uint64_t v40 = v23[10];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  uint64_t v44 = v23[11];
  id v45 = *(void **)(a2 + v44);
  uint64_t v46 = *(void **)(a1 + v44);
  *(void *)(a1 + v44) = v45;
  id v47 = v45;

  uint64_t v48 = *(int *)(a3 + 20);
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void **)(a1 + v48);
  uint64_t v52 = *(void **)v50;
  *uint64_t v49 = *(void *)v50;
  id v53 = v52;

  v49[1] = *(void *)(v50 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100591A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  char v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;

  uint64_t v8 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[7];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v19 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v20 = v19[5];
  uint64_t v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  uint64_t v22 = v19[6];
  uint64_t v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  uint64_t v24 = v19[7];
  uint64_t v25 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);

  uint64_t v26 = v19[8];
  id v27 = *(void **)(a1 + v26);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);

  *(unsigned char *)(a1 + v19[9]) = *(unsigned char *)(a2 + v19[9]);
  uint64_t v28 = v19[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  uint64_t v32 = v19[11];
  id v33 = *(void **)(a1 + v32);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);

  uint64_t v34 = *(int *)(a3 + 20);
  id v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = *(void **)(a1 + v34);
  *id v35 = *v36;

  v35[1] = v36[1];
  swift_release();
  return a1;
}

uint64_t sub_100591C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100591C68);
}

uint64_t sub_100591C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100591D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100591D48);
}

uint64_t sub_100591D48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActivitySharingHighlightViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for ActivitySharingAvatarView()
{
  uint64_t result = qword_100962F08;
  if (!qword_100962F08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100591E50()
{
  uint64_t result = type metadata accessor for ActivitySharingHighlightViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100591EE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100591F00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v3 = type metadata accessor for _TaskModifier();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = type metadata accessor for TaskPriority();
  uint64_t v48 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  id v47 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActivitySharingAvatarView();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v37 + 64);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100962F40);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v1;
  sub_1005922F8(v1, (uint64_t)v49);
  uint64_t v15 = v49[1];
  uint64_t v16 = v49[2];
  uint64_t v41 = v49[3];
  uint64_t v42 = v49[0];
  uint64_t v17 = v49[5];
  uint64_t v39 = v49[6];
  uint64_t v40 = v49[4];
  uint64_t v38 = v49[7];
  int v46 = v50;
  sub_100592CD0(v2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
  unint64_t v18 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v19 = swift_allocObject();
  sub_100592F10((uint64_t)v10, v19 + v18, (uint64_t (*)(void))type metadata accessor for ActivitySharingAvatarView);
  uint64_t v20 = v47;
  static TaskPriority.userInitiated.getter();
  uint64_t v21 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v22 = v44;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v21, v20, v44);
  uint64_t v36 = v6;
  *uint64_t v6 = &unk_100962F50;
  v6[1] = v19;
  sub_100592CD0((uint64_t)v6, (uint64_t)&v14[*(int *)(v12 + 44)], (uint64_t (*)(void))&type metadata accessor for _TaskModifier);
  uint64_t v24 = v41;
  uint64_t v23 = v42;
  *(void *)uint64_t v14 = v42;
  *((void *)v14 + 1) = v15;
  *((void *)v14 + 2) = v16;
  *((void *)v14 + 3) = v24;
  uint64_t v25 = v39;
  uint64_t v26 = v40;
  *((void *)v14 + 4) = v40;
  *((void *)v14 + 5) = v17;
  uint64_t v27 = v38;
  *((void *)v14 + 6) = v25;
  *((void *)v14 + 7) = v27;
  char v28 = v46;
  v14[64] = v46;
  sub_100592C48(v23, v15, v16, v24, v26, v17, v25, v27, v28);
  sub_1003B407C((uint64_t)v36);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v22);
  sub_100592C58(v23, v15, v16, v24, v26, v17, v25, v27, v46);
  uint64_t v29 = v43 + *(int *)(type metadata accessor for ActivitySharingHighlight() + 20);
  uint64_t v30 = sub_1000AFA94(&qword_100962F58);
  uint64_t v31 = v45;
  uint64_t v32 = v45 + *(int *)(v30 + 52);
  uint64_t v33 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v32, v29, v33);
  return sub_100592C68((uint64_t)v14, v31);
}

double sub_1005922F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v6 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for ActivitySharingAvatarView() + 20));
  sub_1000AFA94(&qword_100962F68);
  State.wrappedValue.getter();
  if (v5)
  {
    id v3 = v5;
    Image.init(uiImage:)();
    swift_retain();
    sub_1000AFA94(&qword_1009503E0);
    sub_10042D1E4();
    _ConditionalContent<>.init(storage:)();
    swift_release();
  }
  else
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_1000AFA94(&qword_1009503E0);
    sub_10042D1E4();
    _ConditionalContent<>.init(storage:)();
  }
  double result = *(double *)&v6;
  *(_OWORD *)a2 = v6;
  *(_OWORD *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 32) = v8;
  *(_OWORD *)(a2 + 48) = v9;
  *(unsigned char *)(a2 + 64) = v10;
  return result;
}

uint64_t sub_100592484(uint64_t a1)
{
  v1[6] = a1;
  uint64_t v2 = *(void *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  v1[7] = v2;
  v1[8] = *(void *)(v2 + 64);
  v1[9] = swift_task_alloc();
  sub_1000AFA94(&qword_10094B7A0);
  v1[10] = swift_task_alloc();
  v1[11] = type metadata accessor for MainActor();
  v1[12] = static MainActor.shared.getter();
  return _swift_task_switch(sub_100592590, 0, 0);
}

uint64_t sub_100592590()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[6];
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v1, 1, 1, v5);
  sub_100592CD0(v4, v2, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  sub_100592F10(v2, v7 + v6, (uint64_t (*)(void))type metadata accessor for ActivitySharingHighlightViewModel);
  uint64_t v8 = sub_1002C46F8(v1, (uint64_t)&unk_100962F60, v7);
  v0[13] = v8;
  long long v9 = (void *)swift_task_alloc();
  v0[14] = v9;
  unint64_t v10 = sub_100593064();
  *long long v9 = v0;
  v9[1] = sub_100592728;
  return Task<>.value.getter(v0 + 4, v8, v10);
}

uint64_t sub_100592728()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100592840, 0, 0);
}

uint64_t sub_100592840()
{
  *(void *)(v0 + 120) = *(void *)(v0 + 32);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005928C0, v2, v1);
}

uint64_t sub_1005928C0()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_release();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + *(int *)(type metadata accessor for ActivitySharingAvatarView() + 20));
  *(void *)(v0 + 40) = v1;
  sub_1000AFA94(&qword_100962F68);
  State.wrappedValue.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100592988()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivitySharingAvatarView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v4 = (char *)v2 + v3[5];
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = (char *)v2 + v3[6];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = (int *)type metadata accessor for ActivitySharingHighlightViewModel();
  long long v9 = (char *)v2 + v8[10];
  uint64_t v10 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100592B7C()
{
  uint64_t v2 = *(void *)(type metadata accessor for ActivitySharingAvatarView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10005DB5C;
  return sub_100592484(v3);
}

uint64_t sub_100592C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100592C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100592C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100962F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100592CD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100592D38()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;

  uint64_t v4 = (int *)type metadata accessor for ActivitySharingHighlight();
  uint64_t v5 = v3 + v4[5];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v3 + v4[6];
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  uint64_t v9 = v3 + v1[12];
  uint64_t v10 = type metadata accessor for FIUIRelativeDateTimeFormatter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return swift_deallocObject();
}

uint64_t sub_100592F10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100592F78(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ActivitySharingHighlightViewModel() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1000DBD6C;
  return sub_100340900(a1, v5, v6, v7);
}

unint64_t sub_100593064()
{
  unint64_t result = qword_100957EF0;
  if (!qword_100957EF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100957EF0);
  }
  return result;
}

unint64_t sub_1005930A8()
{
  unint64_t result = qword_100962F70;
  if (!qword_100962F70)
  {
    sub_1000A1370(&qword_100962F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962F70);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareActivityCard()
{
  return &type metadata for ShareActivityCard;
}

uint64_t sub_100593114()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100593130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v42 = a2;
  uint64_t v47 = a5;
  uint64_t v48 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v45 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RoundedRectangle();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (_OWORD *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000AFA94(&qword_100960078);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100960080);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100962F78);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_100962F80);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = static HorizontalAlignment.center.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  uint64_t v24 = sub_1000AFA94(&qword_100962F88);
  sub_100593568(a1, v42, v43, v44, (uint64_t)&v13[*(int *)(v24 + 44)]);
  uint64_t v25 = static Alignment.center.getter();
  sub_1004DDF2C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v25, v26);
  sub_10008DB18((uint64_t)v13, &qword_100960078);
  id v27 = [self secondarySystemBackgroundColor];
  uint64_t v28 = Color.init(uiColor:)();
  LOBYTE(v13) = static Edge.Set.all.getter();
  sub_1000AEF2C((uint64_t)v16, (uint64_t)v20, &qword_100960080);
  uint64_t v29 = &v20[*(int *)(v18 + 44)];
  *(void *)uint64_t v29 = v28;
  v29[8] = (char)v13;
  sub_10008DB18((uint64_t)v16, &qword_100960080);
  uint64_t v30 = (char *)v10 + *(int *)(v8 + 28);
  uint64_t v31 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v32 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v10 = _Q0;
  uint64_t v38 = (uint64_t)&v23[*(int *)(v21 + 36)];
  sub_1002F51F8((uint64_t)v10, v38);
  *(_WORD *)(v38 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C((uint64_t)v20, (uint64_t)v23, &qword_100962F78);
  sub_1002854A8((uint64_t)v10);
  sub_10008DB18((uint64_t)v20, &qword_100962F78);
  uint64_t v39 = v45;
  static AccessibilityChildBehavior.combine.getter();
  sub_10059464C();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v48);
  return sub_10008DB18((uint64_t)v23, &qword_100962F80);
}

uint64_t sub_100593568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v116 = a3;
  uint64_t v117 = a4;
  uint64_t v112 = a1;
  uint64_t v113 = a2;
  uint64_t v127 = a5;
  uint64_t v128 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v128);
  id v126 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1000AFA94(&qword_100962FB0);
  uint64_t v119 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  id v114 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1000AFA94(&qword_100962FB8) - 8;
  __chkstk_darwin(v118);
  NSString v115 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1000AFA94(&qword_100962FC0) - 8;
  __chkstk_darwin(v122);
  uint64_t v120 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v124 = sub_1000AFA94(&qword_100962FC8) - 8;
  __chkstk_darwin(v124);
  *(void *)&long long v123 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1000AFA94(&qword_100962FD0) - 8;
  __chkstk_darwin(v125);
  uint64_t v137 = (uint64_t)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v138 = (uint64_t)&v104 - v12;
  uint64_t v13 = type metadata accessor for Font.TextStyle();
  uint64_t v133 = *(void *)(v13 - 8);
  uint64_t v134 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_100962FD8);
  __chkstk_darwin(v19 - 8);
  uint64_t v136 = (uint64_t)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v135 = (uint64_t)&v104 - v22;
  uint64_t v23 = Image.init(systemName:)();
  uint64_t v24 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 1, 1, v24);
  uint64_t v25 = static Font.system(size:weight:design:)();
  sub_10008DB18((uint64_t)v18, &qword_10094C448);
  uint64_t KeyPath = swift_getKeyPath();
  char v27 = static Edge.Set.all.getter();
  uint64_t v28 = static Color.secondary.getter();
  uint64_t v29 = swift_getKeyPath();
  uint64_t v156 = v23;
  uint64_t v157 = KeyPath;
  uint64_t v158 = v25;
  LOBYTE(v159) = v27;
  long long v160 = xmmword_1007509D0;
  long long v161 = xmmword_10075E630;
  LOBYTE(v162) = 0;
  uint64_t v163 = v29;
  uint64_t v164 = v28;
  sub_1000AFA94(&qword_100962FE0);
  sub_10059483C();
  View.accessibilityHidden(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v30 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v32 = v31;
  LOBYTE(v23) = v33 & 1;
  uint64_t v35 = v133;
  uint64_t v34 = v134;
  (*(void (**)(char *, void, uint64_t))(v133 + 104))(v15, enum case for Font.TextStyle.headline(_:), v134);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v34);
  uint64_t v36 = Text.font(_:)();
  uint64_t v110 = v37;
  uint64_t v111 = v36;
  uint64_t v109 = v38;
  LOBYTE(v34) = v39;
  swift_release();
  int v108 = v34 & 1;
  sub_1000A06C0(v30, v32, v23);
  swift_bridgeObjectRelease();
  int v107 = static Edge.Set.all.getter();
  uint64_t v40 = v112;
  uint64_t v41 = v113;
  uint64_t v156 = sub_100594984(v112);
  uint64_t v157 = v42;
  sub_1000A06D0();
  uint64_t v43 = Text.init<A>(_:)();
  uint64_t v45 = v44;
  char v47 = v46 & 1;
  static Color.secondary.getter();
  uint64_t v129 = Text.foregroundColor(_:)();
  uint64_t v105 = v48;
  uint64_t v106 = v49;
  LOBYTE(v35) = v50;
  swift_release();
  sub_1000A06C0(v43, v45, v47);
  swift_bridgeObjectRelease();
  uint64_t v133 = swift_getKeyPath();
  uint64_t v134 = static Font.subheadline.getter();
  uint64_t v132 = swift_getKeyPath();
  uint64_t v130 = swift_getKeyPath();
  int v131 = static Edge.Set.all.getter();
  unsigned __int8 v146 = v35 & 1;
  unsigned __int8 v144 = 1;
  unsigned __int8 v139 = 0;
  uint64_t v51 = (void *)swift_allocObject();
  v51[2] = v40;
  void v51[3] = v41;
  uint64_t v52 = v117;
  v51[4] = v116;
  v51[5] = v52;
  swift_retain();
  swift_retain();
  sub_1000AFA94(&qword_100963000);
  sub_100594908(&qword_100963008, &qword_100963000, (void (*)(void))sub_100594BEC);
  id v53 = v114;
  Button.init(action:label:)();
  uint64_t v54 = static Color.white.getter();
  uint64_t v55 = swift_getKeyPath();
  uint64_t v56 = v119;
  uint64_t v57 = (uint64_t)v115;
  uint64_t v58 = v121;
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v115, v53, v121);
  uint64_t v59 = (uint64_t *)(v57 + *(int *)(v118 + 44));
  *uint64_t v59 = v55;
  v59[1] = v54;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v58);
  id v60 = [self tertiarySystemBackgroundColor];
  uint64_t v61 = Color.init(uiColor:)();
  LOBYTE(v55) = static Edge.Set.all.getter();
  uint64_t v62 = v120;
  sub_1000AEF2C(v57, v120, &qword_100962FB8);
  uint64_t v63 = v62 + *(int *)(v122 + 44);
  *(void *)uint64_t v63 = v61;
  *(unsigned char *)(v63 + 8) = v55;
  sub_10008DB18(v57, &qword_100962FB8);
  char v64 = v126;
  uint64_t v65 = &v126[*(int *)(v128 + 28)];
  uint64_t v66 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v67 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 104))(v65, v66, v67);
  __asm { FMOV            V0.2D, #10.0 }
  *char v64 = _Q0;
  uint64_t v73 = v123;
  uint64_t v74 = v123 + *(int *)(v124 + 44);
  sub_1002F51F8((uint64_t)v64, v74);
  *(_WORD *)(v74 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C(v62, v73, &qword_100962FC0);
  sub_1002854A8((uint64_t)v64);
  sub_10008DB18(v62, &qword_100962FC0);
  LOBYTE(v74) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  uint64_t v82 = v81;
  uint64_t v83 = v137;
  sub_1000AEF2C(v73, v137, &qword_100962FC8);
  uint64_t v84 = v83 + *(int *)(v125 + 44);
  *(unsigned char *)uint64_t v84 = v74;
  *(void *)(v84 + 8) = v76;
  *(void *)(v84 + 16) = v78;
  *(void *)(v84 + 24) = v80;
  *(void *)(v84 + 32) = v82;
  *(unsigned char *)(v84 + 40) = 0;
  sub_10008DB18(v73, &qword_100962FC8);
  uint64_t v85 = v138;
  sub_100594C1C(v83, v138);
  uint64_t v86 = v136;
  sub_1000AEF2C(v135, v136, &qword_100962FD8);
  LOBYTE(v35) = v146;
  LODWORD(v125) = v146;
  LOBYTE(v41) = v144;
  LODWORD(v126) = v144;
  LODWORD(v128) = v139;
  sub_1000AEF2C(v85, v83, &qword_100962FD0);
  uint64_t v87 = v127;
  sub_1000AEF2C(v86, v127, &qword_100962FD8);
  double v88 = (int *)sub_1000AFA94(&qword_100963020);
  uint64_t v89 = v87 + v88[12];
  uint64_t v90 = v87;
  uint64_t v91 = v110;
  uint64_t v92 = v111;
  uint64_t v93 = v109;
  *(void *)uint64_t v89 = v111;
  *(void *)(v89 + 8) = v93;
  char v94 = v107;
  LOBYTE(v83) = v108;
  *(unsigned char *)(v89 + 16) = v108;
  *(void *)(v89 + 24) = v91;
  *(unsigned char *)(v89 + 32) = v94;
  *(void *)(v89 + 40) = 0;
  *(void *)(v89 + 48) = 0;
  *(_OWORD *)(v89 + 56) = xmmword_1007509B0;
  *(unsigned char *)(v89 + 72) = 0;
  uint64_t v95 = v87 + v88[16];
  uint64_t v97 = v105;
  uint64_t v96 = v106;
  *(void *)&long long v147 = v129;
  *((void *)&v147 + 1) = v105;
  LOBYTE(v148) = v35;
  *(_DWORD *)((char *)&v148 + 1) = *(_DWORD *)v145;
  DWORD1(v148) = *(_DWORD *)&v145[3];
  *((void *)&v148 + 1) = v106;
  long long v149 = (unint64_t)v133;
  LOBYTE(v150) = v41;
  *(_WORD *)((char *)&v150 + 1) = 256;
  BYTE7(v150) = v143;
  *(_DWORD *)((char *)&v150 + 3) = v142;
  *((void *)&v150 + 1) = v132;
  *(void *)&long long v151 = v134;
  *((void *)&v151 + 1) = v130;
  LOBYTE(v152) = 1;
  DWORD1(v152) = *(_DWORD *)&v141[3];
  *(_DWORD *)((char *)&v152 + 1) = *(_DWORD *)v141;
  BYTE8(v152) = v131;
  HIDWORD(v152) = *(_DWORD *)&v140[3];
  *(_DWORD *)((char *)&v152 + 9) = *(_DWORD *)v140;
  long long v123 = xmmword_10076CCC0;
  long long v124 = xmmword_10076CCD0;
  long long v153 = xmmword_10076CCC0;
  long long v154 = xmmword_10076CCD0;
  char v155 = v128;
  long long v98 = v152;
  *(unsigned char *)(v95 + 128) = v128;
  *(_OWORD *)(v95 + 96) = xmmword_10076CCC0;
  *(_OWORD *)(v95 + 112) = xmmword_10076CCD0;
  long long v99 = v147;
  long long v100 = v148;
  *(_OWORD *)(v95 + 64) = v151;
  *(_OWORD *)(v95 + 80) = v98;
  long long v101 = v150;
  *(_OWORD *)(v95 + 32) = v149;
  *(_OWORD *)(v95 + 48) = v101;
  *(_OWORD *)uint64_t v95 = v99;
  *(_OWORD *)(v95 + 16) = v100;
  uint64_t v102 = v137;
  sub_1000AEF2C(v137, v90 + v88[20], &qword_100962FD0);
  sub_1000A1750(v92, v93, v83);
  swift_bridgeObjectRetain();
  sub_100594C84((uint64_t)&v147);
  sub_10008DB18(v138, &qword_100962FD0);
  sub_10008DB18(v135, &qword_100962FD8);
  sub_10008DB18(v102, &qword_100962FD0);
  uint64_t v156 = v129;
  uint64_t v157 = v97;
  LOBYTE(v158) = v125;
  *(_DWORD *)((char *)&v158 + 1) = *(_DWORD *)v145;
  HIDWORD(v158) = *(_DWORD *)&v145[3];
  uint64_t v159 = v96;
  long long v160 = (unint64_t)v133;
  LOWORD(v161) = v126;
  BYTE2(v161) = 1;
  *(_DWORD *)((char *)&v161 + 3) = v142;
  BYTE7(v161) = v143;
  *((void *)&v161 + 1) = v132;
  uint64_t v162 = v134;
  uint64_t v163 = v130;
  LOBYTE(v164) = 1;
  HIDWORD(v164) = *(_DWORD *)&v141[3];
  *(_DWORD *)((char *)&v164 + 1) = *(_DWORD *)v141;
  char v165 = v131;
  *(_DWORD *)&v166[3] = *(_DWORD *)&v140[3];
  *(_DWORD *)id v166 = *(_DWORD *)v140;
  long long v167 = v123;
  long long v168 = v124;
  char v169 = v128;
  sub_100594CFC((uint64_t)&v156);
  sub_1000A06C0(v92, v93, v83);
  swift_bridgeObjectRelease();
  return sub_10008DB18(v136, &qword_100962FD8);
}

uint64_t sub_100594230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_retain();
    sub_1003724B4();
    return swift_release();
  }
  else
  {
    type metadata accessor for ActivitySharingNavigationCoordinator();
    sub_100594D74(&qword_10094BF10, (void (*)(uint64_t))type metadata accessor for ActivitySharingNavigationCoordinator);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

__n128 sub_1005942D0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v6 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v8 = v7;
  v31[1] = v9;
  char v11 = v10 & 1;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.TextStyle.body(_:), v2);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = Text.font(_:)();
  uint64_t v32 = v13;
  uint64_t v33 = v14;
  LOBYTE(v2) = v15;
  swift_release();
  char v16 = v2 & 1;
  sub_1000A06C0(v6, v8, v11);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = static Edge.Set.all.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v66 = v16;
  char v63 = 0;
  char v61 = v36;
  char v59 = v38;
  uint64_t v17 = v12;
  uint64_t v40 = v12;
  uint64_t v18 = v32;
  uint64_t v41 = v32;
  char v42 = v16;
  *(_DWORD *)uint64_t v43 = *(_DWORD *)v65;
  *(_DWORD *)&v43[3] = *(_DWORD *)&v65[3];
  uint64_t v44 = v33;
  char v45 = v2;
  *(_DWORD *)char v46 = *(_DWORD *)v64;
  *(_DWORD *)&v46[3] = *(_DWORD *)&v64[3];
  __asm { FMOV            V0.2D, #10.0 }
  long long v47 = _Q0;
  long long v48 = _Q0;
  char v49 = 0;
  *(_DWORD *)char v50 = *(_DWORD *)v62;
  *(_DWORD *)&v50[3] = *(_DWORD *)&v62[3];
  uint64_t v51 = v35;
  char v52 = v36;
  *(_DWORD *)id v53 = *(_DWORD *)v60;
  *(_DWORD *)&v53[3] = *(_DWORD *)&v60[3];
  uint64_t v54 = v37;
  char v55 = v38;
  *(_DWORD *)&void v56[3] = *(_DWORD *)&v58[3];
  *(_DWORD *)uint64_t v56 = *(_DWORD *)v58;
  long long v57 = v39;
  static Alignment.center.getter();
  sub_1004DDF88(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v34, 40.0, 0, 0.0, 1);
  sub_1000A06C0(v17, v18, v16);
  swift_bridgeObjectRelease();
  long long v24 = v34[13];
  *(_OWORD *)(a1 + 192) = v34[12];
  *(_OWORD *)(a1 + 208) = v24;
  *(_OWORD *)(a1 + 224) = v34[14];
  long long v25 = v34[9];
  *(_OWORD *)(a1 + 128) = v34[8];
  *(_OWORD *)(a1 + 144) = v25;
  long long v26 = v34[11];
  *(_OWORD *)(a1 + 160) = v34[10];
  *(_OWORD *)(a1 + 176) = v26;
  long long v27 = v34[5];
  *(_OWORD *)(a1 + 64) = v34[4];
  *(_OWORD *)(a1 + 80) = v27;
  long long v28 = v34[7];
  *(_OWORD *)(a1 + 96) = v34[6];
  *(_OWORD *)(a1 + 112) = v28;
  long long v29 = v34[1];
  *(_OWORD *)a1 = v34[0];
  *(_OWORD *)(a1 + 16) = v29;
  __n128 result = (__n128)v34[3];
  *(_OWORD *)(a1 + 32) = v34[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_100594640@<X0>(uint64_t a1@<X8>)
{
  return sub_100593130(*v1, v1[1], v1[2], v1[3], a1);
}

unint64_t sub_10059464C()
{
  unint64_t result = qword_100962F90;
  if (!qword_100962F90)
  {
    sub_1000A1370(&qword_100962F80);
    sub_1005946EC();
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962F90);
  }
  return result;
}

unint64_t sub_1005946EC()
{
  unint64_t result = qword_100962F98;
  if (!qword_100962F98)
  {
    sub_1000A1370(&qword_100962F78);
    sub_10059478C();
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962F98);
  }
  return result;
}

unint64_t sub_10059478C()
{
  unint64_t result = qword_100962FA0;
  if (!qword_100962FA0)
  {
    sub_1000A1370(&qword_100960080);
    sub_1000A132C(&qword_100962FA8, &qword_100960078);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962FA0);
  }
  return result;
}

unint64_t sub_10059483C()
{
  unint64_t result = qword_100962FE8;
  if (!qword_100962FE8)
  {
    sub_1000A1370(&qword_100962FE0);
    sub_100594908((unint64_t *)&qword_100962FF0, &qword_100962FF8, (void (*)(void))sub_1002857C0);
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100962FE8);
  }
  return result;
}

uint64_t sub_100594908(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100594984(uint64_t a1)
{
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v4;
  }
  else
  {
    type metadata accessor for ActivitySharingFriendListDataProvider();
    sub_100594D74((unint64_t *)&qword_1009512A0, (void (*)(uint64_t))type metadata accessor for ActivitySharingFriendListDataProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100594BA0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100594BE0()
{
  return sub_100594230(v0[2], v0[3], v0[4]);
}

uint64_t sub_100594BEC()
{
  return sub_100594908(&qword_100963010, &qword_100963018, (void (*)(void))sub_10023A81C);
}

uint64_t sub_100594C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100962FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100594C84(uint64_t a1)
{
  return a1;
}

uint64_t sub_100594CFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100594D74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100594DC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ConditionalFrameWidthModifier.init(applyFrame:width:)(char a1)
{
  return a1 & 1;
}

uint64_t sub_100594E30()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t _s10FitnessApp30ConditionalFrameHeightModifierVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s10FitnessApp30ConditionalFrameHeightModifierVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100594F00(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for ActivityRingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

__n128 initializeWithTake for ActivityRingsView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ActivityRingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityRingsView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 19)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityRingsView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 19) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityRingsView()
{
  return &type metadata for ActivityRingsView;
}

void *sub_1005950D4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a3 & 1;
  id v6 = [self activityRingGroupForRingType:3];
  id v7 = [objc_allocWithZone((Class)ARUIRingsView) initWithRingGroup:v6];

  uint64_t v8 = (void *)ARUIRingsView.withRingGroupDiameter(_:)();
  uint64_t v9 = (void *)ARUIRingsView.withRingGroupThickness(_:)();

  char v10 = (void *)ARUIRingsView.withRingGroupInterspacing(_:)();
  id v11 = [self clearColor];
  uint64_t v12 = (void *)UIView.backgroundColor(_:)();

  uint64_t v13 = (void *)ARUIRingsView.emptyRings()();
  [v13 hk_configureWithActivitySummary:a2 animated:v5];
  if ((a3 & 0x100) != 0)
  {
    uint64_t v14 = self;
    char v15 = &selRef_defaultSpriteSheet;
    if ((a3 & 0x10000) != 0) {
      char v15 = &selRef_wheelchairSpriteSheet;
    }
    id v16 = [v14 *v15];
    id v17 = [v13 ringGroup];
    [v17 setSpriteSheet:v16];

    id v18 = [v13 ringGroup];
    [v18 playSpriteAnimation];
  }
  return v13;
}

void *sub_1005952F0(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 17)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | *(unsigned __int8 *)(v1 + 16);
  if (*(unsigned char *)(v1 + 18)) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  return sub_1005950D4(a1, *(void *)v1, v3 | v4);
}

id sub_100595328(void *a1)
{
  return [a1 hk_configureWithActivitySummary:*v1 animated:*v1 + 16];
}

uint64_t sub_10059533C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100595484();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1005953A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100595484();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100595404()
{
}

unint64_t sub_100595430()
{
  unint64_t result = qword_100963098;
  if (!qword_100963098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963098);
  }
  return result;
}

unint64_t sub_100595484()
{
  unint64_t result = qword_1009630A0;
  if (!qword_1009630A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009630A0);
  }
  return result;
}

id sub_100595508()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityTypeKeyMigratorBridge();
  return [super dealloc];
}

uint64_t sub_100595540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return _swift_task_switch(sub_100595560, 0, 0);
}

uint64_t sub_100595560()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[6] = Strong;
  if (Strong)
  {
    objc_super v2 = (void *)swift_task_alloc();
    v0[7] = v2;
    *objc_super v2 = v0;
    v2[1] = sub_1001AD7DC;
    v2[2] = Strong;
    return _swift_task_switch(sub_100595684, Strong, 0);
  }
  else
  {
    int v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_100595664()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100595684, v0, 0);
}

uint64_t sub_100595684()
{
  uint64_t v1 = v0[2];
  static os_log_type_t.default.getter();
  id v2 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  if (*(unsigned char *)(v1 + 232) == 1)
  {
    static os_log_type_t.error.getter();
    id v3 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    sub_1005978B0();
    swift_allocError();
    *uint64_t v4 = 1;
    swift_willThrow();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    id v7 = (void *)swift_task_alloc();
    v0[3] = v7;
    *id v7 = v0;
    v7[1] = sub_100595844;
    uint64_t v8 = v0[2];
    v7[169] = v8;
    return _swift_task_switch(sub_10059595C, v8, 0);
  }
}

uint64_t sub_100595844()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10059593C()
{
  *(void *)(v1 + 1352) = v0;
  return _swift_task_switch(sub_10059595C, v0, 0);
}

uint64_t sub_10059595C()
{
  sub_1000A1370(&qword_100963260);
  swift_asyncLet_begin();
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 656, v0 + 1344, sub_100595A58, v0 + 1296);
}

uint64_t sub_100595A58()
{
  return _swift_task_switch(sub_100595A74, *(void *)(v0 + 1352), 0);
}

uint64_t sub_100595A74()
{
  uint64_t v1 = v0[168];
  v0[170] = v1;
  if (v1)
  {
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get(v0 + 2, v0 + 167, sub_100595BBC, v0 + 162);
  }
  else
  {
    uint64_t v2 = v0[169];
    static os_log_type_t.error.getter();
    id v3 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    uint64_t v4 = *(void *)(v2 + 216);
    uint64_t v5 = *(void *)(v2 + 224);
    *(void *)(v2 + 216) = 0;
    *(void *)(v2 + 224) = 0;
    char v6 = *(unsigned char *)(v2 + 232);
    *(unsigned char *)(v2 + 232) = 2;
    sub_100403EB0(v4, v5, v6);
    return _swift_asyncLet_finish(v0 + 2, v0 + 167, sub_100595D40, v0 + 162);
  }
}

uint64_t sub_100595BBC()
{
  return _swift_task_switch(sub_100595BD8, *(void *)(v0 + 1352), 0);
}

uint64_t sub_100595BD8()
{
  uint64_t v1 = v0[167];
  uint64_t v2 = v0[170];
  if (v1)
  {
    uint64_t v3 = v0[169];
    swift_bridgeObjectRetain();
    static os_log_type_t.default.getter();
    id v4 = HKLogActivity;
    os_log(_:dso:log:_:_:)();

    char v7 = *(unsigned char *)(v3 + 232);
    char v6 = (char *)(v3 + 232);
    char v5 = v7;
    uint64_t v8 = *((void *)v6 - 2);
    uint64_t v9 = *((void *)v6 - 1);
    char v10 = 1;
    *((void *)v6 - 2) = v2;
    *((void *)v6 - 1) = v1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v0[169];
    static os_log_type_t.error.getter();
    id v12 = HKLogActivity;
    char v10 = 2;
    os_log(_:dso:log:_:_:)();

    char v13 = *(unsigned char *)(v11 + 232);
    char v6 = (char *)(v11 + 232);
    char v5 = v13;
    uint64_t v8 = *((void *)v6 - 2);
    uint64_t v9 = *((void *)v6 - 1);
    *((void *)v6 - 2) = 0;
    *((void *)v6 - 1) = 0;
  }
  *char v6 = v10;
  sub_100403EB0(v8, v9, v5);
  return _swift_asyncLet_finish(v0 + 2, v0 + 167, sub_100595D40, v0 + 162);
}

uint64_t sub_100595D40()
{
  return _swift_task_switch(sub_100595D5C, *(void *)(v0 + 1352), 0);
}

uint64_t sub_100595D5C()
{
  return _swift_asyncLet_finish(v0 + 656, v0 + 1344, sub_100595D7C, v0 + 16);
}

uint64_t sub_100595D7C()
{
  return _swift_task_switch(sub_100595D98, *(void *)(v0 + 1352), 0);
}

uint64_t sub_100595D98()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100595DAC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100595DCC, 0, 0);
}

uint64_t sub_100595DCC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = sub_10007E4EC((void *)(v1 + 120), *(void *)(v1 + 144));
  return _swift_task_switch(sub_100595E40, v1, 0);
}

uint64_t sub_100595E40()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 200);
  v0[5] = v2;
  char v3 = *(unsigned char *)(v1 + 208);
  swift_bridgeObjectRetain();
  id v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *id v4 = v0;
  v4[1] = sub_100595EFC;
  return sub_1002597A4(v2, v3);
}

uint64_t sub_100595EFC(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_errorRelease();
    char v5 = sub_100596070;
  }
  else
  {
    *(void *)(v4 + 56) = a1;
    char v5 = sub_10059604C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10059604C()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100596070()
{
  **(void **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100596090(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1005960B0, 0, 0);
}

uint64_t sub_1005960B0()
{
  uint64_t v1 = *sub_10007E4EC((void *)(*(void *)(v0 + 24) + 160), *(void *)(*(void *)(v0 + 24) + 184));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100596154;
  return sub_10063D55C(v1);
}

uint64_t sub_100596154(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    char v5 = sub_100596070;
  }
  else
  {
    *(void *)(v4 + 40) = a1;
    char v5 = sub_100596280;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100596280()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005962A4()
{
  swift_bridgeObjectRelease();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 120);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 160);
  swift_bridgeObjectRelease();
  sub_100403EB0(*(void *)(v0 + 216), *(void *)(v0 + 224), *(unsigned char *)(v0 + 232));
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for AppRecommendationDataProvider()
{
  return self;
}

uint64_t sub_100596328(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else if (!a3)
  {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for AppRecommendationDataProvider.State(uint64_t a1)
{
  return sub_100403EB0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s10FitnessApp29AppRecommendationDataProviderC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100596328(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AppRecommendationDataProvider.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100596328(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100403EB0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AppRecommendationDataProvider.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100403EB0(v4, v5, v6);
  return a1;
}

uint64_t sub_100596480(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppRecommendationDataProvider.State()
{
  return &type metadata for AppRecommendationDataProvider.State;
}

ValueMetadata *type metadata accessor for AppRecommendationDataProvider.AppIconCacheStatus()
{
  return &type metadata for AppRecommendationDataProvider.AppIconCacheStatus;
}

uint64_t sub_1005964B8(uint64_t a1, double a2, double a3, double a4)
{
  *(void *)(v5 + 192) = v4;
  *(double *)(v5 + 176) = a3;
  *(double *)(v5 + 184) = a4;
  *(double *)(v5 + 168) = a2;
  *(void *)(v5 + 160) = a1;
  sub_1000AFA94(&qword_10094B7A0);
  *(void *)(v5 + 200) = swift_task_alloc();
  return _swift_task_switch(sub_100596558, v4, 0);
}

uint64_t sub_100596558()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void **)(v0 + 160);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10007E4EC(v1, v2);
  uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  unint64_t v49 = v4;
  v5._uint64_t countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 120;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 120;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v48;
  unint64_t v11 = v49;
  *(void *)(v0 + 208) = v48;
  *(void *)(v0 + 216) = v11;
  os_log_type_t v13 = static os_log_type_t.default.getter();
  uint64_t v14 = (void *)HKLogActivity;
  os_log_type_t v15 = v13;
  if (os_log_type_enabled(HKLogActivity, v13))
  {
    swift_bridgeObjectRetain_n();
    log = v14;
    id v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)id v16 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 152) = sub_10008F1F4(v12, v11, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v15, "[AppRecommendationDataProvider] Looking up artwork for key %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v17 = *(void *)(v0 + 192) + 112;
  swift_beginAccess();
  uint64_t v18 = *(void *)v17;
  if (!*(void *)(*(void *)v17 + 16)) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1000DA1C0(v12, v11);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v34 = *(void *)(v0 + 200);
    uint64_t v35 = *(void *)(v0 + 184);
    *(_OWORD *)logb = *(_OWORD *)(v0 + 168);
    uint64_t v36 = *(void *)(v0 + 160);
    uint64_t v37 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v34, 1, 1, v37);
    sub_10008E75C(v36, v0 + 16);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = 0;
    *(void *)(v38 + 24) = 0;
    *(void *)(v38 + 32) = v12;
    *(void *)(v38 + 40) = v11;
    sub_100093E60((long long *)(v0 + 16), v38 + 48);
    *(_OWORD *)(v38 + 88) = *(_OWORD *)logb;
    *(void *)(v38 + 104) = v35;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1006CA354(v34, (uint64_t)&unk_100963240, v38);
    *(void *)(v0 + 248) = v39;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = *(void *)v17;
    *(void *)uint64_t v17 = 0x8000000000000000;
    sub_1004F0860(v39, 0, v12, v11, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v17 = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v41;
    unint64_t v42 = sub_100593064();
    uint64_t v30 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v41 = v0;
    v41[1] = sub_100596DD8;
    uint64_t v31 = v0 + 128;
    uint64_t v32 = v39;
    unint64_t v33 = v42;
    goto LABEL_10;
  }
  uint64_t v21 = *(void *)(v18 + 56) + 16 * v19;
  uint64_t v22 = *(void **)v21;
  *(void *)(v0 + 224) = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_1001AEDAC(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  long long v25 = (void *)HKLogActivity;
  os_log_type_t v26 = v24;
  if (os_log_type_enabled(HKLogActivity, v24))
  {
    swift_bridgeObjectRetain();
    loga = v25;
    long long v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)long long v27 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 144) = sub_10008F1F4(v12, v11, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, loga, v26, "[AppRecommendationDataProvider][%s] Found artwork in cache.", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if ((v23 & 1) == 0)
    {
LABEL_7:
      swift_retain();
      long long v28 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v28;
      unint64_t v29 = sub_100593064();
      uint64_t v30 = sub_1000AFA94(&qword_10095C080);
      *long long v28 = v0;
      v28[1] = sub_100596C24;
      uint64_t v31 = v0 + 136;
      uint64_t v32 = (uint64_t)v22;
      unint64_t v33 = v29;
LABEL_10:
      return Task.value.getter(v31, v32, v33, v30, &protocol self-conformance witness table for Error);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_7;
    }
  }
  swift_task_dealloc();
  uint64_t v43 = *(uint64_t (**)(void *))(v0 + 8);
  return v43(v22);
}

uint64_t sub_100596C24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  if (v0) {
    unint64_t v4 = sub_100597014;
  }
  else {
    unint64_t v4 = sub_100596D50;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100596D50()
{
  uint64_t v1 = (void *)v0[28];
  sub_1001AEDC8(v1, 0);
  sub_1001AEDC8(v1, 0);
  uint64_t v2 = v0[17];
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_100596DD8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 192);
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_100597094;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 192);
    unint64_t v4 = sub_100596F00;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100596F00()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[24];
  unint64_t v4 = (void *)v0[16];
  swift_beginAccess();
  id v5 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *(void *)(v3 + 112);
  *(void *)(v3 + 112) = 0x8000000000000000;
  sub_1004F0860((uint64_t)v4, 1, v2, v1, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 112) = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(id))v0[1];
  return v7(v5);
}

uint64_t sub_100597014()
{
  uint64_t v1 = *(void **)(v0 + 224);
  sub_1001AEDC8(v1, 0);
  sub_1001AEDC8(v1, 0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100597094()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100597100(uint64_t a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(double *)(v9 + 88) = a3;
  *(double *)(v9 + 96) = a4;
  *(double *)(v9 + 80) = a2;
  *(void *)(v9 + 64) = a8;
  *(void *)(v9 + 72) = a9;
  *(void *)(v9 + 48) = a1;
  *(void *)(v9 + 56) = a7;
  return _swift_task_switch(sub_10059712C, 0, 0);
}

uint64_t sub_10059712C()
{
  uint64_t v18 = v0;
  os_log_type_t v1 = static os_log_type_t.debug.getter();
  uint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    uint64_t v5 = v0[7];
    unint64_t v4 = v0[8];
    swift_bridgeObjectRetain_n();
    uint64_t v6 = v2;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[5] = sub_10008F1F4(v5, v4, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v3, "[AppRecommendationDataProvider][%s] Fetching artwork.", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  Swift::String v8 = (void *)v0[9];
  uint64_t v9 = v8[3];
  uint64_t v10 = v8[4];
  sub_10007E4EC(v8, v9);
  id v16 = (uint64_t (*)(uint64_t, uint64_t, __n128, __n128, __n128))(*(void *)(v10 + 40) + **(int **)(v10 + 40));
  unint64_t v11 = (void *)swift_task_alloc();
  v0[13] = v11;
  *unint64_t v11 = v0;
  v11[1] = sub_100597364;
  v12.n128_u64[0] = v0[11];
  v13.n128_u64[0] = v0[12];
  v14.n128_u64[0] = v0[10];
  return v16(v9, v10, v14, v12, v13);
}

uint64_t sub_100597364(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  if (v1) {
    unint64_t v4 = sub_100597528;
  }
  else {
    unint64_t v4 = sub_100597478;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100597478()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    **(void **)(v0 + 48) = v1;
  }
  else
  {
    sub_1005978B0();
    swift_allocError();
    unsigned char *v3 = 2;
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100597528()
{
  os_log_type_t v15 = v0;
  os_log_type_t v1 = static os_log_type_t.error.getter();
  uint64_t v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    uint64_t v4 = v0[15];
    uint64_t v6 = v0[7];
    unint64_t v5 = v0[8];
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v7 = v2;
    uint64_t v8 = swift_slowAlloc();
    v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[2] = sub_10008F1F4(v6, v5, v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    v0[3] = v4;
    swift_errorRetain();
    sub_1000AFA94(&qword_10095C080);
    uint64_t v9 = String.init<A>(describing:)();
    v0[4] = sub_10008F1F4(v9, v10, v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v3, "[AppRecommendationDataProvider][%s] Failed to fetch artwork: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
  }
  sub_1005978B0();
  swift_allocError();
  *unint64_t v11 = 2;
  swift_willThrow();
  __n128 v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100597780()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 48);

  return swift_deallocObject();
}

uint64_t sub_1005977C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  long long v9 = *(_OWORD *)(v1 + 88);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = sub_10005DB5C;
  *(void *)(v7 + 96) = v6;
  *(_OWORD *)(v7 + 80) = v9;
  *(void *)(v7 + 64) = v5;
  *(void *)(v7 + 72) = v1 + 48;
  *(void *)(v7 + 48) = a1;
  *(void *)(v7 + 56) = v4;
  return _swift_task_switch(sub_10059712C, 0, 0);
}

unint64_t sub_1005978B0()
{
  unint64_t result = qword_100963248;
  if (!qword_100963248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100963248);
  }
  return result;
}

uint64_t sub_100597904(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  uint64_t v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1000DBD6C;
  return _swift_task_switch(sub_100595DCC, 0, 0);
}

uint64_t sub_1005979B0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  uint64_t v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1000DBD6C;
  return _swift_task_switch(sub_1005960B0, 0, 0);
}

unsigned char *storeEnumTagSinglePayload for AppRecommendationDataProvider.AppRecommendationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100597B28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppRecommendationDataProvider.AppRecommendationError()
{
  return &type metadata for AppRecommendationDataProvider.AppRecommendationError;
}

unint64_t sub_100597B64()
{
  unint64_t result = qword_100963280;
  if (!qword_100963280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963280);
  }
  return result;
}

void destroy for ActivitySharingFriendDetailViewModel(uint64_t a1)
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 80);
}

uint64_t initializeWithCopy for ActivitySharingFriendDetailViewModel(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void **)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v6;
  uint64_t v8 = *(void **)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_retain();
  id v9 = v3;
  swift_retain();
  id v10 = v5;
  id v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v8;
  return a1;
}

uint64_t assignWithCopy for ActivitySharingFriendDetailViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void **)(a2 + 40);
  uint64_t v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v10 = *(void **)(a1 + 56);
  id v11 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v11;
  id v12 = v11;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __n128 v13 = *(void **)(a2 + 80);
  __n128 v14 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v13;
  id v15 = v13;

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

__n128 initializeWithTake for ActivitySharingFriendDetailViewModel(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ActivitySharingFriendDetailViewModel(uint64_t a1, uint64_t a2)
{
  swift_release();
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingFriendDetailViewModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingFriendDetailViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingFriendDetailViewModel()
{
  return &type metadata for ActivitySharingFriendDetailViewModel;
}

uint64_t sub_100597F50(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  uint64_t v18 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    unint64_t v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1) {
      __break(1u);
    }
    unint64_t v4 = v17 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v7 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v8 = v18;
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v9 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v9) {
            goto LABEL_34;
          }
          id v10 = *(id *)(v18 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v9) {
            goto LABEL_37;
          }
          uint64_t v11 = (uint64_t)v10;
          id v12 = *(id *)(v18 + 32 + 8 * v1);
        }
        id v13 = v12;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v18 < 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v8 = sub_1005EC1A8(v18);
          uint64_t v18 = v8;
        }
        uint64_t v14 = (v8 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(void *)(v14 + 32) = v13;
        specialized Array._endMutation()();
        uint64_t v15 = v18;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v18 < 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v15 = sub_1005EC1A8(v18);
          uint64_t v18 = v15;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v6 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(void *)(v6 + 32) = v11;
        specialized Array._endMutation()();
      }
      unint64_t v5 = v7;
      if (v4 == v7) {
        return v18;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_100369068(v1);
    uint64_t v18 = v2;
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

uint64_t sub_10059816C()
{
  *(void *)(v1 + 56) = v0;
  type metadata accessor for MainActor();
  *(void *)(v1 + 64) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100598204, v3, v2);
}

uint64_t sub_100598204()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  char v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  if (v2)
  {
    uint64_t v6 = (_OWORD *)swift_allocObject();
    long long v7 = *(_OWORD *)(v3 + 16);
    v6[1] = *(_OWORD *)v3;
    v6[2] = v7;
    long long v9 = *(_OWORD *)(v3 + 48);
    long long v8 = *(_OWORD *)(v3 + 64);
    long long v10 = *(_OWORD *)(v3 + 32);
    *(_OWORD *)((char *)v6 + 89) = *(_OWORD *)(v3 + 73);
    v6[4] = v9;
    v6[5] = v8;
    v6[3] = v10;
    uint64_t v11 = swift_allocObject();
    long long v12 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v11 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v11 + 32) = v12;
    long long v13 = *(_OWORD *)(v3 + 32);
    long long v14 = *(_OWORD *)(v3 + 48);
    long long v15 = *(_OWORD *)(v3 + 64);
    *(_OWORD *)(v11 + 89) = *(_OWORD *)(v3 + 73);
    *(_OWORD *)(v11 + 64) = v14;
    *(_OWORD *)(v11 + 80) = v15;
    *(_OWORD *)(v11 + 48) = v13;
    *(void *)(v11 + 112) = &unk_1009632C0;
    *(void *)(v11 + 120) = v6;
    uint64_t v16 = *(void **)(v3 + 40);
    uint64_t v17 = *(void *)(v3 + 24);
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 16) = v16;
    *(void *)(v0 + 24) = v17;
    *(void *)(v0 + 32) = &unk_1009632D0;
    *(void *)(v0 + 40) = v11;
    *(unsigned char *)(v0 + 48) = 8;
    sub_10034EB78(v3);
    sub_10034EB78(v3);
    id v18 = v16;
  }
  else
  {
    unint64_t v4 = *(void **)(v3 + 40);
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 16) = v4;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = 0;
    *(void *)(v0 + 40) = 0;
    *(unsigned char *)(v0 + 48) = 7;
    id v5 = v4;
  }
  swift_retain();
  static Published.subscript.setter();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1005983E4(uint64_t a1)
{
  v1[25] = a1;
  v1[26] = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[31] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[32] = v3;
  v1[33] = v2;
  return _swift_task_switch(sub_1005984D8, v3, v2);
}

uint64_t sub_1005984D8()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = *(void **)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 40);
  v0[34] = v3;
  v0[2] = v0;
  v0[7] = (char *)v0 + 153;
  v0[3] = sub_1005985E4;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1004213C8;
  v0[13] = &unk_1008CFD38;
  v0[14] = v4;
  [v2 sendCompetitionRequestToFriend:v3 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1005985E4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 280) = v2;
  uint64_t v3 = *(void *)(v1 + 264);
  uint64_t v4 = *(void *)(v1 + 256);
  if (v2) {
    uint64_t v5 = sub_100598A40;
  }
  else {
    uint64_t v5 = sub_100598714;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100598714()
{
  os_log_type_t v26 = v0;
  uint64_t v2 = v0 + 25;
  uint64_t v1 = v0[25];
  swift_release();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  uint64_t v4 = HKLogActivity;
  sub_10034EB78(v1);
  sub_10034EB78(v1);
  if (os_log_type_enabled(v4, v3))
  {
    uint64_t v5 = (void *)v0[34];
    uint64_t v6 = v0[25];
    sub_10034EB78(v6);
    sub_10034EB78(v6);
    log = v4;
    uint64_t v7 = swift_slowAlloc();
    char v23 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    id v8 = [v5 UUID];
    if (v8)
    {
      long long v9 = v8;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = 1;
    }
    long long v12 = (void *)v0[34];
    uint64_t v13 = v0[29];
    uint64_t v14 = v0[30];
    uint64_t v15 = v0[25];
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, v10, 1, v16);
    sub_1002D5014(v13, v14);
    uint64_t v17 = Optional.description.getter();
    unint64_t v19 = v18;
    sub_1000CD2E4(v14);
    v0[24] = sub_10008F1F4(v17, v19, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10051E1C0(v15);
    sub_10051E1C0(v15);
    *(_WORD *)(v7 + 12) = 2112;
    v0[21] = v12;
    id v20 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v23 = v12;
    sub_10051E1C0(v15);
    sub_10051E1C0(v15);
    _os_log_impl((void *)&_mh_execute_header, log, v3, "Successfully sent competition request to friend: %{public}s - %@", (uint8_t *)v7, 0x16u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v11 = *v2;
    sub_10051E1C0(*v2);
    sub_10051E1C0(v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100598A40()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  swift_release();
  swift_willThrow();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  os_log_type_t v3 = HKLogActivity;
  sub_10034EB78(v1);
  sub_10034EB78(v1);
  if (os_log_type_enabled(v3, v2))
  {
    uint64_t v4 = *(void **)(v0 + 272);
    uint64_t v5 = *(void *)(v0 + 200);
    sub_10034EB78(v5);
    swift_errorRetain();
    sub_10034EB78(v5);
    swift_errorRetain();
    log = v3;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446722;
    id v8 = [v4 UUID];
    os_log_type_t v26 = v2;
    if (v8)
    {
      long long v9 = v8;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = 1;
    }
    long long v12 = *(void **)(v0 + 272);
    uint64_t v14 = *(void *)(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, v10, 1, v16);
    sub_1002D5014(v14, v13);
    uint64_t v17 = Optional.description.getter();
    unint64_t v19 = v18;
    sub_1000CD2E4(v13);
    *(void *)(v0 + 160) = sub_10008F1F4(v17, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10051E1C0(v15);
    sub_10051E1C0(v15);
    *(_WORD *)(v6 + 12) = 2114;
    swift_errorRetain();
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 176) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v20;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v6 + 22) = 2112;
    *(void *)(v0 + 184) = v12;
    id v21 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v7[1] = v12;
    sub_10051E1C0(v15);
    sub_10051E1C0(v15);
    _os_log_impl((void *)&_mh_execute_header, log, v26, "Failed to send competition request to friend: %{public}s error: %{public}@ - %@", (uint8_t *)v6, 0x20u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 200);
    sub_10051E1C0(v11);
    sub_10051E1C0(v11);
  }
  uint64_t v22 = *(void **)(v0 + 272);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 120) = v22;
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = 0;
  *(void *)(v0 + 128) = 0;
  *(unsigned char *)(v0 + 152) = 9;
  id v23 = v22;
  swift_retain();
  static Published.subscript.setter();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100598E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  type metadata accessor for MainActor();
  v3[15] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[16] = v5;
  v3[17] = v4;
  return _swift_task_switch(sub_100598EE0, v5, v4);
}

uint64_t sub_100598EE0()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 96) + 40);
  if (![v1 supportsCompetitions])
  {
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 16) = v1;
    *(void *)(v0 + 32) = 0;
    *(void *)(v0 + 40) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 48) = 10;
    id v5 = v1;
    swift_retain();
    goto LABEL_5;
  }
  if ([v1 isMyActivityDataCurrentlyHidden])
  {
    uint64_t v2 = *(void *)(v0 + 112);
    uint64_t v3 = *(void *)(v0 + 104);
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 56) = v1;
    *(void *)(v0 + 64) = v3;
    *(void *)(v0 + 72) = v2;
    *(void *)(v0 + 80) = 0;
    *(unsigned char *)(v0 + 88) = 11;
    id v4 = v1;
    swift_retain();
    swift_retain();
LABEL_5:
    static Published.subscript.setter();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  long long v9 = (uint64_t (*)(void))(*(void *)(v0 + 104) + **(int **)(v0 + 104));
  id v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v8;
  void *v8 = v0;
  v8[1] = sub_100599104;
  return v9();
}

uint64_t sub_100599104()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return _swift_task_switch(sub_100599224, v3, v2);
}

uint64_t sub_100599224()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100599284(uint64_t a1)
{
  v1[30] = a1;
  v1[31] = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[36] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[37] = v3;
  v1[38] = v2;
  return _swift_task_switch(sub_100599378, v3, v2);
}

uint64_t sub_100599378()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = *(void **)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 40);
  v0[39] = v3;
  v0[2] = v0;
  v0[7] = (char *)v0 + 153;
  v0[3] = sub_100599484;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1004213C8;
  v0[13] = &unk_1008CFCD0;
  v0[14] = v4;
  [v2 acceptCompetitionRequestFromFriend:v3 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100599484()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 320) = v2;
  uint64_t v3 = *(void *)(v1 + 304);
  uint64_t v4 = *(void *)(v1 + 296);
  if (v2) {
    uint64_t v5 = sub_100599948;
  }
  else {
    uint64_t v5 = sub_1005995B4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1005995B4()
{
  uint64_t v29 = v0;
  uint64_t v2 = (uint64_t *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 240);
  swift_release();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  uint64_t v4 = HKLogActivity;
  sub_10034EB78(v1);
  sub_10034EB78(v1);
  if (os_log_type_enabled(v4, v3))
  {
    uint64_t v5 = *(void **)(v0 + 312);
    uint64_t v6 = *(void *)(v0 + 240);
    sub_10034EB78(v6);
    sub_10034EB78(v6);
    log = v4;
    uint64_t v7 = swift_slowAlloc();
    os_log_type_t v26 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    id v8 = [v5 UUID];
    if (v8)
    {
      long long v9 = v8;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = 1;
    }
    long long v12 = *(void **)(v0 + 312);
    uint64_t v13 = *(void *)(v0 + 272);
    uint64_t v14 = *(void *)(v0 + 280);
    uint64_t v15 = *(void *)(v0 + 240);
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, v10, 1, v16);
    sub_1002D5014(v13, v14);
    uint64_t v17 = Optional.description.getter();
    unint64_t v19 = v18;
    sub_1000CD2E4(v14);
    *(void *)(v0 + 232) = sub_10008F1F4(v17, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10051E1C0(v15);
    sub_10051E1C0(v15);
    *(_WORD *)(v7 + 12) = 2112;
    *(void *)(v0 + 208) = v12;
    id v20 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v26 = v12;
    sub_10051E1C0(v15);
    sub_10051E1C0(v15);
    _os_log_impl((void *)&_mh_execute_header, log, v3, "Successfully accepted competition request from friend: %{public}s - %@", (uint8_t *)v7, 0x16u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v11 = *v2;
    sub_10051E1C0(*v2);
    sub_10051E1C0(v11);
  }
  id v21 = *(void **)(v0 + 312);
  uint64_t v22 = *(void *)(*(void *)(v0 + 240) + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 120) = v21;
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = 0;
  *(void *)(v0 + 128) = v22;
  *(unsigned char *)(v0 + 152) = 13;
  id v23 = v21;
  swift_retain();
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100599948()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  swift_release();
  swift_willThrow();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  os_log_type_t v3 = HKLogActivity;
  sub_10034EB78(v1);
  sub_10034EB78(v1);
  if (os_log_type_enabled(v3, v2))
  {
    uint64_t v4 = *(void **)(v0 + 312);
    uint64_t v5 = *(void *)(v0 + 240);
    sub_10034EB78(v5);
    swift_errorRetain();
    sub_10034EB78(v5);
    swift_errorRetain();
    log = v3;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446722;
    id v8 = [v4 UUID];
    os_log_type_t v26 = v2;
    if (v8)
    {
      long long v9 = v8;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = 1;
    }
    long long v12 = *(void **)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 264);
    uint64_t v15 = *(void *)(v0 + 240);
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, v10, 1, v16);
    sub_1002D5014(v14, v13);
    uint64_t v17 = Optional.description.getter();
    unint64_t v19 = v18;
    sub_1000CD2E4(v13);
    *(void *)(v0 + 200) = sub_10008F1F4(v17, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10051E1C0(v15);
    sub_10051E1C0(v15);
    *(_WORD *)(v6 + 12) = 2114;
    swift_errorRetain();
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 224) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v20;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v6 + 22) = 2112;
    *(void *)(v0 + 216) = v12;
    id v21 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v7[1] = v12;
    sub_10051E1C0(v15);
    sub_10051E1C0(v15);
    _os_log_impl((void *)&_mh_execute_header, log, v26, "Failed to accept competition request from friend: %{public}s error: %{public}@ - %@", (uint8_t *)v6, 0x20u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 240);
    sub_10051E1C0(v11);
    sub_10051E1C0(v11);
  }
  uint64_t v22 = *(void **)(v0 + 312);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 160) = v22;
  *(void *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 0;
  *(void *)(v0 + 168) = 0;
  *(unsigned char *)(v0 + 192) = 14;
  id v23 = v22;
  swift_retain();
  static Published.subscript.setter();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100599D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  type metadata accessor for MainActor();
  v3[10] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[11] = v5;
  v3[12] = v4;
  return _swift_task_switch(sub_100599DE8, v5, v4);
}

uint64_t sub_100599DE8()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 56) + 40);
  if ([v1 isMyActivityDataCurrentlyHidden])
  {
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 64);
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 16) = v1;
    *(void *)(v0 + 24) = v3;
    *(void *)(v0 + 32) = v2;
    *(void *)(v0 + 40) = 0;
    *(unsigned char *)(v0 + 48) = 15;
    id v4 = v1;
    swift_retain();
    swift_retain();
    static Published.subscript.setter();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    id v8 = (uint64_t (*)(void))(*(void *)(v0 + 64) + **(int **)(v0 + 64));
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100599F94;
    return v8();
  }
}

uint64_t sub_100599F94()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_10059A0B4, v3, v2);
}

uint64_t sub_10059A0B4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_10059A114()
{
  swift_getKeyPath();
  sub_1000AFA94(&qword_10094ECD8);
  sub_1000A132C(&qword_100963298, &qword_10094ECD8);
  sub_10008F89C((unint64_t *)&qword_100954750, (void (*)(uint64_t))&type metadata accessor for Date);
  unint64_t v0 = Sequence.sorted<A>(key:)();
  swift_release();
  if (!(v0 >> 62))
  {
    uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    __n128 result = (void *)swift_bridgeObjectRetain();
    if (v1) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  __n128 result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v1 = (uint64_t)result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v1 >= 1)
  {
    for (uint64_t i = 0; i != v1; ++i)
    {
      if ((v0 & 0xC000000000000001) != 0) {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v4 = *(id *)(v0 + 8 * i + 32);
      }
      uint64_t v5 = v4;
      id v6 = [v4 hkWorkoutFromFriendWorkout];

      if (v6)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10059A328(void *a1)
{
  id v1 = [a1 friendWorkouts];
  unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v3 = v1;
    sub_10007E2D8(0, (unint64_t *)&qword_100955BE0);
    sub_1000AFA94(&qword_10094ECD8);
    sub_1005590FC();
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    swift_getKeyPath();
    sub_1000AFA94(&qword_100963288);
    sub_1000A132C(&qword_100963290, &qword_100963288);
    uint64_t v4 = Sequence.sorted<A>(key:)();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = v4 + 40;
      do
      {
        id v7 = *(id *)(v6 - 8);
        swift_bridgeObjectRetain();
        id v8 = sub_10059A114();
        swift_bridgeObjectRelease();

        sub_1001E3C40((unint64_t)v8);
        v6 += 16;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v2 = sub_100597F50((unint64_t)_swiftEmptyArrayStorage);
  }
  if ((v2 & 0x8000000000000000) == 0 && (v2 & 0x4000000000000000) == 0) {
    return v2 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v9 = sub_100369068(v2);
  swift_bridgeObjectRelease();
  return (uint64_t)v9;
}

id sub_10059A4F4(void *a1, uint64_t a2)
{
  id v3 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v4 = [a1 as_detailedSharingDurationString];
  if (v4)
  {
    uint64_t v5 = v4;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  id v7 = self;
  uint64_t v31 = NSForegroundColorAttributeName;
  id v32 = v7;
  id v8 = [v7 secondaryLabelColor];
  uint64_t v9 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v10 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 80) = v3;
  uint64_t v30 = NSFontAttributeName;
  id v11 = v3;
  sub_1000DFC2C(inited);
  id v12 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F89C((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v12 initWithString:v13 attributes:isa];

  if (([a1 hasPendingCompetitionRequestFromMe] & 1) != 0
    || [a1 isCompetitionActive])
  {
    [a1 as_competitionStatusBreadcrumbStringForExperienceType:a2];
    if (v16)
    {
      uint64_t v17 = v16;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v18 = objc_allocWithZone((Class)NSAttributedString);
      NSString v19 = String._bridgeToObjectiveC()();
      id v20 = [v18 initWithString:v19];

      [v15 appendAttributedString:v20];
      uint64_t v21 = swift_initStackObject();
      *(_OWORD *)(v21 + 16) = xmmword_10074E640;
      *(void *)(v21 + 32) = v31;
      uint64_t v22 = v31;
      *(void *)(v21 + 40) = [v32 as_darkCompetitionGold];
      *(void *)(v21 + 64) = v9;
      *(void *)(v21 + 72) = v30;
      *(void *)(v21 + 104) = v10;
      *(void *)(v21 + 80) = v11;
      id v23 = v11;
      os_log_type_t v24 = v30;
      sub_1000DFC2C(v21);
      id v25 = objc_allocWithZone((Class)NSAttributedString);
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class v27 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v28 = [v25 initWithString:v26 attributes:v27];

      [v15 appendAttributedString:v28];
    }
  }

  return v15;
}

void sub_10059A8EC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, void *a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  swift_retain();
  id v14 = a3;
  id v15 = a5;
  swift_retain();
  id v16 = [v14 currentSnapshot];
  uint64_t v29 = a6;
  uint64_t v30 = a2;
  id v27 = v15;
  uint64_t v28 = a1;
  if (v16)
  {
    uint64_t v17 = v16;
    if ([v16 hasCarriedForwardGoals])
    {
      char v18 = a4;
      id v19 = 0;
    }
    else
    {
      id v20 = [v17 activitySummary];
      id v19 = v20;
      char v18 = a4;
      if (v20) {
        [v20 setDeprecatedPauseForInternalSwiftClient:a4 & 1];
      }
    }
  }
  else
  {
    char v18 = a4;
    id v19 = 0;
  }
  uint64_t v21 = sub_10059A328(v14);
  uint64_t v22 = FIExperienceTypeWithHealthStore();
  id v23 = sub_10059A4F4(v14, v22);
  char v24 = FIDeviceMeetsMinimumOSVersionGlory();
  id v25 = [v14 currentCacheIndex];
  unsigned __int8 v26 = [v14 estimatedIsStandaloneForSnapshotIndex:v25];

  *(void *)a7 = v28;
  *(void *)(a7 + 8) = v27;
  *(void *)(a7 + 16) = v29;
  *(void *)(a7 + 24) = v22;
  *(unsigned char *)(a7 + 32) = v24;
  *(void *)(a7 + 40) = v14;
  *(unsigned char *)(a7 + 48) = v18 & 1;
  *(void *)(a7 + 56) = v19;
  *(void *)(a7 + 64) = v21;
  *(void *)(a7 + 72) = v30;
  *(void *)(a7 + 80) = v23;
  *(unsigned char *)(a7 + 88) = v26;
}

const char *sub_10059AA9C()
{
  return "integerValue";
}

id sub_10059AAA8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 integerValue];
  *a2 = result;
  return result;
}

uint64_t sub_10059AAE8()
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10059AB58()
{
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_1000DBD6C;
  return sub_1005983E4(v0 + 16);
}

uint64_t sub_10059ABEC()
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10059AC64()
{
  uint64_t v2 = v0 + 16;
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_10005DB5C;
  return sub_100598E44(v2, v4, v3);
}

uint64_t sub_10059AD0C()
{
  uint64_t result = type metadata accessor for Binding();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10059ADA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  unint64_t v8 = v6 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v8 & (v6 + 16);
  int v10 = v6 & 0x100000;
  if (v7 > 7 || v10 != 0 || ((v7 + 16) & (unint64_t)~v7) + *(void *)(v5 + 64) + v9 > 0x18)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + v9);
    swift_retain();
  }
  else
  {
    uint64_t v14 = a2[1];
    *a1 = *a2;
    a1[1] = v14;
    id v15 = (void *)(v8 & ((unint64_t)a1 + 23));
    id v16 = (void *)(v8 & ((unint64_t)a2 + 23));
    *id v15 = *v16;
    uint64_t v17 = ~v7;
    char v18 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    id v19 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    *char v18 = *v19;
    uint64_t v20 = v7 + 8;
    unint64_t v21 = ((unint64_t)v18 + v20) & v17;
    unint64_t v22 = ((unint64_t)v19 + v20) & v17;
    id v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v23(v21, v22, v4);
  }
  return a1;
}

uint64_t sub_10059AEF0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v8 + 80);
  swift_release();
  swift_release();
  int v6 = *(uint64_t (**)(unint64_t, uint64_t))(v8 + 8);

  return v6((v5 + ((((a1 + (v5 | 7) + 16) & ~(v5 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v5, v4);
}

void *sub_10059AFB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = (v7 | 7) + 16;
  unint64_t v9 = (unint64_t)a1 + v8;
  int v10 = (void *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  id v11 = (void *)(v9 & ~(v7 | 7));
  *id v11 = *v10;
  id v12 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *id v12 = *v13;
  uint64_t v14 = ((unint64_t)v12 + v7 + 8) & ~v7;
  uint64_t v15 = ((unint64_t)v13 + v7 + 8) & ~v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v6(v14, v15, v5);
  return a1;
}

void *sub_10059B08C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 16;
  int v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  id v11 = (void *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *int v10 = *v11;
  swift_retain();
  swift_release();
  id v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *id v12 = *v13;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 24))(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, v6);
  return a1;
}

_OWORD *sub_10059B19C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void (**)(unint64_t, unint64_t))(v4 + 32);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 | 7) + 16;
  unint64_t v8 = (unint64_t)a1 + v7;
  uint64_t v9 = (void *)(((unint64_t)a2 + v7) & ~(v6 | 7));
  int v10 = (void *)(v8 & ~(v6 | 7));
  *int v10 = *v9;
  id v11 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v12 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *id v11 = *v12;
  v5(((unint64_t)v11 + v6 + 8) & ~v6, ((unint64_t)v12 + v6 + 8) & ~v6);
  return a1;
}

void *sub_10059B23C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 7) + 16;
  id v11 = (void *)(((unint64_t)a1 + v10) & ~(v9 | 7));
  id v12 = (void *)(((unint64_t)a2 + v10) & ~(v9 | 7));
  *id v11 = *v12;
  swift_release();
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))(((unint64_t)v13 + v9 + 8) & ~v9, ((unint64_t)v14 + v9 + 8) & ~v9, v7);
  return a1;
}

uint64_t sub_10059B324(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF) {
    int v6 = 0x7FFFFFFF;
  }
  else {
    int v6 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  if (v5 >= 0) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v6;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v9 = v7 | 7;
  int v10 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_26;
  }
  uint64_t v11 = ((v7 + 16) & ~v7) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v7 + 16) & ~v9);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v15 < 2)
    {
LABEL_26:
      if (v8 != 0x7FFFFFFF) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((v7
      }
                                                                      + (((((unint64_t)a1 + v9 + 16) & ~v9) + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + 8) & ~v7);
      unint64_t v17 = *((void *)a1 + 1);
      if (v17 >= 0xFFFFFFFF) {
        LODWORD(v17) = -1;
      }
      return (v17 + 1);
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_26;
  }
LABEL_18:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v11 | v16) + 1;
}

void sub_10059B4F8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  if (v7 >= 0) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~(v9 | 7));
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x10059B78CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 == 0x7FFFFFFF)
        {
          if ((a2 & 0x80000000) != 0)
          {
            *(void *)a1 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            *((void *)a1 + 1) = a2 - 1;
          }
        }
        else
        {
          unint64_t v18 = (v9 + ((((unint64_t)&a1[(v9 | 7) + 16] & ~(v9 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9;
          id v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for UnitsSettingsSectionView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10059B7CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10059B818()
{
  return Binding.projectedValue.getter();
}

uint64_t sub_10059B854@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[2];
  uint64_t v24 = a1[3];
  uint64_t v25 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = a1[4];
  uint64_t v22 = a1[5];
  uint64_t v23 = v6;
  uint64_t v7 = type metadata accessor for UnitsSettingsItemView();
  uint64_t v8 = a1[6];
  uint64_t v36 = AssociatedTypeWitness;
  uint64_t v37 = &type metadata for String;
  uint64_t v38 = v7;
  uint64_t v39 = v8;
  uint64_t v40 = &protocol witness table for String;
  type metadata accessor for ForEach();
  uint64_t v9 = type metadata accessor for Section();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned int v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v15 = (char *)&v22 - v14;
  uint64_t v36 = sub_10059BAF4();
  uint64_t v37 = v16;
  LOBYTE(v38) = v17 & 1;
  uint64_t v39 = v18;
  uint64_t v26 = v4;
  uint64_t v27 = v24;
  uint64_t v28 = v23;
  uint64_t v29 = v22;
  uint64_t v30 = v8;
  uint64_t v31 = v2;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v19 = swift_getWitnessTable();
  Section<>.init(header:content:)();
  id v32 = &protocol witness table for Text;
  uint64_t v33 = v19;
  uint64_t v34 = &protocol witness table for EmptyView;
  swift_getWitnessTable();
  sub_10004C704((uint64_t)v12, v9, (uint64_t)v15);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v12, v9);
  sub_10004C704((uint64_t)v15, v9, v25);
  return ((uint64_t (*)(char *, uint64_t))v20)(v15, v9);
}

uint64_t sub_10059BAF4()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_10059BB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v38 = a7;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v43 = a5;
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v44 = a6;
  uint64_t v29 = a6;
  uint64_t v36 = type metadata accessor for UnitsSettingsSectionView();
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v33 = (char *)v28 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  v28[1] = (char *)v28 - v13;
  uint64_t v32 = type metadata accessor for UnitsSettingsItemView();
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v41 = &type metadata for String;
  uint64_t v42 = v32;
  uint64_t v43 = a6;
  uint64_t v44 = &protocol witness table for String;
  uint64_t v14 = type metadata accessor for ForEach();
  uint64_t v35 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unsigned int v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v28 - v18;
  dispatch thunk of static CaseIterable.allCases.getter();
  uint64_t v20 = v33;
  uint64_t v21 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v33, v37, v36);
  unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = a2;
  *((void *)v23 + 3) = a3;
  uint64_t v24 = v30;
  *((void *)v23 + 4) = v31;
  *((void *)v23 + 5) = v24;
  *((void *)v23 + 6) = v29;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v23[v22], v20, v21);
  uint64_t WitnessTable = swift_getWitnessTable();
  ForEach<>.init(_:content:)();
  uint64_t v39 = WitnessTable;
  swift_getWitnessTable();
  sub_10004C704((uint64_t)v16, v14, (uint64_t)v19);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v35 + 8);
  v26(v16, v14);
  sub_10004C704((uint64_t)v19, v14, v38);
  return ((uint64_t (*)(char *, uint64_t))v26)(v19, v14);
}

uint64_t sub_10059BEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v30 = a7;
  uint64_t v31 = a2;
  uint64_t v32 = a8;
  uint64_t v28 = a1;
  uint64_t v11 = type metadata accessor for Binding();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = *(void *)(a3 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UnitsSettingsItemView();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v28 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, v28, a3, v23);
  uint64_t v33 = a3;
  uint64_t v34 = v29;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v37 = v30;
  type metadata accessor for UnitsSettingsSectionView();
  type metadata accessor for Binding();
  Binding.projectedValue.getter();
  sub_1006F1400((uint64_t)v17, (uint64_t)v13, a3, (uint64_t)v21);
  swift_getWitnessTable();
  sub_10004C704((uint64_t)v21, v18, (uint64_t)v25);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26(v21, v18);
  sub_10004C704((uint64_t)v25, v18, v32);
  return ((uint64_t (*)(char *, uint64_t))v26)(v25, v18);
}

uint64_t sub_10059C190@<X0>(uint64_t a1@<X8>)
{
  return sub_10059BB58(*(void *)(v1 + 56), *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), a1);
}

uint64_t sub_10059C1A0()
{
  long long v6 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)(type metadata accessor for UnitsSettingsSectionView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[17];
  swift_release();
  swift_release();
  uint64_t v4 = type metadata accessor for Binding();
  (*(void (**)(uint64_t, void))(*(void *)(v6 - 8) + 8))(v3 + *(int *)(v4 + 32), v6);
  return swift_deallocObject();
}

uint64_t sub_10059C2C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = *(void *)(type metadata accessor for UnitsSettingsSectionView() - 8);
  uint64_t v11 = (uint64_t)v2 + ((*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return sub_10059BEF0(a1, v11, v5, v6, v7, v8, v9, a2);
}

uint64_t sub_10059C390()
{
  return swift_getWitnessTable();
}

id sub_10059C524()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1000AFA94(&qword_100952268);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_window] = 0;
  id v6 = objc_allocWithZone((Class)HKHealthStore);
  uint64_t v7 = v0;
  id v8 = [v6 init];
  id v9 = [objc_allocWithZone((Class)_HKWheelchairUseCharacteristicCache) initWithHealthStore:v8];
  if (!v9) {
    __break(1u);
  }
  uint64_t v10 = v9;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_wheelchairUseCache] = v9;
  type metadata accessor for Dependencies();
  uint64_t v70 = (ValueMetadata *)sub_10007E2D8(0, (unint64_t *)&unk_100963420);
  uint64_t v71 = (_UNKNOWN **)&protocol witness table for _HKWheelchairUseCharacteristicCache;
  *(void *)&long long v69 = v10;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  id v11 = v10;
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = static Dependencies.browsing(wheelchairStatus:queue:)();

  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v69);
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_dependencies] = v13;
  uint64_t v14 = qword_10094A788;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1000876DC(v2, (uint64_t)qword_100952248);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v15, v2);
  TestProperty.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v63 = v8;
  v61[1] = ObjectType;
  if (v69 == 1)
  {
    type metadata accessor for AppCoordinator();
    swift_allocObject();
    uint64_t v17 = AppCoordinator.init(dependencies:)();
    uint64_t v18 = 0x8000000000000000;
  }
  else
  {
    id v16 = objc_allocWithZone((Class)type metadata accessor for BrowsingViewController());
    swift_retain();
    uint64_t v17 = BrowsingViewController.init(dependencies:fitnessSettingsProvider:)();
    type metadata accessor for MetricSceneLifecycleTracker();
    swift_allocObject();
    uint64_t v18 = MetricSceneLifecycleTracker.init(dependencies:)();
  }
  uint64_t v19 = (uint64_t *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator];
  *uint64_t v19 = v17;
  v19[1] = v18;
  type metadata accessor for EngagementAppBadgeProvider();
  uint64_t v20 = swift_allocObject();
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100963430);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_engagementAppBadgeProvider;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_engagementAppBadgeProvider] = v20;
  swift_retain();
  sub_1000AFA94(&qword_10095DF98);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v22 = *(void *)&v7[v21];
  swift_retain();
  swift_retain();
  sub_1000AFA94(&qword_100955710);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v23 = v66;
  uint64_t v24 = v67;
  swift_retain();
  sub_1000AFA94(&qword_100966980);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  id v25 = objc_allocWithZone((Class)type metadata accessor for FitnessAppBadgeAggregator());
  id v26 = sub_10002EBF0(0, (uint64_t)&v69, v22, v23, v24, (uint64_t)v68);
  swift_release();
  swift_unknownObjectRelease();
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_fitnessAppBadgeAggregator] = v26;
  uint64_t v27 = (void *)*v19;
  uint64_t v28 = v19[1];
  uint64_t v70 = &type metadata for SeymourBrowsingCoordinator;
  uint64_t v71 = &off_1008BDEF0;
  *(void *)&long long v69 = v27;
  *((void *)&v69 + 1) = v28;
  type metadata accessor for URLNavigator();
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = sub_1000DDC00((uint64_t)&v69, (uint64_t)&type metadata for SeymourBrowsingCoordinator);
  __n128 v31 = __chkstk_darwin(v30);
  uint64_t v33 = (void *)((char *)v61 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v34 + 16))(v33, v31);
  uint64_t v35 = *v33;
  uint64_t v36 = v33[1];
  sub_1000CEE44(v27, v28);
  sub_1000CEE44(v27, v28);
  sub_1000CEE44(v27, v28);
  uint64_t v37 = swift_retain();
  uint64_t v38 = sub_10006553C(v37, v35, v36, (uint64_t)v27, v28, 0, v29);
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v69);
  sub_1000656A0(v27, v28);
  uint64_t v39 = OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator;
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator] = v38;
  swift_retain();
  sub_1000AFA94((uint64_t *)&unk_100963440);
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v40 = v69;
  swift_unknownObjectRetain();
  swift_retain();
  dispatch thunk of Dependencies.resolve<A>(failureHandler:)();
  swift_release();
  uint64_t v41 = *(void *)&v7[v39];
  uint64_t v42 = (objc_class *)type metadata accessor for SeymourNotificationResponseCoordinator();
  long long v62 = v69;
  uint64_t v43 = (char *)objc_allocWithZone(v42);
  *(void *)&v43[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_amsBag] = v40;
  *(_OWORD *)&v43[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_eventHub] = v62;
  *(void *)&v43[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_urlNavigator] = v41;
  v65.receiver = v43;
  v65.super_class = v42;
  swift_retain();
  *(void *)&v7[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_seymourNotificationResponseCoordinator] = [super init];

  uint64_t v44 = (objc_class *)type metadata accessor for TabletSceneDelegate();
  v64.receiver = v7;
  v64.super_class = v44;
  id v45 = [super init];
  swift_unknownObjectWeakAssign();
  char v46 = self;
  id v47 = v45;
  id v48 = [v46 currentNotificationCenter];
  [v48 setDelegate:v47];

  id v49 = [self sharedInstance];
  *(void *)&long long v69 = 0;
  LODWORD(v42) = [v49 setCategory:AVAudioSessionCategoryAmbient error:&v69];

  if (v42)
  {
    id v50 = (id)v69;
    swift_unknownObjectRelease();
  }
  else
  {
    id v51 = (id)v69;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    os_log_type_t v52 = static os_log_type_t.default.getter();
    id v53 = (void *)HKLogActivity;
    os_log_type_t v54 = v52;
    BOOL v55 = os_log_type_enabled(HKLogActivity, v52);
    uint64_t v56 = v53;
    if (v55)
    {
      long long v57 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v69 = swift_slowAlloc();
      *(_DWORD *)long long v57 = 136315138;
      uint64_t v58 = _typeName(_:qualified:)();
      v68[0] = sub_10008F1F4(v58, v59, (uint64_t *)&v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v56, v54, "%s failed to set AVAudioSession category to ambient", v57, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    swift_unknownObjectRelease();

    swift_errorRelease();
  }
  return v47;
}

id sub_10059CE34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TabletSceneDelegate();
  return [super dealloc];
}

uint64_t type metadata accessor for TabletSceneDelegate()
{
  return self;
}

uint64_t sub_10059CF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[8] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[9] = v9;
  v6[10] = v8;
  return _swift_task_switch(sub_10059D034, v9, v8);
}

uint64_t sub_10059D034()
{
  uint64_t v1 = (void *)(v0[2] + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator);
  v0[11] = *v1;
  v0[12] = v1[1];
  return _swift_task_switch(sub_10059D070, 0, 0);
}

uint64_t sub_10059D070()
{
  if ((v0[12] & 0x8000000000000000) != 0)
  {
    uint64_t v4 = v0[6];
    uint64_t v3 = v0[7];
    uint64_t v5 = v0[5];
    swift_retain();
    static Log.default.getter();
    v6._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
    v6._object = (void *)0x80000001007CF090;
    v7._object = (void *)0x80000001007CF100;
    v7._uint64_t countAndFlagsBits = 0xD000000000000016;
    Logger.trace(file:function:)(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[13] = v8;
    void *v8 = v0;
    v8[1] = sub_10059D1C0;
    uint64_t v9 = v0[3];
    return AppCoordinator.activate(with:)(v9);
  }
  else
  {
    uint64_t v1 = v0[9];
    uint64_t v2 = v0[10];
    return _swift_task_switch(sub_10059D408, v1, v2);
  }
}

uint64_t sub_10059D1C0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10059D338;
  }
  else {
    uint64_t v2 = sub_10059D2D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10059D2D4()
{
  sub_1000656A0(*(void **)(v0 + 88), *(void *)(v0 + 96));
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_10059D408, v1, v2);
}

uint64_t sub_10059D338()
{
  sub_1000656A0(*(void **)(v0 + 88), *(void *)(v0 + 96));
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_10059D39C, v1, v2);
}

uint64_t sub_10059D39C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10059D408()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_release();
  sub_10065DD5C(v1);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_10059D95C(uint64_t a1, uint64_t a2)
{
  v37[2] = a2;
  uint64_t v51 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v41 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)v37 - v6;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10007E2D8(0, (unint64_t *)&unk_1009633F0);
    sub_10059FB2C();
    Set.Iterator.init(_cocoa:)();
    a1 = v46;
    uint64_t v39 = v47;
    uint64_t v8 = v48;
    uint64_t v7 = v49;
    unint64_t v9 = v50;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 56);
    uint64_t v39 = a1 + 56;
    uint64_t v8 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & v11;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  v37[0] = v8;
  v37[4] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v38 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v14 = (void (**)(char *, uint64_t))(v3 + 8);
  v37[3] = (char *)&type metadata for Swift.AnyObject + 8;
  while (a1 < 0)
  {
    uint64_t v18 = __CocoaSet.Iterator.next()();
    if (!v18) {
      goto LABEL_38;
    }
    uint64_t v42 = v18;
    sub_10007E2D8(0, (unint64_t *)&unk_1009633F0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v19 = (id)v44;
    swift_unknownObjectRelease();
    uint64_t v17 = v7;
    uint64_t v15 = v9;
    if (!v19) {
      goto LABEL_38;
    }
LABEL_33:
    id v23 = [v19 URL:v37[0]];
    uint64_t v24 = v40;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = URL.scheme.getter();
    uint64_t v27 = v26;
    uint64_t v28 = *v14;
    (*v14)(v24, v51);
    if (v27)
    {
      uint64_t v44 = static EngagementConstants.badgeLaunchURLString.getter();
      uint64_t v45 = v29;
      uint64_t v42 = v25;
      uint64_t v43 = v27;
      sub_1000A06D0();
      char v30 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30)
      {
        sub_100035104();
        sub_100041C60();
        sub_100055414();
      }
    }
    id v31 = [v19 URL];
    uint64_t v32 = v41;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v33 = URL.scheme.getter();
    uint64_t v35 = v34;
    v28(v32, v51);
    if (v35)
    {
      uint64_t v44 = static EngagementConstants.notificationNewFeaturesTopic.getter();
      uint64_t v45 = v36;
      uint64_t v42 = v33;
      uint64_t v43 = v35;
      sub_1000A06D0();
      StringProtocol.contains<A>(_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
    }
    uint64_t v7 = v17;
    unint64_t v9 = v15;
  }
  if (v9)
  {
    uint64_t v15 = (v9 - 1) & v9;
    unint64_t v16 = __clz(__rbit64(v9)) | (v7 << 6);
    uint64_t v17 = v7;
LABEL_32:
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v16);
    if (!v19) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  int64_t v20 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v20 >= v38) {
      goto LABEL_38;
    }
    unint64_t v21 = *(void *)(v39 + 8 * v20);
    uint64_t v17 = v7 + 1;
    if (!v21)
    {
      uint64_t v17 = v7 + 2;
      if (v7 + 2 >= v38) {
        goto LABEL_38;
      }
      unint64_t v21 = *(void *)(v39 + 8 * v17);
      if (!v21)
      {
        uint64_t v17 = v7 + 3;
        if (v7 + 3 >= v38) {
          goto LABEL_38;
        }
        unint64_t v21 = *(void *)(v39 + 8 * v17);
        if (!v21)
        {
          uint64_t v17 = v7 + 4;
          if (v7 + 4 >= v38) {
            goto LABEL_38;
          }
          unint64_t v21 = *(void *)(v39 + 8 * v17);
          if (!v21)
          {
            uint64_t v17 = v7 + 5;
            if (v7 + 5 >= v38) {
              goto LABEL_38;
            }
            unint64_t v21 = *(void *)(v39 + 8 * v17);
            if (!v21)
            {
              uint64_t v22 = v7 + 6;
              while (v38 != v22)
              {
                unint64_t v21 = *(void *)(v39 + 8 * v22++);
                if (v21)
                {
                  uint64_t v17 = v22 - 1;
                  goto LABEL_31;
                }
              }
LABEL_38:
              sub_1000D9B04();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v15 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_10059DE20(uint64_t a1, uint64_t a2)
{
  void v28[2] = a2;
  uint64_t v40 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10007E2D8(0, (unint64_t *)&unk_1009633F0);
    sub_10059FB2C();
    Set.Iterator.init(_cocoa:)();
    a1 = v35;
    uint64_t v30 = v36;
    uint64_t v6 = v37;
    uint64_t v7 = v38;
    unint64_t v8 = v39;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v30 = a1 + 56;
    uint64_t v6 = ~v9;
    uint64_t v11 = -v9;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v8 = v12 & v10;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  v28[0] = v6;
  v28[4] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v29 = (unint64_t)(v6 + 64) >> 6;
  uint64_t v13 = (void (**)(char *, uint64_t))(v3 + 8);
  v28[3] = (char *)&type metadata for Swift.AnyObject + 8;
  while (a1 < 0)
  {
    uint64_t v17 = __CocoaSet.Iterator.next()();
    if (!v17) {
      goto LABEL_35;
    }
    uint64_t v31 = v17;
    sub_10007E2D8(0, (unint64_t *)&unk_1009633F0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v18 = (id)v33;
    swift_unknownObjectRelease();
    uint64_t v16 = v7;
    uint64_t v14 = v8;
    if (!v18) {
      goto LABEL_35;
    }
LABEL_32:
    id v22 = [v18 URL:v28[0]];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v23 = URL.scheme.getter();
    uint64_t v25 = v24;
    (*v13)(v5, v40);
    if (v25)
    {
      uint64_t v33 = static EngagementConstants.badgeLaunchURLString.getter();
      uint64_t v34 = v26;
      uint64_t v31 = v23;
      uint64_t v32 = v25;
      sub_1000A06D0();
      char v27 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v27)
      {
        sub_100035104();
        sub_100041C60();
        sub_100055414();
      }
    }

    uint64_t v7 = v16;
    unint64_t v8 = v14;
  }
  if (v8)
  {
    uint64_t v14 = (v8 - 1) & v8;
    unint64_t v15 = __clz(__rbit64(v8)) | (v7 << 6);
    uint64_t v16 = v7;
LABEL_31:
    id v18 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    if (!v18) {
      goto LABEL_35;
    }
    goto LABEL_32;
  }
  int64_t v19 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v19 >= v29) {
      goto LABEL_35;
    }
    unint64_t v20 = *(void *)(v30 + 8 * v19);
    uint64_t v16 = v7 + 1;
    if (!v20)
    {
      uint64_t v16 = v7 + 2;
      if (v7 + 2 >= v29) {
        goto LABEL_35;
      }
      unint64_t v20 = *(void *)(v30 + 8 * v16);
      if (!v20)
      {
        uint64_t v16 = v7 + 3;
        if (v7 + 3 >= v29) {
          goto LABEL_35;
        }
        unint64_t v20 = *(void *)(v30 + 8 * v16);
        if (!v20)
        {
          uint64_t v16 = v7 + 4;
          if (v7 + 4 >= v29) {
            goto LABEL_35;
          }
          unint64_t v20 = *(void *)(v30 + 8 * v16);
          if (!v20)
          {
            uint64_t v16 = v7 + 5;
            if (v7 + 5 >= v29) {
              goto LABEL_35;
            }
            unint64_t v20 = *(void *)(v30 + 8 * v16);
            if (!v20)
            {
              uint64_t v21 = v7 + 6;
              while (v29 != v21)
              {
                unint64_t v20 = *(void *)(v30 + 8 * v21++);
                if (v20)
                {
                  uint64_t v16 = v21 - 1;
                  goto LABEL_30;
                }
              }
LABEL_35:
              sub_1000D9B04();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v14 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

void sub_10059E21C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_allocWithZone((Class)UIWindow);
    id v12 = a1;
    id v13 = [v11 initWithWindowScene:v10];
    uint64_t v14 = OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_window;
    unint64_t v15 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_window];
    *(void *)&v3[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_window] = v13;

    uint64_t v16 = *(void **)&v3[v14];
    if (v16
      && (sub_10007E2D8(0, (unint64_t *)&qword_10095BF80),
          id v17 = v16,
          id v18 = (void *)static UIColor.keyTint.getter(),
          [v17 setTintColor:v18],
          v17,
          v18,
          (int64_t v19 = *(void **)&v3[v14]) != 0))
    {
      unint64_t v20 = *(void **)&v3[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator];
      uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator + 8];
      id v22 = v19;
      sub_1000CEE44(v20, v21);
      if (v21 < 0)
      {
        uint64_t v24 = AppCoordinator.rootViewController.getter();
        sub_1000656A0(v20, v21);
        unint64_t v20 = (void *)v24;
      }
      else
      {
        swift_release();
      }
      [v22 setRootViewController:v20];

      uint64_t v23 = *(void **)&v3[v14];
    }
    else
    {
      uint64_t v23 = 0;
    }
    [v23 makeKeyAndVisible];
    id v25 = [a2 URLContexts];
    sub_10007E2D8(0, (unint64_t *)&unk_1009633F0);
    sub_10059FB2C();
    uint64_t v26 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    char v27 = v3;
    sub_10059D95C(v26, (uint64_t)v27);
    swift_bridgeObjectRelease();

    uint64_t v28 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v8, 1, 1, v28);
    type metadata accessor for MainActor();
    id v29 = v12;
    uint64_t v30 = v27;
    id v31 = a2;
    uint64_t v32 = static MainActor.shared.getter();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = v32;
    v33[3] = &protocol witness table for MainActor;
    v33[4] = v30;
    v33[5] = v10;
    v33[6] = v31;
    sub_10005810C((uint64_t)v8, (uint64_t)&unk_100963410, (uint64_t)v33);
    swift_release();
  }
}

uint64_t sub_10059E538(void *a1)
{
  v13[0] = a1;
  uint64_t v1 = type metadata accessor for NavigationAnnotation();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94((uint64_t *)&unk_100966E30);
  uint64_t v9 = (_OWORD *)swift_allocObject();
  v9[1] = xmmword_1007509E0;
  static NavigationAnnotation.external.getter();
  v13[1] = v9;
  sub_10059F97C();
  sub_1000AFA94(&qword_1009633E0);
  sub_10059F9D4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10065E8C8(v13[0], (uint64_t)v4, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v10 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  v10(sub_10006D36C, v11);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10059E7B4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NavigationAnnotation();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = v1;
  sub_10059DE20(a1, (uint64_t)v11);

  uint64_t v12 = swift_bridgeObjectRetain();
  id v13 = (void *)sub_10065DD48(v12);
  uint64_t result = swift_bridgeObjectRelease();
  if (v13)
  {
    v17[0] = _swiftEmptyArrayStorage;
    sub_10059F97C();
    sub_1000AFA94(&qword_1009633E0);
    sub_10059F9D4();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    sub_10065F8CC(v13, (uint64_t)v6, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    unint64_t v15 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = 0;
    *(void *)(v16 + 24) = 0;
    v15(sub_10006D36C, v16);

    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_10059EA24()
{
  uint64_t v1 = v0;
  uint64_t v22 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v2 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BadgingCountsUpdated();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_fitnessAppBadgeAggregator);
  static Log.default.getter();
  v14._uint64_t countAndFlagsBits = 0xD000000000000065;
  v14._object = (void *)0x80000001007B9E10;
  v15._object = (void *)0x80000001007B9E80;
  v15._uint64_t countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v14, v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1000DE218(v16);
  swift_bridgeObjectRelease();
  BadgingCountsUpdated.init(appBadgeCount:seymourTabBadges:)();
  swift_getObjectType();
  dispatch thunk of EventHubProtocol.publish<A>(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(unsigned char *)(v13 + OBJC_IVAR___CHFitnessAppBadgeAggregator_isBrowsingSeymour) = 1;
  sub_10007E4EC((void *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_engagementAppBadgeProvider) + 16), *(void *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_engagementAppBadgeProvider) + 40));
  dispatch thunk of EngagementClientProtocol.deleteAllEngagementBadges()();
  uint64_t v17 = v22;
  id v18 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  v18(sub_10006D36C, v19);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v17);
}

uint64_t sub_10059ED90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035104();
  sub_100041C60();
  sub_100055414();
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator);
  if ((*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_browsingCoordinator + 8) & 0x8000000000000000) != 0)
  {
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    uint64_t v8 = (void *)swift_allocObject();
    void v8[2] = 0;
    v8[3] = 0;
    v8[4] = v5;
    swift_retain();
    sub_10005810C((uint64_t)v4, (uint64_t)&unk_1009633E8, (uint64_t)v8);
    swift_release();
  }
  else
  {
    id v6 = v5;
    dispatch thunk of BrowsingViewController.reportBrowsingBeganEvent()();
  }
  sub_10007E4EC((void *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator) + 88), *(void *)(*(void *)(v1 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator) + 112));
  return dispatch thunk of MetricSceneLifecycleReporting.reportDidBecomeActive()();
}

uint64_t sub_10059EEFC()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v52 = *(void *)(v0 - 8);
  uint64_t v53 = v0;
  __chkstk_darwin(v0);
  uint64_t v51 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NavigationSource();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  __chkstk_darwin(v6);
  uint64_t v44 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NavigationPriority();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  __chkstk_darwin(v8);
  uint64_t v43 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NavigationIntent();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  uint64_t v40 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for NavigationResource();
  uint64_t v12 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for NavigationRequest();
  uint64_t v14 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.engagement.getter();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Fitness received open notification settings", v23, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v37, enum case for NavigationResource.notificationSettings(_:), v34);
  uint64_t v24 = v40;
  *uint64_t v40 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v35 + 104))(v24, enum case for NavigationIntent.presentModal(_:), v36);
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v43, enum case for NavigationPriority.takeover(_:), v39);
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v44, enum case for NavigationSource.default(_:), v42);
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v5, enum case for NavigationRoutingBehavior.default(_:), v46);
  os_log_type_t v54 = _swiftEmptyArrayStorage;
  sub_10059F97C();
  sub_1000AFA94(&qword_1009633E0);
  sub_10059F9D4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
  id v25 = (void **)sub_10007E4EC((void *)(*(void *)(v50 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator) + 48), *(void *)(*(void *)(v50 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_navigator) + 72));
  char v27 = *v25;
  uint64_t v26 = (uint64_t)v25[1];
  if (v26 < 0)
  {
    swift_retain();
    id v29 = v51;
    AppCoordinator.navigateToRequest(_:)();
    sub_1000656A0(v27, v26);
  }
  else
  {
    id v28 = v27;
    id v29 = v51;
    BrowsingViewController.navigateToRequest(_:)();
  }
  uint64_t v30 = v53;
  id v31 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = 0;
  *(void *)(v32 + 24) = 0;
  v31(sub_10006D8B4, v32);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v47);
}

void sub_10059F634(void *a1, uint64_t a2, void (**a3)(void))
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  _Block_copy(a3);
  static Log.engagement.getter();
  uint64_t v13 = a1;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v26 = v9;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    uint64_t v27 = v6;
    id v28 = v13;
    id v25 = v16;
    *(_DWORD *)uint64_t v16 = 138412290;
    uint64_t v23 = v16 + 4;
    uint64_t v17 = v13;
    uint64_t v6 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v24 = v13;

    uint64_t v9 = v26;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Fitness received notification response %@", v25, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v14 = v13;
  }

  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v12, v6);
  if ([self shouldHandleNotificationResponse:v13])
  {
    uint64_t v19 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp19TabletSceneDelegate_seymourNotificationResponseCoordinator);
    _Block_copy(a3);
    sub_1005AB0A4(v13, v19, (void (**)(void))a3);
    _Block_release(a3);
  }
  else
  {
    static Log.engagement.getter();
    unint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unhandled user notification response", v22, 2u);
      swift_slowDealloc();
    }

    v18(v9, v6);
    a3[2](a3);
  }
  _Block_release(a3);
}

unint64_t sub_10059F97C()
{
  unint64_t result = qword_1009668E0;
  if (!qword_1009668E0)
  {
    type metadata accessor for NavigationAnnotation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009668E0);
  }
  return result;
}

unint64_t sub_10059F9D4()
{
  unint64_t result = qword_1009668F0;
  if (!qword_1009668F0)
  {
    sub_1000A1370(&qword_1009633E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009668F0);
  }
  return result;
}

uint64_t sub_10059FA34()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10059FA74()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000DBD6C;
  return sub_100269A28();
}

unint64_t sub_10059FB2C()
{
  unint64_t result = qword_100966EA0;
  if (!qword_100966EA0)
  {
    sub_10007E2D8(255, (unint64_t *)&unk_1009633F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966EA0);
  }
  return result;
}

uint64_t sub_10059FB9C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10059FBEC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10005DB5C;
  return sub_10059CF3C(a1, v4, v5, v6, v7, v8);
}

void *sub_10059FCB4(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)((char *)a2 + v7);
  uint64_t v9 = *(void **)((char *)a1 + v7);
  *(void *)((char *)a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)((char *)a1 + v11);
  uint64_t v13 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v13;
  id v14 = v13;

  uint64_t v15 = a3[7];
  uint64_t v16 = *(void **)((char *)a1 + v15);
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  id v18 = v17;

  uint64_t v19 = a3[8];
  unint64_t v20 = (char *)a1 + v19;
  os_log_type_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *((void *)v21 + 1);
  LOBYTE(v16) = v21[16];
  sub_100091494(*(void *)v21, v23, (char)v16);
  uint64_t v24 = *(void *)v20;
  uint64_t v25 = *((void *)v20 + 1);
  *(void *)unint64_t v20 = v22;
  *((void *)v20 + 1) = v23;
  char v26 = v20[16];
  unsigned char v20[16] = (char)v16;
  sub_1000917F8(v24, v25, v26);
  return a1;
}

char *sub_10059FE14(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = *(void **)&a1[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];

  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)&a1[v10];
  *(void *)&a1[v10] = *(void *)&a2[v10];

  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  char v17 = v16[16];
  uint64_t v18 = *(void *)v15;
  uint64_t v19 = *((void *)v15 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  char v20 = v15[16];
  unsigned char v15[16] = v17;
  sub_1000917F8(v18, v19, v20);
  return a1;
}

uint64_t sub_10059FF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10059FF6C);
}

uint64_t sub_10059FF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1005A0030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005A0044);
}

uint64_t sub_1005A0044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for FriendCardRingsView()
{
  uint64_t result = qword_100963508;
  if (!qword_100963508) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005A0150()
{
  sub_100008C84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1005A0200()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005A021C()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v11, enum case for Font.TextStyle.footnote(_:), v7, v9);
  uint64_t v12 = enum case for Font.Design.rounded(_:);
  uint64_t v13 = type metadata accessor for Font.Design();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v6, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  static Font.Weight.medium.getter();
  static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v6, &qword_10094C448);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v15 = Font.leading(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100998500 = v15;
  return result;
}

id sub_1005A04E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v173 = a2;
  uint64_t v174 = sub_1000AFA94(&qword_100963568);
  __chkstk_darwin(v174);
  uint64_t v164 = (uint64_t)&v160 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v161 = *(void *)(v4 - 8);
  uint64_t v162 = v4;
  __chkstk_darwin(v4);
  long long v160 = (char *)&v160 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100963570);
  __chkstk_darwin(v6 - 8);
  uint64_t v163 = (uint64_t)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v168 = (uint64_t *)((char *)&v160 - v9);
  __chkstk_darwin(v10);
  uint64_t v176 = (uint64_t)&v160 - v11;
  uint64_t v170 = sub_1000AFA94(&qword_100963578);
  __chkstk_darwin(v170);
  uint64_t v172 = (uint64_t)&v160 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_1000AFA94(&qword_100963580);
  __chkstk_darwin(v171);
  uint64_t v166 = (uint64_t)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100963588);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_1000AFA94(&qword_100963590);
  __chkstk_darwin(v167);
  uint64_t v165 = (uint64_t)&v160 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v20 = (char *)&v160 - v19;
  __chkstk_darwin(v21);
  uint64_t v169 = (uint64_t)&v160 - v22;
  uint64_t v23 = type metadata accessor for DynamicTypeSize();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  char v26 = (char *)&v160 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for FriendCardRingsView();
  uint64_t v27 = a1 + *(int *)(v175 + 32);
  unint64_t v28 = *(void *)v27;
  uint64_t v29 = *(void *)(v27 + 8);
  int v30 = *(unsigned __int8 *)(v27 + 16);
  uint64_t v177 = a1;
  sub_100092088((uint64_t)v26);
  LODWORD(a1) = sub_100092DA4((uint64_t)v26, v28, v29, v30);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  if (a1 == 2)
  {
    *(void *)uint64_t v16 = static VerticalAlignment.center.getter();
    *((void *)v16 + 1) = 0;
    v16[16] = 1;
    uint64_t v31 = sub_1000AFA94(&qword_1009635B8);
    uint64_t v32 = v177;
    sub_1005A15F8(v177, (uint64_t)&v16[*(int *)(v31 + 44)]);
    char v33 = static Edge.Set.all.getter();
    sub_1000AEF2C((uint64_t)v16, (uint64_t)v20, &qword_100963588);
    uint64_t v34 = &v20[*(int *)(v167 + 36)];
    *uint64_t v34 = v33;
    *(_OWORD *)(v34 + 8) = xmmword_100756D20;
    *(_OWORD *)(v34 + 24) = xmmword_1007509B0;
    v34[40] = 0;
    sub_10008DB18((uint64_t)v16, &qword_100963588);
    uint64_t v35 = v169;
    sub_1000AEEC8((uint64_t)v20, v169, &qword_100963590);
    id result = [*(id *)(v32 + *(int *)(v175 + 20)) displayName];
    if (result)
    {
      uint64_t v37 = result;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      *(void *)&long long v255 = v38;
      *((void *)&v255 + 1) = v40;
      sub_1000A06D0();
      uint64_t v41 = Text.init<A>(_:)();
      uint64_t v43 = v42;
      uint64_t v45 = v44;
      char v47 = v46 & 1;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v276 = v41;
      uint64_t v277 = v43;
      char v278 = v47;
      uint64_t v279 = v45;
      uint64_t v280 = KeyPath;
      char v281 = 1;
      static Alignment.leading.getter();
      sub_1004DE144(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v272, 0.0, 1, 0.0, 1);
      sub_1000A06C0(v41, v43, v47);
      swift_release();
      swift_bridgeObjectRelease();
      long long v212 = v272[6];
      long long v213 = v272[7];
      long long v214 = v272[8];
      long long v215 = v272[9];
      long long v208 = v272[2];
      long long v209 = v272[3];
      long long v210 = v272[4];
      long long v211 = v272[5];
      long long v206 = v272[0];
      long long v207 = v272[1];
      sub_1005A23E0(v177, v275);
      static Alignment.leading.getter();
      sub_1004DE320(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v216, 0.0, 1, 0.0, 1);
      sub_1005A3BA0((uint64_t)v275);
      sub_100006248();
      Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
      Class v50 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
      uint64_t v51 = (objc_class *)type metadata accessor for GradientColors();
      uint64_t v52 = (char *)objc_allocWithZone(v51);
      *(void *)&v52[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
      *(void *)&v52[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v50;
      v205.receiver = v52;
      v205.super_class = v51;
      [super init];
      Class v54 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
      BOOL v55 = (objc_class *)type metadata accessor for MetricColors();
      uint64_t v56 = (char *)objc_allocWithZone(v55);
      *(void *)&v56[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v53;
      *(void *)&v56[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v54;
      v204.receiver = v56;
      v204.super_class = v55;
      long long v57 = [(char *)[super init]];
      id v58 = *(id *)&v57[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

      uint64_t v59 = Color.init(uiColor:)();
      long long v234 = v222[6];
      long long v235 = v222[7];
      long long v236 = v222[8];
      long long v230 = v222[2];
      long long v231 = v222[3];
      long long v233 = v222[5];
      long long v232 = v222[4];
      long long v227 = v220;
      long long v228 = v221;
      v229[1] = v222[1];
      v229[0] = v222[0];
      long long v223 = v216;
      long long v224 = v217;
      long long v226 = v219;
      long long v225 = v218;
      uint64_t v237 = v59;
      uint64_t v60 = v165;
      sub_1000AEF2C(v35, v165, &qword_100963590);
      long long v200 = v212;
      long long v201 = v213;
      long long v202 = v214;
      long long v203 = v215;
      long long v196 = v208;
      long long v197 = v209;
      long long v198 = v210;
      long long v199 = v211;
      long long v194 = v206;
      long long v195 = v207;
      long long v190 = v234;
      long long v191 = v235;
      long long v192 = v236;
      uint64_t v193 = v237;
      long long v186 = v230;
      long long v187 = v231;
      long long v188 = v232;
      long long v189 = v233;
      long long v182 = v227;
      long long v183 = v228;
      long long v184 = v229[0];
      long long v185 = v229[1];
      long long v178 = v223;
      long long v179 = v224;
      long long v180 = v225;
      long long v181 = v226;
      uint64_t v61 = v166;
      sub_1000AEF2C(v60, v166, &qword_100963590);
      uint64_t v62 = sub_1000AFA94(&qword_1009635C0);
      id v63 = (_OWORD *)(v61 + *(int *)(v62 + 48));
      long long v65 = v200;
      long long v64 = v201;
      v238[6] = v200;
      v238[7] = v201;
      long long v67 = v202;
      long long v66 = v203;
      v238[8] = v202;
      v238[9] = v203;
      long long v68 = v199;
      v238[4] = v198;
      v238[5] = v199;
      long long v70 = v196;
      long long v69 = v197;
      v238[3] = v197;
      v238[2] = v196;
      long long v71 = v194;
      long long v72 = v195;
      v238[0] = v194;
      v238[1] = v195;
      _OWORD v63[4] = v198;
      v63[5] = v68;
      v63[2] = v70;
      v63[3] = v69;
      v63[8] = v67;
      v63[9] = v66;
      void v63[6] = v65;
      v63[7] = v64;
      *id v63 = v71;
      v63[1] = v72;
      uint64_t v73 = v61 + *(int *)(v62 + 64);
      long long v74 = v190;
      long long v251 = v190;
      long long v252 = v191;
      long long v75 = v192;
      long long v253 = v192;
      long long v76 = v186;
      long long v77 = v186;
      long long v247 = v186;
      long long v248 = v187;
      long long v78 = v188;
      long long v79 = v188;
      long long v249 = v188;
      long long v250 = v189;
      long long v80 = v182;
      long long v81 = v182;
      long long v243 = v182;
      long long v244 = v183;
      long long v82 = v184;
      long long v83 = v184;
      long long v245 = v184;
      long long v246 = v185;
      long long v84 = v178;
      long long v85 = v178;
      long long v239 = v178;
      long long v240 = v179;
      long long v86 = v180;
      long long v87 = v180;
      long long v241 = v180;
      long long v242 = v181;
      long long v88 = v191;
      long long v89 = v191;
      *(_OWORD *)(v73 + 192) = v190;
      *(_OWORD *)(v73 + 208) = v88;
      *(_OWORD *)(v73 + 224) = v75;
      long long v90 = v187;
      long long v91 = v187;
      *(_OWORD *)(v73 + 128) = v76;
      *(_OWORD *)(v73 + 144) = v90;
      long long v92 = v189;
      long long v93 = v189;
      *(_OWORD *)(v73 + 160) = v78;
      *(_OWORD *)(v73 + 176) = v92;
      long long v94 = v183;
      long long v95 = v183;
      *(_OWORD *)(v73 + 64) = v80;
      *(_OWORD *)(v73 + 80) = v94;
      long long v96 = v185;
      long long v97 = v185;
      *(_OWORD *)(v73 + 96) = v82;
      *(_OWORD *)(v73 + 112) = v96;
      long long v98 = v179;
      long long v99 = v179;
      *(_OWORD *)uint64_t v73 = v84;
      *(_OWORD *)(v73 + 16) = v98;
      long long v100 = v181;
      long long v101 = v181;
      *(_OWORD *)(v73 + 32) = v86;
      *(_OWORD *)(v73 + 48) = v100;
      long long v267 = v74;
      long long v268 = v89;
      long long v269 = v192;
      long long v263 = v77;
      long long v264 = v91;
      long long v265 = v79;
      long long v266 = v93;
      long long v259 = v81;
      long long v260 = v95;
      long long v261 = v83;
      long long v262 = v97;
      long long v255 = v85;
      long long v256 = v99;
      uint64_t v254 = v193;
      *(void *)(v73 + 240) = v193;
      uint64_t v270 = v193;
      long long v257 = v87;
      long long v258 = v101;
      sub_1002942DC((uint64_t)v238);
      sub_1005A3C0C((uint64_t)&v239);
      sub_1002942DC((uint64_t)&v206);
      sub_1005A3C0C((uint64_t)&v223);
      sub_1005A3C84((uint64_t)&v255);
      v271[6] = v200;
      v271[7] = v201;
      v271[8] = v202;
      v271[9] = v203;
      v271[2] = v196;
      v271[3] = v197;
      v271[4] = v198;
      v271[5] = v199;
      v271[0] = v194;
      v271[1] = v195;
      sub_1002943CC((uint64_t)v271);
      sub_10008DB18(v60, &qword_100963590);
      sub_1000AEF2C(v61, v172, &qword_100963580);
      swift_storeEnumTagMultiPayload();
      sub_1000A132C(&qword_1009635A8, &qword_100963580);
      sub_1000A132C(&qword_1009635B0, &qword_100963568);
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v61, &qword_100963580);
      sub_1005A3C84((uint64_t)&v223);
      sub_1002943CC((uint64_t)&v206);
      uint64_t v102 = v35;
      uint64_t v103 = &qword_100963590;
      return (id)sub_10008DB18(v102, v103);
    }
    __break(1u);
  }
  else
  {
    uint64_t v104 = static Alignment.bottomTrailing.getter();
    uint64_t v105 = (uint64_t)v168;
    *long long v168 = v104;
    *(void *)(v105 + 8) = v106;
    uint64_t v107 = sub_1000AFA94(&qword_100963598);
    uint64_t v108 = v177;
    sub_1005A1E20(v177, (uint64_t *)(v105 + *(int *)(v107 + 44)));
    sub_1000AEEC8(v105, v176, &qword_100963570);
    id result = [*(id *)(v108 + *(int *)(v175 + 20)) displayName];
    if (result)
    {
      uint64_t v109 = result;
      uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v112 = v111;

      *(void *)&long long v255 = v110;
      *((void *)&v255 + 1) = v112;
      sub_1000A06D0();
      uint64_t v113 = Text.init<A>(_:)();
      uint64_t v115 = v114;
      char v117 = v116 & 1;
      static Font.body.getter();
      uint64_t v119 = v160;
      uint64_t v118 = v161;
      uint64_t v120 = v162;
      (*(void (**)(char *, void, uint64_t))(v161 + 104))(v160, enum case for Font.Leading.tight(_:), v162);
      Font.leading(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v120);
      uint64_t v121 = Text.font(_:)();
      uint64_t v169 = v122;
      char v124 = v123;
      uint64_t v175 = v125;
      swift_release();
      LODWORD(v168) = v124 & 1;
      sub_1000A06C0(v113, v115, v117);
      swift_bridgeObjectRelease();
      uint64_t v126 = swift_getKeyPath();
      sub_1005A23E0(v177, &v216);
      sub_100006248();
      Class v127 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
      Class v128 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
      uint64_t v129 = (objc_class *)type metadata accessor for GradientColors();
      uint64_t v130 = (char *)objc_allocWithZone(v129);
      *(void *)&v130[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v127;
      *(void *)&v130[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v128;
      v274.receiver = v130;
      v274.super_class = v129;
      id v131 = [super init];
      Class v132 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
      uint64_t v133 = (objc_class *)type metadata accessor for MetricColors();
      uint64_t v134 = (char *)objc_allocWithZone(v133);
      *(void *)&v134[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v131;
      *(void *)&v134[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v132;
      v273.receiver = v134;
      v273.super_class = v133;
      uint64_t v135 = (char *)[v273 init];
      id v136 = *(id *)&v135[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

      uint64_t v137 = Color.init(uiColor:)();
      long long v227 = v220;
      long long v228 = v221;
      v229[0] = v222[0];
      *(_OWORD *)((char *)v229 + 10) = *(_OWORD *)((char *)v222 + 10);
      long long v223 = v216;
      long long v224 = v217;
      long long v225 = v218;
      long long v226 = v219;
      *(void *)&long long v230 = v137;
      uint64_t v138 = v163;
      sub_1000AEF2C(v176, v163, &qword_100963570);
      long long v184 = v229[0];
      long long v185 = v229[1];
      *(void *)&long long v186 = v230;
      long long v180 = v225;
      long long v181 = v226;
      long long v182 = v227;
      long long v183 = v228;
      long long v178 = v223;
      long long v179 = v224;
      uint64_t v139 = v164;
      sub_1000AEF2C(v138, v164, &qword_100963570);
      id v140 = (int *)sub_1000AFA94(&qword_1009635A0);
      uint64_t v141 = v139 + v140[12];
      *(void *)uint64_t v141 = 0;
      *(unsigned char *)(v141 + 8) = 0;
      uint64_t v142 = v139 + v140[16];
      uint64_t v143 = v169;
      *(void *)uint64_t v142 = v121;
      *(void *)(v142 + 8) = v143;
      LOBYTE(v113) = (_BYTE)v168;
      *(unsigned char *)(v142 + 16) = (_BYTE)v168;
      *(void *)(v142 + 24) = v175;
      *(void *)(v142 + 32) = v126;
      *(unsigned char *)(v142 + 40) = 1;
      uint64_t v144 = v139 + v140[20];
      long long v145 = v180;
      long long v146 = v180;
      long long v242 = v181;
      long long v241 = v180;
      long long v147 = v178;
      long long v148 = v178;
      long long v240 = v179;
      long long v239 = v178;
      long long v243 = v182;
      long long v244 = v183;
      long long v245 = v184;
      long long v246 = v185;
      long long v149 = v185;
      long long v151 = v184;
      long long v150 = v185;
      *(_OWORD *)(v144 + 96) = v184;
      *(_OWORD *)(v144 + 112) = v149;
      long long v152 = v181;
      long long v153 = v182;
      long long v154 = v181;
      long long v155 = v182;
      *(_OWORD *)(v144 + 32) = v145;
      *(_OWORD *)(v144 + 48) = v152;
      long long v156 = v183;
      long long v157 = v183;
      *(_OWORD *)(v144 + 64) = v153;
      *(_OWORD *)(v144 + 80) = v156;
      long long v158 = v179;
      long long v159 = v179;
      *(_OWORD *)uint64_t v144 = v147;
      *(_OWORD *)(v144 + 16) = v158;
      long long v261 = v151;
      long long v262 = v150;
      long long v257 = v146;
      long long v258 = v154;
      long long v260 = v157;
      long long v259 = v155;
      *(void *)&long long v247 = v186;
      *(void *)(v144 + 128) = v186;
      *(void *)&long long v263 = v186;
      long long v256 = v159;
      long long v255 = v148;
      sub_1000A1750(v121, v143, v113);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1005A393C((uint64_t)&v239);
      sub_1000A1750(v121, v143, v113);
      swift_bridgeObjectRetain();
      uint64_t v167 = v126;
      swift_retain();
      sub_1005A393C((uint64_t)&v223);
      sub_1005A39B4((uint64_t)&v255);
      sub_1000A06C0(v121, v143, v113);
      swift_release();
      swift_bridgeObjectRelease();
      sub_10008DB18(v138, &qword_100963570);
      sub_1000AEF2C(v139, v172, &qword_100963568);
      swift_storeEnumTagMultiPayload();
      sub_1000A132C(&qword_1009635A8, &qword_100963580);
      sub_1000A132C(&qword_1009635B0, &qword_100963568);
      _ConditionalContent<>.init(storage:)();
      sub_10008DB18(v139, &qword_100963568);
      sub_1005A39B4((uint64_t)&v223);
      sub_1000A06C0(v121, v143, v113);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v102 = v176;
      uint64_t v103 = &qword_100963570;
      return (id)sub_10008DB18(v102, v103);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1005A15F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009635C8);
  __chkstk_darwin(v4 - 8);
  uint64_t v34 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v33 = (_OWORD *)((char *)&v31 - v7);
  uint64_t v8 = type metadata accessor for DynamicTypeSize();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = type metadata accessor for FriendCardRingsView();
  uint64_t v32 = *(void **)(a1 + *(int *)(v15 + 20));
  uint64_t v16 = a1 + *(int *)(v15 + 32);
  unint64_t v18 = *(void *)v16;
  uint64_t v17 = *(void *)(v16 + 8);
  int v19 = *(unsigned __int8 *)(v16 + 16);
  sub_100092088((uint64_t)v14);
  unsigned int v20 = sub_100092DA4((uint64_t)v14, v18, v17, v19);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v14, v8);
  if (v20 > 1)
  {
    double v23 = 60.0;
  }
  else
  {
    sub_100092088((uint64_t)v14);
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DynamicTypeSize.xxxLarge(_:), v8);
    char v22 = static DynamicTypeSize.< infix(_:_:)();
    v21(v11, v8);
    v21(v14, v8);
    if (v22) {
      double v23 = 80.0;
    }
    else {
      double v23 = 50.0;
    }
  }
  type metadata accessor for ActivitySharingAvatarProvider();
  sub_1005B6D30(v32, v23);
  uint64_t v24 = Image.init(uiImage:)();
  char v25 = static Edge.Set.all.getter();
  char v26 = v33;
  sub_1005A1918(v33);
  uint64_t v27 = v34;
  sub_1000AEF2C((uint64_t)v26, v34, &qword_1009635C8);
  *(void *)a2 = v24;
  *(unsigned char *)(a2 + 8) = v25;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0x4014000000000000;
  *(unsigned char *)(a2 + 48) = 0;
  uint64_t v28 = sub_1000AFA94(&qword_1009635D0);
  sub_1000AEF2C(v27, a2 + *(int *)(v28 + 48), &qword_1009635C8);
  uint64_t v29 = a2 + *(int *)(v28 + 64);
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  swift_retain();
  sub_10008DB18((uint64_t)v26, &qword_1009635C8);
  sub_10008DB18(v27, &qword_1009635C8);
  return swift_release();
}

uint64_t sub_1005A1918@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v48 = sub_1000AFA94(&qword_10094E460);
  __chkstk_darwin(v48);
  char v46 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v47);
  uint64_t v5 = (double *)((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = type metadata accessor for FriendCardRingsView();
  id v45 = [*(id *)(v1 + *(int *)(v13 + 24)) activitySummary];
  uint64_t v14 = v1 + *(int *)(v13 + 32);
  unint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  int v17 = *(unsigned __int8 *)(v14 + 16);
  sub_100092088((uint64_t)v12);
  LODWORD(v15) = sub_100092DA4((uint64_t)v12, v15, v16, v17);
  unint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v12, v6);
  if (v15 > 1)
  {
    double v20 = 60.0;
  }
  else
  {
    sub_100092088((uint64_t)v12);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DynamicTypeSize.xxLarge(_:), v6);
    char v19 = static DynamicTypeSize.< infix(_:_:)();
    v18(v9, v6);
    v18(v12, v6);
    if (v19) {
      double v20 = 40.0;
    }
    else {
      double v20 = 30.0;
    }
  }
  uint64_t v21 = (uint64_t)v46;
  char v22 = v45;
  double v23 = self;
  [v23 preferredActivityRingThicknessForDiameter:v20];
  double v25 = v24;
  [v23 preferredActivityRingInterspacingForDiameter:v20];
  double v27 = v26;
  if (v22) {
    unsigned __int8 v28 = [v22 paused];
  }
  else {
    unsigned __int8 v28 = 0;
  }
  id v32 = sub_10005DB50();
  uint64_t v33 = Color.init(uiColor:)();
  char v34 = static Edge.Set.all.getter();
  sub_1005A3590();
  sub_1005A3590();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)&long long v49 = v22;
  BYTE8(v49) = v28;
  float v29 = v20;
  *((float *)&v49 + 3) = v29;
  float v30 = v25;
  *(float *)&long long v50 = v30;
  float v31 = v27;
  *((float *)&v50 + 1) = v31;
  BYTE8(v50) = 2;
  *(_DWORD *)((char *)&v50 + 9) = 0;
  long long v51 = 0uLL;
  *(void *)&long long v52 = v33;
  BYTE8(v52) = v34;
  *(void *)&long long v53 = v56;
  BYTE8(v53) = v57;
  *(void *)&long long v54 = v58;
  BYTE8(v54) = v59;
  long long v55 = v60;
  double v35 = sub_1005A3590() * 0.5;
  uint64_t v36 = (char *)v5 + *(int *)(v47 + 20);
  uint64_t v37 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v38 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
  double *v5 = v35;
  v5[1] = v35;
  sub_100098220((uint64_t)v5, v21, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v21 + *(int *)(v48 + 36)) = 256;
  uint64_t v39 = sub_1000AFA94(&qword_1009635C8);
  sub_1000AEF2C(v21, (uint64_t)a1 + *(int *)(v39 + 36), &qword_10094E460);
  long long v40 = v54;
  a1[4] = v53;
  a1[5] = v40;
  a1[6] = v55;
  long long v41 = v50;
  *a1 = v49;
  a1[1] = v41;
  long long v42 = v52;
  a1[2] = v51;
  a1[3] = v42;
  sub_1005A3CFC((uint64_t)&v49);
  sub_10008DB18(v21, &qword_10094E460);
  sub_100097E30((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);

  sub_10005E5F8(0);
  return swift_release();
}

uint64_t sub_1005A1E20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v41 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_1009635C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v39 = (_OWORD *)((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = sub_1000AFA94(&qword_100963608);
  __chkstk_darwin(v38);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v40 = (uint64_t)&v36 - v8;
  uint64_t v9 = type metadata accessor for DynamicTypeSize();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = type metadata accessor for FriendCardRingsView();
  uint64_t v37 = *(void **)(a1 + *(int *)(v16 + 20));
  uint64_t v17 = a1 + *(int *)(v16 + 32);
  unint64_t v18 = *(void *)v17;
  uint64_t v19 = *(void *)(v17 + 8);
  int v20 = *(unsigned __int8 *)(v17 + 16);
  sub_100092088((uint64_t)v15);
  unsigned int v21 = sub_100092DA4((uint64_t)v15, v18, v19, v20);
  char v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v15, v9);
  if (v21 > 1)
  {
    double v24 = 60.0;
  }
  else
  {
    sub_100092088((uint64_t)v15);
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DynamicTypeSize.xxxLarge(_:), v9);
    char v23 = static DynamicTypeSize.< infix(_:_:)();
    v22(v12, v9);
    v22(v15, v9);
    if (v23) {
      double v24 = 80.0;
    }
    else {
      double v24 = 50.0;
    }
  }
  type metadata accessor for ActivitySharingAvatarProvider();
  sub_1005B6D30(v37, v24);
  uint64_t v25 = Image.init(uiImage:)();
  double v26 = v39;
  sub_1005A1918(v39);
  sub_1005A21B0();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_1000AEF2C((uint64_t)v26, (uint64_t)v6, &qword_1009635C8);
  float v31 = &v6[*(int *)(v38 + 36)];
  *(void *)float v31 = v28;
  *((void *)v31 + 1) = v30;
  sub_10008DB18((uint64_t)v26, &qword_1009635C8);
  uint64_t v32 = v40;
  sub_1000AEEC8((uint64_t)v6, v40, &qword_100963608);
  sub_1000AEF2C(v32, (uint64_t)v6, &qword_100963608);
  uint64_t v33 = v41;
  *long long v41 = v25;
  uint64_t v34 = sub_1000AFA94(&qword_100963610);
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v33 + *(int *)(v34 + 48), &qword_100963608);
  swift_retain();
  sub_10008DB18(v32, &qword_100963608);
  sub_10008DB18((uint64_t)v6, &qword_100963608);
  return swift_release();
}

void sub_1005A21B0()
{
  uint64_t v1 = type metadata accessor for DynamicTypeSize();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = v0 + *(int *)(type metadata accessor for FriendCardRingsView() + 32);
  unint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  int v11 = *(unsigned __int8 *)(v8 + 16);
  sub_100092088((uint64_t)v7);
  LODWORD(v9) = sub_100092DA4((uint64_t)v7, v9, v10, v11);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v7, v1);
  if (v9 <= 1)
  {
    sub_100092088((uint64_t)v7);
    uint64_t v13 = enum case for DynamicTypeSize.xxLarge(_:);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v14(v4, enum case for DynamicTypeSize.xxLarge(_:), v1);
    char v15 = static DynamicTypeSize.< infix(_:_:)();
    v12(v4, v1);
    v12(v7, v1);
    if ((v15 & 1) == 0)
    {
      sub_100092088((uint64_t)v7);
      v14(v4, v13, v1);
      char v16 = static DynamicTypeSize.== infix(_:_:)();
      v12(v4, v1);
      v12(v7, v1);
      if ((v16 & 1) == 0) {
        sub_1005A3590();
      }
    }
  }
}

double sub_1005A23E0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FriendCardRingsView();
  __chkstk_darwin(v4 - 8);
  uint64_t v76 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v74 = *(void *)(v6 - 8);
  uint64_t v75 = v6;
  __chkstk_darwin(v6);
  uint64_t v73 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v72 = (uint64_t)&v67 - v9;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v15 = (char *)&v67 - v14;
  uint64_t v16 = type metadata accessor for AttributedString();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  long long v77 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unsigned int v21 = (char *)&v67 - v20;
  uint64_t v78 = a1;
  sub_1005A2BF4((uint64_t)v15);
  char v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v22(v15, 1, v16) != 1)
  {
    long long v71 = a2;
    char v23 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v23(v21, v15, v16);
    sub_1005A2E64((uint64_t)v12);
    if (v22(v12, 1, v16) == 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
      a2 = v71;
      goto LABEL_5;
    }
    long long v68 = v21;
    uint64_t v69 = v17;
    uint64_t v70 = v16;
    v23(v77, v12, v16);
    uint64_t v33 = v72;
    uint64_t v34 = v78;
    sub_100092088(v72);
    uint64_t v36 = v73;
    uint64_t v35 = v74;
    uint64_t v37 = v75;
    long long v67 = *(void (**)(char *, void, uint64_t))(v74 + 104);
    v67(v73, enum case for DynamicTypeSize.xxLarge(_:), v75);
    char v38 = static DynamicTypeSize.== infix(_:_:)();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v35 + 8);
    v39(v36, v37);
    v39((char *)v33, v37);
    uint64_t v40 = v76;
    sub_100098220(v34, v76, (uint64_t (*)(void))type metadata accessor for FriendCardRingsView);
    if (v38)
    {
      sub_100097E30(v40, (uint64_t (*)(void))type metadata accessor for FriendCardRingsView);
      a2 = v71;
    }
    else
    {
      sub_100092088(v33);
      v67(v36, enum case for DynamicTypeSize.xxxLarge(_:), v37);
      char v41 = static DynamicTypeSize.== infix(_:_:)();
      v39(v36, v37);
      v39((char *)v33, v37);
      sub_100097E30(v40, (uint64_t (*)(void))type metadata accessor for FriendCardRingsView);
      a2 = v71;
      if ((v41 & 1) == 0)
      {
        uint64_t v51 = static VerticalAlignment.center.getter();
        uint64_t v43 = (uint64_t)v68;
        uint64_t v44 = (uint64_t)v77;
        sub_1005A329C((uint64_t)v68, (uint64_t)v77, (uint64_t)&v95);
        char v52 = v96[0];
        uint64_t v53 = *(void *)&v96[8];
        char v54 = v97[0];
        uint64_t v55 = *(void *)&v97[8];
        char v56 = v98[0];
        uint64_t v57 = *(void *)&v98[8];
        long long v58 = v95;
        long long v59 = *(_OWORD *)&v96[16];
        long long v60 = *(_OWORD *)&v97[16];
        long long v95 = (unint64_t)v51;
        v96[0] = 0;
        *(_OWORD *)&v96[8] = v58;
        v96[24] = v52;
        *(void *)long long v97 = v53;
        *(_OWORD *)&v97[8] = v59;
        v97[24] = v54;
        *(void *)long long v98 = v55;
        *(_OWORD *)&v98[8] = v60;
        v98[24] = v56;
        *(void *)&v98[32] = v57;
        sub_1005A3E1C((uint64_t)&v95);
        goto LABEL_11;
      }
    }
    uint64_t v42 = static HorizontalAlignment.center.getter();
    uint64_t v43 = (uint64_t)v68;
    uint64_t v44 = (uint64_t)v77;
    sub_1005A30F4((uint64_t)v68, (uint64_t)v77, (uint64_t)&v95);
    char v45 = v96[0];
    uint64_t v46 = *(void *)&v96[8];
    char v47 = v97[0];
    uint64_t v48 = *(void *)&v97[8];
    long long v49 = v95;
    long long v50 = *(_OWORD *)&v96[16];
    long long v95 = (unint64_t)v42;
    v96[0] = 0;
    *(_OWORD *)&v96[8] = v49;
    v96[24] = v45;
    *(void *)long long v97 = v46;
    *(_OWORD *)&v97[8] = v50;
    v97[24] = v47;
    *(void *)long long v98 = v48;
    sub_1005A3E30((uint64_t)&v95);
LABEL_11:
    sub_1000AEEC8((uint64_t)&v95, (uint64_t)&v88, &qword_100963600);
    sub_1000AFA94(&qword_1009539C8);
    sub_1000AFA94(&qword_1009635F8);
    sub_1000A132C(&qword_1009539D8, &qword_1009539C8);
    sub_1000A132C(&qword_1009635F0, &qword_1009635F8);
    _ConditionalContent<>.init(storage:)();
    long long v92 = v83;
    long long v93 = v84;
    v94[0] = v85[0];
    *(_OWORD *)((char *)v94 + 9) = *(_OWORD *)((char *)v85 + 9);
    long long v88 = v79;
    long long v89 = v80;
    long long v90 = v81;
    long long v91 = v82;
    sub_1005A3E28((uint64_t)&v88);
    sub_1000AEEC8((uint64_t)&v88, (uint64_t)&v95, &qword_1009635D8);
    sub_1000AFA94(&qword_1009635E0);
    sub_1005A3D58();
    _ConditionalContent<>.init(storage:)();
    uint64_t v61 = v70;
    uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v62(v44, v70);
    v62(v43, v61);
    *(_OWORD *)&v97[16] = v86[4];
    *(_OWORD *)long long v98 = v86[5];
    *(_OWORD *)&v98[16] = v87[0];
    *(_OWORD *)&v98[26] = *(_OWORD *)((char *)v87 + 10);
    long long v95 = v86[0];
    *(_OWORD *)long long v96 = v86[1];
    *(_OWORD *)&v96[16] = v86[2];
    *(_OWORD *)long long v97 = v86[3];
    goto LABEL_12;
  }
  uint64_t v12 = v15;
LABEL_5:
  sub_10008DB18((uint64_t)v12, (uint64_t *)&unk_10095BFD0);
  id v24 = [self mainBundle];
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  *(void *)&long long v95 = v27;
  *((void *)&v95 + 1) = v29;
  sub_1000A06D0();
  *(void *)&long long v88 = Text.init<A>(_:)();
  *((void *)&v88 + 1) = v30;
  LOBYTE(v89) = v31 & 1;
  *((void *)&v89 + 1) = v32;
  sub_1005A3D4C((uint64_t)&v88);
  sub_1000AEEC8((uint64_t)&v88, (uint64_t)v86, &qword_1009635D8);
  sub_1000AFA94(&qword_1009635E0);
  sub_1005A3D58();
  _ConditionalContent<>.init(storage:)();
LABEL_12:
  long long v63 = *(_OWORD *)v98;
  a2[4] = *(_OWORD *)&v97[16];
  a2[5] = v63;
  a2[6] = *(_OWORD *)&v98[16];
  *(_OWORD *)((char *)a2 + 106) = *(_OWORD *)&v98[26];
  long long v64 = *(_OWORD *)v96;
  *a2 = v95;
  a2[1] = v64;
  double result = *(double *)&v96[16];
  long long v66 = *(_OWORD *)v97;
  a2[2] = *(_OWORD *)&v96[16];
  a2[3] = v66;
  return result;
}

uint64_t sub_1005A2BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + *(int *)(type metadata accessor for FriendCardRingsView() + 24));
  if (v3)
  {
    id v4 = v3;
    id v5 = [v4 activitySummary];
    if (v5)
    {
      uint64_t v6 = v5;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v8 = [self displayContextWithName:v7];

      id v9 = [v6 as_movePercentStringWithContext:v8 snapshot:v4];
      if (v9)
      {
        id v10 = v9;
        AttributedString.init(_:)();
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        swift_getKeyPath();
        if (qword_10094AE98 != -1) {
          swift_once();
        }
        sub_1000AA6A0();
        swift_retain();
        AttributedString.subscript.setter();

        uint64_t v12 = type metadata accessor for AttributedString();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 0, 1, v12);
      }
    }
    else
    {
      uint64_t v6 = v4;
    }
  }
  uint64_t v14 = type metadata accessor for AttributedString();
  char v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);

  return v15(a1, 1, 1, v14);
}

uint64_t sub_1005A2E64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FriendCardRingsView();
  NSString v7 = *(void **)(v1 + *(int *)(v6 + 24));
  if (v7)
  {
    id v8 = *(void **)(v1 + *(int *)(v6 + 28));
    if (v8)
    {
      id v9 = v7;
      id v10 = v8;
      id v11 = [v9 activitySummary];
      if (v11)
      {
        uint64_t v12 = v11;
        if ([v11 activityMoveMode] == (id)2)
        {
          id v13 = [v12 appleMoveTime];
          id v14 = [v12 appleMoveTimeGoal];
          if (qword_10094AE98 != -1) {
            swift_once();
          }
          sub_10026509C(v13, v14, qword_100998500, 0, (uint64_t)v5);
        }
        else
        {
          id v13 = [v12 activeEnergyBurned];
          id v14 = [v12 activeEnergyBurnedGoal];
          if (qword_10094AE98 != -1) {
            swift_once();
          }
          sub_100045F18(v13, v14, v10, qword_100998500, 1, (uint64_t)v5);
        }

        return sub_1000AEEC8((uint64_t)v5, a1, (uint64_t *)&unk_10095BFD0);
      }
    }
  }
  uint64_t v15 = type metadata accessor for AttributedString();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);

  return v16(a1, 1, 1, v15);
}

uint64_t sub_1005A30F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v11(v10, a1, v6, v8);
  uint64_t v12 = Text.init(_:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v10, a2, v6);
  uint64_t v19 = Text.init(_:)();
  uint64_t v21 = v20;
  char v26 = v18;
  LOBYTE(v7) = v22 & 1;
  *(void *)a3 = v12;
  *(void *)(a3 + 8) = v14;
  *(unsigned char *)(a3 + 16) = v18;
  *(void *)(a3 + 24) = v16;
  *(void *)(a3 + 32) = v19;
  *(void *)(a3 + 40) = v20;
  *(unsigned char *)(a3 + 48) = v22 & 1;
  *(void *)(a3 + 56) = v23;
  sub_1000A1750(v12, v14, v18);
  swift_bridgeObjectRetain();
  sub_1000A1750(v19, v21, v7);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v19, v21, v7);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v12, v14, v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005A329C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v5 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v11(v10, a1, v6, v8);
  uint64_t v12 = Text.init(_:)();
  uint64_t v37 = v13;
  uint64_t v38 = v12;
  uint64_t v40 = v14;
  int v36 = v15 & 1;
  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t v19 = Text.init(_:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  LOBYTE(v18) = v24 & 1;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v10, v39, v6);
  uint64_t v25 = Text.init(_:)();
  uint64_t v27 = v26;
  char v28 = v36;
  char v42 = v36;
  char v41 = (char)v18;
  LOBYTE(v7) = v29 & 1;
  uint64_t v30 = v38;
  uint64_t v31 = v40;
  *(void *)a3 = v38;
  *(void *)(a3 + 8) = v31;
  *(unsigned char *)(a3 + 16) = v28;
  *(void *)(a3 + 24) = v37;
  *(void *)(a3 + 32) = v19;
  *(void *)(a3 + 40) = v21;
  *(unsigned char *)(a3 + 48) = (_BYTE)v18;
  *(void *)(a3 + 56) = v23;
  *(void *)(a3 + 64) = v25;
  *(void *)(a3 + 72) = v27;
  *(unsigned char *)(a3 + 80) = v29 & 1;
  *(void *)(a3 + 88) = v32;
  uint64_t v33 = v30;
  sub_1000A1750(v30, v31, v28);
  swift_bridgeObjectRetain();
  sub_1000A1750(v19, v21, (char)v18);
  swift_bridgeObjectRetain();
  sub_1000A1750(v25, v27, v7);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v25, v27, v7);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v19, v21, v41);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v33, v40, v42);
  return swift_bridgeObjectRelease();
}

double sub_1005A3590()
{
  uint64_t v1 = type metadata accessor for DynamicTypeSize();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = v0 + *(int *)(type metadata accessor for FriendCardRingsView() + 32);
  unint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  int v11 = *(unsigned __int8 *)(v8 + 16);
  sub_100092088((uint64_t)v7);
  LODWORD(v9) = sub_100092DA4((uint64_t)v7, v9, v10, v11);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v7, v1);
  uint64_t v22 = v2;
  if (v9 > 1)
  {
    double v14 = 60.0;
  }
  else
  {
    sub_100092088((uint64_t)v7);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for DynamicTypeSize.xxLarge(_:), v1);
    char v13 = static DynamicTypeSize.< infix(_:_:)();
    v12(v4, v1);
    v12(v7, v1);
    if (v13) {
      double v14 = 40.0;
    }
    else {
      double v14 = 30.0;
    }
  }
  unint64_t v15 = *(void *)v8;
  uint64_t v16 = *(void *)(v8 + 8);
  int v17 = *(unsigned __int8 *)(v8 + 16);
  sub_100092088((uint64_t)v7);
  LODWORD(v15) = sub_100092DA4((uint64_t)v7, v15, v16, v17);
  v12(v7, v1);
  double v18 = 2.0;
  if (v15 <= 1)
  {
    sub_100092088((uint64_t)v7);
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v4, enum case for DynamicTypeSize.xxLarge(_:), v1);
    char v19 = static DynamicTypeSize.< infix(_:_:)();
    v12(v4, v1);
    v12(v7, v1);
    double v18 = 2.0;
    if (v19) {
      double v18 = 4.0;
    }
  }
  return v14 + v18;
}

uint64_t sub_1005A3820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_100963550);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_1000AFA94(&qword_100963558);
  sub_1005A04E4(v2, (uint64_t)&v6[*(int *)(v7 + 44)]);
  LOBYTE(v2) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_1000AEF2C((uint64_t)v6, a1, &qword_100963550);
  uint64_t v16 = a1 + *(int *)(sub_1000AFA94(&qword_100963560) + 36);
  *(unsigned char *)uint64_t v16 = v2;
  *(void *)(v16 + 8) = v9;
  *(void *)(v16 + 16) = v11;
  *(void *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = v15;
  *(unsigned char *)(v16 + 40) = 0;
  return sub_10008DB18((uint64_t)v6, &qword_100963550);
}

uint64_t sub_1005A393C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005A39B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005A3A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16, char a17)
{
  if (a17)
  {
    sub_1000A06C0(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = a16 & 1;
    return sub_1005A3ABC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, v19);
  }
}

uint64_t sub_1005A3ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  sub_1000A06C0(a4, a5, a6 & 1);
  swift_bridgeObjectRelease();
  sub_1000A06C0(a8, a9, a10 & 1);
  if (a16)
  {
    swift_bridgeObjectRelease();
    sub_1000A06C0(a12, a13, a14 & 1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005A3BA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005A3C0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005A3C84(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005A3CFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(id *)a1;
  sub_10008A670(v2);
  swift_retain();
  return a1;
}

uint64_t sub_1005A3D4C(uint64_t result)
{
  *(unsigned char *)(result + 121) = 1;
  return result;
}

unint64_t sub_1005A3D58()
{
  unint64_t result = qword_1009635E8;
  if (!qword_1009635E8)
  {
    sub_1000A1370(&qword_1009635E0);
    sub_1000A132C(&qword_1009539D8, &qword_1009539C8);
    sub_1000A132C(&qword_1009635F0, &qword_1009635F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009635E8);
  }
  return result;
}

uint64_t sub_1005A3E1C(uint64_t result)
{
  *(unsigned char *)(result + 120) = 1;
  return result;
}

uint64_t sub_1005A3E28(uint64_t result)
{
  *(unsigned char *)(result + 121) = 0;
  return result;
}

uint64_t sub_1005A3E30(uint64_t result)
{
  *(unsigned char *)(result + 120) = 0;
  return result;
}

uint64_t sub_1005A3E44()
{
  return 8;
}

uint64_t sub_1005A3E50()
{
  return swift_release();
}

uint64_t sub_1005A3E58(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1005A3E6C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1005A3E7C()
{
  unint64_t result = qword_100963618;
  if (!qword_100963618)
  {
    sub_1000A1370(&qword_100963560);
    sub_1000A132C(&qword_100963620, &qword_100963550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963618);
  }
  return result;
}

uint64_t (*sub_1005A3F1C(void *a1, unsigned __int8 a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1005A825C(v4, a2);
  return sub_1004631F4;
}

uint64_t (*sub_1005A3F7C(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1005A82F0(v4, a2);
  return sub_1004631F4;
}

uint64_t sub_1005A3FDC()
{
  return sub_1005A4090();
}

void (*sub_1005A3FF0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_100268718;
}

uint64_t sub_1005A407C()
{
  return sub_1005A4090();
}

uint64_t sub_1005A4090()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id sub_1005A40FC(void *a1, void *a2, void *a3, void *a4)
{
  char v45 = a4;
  uint64_t v46 = a1;
  uint64_t v43 = a3;
  char v47 = a2;
  uint64_t v44 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v5 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000AFA94(&qword_100958970);
  uint64_t v8 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100962400);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = &v4[OBJC_IVAR___CHWorkoutDetailSplitDataSource__metrics];
  long long v49 = _swiftEmptyDictionarySingleton;
  uint64_t v16 = v4;
  sub_1000AFA94(&qword_1009623C0);
  Published.init(initialValue:)();
  int v17 = v15;
  uint64_t v18 = v43;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v14, v11);
  char v19 = &v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource__columns];
  long long v49 = _swiftEmptyArrayStorage;
  sub_1000AFA94(&qword_100958950);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v19, v10, v42);
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_columnSizes] = _swiftEmptyDictionarySingleton;
  uint64_t v20 = OBJC_IVAR___CHWorkoutDetailSplitDataSource_internalQueue;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v21 = v44;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchQoS.QoSClass.userInitiated(_:), v44);
  uint64_t v22 = static OS_dispatch_queue.global(qos:)();
  uint64_t v23 = v7;
  char v24 = v45;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v23, v21);
  *(void *)&v16[v20] = v22;
  uint64_t v26 = v46;
  uint64_t v25 = v47;
  uint64_t v27 = &v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_delegate];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingStandardSplits] = 0;
  v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingCustomSplits] = 0;
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_dataCalculator] = v18;
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager] = v24;
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout] = v26;
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workoutActivity] = v25;
  if (v25)
  {
    id v28 = v18;
    id v29 = v24;
    id v30 = v26;
    id v31 = v25;
    id v32 = [v31 fiui_activityType];
  }
  else
  {
    id v33 = v18;
    id v34 = v24;
    id result = [v26 fiui_activityType];
    if (!result)
    {
      __break(1u);
      return result;
    }
    id v32 = result;
    id v31 = 0;
  }
  if (FIUIPaceFormatForWorkoutActivityType() == 4) {
    char v36 = 8;
  }
  else {
    char v36 = 3;
  }
  if ([v32 effectiveTypeIdentifier] == (id)13) {
    char v37 = 9;
  }
  else {
    char v37 = 6;
  }
  sub_1000AFA94(&qword_10094E7D0);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_10075FCD0;
  *(_WORD *)(v38 + 32) = 512;
  *(unsigned char *)(v38 + 34) = v36;
  *(_WORD *)(v38 + 35) = 1284;
  *(unsigned char *)(v38 + 37) = v37;
  *(void *)&v16[OBJC_IVAR___CHWorkoutDetailSplitDataSource_defaultColumns] = v38;

  uint64_t v39 = (objc_class *)type metadata accessor for WorkoutDetailSplitDataSource();
  v48.receiver = v16;
  v48.super_class = v39;
  [super init];
  sub_1005A45EC();

  return v40;
}

void sub_1005A45EC()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR___CHWorkoutDetailSplitDataSource_delegate];
  if (v1) {
    [*(id *)(v1 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator) startAnimating];
  }
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___CHWorkoutDetailSplitDataSource_dataCalculator];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout];
  uint64_t v4 = *(void *)&v0[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workoutActivity];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  uint64_t v15 = sub_1005A8128;
  uint64_t v16 = v5;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1005A502C;
  uint64_t v14 = &unk_1008CFF58;
  uint64_t v6 = _Block_copy(&v11);
  uint64_t v7 = v0;
  swift_release();
  [v2 customSplitsForWorkout:v3 workoutActivity:v4 completion:v6];
  _Block_release(v6);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  uint64_t v15 = sub_1005A8130;
  uint64_t v16 = v8;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1005A502C;
  uint64_t v14 = &unk_1008CFFA8;
  uint64_t v9 = _Block_copy(&v11);
  uint64_t v10 = v7;
  swift_release();
  [v2 splitsForWorkout:v3 workoutActivity:v4 completion:v9];
  _Block_release(v9);
}

void sub_1005A47D0(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1007509E0;
    swift_getErrorValue();
    uint64_t v15 = v59;
    uint64_t v16 = v60;
    *(void *)(v14 + 56) = v60;
    int v17 = sub_1000B1710((uint64_t *)(v14 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v17, v15, v16);
    swift_errorRetain();
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return;
  }
  if (a1)
  {
    dispatch_group_t v55 = dispatch_group_create();
    v45[1] = sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a3;
    *(void *)(v19 + 24) = a1;
    long long v66 = sub_1005A8790;
    long long v67 = (void *)v19;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    long long v64 = sub_100070394;
    long long v65 = &unk_1008D0138;
    uint64_t v20 = _Block_copy(&aBlock);
    unint64_t v58 = a1;
    uint64_t v21 = v20;
    uint64_t v57 = a3;
    swift_bridgeObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    uint64_t v22 = sub_1005A8160((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v23 = sub_1000AFA94((uint64_t *)&unk_1009555E0);
    unint64_t v52 = sub_100075AF8();
    uint64_t v53 = v23;
    uint64_t v54 = v22;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    unint64_t v24 = v58;
    _Block_release(v21);

    uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v25 = v7 + 8;
    uint64_t v51 = v26;
    v26(v9, v6);
    long long v50 = *(void (**)(char *, uint64_t))(v11 + 8);
    v50(v13, v10);
    uint64_t v56 = v11 + 8;
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      if (v27) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v27)
      {
LABEL_6:
        if (v27 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v28 = 0;
        uint64_t v47 = *(void *)&v57[OBJC_IVAR___CHWorkoutDetailSplitDataSource_internalQueue];
        unint64_t v46 = v24 & 0xC000000000000001;
        v45[2] = &v64;
        uint64_t v49 = v25;
        uint64_t v48 = v10;
        dispatch_group_t v29 = v55;
        do
        {
          if (v46) {
            id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v30 = *(id *)(v24 + 8 * v28 + 32);
          }
          id v31 = v30;
          id v32 = (void *)swift_allocObject();
          id v33 = v57;
          v32[2] = v57;
          v32[3] = v31;
          v32[4] = v28;
          long long v66 = sub_1005A87B4;
          long long v67 = v32;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v63 = 1107296256;
          long long v64 = sub_100070394;
          long long v65 = &unk_1008D0188;
          id v34 = _Block_copy(&aBlock);
          id v35 = v33;
          char v36 = v29;
          id v37 = v31;
          static DispatchQoS.unspecified.getter();
          uint64_t v61 = _swiftEmptyArrayStorage;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v34);

          v51(v9, v6);
          uint64_t v10 = v48;
          v50(v13, v48);
          swift_release();
          ++v28;
          unint64_t v24 = v58;
        }
        while (v27 != v28);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v10;
    uint64_t v39 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v40 = swift_allocObject();
    uint64_t v41 = v57;
    *(void *)(v40 + 16) = v57;
    long long v66 = sub_1005A87F8;
    long long v67 = (void *)v40;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    long long v64 = sub_100070394;
    long long v65 = &unk_1008D01D8;
    uint64_t v42 = _Block_copy(&aBlock);
    id v43 = v41;
    static DispatchQoS.unspecified.getter();
    uint64_t v61 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    dispatch_group_t v44 = v55;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v42);

    v51(v9, v6);
    v50(v13, v38);
    swift_release();
  }
}

uint64_t sub_1005A4EDC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1005A3FF0(v12);
  uint64_t v7 = sub_1005A3F7C(v11, 0);
  unint64_t v8 = *v6;
  if (!*v6)
  {
    ((void (*)(void *, void))v7)(v11, 0);
    ((void (*)(void *, void))v5)(v12, 0);
    return sub_1005A6F98(0);
  }
  uint64_t v9 = v6;
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v9 = v8;
  if (v8 >> 62 || (result & 1) == 0)
  {
    uint64_t result = sub_1005EC1A8(v8);
    unint64_t v8 = result;
    *uint64_t v9 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a3;
    swift_release();
    specialized Array._endMutation()();
    ((void (*)(void *, void))v7)(v11, 0);
    ((void (*)(void *, void))v5)(v12, 0);
    return sub_1005A6F98(0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005A502C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10007E2D8(0, &qword_100962BC8);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1005A50D0(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_1000AFA94((uint64_t *)&unk_1009556C0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1007509E0;
    swift_getErrorValue();
    uint64_t v15 = v59;
    uint64_t v16 = v60;
    *(void *)(v14 + 56) = v60;
    int v17 = sub_1000B1710((uint64_t *)(v14 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v17, v15, v16);
    swift_errorRetain();
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return;
  }
  if (a1)
  {
    dispatch_group_t v55 = dispatch_group_create();
    v45[1] = sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a3;
    *(void *)(v19 + 24) = a1;
    long long v66 = sub_1005A813C;
    long long v67 = (void *)v19;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    long long v64 = sub_100070394;
    long long v65 = &unk_1008CFFF8;
    uint64_t v20 = _Block_copy(&aBlock);
    unint64_t v58 = a1;
    uint64_t v21 = v20;
    uint64_t v57 = a3;
    swift_bridgeObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    uint64_t v22 = sub_1005A8160((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v23 = sub_1000AFA94((uint64_t *)&unk_1009555E0);
    unint64_t v52 = sub_100075AF8();
    uint64_t v53 = v23;
    uint64_t v54 = v22;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    unint64_t v24 = v58;
    _Block_release(v21);

    uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v25 = v7 + 8;
    uint64_t v51 = v26;
    v26(v9, v6);
    long long v50 = *(void (**)(char *, uint64_t))(v11 + 8);
    v50(v13, v10);
    uint64_t v56 = v11 + 8;
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      if (v27) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v27)
      {
LABEL_6:
        if (v27 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v28 = 0;
        uint64_t v47 = *(void *)&v57[OBJC_IVAR___CHWorkoutDetailSplitDataSource_internalQueue];
        unint64_t v46 = v24 & 0xC000000000000001;
        v45[2] = &v64;
        uint64_t v49 = v25;
        uint64_t v48 = v10;
        dispatch_group_t v29 = v55;
        do
        {
          if (v46) {
            id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v30 = *(id *)(v24 + 8 * v28 + 32);
          }
          id v31 = v30;
          id v32 = (void *)swift_allocObject();
          id v33 = v57;
          v32[2] = v57;
          v32[3] = v31;
          v32[4] = v28;
          long long v66 = sub_1005A81E8;
          long long v67 = v32;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v63 = 1107296256;
          long long v64 = sub_100070394;
          long long v65 = &unk_1008D0048;
          id v34 = _Block_copy(&aBlock);
          id v35 = v33;
          char v36 = v29;
          id v37 = v31;
          static DispatchQoS.unspecified.getter();
          uint64_t v61 = _swiftEmptyArrayStorage;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v34);

          v51(v9, v6);
          uint64_t v10 = v48;
          v50(v13, v48);
          swift_release();
          ++v28;
          unint64_t v24 = v58;
        }
        while (v27 != v28);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v10;
    uint64_t v39 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v40 = swift_allocObject();
    uint64_t v41 = v57;
    *(void *)(v40 + 16) = v57;
    long long v66 = sub_1005A822C;
    long long v67 = (void *)v40;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    long long v64 = sub_100070394;
    long long v65 = &unk_1008D0098;
    uint64_t v42 = _Block_copy(&aBlock);
    id v43 = v41;
    static DispatchQoS.unspecified.getter();
    uint64_t v61 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    dispatch_group_t v44 = v55;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v42);

    v51(v9, v6);
    v50(v13, v38);
    swift_release();
  }
}

uint64_t sub_1005A57DC(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8)
  {
LABEL_11:
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v19 = (void (*)(void **, void))static Published.subscript.modify();
    uint64_t v21 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    sub_1004F1140((uint64_t)v9, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v21 = v25;
    swift_bridgeObjectRelease();
    v19(&v26, 0);
    swift_release();
    swift_release();
    return sub_1005A6F98(a4);
  }
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = a3;
    uint64_t v24 = a1;
    uint64_t v11 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(a2 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      ++v11;
      [v12 distanceInMeters:v23, v24];
      uint64_t v15 = v14;
      [v13 duration];
      uint64_t v17 = v16;
      type metadata accessor for WorkoutDurationMetrics();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = 0;
      *(void *)(v18 + 24) = 0;
      *(void *)(v18 + 48) = 0;
      *(unsigned char *)(v18 + 56) = 1;
      *(void *)(v18 + 72) = 0;
      *(unsigned char *)(v18 + 80) = 1;
      *(_OWORD *)(v18 + 88) = 0u;
      *(_OWORD *)(v18 + 104) = 0u;
      *(void *)(v18 + 120) = 0;
      *(unsigned char *)(v18 + 128) = 1;
      *(void *)(v18 + 144) = 0;
      *(void *)(v18 + 152) = 0;
      *(void *)(v18 + 136) = 0;
      *(void *)(v18 + 32) = v15;
      *(unsigned char *)(v18 + 40) = 0;
      *(void *)(v18 + 64) = v17;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v8 != v11);
    uint64_t v9 = v26;
    a3 = v23;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005A5A48(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v28 = a4;
  uint64_t v29 = a3;
  uint64_t v32 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  __chkstk_darwin(v10);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout];
  uint64_t v14 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSplitDataSource_workoutActivity];
  uint64_t v15 = *(void **)&a1[OBJC_IVAR___CHWorkoutDetailSplitDataSource_dataCalculator];
  type metadata accessor for WorkoutDurationMetrics();
  swift_allocObject();
  id v16 = v14;
  id v17 = a2;
  id v18 = v15;
  id v19 = v13;
  uint64_t v20 = sub_10043E394(v19, v14, v17, v18, 0, 0);

  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v23 = v29;
  void v22[2] = a1;
  v22[3] = v23;
  v22[4] = v20;
  aBlock[4] = v30;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = v31;
  uint64_t v24 = _Block_copy(aBlock);
  uint64_t v25 = a1;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1005A8160((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  uint64_t v26 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v24);

  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v12, v34);
}

uint64_t sub_1005A5DA4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1005A3FF0(v12);
  uint64_t v7 = sub_1005A3F7C(v11, 1);
  unint64_t v8 = *v6;
  if (*v6)
  {
    uint64_t v9 = v6;
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v9 = v8;
    if (v8 >> 62 || (result & 1) == 0)
    {
      uint64_t result = sub_1005EC1A8(v8);
      unint64_t v8 = result;
      *uint64_t v9 = result;
    }
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
    {
      *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a3;
      swift_release();
      specialized Array._endMutation()();
      ((void (*)(void *, void))v7)(v11, 0);
      return ((uint64_t (*)(void *, void))v5)(v12, 0);
    }
    __break(1u);
  }
  else
  {
    ((void (*)(void *, void))v7)(v11, 0);
    return ((uint64_t (*)(void *, void))v5)(v12, 0);
  }
  return result;
}

id sub_1005A5EDC(uint64_t a1, char a2, void *a3, void *a4)
{
  id result = (id)sub_1005A6F98(a2);
  *(unsigned char *)(a1 + *a3) = 1;
  if (*(unsigned char *)(a1 + *a4) == 1)
  {
    uint64_t v8 = *(void *)(a1 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_delegate);
    if (v8)
    {
      uint64_t v9 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailedBasicViewController_activityIndicator);
      return [v9 stopAnimating];
    }
  }
  return result;
}

uint64_t sub_1005A5F74(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (*(void *)(v7 + 16) && (unint64_t v2 = sub_100005758(a1), (v3 & 1) != 0))
  {
    unint64_t v4 = *(void *)(*(void *)(v7 + 56) + 8 * v2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

id sub_1005A6074(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_10094F070);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v41 - v9;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v11 = v42;
  if (!*(void *)(v42 + 16)) {
    goto LABEL_15;
  }
  unint64_t v12 = sub_100005758(a1);
  if ((v13 & 1) == 0) {
    goto LABEL_15;
  }
  unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
  swift_bridgeObjectRetain();
  id result = (id)swift_bridgeObjectRelease();
  if (!(v14 >> 62))
  {
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
  id result = (id)swift_bridgeObjectRelease();
  if (!v40) {
    goto LABEL_15;
  }
LABEL_5:
  if ((v14 & 0xC000000000000001) != 0)
  {
    uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v16 = *(void *)(v14 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  double v17 = *(double *)(v16 + 32);
  char v18 = *(unsigned char *)(v16 + 40);
  swift_release();
  if (v18) {
    return 0;
  }
  id result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager), "unitManager"));
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v19 = result;
  id result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout), "fiui_activityType"));
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = FIUIDistanceTypeForActivityType();

    id v22 = [v19 userDistanceHKUnitForDistanceType:v21];
    if (HKUnit.measurementSystem.getter() == 1)
    {
      uint64_t v23 = self;
      id v24 = [v23 meters];
      sub_10007E2D8(0, &qword_10094F128);
      Measurement.init(value:unit:)();
      if (v17 >= 1000.0)
      {
        id v34 = [v23 kilometers];
        Measurement<>.converted(to:)();

        uint64_t v35 = *(void (**)(char *, uint64_t))(v5 + 8);
        v35(v7, v4);
        Measurement.value.getter();
        uint64_t v26 = v36;
        v35(v10, v4);
      }
      else
      {
        Measurement.value.getter();
        uint64_t v26 = v25;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      }
      id v27 = [self mainBundle];
    }
    else
    {
      uint64_t v29 = self;
      id v30 = [v29 meters];
      sub_10007E2D8(0, &qword_10094F128);
      Measurement.init(value:unit:)();
      id v31 = [v29 miles];
      Measurement<>.converted(to:)();

      uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
      v32(v7, v4);
      Measurement.value.getter();
      uint64_t v26 = v33;
      v32(v10, v4);
      id v27 = [self mainBundle];
    }
    NSString v37 = String._bridgeToObjectiveC()();
    id v38 = [v27 localizedStringForKey:v37 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1007509E0;
    *(void *)(v39 + 56) = &type metadata for Double;
    *(void *)(v39 + 64) = &protocol witness table for Double;
    *(void *)(v39 + 32) = v26;
    uint64_t v28 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (id)v28;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1005A6660(unint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = v5;
    if (*(void *)(v5 + 16) > a1)
    {
      char v4 = *(unsigned char *)(v5 + a1 + 32);
      swift_bridgeObjectRelease();
      return sub_1002522C0(*(void **)(v1 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager), v4);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1005A6720(unint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = v7;
  if (*(void *)(v7 + 16) <= a1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v4 = *(unsigned __int8 *)(v7 + a1 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = v1 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_columnSizes;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16))
  {
    swift_bridgeObjectRetain();
    sub_100529A74(v4);
    if (v6) {
      return swift_bridgeObjectRelease();
    }
    else {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1005A6830(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v72 = a3;
  uint64_t v7 = type metadata accessor for AttributedString();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v13 = (char *)&v71 - v12;
  uint64_t v75 = type metadata accessor for DynamicTypeSize();
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000AFA94(&qword_10094DEF0);
  __chkstk_darwin(v76);
  uint64_t v74 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v77[2] <= a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v18 = 0x72656B72616DLL;
  LOBYTE(a2) = *((unsigned char *)v77 + a2 + 32);
  swift_bridgeObjectRelease();
  unint64_t v19 = sub_100252154(a2);
  uint64_t KeyPath = v20;
  if (v19 == 0x72656B72616DLL && v20 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    uint64_t v50 = (uint64_t)v13;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v51 = v77;
    if (!v77[2] || (unint64_t v52 = sub_100005758(v72), (v53 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      return AnyView.init<A>(_:)();
    }
    uint64_t v54 = *(void *)(v51[7] + 8 * v52);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v54 & 0xC000000000000001) == 0)
    {
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        uint64_t v55 = *(void *)(v54 + 8 * a1 + 32);
        swift_retain();
        goto LABEL_18;
      }
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v55 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_18:
    uint64_t v75 = v55;
    uint64_t v71 = v50;
    swift_bridgeObjectRelease();
    sub_100252BD4(v55, *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout), *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_workoutActivity), *(void **)(v4 + OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager), a2, v50);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v50, v7);
    uint64_t v56 = Text.init(_:)();
    uint64_t v58 = v57;
    char v60 = v59 & 1;
    sub_1002528C4(a2);
    uint64_t v51 = (void *)Text.foregroundColor(_:)();
    a1 = v61;
    uint64_t v76 = v7;
    LOBYTE(v7) = v62;
    swift_release();
    sub_1000A06C0(v56, v58, v60);
    swift_bridgeObjectRelease();
    if (qword_10094A728 == -1)
    {
LABEL_19:
      id v63 = (id)qword_1009978F8;
      Font.init(_:)();
      long long v64 = (void *)Text.font(_:)();
      long long v66 = v65;
      char v68 = v67;
      uint64_t v70 = v69;
      swift_release();
      sub_1000A06C0((uint64_t)v51, a1, v7 & 1);
      swift_bridgeObjectRelease();
      long long v77 = v64;
      uint64_t v78 = v66;
      char v79 = v68 & 1;
      uint64_t v80 = v70;
      uint64_t v48 = AnyView.init<A>(_:)();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v71, v76);
      return v48;
    }
LABEL_28:
    swift_once();
    goto LABEL_19;
  }
LABEL_7:
  uint64_t v21 = self;
  BOOL v22 = __OFADD__(a1, 1);
  unint64_t v23 = a1 + 1;
  if (v22)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v24 = (void *)v21;
  id v25 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v23];
  id v26 = [v24 localizedStringFromNumber:v25 numberStyle:0];

  id v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  long long v77 = v27;
  uint64_t v78 = v29;
  sub_1000A06D0();
  uint64_t v30 = Text.init<A>(_:)();
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  sub_1002528C4(a2);
  uint64_t KeyPath = Text.foregroundColor(_:)();
  uint64_t v18 = v35;
  LOBYTE(a2) = v36;
  swift_release();
  sub_1000A06C0(v30, v32, v34);
  swift_bridgeObjectRelease();
  if (qword_10094A720 != -1) {
LABEL_24:
  }
    swift_once();
  id v37 = (id)qword_1009978F0;
  Font.init(_:)();
  char v38 = a2 & 1;
  uint64_t v39 = (void *)Text.font(_:)();
  uint64_t v41 = v40;
  char v43 = v42;
  uint64_t v45 = v44;
  swift_release();
  sub_1000A06C0(KeyPath, v18, v38);
  swift_bridgeObjectRelease();
  long long v77 = v39;
  uint64_t v78 = v41;
  char v79 = v43 & 1;
  uint64_t v80 = v45;
  uint64_t v46 = v73;
  uint64_t v47 = v75;
  (*(void (**)(char *, void, uint64_t))(v73 + 104))(v15, enum case for DynamicTypeSize.large(_:), v75);
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v47);
  sub_1000A06C0((uint64_t)v77, (uint64_t)v78, v79);
  swift_bridgeObjectRelease();
  long long v77 = &type metadata for Text;
  uint64_t v78 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  return AnyView.init<A>(_:)();
}

uint64_t sub_1005A6F98(char a1)
{
  uint64_t v85 = type metadata accessor for AttributedString();
  uint64_t v4 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  long long v84 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v83 = (uint64_t)&v73 - v7;
  swift_getKeyPath();
  swift_getKeyPath();
  long long v86 = v1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v8 = v94;
  uint64_t inited = (uint64_t)&unk_100963000;
  uint64_t v10 = (uint64_t)&unk_100963000;
  if (!*(void *)(v94 + 16)) {
    goto LABEL_45;
  }
  unint64_t v11 = sub_100005758(a1 & 1);
  if ((v12 & 1) == 0) {
    goto LABEL_45;
  }
  unint64_t v2 = *(void *)(*(void *)(v8 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v2 >> 62) {
    goto LABEL_74;
  }
  uint64_t v13 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
LABEL_5:
  unint64_t v14 = 0;
  uint64_t v15 = &v86[*(void *)(v10 + 1632)];
  uint64_t v16 = *(void **)&v86[*(void *)(inited + 1624)];
  unint64_t v77 = v2 & 0xC000000000000001;
  uint64_t v74 = v2 & 0xFFFFFFFFFFFFFF8;
  unint64_t v73 = v2 + 32;
  long long v82 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v81 = OBJC_IVAR___CHWorkoutDetailSplitDataSource_workout;
  uint64_t v80 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v79 = OBJC_IVAR___CHWorkoutDetailSplitDataSource_formattingManager;
  long long v88 = &v95;
  long long v93 = v16;
  long long v92 = (char *)v16[2];
  NSAttributedStringKey v90 = NSFontAttributeName;
  long long v89 = xmmword_1007509E0;
  long long v87 = (char *)&type metadata for Any + 8;
  uint64_t v78 = "";
  unint64_t v76 = v2;
  uint64_t v75 = v13;
  do
  {
    if (v77)
    {
      uint64_t v91 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v17 = __OFADD__(v14++, 1);
      if (v17) {
        goto LABEL_72;
      }
    }
    else
    {
      if (v14 >= *(void *)(v74 + 16)) {
        goto LABEL_73;
      }
      uint64_t v91 = *(void *)(v73 + 8 * v14);
      swift_retain();
      BOOL v17 = __OFADD__(v14++, 1);
      if (v17) {
        goto LABEL_72;
      }
    }
    if (v92)
    {
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v18 = 0;
      while (2)
      {
        unint64_t v19 = &v18[(void)v93];
        unint64_t v2 = (v18++)[(void)v93 + 32];
        switch(v19[32])
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
            char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_22;
            }
            uint64_t inited = v83;
            sub_100252BD4(v91, *(void **)&v86[v81], 0, *(void **)&v86[v79], v2, v83);
            sub_10007E2D8(0, (unint64_t *)&qword_10094D428);
            uint64_t v10 = (uint64_t)v84;
            uint64_t v37 = v85;
            (*v82)(v84, inited, v85);
            uint64_t v4 = NSAttributedString.init(_:)();
            (*v80)(inited, v37);
            goto LABEL_28;
          default:
            swift_bridgeObjectRelease();
LABEL_22:
            uint64_t v21 = self;
            unint64_t v22 = v14;
            id v23 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v14];
            id v24 = [v21 localizedStringFromNumber:v23 numberStyle:0];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v4 = v25;

            sub_1000AFA94((uint64_t *)&unk_10095BF70);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v89;
            NSAttributedStringKey v26 = v90;
            *(void *)(inited + 32) = v90;
            uint64_t v27 = qword_10094A720;
            uint64_t v28 = v26;
            if (v27 != -1) {
              swift_once();
            }
            uint64_t v29 = (void *)qword_1009978F0;
            *(void *)(inited + 64) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
            *(void *)(inited + 40) = v29;
            sub_1000AFA94(&qword_100952850);
            uint64_t v30 = (void *)static _DictionaryStorage.allocate(capacity:)();
            id v31 = v29;
            sub_100364990(inited + 32, (uint64_t)&v94);
            uint64_t v10 = v94;
            unint64_t v32 = sub_10005BC7C(v94);
            if (v33)
            {
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
LABEL_71:
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              swift_bridgeObjectRetain();
              uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (!v13) {
                goto LABEL_45;
              }
              goto LABEL_5;
            }
            v30[(v32 >> 6) + 8] |= 1 << v32;
            *(void *)(v30[6] + 8 * v32) = v10;
            sub_10005C2B0(v88, (_OWORD *)(v30[7] + 32 * v32));
            uint64_t v34 = v30[2];
            BOOL v17 = __OFADD__(v34, 1);
            uint64_t v35 = v34 + 1;
            if (v17) {
              goto LABEL_68;
            }
            void v30[2] = v35;
            swift_bridgeObjectRelease();
            uint64_t v10 = (uint64_t)objc_allocWithZone((Class)NSMutableAttributedString);
            NSString v36 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            type metadata accessor for Key(0);
            sub_1005A8160((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
            uint64_t inited = (uint64_t)Dictionary._bridgeToObjectiveC()().super.isa;
            swift_release();
            uint64_t v4 = (uint64_t)[(id)v10 initWithString:v36 attributes:inited];

            unint64_t v14 = v22;
LABEL_28:
            [v4 boundingRectWithSize:1 options:0 context:1.79769313e308 1.79769313e308 v73];
            double v38 = ceil(CGRectGetWidth(v97));
            uint64_t v39 = *(void *)v15;
            if (!*(void *)(*(void *)v15 + 16)) {
              goto LABEL_33;
            }
            swift_bridgeObjectRetain();
            uint64_t v40 = sub_100529A74(v2);
            if (v41)
            {
              double v42 = *(double *)(*(void *)(v39 + 56) + 8 * v40);
              swift_bridgeObjectRelease();
              if (v42 < v38) {
                goto LABEL_34;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
LABEL_33:
              if (v38 > 0.0)
              {
LABEL_34:
                swift_beginAccess();
                uint64_t inited = swift_isUniquelyReferenced_nonNull_native();
                long long v96 = *(void **)v15;
                char v43 = v96;
                *(void *)uint64_t v15 = 0x8000000000000000;
                unint64_t v45 = sub_100529A74(v2);
                uint64_t v46 = v43[2];
                BOOL v47 = (v44 & 1) == 0;
                uint64_t v48 = v46 + v47;
                if (__OFADD__(v46, v47)) {
                  goto LABEL_69;
                }
                uint64_t v10 = v44;
                if (v43[3] >= v48)
                {
                  if (inited)
                  {
                    if ((v44 & 1) == 0) {
                      goto LABEL_41;
                    }
                  }
                  else
                  {
                    sub_1004F2A48();
                    char v43 = v96;
                    if ((v10 & 1) == 0) {
                      goto LABEL_41;
                    }
                  }
                }
                else
                {
                  sub_1004E9864(v48, inited);
                  char v43 = v96;
                  uint64_t v49 = sub_100529A74(v2);
                  if ((v10 & 1) != (v50 & 1))
                  {
                    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                    __break(1u);
                    JUMPOUT(0x1005A7B48);
                  }
                  unint64_t v45 = v49;
                  if ((v10 & 1) == 0)
                  {
LABEL_41:
                    v43[(v45 >> 6) + 8] |= 1 << v45;
                    *(unsigned char *)(v43[6] + v45) = v2;
                    *(double *)(v43[7] + 8 * v45) = v38;
                    uint64_t v51 = v43[2];
                    BOOL v17 = __OFADD__(v51, 1);
                    uint64_t v52 = v51 + 1;
                    if (v17) {
                      goto LABEL_70;
                    }
                    void v43[2] = v52;
                    goto LABEL_17;
                  }
                }
                *(double *)(v43[7] + 8 * v45) = v38;
LABEL_17:
                *(void *)uint64_t v15 = v43;
                swift_bridgeObjectRelease();
                swift_endAccess();
              }
            }

            if (v92 != v18) {
              continue;
            }
            swift_bridgeObjectRelease();
            unint64_t v2 = v76;
            uint64_t v13 = v75;
            break;
        }
        break;
      }
    }
    swift_release();
  }
  while (v14 != v13);
  swift_bridgeObjectRelease();
  uint64_t v10 = 0x100963000;
  uint64_t inited = 0x100963000;
LABEL_46:
  uint64_t v53 = *(void *)&v86[*(void *)(inited + 1624)];
  uint64_t v54 = *(NSString **)(v53 + 16);
  uint64_t inited = (uint64_t)&v86[*(void *)(v10 + 1632)];
  uint64_t v55 = v86;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  if (v54)
  {
    uint64_t v56 = 0;
    uint64_t v57 = v53 + 32;
    uint64_t v58 = _swiftEmptyArrayStorage;
    long long v92 = v55;
    uint64_t v91 = v53;
    NSAttributedStringKey v90 = v54;
    do
    {
      long long v93 = v58;
      uint64_t v59 = 0;
      if (v56 <= v54) {
        char v60 = v54;
      }
      else {
        char v60 = v56;
      }
      uint64_t v10 = (char *)v56 - (char *)v60;
      uint64_t v61 = v57;
      while (1)
      {
        if (!(v10 + v59)) {
          goto LABEL_71;
        }
        if (*(void *)(*(void *)inited + 16))
        {
          uint64_t v4 = *((unsigned __int8 *)v56 + v61);
          uint64_t v62 = v57;
          swift_bridgeObjectRetain();
          sub_100529A74(v4);
          unint64_t v2 = v63;
          swift_bridgeObjectRelease();
          uint64_t v57 = v62;
          if (v2) {
            break;
          }
        }
        ++v59;
        ++v61;
        uint64_t v54 = (NSString *)((char *)v54 - 1);
        if (v56 == v54)
        {
          uint64_t v55 = v92;
          uint64_t v58 = v93;
          goto LABEL_65;
        }
      }
      long long v64 = v93;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v96 = v64;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1001C91F8(0, v64[2] + 1, 1);
        long long v64 = v96;
      }
      unint64_t v67 = v64[2];
      unint64_t v66 = v64[3];
      char v68 = v64;
      unint64_t v2 = v67 + 1;
      if (v67 >= v66 >> 1)
      {
        sub_1001C91F8(v66 > 1, v67 + 1, 1);
        char v68 = v96;
      }
      uint64_t v69 = (NSString *)((char *)v56 + 1);
      uint64_t v56 = (NSString *)((char *)v56 + v59 + 1);
      v68[2] = v2;
      *((unsigned char *)v68 + v67 + 32) = v4;
      BOOL v70 = v69 == v54;
      uint64_t v55 = v92;
      uint64_t v54 = v90;
      uint64_t v57 = v62;
      uint64_t v58 = v68;
    }
    while (!v70);
  }
  else
  {
    uint64_t v58 = _swiftEmptyArrayStorage;
  }
LABEL_65:

  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  long long v96 = v58;
  uint64_t v71 = v55;
  return static Published.subscript.setter();
}

id sub_1005A7BA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailSplitDataSource();
  return [super dealloc];
}

uint64_t sub_1005A7D1C()
{
  return type metadata accessor for WorkoutDetailSplitDataSource();
}

uint64_t type metadata accessor for WorkoutDetailSplitDataSource()
{
  uint64_t result = qword_100963698;
  if (!qword_100963698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005A7D70()
{
  sub_100181968(319, (unint64_t *)&qword_1009623B8, &qword_1009623C0);
  if (v0 <= 0x3F)
  {
    sub_100181968(319, &qword_100958948, &qword_100958950);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1005A7EA0()
{
  return 2;
}

uint64_t sub_1005A7EA8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v0 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1005A7F3C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutDetailSplitDataSource();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005A7F7C(uint64_t a1)
{
  uint64_t result = sub_1005A8160(&qword_100956FF0, (void (*)(uint64_t))type metadata accessor for WorkoutDetailSplitDataSource);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1005A7FD4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005A8050@<X0>(void *a1@<X8>)
{
  return sub_1005A7FD4(a1);
}

uint64_t sub_1005A8078(uint64_t a1, void **a2)
{
  return sub_100363710(a1, a2);
}

uint64_t sub_1005A80A0@<X0>(void *a1@<X8>)
{
  return sub_1005A7FD4(a1);
}

uint64_t sub_1005A80C8(uint64_t a1, void **a2)
{
  return sub_100363710(a1, a2);
}

uint64_t sub_1005A80F0()
{
  return swift_deallocObject();
}

void sub_1005A8128(unint64_t a1, uint64_t a2)
{
  sub_1005A47D0(a1, a2, *(void **)(v2 + 16));
}

void sub_1005A8130(unint64_t a1, uint64_t a2)
{
  sub_1005A50D0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1005A813C()
{
  return sub_1005A57DC(*(void *)(v0 + 16), *(void *)(v0 + 24), 1, 1);
}

uint64_t sub_1005A8160(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005A81A8()
{
  return swift_deallocObject();
}

uint64_t sub_1005A81E8()
{
  return sub_1005A5A48(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), (uint64_t)&unk_1008D00D0, (uint64_t)sub_1005A8780, (uint64_t)&unk_1008D00E8);
}

id sub_1005A822C()
{
  return sub_1005A5EDC(*(void *)(v0 + 16), 1, &OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingStandardSplits, &OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingCustomSplits);
}

uint64_t (*sub_1005A825C(void *a1, unsigned __int8 a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1005A8710(v4);
  v4[9] = sub_1005A83E0((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_1005A82EC;
}

uint64_t (*sub_1005A82F0(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1005A874C(v4);
  v4[9] = sub_1005A854C(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1005A82EC;
}

void sub_1005A8380(uint64_t a1)
{
  unint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

unint64_t (*sub_1005A83E0(uint64_t a1, unsigned __int8 a2, char a3))(unint64_t result)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1000D5C14(a2);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_1005A8504;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1004F2298();
      goto LABEL_7;
    }
    sub_1004E8870(v13, a3 & 1);
    unint64_t v17 = sub_1000D5C14(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      unint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (unint64_t (*)(unint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_1005A8504(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)result)
  {
    uint64_t v2 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 25)) {
      *(void *)(v2[7] + 8 * *(void *)(result + 16)) = v1;
    }
    else {
      return sub_1004F16DC(*(void *)(result + 16), *(unsigned char *)(result + 24), v1, v2);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    return sub_1005DC56C(*(void *)(result + 16), **(void **)(result + 8));
  }
  return result;
}

void (*sub_1005A854C(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  void v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_100005758(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        void *v8 = v17;
        return sub_1005A867C;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_1004F58A8();
      goto LABEL_7;
    }
    sub_1004EDB68(v14, a3 & 1);
    unint64_t v18 = sub_100005758(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1005A867C(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  char v3 = *((unsigned char *)*a1 + 32);
  if (v2)
  {
    unint64_t v4 = v1[3];
    uint64_t v5 = *(void **)v1[2];
    if (v3) {
      *(void *)(v5[7] + 8 * v4) = v2;
    }
    else {
      sub_1004F1D14(v4, v1[1], v2, v5);
    }
  }
  else if ((*a1)[4])
  {
    sub_1005DDC48(v1[3], *(void *)v1[2]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t (*sub_1005A8710(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1005A8740;
}

uint64_t sub_1005A8740(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_1005A874C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1005A8878;
}

uint64_t sub_1005A8780()
{
  return sub_1005A5DA4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1005A8790()
{
  return sub_1005A57DC(*(void *)(v0 + 16), *(void *)(v0 + 24), 0, 0);
}

uint64_t sub_1005A87B4()
{
  return sub_1005A5A48(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), (uint64_t)&unk_1008D0210, (uint64_t)sub_1005A886C, (uint64_t)&unk_1008D0228);
}

id sub_1005A87F8()
{
  return sub_1005A5EDC(*(void *)(v0 + 16), 0, &OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingCustomSplits, &OBJC_IVAR___CHWorkoutDetailSplitDataSource_didFinishLoadingStandardSplits);
}

uint64_t sub_1005A882C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005A886C()
{
  return sub_1005A4EDC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

char *sub_1005A88CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp29TrendsPregnancyDisclaimerCell_textView;
  sub_10007E2D8(0, &qword_100953458);
  uint64_t v7 = v3;
  *(void *)&v3[v6] = sub_1005CA0D4();

  if (a3)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  v48.receiver = v7;
  v48.super_class = (Class)type metadata accessor for TrendsPregnancyDisclaimerCell();
  [super initWithStyle:a1 reuseIdentifier:v8];

  char v10 = (char *)v9;
  id v11 = [v10 contentView];
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp29TrendsPregnancyDisclaimerCell_textView;
  [v11 addSubview:*(void *)&v10[OBJC_IVAR____TtC10FitnessApp29TrendsPregnancyDisclaimerCell_textView]];

  id v13 = [*(id *)&v10[v12] leadingAnchor];
  id v14 = [v10 contentView];
  id v15 = [v14 leadingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15 constant:16.0];
  id v17 = [*(id *)&v10[v12] topAnchor];
  id v18 = [v10 contentView];
  id v19 = [v18 topAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19 constant:10.0];
  id v21 = [*(id *)&v10[v12] trailingAnchor];
  id v22 = [v10 contentView];
  id v23 = [v22 trailingAnchor];

  id v24 = [v21 constraintEqualToAnchor:v23 constant:-16.0];
  id v25 = [*(id *)&v10[v12] bottomAnchor];
  id v26 = [v10 contentView];
  id v27 = [v26 bottomAnchor];

  id v28 = [v25 constraintEqualToAnchor:v27 constant:-10.0];
  uint64_t v29 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100751160;
  *(void *)(v30 + 32) = v16;
  *(void *)(v30 + 40) = v20;
  *(void *)(v30 + 48) = v24;
  *(void *)(v30 + 56) = v28;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v31 = v16;
  id v32 = v20;
  id v33 = v24;
  id v34 = v28;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v29 activateConstraints:isa];

  NSString v36 = *(void **)&v10[v12];
  uint64_t v37 = self;
  id v38 = v36;
  id v39 = [v37 _preferredFontForTextStyle:UIFontTextStyleFootnote variant:256];
  [v38 setFont:v39];

  uint64_t v40 = *(void **)&v10[v12];
  char v41 = self;
  id v42 = v40;
  id v43 = [v41 secondaryLabelColor];
  [v42 setTextColor:v43];

  uint64_t v44 = *(void **)&v10[v12];
  [v44 setNumberOfLines:0];
  id v45 = v44;
  LODWORD(v46) = 1148846080;
  [v45 setContentCompressionResistancePriority:1 forAxis:v46];

  return v10;
}

void sub_1005A8DC4(uint64_t a1)
{
  if (a1 == 2 || a1 == 1)
  {
    id v2 = [self mainBundle];
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp29TrendsPregnancyDisclaimerCell_textView);
  id v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setText:v6];
}

id sub_1005A8FC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsPregnancyDisclaimerCell();
  [super dealloc];
}

uint64_t type metadata accessor for TrendsPregnancyDisclaimerCell()
{
  return self;
}

void sub_1005A9030(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(uint64_t), void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v25 = a8;
  id v26 = a6;
  id v27 = a7;
  uint64_t v13 = type metadata accessor for NavigationRequest();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_10095DD38);
  __chkstk_darwin(v17);
  id v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005AB9D8(a1, (uint64_t)v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
    id v20 = [self handleNotificationResponse:v25 bag:*(void *)(a2 + OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_amsBag)];
    uint64_t v21 = swift_allocObject();
    id v22 = v27;
    *(void *)(v21 + 16) = v26;
    *(void *)(v21 + 24) = v22;
    aBlock[4] = sub_1005ABA78;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000D15C;
    aBlock[3] = &unk_1008D03E0;
    id v23 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v20 addFinishBlock:v23];
    _Block_release(v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    sub_1005A934C(v16, a3, a4, a5, v26, v27);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

void sub_1005A934C(void *a1, void *a2, void *a3, void *a4, void (*a5)(uint64_t), void (*a6)(uint64_t))
{
  uint64_t v72 = a5;
  id v66 = a4;
  id v64 = a1;
  uint64_t v70 = type metadata accessor for URL();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v67 = v10;
  unint64_t v73 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for NavigationRequest();
  uint64_t v65 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v63 = v11;
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = __chkstk_darwin(v17).n128_u64[0];
  id v20 = (char *)&v59 - v19;
  [a3 setDefaultURL:0 v18];
  uint64_t v71 = v6;
  id v21 = [a2 handleSelectedButton:a3 bag:*(void *)&v6[OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_amsBag]];
  uint64_t v78 = sub_1005A9B10;
  uint64_t v79 = 0;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v75 = 1107296256;
  unint64_t v76 = sub_10000D15C;
  unint64_t v77 = &unk_1008D0250;
  id v22 = _Block_copy(&aBlock);
  [v21 addFinishBlock:v22];
  _Block_release(v22);
  id v23 = [self mainBundle];
  id v24 = [v23 bundleIdentifier];

  if (v24)
  {
    uint64_t v62 = a6;
    static Log.engagement.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Foregrounding app", v27, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    sub_1000AFA94((uint64_t *)&unk_100963720);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10074E640;
    uint64_t aBlock = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v75 = v29;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 96) = &type metadata for Bool;
    *(unsigned char *)(inited + 72) = 1;
    uint64_t aBlock = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v75 = v30;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 168) = &type metadata for Bool;
    *(unsigned char *)(inited + 144) = 1;
    sub_10052331C(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v32 = [self optionsWithDictionary:isa];

    id v33 = [self serviceWithDefaultShellEndpoint];
    if (v33)
    {
      uint64_t v34 = v65;
      uint64_t v35 = *(void (**)(char *, id, uint64_t))(v65 + 16);
      id v61 = v32;
      NSString v36 = v12;
      id v60 = v33;
      uint64_t v37 = v12;
      uint64_t v38 = v68;
      v35(v37, v64, v68);
      id v64 = v21;
      uint64_t v39 = v69;
      uint64_t v40 = *(void (**)(char *, id, uint64_t))(v69 + 16);
      id v41 = v66;
      id v66 = v24;
      uint64_t v42 = v70;
      v40(v73, v41, v70);
      unint64_t v43 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      unint64_t v44 = (v63 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v45 = (*(unsigned __int8 *)(v39 + 80) + v44 + 8) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      unint64_t v46 = (v67 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v47 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v47 + v43, v36, v38);
      objc_super v48 = v71;
      *(void *)(v47 + v44) = v71;
      (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v47 + v45, v73, v42);
      uint64_t v49 = (void (**)(uint64_t))(v47 + v46);
      char v50 = v62;
      *uint64_t v49 = v72;
      v49[1] = v50;
      uint64_t v78 = sub_1005AAE6C;
      uint64_t v79 = v47;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v75 = 1107296256;
      unint64_t v76 = sub_100259288;
      unint64_t v77 = &unk_1008D02A0;
      uint64_t v51 = _Block_copy(&aBlock);
      id v52 = v48;
      swift_retain();
      swift_release();
      id v53 = v60;
      id v21 = v66;
      uint64_t v54 = v61;
      [v60 openApplication:v66 withOptions:v61 completion:v51];

      _Block_release(v51);
    }
    else
    {

      id v21 = v24;
    }
  }
  else
  {
    static Log.engagement.getter();
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Failed to retrieve app bundle identifier", v57, 2u);
      swift_slowDealloc();
    }

    uint64_t v58 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v72(v58);
  }
}

uint64_t sub_1005A9B10(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.engagement.getter();
  swift_errorRetain();
  swift_errorRetain();
  NSString v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109378;
    LODWORD(v14) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 8) = 2112;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v14 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      uint64_t v14 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v12 = 0;
    }
    *uint64_t v11 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "AMS handled button action: success %{BOOL}d, error %@", (uint8_t *)v10, 0x12u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1005A9D88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v54 = a4;
  uint64_t v55 = a7;
  uint64_t v53 = a6;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v57 = *(void *)(v12 - 8);
  uint64_t v58 = v12;
  __chkstk_darwin(v12);
  os_log_type_t v56 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for URL();
  uint64_t v50 = *(void *)(v52 - 8);
  uint64_t v14 = *(void *)(v50 + 64);
  __chkstk_darwin(v52);
  uint64_t v62 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for NavigationRequest();
  uint64_t v15 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v49 = v16;
  objc_super v48 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.engagement.getter();
  swift_errorRetain();
  swift_errorRetain();
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v44 = v14;
    uint64_t v45 = a3;
    uint64_t v46 = a5;
    id v22 = (uint8_t *)swift_slowAlloc();
    id v23 = (void *)swift_slowAlloc();
    *(_DWORD *)id v22 = 138412290;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      aBlock[0] = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v24 = 0;
    }
    *id v23 = v24;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Foregrounded app (error %@", v22, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    a5 = v46;
    a3 = v45;
    uint64_t v14 = v44;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v47);
  sub_1000DF004();
  uint64_t v47 = static OS_dispatch_queue.main.getter();
  uint64_t v25 = v48;
  uint64_t v26 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v48, a3, v51);
  uint64_t v27 = v50;
  uint64_t v28 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v62, a5, v52);
  unint64_t v29 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v30 = (v49 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (*(unsigned __int8 *)(v27 + 80) + v30 + 8) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v32 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v32 + v29, v25, v26);
  id v33 = v54;
  *(void *)(v32 + v30) = v54;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v32 + v31, v62, v28);
  uint64_t v34 = (void *)(v32 + ((v14 + v31 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v35 = v55;
  *uint64_t v34 = v53;
  v34[1] = v35;
  aBlock[4] = sub_1005AAF94;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D02F0;
  NSString v36 = _Block_copy(aBlock);
  id v37 = v33;
  swift_retain();
  swift_release();
  uint64_t v38 = v56;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100067B54((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  uint64_t v39 = v59;
  uint64_t v40 = v61;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v41 = (void *)v47;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v38, v58);
}

uint64_t sub_1005AA494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v27 = a3;
  uint64_t v6 = type metadata accessor for NavigationAnnotation();
  uint64_t v28 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TrainerTipsGalleryNavigationBegan();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (NavigationRequest.isTrainerTipsGalleryRequest.getter())
  {
    v25[1] = *(void *)(a2 + OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_eventHub + 8);
    swift_getObjectType();
    uint64_t v26 = a2;
    TrainerTipsGalleryNavigationBegan.init()();
    sub_100067B54(qword_100963730, (void (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan);
    a2 = v26;
    dispatch thunk of EventHubProtocol.publish<A>(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v16 = (void **)sub_10007E4EC((void *)(*(void *)(a2+ OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_urlNavigator)+ 48), *(void *)(*(void *)(a2+ OBJC_IVAR____TtC10FitnessApp38SeymourNotificationResponseCoordinator_urlNavigator)+ 72));
  uint64_t v17 = *v16;
  uint64_t v18 = (uint64_t)v16[1];
  unint64_t v31 = _swiftEmptyArrayStorage;
  sub_100067B54((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
  sub_1000AFA94(&qword_1009633E0);
  sub_1002D54D8((unint64_t *)&qword_1009668F0, &qword_1009633E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  if (v18 < 0)
  {
    swift_retain();
    AppCoordinator.navigateToURL(_:annotation:)();
    sub_1000656A0(v17, v18);
  }
  else
  {
    id v19 = v17;
    BrowsingViewController.navigateToURL(_:annotation:)();
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
  uint64_t v20 = v30;
  os_log_type_t v21 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  v21(sub_10006D8B4, v22);
  swift_release();
  swift_release();
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v20);
  return a4(v23);
}

uint64_t sub_1005AA894(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  __chkstk_darwin(v8);
  NSString v36 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.engagement.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v31 = v13;
    uint64_t v32 = a3;
    uint64_t v33 = a4;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    char v21 = a1;
    uint64_t v22 = (void *)v20;
    *(_DWORD *)uint64_t v19 = 67109378;
    LODWORD(aBlock[0]) = v21 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 8) = 2112;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      aBlock[0] = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v23 = 0;
    }
    *uint64_t v22 = v23;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "AMS handled URL: success %{BOOL}d, error %@", (uint8_t *)v19, 0x12u);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    a3 = v32;
    a4 = v33;
    uint64_t v13 = v31;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1000DF004();
  uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = a4;
  aBlock[4] = sub_100070A14;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D0430;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100067B54((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  uint64_t v27 = v36;
  uint64_t v28 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v35);
}

id sub_1005AADD8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeymourNotificationResponseCoordinator();
  [super dealloc];
}

uint64_t sub_1005AAE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for NavigationRequest() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void **)(v2 + v7);
  uint64_t v11 = v2 + v9;
  uint64_t v12 = (uint64_t *)(v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];

  return sub_1005A9D88(a1, a2, v2 + v6, v10, v11, v13, v14);
}

uint64_t sub_1005AAF94()
{
  uint64_t v1 = *(void *)(type metadata accessor for NavigationRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + v3);
  unint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1005AA494(v0 + v2, v6, v0 + v5, v7);
}

void sub_1005AB0A4(void *a1, void *a2, void (**a3)(void))
{
  id v60 = a2;
  id v66 = a1;
  uint64_t v4 = sub_1000AFA94(&qword_10095DD30);
  uint64_t v57 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v62 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v64 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v64);
  uint64_t v59 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v61 = (char *)&v55 - v12;
  uint64_t v67 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  os_log_type_t v18 = (char *)&v55 - v17;
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = a3;
  uint64_t v63 = a3;
  _Block_copy(a3);
  static Log.engagement.getter();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    char v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Handling notification response for AMS", v21, 2u);
    swift_slowDealloc();
  }

  uint64_t v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v18, v67);
  id v23 = v66;
  id v24 = [v66 notification];
  id v25 = [objc_allocWithZone((Class)AMSUserNotification) initWithUNNotification:v24];

  id v68 = 0;
  id v26 = [v25 determineSelectedActionFromResponse:v23 error:&v68];
  if (v26)
  {
    uint64_t v27 = v26;
    id v58 = v25;
    id v28 = v68;
    id v29 = [v27 defaultURL];
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v55 = v4;
      uint64_t v31 = v59;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v32 = v64;
      os_log_type_t v56 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v56(v8, v31, v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v32);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v32) != 1)
      {
        uint64_t v33 = (uint64_t)v61;
        v56(v61, v8, v32);
        uint64_t v34 = v32;
        id v35 = v60;
        sub_10065E5E4(v33, v62);
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v31, v33, v32);
        unint64_t v36 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        unint64_t v37 = (v10 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v38 = (char *)swift_allocObject();
        *((void *)v38 + 2) = v35;
        uint64_t v39 = v58;
        *((void *)v38 + 3) = v58;
        *((void *)v38 + 4) = v27;
        v56(&v38[v36], v31, v34);
        uint64_t v40 = (uint64_t (**)())&v38[v37];
        uint64_t v42 = v65;
        id v41 = v66;
        *uint64_t v40 = sub_1001A7D48;
        v40[1] = (uint64_t (*)())v42;
        *(void *)&v38[(v37 + 23) & 0xFFFFFFFFFFFFFFF8] = v41;
        id v43 = v60;
        id v44 = v39;
        id v45 = v27;
        swift_retain();
        id v46 = v41;
        uint64_t v47 = v55;
        uint64_t v48 = v62;
        uint64_t v49 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
        uint64_t v50 = swift_allocObject();
        *(void *)(v50 + 16) = sub_1005AB918;
        *(void *)(v50 + 24) = v38;
        swift_retain();
        v49(sub_1005AB9D0, v50);

        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v48, v47);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v61, v64);
        swift_release();
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v64);
    }

    sub_1001C8AF0((uint64_t)v8);
    id v25 = v58;
  }
  else
  {
    id v51 = v68;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  static Log.engagement.getter();
  uint64_t v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Error determining selected action", v54, 2u);
    swift_slowDealloc();
  }

  v22(v15, v67);
  v63[2]();
  swift_release();
}

uint64_t sub_1005AB7D4()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1005AB80C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_1005AB918(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)v1[3];
  uint64_t v8 = (void *)v1[4];
  uint64_t v9 = *(void (**)(uint64_t))((char *)v1 + v5);
  uint64_t v10 = *(void (**)(uint64_t))((char *)v1 + v5 + 8);
  uint64_t v11 = *(void *)((char *)v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_1005A9030(a1, v6, v7, v8, (char *)v1 + v4, v9, v10, v11);
}

uint64_t sub_1005AB9D0(uint64_t a1)
{
  return sub_10004D2E0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1005AB9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095DD38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005ABA40()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005ABA78(char a1, uint64_t a2)
{
  return sub_1005AA894(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

double ARUIRingGroup.center.getter()
{
  [v0 translation];
  double v2 = v1;
  [v0 translation];
  return v2;
}

id ARUIRingGroup.setCenter(_:)(float64x2_t a1, float64_t a2)
{
  a1.f64[1] = a2;
  return [v2 setTranslation:COERCE_DOUBLE(vcvt_f32_f64(a1))];
}

uint64_t sub_1005ABB88()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1005ABC34(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  uint64_t v8 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    *a1 = v8;
    uint64_t v3 = (void *)(v8 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    uint64_t v11 = a2[1];
    void *v3 = v8;
    v3[1] = v11;
    uint64_t v12 = ((unint64_t)v3 + v6 + 16) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
    uint64_t v15 = (void *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v16 = (v7 + v13) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v17 = *(void **)v16;
    *uint64_t v15 = *(void *)v16;
    v15[1] = *(void *)(v16 + 8);
    os_log_type_t v18 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (void *)((v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    *os_log_type_t v18 = *v19;
    v18[1] = v19[1];
    id v20 = v17;
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_1005ABDA8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);

  swift_release();

  return swift_release();
}

void *sub_1005ABE58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_retain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(v7 + 48) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void **)v13;
  *uint64_t v12 = *(void *)v13;
  v12[1] = *(void *)(v13 + 8);
  uint64_t v15 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (void *)((v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  id v17 = v14;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1005ABF44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 40) + 7;
  unint64_t v13 = (v12 + v10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v12 + v11) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void **)v13;
  unint64_t v16 = *(void **)v14;
  *(void *)unint64_t v13 = *(void *)v14;
  id v17 = v16;

  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  swift_retain();
  swift_release();
  os_log_type_t v18 = (void *)((v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  *os_log_type_t v18 = *v19;
  v18[1] = v19[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1005AC050(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  uint64_t v10 = (_OWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (_OWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_1005AC100(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24) + 7;
  unint64_t v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = *(void **)v12;
  *(void *)unint64_t v12 = *v13;

  *(void *)(v12 + 8) = v13[1];
  swift_release();
  uint64_t v15 = (void *)((v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_release();
  return a1;
}

uint64_t sub_1005AC1F0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1005AC350);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
  }
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1005AC364(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v19 = (unint64_t)&a1[v9 + 16] & ~v9;
              id v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
            else
            {
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v18 = a2 ^ 0x80000000;
                *((void *)a1 + 1) = 0;
              }
              else
              {
                uint64_t v18 = a2 - 1;
              }
              *(void *)a1 = v18;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1005AC560);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for ScheduleDayRowButton()
{
  return sub_100049E84();
}

uint64_t sub_1005AC5A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005AC5E4()
{
  sub_1000AFA94(&qword_1009637B8);
  State.wrappedValue.getter();
  return v1;
}

uint64_t sub_1005AC630()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1005AC680()
{
  sub_1000AFA94(&qword_10094C330);
  State.wrappedValue.getter();
  return v1;
}

uint64_t sub_1005AC6CC()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1005AC71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(a1);
  id v45 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unsigned int v7 = (char *)&v35 - v6;
  uint64_t v39 = v8;
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v11 = type metadata accessor for Button();
  uint64_t v43 = v11;
  uint64_t v49 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v40 = (char *)&v35 - v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v54 = v11;
  uint64_t v55 = WitnessTable;
  id v46 = &opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v14 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v47 = OpaqueTypeMetadata2;
  uint64_t v48 = v14;
  __chkstk_darwin(OpaqueTypeMetadata2);
  id v41 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v42 = (uint64_t)&v35 - v17;
  uint64_t v51 = v10;
  uint64_t v52 = v9;
  uint64_t v38 = v2;
  uint64_t v53 = v2;
  uint64_t v36 = v9;
  Button.init(action:label:)();
  unint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v18 = v2;
  uint64_t v19 = v39;
  v37(v7, v18, v39);
  unint64_t v20 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v10;
  *(void *)(v21 + 24) = v9;
  uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t v23 = v19;
  v22(v21 + v20, v7, v19);
  id v24 = v45;
  v37(v45, v38, v23);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v36;
  *(void *)(v25 + 16) = v10;
  *(void *)(v25 + 24) = v26;
  v22(v25 + v20, v24, v23);
  uint64_t v27 = v40;
  uint64_t v28 = (uint64_t)v41;
  uint64_t v29 = v43;
  uint64_t v30 = WitnessTable;
  View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v27, v29);
  uint64_t v54 = v29;
  uint64_t v55 = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = v42;
  uint64_t v32 = v47;
  sub_10004C704(v28, v47, v42);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v33(v28, v32);
  sub_10004C704(v31, v32, v50);
  return ((uint64_t (*)(uint64_t, uint64_t))v33)(v31, v32);
}

uint64_t sub_1005ACB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScheduleDayRowButton();
  sub_10004C704(a1 + *(int *)(v9 + 36), a2, (uint64_t)v8);
  sub_10004C704((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

void sub_1005ACC74()
{
  type metadata accessor for ScheduleDayRowButton();
  id v0 = (id)sub_1005AC5E4();
  [v0 invalidate];
}

uint64_t sub_1005ACCCC(char a1)
{
  uint64_t v2 = type metadata accessor for ScheduleDayRowButton();
  if (a1) {
    return sub_1005ACD44(v2);
  }
  uint64_t v4 = (void *)sub_1005AC5E4();
  [v4 invalidate];

  return sub_1005AC6CC();
}

uint64_t sub_1005ACD44(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void ***)((char *)v1 + *(int *)(v7 + 52));
  uint64_t v10 = *v8;
  uint64_t v9 = (uint64_t)v8[1];
  uint64_t aBlock = *v8;
  uint64_t v20 = v9;
  swift_retain();
  sub_1000AFA94(&qword_10094C330);
  uint64_t result = State.wrappedValue.getter();
  if (__OFADD__(v26, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t aBlock = v10;
    uint64_t v20 = v9;
    uint64_t v25 = v26 + 1;
    State.wrappedValue.setter();
    uint64_t v12 = swift_release();
    (*v1)(v12);
    double v13 = fmax(0.5 / (double)sub_1005AC680(), 0.01);
    uint64_t v14 = self;
    (*(void (**)(char *, void (**)(uint64_t), uint64_t))(v4 + 16))((char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
    unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = *(_OWORD *)(a1 + 16);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v15, v6, a1);
    uint64_t v23 = sub_1005AD0E4;
    uint64_t v24 = v16;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_100066A00;
    uint64_t v22 = &unk_1008D0528;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_release();
    id v18 = [v14 scheduledTimerWithTimeInterval:0 repeats:v17 block:v13];
    _Block_release(v17);
    return sub_1005AC630();
  }
  return result;
}

uint64_t sub_1005ACFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1005ACB7C(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

void sub_1005ACFCC()
{
  type metadata accessor for ScheduleDayRowButton();

  sub_1005ACC74();
}

uint64_t sub_1005AD054(char a1)
{
  type metadata accessor for ScheduleDayRowButton();

  return sub_1005ACCCC(a1);
}

uint64_t sub_1005AD0E4()
{
  return sub_1005ACD44();
}

uint64_t sub_1005AD148()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1005AD1BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessAppDelegate();
  return [super dealloc];
}

id sub_1005AD31C(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  MGGetSInt32Answer();

  swift_bridgeObjectRetain();
  id v3 = [a1 role];
  id v4 = objc_allocWithZone((Class)UISceneConfiguration);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithName:v5 sessionRole:v3];

  return v6;
}

uint64_t sub_1005AD40C()
{
  return swift_deallocObject();
}

id sub_1005AD444@<X0>(void *a1@<X8>)
{
  NSString v2 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_healthStore);
  *a1 = v2;
  return v2;
}

id sub_1005AD45C@<X0>(void *a1@<X8>)
{
  NSString v2 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_historyDataProvider);
  *a1 = v2;
  return v2;
}

id sub_1005AD474@<X0>(void *a1@<X8>)
{
  NSString v2 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_fitnessUIFormattingManager);
  *a1 = v2;
  return v2;
}

id sub_1005AD48C@<X0>(void *a1@<X8>)
{
  NSString v2 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_workoutFormattingManager);
  *a1 = v2;
  return v2;
}

id sub_1005AD4A4@<X0>(void *a1@<X8>)
{
  NSString v2 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR___CHFitnessAppDelegate_pauseRingsCoordinator);
  *a1 = v2;
  return v2;
}

ValueMetadata *type metadata accessor for HistoryItemAwardBadgeView()
{
  return &type metadata for HistoryItemAwardBadgeView;
}

uint64_t sub_1005AD4DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005AD4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100963848);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100963850);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v11 = sub_1000AFA94(&qword_100963858);
  sub_1005AD688(a1, (uint64_t)&v6[*(int *)(v11 + 44)]);
  uint64_t v12 = static Font.footnote.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v6, (uint64_t)v10, &qword_100963848);
  uint64_t v14 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v14 = KeyPath;
  v14[1] = v12;
  sub_10008DB18((uint64_t)v6, &qword_100963848);
  uint64_t v15 = static Color.secondary.getter();
  uint64_t v16 = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v10, a2, &qword_100963850);
  uint64_t v17 = (uint64_t *)(a2 + *(int *)(sub_1000AFA94(&qword_100963860) + 36));
  *uint64_t v17 = v16;
  v17[1] = v15;
  return sub_10008DB18((uint64_t)v10, &qword_100963850);
}

uint64_t sub_1005AD688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = sub_1000AFA94(&qword_100959E78);
  __chkstk_darwin(v48);
  uint64_t v49 = (uint64_t *)&v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v47 = type metadata accessor for Image.Scale();
  uint64_t v5 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v7 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = sub_1000AFA94(&qword_100959E80);
  __chkstk_darwin(v46);
  uint64_t v9 = (uint64_t *)&v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v50 = &v42[-v11];
  uint64_t v12 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for AttributedString();
  __chkstk_darwin(v13 - 8);
  if (qword_10094AEA0 != -1) {
    swift_once();
  }
  id v14 = (id)qword_100963840;
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  id v16 = [v14 stringForObjectValue:isa];

  if (v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v51 = a1;
    dispatch thunk of CustomStringConvertible.description.getter();
  }
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t v17 = Text.init(_:)();
  uint64_t v44 = v18;
  uint64_t v45 = v19;
  char v21 = v20 & 1;
  int v43 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = Image.init(_internalSystemName:)();
  uint64_t v31 = v5;
  uint64_t v32 = v7;
  uint64_t v33 = v7;
  uint64_t v34 = v47;
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v33, enum case for Image.Scale.small(_:), v47);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v49;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v31 + 16))((unsigned char *)v49 + *(int *)(v48 + 28), v32, v34);
  uint64_t *v36 = KeyPath;
  sub_1000AEF2C((uint64_t)v36, (uint64_t)v9 + *(int *)(v46 + 36), &qword_100959E78);
  *uint64_t v9 = v30;
  swift_retain();
  sub_10008DB18((uint64_t)v36, &qword_100959E78);
  (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v32, v34);
  swift_release();
  unint64_t v37 = v50;
  sub_1005ADBD4((uint64_t)v9, (uint64_t)v50);
  sub_1000AEF2C((uint64_t)v37, (uint64_t)v9, &qword_100959E80);
  uint64_t v39 = v44;
  uint64_t v38 = v45;
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v39;
  *(unsigned char *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v38;
  *(unsigned char *)(a2 + 32) = v43;
  *(void *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v27;
  *(void *)(a2 + 64) = v29;
  *(unsigned char *)(a2 + 72) = 0;
  uint64_t v40 = sub_1000AFA94(&qword_100963868);
  sub_1000AEF2C((uint64_t)v9, a2 + *(int *)(v40 + 48), &qword_100959E80);
  sub_1000A1750(v17, v39, v21);
  swift_bridgeObjectRetain();
  sub_10008DB18((uint64_t)v37, &qword_100959E80);
  sub_10008DB18((uint64_t)v9, &qword_100959E80);
  sub_1000A06C0(v17, v39, v21);
  return swift_bridgeObjectRelease();
}

id sub_1005ADB50()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setNumberStyle:0];
  id result = [v0 setRoundingMode:4];
  qword_100963840 = (uint64_t)v0;
  return result;
}

uint64_t sub_1005ADBB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1005AD4F8(*v1, a1);
}

uint64_t sub_1005ADBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100959E80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005ADC40()
{
  unint64_t result = qword_100963870;
  if (!qword_100963870)
  {
    sub_1000A1370(&qword_100963860);
    sub_1005ADCE0();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963870);
  }
  return result;
}

unint64_t sub_1005ADCE0()
{
  unint64_t result = qword_100963878;
  if (!qword_100963878)
  {
    sub_1000A1370(&qword_100963850);
    sub_1000A132C(&qword_100963880, &qword_100963848);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963878);
  }
  return result;
}

uint64_t sub_1005ADDA4()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  NSString v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v5, qword_100998520);
  sub_1000876DC(v5, (uint64_t)qword_100998520);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1005ADF10(char *a1, char *a2)
{
  return sub_10047F264(*a1, *a2);
}

unint64_t sub_1005ADF20()
{
  unint64_t result = qword_100963888;
  if (!qword_100963888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963888);
  }
  return result;
}

Swift::Int sub_1005ADF74()
{
  return Hasher._finalize()();
}

uint64_t sub_1005ADFEC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005AE048()
{
  return Hasher._finalize()();
}

uint64_t sub_1005AE0BC@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B6ED0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1005AE11C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746E6572727563;
  if (*v1) {
    uint64_t v2 = 0x747365676E6F6CLL;
  }
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1005AE158()
{
  unint64_t result = qword_100963890;
  if (!qword_100963890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963890);
  }
  return result;
}

unint64_t sub_1005AE1B0()
{
  unint64_t result = qword_100963898;
  if (!qword_100963898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963898);
  }
  return result;
}

unint64_t sub_1005AE208()
{
  unint64_t result = qword_1009638A0;
  if (!qword_1009638A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009638A0);
  }
  return result;
}

unint64_t sub_1005AE260()
{
  unint64_t result = qword_1009638A8;
  if (!qword_1009638A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009638A8);
  }
  return result;
}

unint64_t sub_1005AE2B8()
{
  unint64_t result = qword_1009638B0;
  if (!qword_1009638B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009638B0);
  }
  return result;
}

unint64_t sub_1005AE314()
{
  unint64_t result = qword_1009638B8;
  if (!qword_1009638B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009638B8);
  }
  return result;
}

uint64_t sub_1005AE368@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094AEA8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100998520);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1005AE410()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005AE460(uint64_t a1)
{
  unint64_t v2 = sub_1004DC428();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1005AE4B0()
{
  unint64_t result = qword_1009638C0;
  if (!qword_1009638C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009638C0);
  }
  return result;
}

unint64_t sub_1005AE508()
{
  unint64_t result = qword_1009638C8;
  if (!qword_1009638C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009638C8);
  }
  return result;
}

unint64_t sub_1005AE560()
{
  unint64_t result = qword_1009638D0;
  if (!qword_1009638D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009638D0);
  }
  return result;
}

uint64_t sub_1005AE5B8(uint64_t a1)
{
  unint64_t v2 = sub_1005AE314();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1005AE608()
{
  unint64_t result = qword_1009638D8;
  if (!qword_1009638D8)
  {
    sub_1000A1370(&qword_1009638E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009638D8);
  }
  return result;
}

void sub_1005AE664(void *a1@<X8>)
{
  *a1 = &off_1008B6E58;
}

unsigned char *storeEnumTagSinglePayload for MoveStreakDuration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005AE740);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveStreakDuration()
{
  return &type metadata for MoveStreakDuration;
}

unint64_t sub_1005AE778()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v19 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v16 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA94(&qword_1009638E8);
  uint64_t v7 = (int *)(sub_1000AFA94(&qword_100960AC0) - 8);
  uint64_t v8 = *(void *)v7;
  uint64_t v20 = *(void *)(*(void *)v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  uint64_t v21 = v10;
  *(_OWORD *)(v10 + 16) = xmmword_10074E640;
  uint64_t v11 = (unsigned char *)(v10 + v9);
  uint64_t v17 = &v11[v7[14]];
  *uint64_t v11 = 0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v18(v3, 1, 1, v4);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  uint64_t v15 = sub_1000AFA94(&qword_100956A58);
  uint64_t v12 = swift_allocObject();
  long long v14 = xmmword_1007509E0;
  *(_OWORD *)(v12 + 16) = xmmword_1007509E0;
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  v11[v20] = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v18(v3, 1, 1, v19);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(_OWORD *)(swift_allocObject() + 16) = v14;
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  return sub_10052442C(v21);
}

void sub_1005AEB10(unsigned char *a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_trendType) = *a1;
  sub_1005AEC18();
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel);
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setText:v5];

  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel);
  type metadata accessor for TrendListMetric();
  uint64_t v7 = (void *)sub_1006758D8();
  Class isa = AttributedString.nsAttributedStringWithMatchingTextScales(font:)((UIFont)v7).super.isa;

  [v6 setAttributedText:isa];
  unint64_t v9 = a1[1];
  sub_100579EA0((void *)v9, 0);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection) = v9;
}

void sub_1005AEC18()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char *)sub_1005F2334(*(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_trendType));
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator);
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient];
  NSString v5 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors);
  *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp23TrendArrowIndicatorView_gradientColors) = v4;
  id v6 = v4;

  sub_100579074();
  [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel) setTextColor:*(void *)&v2[OBJC_IVAR____TtC10FitnessApp12MetricColors_text]];
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel);
  id v8 = [self labelColor];
  [v7 setTextColor:v8];
}

id sub_1005AED2C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel);
  uint64_t v2 = self;
  id v3 = [v2 preferredFontForTextStyle:UIFontTextStyleCallout];
  [v1 setFont:v3];

  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel);
  id v5 = [v2 _preferredFontForTextStyle:UIFontTextStyleTitle3 design:UIFontSystemFontDesignRounded variant:1024];
  [v4 setFont:v5];

  [v1 setAdjustsFontSizeToFitWidth:1];

  return [v4 setAdjustsFontSizeToFitWidth:1];
}

char *sub_1005AEE38(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection] = 1;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator;
  type metadata accessor for TrendArrowIndicatorView();
  uint64_t v10 = v4;
  *(void *)&v4[v9] = sub_1006D13E4();
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel;
  sub_10007E2D8(0, &qword_100953458);
  *(void *)&v10[v11] = sub_1005CA0D4();
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel;
  *(void *)&v10[v12] = sub_1005CA0D4();
  v10[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_trendType] = 1;

  v17.receiver = v10;
  v17.super_class = (Class)type metadata accessor for TrendListMetricView();
  uint64_t v13 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator];
  uint64_t v15 = v13;
  [v15 addSubview:v14];
  [v15 addSubview:*(void *)&v15[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel]];
  [v15 addSubview:*(void *)&v15[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel]];
  sub_1005AEC18();
  sub_1005AED2C();
  sub_1005AEFC0();

  return v15;
}

void sub_1005AEFC0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator];
  id v2 = [v1 leadingAnchor];
  id v3 = [v0 leadingAnchor];
  id v49 = [v2 constraintEqualToAnchor:v3 constant:8.0];

  id v4 = [v1 widthAnchor];
  id v47 = [v4 constraintEqualToConstant:40.0];

  id v5 = [v1 heightAnchor];
  id v45 = [v5 constraintEqualToConstant:40.0];

  id v6 = [v1 centerYAnchor];
  id v7 = [v0 centerYAnchor];
  id v43 = [v6 constraintEqualToAnchor:v7];

  id v8 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel];
  id v9 = [v8 leadingAnchor];
  id v10 = [v1 trailingAnchor];
  id v42 = [v9 constraintEqualToAnchor:v10 constant:7.0];

  id v11 = [v8 trailingAnchor];
  id v12 = [v0 trailingAnchor];
  id v41 = [v11 constraintEqualToAnchor:v12 constant:-7.0];

  id v13 = [v8 topAnchor];
  id v14 = [v0 topAnchor];
  id v40 = [v13 constraintEqualToAnchor:v14 constant:15.0];

  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel];
  id v16 = [v15 leadingAnchor];
  id v17 = [v8 leadingAnchor];
  id v39 = [v16 constraintEqualToAnchor:v17];

  id v18 = [v15 trailingAnchor];
  id v19 = [v8 trailingAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  id v21 = [v15 topAnchor];
  id v22 = [v8 bottomAnchor];
  id v51 = [v21 constraintEqualToAnchor:v22 constant:-2.5];

  id v23 = [v15 bottomAnchor];
  id v24 = [v0 bottomAnchor];
  id v25 = [v23 constraintLessThanOrEqualToAnchor:v24 constant:-15.0];

  LODWORD(v26) = 1144750080;
  unint64_t v37 = v25;
  [v25 setPriority:v26];
  LODWORD(v27) = 1148846080;
  [v8 setContentCompressionResistancePriority:1 forAxis:v27];
  LODWORD(v28) = 1148846080;
  [v15 setContentCompressionResistancePriority:1 forAxis:v28];
  id v38 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100764D30;
  *(void *)(v29 + 32) = v49;
  *(void *)(v29 + 40) = v47;
  *(void *)(v29 + 48) = v45;
  *(void *)(v29 + 56) = v43;
  *(void *)(v29 + 64) = v42;
  *(void *)(v29 + 72) = v41;
  *(void *)(v29 + 80) = v40;
  *(void *)(v29 + 88) = v39;
  *(void *)(v29 + 96) = v20;
  *(void *)(v29 + 104) = v51;
  *(void *)(v29 + 112) = v25;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v50 = v49;
  id v48 = v47;
  id v46 = v45;
  id v44 = v43;
  id v30 = v42;
  id v31 = v41;
  id v32 = v40;
  id v33 = v39;
  id v34 = v20;
  id v35 = v51;
  id v36 = v37;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v38 activateConstraints:isa];
}

uint64_t sub_1005AF59C(void *a1)
{
  id v2 = v1;
  v1[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection] = 1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowIndicator;
  type metadata accessor for TrendArrowIndicatorView();
  id v5 = v1;
  *(void *)&v1[v4] = sub_1006D13E4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_titleLabel;
  sub_10007E2D8(0, &qword_100953458);
  *(void *)&v5[v6] = sub_1005CA0D4();
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_valueLabel;
  id v8 = sub_1005CA0D4();

  *(void *)&v5[v7] = v8;
  v5[OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_trendType] = 1;

  id v9 = *(void **)&v5[v7];
  type metadata accessor for TrendListMetricView();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_1005AF6C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendListMetricView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendListMetricView()
{
  return self;
}

void sub_1005AF774(uint64_t a1)
{
}

id sub_1005AF7B0()
{
  id result = (id)*(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection);
  if (result != 1) {
    return sub_10057A828(result);
  }
  return result;
}

uint64_t sub_1005AF7F4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  id v3 = v1;
  sub_1001FAB90((uint64_t)sub_1005AF928, v2);

  return swift_release();
}

uint64_t sub_1005AF8F0()
{
  return swift_deallocObject();
}

void sub_1005AF928()
{
  sub_100579EA0((void *)*(unsigned __int8 *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection), 1);
}

uint64_t sub_1005AF968()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection)
    && *(unsigned char *)(v0 + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection) == 1)
  {
    return 0;
  }
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v1;
}

id sub_1005AFA80(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings] = a2;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for WorkoutOverlayPathRenderer();
  id v6 = [super initWithOverlay:a1];
  swift_unknownObjectRelease();
  return v6;
}

id sub_1005AFB00()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.298039216 green:0.490196078 blue:0.501960784 alpha:0.8];
  qword_100998538 = (uint64_t)result;
  return result;
}

void sub_1005AFC80(CGContext *a1, double (*a2)(double, double), uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v60 = a3;
  unint64_t v73 = a2;
  double v71 = a8;
  v69.size.width = a6;
  v69.size.height = a7;
  v69.origin.y = a5;
  v69.origin.x = a4;
  uint64_t v76 = type metadata accessor for Date();
  unint64_t v10 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  id v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  uint64_t v59 = v8;
  uint64_t v13 = *(void *)(v8 + OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings);
  id v14 = [(id)v13 workout];
  id v15 = [v14 workoutActivityType];

  double v16 = 5.0;
  if (v15 == (id)46) {
    double v16 = 15.0;
  }
  double v66 = v16;
  id v17 = [(id)v13 workout];
  uint64_t v61 = sub_100182704();

  id v18 = [(id)v13 workout];
  id v65 = [v18 workoutActivityType];

  id v19 = [(id)v13 allValidLocations];
  sub_1002E0AE0();
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v20 >> 62) {
    goto LABEL_43;
  }
  uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v21)
  {
    if ((v20 & 0xC000000000000001) != 0)
    {
      id v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v22 = v76;
    }
    else
    {
      uint64_t v22 = v76;
      if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v78 = *(id *)(v20 + 32);
    }
    swift_bridgeObjectRelease();
    id v23 = [(id)v13 inOrderLocationArrays];
    sub_1000AFA94((uint64_t *)&unk_100955E00);
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v58 = *(void *)(v13 + 16);
    if (!v58)
    {
LABEL_37:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v20 = 0;
    uint64_t v64 = 0;
    uint64_t v57 = v13 + 32;
    uint64_t v79 = (void (**)(char *, uint64_t))(v10 + 8);
    double v72 = v71 * v71;
    double v68 = v71 * 0.5;
    uint64_t v56 = v13;
    while (v20 < *(void *)(v13 + 16))
    {
      unint64_t v62 = v20;
      unint64_t v10 = *(void *)(v57 + 8 * v20);
      swift_bridgeObjectRetain();
      id v24 = [v78 timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      Date.timeIntervalSinceReferenceDate.getter();
      double v26 = v25;
      double v27 = *v79;
      (*v79)(v12, v22);
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v28)
        {
LABEL_16:
          unint64_t v74 = v10;
          unint64_t v75 = v10 & 0xC000000000000001;
          uint64_t v13 = 4;
          while (1)
          {
            unint64_t v20 = v13 - 4;
            id v32 = v75 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v10 + 8 * v13);
            id v33 = v32;
            unint64_t v10 = v13 - 3;
            if (__OFADD__(v20, 1)) {
              break;
            }
            id v34 = [v32 timestamp];
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            Date.timeIntervalSinceReferenceDate.getter();
            double v36 = v35;
            v27(v12, v22);
            if (v36 < v26)
            {

              unint64_t v10 = v74;
              goto LABEL_12;
            }
            [v78 coordinate];
            MKMapPoint v37 = MKMapPointForCoordinate(v81);
            [v33 coordinate];
            MKMapPoint v38 = MKMapPointForCoordinate(v82);
            id v39 = v73;
            double v40 = v73(v37.x, v37.y);
            double v42 = v41;
            double v43 = v39(v38.x, v38.y);
            double v77 = v40;
            if (v72 > (v43 - v40) * (v43 - v40) + (v44 - v42) * (v44 - v42))
            {
              uint64_t v22 = v76;
            }
            else
            {
              double v45 = v42;
              double v70 = v44;
              double v46 = v43;
              v83.origin.x = fmin(v37.x, v38.x) - v68;
              v83.origin.y = fmin(v37.y, v38.y) - v68;
              v83.size.width = vabdd_f64(v37.x, v38.x) + v71;
              v83.size.height = vabdd_f64(v37.y, v38.y) + v71;
              BOOL v47 = MKMapRectIntersectsRect(v69, v83);
              uint64_t v22 = v76;
              if (v47)
              {
                [v33 speed];
                id v49 = sub_1005B04B4(v48);
                if (v65 == (id)67 || v65 == (id)61)
                {
                  if (v61)
                  {
                    uint64_t v50 = v61;
                    swift_bridgeObjectRetain();
                    id v51 = [v33 timestamp];
                    static Date._unconditionallyBridgeFromObjectiveC(_:)();

                    uint64_t v63 = &v55;
                    __chkstk_darwin(v52);
                    *(&v55 - 2) = (uint64_t)v12;
                    uint64_t v53 = v64;
                    LOBYTE(v51) = sub_1005CED84((uint64_t (*)(char *))sub_1005B090C, (uint64_t)(&v55 - 4), v50);
                    uint64_t v64 = v53;
                    swift_bridgeObjectRelease();
                    uint64_t v22 = v76;
                    v27(v12, v76);
                    if ((v51 & 1) == 0)
                    {
                      if (qword_10094AEB0 != -1) {
                        swift_once();
                      }
                      id v54 = [(id)qword_100998538 CGColor];

                      id v49 = v54;
                    }
                  }
                }
                sub_1005B0738(v67, v66 < v36 - v26, (CGColor *)v49, v77, v45, v46, v70, v71);
              }
              id v78 = v33;
            }
            id v29 = [v33 timestamp];
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            Date.timeIntervalSinceReferenceDate.getter();
            double v26 = v30;

            v27(v12, v22);
            ++v13;
            BOOL v31 = v10 == v28;
            unint64_t v10 = v74;
            if (v31) {
              goto LABEL_12;
            }
          }
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v28 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v28) {
          goto LABEL_16;
        }
      }
LABEL_12:
      unint64_t v20 = v62 + 1;
      swift_bridgeObjectRelease();
      uint64_t v13 = v56;
      if (v20 == v58) {
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

id sub_1005B04B4(double a1)
{
  NSString v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings);
  [v3 bottomSpeed];
  double v5 = v4;
  [v3 averageSpeed];
  double v7 = v6;
  [v3 topSpeed];
  if (v7 * 0.9 >= a1)
  {
    if (a1 < 0.0 || v7 == 0.0)
    {
LABEL_12:
      id v15 = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.8 blue:0.0 alpha:0.85];
      goto LABEL_15;
    }
  }
  else
  {
    if (a1 < 0.0) {
      goto LABEL_12;
    }
    if (v7 == 0.0 || v7 * 1.1 > a1) {
      goto LABEL_12;
    }
  }
  double v10 = (a1 - v5) / (v8 - v5);
  if (v10 >= 0.5)
  {
    double v16 = v10 + -0.5 + v10 + -0.5;
    double v12 = round(v16 * -179.0 + 255.0);
    double v13 = round(v16 * 13.0 + 204.0);
    double v14 = v16 * 100.0 + 0.0;
  }
  else
  {
    double v11 = v10 + v10;
    double v12 = round(v11 * 0.0 + 255.0);
    double v13 = round(v11 * 145.0 + 59.0);
    double v14 = 48.0 - v11 * 48.0;
  }
  id v15 = [objc_allocWithZone((Class)UIColor) initWithRed:v12 / 255.0 green:v13 / 255.0 blue:round(v14) / 255.0 alpha:0.85];
LABEL_15:
  id v17 = v15;
  id v18 = [v15 CGColor];

  return v18;
}

id sub_1005B06DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutGradientPathRenderer();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutGradientPathRenderer()
{
  return self;
}

void sub_1005B0738(CGContext *a1, char a2, CGColor *a3, double a4, double a5, double a6, double a7, CGFloat a8)
{
  CGMutablePathRef Mutable = CGPathCreateMutable();
  CGMutablePathRef.move(to:transform:)();
  CGMutablePathRef.addLine(to:transform:)();
  if (a2)
  {
    sub_1000AFA94(&qword_10094E770);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10074E640;
    *(void *)(v12 + 32) = 0;
    *(CGFloat *)(v12 + 40) = a8 + a8;
    double v13 = (const CGPath *)CGPathRef.copy(dashingWithPhase:lengths:transform:)();
    swift_bridgeObjectRelease();
    CGContextAddPath(a1, v13);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    id v14 = [self grayColor];
    id v15 = (CGColor *)[v14 CGColor];

    CGContextSetStrokeColorWithColor(a1, v15);
    CGPathDrawingMode v16 = kCGPathStroke;
  }
  else
  {
    double v13 = (const CGPath *)CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)();
    CGContextAddPath(a1, v13);
    CGContextSetFillColorWithColor(a1, a3);
    CGPathDrawingMode v16 = kCGPathFill;
  }
  CGContextDrawPath(a1, v16);
}

uint64_t sub_1005B090C()
{
  return sub_1001B7A34() & 1;
}

void sub_1005B092C(CGContext *a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v66 = a8;
  double v67 = a9;
  v63.size.height = a6;
  double v64 = a7;
  v63.origin.y = a4;
  v63.size.width = a5;
  v63.origin.x = a3;
  uint64_t v72 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  double v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  id v14 = *(void **)(a2 + OBJC_IVAR____TtC10FitnessApp26WorkoutOverlayPathRenderer_locationReadings);
  id v15 = [v14 workout];
  id v16 = [v15 workoutActivityType];

  double v17 = 5.0;
  if (v16 == (id)46) {
    double v17 = 15.0;
  }
  double v61 = v17;
  id v18 = [v14 workout];
  uint64_t v57 = sub_100182704();

  id v19 = [v14 workout];
  id v60 = [v19 workoutActivityType];

  id v20 = [v14 allValidLocations];
  sub_1002E0AE0();
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v21 >> 62) {
    goto LABEL_42;
  }
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    do
    {
      if ((v21 & 0xC000000000000001) != 0)
      {
        id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v22 = *(id *)(v21 + 32);
      }
      id v70 = v22;
      swift_bridgeObjectRelease();
      id v23 = [v14 inOrderLocationArrays];
      sub_1000AFA94((uint64_t *)&unk_100955E00);
      uint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v56 = *(void *)(v24 + 16);
      if (!v56)
      {
LABEL_39:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
      unint64_t v21 = 0;
      id v14 = 0;
      uint64_t v53 = v24 + 32;
      double v71 = (void (**)(char *, uint64_t))(v11 + 8);
      double v65 = v64 * v64;
      double v62 = v64 * 0.5;
      uint64_t v55 = a2;
      id v54 = a1;
      uint64_t v52 = v24;
      while (v21 < *(void *)(v24 + 16))
      {
        unint64_t v58 = v21;
        uint64_t v25 = *(void *)(v53 + 8 * v21);
        swift_bridgeObjectRetain();
        uint64_t v11 = (uint64_t)[v70 timestamp];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        Date.timeIntervalSinceReferenceDate.getter();
        double v27 = v26;
        uint64_t v28 = *v71;
        (*v71)(v13, v72);
        if ((unint64_t)v25 >> 62)
        {
          if (v25 < 0) {
            uint64_t v11 = v25;
          }
          else {
            uint64_t v11 = v25 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain();
          uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v29)
          {
LABEL_15:
            uint64_t v68 = v25;
            unint64_t v69 = v25 & 0xC000000000000001;
            uint64_t v11 = 4;
            while (1)
            {
              unint64_t v21 = v11 - 4;
              id v33 = v69 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v25 + 8 * v11);
              id v34 = v33;
              uint64_t v35 = v11 - 3;
              if (__OFADD__(v21, 1)) {
                break;
              }
              id v36 = [v33 timestamp];
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              Date.timeIntervalSinceReferenceDate.getter();
              double v38 = v37;
              v28(v13, v72);
              if (v38 < v27)
              {

                goto LABEL_11;
              }
              [v70 coordinate];
              MKMapPoint v39 = MKMapPointForCoordinate(v74);
              [v34 coordinate];
              MKMapPoint v40 = MKMapPointForCoordinate(v75);
              double v41 = v39.x - v66;
              double v42 = v39.y - v67;
              double v43 = v40.x - v66;
              double v44 = v40.y - v67;
              if (v65 <= (v40.x - v66 - (v39.x - v66)) * (v40.x - v66 - (v39.x - v66)) + (v44 - v42) * (v44 - v42))
              {
                v76.origin.x = fmin(v39.x, v40.x) - v62;
                v76.origin.y = fmin(v39.y, v40.y) - v62;
                v76.size.width = vabdd_f64(v39.x, v40.x) + v64;
                v76.size.height = vabdd_f64(v39.y, v40.y) + v64;
                if (MKMapRectIntersectsRect(v63, v76))
                {
                  [v34 speed];
                  id v46 = sub_1005B04B4(v45);
                  if ((v60 == (id)67 || v60 == (id)61) && v57)
                  {
                    uint64_t v47 = v57;
                    swift_bridgeObjectRetain();
                    id v48 = [v34 timestamp];
                    static Date._unconditionallyBridgeFromObjectiveC(_:)();

                    uint64_t v59 = &v52;
                    __chkstk_darwin(v49);
                    *(&v52 - 2) = (uint64_t)v13;
                    LOBYTE(v48) = sub_1005CED84((uint64_t (*)(char *))sub_1005B10D0, (uint64_t)(&v52 - 4), v47);
                    swift_bridgeObjectRelease();
                    v28(v13, v72);
                    if (v48)
                    {
                      a2 = v55;
                      a1 = v54;
                    }
                    else
                    {
                      a1 = v54;
                      if (qword_10094AEB0 != -1) {
                        swift_once();
                      }
                      id v50 = [qword_100998538 CGColor:v52];

                      id v46 = v50;
                      a2 = v55;
                    }
                  }
                  sub_1005B0738(a1, v61 < v38 - v27, (CGColor *)v46, v41, v42, v43, v44, v64);
                }
                id v70 = v34;
              }
              id v30 = [v34 timestamp:v52];
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              Date.timeIntervalSinceReferenceDate.getter();
              double v27 = v31;

              v28(v13, v72);
              ++v11;
              BOOL v32 = v35 == v29;
              uint64_t v25 = v68;
              if (v32) {
                goto LABEL_11;
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          uint64_t v29 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v29) {
            goto LABEL_15;
          }
        }
LABEL_11:
        unint64_t v21 = v58 + 1;
        swift_bridgeObjectRelease();
        uint64_t v24 = v52;
        if (v21 == v56) {
          goto LABEL_39;
        }
      }
      __break(1u);
LABEL_42:
      swift_bridgeObjectRetain();
      uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    while (v51);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

uint64_t sub_1005B10D0()
{
  return sub_1005B090C() & 1;
}

void sub_1005B10FC()
{
  id v0 = [self defaultCenter];
  if (qword_10094AEB8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_100998540;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  [v0 postNotificationName:v1 object:Strong];
}

id sub_1005B1318()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendsAvailabilityManager();
  return [super dealloc];
}

ValueMetadata *type metadata accessor for TrendsAvailability()
{
  return &type metadata for TrendsAvailability;
}

unint64_t sub_1005B13AC()
{
  unint64_t result = qword_1009639A8;
  if (!qword_1009639A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009639A8);
  }
  return result;
}

uint64_t sub_1005B1400()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1005B1438()
{
}

uint64_t sub_1005B1440()
{
  uint64_t v1 = *(void *)(sub_1000AFA94(&qword_100955F38) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  uint64_t v3 = type metadata accessor for Notification();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

uint64_t sub_1005B1568()
{
  return swift_deallocObject();
}

uint64_t *sub_1005B15A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
    uint64_t v8 = *(int *)(v6 + 20);
    id v9 = (uint64_t *)((char *)a1 + v8);
    double v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *id v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    swift_retain();
    swift_retain();
    uint64_t v12 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
    double v13 = (char *)v9 + v12;
    id v14 = &v10[v12];
    uint64_t DataType = type metadata accessor for TrainingLoadDataType();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(DataType - 8) + 16))(v13, v14, DataType);
    uint64_t v16 = *(int *)(v6 + 24);
    double v17 = (char *)a1 + v16;
    id v18 = (char *)a2 + v16;
    id v19 = *(id *)v18;
    LOBYTE(v6) = v18[8];
    sub_1001AEDAC(*(id *)v18, v6);
    *(void *)double v17 = v19;
    v17[8] = v6;
  }
  return a1;
}

void sub_1005B1704(uint64_t a1, uint64_t a2)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 8))(a1, ViewModel);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v6 = v5 + *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(DataType - 8) + 8))(v6, DataType);
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  id v9 = *(void **)v8;
  char v10 = *(unsigned char *)(v8 + 8);

  sub_1001AEDC8(v9, v10);
}

uint64_t sub_1005B17EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_retain();
  uint64_t v11 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(DataType - 8) + 16))(v12, v13, DataType);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  id v18 = *(id *)v17;
  LOBYTE(a3) = *(unsigned char *)(v17 + 8);
  sub_1001AEDAC(*(id *)v17, a3);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = a3;
  return a1;
}

uint64_t sub_1005B1900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 24))(a1, a2, ViewModel);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DataType - 8) + 24))(v11, v12, DataType);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  id v17 = *(id *)v16;
  LOBYTE(a3) = *(unsigned char *)(v16 + 8);
  sub_1001AEDAC(*(id *)v16, a3);
  id v18 = *(void **)v15;
  char v19 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = a3;
  sub_1001AEDC8(v18, v19);
  return a1;
}

uint64_t sub_1005B1A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 32))(a1, a2, ViewModel);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(DataType - 8) + 32))(v12, v13, DataType);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  return a1;
}

uint64_t sub_1005B1B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 40))(a1, a2, ViewModel);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_release();
  uint64_t v10 = *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DataType - 8) + 40))(v11, v12, DataType);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  LOBYTE(v16) = *((unsigned char *)v16 + 8);
  id v18 = *(void **)v15;
  char v19 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = (_BYTE)v16;
  sub_1001AEDC8(v18, v19);
  return a1;
}

uint64_t sub_1005B1C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005B1C6C);
}

uint64_t sub_1005B1C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v7 = *(void *)(ViewModel - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = ViewModel;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_1000AFA94(&qword_1009614F0);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
      if (v14 > 1) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1005B1D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005B1D98);
}

uint64_t sub_1005B1D98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v9 = *(void *)(ViewModel - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = ViewModel;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1000AFA94(&qword_1009614F0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LoadTypeScrollView()
{
  uint64_t result = qword_100963A08;
  if (!qword_100963A08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005B1EFC()
{
  type metadata accessor for TrainingLoadViewModel();
  if (v0 <= 0x3F)
  {
    sub_1005B1FCC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1005B1FCC()
{
  if (!qword_100961570)
  {
    type metadata accessor for TrainingLoadDataType();
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100961570);
    }
  }
}

uint64_t sub_1005B2024()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005B2040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v20 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v5 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100963A48);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94(&qword_100963A50);
  uint64_t v12 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Axis.Set.horizontal.getter();
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  sub_1000AFA94(&qword_100963A58);
  sub_1005B4610();
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollIndicatorVisibility.hidden.getter();
  unsigned __int8 v15 = static Axis.Set.vertical.getter();
  unsigned __int8 v16 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v15) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v16) {
    Axis.Set.init(rawValue:)();
  }
  sub_1000A132C(&qword_100963A78, &qword_100963A48);
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v21, v14, v19);
}

uint64_t sub_1005B234C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000AFA94(&qword_100963A70);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0x4024000000000000;
  unsigned char v8[16] = 0;
  uint64_t v9 = sub_1000AFA94(&qword_100963A80);
  sub_1005B2474(a1, a2, (uint64_t)&v8[*(int *)(v9 + 44)]);
  LOBYTE(a2) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_1000AEF2C((uint64_t)v8, a3, &qword_100963A70);
  uint64_t v18 = a3 + *(int *)(sub_1000AFA94(&qword_100963A58) + 36);
  *(unsigned char *)uint64_t v18 = a2;
  *(void *)(v18 + 8) = v11;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v15;
  *(void *)(v18 + 32) = v17;
  *(unsigned char *)(v18 + 40) = 0;
  return sub_10008DB18((uint64_t)v8, &qword_100963A70);
}

uint64_t sub_1005B2474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  TypeScrollSwift::String View = type metadata accessor for LoadTypeScrollView();
  uint64_t v19 = *(void *)(TypeScrollView - 8);
  uint64_t v8 = *(void *)(v19 + 64);
  __chkstk_darwin(TypeScrollView - 8);
  uint64_t v10 = a1 + *(int *)(v9 + 32);
  id v11 = *(id *)v10;
  char v12 = *(unsigned char *)(v10 + 8);
  sub_1001AEDAC(*(id *)v10, v12);
  id v13 = sub_1004E75C0(v11, v12);
  sub_1001AEDC8(v11, v12);
  swift_retain();

  uint64_t ViewModel = dispatch thunk of TrainingLoadViewModelProvider.viewModels.getter();
  swift_release();
  uint64_t v22 = ViewModel;
  swift_getKeyPath();
  sub_1005B5090(a1, (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LoadTypeScrollView);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v4);
  unint64_t v15 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v16 = (v8 + *(unsigned __int8 *)(v5 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1005B4524((uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v15);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17 + v16, (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1000AFA94(&qword_100961B60);
  sub_1000AFA94(&qword_100963A88);
  sub_1000A132C(&qword_100961B68, &qword_100961B60);
  sub_1005B5048(&qword_100961B00, (void (*)(uint64_t))&type metadata accessor for TrainingLoadDataType);
  sub_1005B4980();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1005B278C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v114 = a3;
  uint64_t v131 = a2;
  uint64_t v130 = a4;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v126 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  char v123 = &v89[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v120 = &v89[-v7];
  uint64_t v129 = type metadata accessor for AccessibilityTraits();
  uint64_t v124 = *(void *)(v129 - 8);
  uint64_t v125 = v129 - 8;
  uint64_t v115 = v124;
  __chkstk_darwin(v129 - 8);
  Class v128 = &v89[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v118 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  char v116 = &v89[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v111 = type metadata accessor for ScrollViewProxy();
  uint64_t v134 = *(void *)(v111 - 8);
  uint64_t v112 = *(void *)(v134 + 64);
  __chkstk_darwin(v111);
  uint64_t v109 = &v89[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v133 = *(void *)(ViewModel - 8);
  uint64_t v108 = *(void *)(v133 + 64);
  __chkstk_darwin(ViewModel);
  uint64_t v104 = &v89[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  TypeScrollSwift::String View = type metadata accessor for LoadTypeScrollView();
  uint64_t v13 = *(void *)(TypeScrollView - 8);
  uint64_t v113 = TypeScrollView - 8;
  uint64_t v106 = v13;
  uint64_t v105 = *(void *)(v13 + 64);
  __chkstk_darwin(TypeScrollView - 8);
  uint64_t v103 = &v89[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v101 = sub_1000AFA94(&qword_100963AF8) - 8;
  __chkstk_darwin(v101);
  unint64_t v16 = &v89[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for Font.TextStyle();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v89[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v132 = sub_1000AFA94(&qword_100963AA0);
  __chkstk_darwin(v132);
  uint64_t v22 = &v89[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = sub_1000AFA94(&qword_100963A98);
  uint64_t v110 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v102 = &v89[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v122 = sub_1000AFA94(&qword_100963B00);
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v135 = &v89[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_1000AFA94(&qword_100963A88);
  __chkstk_darwin(v25 - 8);
  uint64_t v119 = &v89[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v95 = static VerticalAlignment.center.getter();
  sub_1005B3568(a1, (uint64_t)&v136);
  uint64_t v94 = v136;
  unint64_t v93 = v137;
  char v27 = v138;
  long long v98 = v139;
  long long v97 = v140;
  uint64_t v96 = v141;
  (*(void (**)(unsigned char *, void, uint64_t))(v18 + 104))(v20, enum case for Font.TextStyle.footnote(_:), v17);
  static Font.Weight.bold.getter();
  uint64_t v92 = static Font.system(_:weight:)();
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t KeyPath = swift_getKeyPath();
  int v90 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  char v147 = 0;
  char v145 = v27;
  char v142 = 0;
  LOBYTE(v18) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  char v44 = v147;
  char v45 = v145;
  LOBYTE(v17) = v142;
  char v148 = 0;
  uint64_t v46 = static Alignment.center.getter();
  uint64_t v48 = v47;
  uint64_t v49 = v131;
  sub_1005B3960((uint64_t)v16);
  id v50 = (uint64_t *)&v16[*(int *)(v101 + 44)];
  *id v50 = v46;
  v50[1] = v48;
  sub_1000AEF2C((uint64_t)v16, (uint64_t)&v22[*(int *)(v132 + 36)], &qword_100963AF8);
  *(void *)uint64_t v22 = v95;
  *((void *)v22 + 1) = 0x4010000000000000;
  v22[16] = v44;
  *(_DWORD *)(v22 + 17) = *(_DWORD *)v146;
  *((_DWORD *)v22 + 5) = *(_DWORD *)&v146[3];
  unint64_t v51 = v93;
  *((void *)v22 + 3) = v94;
  *((void *)v22 + 4) = v51;
  v22[40] = v45;
  *(_DWORD *)(v22 + 41) = *(_DWORD *)v144;
  *((_DWORD *)v22 + 11) = *(_DWORD *)&v144[3];
  long long v52 = v97;
  *((_OWORD *)v22 + 3) = v98;
  *((_OWORD *)v22 + 4) = v52;
  uint64_t v53 = KeyPath;
  *((void *)v22 + 10) = v96;
  *((void *)v22 + 11) = v53;
  *((void *)v22 + 12) = v92;
  v22[104] = v90;
  *((_DWORD *)v22 + 27) = *(_DWORD *)&v143[3];
  *(_DWORD *)(v22 + 105) = *(_DWORD *)v143;
  *((void *)v22 + 14) = v29;
  *((void *)v22 + 15) = v31;
  *((void *)v22 + 16) = v33;
  *((void *)v22 + 17) = v35;
  v22[144] = v17;
  *(_DWORD *)(v22 + 145) = *(_DWORD *)v150;
  *((_DWORD *)v22 + 37) = *(_DWORD *)&v150[3];
  v22[152] = v18;
  *(_DWORD *)(v22 + 153) = *(_DWORD *)v149;
  *((_DWORD *)v22 + 39) = *(_DWORD *)&v149[3];
  *((void *)v22 + 20) = v37;
  *((void *)v22 + 21) = v39;
  *((void *)v22 + 22) = v41;
  *((void *)v22 + 23) = v43;
  v22[192] = v148;
  sub_10008DB18((uint64_t)v16, &qword_100963AF8);
  uint64_t v54 = v49;
  uint64_t v55 = v103;
  sub_1005B5090(v54, (uint64_t)v103, (uint64_t (*)(void))type metadata accessor for LoadTypeScrollView);
  uint64_t v56 = v133;
  uint64_t v57 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v133 + 16);
  unint64_t v58 = v104;
  uint64_t v99 = a1;
  uint64_t v59 = ViewModel;
  v57(v104, a1, ViewModel);
  uint64_t v60 = v134;
  double v61 = v109;
  uint64_t v62 = v111;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v134 + 16))(v109, v114, v111);
  unint64_t v63 = (*(unsigned __int8 *)(v106 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
  unint64_t v64 = (v105 + *(unsigned __int8 *)(v56 + 80) + v63) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  unint64_t v65 = (v108 + *(unsigned __int8 *)(v60 + 80) + v64) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v66 = swift_allocObject();
  sub_1005B4524((uint64_t)v55, v66 + v63);
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v133 + 32))(v66 + v64, v58, v59);
  unint64_t v67 = v66 + v65;
  uint64_t v68 = v115;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v134 + 32))(v67, v61, v62);
  unint64_t v69 = sub_1005B4A9C();
  id v70 = v102;
  uint64_t v71 = v132;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)v22, &qword_100963AA0);
  uint64_t v72 = v116;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v136 = v71;
  unint64_t v137 = v69;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v74 = v100;
  View.accessibilityElement(children:)();
  (*(void (**)(unsigned char *, uint64_t))(v117 + 8))(v72, v118);
  uint64_t v75 = v74;
  (*(void (**)(unsigned char *, uint64_t))(v110 + 8))(v70, v74);
  MKMapRect v76 = v120;
  TrainingLoadViewModel.dataType.getter();
  sub_1000AFA94(&qword_1009614F0);
  double v77 = v123;
  Binding.wrappedValue.getter();
  id v78 = v77;
  LOBYTE(v77) = static TrainingLoadDataType.== infix(_:_:)();
  uint64_t v79 = *(void (**)(unsigned char *, uint64_t))(v126 + 8);
  uint64_t v80 = v78;
  uint64_t v81 = DataType;
  v79(v80, DataType);
  v79(v76, v81);
  sub_1000AFA94(&qword_100963B08);
  if (v77)
  {
    uint64_t v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_10074E640;
    static AccessibilityTraits.isSelected.getter();
  }
  else
  {
    uint64_t v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_1007509E0;
  }
  static AccessibilityTraits.isButton.getter();
  uint64_t v136 = v82;
  sub_1005B5048((unint64_t *)&qword_100963B10, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
  sub_1000AFA94(&qword_100963B18);
  sub_1000A132C(&qword_100963B20, &qword_100963B18);
  MKMapRect v83 = v128;
  uint64_t v84 = v129;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v136 = v75;
  unint64_t v137 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v85 = (uint64_t)v119;
  uint64_t v86 = v122;
  long long v87 = v135;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v68 + 8))(v83, v84);
  (*(void (**)(unsigned char *, uint64_t))(v121 + 8))(v87, v86);
  return sub_1000AEEC8(v85, v130, &qword_100963A88);
}

uint64_t sub_1005B3568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_100963B50);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v8 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v49 - v12;
  Swift::String View = TrainingLoadViewModel.localizedName()();
  unint64_t v49 = sub_1000A06D0();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  int v51 = v17;
  uint64_t v50 = v18;
  uint64_t v52 = a1;
  TrainingLoadViewModel.dataType.getter();
  type metadata accessor for LoadTypeScrollView();
  sub_1000AFA94(&qword_1009614F0);
  Binding.wrappedValue.getter();
  LOBYTE(a1) = static TrainingLoadDataType.== infix(_:_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v10, DataType);
  v19(v13, DataType);
  if (a1)
  {
    uint64_t v20 = static Color.white.getter();
  }
  else
  {
    id v21 = [self secondaryLabelColor];
    uint64_t v20 = Color.init(_:)();
  }
  View._uint64_t countAndFlagsBits = v20;
  char v22 = v51 & 1;
  uint64_t v23 = Text.foregroundStyle<A>(_:)();
  uint64_t v25 = v24;
  int v51 = v26;
  uint64_t v28 = v27;
  sub_1000A06C0(v14, v16, v22);
  swift_release();
  swift_bridgeObjectRelease();
  TrainingLoadViewModel.loadBandToday()();
  uint64_t Band = type metadata accessor for TrainingLoadBand();
  int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(Band - 8) + 48))(v6, 1, Band);
  sub_10008DB18((uint64_t)v6, &qword_100963B50);
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  if (v30 != 1)
  {
    Swift::String View = TrainingLoadViewModel.loadPercentageToday()();
    uint64_t v35 = Text.init<A>(_:)();
    unint64_t v49 = v25;
    uint64_t v50 = v28;
    uint64_t v37 = v36;
    char v39 = v38 & 1;
    uint64_t v40 = TrainingLoadViewModel.loadBandTodayColor()();
    uint64_t v52 = v23;
    View._uint64_t countAndFlagsBits = v40;
    uint64_t v31 = Text.foregroundStyle<A>(_:)();
    uint64_t v32 = v41;
    uint64_t v34 = v42;
    uint64_t v33 = v43 & 1;
    uint64_t v44 = v37;
    char v45 = v39;
    uint64_t v25 = v49;
    uint64_t v28 = v50;
    sub_1000A06C0(v35, v44, v45);
    uint64_t v23 = v52;
    swift_release();
    swift_bridgeObjectRelease();
  }
  char v46 = v51;
  char v47 = v51 & 1;
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v25;
  *(unsigned char *)(a2 + 16) = v46 & 1;
  *(void *)(a2 + 24) = v28;
  *(void *)(a2 + 32) = v31;
  *(void *)(a2 + 40) = v32;
  *(void *)(a2 + 48) = v33;
  *(void *)(a2 + 56) = v34;
  sub_1000A1750(v23, v25, v46 & 1);
  swift_bridgeObjectRetain();
  sub_1000A17A4(v31, v32, v33, v34);
  sub_1000A1760(v31, v32, v33, v34);
  sub_1000A06C0(v23, v25, v47);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005B3960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v1 = type metadata accessor for RoundedCornerStyle();
  uint64_t v65 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v62 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_100963B28);
  __chkstk_darwin(v71);
  uint64_t v63 = (uint64_t)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v64 = (uint64_t)&v58 - v5;
  uint64_t v67 = sub_1000AFA94(&qword_100963B30);
  __chkstk_darwin(v67);
  uint64_t v68 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Capsule();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000AFA94(&qword_10095AFB0);
  __chkstk_darwin(v70);
  uint64_t v61 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v58 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v58 - v15;
  __chkstk_darwin(v17);
  uint64_t v66 = (uint64_t)&v58 - v18;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v20 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  char v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v58 - v24;
  TrainingLoadViewModel.dataType.getter();
  type metadata accessor for LoadTypeScrollView();
  sub_1000AFA94(&qword_1009614F0);
  Binding.wrappedValue.getter();
  char v26 = static TrainingLoadDataType.== infix(_:_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  v27(v22, DataType);
  v27(v25, DataType);
  uint64_t v28 = v65;
  uint64_t v29 = *(void (**)(char *, void, uint64_t))(v65 + 104);
  v29(v9, enum case for RoundedCornerStyle.continuous(_:), v1);
  if (v26)
  {
    id v30 = [self tertiarySystemBackgroundColor];
    uint64_t v31 = Color.init(_:)();
    sub_1005B5090((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for Capsule);
    uint64_t v32 = v70;
    *(void *)&v16[*(int *)(v70 + 52)] = v31;
    *(_WORD *)&v16[*(int *)(v32 + 56)] = 256;
    sub_1003DC378((uint64_t)v9);
    uint64_t v33 = &qword_10095AFB0;
    uint64_t v34 = v66;
    sub_1000AEEC8((uint64_t)v16, v66, &qword_10095AFB0);
    sub_1000AEF2C(v34, v68, &qword_10095AFB0);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100963B40, &qword_10095AFB0);
    sub_1000A132C(&qword_100963B48, &qword_100963B28);
    _ConditionalContent<>.init(storage:)();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v36 = static Color.clear.getter();
    sub_1005B5090((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for Capsule);
    uint64_t v37 = v70;
    *(void *)&v13[*(int *)(v70 + 52)] = v36;
    *(_WORD *)&v13[*(int *)(v37 + 56)] = 256;
    sub_1003DC378((uint64_t)v9);
    id v38 = [self tertiarySystemBackgroundColor];
    uint64_t v59 = Color.init(_:)();
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    double v39 = v72;
    uint64_t v40 = v74;
    uint64_t v60 = v75;
    uint64_t v41 = v76;
    uint64_t v42 = v61;
    sub_1000AEF2C((uint64_t)v13, v61, &qword_10095AFB0);
    uint64_t v43 = v63;
    sub_1005B5090((uint64_t)v13, v63, (uint64_t (*)(void))&type metadata accessor for Capsule);
    uint64_t v44 = v73;
    char v45 = v62;
    v29(v62, enum case for RoundedCornerStyle.circular(_:), v1);
    LOBYTE(v36) = static RoundedCornerStyle.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v45, v1);
    unint64_t v46 = COERCE_UNSIGNED_INT64(v72 * 0.5) & 0xFFFFFFFFFFFFFFFELL | ((v36 & 1) == 0);
    uint64_t v47 = v66;
    sub_1000AEF2C(v42, v66, &qword_10095AFB0);
    uint64_t v48 = v59;
    swift_retain();
    uint64_t v49 = static Alignment.center.getter();
    uint64_t v51 = v50;
    sub_10008DB18(v42, &qword_10095AFB0);
    uint64_t v52 = v48;
    swift_release();
    uint64_t v53 = v43 + *(int *)(v71 + 68);
    uint64_t v54 = v53 + *(int *)(sub_1000AFA94(&qword_100963B38) + 36);
    sub_1000AEEC8(v47, v54, &qword_10095AFB0);
    uint64_t v55 = (uint64_t *)(v54 + *(int *)(sub_1000AFA94(&qword_10095AF70) + 36));
    *uint64_t v55 = v49;
    v55[1] = v51;
    *(void *)uint64_t v53 = v46;
    *(double *)(v53 + 8) = v39;
    *(void *)(v53 + 16) = v44;
    *(void *)(v53 + 24) = v40;
    *(void *)(v53 + 32) = v60;
    *(void *)(v53 + 40) = v41;
    *(void *)(v53 + 48) = v52;
    *(_WORD *)(v53 + 56) = 256;
    sub_10008DB18((uint64_t)v13, &qword_10095AFB0);
    uint64_t v33 = &qword_100963B28;
    uint64_t v56 = v64;
    sub_1000AEEC8(v43, v64, &qword_100963B28);
    sub_1000AEF2C(v56, v68, &qword_100963B28);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C(&qword_100963B40, &qword_10095AFB0);
    sub_1000A132C(&qword_100963B48, &qword_100963B28);
    _ConditionalContent<>.init(storage:)();
    uint64_t v35 = v56;
  }
  return sub_10008DB18(v35, v33);
}