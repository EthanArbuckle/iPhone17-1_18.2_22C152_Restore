uint64_t sub_1005B410C()
{
  uint64_t DataType;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  DataType = type metadata accessor for TrainingLoadDataType();
  v1 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - v5;
  TrainingLoadViewModel.dataType.getter();
  type metadata accessor for LoadTypeScrollView();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, DataType);
  sub_1000AFA94(&qword_1009614F0);
  Binding.wrappedValue.setter();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, DataType);
  TrainingLoadViewModel.dataType.getter();
  sub_1005B5048(&qword_100961B00, (void (*)(uint64_t))&type metadata accessor for TrainingLoadDataType);
  ScrollViewProxy.scrollTo<A>(_:anchor:)();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, DataType);
}

uint64_t sub_1005B42C8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_1005B5090(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LoadTypeScrollView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_1005B4524((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_1005B4588;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_1005B43C8()
{
  v1 = (int *)(type metadata accessor for LoadTypeScrollView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 8))(v2, ViewModel);
  uint64_t v4 = v2 + v1[7];
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(DataType - 8) + 8))(v5, DataType);
  sub_1001AEDC8(*(id *)(v2 + v1[8]), *(unsigned char *)(v2 + v1[8] + 8));

  return swift_deallocObject();
}

uint64_t sub_1005B4524(uint64_t a1, uint64_t a2)
{
  uint64_t TypeScrollView = type metadata accessor for LoadTypeScrollView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(TypeScrollView - 8) + 32))(a2, a1, TypeScrollView);
  return a2;
}

uint64_t sub_1005B4588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LoadTypeScrollView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1005B2040(a1, v6, a2);
}

uint64_t sub_1005B4608@<X0>(uint64_t a1@<X8>)
{
  return sub_1005B234C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1005B4610()
{
  unint64_t result = qword_100963A60;
  if (!qword_100963A60)
  {
    sub_1000A1370(&qword_100963A58);
    sub_1000A132C(&qword_100963A68, &qword_100963A70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963A60);
  }
  return result;
}

uint64_t sub_1005B46B4()
{
  uint64_t v1 = (int *)(type metadata accessor for LoadTypeScrollView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v2;
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 8))(v7, ViewModel);
  uint64_t v9 = v7 + v1[7];
  swift_release();
  swift_release();
  uint64_t v10 = v9 + *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(DataType - 8) + 8))(v10, DataType);
  sub_1001AEDC8(*(id *)(v7 + v1[8]), *(unsigned char *)(v7 + v1[8] + 8));
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);

  return swift_deallocObject();
}

uint64_t sub_1005B489C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LoadTypeScrollView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_1005B278C(a1, v2 + v6, v9, a2);
}

unint64_t sub_1005B4980()
{
  unint64_t result = qword_100963A90;
  if (!qword_100963A90)
  {
    sub_1000A1370(&qword_100963A88);
    sub_1000A1370(&qword_100963A98);
    sub_1000A1370(&qword_100963AA0);
    sub_1005B4A9C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1005B5048((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963A90);
  }
  return result;
}

unint64_t sub_1005B4A9C()
{
  unint64_t result = qword_100963AA8;
  if (!qword_100963AA8)
  {
    sub_1000A1370(&qword_100963AA0);
    sub_1005B4B60(&qword_100963AB0, &qword_100963AB8, (void (*)(void))sub_1005B4BE0);
    sub_1000A132C(&qword_100963AF0, &qword_100963AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963AA8);
  }
  return result;
}

uint64_t sub_1005B4B60(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005B4BE0()
{
  return sub_1005B4B60(&qword_100963AC0, &qword_100963AC8, (void (*)(void))sub_1005B4C08);
}

unint64_t sub_1005B4C08()
{
  unint64_t result = qword_100963AD0;
  if (!qword_100963AD0)
  {
    sub_1000A1370(&qword_100963AD8);
    sub_1000A132C(&qword_100963AE0, &qword_100963AE8);
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963AD0);
  }
  return result;
}

uint64_t sub_1005B4CD4()
{
  uint64_t v1 = (int *)(type metadata accessor for LoadTypeScrollView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v5 = *(void *)(ViewModel - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v16 = type metadata accessor for ScrollViewProxy();
  uint64_t v8 = *(void *)(v16 - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v0 + v2;
  v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v11(v10, ViewModel);
  uint64_t v12 = v10 + v1[7];
  swift_release();
  swift_release();
  uint64_t v13 = v12 + *(int *)(sub_1000AFA94(&qword_1009614F0) + 32);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(DataType - 8) + 8))(v13, DataType);
  sub_1001AEDC8(*(id *)(v10 + v1[8]), *(unsigned char *)(v10 + v1[8] + 8));
  v11(v0 + v6, ViewModel);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v16);

  return swift_deallocObject();
}

uint64_t sub_1005B4F20()
{
  type metadata accessor for LoadTypeScrollView();
  type metadata accessor for TrainingLoadViewModel();
  type metadata accessor for ScrollViewProxy();

  return sub_1005B410C();
}

uint64_t sub_1005B5048(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005B5090(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005B50F8()
{
  return sub_1000A132C(&qword_100963B58, &qword_100963B60);
}

uint64_t sub_1005B5134@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v39 = a4;
  id v40 = a1;
  uint64_t v38 = type metadata accessor for NavigationSource();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  v35 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NavigationAnnotation();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  __chkstk_darwin(v6);
  v32 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NavigationPriority();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  v29 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v10 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NavigationIntent();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for NavigationResource();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (uint64_t *)((char *)&v27 - v22);
  void *v23 = v40;
  v23[1] = a2;
  (*(void (**)(char *, void, uint64_t))(v18 + 104))((char *)&v27 - v22, enum case for NavigationResource.tipsGallery(_:), v17);
  (*(void (**)(char *, void *, uint64_t))(v18 + 16))(v21, v23, v17);
  *uint64_t v16 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v14 + 104))(v16, enum case for NavigationIntent.push(_:), v13);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for NavigationRoutingBehavior.takeover(_:), v28);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for NavigationPriority.takeover(_:), v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v37, v34);
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for NavigationSource.default(_:), v38);
  id v24 = a2;
  id v25 = v40;
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
  return (*(uint64_t (**)(void *, uint64_t))(v18 + 8))(v23, v17);
}

uint64_t *sub_1005B55CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (void *)a2[2];
    a1[2] = (uint64_t)v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for MetricPlatterType();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    id v14 = v8;
    v13(v10, v11, v12);
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    id v18 = v17;
  }
  return v4;
}

void sub_1005B56E8(uint64_t a1, uint64_t a2)
{
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for MetricPlatterType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 28));
}

void *sub_1005B577C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for MetricPlatterType();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = *(void **)((char *)a2 + v14);
  *(void *)((char *)a1 + v14) = v16;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  id v17 = v16;
  return a1;
}

void *sub_1005B5848(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for MetricPlatterType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void **)((char *)a2 + v13);
  uint64_t v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1005B5924(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for MetricPlatterType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  return a1;
}

void *sub_1005B59CC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for MetricPlatterType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);

  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1005B5A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005B5AA4);
}

uint64_t sub_1005B5AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MetricPlatterType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005B5B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005B5B68);
}

uint64_t sub_1005B5B68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MetricPlatterType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MirrorActivityRingsPlatterView()
{
  uint64_t result = qword_100963BC0;
  if (!qword_100963BC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005B5C5C()
{
  uint64_t result = type metadata accessor for MetricPlatterType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1005B5D10()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1005B5D2C(uint64_t a1@<X0>, void *a2@<X8>)
{
  v97 = a2;
  uint64_t v112 = type metadata accessor for ActivityRing();
  uint64_t v123 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v107 = (char *)&v86 - v5;
  uint64_t v113 = type metadata accessor for RingDetailView();
  uint64_t v124 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  v108 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1000AFA94(&qword_100963C10);
  uint64_t v125 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  v93 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1000AFA94(&qword_100963C18);
  v126 = *(void **)(v115 - 8);
  __chkstk_darwin(v115);
  v96 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v116 = (char *)&v86 - v10;
  __chkstk_darwin(v11);
  v122 = (char *)&v86 - v12;
  __chkstk_darwin(v13);
  v111 = (char *)&v86 - v14;
  uint64_t v106 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v128 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  v118 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for WorkoutViewStyle();
  uint64_t v127 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  v99 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ActivityMoveRing();
  __chkstk_darwin(v17 - 8);
  uint64_t v18 = type metadata accessor for MoveRingDetailView();
  v101 = *(void (***)(char *, uint64_t))(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t OpaqueTypeConformance2 = sub_1000AFA94(&qword_100963C20);
  v90 = *(void (***)(char *, uint64_t))(OpaqueTypeConformance2 - 8);
  __chkstk_darwin(OpaqueTypeConformance2);
  uint64_t v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000AFA94(&qword_100963C28);
  uint64_t v120 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  v117 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v119 = (char *)&v86 - v25;
  uint64_t v95 = type metadata accessor for ActivityRings();
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v27 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v28 = (void *)ActivitySummaryMetricsPublisher.activitySummary.getter();
  swift_release();
  v91 = v28;
  HKActivitySummary.activityRings()();
  swift_retain();
  char v29 = ActivitySummaryMetricsPublisher.isWheelchairUser.getter();
  swift_release();
  uint64_t v30 = *(void *)(a1 + *(int *)(type metadata accessor for MirrorActivityRingsPlatterView() + 32));
  id v92 = v28;
  ActivityRings.move.getter();
  id v31 = *(id *)(a1 + 16);
  int v121 = v29 & 1;
  MoveRingDetailView.init(activityRing:isWheelchairUser:formattingManager:)();
  unsigned int v105 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  uint64_t v32 = v127;
  uint64_t v33 = *(void (**)(void))(v127 + 104);
  uint64_t v103 = v127 + 104;
  v104 = (void (*)(char *, void, uint64_t))v33;
  uint64_t v34 = v99;
  uint64_t v35 = v100;
  v33(v99);
  uint64_t v36 = sub_1005B6C20(&qword_100963C30, (void (*)(uint64_t))&type metadata accessor for MoveRingDetailView);
  View.workoutViewStyle(_:)();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v127 = v32 + 8;
  v102 = v37;
  uint64_t v38 = v35;
  v37(v34, v35);
  v101[1](v20, v18);
  uint64_t v39 = v118;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v129 = v18;
  uint64_t v130 = v36;
  swift_getOpaqueTypeConformance2();
  id v40 = v117;
  uint64_t v41 = OpaqueTypeConformance2;
  View.accessibilityElement(children:)();
  v42 = *(void (***)(char *, uint64_t))(v128 + 8);
  v128 += 8;
  v101 = v42;
  uint64_t v43 = v106;
  ((void (*)(char *, uint64_t))v42)(v39, v106);
  v90[1](v22, v41);
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v40, v109);
  v44 = v107;
  v98 = v27;
  ActivityRings.exercise.getter();
  ActivityRing.value.getter();
  uint64_t v45 = v123 + 8;
  v46 = *(void (**)(char *, uint64_t))(v123 + 8);
  uint64_t v47 = v112;
  v46(v44, v112);
  uint64_t v123 = v45;
  v48 = v110;
  ActivityRings.exercise.getter();
  ActivityRing.goal.getter();
  v46(v48, v47);
  v49 = v108;
  RingDetailView.init(ringType:value:goal:isWheelchairUser:)();
  v50 = v99;
  v104(v99, v105, v38);
  uint64_t v51 = sub_1005B6C20(&qword_100963C38, (void (*)(uint64_t))&type metadata accessor for RingDetailView);
  v52 = v93;
  uint64_t v53 = v113;
  uint64_t v54 = v51;
  uint64_t v86 = v51;
  View.workoutViewStyle(_:)();
  v102(v50, v38);
  v55 = *(void (***)(char *, uint64_t))(v124 + 8);
  v124 += 8;
  v90 = v55;
  ((void (*)(char *, uint64_t))v55)(v49, v53);
  v56 = v118;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v129 = v53;
  uint64_t v130 = v54;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v57 = v122;
  uint64_t v58 = v114;
  View.accessibilityElement(children:)();
  ((void (*)(char *, uint64_t))v101)(v56, v43);
  v59 = *(void (**)(char *, uint64_t))(v125 + 8);
  v125 += 8;
  v88 = v59;
  v59(v52, v58);
  v87 = (void (*)(char *, char *, uint64_t))v126[4];
  v60 = v111;
  v87(v111, v57, v115);
  v61 = v107;
  ActivityRings.stand.getter();
  ActivityRing.value.getter();
  v62 = v61;
  uint64_t v63 = v112;
  v46(v62, v112);
  v64 = v110;
  ActivityRings.stand.getter();
  ActivityRing.goal.getter();
  v46(v64, v63);
  v65 = v108;
  RingDetailView.init(ringType:value:goal:isWheelchairUser:)();
  uint64_t v66 = v100;
  v104(v50, v105, v100);
  uint64_t v67 = v113;
  View.workoutViewStyle(_:)();
  v102(v50, v66);
  ((void (*)(char *, uint64_t))v90)(v65, v67);
  v68 = v118;
  static AccessibilityChildBehavior.combine.getter();
  v69 = v116;
  uint64_t v70 = v114;
  View.accessibilityElement(children:)();
  ((void (*)(char *, uint64_t))v101)(v68, v106);
  v88(v52, v70);
  v71 = v122;
  uint64_t v72 = v115;
  v87(v122, v69, v115);
  v73 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
  v74 = v117;
  uint64_t v75 = v109;
  v73(v117, v119, v109);
  v76 = (void (*)(char *, char *, uint64_t))v126[2];
  v76(v69, v60, v72);
  v77 = v96;
  uint64_t v78 = v72;
  v76(v96, v71, v72);
  v79 = v97;
  void *v97 = v91;
  v79[1] = v30;
  *((_WORD *)v79 + 8) = 256;
  *((unsigned char *)v79 + 18) = v121;
  v80 = (char *)v79;
  v81 = (int *)sub_1000AFA94(&qword_100963C40);
  v73(&v80[v81[12]], v74, v75);
  v82 = v116;
  v76(&v80[v81[16]], v116, v78);
  v76(&v80[v81[20]], v77, v78);
  v83 = (void (*)(char *, uint64_t))v126[1];
  id v84 = v92;
  v83(v122, v78);
  v83(v111, v78);
  v85 = *(void (**)(char *, uint64_t))(v120 + 8);
  v85(v119, v75);

  (*(void (**)(char *, uint64_t))(v94 + 8))(v98, v95);
  v83(v77, v78);
  v83(v82, v78);
  v85(v117, v75);
}

void sub_1005B6BE0(unsigned char *a1@<X8>)
{
  *a1 = 0;
  uint64_t v3 = sub_1000AFA94(&qword_100963C08);
  sub_1005B5D2C(v1, &a1[*(int *)(v3 + 44)]);
}

uint64_t sub_1005B6C20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005B6C6C()
{
  unint64_t result = qword_100963C48;
  if (!qword_100963C48)
  {
    sub_1000A1370(&qword_100963C08);
    sub_1000A132C(&qword_10095BBB8, &qword_10095BBC0);
    sub_1000A132C(&qword_100963C50, &qword_100963C58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963C48);
  }
  return result;
}

id sub_1005B6D30(void *a1, double a2)
{
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100751040;
  *(void *)(v4 + 32) = CNContactThumbnailImageDataKey;
  unint64_t v31 = v4;
  specialized Array._endMutation()();
  uint64_t v5 = CNContactThumbnailImageDataKey;
  if ([a1 isMe])
  {
    if (qword_10094AEC0 != -1) {
      swift_once();
    }
    uint64_t v6 = (void *)qword_100963C60;
    swift_bridgeObjectRetain();
    if (v31 >> 62)
    {
      sub_1000AFA94((uint64_t *)&unk_100955C00);
      _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    swift_bridgeObjectRelease();
    sub_1000AFA94((uint64_t *)&unk_100955C00);
    v7.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unint64_t v31 = 0;
    id v8 = [v6 _ios_meContactWithKeysToFetch:v7.super.isa error:&v31];
LABEL_14:

    if (v8)
    {
      id v13 = (id)v31;
      id v14 = sub_1005B75E8(v8, a2);
    }
    else
    {
      id v15 = (id)v31;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      uint64_t v17 = (void *)HKLogActivity;
      os_log_type_t v18 = v16;
      if (os_log_type_enabled(HKLogActivity, v16))
      {
        id v19 = a1;
        swift_errorRetain();
        id v20 = v19;
        swift_errorRetain();
        log = v17;
        uint64_t v21 = swift_slowAlloc();
        unint64_t v31 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315650;
        uint64_t v22 = _typeName(_:qualified:)();
        sub_10008F1F4(v22, v23, (uint64_t *)&v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2080;
        unsigned int v24 = [v20 isMe];
        BOOL v25 = v24 == 0;
        if (v24) {
          uint64_t v26 = 2123117;
        }
        else {
          uint64_t v26 = 0;
        }
        if (v25) {
          unint64_t v27 = 0xE000000000000000;
        }
        else {
          unint64_t v27 = 0xE300000000000000;
        }
        sub_10008F1F4(v26, v27, (uint64_t *)&v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 22) = 2080;
        swift_getErrorValue();
        uint64_t v28 = Error.localizedDescription.getter();
        sub_10008F1F4(v28, v29, (uint64_t *)&v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v18, "%s failed to fetch %scontact: %s", (uint8_t *)v21, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      id v14 = sub_1005B7468(a2);
      swift_errorRelease();
    }
    return v14;
  }
  id result = [a1 contact];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  id v11 = [result linkedContactStoreIdentifier];

  if (v11)
  {
    if (qword_10094AEC0 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_100963C60;
    swift_bridgeObjectRetain();
    if (v31 >> 62)
    {
      sub_1000AFA94((uint64_t *)&unk_100955C00);
      _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    swift_bridgeObjectRelease();
    sub_1000AFA94((uint64_t *)&unk_100955C00);
    v7.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unint64_t v31 = 0;
    id v8 = [v12 unifiedContactWithIdentifier:v11 keysToFetch:v7.super.isa error:&v31];

    goto LABEL_14;
  }
  swift_bridgeObjectRelease();

  return sub_1005B7468(a2);
}

id sub_1005B72CC()
{
  id result = [objc_allocWithZone((Class)CNContactStore) init];
  qword_100963C60 = (uint64_t)result;
  return result;
}

void sub_1005B7300()
{
  id v0 = [self defaultSettings];
  id v1 = [objc_allocWithZone((Class)CNAvatarImageRenderer) initWithSettings:v0];

  qword_100963C68 = (uint64_t)v1;
}

id sub_1005B740C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingAvatarProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivitySharingAvatarProvider()
{
  return self;
}

id sub_1005B7468(double a1)
{
  uint64_t IsRightToLeft = FIUILocaleIsRightToLeft();
  uint64_t v3 = self;
  id v4 = [self mainScreen];
  [v4 scale];
  double v6 = v5;

  id v7 = [v3 scopeWithPointSize:IsRightToLeft scale:0 rightToLeft:a1 style:a1 v6];
  if (qword_10094AEC8 != -1) {
    swift_once();
  }
  id v8 = [(id)qword_100963C68 placeholderImageProvider];
  [v7 pointSize];
  double v10 = v9;
  double v12 = v11;
  [v7 scale];
  id v14 = [v8 imageForSize:[v7 avatarViewStyle] scale:v10 style:v12 v13];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v14;
}

id sub_1005B75E8(void *a1, double a2)
{
  uint64_t IsRightToLeft = FIUILocaleIsRightToLeft();
  double v5 = self;
  id v6 = [self mainScreen];
  [v6 scale];
  double v8 = v7;

  id v9 = [v5 scopeWithPointSize:IsRightToLeft scale:0 rightToLeft:a2 style:a2];
  if (qword_10094AEC8 != -1) {
    swift_once();
  }
  double v10 = (void *)qword_100963C68;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100751040;
  *(void *)(v11 + 32) = a1;
  specialized Array._endMutation()();
  sub_1005B7778();
  id v12 = a1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v10 avatarImageForContacts:isa scope:v9];
  swift_unknownObjectRelease();

  return v14;
}

unint64_t sub_1005B7778()
{
  unint64_t result = qword_100955C20;
  if (!qword_100955C20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100955C20);
  }
  return result;
}

uint64_t sub_1005B77B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005B77CC);
}

uint64_t sub_1005B77CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1005B7838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005B784C);
}

uint64_t sub_1005B784C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void *sub_1005B78BC()
{
  sub_1000AFA94(&qword_1009613D8);
  type metadata accessor for Tips.Action();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1007509E0;
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 localizedStringForKey:v2 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000A06D0();
  Tips.Action.init<A>(id:title:perform:)();
  uint64_t v4 = sub_10004F39C(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_1005B7AA4()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1005B7B04()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1005B7B64()
{
  return Image.init(_internalSystemName:)();
}

void *sub_1005B7B80()
{
  return sub_1005B78BC();
}

uint64_t sub_1005B7B98@<X0>(uint64_t *a1@<X8>)
{
  sub_1000E6F84(&qword_10095F6B0);
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1005B7BF4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v8 = *(int *)(a3 + 36);
    id v9 = (void *)(a1 + v8);
    double v10 = (uint64_t *)((char *)a2 + v8);
    *(void *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *id v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005B7D54(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for LayoutDirection();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1005B7E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005B7F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (void *)(a1 + v7);
    id v9 = (void *)(a2 + v7);
    sub_1005B8070(a1 + v7);
    sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005B8070(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100968CD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005B80D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v8 = sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1005B81C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_1005B8070(a1 + v7);
    uint64_t v10 = sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005B8300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005B8314);
}

uint64_t sub_1005B8314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94(&qword_100961500);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005B83C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005B83DC);
}

uint64_t sub_1005B83DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000AFA94(&qword_100961500);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SlidingGradientText()
{
  uint64_t result = qword_100963DE0;
  if (!qword_100963DE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005B84D4()
{
  sub_1005B8590();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1005B8590()
{
  if (!qword_100961580)
  {
    type metadata accessor for LayoutDirection();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100961580);
    }
  }
}

uint64_t sub_1005B85E8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1005B8604()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutDirection();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - v7;
  type metadata accessor for SlidingGradientText();
  sub_1004E7AB8((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LayoutDirection.leftToRight(_:), v2);
  char v9 = static LayoutDirection.== infix(_:_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  uint64_t v11 = *(void *)(v1 + 64);
  if (v9)
  {
    char v14 = *(unsigned char *)(v1 + 56);
    uint64_t v15 = v11;
    sub_1000AFA94(&qword_10094DEE0);
    State.wrappedValue.getter();
    if (v16 == 1) {
      static UnitPoint.trailing.getter();
    }
    else {
      return -0.5;
    }
  }
  else
  {
    char v14 = *(unsigned char *)(v1 + 56);
    uint64_t v15 = v11;
    sub_1000AFA94(&qword_10094DEE0);
    State.wrappedValue.getter();
    if (v16 == 1) {
      static UnitPoint.leading.getter();
    }
    else {
      return 1.5;
    }
  }
  return result;
}

uint64_t sub_1005B87E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutDirection();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - v7;
  type metadata accessor for SlidingGradientText();
  sub_1004E7AB8((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LayoutDirection.leftToRight(_:), v2);
  char v9 = static LayoutDirection.== infix(_:_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  uint64_t v11 = *(void *)(v1 + 64);
  if (v9)
  {
    char v14 = *(unsigned char *)(v1 + 56);
    uint64_t v15 = v11;
    sub_1000AFA94(&qword_10094DEE0);
    uint64_t result = State.wrappedValue.getter();
    if ((v16 & 1) == 0) {
      return static UnitPoint.leading.getter();
    }
  }
  else
  {
    char v14 = *(unsigned char *)(v1 + 56);
    uint64_t v15 = v11;
    sub_1000AFA94(&qword_10094DEE0);
    uint64_t result = State.wrappedValue.getter();
    if ((v16 & 1) == 0) {
      return static UnitPoint.trailing.getter();
    }
  }
  return result;
}

double sub_1005B89B4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v4 = type metadata accessor for SlidingGradientText();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v28 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v30 = v6;
  *(void *)&long long v31 = v7;
  sub_1000A06D0();
  swift_bridgeObjectRetain();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11;
  uint64_t v14 = v13;
  *(void *)&long long v31 = *(void *)(v2 + 48);
  sub_1000AFA94(&qword_10095C7F0);
  State.wrappedValue.getter();
  uint64_t v15 = v29;
  static UnitPoint.center.getter();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  sub_1000AFA94((uint64_t *)&unk_100959030);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100752410;
  *(void *)(v20 + 32) = static Color.gray.getter();
  *(void *)(v20 + 40) = static Color.white.getter();
  *(void *)(v20 + 48) = static Color.gray.getter();
  uint64_t v30 = v20;
  specialized Array._endMutation()();
  sub_1005B8604();
  sub_1005B87E0();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v21 = v20;
  long long v27 = v31;
  uint64_t v22 = v32;
  uint64_t v23 = v33;
  sub_1005B8DF0(v2, (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v24 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v25 = swift_allocObject();
  sub_1005B8F7C((uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v12 & 1;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = v17;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v21;
  double result = *(double *)&v27;
  *(_OWORD *)(a1 + 72) = v27;
  *(void *)(a1 + 88) = v22;
  *(void *)(a1 + 96) = v23;
  *(void *)(a1 + 104) = sub_1005B8FE0;
  *(void *)(a1 + 112) = v25;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  return result;
}

uint64_t sub_1005B8C24(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    static Animation.linear(duration:)();
    Animation.repeatForever(autoreverses:)();
  }
  else
  {
    static Animation.linear(duration:)();
    Animation.repeatCount(_:autoreverses:)();
  }
  uint64_t v1 = swift_release();
  __chkstk_darwin(v1);
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t sub_1005B8D4C()
{
  return swift_release();
}

uint64_t sub_1005B8DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SlidingGradientText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005B8E54()
{
  uint64_t v1 = (int *)(type metadata accessor for SlidingGradientText() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[11];
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1005B8F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SlidingGradientText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005B8FE0()
{
  uint64_t v1 = *(void *)(type metadata accessor for SlidingGradientText() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1005B8C24(v2);
}

uint64_t sub_1005B9040()
{
  return sub_1005B8D4C();
}

unint64_t sub_1005B9060()
{
  unint64_t result = qword_100963E28;
  if (!qword_100963E28)
  {
    sub_1000A1370(&qword_100963E30);
    sub_1005B90DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963E28);
  }
  return result;
}

unint64_t sub_1005B90DC()
{
  unint64_t result = qword_100963E38;
  if (!qword_100963E38)
  {
    sub_1000A1370(&qword_100963E40);
    sub_1005B9158();
    sub_1005B91CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963E38);
  }
  return result;
}

unint64_t sub_1005B9158()
{
  unint64_t result = qword_100963E48;
  if (!qword_100963E48)
  {
    sub_1000A1370(&qword_100963E50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963E48);
  }
  return result;
}

unint64_t sub_1005B91CC()
{
  unint64_t result = qword_100963E58;
  if (!qword_100963E58)
  {
    sub_1000A1370(&qword_100963E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963E58);
  }
  return result;
}

uint64_t sub_1005B9228()
{
  return sub_1005B9040();
}

ValueMetadata *type metadata accessor for SeymourWorkoutRecommendation()
{
  return &type metadata for SeymourWorkoutRecommendation;
}

uint64_t sub_1005B9250(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._object = (void *)0x80000001007B7070;
  v5._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v5);
  return 91;
}

uint64_t sub_1005B92F0()
{
  return sub_1005B9250(*(void *)v0, *(void **)(v0 + 8));
}

unint64_t sub_1005B92F8()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1000AFA94(&qword_10094DBA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = static HealthDataConstants.catalogWorkoutIdentifierProperty.getter();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  swift_bridgeObjectRetain();
  return sub_100522E98(inited);
}

uint64_t sub_1005B9374(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

void *assignWithCopy for NextIntervalHintView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[1];
  Swift::String v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for AwardEntity(uint64_t a1, _OWORD *a2)
{
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for NextIntervalHintView()
{
  return &type metadata for NextIntervalHintView;
}

uint64_t sub_1005B9450()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005B9470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  uint64_t v38 = v14;
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  uint64_t v37 = v15;
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  uint64_t v36 = v16;
  uint64_t v17 = self;
  id v18 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v19 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v20 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v21 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v22 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v23 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v24 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  uint64_t v35 = v25;
  id v26 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v27 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v28 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v29 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v30 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v31 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v32 = [v17 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  *(void *)a8 = v38;
  *(void *)(a8 + 8) = v37;
  *(void *)(a8 + 16) = v36;
  *(void *)(a8 + 24) = v35;
  *(void *)(a8 + 32) = v34;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  *(unsigned char *)(a8 + 56) = 0;
  *(void *)(a8 + 64) = a1;
  *(void *)(a8 + 72) = a2;
  *(void *)(a8 + 80) = a3;
  *(void *)(a8 + 88) = a4;
  *(unsigned char *)(a8 + 96) = a5;
  return result;
}

double sub_1005B9890@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    swift_retain();
    id v6 = (void *)WorkoutStep.goal.getter();
    id v7 = [v6 goalTypeIdentifier];

    uint64_t v8 = (void *)WorkoutStep.goal.getter();
    uint64_t v9 = v8;
    if (v7 == (id)2)
    {
      [v8 doubleValue];

      type metadata accessor for ElapsedTimeFormatter();
      uint64_t v10 = static ElapsedTimeFormatter.stringFromElapsedTime(_:trimDoubleLeadingZero:compactHours:)();
      uint64_t v12 = v11;
    }
    else
    {
      uint64_t v10 = NLSessionActivityGoal.intervalDisplayString(formattingManager:distanceType:)();
      uint64_t v12 = v19;
    }
    id v20 = [self mainBundle];
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v20 localizedStringForKey:v21 value:0 table:0];

    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    id v26 = (void *)WorkoutStep.goal.getter();
    id v27 = [v26 goalTypeIdentifier];

    LOBYTE(v26) = v27 != 0;
    id v28 = (void *)swift_allocObject();
    v28[2] = a1;
    v28[3] = a2;
    v28[4] = a1;
    swift_retain_n();
    id v29 = a2;
    sub_1005B9470(v10, v12, v23, v25, (char)v26, (uint64_t)sub_1005B9E14, (uint64_t)v28, (uint64_t)&v39);
    sub_1005B9E20((uint64_t)&v39);
    sub_1000AFA94(&qword_100963E68);
    sub_1000AFA94(&qword_1009613E8);
    sub_10053C86C(&qword_100963E70, &qword_100963E68);
    sub_10053C86C(&qword_100961408, &qword_1009613E8);
    _ConditionalContent<>.init(storage:)();
    swift_release();
    sub_1005B9E6C((uint64_t)&v39);
  }
  else
  {
    id v13 = [self mainBundle];
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    sub_10042C994(1, v16, v18, (uint64_t)&v39);
    sub_1000AFA94(&qword_100963E68);
    sub_1000AFA94(&qword_1009613E8);
    sub_10053C86C(&qword_100963E70, &qword_100963E68);
    sub_10053C86C(&qword_100961408, &qword_1009613E8);
    _ConditionalContent<>.init(storage:)();
  }
  double result = *(double *)&v31;
  *(_OWORD *)a3 = v31;
  *(_OWORD *)(a3 + 16) = v32;
  *(_OWORD *)(a3 + 32) = v33;
  *(_OWORD *)(a3 + 48) = v34;
  *(_OWORD *)(a3 + 64) = v35;
  *(_OWORD *)(a3 + 80) = v36;
  *(unsigned char *)(a3 + 96) = v37;
  *(unsigned char *)(a3 + 97) = v38;
  return result;
}

uint64_t sub_1005B9CC4()
{
  uint64_t v0 = type metadata accessor for StepType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  WorkoutStep.stepType.getter();
  StepType.scaleableImage.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  Image.init(uiImage:)();
  Image.scaledToFit(size:)();
  return swift_release();
}

double sub_1005B9DC4@<D0>(uint64_t a1@<X8>)
{
  return sub_1005B9890(*(void *)v1, *(void **)(v1 + 8), a1);
}

uint64_t sub_1005B9DCC()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005B9E14()
{
  return sub_1005B9CC4();
}

uint64_t sub_1005B9E20(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005B9E6C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1005B9EBC()
{
  unint64_t result = qword_100963E78;
  if (!qword_100963E78)
  {
    sub_1000A1370(&qword_100963E80);
    sub_10053C86C(&qword_100963E70, &qword_100963E68);
    sub_10053C86C(&qword_100961408, &qword_1009613E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963E78);
  }
  return result;
}

void *sub_1005B9F58(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    id v6 = a3;
    uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
    uint64_t v8 = v6[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for GregorianDayRange();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = v6[7];
    *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
    id v13 = (char *)a1 + v12;
    NSString v14 = (char *)a2 + v12;
    id v15 = *(void **)((char *)a2 + v12);
    LOBYTE(v6) = v14[8];
    sub_1001AEDAC(v15, (char)v6);
    *(void *)id v13 = v15;
    v13[8] = (char)v6;
  }
  return a1;
}

void sub_1005BA098(uint64_t a1, uint64_t a2)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 8))(a1, ViewModel);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for GregorianDayRange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = *(void **)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  sub_1001AEDC8(v8, v9);
}

uint64_t sub_1005BA15C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 16))(a1, a2, ViewModel);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for GregorianDayRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  id v13 = *(void **)(a2 + v11);
  LOBYTE(a2) = *(unsigned char *)(a2 + v11 + 8);
  sub_1001AEDAC(v13, a2);
  *(void *)uint64_t v12 = v13;
  *(unsigned char *)(v12 + 8) = a2;
  return a1;
}

uint64_t sub_1005BA24C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 24))(a1, a2, ViewModel);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for GregorianDayRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  id v14 = *(id *)v13;
  LOBYTE(a2) = *(unsigned char *)(v13 + 8);
  sub_1001AEDAC(*(id *)v13, a2);
  id v15 = *(void **)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = a2;
  sub_1001AEDC8(v15, v16);
  return a1;
}

uint64_t sub_1005BA34C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 32))(a1, a2, ViewModel);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for GregorianDayRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  return a1;
}

uint64_t sub_1005BA430(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ViewModel - 8) + 40))(a1, a2, ViewModel);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for GregorianDayRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  LOBYTE(v13) = *((unsigned char *)v13 + 8);
  id v15 = *(void **)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = (_BYTE)v13;
  sub_1001AEDC8(v15, v16);
  return a1;
}

uint64_t sub_1005BA520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005BA534);
}

uint64_t sub_1005BA534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v7 = *(void *)(ViewModel - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = ViewModel;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = type metadata accessor for GregorianDayRange();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1005BA658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005BA66C);
}

uint64_t sub_1005BA66C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v9 = *(void *)(ViewModel - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = ViewModel;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for GregorianDayRange();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LoadDetailsChartView()
{
  uint64_t result = qword_100963EE0;
  if (!qword_100963EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005BA7C8()
{
  uint64_t result = type metadata accessor for TrainingLoadViewModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for GregorianDayRange();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005BA8A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005BA8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v185 = a1;
  uint64_t v182 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100961BB8);
  __chkstk_darwin(v3 - 8);
  v177 = (char *)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TrainingLoadChart.Configuration();
  __chkstk_darwin(v5 - 8);
  uint64_t v175 = (uint64_t)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Chart = type metadata accessor for TrainingLoadChart();
  uint64_t v178 = *(void *)(Chart - 8);
  uint64_t v179 = Chart;
  __chkstk_darwin(Chart);
  v176 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_1000AFA94(&qword_100961BC0);
  __chkstk_darwin(v174);
  v181 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v180 = (uint64_t)&v162 - v11;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v170 = *(void *)(DataType - 8);
  uint64_t v171 = DataType;
  __chkstk_darwin(DataType);
  v169 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v168 = (char *)&v162 - v15;
  uint64_t v184 = type metadata accessor for Font.Leading();
  uint64_t v201 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  v183 = (char *)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v17 - 8);
  *((void *)&v189 + 1) = (char *)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Font.TextStyle();
  uint64_t v188 = *(void *)(v19 - 8);
  *(void *)&long long v189 = v19;
  __chkstk_darwin(v19);
  v187 = (char *)&v162 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for AccessibilityTraits();
  v191 = *(char **)(v199 - 8);
  v194 = v191;
  __chkstk_darwin(v199);
  v198 = (char *)&v162 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v22 = *(void *)(v190 - 8);
  __chkstk_darwin(v190);
  uint64_t v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_100963F28);
  __chkstk_darwin(v25);
  id v27 = (char *)&v162 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = sub_1000AFA94(&qword_100963F30);
  v197 = *(void (***)(char *, uint64_t))(v195 - 8);
  __chkstk_darwin(v195);
  id v29 = (char *)&v162 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000AFA94(&qword_10095FFE8);
  __chkstk_darwin(v30 - 8);
  v192 = (char *)&v162 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000AFA94(&qword_10095FFF0);
  __chkstk_darwin(v32 - 8);
  uint64_t v193 = (uint64_t)&v162 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_1000AFA94(&qword_100963F38) - 8;
  __chkstk_darwin(v196);
  uint64_t v200 = (uint64_t)&v162 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  char v37 = (char *)&v162 - v36;
  __chkstk_darwin(v38);
  uint64_t v202 = (uint64_t)&v162 - v39;
  *(void *)id v27 = static VerticalAlignment.center.getter();
  *((void *)v27 + 1) = 0;
  v27[16] = 0;
  uint64_t v40 = sub_1000AFA94(&qword_100963F40);
  sub_1005BBF20(a1, (uint64_t *)&v27[*(int *)(v40 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v41 = sub_1000A132C(&qword_100963F48, &qword_100963F28);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v190);
  sub_10008DB18((uint64_t)v27, &qword_100963F28);
  sub_1000AFA94(&qword_100963B08);
  v42 = v194;
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_10074E640;
  static AccessibilityTraits.isHeader.getter();
  static AccessibilityTraits.isButton.getter();
  *(void *)&long long v225 = v43;
  sub_1005BD1C4();
  sub_1000AFA94(&qword_100963B18);
  sub_1000A132C(&qword_100963B20, &qword_100963B18);
  v44 = v198;
  uint64_t v45 = v199;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&long long v225 = v25;
  *((void *)&v225 + 1) = v41;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = (uint64_t)v192;
  uint64_t v47 = v195;
  View.accessibilityAddTraits(_:)();
  (*((void (**)(char *, uint64_t))v42 + 1))(v44, v45);
  v197[1](v29, v47);
  uint64_t v48 = static Alignment.center.getter();
  uint64_t v49 = v193;
  sub_1004DE4F0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v193, 0.0, 1, 0.0, 1, v48, v50);
  sub_10008DB18(v46, &qword_10095FFE8);
  LOBYTE(v43) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  sub_1000AEF2C(v49, (uint64_t)v37, &qword_10095FFF0);
  uint64_t v59 = v185;
  v60 = &v37[*(int *)(v196 + 44)];
  char *v60 = v43;
  *((void *)v60 + 1) = v52;
  *((void *)v60 + 2) = v54;
  *((void *)v60 + 3) = v56;
  *((void *)v60 + 4) = v58;
  v60[40] = 0;
  sub_10008DB18(v49, &qword_10095FFF0);
  sub_1000AEEC8((uint64_t)v37, v202, &qword_100963F38);
  sub_1005BC6A0(v59, (uint64_t)v251);
  uint64_t v172 = v251[2];
  uint64_t v173 = v251[1];
  v198 = (char *)v251[3];
  uint64_t v199 = v251[0];
  uint64_t v196 = v251[5];
  v197 = (void (**)(char *, uint64_t))v251[4];
  v194 = (char *)v251[7];
  uint64_t v195 = v251[6];
  v192 = (char *)v251[9];
  uint64_t v193 = v251[8];
  v191 = (char *)v251[10];
  LODWORD(v190) = v252;
  v62 = v187;
  uint64_t v61 = v188;
  uint64_t v63 = v189;
  (*(void (**)(char *, void, void))(v188 + 104))(v187, enum case for Font.TextStyle.footnote(_:), v189);
  uint64_t v64 = enum case for Font.Design.rounded(_:);
  uint64_t v65 = type metadata accessor for Font.Design();
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v67 = *((void *)&v189 + 1);
  (*(void (**)(void, uint64_t, uint64_t))(v66 + 104))(*((void *)&v189 + 1), v64, v65);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v67, 0, 1, v65);
  static Font.system(_:design:weight:)();
  sub_10008DB18(v67, &qword_10094C448);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v68 = enum case for Font.Leading.tight(_:);
  uint64_t v69 = v201;
  v71 = v183;
  uint64_t v70 = v184;
  v167 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 104);
  v167(v183, enum case for Font.Leading.tight(_:), v184);
  *((void *)&v189 + 1) = Font.leading(_:)();
  swift_release();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v69 + 8);
  uint64_t v201 = v69 + 8;
  v166 = v72;
  v72(v71, v70);
  *(void *)&long long v189 = swift_getKeyPath();
  LODWORD(v188) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  unsigned __int8 v269 = 0;
  LODWORD(v187) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  v276[0] = *(_DWORD *)v271;
  *(_DWORD *)((char *)v276 + 3) = *(_DWORD *)&v271[3];
  v275[0] = *(_DWORD *)v270;
  *(_DWORD *)((char *)v275 + 3) = *(_DWORD *)&v270[3];
  int v186 = v269;
  unsigned __int8 v272 = 0;
  v89 = v168;
  TrainingLoadViewModel.dataType.getter();
  v90 = v169;
  uint64_t v91 = v170;
  uint64_t v92 = v171;
  (*(void (**)(char *, void, uint64_t))(v170 + 104))(v169, enum case for TrainingLoadDataType.workout(_:), v171);
  LOBYTE(v62) = static TrainingLoadDataType.== infix(_:_:)();
  v93 = *(void (**)(char *, uint64_t))(v91 + 8);
  v93(v90, v92);
  v93(v89, v92);
  if (v62)
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v165 = v253;
    int v163 = v256;
    int v164 = v254;
    uint64_t v170 = v257;
    v168 = v255;
    v169 = v258;
    uint64_t v94 = v59 + *(int *)(type metadata accessor for LoadDetailsChartView() + 28);
    id v95 = *(id *)v94;
    char v96 = *(unsigned char *)(v94 + 8);
    sub_1001AEDAC(*(id *)v94, v96);
    id v97 = sub_1004E75C0(v95, v96);
    sub_1001AEDC8(v95, v96);
    uint64_t v98 = sub_1005F44C0(v59, (uint64_t)v97);
    uint64_t v100 = v99;

    *(void *)&long long v225 = v98;
    *((void *)&v225 + 1) = v100;
    sub_1000A06D0();
    uint64_t v101 = Text.init<A>(_:)();
    uint64_t v103 = v102;
    char v105 = v104 & 1;
    static Font.body.getter();
    v107 = v183;
    uint64_t v106 = v184;
    v167(v183, v68, v184);
    Font.leading(_:)();
    swift_release();
    v166(v107, v106);
    uint64_t v108 = Text.font(_:)();
    uint64_t v110 = v109;
    LOBYTE(v107) = v111;
    swift_release();
    sub_1000A06C0(v101, v103, v105);
    swift_bridgeObjectRelease();
    id v112 = [self secondaryLabelColor];
    *(void *)&long long v225 = Color.init(_:)();
    uint64_t v113 = Text.foregroundStyle<A>(_:)();
    uint64_t v115 = v114;
    uint64_t v117 = v116;
    char v119 = v118 & 1;
    sub_1000A06C0(v108, v110, v107 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    LODWORD(v167) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v201 = v82;
    uint64_t v120 = v74;
    uint64_t v122 = v121;
    v183 = v86;
    uint64_t v184 = v84;
    uint64_t v123 = v76;
    uint64_t v125 = v124;
    uint64_t v126 = v78;
    uint64_t v128 = v127;
    uint64_t v171 = v88;
    uint64_t v129 = v80;
    uint64_t v131 = v130;
    char v209 = 1;
    LOBYTE(v97) = v163;
    LOBYTE(v108) = v164;
    char v208 = v164;
    char v207 = v163;
    char v206 = v119;
    char v203 = 0;
    LODWORD(v211) = v259;
    *(_DWORD *)((char *)&v211 + 3) = *(_DWORD *)((char *)&v259 + 3);
    *(_DWORD *)v224 = *(_DWORD *)v274;
    *(_DWORD *)&v224[3] = *(_DWORD *)&v274[3];
    *(_DWORD *)&v223[3] = *(_DWORD *)&v273[3];
    *(_DWORD *)v223 = *(_DWORD *)v273;
    *(_DWORD *)&v210[3] = *(_DWORD *)&v205[3];
    *(_DWORD *)v210 = *(_DWORD *)v205;
    *(_DWORD *)((char *)&v265 + 3) = *(_DWORD *)&v204[3];
    LODWORD(v265) = *(_DWORD *)v204;
    LODWORD(v166) = 0;
    sub_1000A1750(v113, v115, v119);
    swift_bridgeObjectRetain();
    sub_1000A06C0(v113, v115, v119);
    swift_bridgeObjectRelease();
    *(void *)&long long v225 = 0;
    BYTE8(v225) = 1;
    *(_DWORD *)((char *)&v225 + 9) = v211;
    HIDWORD(v225) = *(_DWORD *)((char *)&v211 + 3);
    uint64_t v226 = v165;
    LOBYTE(v227) = v108;
    *(_DWORD *)((char *)&v227 + 1) = *(_DWORD *)v224;
    HIDWORD(v227) = *(_DWORD *)&v224[3];
    v228 = (void (**)(char *, uint64_t))v168;
    LOBYTE(v229) = (_BYTE)v97;
    *(_DWORD *)((char *)&v229 + 1) = *(_DWORD *)v223;
    uint64_t v59 = v185;
    HIDWORD(v229) = *(_DWORD *)&v223[3];
    uint64_t v230 = v170;
    v231 = v169;
    uint64_t v232 = v113;
    v233 = (char *)v115;
    LOBYTE(v234) = v119;
    HIDWORD(v234) = *(_DWORD *)&v210[3];
    *(_DWORD *)((char *)&v234 + 1) = *(_DWORD *)v210;
    uint64_t v235 = v117;
    LOBYTE(v236) = (_BYTE)v167;
    DWORD1(v236) = *(_DWORD *)((char *)&v265 + 3);
    *(_DWORD *)((char *)&v236 + 1) = v265;
    *((void *)&v236 + 1) = v122;
    uint64_t v74 = v120;
    uint64_t v82 = v201;
    uint64_t v237 = v125;
    uint64_t v76 = v123;
    uint64_t v238 = v128;
    uint64_t v78 = v126;
    uint64_t v86 = v183;
    uint64_t v84 = v184;
    uint64_t v239 = v131;
    uint64_t v80 = v129;
    uint64_t v88 = v171;
    LOBYTE(v240) = (_BYTE)v166;
    ASFriendListDisplayMode.id.getter(&v225);
  }
  else
  {
    sub_10031522C(&v225);
  }
  sub_1000AEEC8((uint64_t)&v225, (uint64_t)v268, &qword_100963F50);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v201 = v259;
  LODWORD(v184) = v260;
  v183 = v261;
  LODWORD(v171) = v262;
  v169 = v264;
  uint64_t v170 = v263;
  uint64_t DetailsChartView = type metadata accessor for LoadDetailsChartView();
  uint64_t v133 = v59 + *(int *)(DetailsChartView + 28);
  id v134 = *(id *)v133;
  char v135 = *(unsigned char *)(v133 + 8);
  sub_1001AEDAC(*(id *)v133, v135);
  id v136 = sub_1004E75C0(v134, v135);
  sub_1001AEDC8(v134, v135);
  sub_10021E838(v59 + *(int *)(DetailsChartView + 20), v59, v175);

  uint64_t v137 = sub_1000AFA94(&qword_100961BD0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v177, 1, 1, v137);
  LOBYTE(v211) = 0;
  static Binding.constant(_:)();
  v138 = v176;
  TrainingLoadChart.init(configuration:selectedDay:inSelectionMode:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v140 = v178;
  uint64_t v139 = v179;
  uint64_t v141 = (uint64_t)v181;
  (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v181, v138, v179);
  v142 = (_OWORD *)(v141 + *(int *)(v174 + 36));
  long long v143 = v266;
  _OWORD *v142 = v265;
  v142[1] = v143;
  v142[2] = v267;
  (*(void (**)(char *, uint64_t))(v140 + 8))(v138, v139);
  uint64_t v144 = v180;
  sub_1000AEEC8(v141, v180, &qword_100961BC0);
  uint64_t v145 = v200;
  sub_1000AEF2C(v202, v200, &qword_100963F38);
  unsigned __int8 v146 = v272;
  LODWORD(v185) = v272;
  sub_1000AEEC8((uint64_t)v268, (uint64_t)v210, &qword_100963F50);
  sub_1000AEF2C(v144, v141, &qword_100961BC0);
  uint64_t v147 = v182;
  sub_1000AEF2C(v145, v182, &qword_100963F38);
  v148 = (int *)sub_1000AFA94(&qword_100963F58);
  v149 = (_OWORD *)(v147 + v148[12]);
  *(void *)&long long v211 = v199;
  uint64_t v150 = v172;
  uint64_t v151 = v173;
  *((void *)&v211 + 1) = v173;
  *(void *)&long long v212 = v172;
  *((void *)&v212 + 1) = v198;
  *(void *)&long long v213 = v197;
  *((void *)&v213 + 1) = v196;
  *(void *)&long long v214 = v195;
  *((void *)&v214 + 1) = v194;
  *(void *)&long long v215 = v193;
  *((void *)&v215 + 1) = v192;
  *(void *)&long long v216 = v191;
  BYTE8(v216) = v190;
  *(_DWORD *)((char *)&v216 + 9) = v276[0];
  HIDWORD(v216) = *(_DWORD *)((char *)v276 + 3);
  long long v217 = v189;
  LOBYTE(v218) = v188;
  DWORD1(v218) = *(_DWORD *)((char *)v275 + 3);
  *(_DWORD *)((char *)&v218 + 1) = v275[0];
  *((void *)&v218 + 1) = v74;
  *(void *)&long long v219 = v76;
  *((void *)&v219 + 1) = v78;
  *(void *)&long long v220 = v80;
  BYTE8(v220) = v186;
  *(_DWORD *)((char *)&v220 + 9) = *(_DWORD *)v274;
  HIDWORD(v220) = *(_DWORD *)&v274[3];
  LOBYTE(v221) = (_BYTE)v187;
  *(_DWORD *)((char *)&v221 + 1) = *(_DWORD *)v273;
  DWORD1(v221) = *(_DWORD *)&v273[3];
  *((void *)&v221 + 1) = v82;
  *(void *)&v222[0] = v84;
  *((void *)&v222[0] + 1) = v86;
  *(void *)&v222[1] = v88;
  BYTE8(v222[1]) = v146;
  long long v152 = v218;
  v149[6] = v189;
  v149[7] = v152;
  long long v153 = v220;
  v149[8] = v219;
  v149[9] = v153;
  long long v154 = v214;
  v149[2] = v213;
  v149[3] = v154;
  long long v155 = v216;
  v149[4] = v215;
  v149[5] = v155;
  long long v156 = v212;
  _OWORD *v149 = v211;
  v149[1] = v156;
  long long v157 = v222[0];
  v149[10] = v221;
  v149[11] = v157;
  *(_OWORD *)((char *)v149 + 185) = *(_OWORD *)((char *)v222 + 9);
  uint64_t v158 = v147 + v148[16];
  sub_1000AEEC8((uint64_t)v210, (uint64_t)v223, &qword_100963F50);
  sub_1000AEEC8((uint64_t)v223, v158, &qword_100963F50);
  uint64_t v159 = v147 + v148[20];
  *(void *)uint64_t v159 = 0;
  *(unsigned char *)(v159 + 8) = 1;
  *(void *)(v159 + 16) = v201;
  *(unsigned char *)(v159 + 24) = v184;
  *(void *)(v159 + 32) = v183;
  *(unsigned char *)(v159 + 40) = v171;
  v160 = v169;
  *(void *)(v159 + 48) = v170;
  *(void *)(v159 + 56) = v160;
  sub_1000AEF2C(v141, v147 + v148[24], &qword_100961BC0);
  sub_1005BD224((uint64_t)&v211);
  sub_1005BD3B4((uint64_t)v223, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1005BD360);
  sub_10008DB18(v144, &qword_100961BC0);
  sub_10008DB18(v202, &qword_100963F38);
  sub_10008DB18(v141, &qword_100961BC0);
  sub_1000AEEC8((uint64_t)v210, (uint64_t)v224, &qword_100963F50);
  sub_1005BD3B4((uint64_t)v224, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1005BD420);
  *(void *)&long long v225 = v199;
  *((void *)&v225 + 1) = v151;
  uint64_t v226 = v150;
  v227 = v198;
  v228 = v197;
  uint64_t v229 = v196;
  uint64_t v230 = v195;
  v231 = v194;
  uint64_t v232 = v193;
  v233 = v192;
  v234 = v191;
  LOBYTE(v235) = v190;
  *(_DWORD *)((char *)&v235 + 1) = v276[0];
  HIDWORD(v235) = *(_DWORD *)((char *)v276 + 3);
  long long v236 = v189;
  LOBYTE(v237) = v188;
  HIDWORD(v237) = *(_DWORD *)((char *)v275 + 3);
  *(_DWORD *)((char *)&v237 + 1) = v275[0];
  uint64_t v238 = v74;
  uint64_t v239 = v76;
  uint64_t v240 = v78;
  uint64_t v241 = v80;
  char v242 = v186;
  *(_DWORD *)v243 = *(_DWORD *)v274;
  *(_DWORD *)&v243[3] = *(_DWORD *)&v274[3];
  char v244 = (char)v187;
  *(_DWORD *)&v245[3] = *(_DWORD *)&v273[3];
  *(_DWORD *)v245 = *(_DWORD *)v273;
  uint64_t v246 = v82;
  uint64_t v247 = v84;
  v248 = v86;
  uint64_t v249 = v88;
  char v250 = v185;
  sub_1005BD474((uint64_t)&v225);
  return sub_10008DB18(v200, &qword_100963F38);
}

uint64_t sub_1005BBF20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10095BD10);
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  __chkstk_darwin(v3);
  uint64_t v69 = &v66[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = sub_1000AFA94(&qword_100963F70);
  __chkstk_darwin(v68);
  uint64_t v73 = &v66[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v78 = sub_1000AFA94(&qword_100963F78);
  uint64_t v75 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v70 = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000AFA94(&qword_100963F80);
  __chkstk_darwin(v7 - 8);
  uint64_t v76 = &v66[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v74 = &v66[-v10];
  uint64_t v11 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v66[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for Font.Leading();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v37 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  TrainingLoadViewModel.loadBandTodayLocalizedDescription()();
  static Font.title2.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v15 + 104))(v37, enum case for Font.Leading.tight(_:), v14);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v37, v14);
  uint64_t v17 = Text.font(_:)();
  uint64_t v19 = v18;
  LOBYTE(v14) = v20;
  swift_bridgeObjectRelease();
  swift_release();
  char v21 = v14 & 1;
  static Font.Weight.medium.getter();
  uint64_t v22 = Text.fontWeight(_:)();
  uint64_t v24 = v23;
  LOBYTE(v15) = v25 & 1;
  sub_1000A06C0(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v26 = enum case for Font.Design.rounded(_:);
  uint64_t v27 = type metadata accessor for Font.Design();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v28 + 104))(v13, v26, v27);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v13, 0, 1, v27);
  uint64_t v29 = Text.fontDesign(_:)();
  uint64_t v31 = v30;
  LOBYTE(v19) = v32 & 1;
  sub_1000A06C0(v22, v24, v15);
  swift_bridgeObjectRelease();
  sub_10008DB18((uint64_t)v13, &qword_10094C448);
  uint64_t View = TrainingLoadViewModel.loadBandTodayColor()();
  uint64_t v33 = Text.foregroundStyle<A>(_:)();
  uint64_t v35 = v34;
  LODWORD(v37) = v36;
  uint64_t v39 = v38;
  LOBYTE(v36) = v19;
  uint64_t v40 = (uint64_t)v74;
  sub_1000A06C0(v29, v31, v36);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t DetailsChartView = type metadata accessor for LoadDetailsChartView();
  uint64_t v42 = 1;
  if (*(unsigned char *)(a1 + *(int *)(DetailsChartView + 24)) == 1)
  {
    uint64_t v43 = Image.init(systemName:)();
    uint64_t v44 = static Font.caption2.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t View = v43;
    uint64_t v80 = KeyPath;
    uint64_t v81 = v44;
    sub_1000AFA94(&qword_1009532C8);
    sub_1002857C0();
    int v67 = (int)v37;
    char v37 = v69;
    View.bold(_:)();
    swift_release();
    swift_release();
    swift_release();
    LOBYTE(v43) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v55 = v71;
    uint64_t v54 = v72;
    uint64_t v56 = (uint64_t)v73;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v71 + 16))(v73, v37, v72);
    uint64_t v57 = v56 + *(int *)(v68 + 36);
    *(unsigned char *)uint64_t v57 = v43;
    *(void *)(v57 + 8) = v47;
    *(void *)(v57 + 16) = v49;
    *(void *)(v57 + 24) = v51;
    *(void *)(v57 + 32) = v53;
    *(unsigned char *)(v57 + 40) = 0;
    uint64_t v58 = v37;
    LOBYTE(v37) = v67;
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v58, v54);
    id v59 = [self secondaryLabelColor];
    uint64_t v60 = Color.init(_:)();
    uint64_t v61 = v70;
    sub_1000AEF2C(v56, (uint64_t)v70, &qword_100963F70);
    *(void *)&v61[*(int *)(v78 + 36)] = v60;
    sub_10008DB18(v56, &qword_100963F70);
    sub_1000AEEC8((uint64_t)v61, v40, &qword_100963F78);
    uint64_t v42 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v40, v42, 1, v78);
  v62 = v76;
  sub_1000AEF2C(v40, (uint64_t)v76, &qword_100963F80);
  uint64_t v63 = v77;
  uint64_t *v77 = v33;
  v63[1] = v35;
  *((unsigned char *)v63 + 16) = v37 & 1;
  v63[3] = v39;
  v63[4] = 0x4024000000000000;
  *((unsigned char *)v63 + 40) = 0;
  uint64_t v64 = sub_1000AFA94(&qword_100963F88);
  sub_1000AEF2C((uint64_t)v62, (uint64_t)v63 + *(int *)(v64 + 64), &qword_100963F80);
  sub_1000A1750(v33, v35, v37 & 1);
  swift_bridgeObjectRetain();
  sub_10008DB18(v40, &qword_100963F80);
  sub_10008DB18((uint64_t)v62, &qword_100963F80);
  sub_1000A06C0(v33, v35, v37 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005BC6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v69 = type metadata accessor for DayIndex();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v66);
  uint64_t v65 = (char *)v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v70 = *(void *)(ViewModel - 8);
  __chkstk_darwin(ViewModel);
  uint64_t v6 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DetailsChartView = type metadata accessor for LoadDetailsChartView();
  __chkstk_darwin(DetailsChartView);
  uint64_t v72 = (uint64_t)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v10 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v12 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v64 - v14;
  uint64_t v16 = sub_1000AFA94(&qword_100963B50);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  TrainingLoadViewModel.loadBandToday()();
  uint64_t Band = type metadata accessor for TrainingLoadBand();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(Band - 8) + 48))(v18, 1, Band);
  sub_10008DB18((uint64_t)v18, &qword_100963B50);
  if (a1 != 1)
  {
    uint64_t v63 = static VerticalAlignment.center.getter();
    sub_1005BCE88((uint64_t)&v79);
    uint64_t v74 = v63;
    long long v75 = xmmword_10076E1B0;
    *(Swift::String *)uint64_t v76 = v79;
    *(void *)&v76[16] = v80;
    *(void *)&v76[24] = *((void *)&v80 + 1);
    *(_OWORD *)&v76[32] = v81;
    *(void *)&v76[48] = v82;
    uint64_t v77 = *((void *)&v82 + 1);
    char v78 = 0;
    sub_1000AFA94(&qword_100963F60);
    sub_1000A132C(&qword_100963F68, &qword_100963F60);
    uint64_t result = _ConditionalContent<>.init(storage:)();
    Swift::String v56 = v79;
    long long v57 = v80;
    long long v58 = v81;
    long long v59 = v82;
    long long v60 = v83;
    uint64_t v61 = v84;
    char v62 = v85;
LABEL_7:
    uint64_t v36 = v73;
    goto LABEL_8;
  }
  v64[2] = DetailsChartView;
  uint64_t v21 = v70;
  uint64_t v22 = ViewModel;
  uint64_t v23 = v19;
  TrainingLoadViewModel.dataType.getter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for TrainingLoadDataType.workout(_:), DataType);
  char v24 = static TrainingLoadDataType.== infix(_:_:)();
  char v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25(v12, DataType);
  v25(v15, DataType);
  uint64_t v26 = v72;
  sub_1005BD5B0(v23, v72);
  if ((v24 & 1) == 0)
  {
    uint64_t result = sub_1005BD614(v26);
    uint64_t v61 = 0;
    Swift::String v56 = (Swift::String)0;
    char v62 = -1;
    long long v57 = 0uLL;
    long long v58 = 0uLL;
    long long v59 = 0uLL;
    long long v60 = 0uLL;
    goto LABEL_7;
  }
  v64[1] = v23;
  uint64_t v27 = v21;
  uint64_t v28 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v6, v26, v22);
  uint64_t v29 = (uint64_t)v65;
  GregorianDayRange.dayIndexRange.getter();
  uint64_t v30 = v26;
  uint64_t v31 = v67;
  char v32 = v68;
  uint64_t v33 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v68, v29 + *(int *)(v66 + 36), v69);
  sub_10008DB18(v29, &qword_100950728);
  char v34 = TrainingLoadViewModel.isPending(onDay:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v22);
  uint64_t result = sub_1005BD614(v30);
  uint64_t v36 = v73;
  if (v34)
  {
    sub_1005F6230();
    Swift::String v37 = String.uppercased()();
    swift_bridgeObjectRelease();
    Swift::String v79 = v37;
    sub_1000A06D0();
    uint64_t v38 = Text.init<A>(_:)();
    uint64_t v40 = v39;
    char v42 = v41 & 1;
    uint64_t v43 = Text.kerning(_:)();
    uint64_t v45 = v44;
    char v47 = v46 & 1;
    sub_1000A06C0(v38, v40, v42);
    swift_bridgeObjectRelease();
    id v48 = [self secondaryLabelColor];
    v79._countAndFlagsBits = Color.init(_:)();
    uint64_t v49 = Text.foregroundStyle<A>(_:)();
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v55 = v54 & 1;
    sub_1000A06C0(v43, v45, v47);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v74 = v49;
    *(void *)&long long v75 = v51;
    *((void *)&v75 + 1) = v55;
    *(void *)uint64_t v76 = v53;
    memset(&v76[8], 0, 48);
    uint64_t v77 = 0;
    char v78 = 1;
    sub_1000AFA94(&qword_100963F60);
    sub_1000A132C(&qword_100963F68, &qword_100963F60);
    uint64_t result = _ConditionalContent<>.init(storage:)();
    Swift::String v56 = v79;
    long long v57 = v80;
    long long v58 = v81;
    long long v59 = v82;
    long long v60 = v83;
    uint64_t v61 = v84;
    char v62 = v85;
  }
  else
  {
    uint64_t v61 = 0;
    Swift::String v56 = (Swift::String)0;
    char v62 = -1;
    long long v57 = 0uLL;
    long long v58 = 0uLL;
    long long v59 = 0uLL;
    long long v60 = 0uLL;
  }
LABEL_8:
  *(Swift::String *)uint64_t v36 = v56;
  *(_OWORD *)(v36 + 16) = v57;
  *(_OWORD *)(v36 + 32) = v58;
  *(_OWORD *)(v36 + 48) = v59;
  *(_OWORD *)(v36 + 64) = v60;
  *(void *)(v36 + 80) = v61;
  *(unsigned char *)(v36 + 88) = v62;
  return result;
}

uint64_t sub_1005BCE88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocalizationFeature();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String View = TrainingLoadViewModel.loadPercentageToday()();
  sub_1000A06D0();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  View._countAndFlagsBits = TrainingLoadViewModel.loadBandTodayColor()();
  uint64_t v11 = Text.foregroundStyle<A>(_:)();
  uint64_t v35 = v12;
  uint64_t v36 = v11;
  uint64_t v37 = v13;
  HIDWORD(v34) = v14 & 1;
  sub_1000A06C0(v6, v8, v10);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizationFeature.workout(_:), v2);
  uint64_t v15 = static Localization.workoutUILocalizedString(_:feature:)();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  View._countAndFlagsBits = v15;
  View._object = v17;
  uint64_t v18 = Text.init<A>(_:)();
  uint64_t v20 = v19;
  LOBYTE(v8) = v21 & 1;
  id v22 = [self secondaryLabelColor];
  View._countAndFlagsBits = Color.init(_:)();
  uint64_t v23 = Text.foregroundStyle<A>(_:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  LOBYTE(v3) = v28 & 1;
  sub_1000A06C0(v18, v20, v8);
  swift_release();
  swift_bridgeObjectRelease();
  char v29 = BYTE4(v34);
  LOBYTE(View._countAndFlagsBits) = BYTE4(v34);
  uint64_t v31 = v35;
  uint64_t v30 = v36;
  *(void *)a1 = v36;
  *(void *)(a1 + 8) = v31;
  *(unsigned char *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v37;
  *(void *)(a1 + 32) = v23;
  *(void *)(a1 + 40) = v25;
  *(unsigned char *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = v27;
  uint64_t v32 = v30;
  sub_1000A1750(v30, v31, v29);
  swift_bridgeObjectRetain();
  sub_1000A1750(v23, v25, v3);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v23, v25, v3);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v32, v31, View._countAndFlagsBits);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005BD17C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_1000AFA94(&qword_100963F20);
  return sub_1005BA8C0(v1, a1 + *(int *)(v3 + 44));
}

unint64_t sub_1005BD1C4()
{
  unint64_t result = qword_100963B10;
  if (!qword_100963B10)
  {
    type metadata accessor for AccessibilityTraits();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100963B10);
  }
  return result;
}

uint64_t sub_1005BD224(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005BD29C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, unsigned __int8 a12)
{
  if (a12 != 255) {
    return sub_1005BD2C8(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1);
  }
  return result;
}

uint64_t sub_1005BD2C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a12)
  {
    sub_1000A1750(a1, a2, a3 & 1);
  }
  else
  {
    sub_1000A1750(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    sub_1000A1750(a8, a9, a10 & 1);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1005BD360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  if (a12)
  {
    sub_1000A1750(a9, a10, a11 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1005BD3B4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

uint64_t sub_1005BD420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  if (a12)
  {
    sub_1000A06C0(a9, a10, a11 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005BD474(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005BD4EC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, unsigned __int8 a12)
{
  if (a12 != 255) {
    return sub_1005BD518(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1);
  }
  return result;
}

uint64_t sub_1005BD518(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a12)
  {
    sub_1000A06C0(a1, a2, a3 & 1);
  }
  else
  {
    sub_1000A06C0(a4, a5, a6 & 1);
    swift_bridgeObjectRelease();
    sub_1000A06C0(a8, a9, a10 & 1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005BD5B0(uint64_t a1, uint64_t a2)
{
  uint64_t DetailsChartView = type metadata accessor for LoadDetailsChartView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DetailsChartView - 8) + 16))(a2, a1, DetailsChartView);
  return a2;
}

uint64_t sub_1005BD614(uint64_t a1)
{
  uint64_t DetailsChartView = type metadata accessor for LoadDetailsChartView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(DetailsChartView - 8) + 8))(a1, DetailsChartView);
  return a1;
}

uint64_t sub_1005BD670()
{
  return sub_1000A132C(&qword_100963F90, &qword_100963F98);
}

uint64_t sub_1005BD6AC()
{
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  uint64_t result = static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)();
  qword_100963FA0 = result;
  return result;
}

id sub_1005BD72C()
{
  id result = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  qword_100963FA8 = (uint64_t)result;
  return result;
}

void sub_1005BD774()
{
  id v0 = [self briskColors];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [v0 gradientLightColor];

    qword_100963FB0 = (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
}

UIColor *sub_1005BD7E0()
{
  id result = sub_10017859C();
  qword_100963FB8 = (uint64_t)result;
  return result;
}

char *sub_1005BD808(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel;
  id v11 = objc_allocWithZone((Class)UILabel);
  uint64_t v12 = v5;
  id v13 = [v11 initWithFrame:0.0, 0.0, 0.0, 0.0];
  char v14 = (void *)UILabel.textAlignment(_:)();

  [v14 setLineBreakMode:0];
  [v14 setNumberOfLines:0];
  if (qword_10094AEE8 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)UILabel.withFont(_:)();

  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v5[v10] = v15;
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel;
  id v17 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v18 = (void *)UILabel.textAlignment(_:)();

  [v18 setLineBreakMode:0];
  [v18 setNumberOfLines:0];
  if (qword_10094AEF0 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)UILabel.withFont(_:)();

  id v20 = [self secondaryLabelColor];
  char v21 = (void *)UILabel.withTextColor(_:)();

  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v12[v16] = v21;
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer;
  id v23 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v12[v22] = v23;
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar;
  id v25 = [objc_allocWithZone((Class)UIProgressView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v12[v24] = v25;
  *(void *)&v12[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBarConstraints] = _swiftEmptyArrayStorage;

  v41.receiver = v12;
  v41.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailBadgeCell();
  uint64_t v26 = (char *)[v41 initWithFrame:a1, a2, a3, a4];
  uint64_t v27 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar;
  char v28 = *(void **)&v26[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar];
  uint64_t v29 = qword_10094AEF8;
  uint64_t v30 = v26;
  id v31 = v28;
  if (v29 != -1) {
    swift_once();
  }
  [v31 setProgressTintColor:qword_100963FB0];

  uint64_t v32 = qword_10094AF00;
  id v33 = *(id *)&v26[v27];
  if (v32 != -1) {
    swift_once();
  }
  [v33 setTrackTintColor:qword_100963FB8];

  id v34 = [*(id *)&v26[v27] layer];
  [v34 setCornerRadius:2.0];

  id v35 = [*(id *)&v26[v27] layer];
  [v35 setMasksToBounds:1];

  id v36 = [v30 contentView];
  [v36 addSubview:*(void *)&v30[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer]];

  id v37 = [v30 contentView];
  [v37 addSubview:*(void *)&v30[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel]];

  id v38 = [v30 contentView];
  [v38 addSubview:*(void *)&v30[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel]];

  id v39 = [v30 contentView];
  [v39 addSubview:*(void *)&v26[v27]];

  sub_1005BDD38();
  return v30;
}

void sub_1005BDD38()
{
  id v1 = [self mainScreen];
  [v1 bounds];
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;

  v59.origin.x = v3;
  v59.origin.y = v5;
  v59.size.width = v7;
  v59.size.height = v9;
  double Height = CGRectGetHeight(v59);
  Swift::String v56 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100764D30;
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer];
  id v13 = [v12 topAnchor];
  id v14 = [v0 contentView];
  id v15 = [v14 topAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15 constant:Height * 0.13];
  *(void *)(v11 + 32) = v16;
  id v17 = [v12 centerXAnchor];
  id v18 = [v0 contentView];
  id v19 = [v18 centerXAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19];
  *(void *)(v11 + 40) = v20;
  id v21 = [v12 widthAnchor];
  id v22 = [v0 contentView];
  id v23 = [v22 widthAnchor];

  id v24 = [v21 constraintEqualToAnchor:v23 multiplier:0.76];
  *(void *)(v11 + 48) = v24;
  id v25 = [v12 heightAnchor];
  id v26 = [v12 widthAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26 constant:20.0];

  *(void *)(v11 + 56) = v27;
  char v28 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel];
  id v29 = [v28 topAnchor];
  id v30 = [v12 bottomAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:30.0];

  *(void *)(v11 + 64) = v31;
  id v32 = [v28 leadingAnchor];
  id v33 = [v0 contentView];
  id v34 = [v33 leadingAnchor];

  id v35 = [v32 constraintEqualToAnchor:v34 constant:16.0];
  *(void *)(v11 + 72) = v35;
  id v36 = [v28 trailingAnchor];
  id v37 = [v0 contentView];
  id v38 = [v37 trailingAnchor];

  id v39 = [v36 constraintEqualToAnchor:v38 constant:-16.0];
  *(void *)(v11 + 80) = v39;
  uint64_t v40 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel];
  id v41 = [v40 topAnchor];
  id v42 = [v28 bottomAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42 constant:4.0];

  *(void *)(v11 + 88) = v43;
  id v44 = [v40 leadingAnchor];
  id v45 = [v0 contentView];
  id v46 = [v45 leadingAnchor];

  id v47 = [v44 constraintEqualToAnchor:v46 constant:16.0];
  *(void *)(v11 + 96) = v47;
  id v48 = [v40 trailingAnchor];
  id v49 = [v0 contentView];
  id v50 = [v49 trailingAnchor];

  id v51 = [v48 constraintEqualToAnchor:v50 constant:-16.0];
  *(void *)(v11 + 104) = v51;
  id v52 = [v40 bottomAnchor];
  id v53 = [v0 contentView];
  id v54 = [v53 bottomAnchor];

  id v55 = [v52 constraintLessThanOrEqualToAnchor:v54 constant:-40.0];
  *(void *)(v11 + 112) = v55;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v56 activateConstraints:isa];
}

void sub_1005BE3B0()
{
  id v1 = v0;
  id v2 = [self sharedApplication];
  id v3 = [v2 preferredContentSizeCategory];

  char v4 = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v4) {
    double v5 = 8.0;
  }
  else {
    double v5 = 4.0;
  }
  if (v4) {
    double v6 = 4.0;
  }
  else {
    double v6 = 2.0;
  }
  CGFloat v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar];
  id v8 = [v7 layer];
  [v8 setCornerRadius:v6];

  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10075C680;
  id v10 = [v7 topAnchor];
  id v11 = [*(id *)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel] bottomAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11 constant:20.0];

  *(void *)(v9 + 32) = v12;
  id v13 = [v7 centerXAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 centerXAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15];
  *(void *)(v9 + 40) = v16;
  id v17 = [v7 widthAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 widthAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19 multiplier:0.56];
  *(void *)(v9 + 48) = v20;
  id v21 = [v7 heightAnchor];
  id v22 = [v21 constraintEqualToConstant:v5];

  *(void *)(v9 + 56) = v22;
  id v23 = [v7 bottomAnchor];
  id v24 = [v1 contentView];
  id v25 = [v24 bottomAnchor];

  id v26 = [v23 constraintLessThanOrEqualToAnchor:v25 constant:-40.0];
  *(void *)(v9 + 64) = v26;
  specialized Array._endMutation()();
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBarConstraints] = v9;
  swift_bridgeObjectRelease();
  id v27 = self;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];
}

void sub_1005BE784(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v32 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v32);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  id v9 = [a3 badgeConfigurationForAchievement:a1];
  id v10 = [a3 backSideIconImageForAchievement:a1];
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView;
  [*(id *)(v4 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView) setConfiguration:v9];
  [*(id *)(v4 + v11) setBadgeBacksideIcon:v10];
  id v12 = [a2 localizedAttributedBacksideString];
  if (v12)
  {
    id v13 = v12;
    id v14 = [a2 localizedAttributedShortenedBacksideString];
    if (v14)
    {
      id v15 = v14;
      [*(id *)(v4 + v11) setBadgeBacksideAttributedString:v13];
      id v16 = *(void **)(v4 + v11);
      if (v16)
      {
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v15;
        id v37 = sub_1001D7D00;
        uint64_t v38 = v17;
        aBlock = _NSConcreteStackBlock;
        uint64_t v34 = 1107296256;
        id v35 = sub_1005BEB8C;
        id v36 = &unk_1008D0A28;
        id v30 = _Block_copy(&aBlock);
        id v18 = v16;
        id v19 = v15;
        swift_release();
        [v18 setShortenedBadgeBacksideStringProvider:v30];

        _Block_release(v30);
        goto LABEL_5;
      }
    }
    id v20 = *(void **)(v4 + v11);
    if (v20) {
      goto LABEL_6;
    }
LABEL_12:
    char v28 = 0;
    goto LABEL_13;
  }
LABEL_5:
  id v20 = *(void **)(v4 + v11);
  if (!v20) {
    goto LABEL_12;
  }
LABEL_6:
  id v31 = v10;
  sub_1000AFA94((uint64_t *)&unk_10096AA70);
  id v21 = v20;
  id v22 = a1;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v23 = EntityProperty<>.init(title:)();
  id v24 = v22;
  swift_retain();
  LOBYTE(aBlock) = [v24 unearned] ^ 1;
  EntityProperty.wrappedValue.setter();

  swift_release();
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_1003915D0();
  sub_1000AFA94((uint64_t *)&unk_10096AA80);
  sub_1001B5C10();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  aBlock = (void **)v23;
  uint64_t v34 = (uint64_t)v24;
  id v25 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  sub_1000818CC();
  id v26 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  id v27 = *(void **)(v4 + v11);
  if (v27)
  {
    [v27 setPaused:0];
    char v28 = *(void **)(v4 + v11);
  }
  else
  {
    char v28 = 0;
  }
  id v10 = v31;
LABEL_13:
  id v29 = v28;
  [v29 resizeBadgeForCurrentViewSize];
}

id sub_1005BEB8C(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

id sub_1005BEBDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailBadgeCell();
  return [super dealloc];
}

uint64_t type metadata accessor for TrophyCaseAwardDetailBadgeCell()
{
  return self;
}

void sub_1005BECC0()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel;
  id v3 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v4 = (void *)UILabel.textAlignment(_:)();

  [v4 setLineBreakMode:0];
  [v4 setNumberOfLines:0];
  if (qword_10094AEE8 != -1) {
    swift_once();
  }
  double v5 = (void *)UILabel.withFont(_:)();

  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v2] = v5;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel;
  id v7 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = (void *)UILabel.textAlignment(_:)();

  [v8 setLineBreakMode:0];
  [v8 setNumberOfLines:0];
  if (qword_10094AEF0 != -1) {
    swift_once();
  }
  id v9 = (void *)UILabel.withFont(_:)();

  id v10 = [self secondaryLabelColor];
  uint64_t v11 = (void *)UILabel.withTextColor(_:)();

  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v6] = v11;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer;
  id v13 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v12] = v13;
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar;
  id v15 = [objc_allocWithZone((Class)UIProgressView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v14] = v15;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBarConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1005BEF8C(void *a1, char a2, char a3, void *a4, void *a5, void *a6, char a7)
{
  id v15 = [objc_allocWithZone((Class)AAUIAchievementFormatter) initWithStyle:1 achievement:a1 achLocalizationProvider:a6];
  if (!v15) {
    return;
  }
  id v36 = v15;
  [v15 setFormatsForFriend:a7 & 1];
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView;
  if (!*(void *)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeView))
  {
    [*(id *)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_badgeViewContainer) bounds];
    [a4 setFrame:];
    [a4 setOpaque:0];
    uint64_t v17 = *(void **)(v7 + v16);
    *(void *)(v7 + v16) = a4;
    id v18 = a4;

    sub_1005BE784(a1, v36, a5);
  }
  id v19 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementTitleLabel);
  id v20 = [a6 titleForAchievement:a1];
  [v19 setText:v20];

  id v21 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_achievementDescriptionLabel);
  if (a2)
  {
    id v22 = [a6 achievedDescriptionForAchievement:a1];
    [v21 setText:v22];
LABEL_6:

    goto LABEL_15;
  }
  id v23 = [a6 unachievedDescriptionForAchievement:a1];
  [v21 setText:v23];

  if (a3)
  {
    id v24 = [a1 progress];
    if (v24)
    {
      id v22 = v24;
      id v25 = [a1 goal];
      if (v25)
      {
        id v26 = v25;
        [v22 _value];
        double v28 = v27;
        [v26 _value];
        double v30 = v28 / v29;
        if (v30 < 2.22044605e-16) {
          double v30 = 0.01;
        }
        id v31 = *(void **)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar);
        *(float *)&double v30 = v30;
        [v31 setProgress:v30];
        [v31 setHidden:0];
        sub_1005BE3B0();

        if ((a7 & 1) == 0) {
          goto LABEL_17;
        }
        goto LABEL_16;
      }
      goto LABEL_6;
    }
  }
LABEL_15:
  [*(id *)(v7 + OBJC_IVAR____TtC10FitnessApp30TrophyCaseAwardDetailBadgeCell_progressBar) setHidden:1];
  uint64_t v32 = self;
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v32 deactivateConstraints:isa];

  if (a7)
  {
LABEL_16:
    id v34 = [a6 friendAchievedTitleForAchievement:a1];
    [v19 setText:v34];

    id v35 = [a6 friendAchievedDescriptionForAchievement:a1];
    [v21 setText:v35];
  }
LABEL_17:
}

uint64_t sub_1005BF350()
{
  return swift_deallocObject();
}

char *sub_1005BF388(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    double v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    double v5 = a1;
    uint64_t v6 = a2[1];
    *((void *)a1 + 1) = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = type metadata accessor for DayIndex();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    uint64_t v12 = v4;
    id v13 = v6;
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_1005BF474(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for DayIndex();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1005BF4F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for DayIndex();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  id v11 = v4;
  id v12 = v5;
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_1005BF58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for DayIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *sub_1005BF630(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for DayIndex();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1005BF6AC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for DayIndex();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1005BF748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005BF75C);
}

uint64_t sub_1005BF75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DayIndex();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005BF80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005BF820);
}

uint64_t sub_1005BF820(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DayIndex();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ActivitySummaryItemView()
{
  uint64_t result = qword_100964070;
  if (!qword_100964070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005BF914()
{
  uint64_t result = type metadata accessor for DayIndex();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1005BF9B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005BF9D4()
{
  if (*v0)
  {
    id v1 = *v0;
    if ([v1 paused])
    {
      uint64_t v2 = static Color.white.getter();
    }
    else
    {
      sub_100006248();
      Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
      Class v5 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
      uint64_t v6 = (objc_class *)type metadata accessor for GradientColors();
      uint64_t v7 = (char *)objc_allocWithZone(v6);
      *(void *)&v7[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
      *(void *)&v7[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v5;
      v16.receiver = v7;
      v16.super_class = v6;
      [super init];
      Class v9 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
      uint64_t v10 = (objc_class *)type metadata accessor for MetricColors();
      uint64_t v11 = (char *)objc_allocWithZone(v10);
      *(void *)&v11[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v8;
      *(void *)&v11[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v9;
      v15.receiver = v11;
      v15.super_class = v10;
      uint64_t v12 = (char *)objc_msgSendSuper2(&v15, "init");
      id v13 = *(id *)&v12[OBJC_IVAR____TtC10FitnessApp12MetricColors_text];

      uint64_t v2 = Color.init(uiColor:)();
    }
    uint64_t v14 = v2;

    return v14;
  }
  else
  {
    return static Color.secondary.getter();
  }
}

void sub_1005BFB90()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
  Class v5 = self;
  NSString v6 = String._bridgeToObjectiveC()();
  static Locale.autoupdatingCurrent.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v8 = [v5 dateFormatFromTemplate:v6 options:0 locale:isa];

  [v4 setDateFormat:v8];
  qword_100998590 = (uint64_t)v4;
}

uint64_t sub_1005BFCF4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = static VerticalAlignment.center.getter();
  sub_1005C0068(a1, (uint64_t)v39);
  *(_OWORD *)((char *)&v41[6] + 7) = v39[6];
  *(_OWORD *)((char *)&v41[5] + 7) = v39[5];
  *(_OWORD *)((char *)&v41[2] + 7) = v39[2];
  *(_OWORD *)((char *)&v41[1] + 7) = v39[1];
  *(_OWORD *)((char *)&v41[7] + 7) = v40[0];
  v41[8] = *(_OWORD *)((char *)v40 + 9);
  *(_OWORD *)((char *)&v41[3] + 7) = v39[3];
  *(_OWORD *)((char *)&v41[4] + 7) = v39[4];
  *(_OWORD *)((char *)v41 + 7) = v39[0];
  long long v35 = v41[5];
  long long v36 = v41[6];
  long long v37 = v41[7];
  long long v38 = *(_OWORD *)((char *)v40 + 9);
  long long v31 = v41[1];
  long long v32 = v41[2];
  long long v33 = v41[3];
  long long v34 = v41[4];
  char v42 = 0;
  uint64_t v27 = v8;
  uint64_t v28 = 0x4020000000000000;
  char v29 = 0;
  long long v30 = v41[0];
  static Alignment.leading.getter();
  sub_1004DE54C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v43, 0.0, 1, 0.0, 1);
  sub_1005C1740((uint64_t)v39);
  sub_1005C0F80((uint64_t)a1, v48);
  uint64_t v25 = *((void *)&v48[0] + 1);
  uint64_t v26 = *(void *)&v48[0];
  long long v9 = v48[1];
  char v10 = v48[2];
  static Font.footnote.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  uint64_t v11 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v7) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  memcpy(v44, v43, 0x118uLL);
  memcpy((void *)a2, v43, 0x118uLL);
  char v47 = v10;
  v44[280] = 0;
  *(_DWORD *)(a2 + 313) = *(_DWORD *)v46;
  *(_DWORD *)(a2 + 316) = *(_DWORD *)&v46[3];
  *(_DWORD *)(a2 + 337) = *(_DWORD *)v45;
  *(_DWORD *)(a2 + 340) = *(_DWORD *)&v45[3];
  uint64_t v22 = v25;
  uint64_t v21 = v26;
  *(void *)(a2 + 280) = v26;
  *(void *)(a2 + 288) = v22;
  *(_OWORD *)(a2 + 296) = v9;
  *(unsigned char *)(a2 + 312) = v10;
  *(void *)(a2 + 320) = KeyPath;
  *(void *)(a2 + 328) = v11;
  *(unsigned char *)(a2 + 336) = (_BYTE)v7;
  *(void *)(a2 + 344) = v14;
  *(void *)(a2 + 352) = v16;
  *(void *)(a2 + 360) = v18;
  *(void *)(a2 + 368) = v20;
  *(unsigned char *)(a2 + 376) = 0;
  sub_10050B670((uint64_t)v44);
  sub_1001BB600(v21, v22, v9);
  swift_retain();
  swift_retain();
  sub_1001BB654(v21, v22, v9);
  swift_release();
  swift_release();
  memcpy(v48, v43, 0x118uLL);
  return sub_1005C17C0((uint64_t)v48);
}

uint64_t sub_1005C0068@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AttributedString();
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  if (*a1 && [v11 _wheelchairUse] == (id)2) {
    int v12 = 2;
  }
  else {
    int v12 = 1;
  }
  int v53 = v12;
  uint64_t v13 = self;
  [v13 preferredActivityRingThicknessForDiameter:48.0];
  double v15 = v14;
  [v13 preferredActivityRingInterspacingForDiameter:48.0];
  double v17 = v16;
  if (v11) {
    unsigned int v52 = [v11 paused];
  }
  else {
    unsigned int v52 = 0;
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v51 = v65;
  int v46 = v66;
  uint64_t v50 = v67;
  int v45 = v68;
  uint64_t v48 = v70;
  uint64_t v49 = v69;
  char v47 = v11;
  sub_1005C04F8(v11, (uint64_t)v10);
  uint64_t v20 = Text.init(_:)();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  static Font.title.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  Font.leading(_:)();
  id v44 = a1;
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  char v29 = v28;
  swift_release();
  char v30 = v29 & 1;
  sub_1000A06C0(v20, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t v54 = sub_1005BF9D4();
  uint64_t v31 = Text.foregroundStyle<A>(_:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  LOBYTE(v20) = v36 & 1;
  sub_1000A06C0(v25, v27, v30);
  swift_release();
  swift_bridgeObjectRelease();
  char v37 = v46;
  char v60 = v46;
  char v38 = v45;
  char v59 = v45;
  char v57 = v20;
  char v55 = 1;
  *(_WORD *)(a2 + 9) = v63;
  *(unsigned char *)(a2 + 11) = v64;
  *(_WORD *)(a2 + 29) = v61;
  *(unsigned char *)(a2 + 31) = v62;
  *(_DWORD *)(a2 + 57) = v54;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)((char *)&v54 + 3);
  int v39 = *(_DWORD *)v58;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a2 + 73) = v39;
  int v40 = *(_DWORD *)v56;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v56[3];
  *(_DWORD *)(a2 + 113) = v40;
  LOBYTE(v40) = v55;
  id v41 = v47;
  *(void *)a2 = v47;
  *(unsigned char *)(a2 + 8) = v52;
  *(_DWORD *)(a2 + 12) = 1111490560;
  float v18 = v15;
  *(float *)(a2 + 16) = v18;
  float v19 = v17;
  *(float *)(a2 + 20) = v19;
  *(_WORD *)(a2 + 24) = 2;
  *(unsigned char *)(a2 + 26) = 0;
  *(unsigned char *)(a2 + 27) = v53;
  *(unsigned char *)(a2 + 28) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v51;
  *(unsigned char *)(a2 + 56) = v37;
  *(void *)(a2 + 64) = v50;
  *(unsigned char *)(a2 + 72) = v38;
  *(void *)(a2 + 80) = v49;
  *(void *)(a2 + 88) = v48;
  *(void *)(a2 + 96) = v31;
  *(void *)(a2 + 104) = v33;
  *(unsigned char *)(a2 + 112) = v20;
  *(void *)(a2 + 120) = v35;
  *(void *)(a2 + 128) = 0;
  *(unsigned char *)(a2 + 136) = v40;
  id v42 = v41;
  sub_10008A670(0);
  sub_1000A1750(v31, v33, v20);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v31, v33, v20);

  swift_bridgeObjectRelease();
  return sub_10005E5F8(0);
}

void sub_1005C04F8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for LocalizationFeature();
  uint64_t v85 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100960A18);
  __chkstk_darwin(v8 - 8);
  Swift::String v79 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100960988);
  __chkstk_darwin(v13 - 8);
  long long v81 = (char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000AFA94(&qword_100960990);
  uint64_t v80 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v78 = (uint64_t)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v77 = (uint64_t)v74 - v17;
  uint64_t v18 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for AttributedString();
  uint64_t v84 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v23 = __chkstk_darwin(v22).n128_u64[0];
  long long v83 = (char *)v74 - v24;
  uint64_t v25 = *(void **)(v2 + 8);
  id v26 = [v25 unitManager:v23];
  if (!v26)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v27 = v26;
  uint64_t v86 = a2;
  id v87 = [v26 userActiveEnergyBurnedUnit];

  if (a1)
  {
    uint64_t v76 = v19;
    id v28 = a1;
    if ([v28 paused])
    {
      char v29 = self;
      id v30 = [v28 activeEnergyBurned];
      [v30 doubleValueForUnit:v87];
      double v32 = v31;

      id v33 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v32];
      id v34 = [v29 stringWithNumber:v33 decimalPrecision:1 roundingMode:1];

      if (v34)
      {
        uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v75 = v35;

        id v36 = [v25 localizedShortActiveEnergyUnitString];
        if (v36)
        {
          char v37 = v36;
          uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v40 = v39;

          uint64_t v88 = v38;
          uint64_t v89 = v40;
          v74[1] = sub_1000A06D0();
          uint64_t v41 = StringProtocol.localizedUppercase.getter();
          uint64_t v43 = v42;
          swift_bridgeObjectRelease();
          id v44 = [self mainBundle];
          NSString v45 = String._bridgeToObjectiveC()();
          id v46 = [v44 localizedStringForKey:v45 value:0 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          sub_1000AFA94((uint64_t *)&unk_1009546D0);
          uint64_t v47 = swift_allocObject();
          *(_OWORD *)(v47 + 16) = xmmword_10074E640;
          *(void *)(v47 + 56) = &type metadata for String;
          unint64_t v48 = sub_1000AA64C();
          uint64_t v49 = v75;
          *(void *)(v47 + 32) = v85;
          *(void *)(v47 + 40) = v49;
          *(void *)(v47 + 96) = &type metadata for String;
          *(void *)(v47 + 104) = v48;
          *(void *)(v47 + 64) = v48;
          *(void *)(v47 + 72) = v41;
          *(void *)(v47 + 80) = v43;
          swift_bridgeObjectRetain();
          String.init(format:_:)();
          swift_bridgeObjectRelease();
          AttributeContainer.init()();
          uint64_t v50 = v83;
          AttributedString.init(_:attributes:)();
          uint64_t v51 = v84;
          uint64_t v52 = v76;
          (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v21, v50, v76);
          uint64_t v88 = v41;
          uint64_t v89 = v43;
          uint64_t v53 = type metadata accessor for Locale();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v12, 1, 1, v53);
          sub_1005836FC();
          uint64_t v54 = (uint64_t)v81;
          AttributedStringProtocol.range<A>(of:options:locale:)();
          sub_10008DB18((uint64_t)v12, (uint64_t *)&unk_10095BF60);
          (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v52);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v54, 1, v82) == 1)
          {
            char v55 = &qword_100960988;
            uint64_t v56 = v54;
          }
          else
          {
            uint64_t v64 = v77;
            sub_1000AA6F4(v54, v77);
            uint64_t v65 = v78;
            sub_1005C1878(v64, v78);
            uint64_t KeyPath = swift_getKeyPath();
            __chkstk_darwin(KeyPath);
            v74[-2] = v67;
            swift_getKeyPath();
            unsigned __int8 v68 = v79;
            static Text.Scale.secondary.getter();
            uint64_t v69 = type metadata accessor for Text.Scale();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 1, v69);
            sub_1000A132C((unint64_t *)&qword_1009609A0, &qword_100960990);
            uint64_t v70 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
            sub_1000AA7AC();
            AttributedSubstring.subscript.setter();
            v70(&v88, 0);
            uint64_t v52 = v76;
            sub_10008DB18(v65, &qword_100960990);
            uint64_t v56 = v64;
            char v55 = &qword_100960990;
          }
          sub_10008DB18(v56, v55);
          uint64_t v71 = swift_getKeyPath();
          __chkstk_darwin(v71);
          v74[-2] = v72;
          swift_getKeyPath();
          id v73 = [self systemFontOfSize:UIFontSystemFontDesignRounded weight:20.0 design:UIFontWeightMedium];
          if (v73)
          {
            uint64_t v88 = (uint64_t)v73;
            sub_100232308();
            AttributedString.subscript.setter();

            (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v86, v50, v52);
            return;
          }
          goto LABEL_22;
        }
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        return;
      }
    }

    id v57 = [v28 activeEnergyBurned];
    id v58 = [v28 activeEnergyBurnedGoal];
  }
  else
  {
    id v58 = 0;
    id v57 = 0;
  }
  id v59 = [self systemFontOfSize:UIFontSystemFontDesignRounded weight:20.0 design:UIFontWeightMedium];
  if (!v59)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  char v60 = v59;
  id v61 = sub_100265C24(v57, v58, v25, v59);

  if (v61)
  {
    AttributedString.init(_:)();
    id v62 = v87;
  }
  else
  {
    uint64_t v63 = v85;
    (*(void (**)(char *, void, uint64_t))(v85 + 104))(v7, enum case for LocalizationFeature.workout(_:), v5);
    static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v7, v5);
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
  }
}

double sub_1005C0F80@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v84 = a2;
  uint64_t v85 = type metadata accessor for Calendar.Identifier();
  uint64_t v2 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v4 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for Calendar();
  uint64_t v86 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DayIndex();
  uint64_t v81 = *(void *)(v7 - 8);
  uint64_t v8 = v81;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v69 - v16;
  uint64_t v18 = type metadata accessor for ActivitySummaryItemView();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v76 = v83 + *(int *)(v18 + 24);
  uint64_t v77 = v8 + 16;
  uint64_t v75 = v19;
  ((void (*)(char *))v19)(v10);
  uint64_t v20 = *(void (**)(void))(v2 + 104);
  unsigned int v73 = enum case for Calendar.Identifier.gregorian(_:);
  uint64_t v21 = v85;
  uint64_t v74 = v2 + 104;
  uint64_t v72 = (void (*)(char *, void, uint64_t))v20;
  v20(v4);
  Calendar.init(identifier:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v80 = v4;
  uint64_t v83 = v2 + 8;
  uint64_t v71 = v22;
  v22(v4, v21);
  uint64_t v23 = v82;
  DayIndex.startDate(in:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v86 + 8);
  Swift::String v79 = v6;
  uint64_t v25 = v6;
  uint64_t v26 = v81;
  v86 += 8;
  uint64_t v70 = v24;
  v24(v25, v23);
  uint64_t v27 = v10;
  uint64_t v69 = *(void (**)(char *, uint64_t))(v26 + 8);
  v69(v10, v7);
  Date.init()();
  LOBYTE(v10) = Date.isSameDay(as:)();
  id v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v14, v11);
  uint64_t v81 = v11;
  uint64_t v78 = v12 + 8;
  v28(v17, v11);
  if (v10)
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v29 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    id v34 = [self secondaryLabelColor];
    *(void *)&long long v92 = Color.init(_:)();
    uint64_t v35 = Text.foregroundStyle<A>(_:)();
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40 & 1;
    sub_1000A06C0(v29, v31, v33);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v87 = v35;
    uint64_t v88 = v37;
    uint64_t v89 = v41;
    uint64_t v90 = v39;
    char v91 = 0;
  }
  else
  {
    if (qword_10094AF08 != -1) {
      swift_once();
    }
    uint64_t v42 = (void *)qword_100998590;
    uint64_t v43 = v27;
    v75(v27, v76, v7);
    id v44 = v80;
    uint64_t v45 = v85;
    v72(v80, v73, v85);
    id v46 = v79;
    Calendar.init(identifier:)();
    v71(v44, v45);
    DayIndex.startDate(in:)();
    v70(v46, v23);
    v69(v43, v7);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    v28(v17, v81);
    id v48 = [v42 stringFromDate:isa];

    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v51 = v50;

    *(void *)&long long v92 = v49;
    *((void *)&v92 + 1) = v51;
    sub_1000A06D0();
    uint64_t v52 = Text.init<A>(_:)();
    uint64_t v54 = v53;
    char v56 = v55 & 1;
    id v57 = [self secondaryLabelColor];
    *(void *)&long long v92 = Color.init(_:)();
    uint64_t v58 = Text.foregroundStyle<A>(_:)();
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    uint64_t v64 = v63 & 1;
    sub_1000A06C0(v52, v54, v56);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v87 = v58;
    uint64_t v88 = v60;
    uint64_t v89 = v64;
    uint64_t v90 = v62;
    char v91 = 1;
  }
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v92;
  long long v66 = v93;
  char v67 = v94;
  unsigned __int8 v68 = v84;
  *uint64_t v84 = v92;
  v68[1] = v66;
  *((unsigned char *)v68 + 32) = v67;
  return result;
}

void *sub_1005C1694@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = static Alignment.bottomTrailing.getter();
  uint64_t v5 = v4;
  sub_1005BFCF4(v1, (uint64_t)__src);
  char v6 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  double result = memcpy((void *)(a1 + 16), __src, 0x179uLL);
  *(unsigned char *)(a1 + 400) = v6;
  *(void *)(a1 + 408) = v8;
  *(void *)(a1 + 416) = v10;
  *(void *)(a1 + 424) = v12;
  *(void *)(a1 + 432) = v14;
  *(unsigned char *)(a1 + 440) = 0;
  return result;
}

uint64_t sub_1005C1740(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  char v5 = *(unsigned char *)(a1 + 112);

  sub_10005E5F8(v2);
  sub_1000A06C0(v3, v4, v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005C17C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v4 = *(void *)(a1 + 128);
  char v5 = *(unsigned char *)(a1 + 136);

  sub_10005E5F8(v2);
  sub_1000A06C0(v3, v4, v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005C1844()
{
  return 8;
}

uint64_t sub_1005C1850()
{
  return swift_release();
}

uint64_t sub_1005C1858(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1005C186C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1005C1878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100960990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005C18EC()
{
  return 8;
}

unint64_t sub_1005C1904()
{
  unint64_t result = qword_1009640B0;
  if (!qword_1009640B0)
  {
    sub_1000A1370(&qword_1009640B8);
    sub_1000A132C(&qword_1009640C0, &qword_1009640C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009640B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for IntervalsPowerZoneView()
{
  return &type metadata for IntervalsPowerZoneView;
}

uint64_t sub_1005C19C0()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_1005C19DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PowerZonesAlertZoneType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = *(_OWORD *)v0;
  swift_retain();
  double v6 = COERCE_DOUBLE(PowerMetricsPublisher.currentPower.getter());
  char v8 = v7;
  sub_1000E2384((uint64_t)&v15);
  if (v8) {
    return 0;
  }
  dispatch thunk of PowerZonesAlertTargetZone.type.getter();
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for PowerZonesAlertZoneType.target(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    uint64_t v9 = &v5[*(int *)(sub_1000AFA94(&qword_100964150) + 48)];
    uint64_t v10 = type metadata accessor for TargetZone.ZoneType();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    sub_1005C3CA4();
    return vabdd_f64(v6, v11) <= v1[5];
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1005C3CA4();
  return v14 <= v6 && v13 > v6;
}

uint64_t sub_1005C1BCC()
{
  long long v15 = *v0;
  swift_retain();
  double v1 = COERCE_DOUBLE(PowerMetricsPublisher.currentPower.getter());
  char v3 = v2;
  sub_1000E2384((uint64_t)&v15);
  if (v3) {
    goto LABEL_5;
  }
  sub_1005C3CA4();
  if (v4 < v1) {
    return 1;
  }
  sub_1005C3CA4();
  if (v6 > v1)
  {
LABEL_5:
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    swift_retain();
    double v7 = COERCE_DOUBLE(PowerMetricsPublisher.currentPower.getter());
    char v9 = v8;
    sub_1000E2384((uint64_t)&v15);
    if ((v9 & 1) != 0 || !sub_1005C19DC())
    {
      *(double *)&uint64_t result = 0.0;
    }
    else
    {
      sub_1005C3CA4();
      double v11 = v7 - v10;
      sub_1005C3CA4();
      double v13 = v12;
      sub_1005C3CA4();
      *(double *)&uint64_t result = v11 / (v13 - v14);
    }
  }
  return result;
}

uint64_t sub_1005C1CFC@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_1009640E8);
  __chkstk_darwin(v3 - 8);
  uint64_t v36 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v7 = (char *)&v31 - v6;
  uint64_t v8 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000AFA94(&qword_10095A708);
  uint64_t v12 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  double v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000AFA94(&qword_10095A710);
  __chkstk_darwin(v32);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v31 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v31 - v21;
  id v34 = a1;
  sub_1005C19DC();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Color.RGBColorSpace.sRGB(_:), v8);
  *(void *)&long long v37 = Color.init(_:red:green:blue:opacity:)();
  sub_1000AFA94(&qword_10095A718);
  sub_1003B32E8();
  View.cornerRadius(_:corners:)();
  swift_release();
  if (qword_10094A7D0 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v23 = v33;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v14, v33);
  uint64_t v24 = &v19[*(int *)(v32 + 36)];
  long long v25 = v38;
  *(_OWORD *)uint64_t v24 = v37;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v39;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v23);
  sub_1000AEEC8((uint64_t)v19, (uint64_t)v22, &qword_10095A710);
  *(void *)double v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v26 = sub_1000AFA94(&qword_1009640F0);
  sub_1005C216C(v34, (uint64_t)&v7[*(int *)(v26 + 44)]);
  sub_1000AEF2C((uint64_t)v22, (uint64_t)v16, &qword_10095A710);
  uint64_t v27 = v36;
  sub_1000AEF2C((uint64_t)v7, v36, &qword_1009640E8);
  uint64_t v28 = v35;
  sub_1000AEF2C((uint64_t)v16, v35, &qword_10095A710);
  uint64_t v29 = sub_1000AFA94(&qword_1009640F8);
  sub_1000AEF2C(v27, v28 + *(int *)(v29 + 48), &qword_1009640E8);
  sub_10008DB18((uint64_t)v7, &qword_1009640E8);
  sub_10008DB18((uint64_t)v22, &qword_10095A710);
  sub_10008DB18(v27, &qword_1009640E8);
  return sub_10008DB18((uint64_t)v16, &qword_10095A710);
}

uint64_t sub_1005C216C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v3 = type metadata accessor for PowerZonesAlertZoneType();
  uint64_t v88 = *(void *)(v3 - 8);
  uint64_t v89 = v3;
  __chkstk_darwin(v3);
  uint64_t v87 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100964100);
  uint64_t v93 = *(void *)(v5 - 8);
  uint64_t v94 = v5;
  __chkstk_darwin(v5);
  long long v92 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v90 = (char *)&v79 - v8;
  __chkstk_darwin(v9);
  char v91 = (char *)&v79 - v10;
  uint64_t v85 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100964108);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_100964110);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000AFA94(&qword_100964118);
  __chkstk_darwin(v80);
  uint64_t v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_100964120);
  __chkstk_darwin(v81);
  uint64_t v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000AFA94(&qword_100964128);
  __chkstk_darwin(v83);
  uint64_t v24 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000AFA94(&qword_100964130);
  __chkstk_darwin(v82);
  uint64_t v86 = (uint64_t)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v79 - v27;
  __chkstk_darwin(v29);
  uint64_t v96 = (uint64_t)&v79 - v30;
  *(void *)uint64_t v15 = static HorizontalAlignment.leading.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v31 = (uint64_t)&v15[*(int *)(sub_1000AFA94(&qword_100964138) + 44)];
  id v97 = a1;
  sub_1005C2B58(a1, v31);
  char v32 = static Edge.Set.bottom.getter();
  if (qword_10094A7C8 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_1000AEF2C((uint64_t)v15, (uint64_t)v18, &qword_100964108);
  uint64_t v41 = &v18[*(int *)(v16 + 36)];
  *uint64_t v41 = v32;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_10008DB18((uint64_t)v15, &qword_100964108);
  char v42 = static Edge.Set.leading.getter();
  if (qword_10094AFD0 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  sub_1000AEF2C((uint64_t)v18, (uint64_t)v20, &qword_100964110);
  uint64_t v51 = &v20[*(int *)(v80 + 36)];
  *uint64_t v51 = v42;
  *((void *)v51 + 1) = v44;
  *((void *)v51 + 2) = v46;
  *((void *)v51 + 3) = v48;
  *((void *)v51 + 4) = v50;
  v51[40] = 0;
  sub_10008DB18((uint64_t)v18, &qword_100964110);
  sub_1000AEF2C((uint64_t)v20, (uint64_t)v22, &qword_100964118);
  *(_OWORD *)&v22[*(int *)(v81 + 36)] = xmmword_1007619C0;
  sub_10008DB18((uint64_t)v20, &qword_100964118);
  sub_1005C19DC();
  uint64_t v52 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 104);
  uint64_t v54 = v85;
  v53(v12, enum case for Color.RGBColorSpace.sRGB(_:), v85);
  uint64_t v55 = Color.init(_:red:green:blue:opacity:)();
  sub_1000AEF2C((uint64_t)v22, (uint64_t)v24, &qword_100964120);
  *(void *)&v24[*(int *)(v83 + 36)] = v55;
  sub_10008DB18((uint64_t)v22, &qword_100964120);
  sub_1000AEF2C((uint64_t)v24, (uint64_t)v28, &qword_100964128);
  *(void *)&v28[*(int *)(v82 + 36)] = 0x3FF0000000000000;
  sub_10008DB18((uint64_t)v24, &qword_100964128);
  sub_1000AEEC8((uint64_t)v28, v96, &qword_100964130);
  if (qword_10094A7D8 != -1) {
    swift_once();
  }
  uint64_t v84 = qword_1009979C0;
  uint64_t v56 = sub_1005C1BCC();
  char v58 = v57;
  sub_1005C19DC();
  v53(v12, v52, v54);
  uint64_t v59 = Color.init(_:red:green:blue:opacity:)();
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  uint64_t v98 = v56;
  char v99 = v58 & 1;
  uint64_t v100 = v59;
  uint64_t v101 = 0x4018000000000000;
  uint64_t v102 = v60;
  uint64_t v103 = 0x4014000000000000;
  uint64_t v61 = v87;
  dispatch thunk of PowerZonesAlertTargetZone.type.getter();
  uint64_t v63 = v88;
  uint64_t v62 = v89;
  if ((*(unsigned int (**)(char *, uint64_t))(v88 + 88))(v61, v89) == enum case for PowerZonesAlertZoneType.target(_:))
  {
    (*(void (**)(char *, uint64_t))(v63 + 96))(v61, v62);
    uint64_t v64 = &v61[*(int *)(sub_1000AFA94(&qword_100964150) + 48)];
    uint64_t v65 = type metadata accessor for TargetZone.ZoneType();
    (*(void (**)(char *, uint64_t))(*(void *)(v65 - 8) + 8))(v64, v65);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v62);
  }
  sub_1005C3C50();
  long long v66 = v90;
  View.isHidden(_:defaultAccessibilityHidden:)();
  swift_release();
  uint64_t v68 = v93;
  uint64_t v67 = v94;
  uint64_t v69 = v91;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v91, v66, v94);
  uint64_t v70 = v96;
  uint64_t v71 = v86;
  sub_1000AEF2C(v96, v86, &qword_100964130);
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  unsigned int v73 = v92;
  v72(v92, v69, v67);
  uint64_t v74 = v95;
  sub_1000AEF2C(v71, v95, &qword_100964130);
  uint64_t v75 = sub_1000AFA94(&qword_100964148);
  uint64_t v76 = v74 + *(int *)(v75 + 48);
  *(void *)uint64_t v76 = v84;
  *(unsigned char *)(v76 + 8) = 0;
  v72((char *)(v74 + *(int *)(v75 + 64)), v73, v67);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v68 + 8);
  v77(v69, v67);
  sub_10008DB18(v70, &qword_100964130);
  v77(v73, v67);
  return sub_10008DB18(v71, &qword_100964130);
}

uint64_t sub_1005C2B58@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v31 = sub_1000AFA94(&qword_10095A780);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_10095A788);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v30 = (char *)&v29 - v10;
  uint64_t v11 = sub_1000AFA94(&qword_100964158);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100964160);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v29 - v19;
  *(void *)uint64_t v13 = static VerticalAlignment.lastTextBaseline.getter();
  *((void *)v13 + 1) = 0x4008000000000000;
  v13[16] = 0;
  uint64_t v21 = sub_1000AFA94(&qword_100964168);
  sub_1005C2F0C(a1, &v13[*(int *)(v21 + 44)]);
  sub_1000AEF2C((uint64_t)v13, (uint64_t)v17, &qword_100964158);
  *(_OWORD *)&v17[*(int *)(v15 + 44)] = xmmword_10076E480;
  sub_10008DB18((uint64_t)v13, &qword_100964158);
  sub_1000AEEC8((uint64_t)v17, (uint64_t)v20, &qword_100964160);
  *(void *)uint64_t v4 = static VerticalAlignment.firstTextBaseline.getter();
  *((void *)v4 + 1) = 0x4010000000000000;
  v4[16] = 0;
  uint64_t v22 = sub_1000AFA94(&qword_10095A798);
  sub_1005C3744((uint64_t)a1, (uint64_t)&v4[*(int *)(v22 + 44)]);
  sub_1000A132C(&qword_10095A7A0, &qword_10095A780);
  View.metricDescriptionFont(multiline:)();
  sub_10008DB18((uint64_t)v4, &qword_10095A780);
  uint64_t v23 = v30;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v30, v8, v5);
  sub_1000AEF2C((uint64_t)v20, (uint64_t)v17, &qword_100964160);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v24(v8, v23, v5);
  uint64_t v25 = v32;
  sub_1000AEF2C((uint64_t)v17, v32, &qword_100964160);
  uint64_t v26 = sub_1000AFA94(&qword_100964170);
  v24((char *)(v25 + *(int *)(v26 + 48)), v8, v5);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27(v23, v5);
  sub_10008DB18((uint64_t)v20, &qword_100964160);
  v27(v8, v5);
  return sub_10008DB18((uint64_t)v17, &qword_100964160);
}

uint64_t sub_1005C2F0C@<X0>(long long *a1@<X0>, char *a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = type metadata accessor for Image.Scale();
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  __chkstk_darwin(v3);
  uint64_t v72 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000AFA94(&qword_10095B428);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v68 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AFA94(&qword_10095B430);
  __chkstk_darwin(v67);
  uint64_t v75 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v70 = (uint64_t)&v60 - v8;
  uint64_t v62 = type metadata accessor for LocalizationFeature();
  uint64_t v9 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for NumberFormatStyleConfiguration.Precision();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000AFA94(&qword_10095B438);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v60 - v20;
  uint64_t v22 = sub_1000AFA94(&qword_10095B440);
  uint64_t v65 = *(void *)(v22 - 8);
  uint64_t v66 = v22;
  __chkstk_darwin(v22);
  uint64_t v64 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v63 = (char *)&v60 - v25;
  long long v82 = *a1;
  swift_retain();
  uint64_t v26 = PowerMetricsPublisher.currentPower.getter();
  char v28 = v27;
  sub_1000E2384((uint64_t)&v82);
  if (v28)
  {
    uint64_t v32 = v62;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for LocalizationFeature.workout(_:), v62);
    uint64_t v30 = static Localization.workoutUILocalizedString(_:feature:)();
    uint64_t v31 = v33;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v32);
  }
  else
  {
    uint64_t v77 = v26;
    static Locale.autoupdatingCurrent.getter();
    sub_1003ED738();
    FloatingPointFormatStyle.init(locale:)();
    static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
    FloatingPointFormatStyle.precision(_:)();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v61);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v16 + 8);
    v29(v18, v15);
    sub_1000A132C((unint64_t *)&qword_10095B460, &qword_10095B438);
    BinaryFloatingPoint.formatted<A>(_:)();
    v29(v21, v15);
    uint64_t v30 = v78;
    uint64_t v31 = v79;
  }
  uint64_t v78 = v30;
  uint64_t v79 = v31;
  sub_1000A06D0();
  uint64_t v34 = Text.init<A>(_:)();
  uint64_t v36 = v35;
  uint64_t v78 = v34;
  uint64_t v79 = v35;
  char v38 = v37 & 1;
  char v80 = v37 & 1;
  uint64_t v81 = v39;
  uint64_t v40 = v63;
  View.metricValueFont(includesSlashes:smallCaps:)();
  sub_1000A06C0(v34, v36, v38);
  swift_bridgeObjectRelease();
  uint64_t v78 = Image.init(systemName:)();
  uint64_t v41 = v68;
  View.metricUnitFont()();
  swift_release();
  uint64_t v43 = v72;
  uint64_t v42 = v73;
  uint64_t v44 = v74;
  (*(void (**)(char *, void, uint64_t))(v73 + 104))(v72, enum case for Image.Scale.small(_:), v74);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = (uint64_t)v75;
  uint64_t v47 = (uint64_t *)&v75[*(int *)(v67 + 36)];
  uint64_t v48 = sub_1000AFA94(&qword_100959E78);
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))((char *)v47 + *(int *)(v48 + 28), v43, v44);
  *uint64_t v47 = KeyPath;
  uint64_t v49 = v69;
  uint64_t v50 = v71;
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v46, v41, v71);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v41, v50);
  uint64_t v51 = v70;
  sub_1000AEEC8(v46, v70, &qword_10095B430);
  uint64_t v53 = v64;
  uint64_t v52 = v65;
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  uint64_t v55 = v66;
  v54(v64, v40, v66);
  sub_1000AEF2C(v51, v46, &qword_10095B430);
  uint64_t v56 = v76;
  v54(v76, v53, v55);
  uint64_t v57 = sub_1000AFA94(&qword_100964178);
  sub_1000AEF2C(v46, (uint64_t)&v56[*(int *)(v57 + 48)], &qword_10095B430);
  sub_10008DB18(v51, &qword_10095B430);
  char v58 = *(void (**)(char *, uint64_t))(v52 + 8);
  v58(v40, v55);
  sub_10008DB18(v46, &qword_10095B430);
  return ((uint64_t (*)(char *, uint64_t))v58)(v53, v55);
}

uint64_t sub_1005C3744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v2 = sub_1000AFA94(&qword_100959E78);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Image.Scale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100959E80);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000AFA94(&qword_10095A7B0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v38 = (uint64_t)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v39 = (uint64_t)&v38 - v18;
  uint64_t v19 = Image.init(_internalSystemName:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.small(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *uint64_t v5 = KeyPath;
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v13 + *(int *)(v11 + 44), &qword_100959E78);
  *uint64_t v13 = v19;
  swift_retain();
  sub_10008DB18((uint64_t)v5, &qword_100959E78);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  uint64_t v21 = static VerticalAlignment.firstTextBaseline.getter();
  uint64_t v22 = v38;
  sub_1000AEF2C((uint64_t)v13, v38, &qword_100959E80);
  uint64_t v23 = (uint64_t *)(v22 + *(int *)(v15 + 44));
  uint64_t *v23 = v21;
  v23[1] = (uint64_t)sub_1003B31A8;
  v23[2] = 0;
  sub_10008DB18((uint64_t)v13, &qword_100959E80);
  uint64_t v24 = v39;
  sub_1000AEEC8(v22, v39, &qword_10095A7B0);
  uint64_t v42 = PowerZonesAlertTargetZone.displayString(formattingManager:activityType:)();
  uint64_t v43 = v25;
  sub_1000A06D0();
  uint64_t v26 = StringProtocol.localizedUppercase.getter();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v42 = v26;
  uint64_t v43 = v28;
  uint64_t v29 = Text.init<A>(_:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  LOBYTE(v6) = v34 & 1;
  sub_1000AEF2C(v24, v22, &qword_10095A7B0);
  uint64_t v35 = v41;
  sub_1000AEF2C(v22, v41, &qword_10095A7B0);
  uint64_t v36 = v35 + *(int *)(sub_1000AFA94(qword_10095A7B8) + 48);
  *(void *)uint64_t v36 = v29;
  *(void *)(v36 + 8) = v31;
  *(unsigned char *)(v36 + 16) = v6;
  *(void *)(v36 + 24) = v33;
  sub_1000A1750(v29, v31, v6);
  swift_bridgeObjectRetain();
  sub_10008DB18(v24, &qword_10095A7B0);
  sub_1000A06C0(v29, v31, v6);
  swift_bridgeObjectRelease();
  return sub_10008DB18(v22, &qword_10095A7B0);
}

uint64_t sub_1005C3B48()
{
  uint64_t v1 = sub_1000AFA94(&qword_1009640D0);
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v4 = v0[1];
  v8[0] = *v0;
  v8[1] = v4;
  v8[2] = v0[2];
  *uint64_t v3 = static Alignment.center.getter();
  v3[1] = v5;
  uint64_t v6 = sub_1000AFA94(&qword_1009640D8);
  sub_1005C1CFC(v8, (uint64_t)v3 + *(int *)(v6 + 44));
  sub_1000A132C(&qword_1009640E0, &qword_1009640D0);
  View.metricRow(padding:)();
  return sub_10008DB18((uint64_t)v3, &qword_1009640D0);
}

unint64_t sub_1005C3C50()
{
  unint64_t result = qword_100964140;
  if (!qword_100964140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964140);
  }
  return result;
}

uint64_t sub_1005C3CA4()
{
  uint64_t v0 = type metadata accessor for PowerZonesAlertZoneType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (unint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  dispatch thunk of PowerZonesAlertTargetZone.type.getter();
  if ((*(unsigned int (**)(unint64_t *, uint64_t))(v1 + 88))(v3, v0) != enum case for PowerZonesAlertZoneType.automatic(_:))
  {
    (*(void (**)(unint64_t *, uint64_t))(v1 + 8))(v3, v0);
    return dispatch thunk of PowerZonesAlertTargetZone.applicableRange.getter();
  }
  (*(void (**)(unint64_t *, uint64_t))(v1 + 96))(v3, v0);
  unint64_t v4 = *v3;
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v5 = PowerMetricsPublisher.livePowerZones.getter();
  swift_release();
  if (!v5) {
    return dispatch thunk of PowerZonesAlertTargetZone.applicableRange.getter();
  }
  uint64_t v6 = dispatch thunk of LiveZones.zones.getter();
  uint64_t result = swift_release();
  if ((v6 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_7:
    swift_bridgeObjectRelease();
    dispatch thunk of Zone.logicalSpan.getter();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1005C3EA4()
{
  return swift_getOpaqueTypeConformance2();
}

char *sub_1005C3F24(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[6];
    *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for AttributedString();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    swift_retain();
    v14(v10, v11, v12);
    v14(&a1[a3[7]], &a2[a3[7]], v12);
    uint64_t v15 = a3[8];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v15], 1, v12))
    {
      uint64_t v18 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v14(v16, v17, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    }
    uint64_t v19 = a3[10];
    *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = *(void *)&a2[v19];
    uint64_t v23 = *((void *)v21 + 1);
    char v24 = v21[16];
    swift_retain();
    sub_100091494(v22, v23, v24);
    *(void *)uint64_t v20 = v22;
    *((void *)v20 + 1) = v23;
    v20[16] = v24;
  }
  return a1;
}

uint64_t sub_1005C41AC(uint64_t a1, int *a2)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(a1 + a2[7], v6);
  uint64_t v9 = a1 + a2[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_release();
  uint64_t v10 = a1 + a2[10];
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  char v13 = *(unsigned char *)(v10 + 16);

  return sub_1000917F8(v11, v12, v13);
}

char *sub_1005C4334(char *a1, char *a2, int *a3)
{
  sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_retain();
  v12(v8, v9, v10);
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    uint64_t v16 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)&a2[v17];
  uint64_t v21 = *((void *)v19 + 1);
  char v22 = v19[16];
  swift_retain();
  sub_100091494(v20, v21, v22);
  *(void *)uint64_t v18 = v20;
  *((void *)v18 + 1) = v21;
  v18[16] = v22;
  return a1;
}

char *sub_1005C456C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_retain();
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v31 = a3;
  uint64_t v13 = a3[8];
  uint64_t v14 = &a2[v13];
  uint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v30 = &a1[v13];
  int v16 = v15();
  int v17 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v30, v14, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
      goto LABEL_14;
    }
    size_t v18 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    uint64_t v19 = v30;
  }
  else
  {
    if (!v17)
    {
      v12(v30, v14, v10);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
    size_t v18 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    uint64_t v19 = v30;
  }
  memcpy(v19, v14, v18);
LABEL_14:
  *(void *)&a1[v31[9]] = *(void *)&a2[v31[9]];
  swift_retain();
  swift_release();
  uint64_t v20 = v31[10];
  uint64_t v21 = &a1[v20];
  char v22 = &a2[v20];
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *((void *)v22 + 1);
  char v25 = v22[16];
  sub_100091494(*(void *)v22, v24, v25);
  uint64_t v26 = *(void *)v21;
  uint64_t v27 = *((void *)v21 + 1);
  *(void *)uint64_t v21 = v23;
  *((void *)v21 + 1) = v24;
  char v28 = v21[16];
  v21[16] = v25;
  sub_1000917F8(v26, v27, v28);
  return a1;
}

char *sub_1005C4880(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v13(&a1[a3[7]], &a2[a3[7]], v11);
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  int v16 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
  {
    uint64_t v17 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  uint64_t v18 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  return a1;
}

char *sub_1005C4AA4(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_release();
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  v13(&a1[a3[7]], &a2[a3[7]], v11);
  uint64_t v30 = a3;
  uint64_t v14 = a3[8];
  uint64_t v15 = &a2[v14];
  int v16 = *(uint64_t (**)(void))(v12 + 48);
  uint64_t v29 = &a1[v14];
  int v17 = v16();
  int v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v29, v15, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
      goto LABEL_13;
    }
    size_t v19 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    uint64_t v20 = v29;
  }
  else
  {
    if (!v18)
    {
      v13(v29, v15, v11);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v29, v11);
    size_t v19 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_10095BFD0) - 8) + 64);
    uint64_t v20 = v29;
  }
  memcpy(v20, v15, v19);
LABEL_13:
  *(void *)&a1[v30[9]] = *(void *)&a2[v30[9]];
  swift_release();
  uint64_t v21 = v30[10];
  char v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  char v24 = v23[16];
  uint64_t v25 = *(void *)v22;
  uint64_t v26 = *((void *)v22 + 1);
  *(_OWORD *)char v22 = *(_OWORD *)v23;
  char v27 = v22[16];
  v22[16] = v24;
  sub_1000917F8(v25, v26, v27);
  return a1;
}

uint64_t sub_1005C4DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005C4DB4);
}

uint64_t sub_1005C4DB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for AttributedString();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[6];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
    int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_1005C4F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005C4F50);
}

uint64_t sub_1005C4F50(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5]) = (a2 - 1);
    return result;
  }
  uint64_t v13 = type metadata accessor for AttributedString();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[8];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for CompetitionRowView()
{
  uint64_t result = qword_1009641D8;
  if (!qword_1009641D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005C5124()
{
  sub_1000DD1AC(319, (unint64_t *)&qword_10094C600, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    type metadata accessor for AttributedString();
    if (v1 <= 0x3F)
    {
      sub_1000DD1AC(319, (unint64_t *)&qword_1009551B0, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1005C52A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005C52C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = type metadata accessor for CompetitionRowView();
  uint64_t v12 = a1 + *(int *)(v11 + 40);
  unint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  int v15 = *(unsigned __int8 *)(v12 + 16);
  uint64_t v39 = *(void *)(a1 + *(int *)(v11 + 20));
  swift_retain();
  sub_100092088((uint64_t)v10);
  unsigned int v16 = sub_100092DA4((uint64_t)v10, v13, v14, v15);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v10, v4);
  if (v16 > 1)
  {
    uint64_t v20 = 0x402E000000000000;
    uint64_t v21 = 0x4008000000000000;
  }
  else
  {
    sub_100092088((uint64_t)v10);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DynamicTypeSize.xxLarge(_:), v4);
    char v18 = static DynamicTypeSize.< infix(_:_:)();
    v17(v7, v4);
    v17(v10, v4);
    BOOL v19 = (v18 & 1) == 0;
    uint64_t v20 = 0x4014000000000000;
    if (v19) {
      uint64_t v21 = 0x4014000000000000;
    }
    else {
      uint64_t v21 = 0x4000000000000000;
    }
  }
  char v22 = static Edge.Set.all.getter();
  uint64_t v23 = static HorizontalAlignment.leading.getter();
  sub_1005C571C(a1, (uint64_t)v40);
  *(_OWORD *)&v42[39] = v40[2];
  *(_OWORD *)&v42[23] = v40[1];
  *(_OWORD *)&v42[103] = v40[6];
  *(_OWORD *)&v42[87] = v40[5];
  *(_OWORD *)&v42[119] = v40[7];
  *(_OWORD *)&v42[135] = v41;
  *(_OWORD *)&v42[55] = v40[3];
  *(_OWORD *)&v42[71] = v40[4];
  *(_OWORD *)&v42[7] = v40[0];
  long long v24 = *(_OWORD *)&v42[112];
  *(_OWORD *)&v45[113] = *(_OWORD *)&v42[112];
  long long v25 = *(_OWORD *)&v42[96];
  *(_OWORD *)&v45[97] = *(_OWORD *)&v42[96];
  long long v26 = *(_OWORD *)&v42[128];
  *(_OWORD *)&v45[129] = *(_OWORD *)&v42[128];
  long long v27 = *(_OWORD *)&v42[32];
  *(_OWORD *)&v45[33] = *(_OWORD *)&v42[32];
  long long v28 = *(_OWORD *)&v42[48];
  *(_OWORD *)&v45[49] = *(_OWORD *)&v42[48];
  long long v29 = *(_OWORD *)&v42[64];
  *(_OWORD *)&v45[65] = *(_OWORD *)&v42[64];
  long long v30 = *(_OWORD *)&v42[80];
  *(_OWORD *)&v45[81] = *(_OWORD *)&v42[80];
  long long v31 = *(_OWORD *)v42;
  *(_OWORD *)&v45[1] = *(_OWORD *)v42;
  long long v32 = *(_OWORD *)&v42[16];
  *(_OWORD *)&v45[17] = *(_OWORD *)&v42[16];
  *(_OWORD *)((char *)&v47[4] + 7) = *(_OWORD *)&v45[48];
  *(_OWORD *)((char *)&v47[3] + 7) = *(_OWORD *)&v45[32];
  *(_OWORD *)((char *)&v47[7] + 7) = *(_OWORD *)&v45[96];
  *(_OWORD *)((char *)&v47[8] + 7) = *(_OWORD *)&v45[112];
  char v43 = 0;
  v44[0] = v23;
  v44[1] = 0;
  v45[0] = 0;
  *(void *)&v45[144] = *((void *)&v41 + 1);
  *(_OWORD *)((char *)&v47[9] + 7) = *(_OWORD *)&v45[128];
  *(void *)((char *)&v47[10] + 7) = *((void *)&v41 + 1);
  *(_OWORD *)((char *)&v47[5] + 7) = *(_OWORD *)&v45[64];
  *(_OWORD *)((char *)&v47[6] + 7) = *(_OWORD *)&v45[80];
  *(_OWORD *)((char *)v47 + 7) = (unint64_t)v23;
  *(_OWORD *)((char *)&v47[1] + 7) = *(_OWORD *)v45;
  *(_OWORD *)((char *)&v47[2] + 7) = *(_OWORD *)&v45[16];
  long long v33 = v47[6];
  *(_OWORD *)(a2 + 161) = v47[7];
  long long v34 = v47[9];
  *(_OWORD *)(a2 + 177) = v47[8];
  *(_OWORD *)(a2 + 193) = v34;
  *(_OWORD *)(a2 + 208) = *(_OWORD *)((char *)&v47[9] + 15);
  long long v35 = v47[2];
  *(_OWORD *)(a2 + 97) = v47[3];
  long long v36 = v47[5];
  *(_OWORD *)(a2 + 113) = v47[4];
  *(_OWORD *)(a2 + 129) = v36;
  *(_OWORD *)(a2 + 145) = v33;
  long long v37 = v47[1];
  *(_OWORD *)(a2 + 49) = v47[0];
  *(_OWORD *)(a2 + 65) = v37;
  *(_OWORD *)(a2 + 81) = v35;
  long long v57 = v25;
  long long v58 = v24;
  *(_OWORD *)uint64_t v59 = v26;
  long long v53 = v27;
  long long v54 = v28;
  long long v55 = v29;
  long long v56 = v30;
  long long v51 = v31;
  char v48 = 0;
  char v46 = 0;
  *(void *)a2 = v39;
  *(unsigned char *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = v20;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 224) = 0;
  *(unsigned char *)(a2 + 232) = 0;
  v49[0] = v23;
  v49[1] = 0;
  char v50 = 0;
  *(void *)&v59[15] = *(void *)&v42[143];
  long long v52 = v32;
  swift_retain();
  sub_1005C6004((uint64_t)v44);
  sub_1005C60B4((uint64_t)v49);
  return swift_release();
}

uint64_t sub_1005C571C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  __chkstk_darwin(v4 - 8);
  uint64_t v82 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v92 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v74 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v73 - v9;
  char v11 = sub_1005C5C28();
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  if (v11)
  {
    uint64_t v21 = type metadata accessor for CompetitionRowView();
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v10, a1 + *(int *)(v21 + 24), v6);
    uint64_t v12 = Text.init(_:)();
    uint64_t v13 = v22;
    uint64_t v15 = v23;
    uint64_t v14 = v24 & 1;
    unsigned __int8 v25 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    uint64_t v17 = v26;
    uint64_t v18 = v27;
    uint64_t v19 = v28;
    uint64_t v20 = v29;
    uint64_t v16 = v25;
  }
  uint64_t v83 = v20;
  uint64_t v84 = v12;
  uint64_t v85 = v16;
  uint64_t v86 = v19;
  uint64_t v87 = v18;
  uint64_t v88 = v17;
  uint64_t v89 = v14;
  uint64_t v90 = v15;
  uint64_t v91 = v13;
  long long v30 = (int *)type metadata accessor for CompetitionRowView();
  uint64_t v31 = a1 + v30[7];
  uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
  v76(v10, v31, v6);
  uint64_t v77 = v10;
  uint64_t v32 = Text.init(_:)();
  uint64_t v34 = v33;
  uint64_t v35 = v6;
  char v37 = v36 & 1;
  uint64_t v38 = *(void *)(a1 + v30[9]);
  uint64_t v93 = v38;
  swift_retain();
  uint64_t v39 = Text.foregroundStyle<A>(_:)();
  uint64_t v79 = v40;
  uint64_t v80 = v39;
  int v78 = v41;
  uint64_t v81 = v42;
  LOBYTE(v41) = v37;
  uint64_t v43 = v35;
  sub_1000A06C0(v32, v34, v41);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = a1 + v30[8];
  uint64_t v45 = v82;
  sub_1005C6164(v44, v82);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v45, 1, v35) == 1)
  {
    sub_10008DB18(v45, (uint64_t *)&unk_10095BFD0);
    uint64_t v82 = 0;
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v75 = 0;
  }
  else
  {
    uint64_t v46 = v92;
    uint64_t v47 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v74, v45, v43);
    v76(v77, (uint64_t)v47, v43);
    uint64_t v48 = Text.init(_:)();
    uint64_t v50 = v49;
    uint64_t v51 = v43;
    char v53 = v52 & 1;
    uint64_t v93 = v38;
    swift_retain();
    uint64_t v82 = Text.foregroundStyle<A>(_:)();
    uint64_t v76 = v55;
    uint64_t v77 = v54;
    uint64_t v75 = v56 & 1;
    sub_1000A06C0(v48, v50, v53);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v51);
  }
  char v57 = v78 & 1;
  LOBYTE(v93) = v78 & 1;
  uint64_t v58 = v84;
  *(void *)a2 = v84;
  uint64_t v59 = v58;
  uint64_t v60 = v91;
  *(void *)(a2 + 8) = v91;
  uint64_t v61 = v60;
  LOBYTE(v60) = v89;
  *(void *)(a2 + 16) = v89;
  char v62 = v60;
  uint64_t v63 = v90;
  *(void *)(a2 + 24) = v90;
  *(void *)(a2 + 32) = v85;
  *(void *)(a2 + 40) = v88;
  *(void *)(a2 + 48) = v87;
  uint64_t v65 = v82;
  uint64_t v64 = v83;
  *(void *)(a2 + 56) = v86;
  *(void *)(a2 + 64) = v64;
  *(unsigned char *)(a2 + 72) = 0;
  uint64_t v67 = v79;
  uint64_t v66 = v80;
  *(void *)(a2 + 80) = v80;
  *(void *)(a2 + 88) = v67;
  *(unsigned char *)(a2 + 96) = v57;
  *(void *)(a2 + 104) = v81;
  *(void *)(a2 + 112) = v65;
  uint64_t v69 = (uint64_t)v76;
  uint64_t v68 = (uint64_t)v77;
  uint64_t v70 = v75;
  *(void *)(a2 + 120) = v77;
  *(void *)(a2 + 128) = v70;
  *(void *)(a2 + 136) = v69;
  uint64_t v71 = v59;
  sub_1000A17A4(v59, v61, v62, v63);
  sub_1000A1750(v66, v67, v57);
  swift_bridgeObjectRetain();
  sub_1000A17A4(v65, v68, v70, v69);
  sub_1000A1760(v65, v68, v70, v69);
  sub_1000A06C0(v66, v67, v57);
  swift_bridgeObjectRelease();
  return sub_1000A1760(v71, v91, v89, v90);
}

uint64_t sub_1005C5C28()
{
  uint64_t v1 = type metadata accessor for CompetitionRowView();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = v0;
  sub_100092088((uint64_t)&v17 - v9);
  uint64_t v18 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v18(v7, enum case for DynamicTypeSize.xxLarge(_:), v4);
  sub_1005C61CC();
  char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  v13(v10, v4);
  sub_10058363C(v11, (uint64_t)v3);
  if (v12)
  {
    sub_1005836A0((uint64_t)v3);
    char v14 = 0;
  }
  else
  {
    sub_100092088((uint64_t)v10);
    v18(v7, enum case for DynamicTypeSize.xxxLarge(_:), v4);
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    v13(v7, v4);
    v13(v10, v4);
    sub_1005836A0((uint64_t)v3);
    char v14 = v15 ^ 1;
  }
  return v14 & 1;
}

double sub_1005C5E74@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = static VerticalAlignment.center.getter();
  sub_1005C52C0(v2, (uint64_t)v13);
  *(_OWORD *)((char *)&v15[11] + 7) = v13[11];
  *(_OWORD *)((char *)&v15[12] + 7) = v13[12];
  *(_OWORD *)((char *)&v15[13] + 7) = v14[0];
  v15[14] = *(_OWORD *)((char *)v14 + 9);
  *(_OWORD *)((char *)&v15[7] + 7) = v13[7];
  *(_OWORD *)((char *)&v15[8] + 7) = v13[8];
  *(_OWORD *)((char *)&v15[9] + 7) = v13[9];
  *(_OWORD *)((char *)&v15[10] + 7) = v13[10];
  *(_OWORD *)((char *)&v15[3] + 7) = v13[3];
  *(_OWORD *)((char *)&v15[4] + 7) = v13[4];
  *(_OWORD *)((char *)&v15[5] + 7) = v13[5];
  *(_OWORD *)((char *)&v15[6] + 7) = v13[6];
  *(_OWORD *)((char *)v15 + 7) = v13[0];
  *(_OWORD *)((char *)&v15[1] + 7) = v13[1];
  *(_OWORD *)((char *)&v15[2] + 7) = v13[2];
  long long v5 = v15[10];
  *(_OWORD *)(a1 + 193) = v15[11];
  long long v6 = v15[13];
  *(_OWORD *)(a1 + 209) = v15[12];
  *(_OWORD *)(a1 + 225) = v6;
  *(_OWORD *)(a1 + 241) = v15[14];
  long long v7 = v15[6];
  *(_OWORD *)(a1 + 129) = v15[7];
  long long v8 = v15[9];
  *(_OWORD *)(a1 + 145) = v15[8];
  *(_OWORD *)(a1 + 161) = v8;
  *(_OWORD *)(a1 + 177) = v5;
  long long v9 = v15[2];
  *(_OWORD *)(a1 + 65) = v15[3];
  long long v10 = v15[5];
  *(_OWORD *)(a1 + 81) = v15[4];
  *(_OWORD *)(a1 + 97) = v10;
  *(_OWORD *)(a1 + 113) = v7;
  double result = *(double *)v15;
  long long v12 = v15[1];
  *(_OWORD *)(a1 + 17) = v15[0];
  *(_OWORD *)(a1 + 33) = v12;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 49) = v9;
  return result;
}

uint64_t sub_1005C6004(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 136);
  uint64_t v6 = *(void *)(a1 + 144);
  uint64_t v7 = *(void *)(a1 + 152);
  uint64_t v8 = *(void *)(a1 + 160);
  sub_1000A17A4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48));
  sub_1000A1750(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_1000A17A4(v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1005C60B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 136);
  uint64_t v6 = *(void *)(a1 + 144);
  uint64_t v7 = *(void *)(a1 + 152);
  uint64_t v8 = *(void *)(a1 + 160);
  sub_1000A1760(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48));
  sub_1000A06C0(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_1000A1760(v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1005C6164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095BFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005C61CC()
{
  unint64_t result = qword_100960410;
  if (!qword_100960410)
  {
    type metadata accessor for DynamicTypeSize();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100960410);
  }
  return result;
}

unint64_t sub_1005C6228()
{
  unint64_t result = qword_100964228;
  if (!qword_100964228)
  {
    sub_1000A1370(&qword_100964230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964228);
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyDevice()
{
  return &type metadata for LegacyDevice;
}

Swift::Int sub_1005C6294()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + 48));
  Hasher._combine(_:)(*(unsigned char *)(v0 + 49) & 1);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1005C638C()
{
  Swift::UInt v1 = *(unsigned __int8 *)(v0 + 48);
  Swift::UInt8 v3 = *(unsigned char *)(v0 + 49);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v3);
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005C6494()
{
  Swift::UInt v1 = *(unsigned __int8 *)(v0 + 48);
  Swift::UInt8 v2 = *(unsigned char *)(v0 + 49);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1005C659C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1005C6650((uint64_t)v7, (uint64_t)v9) & 1;
}

unint64_t sub_1005C65FC()
{
  unint64_t result = qword_100964238;
  if (!qword_100964238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964238);
  }
  return result;
}

uint64_t sub_1005C6650(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v8 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v9 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48)
          && ((*(unsigned __int8 *)(a1 + 49) ^ *(unsigned __int8 *)(a2 + 49)) & 1) == 0)
        {
          if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && *(void *)(a1 + 64) == *(void *)(a2 + 64))
          {
            return 1;
          }
          else
          {
            return _stringCompareWithSmolCheck(_:_:expecting:)();
          }
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LegacyDevice.Platform(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005C6824);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyDevice.Platform()
{
  return &type metadata for LegacyDevice.Platform;
}

unint64_t sub_1005C6860()
{
  unint64_t result = qword_100964240;
  if (!qword_100964240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964240);
  }
  return result;
}

uint64_t sub_1005C68B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v89 = a1;
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocalizationFeature();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for SleepingSampleDataType();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v63 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for SleepingSampleAggregate();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v66 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for Calendar();
  uint64_t v94 = *(char **)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v87 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for GregorianDayRange();
  uint64_t v93 = *(char **)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v85 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for DayIndex();
  uint64_t v92 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v83 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for Date();
  unint64_t v91 = *(void *)(v82 - 8);
  uint64_t v16 = __chkstk_darwin(v82);
  uint64_t v81 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v80 = (char *)v55 - v18;
  uint64_t v19 = type metadata accessor for SleepingSampleBaselineComparison();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_100964250);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v69 = (char *)v55 - v27;
  uint64_t v90 = v2;
  uint64_t v28 = SleepingSampleViewModel.chronologicalBaselineComparisons.getter();
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    char v56 = v26;
    uint64_t v58 = v10;
    uint64_t v59 = v8;
    uint64_t v60 = v7;
    uint64_t v61 = v6;
    uint64_t v62 = a2;
    uint64_t v57 = v20;
    uint64_t v31 = *(void (**)(char *))(v20 + 16);
    uint64_t v30 = v20 + 16;
    int v78 = v31;
    unint64_t v32 = (*(unsigned __int8 *)(v30 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64);
    v55[1] = v28;
    unint64_t v33 = v28 + v32;
    uint64_t v76 = (char **)(v94 + 8);
    uint64_t v77 = v93 + 8;
    uint64_t v74 = (void (**)(char *, uint64_t))(v91 + 8);
    uint64_t v75 = (void (**)(char *, uint64_t))(v92 + 8);
    uint64_t v71 = (void (**)(char *, uint64_t))(v30 - 8);
    uint64_t v79 = v30;
    uint64_t v70 = *(void *)(v30 + 56);
    uint64_t v73 = v19;
    uint64_t v72 = v22;
    uint64_t v34 = v83;
    uint64_t v35 = v87;
    uint64_t v36 = v88;
    char v37 = (char **)(v93 + 8);
    uint64_t v38 = v80;
    while (1)
    {
      unint64_t v91 = v33;
      uint64_t v92 = v29;
      v78(v22);
      SleepingSampleBaselineComparison.morningIndex.getter();
      uint64_t v39 = v85;
      SleepingSampleViewModel.dayRange.getter();
      GregorianDayRange.gregorianCalendar.getter();
      uint64_t v94 = *v37;
      uint64_t v40 = v86;
      ((void (*)(char *, uint64_t))v94)(v39, v86);
      DayIndex.startDate(in:)();
      uint64_t v93 = *v76;
      ((void (*)(char *, uint64_t))v93)(v35, v36);
      (*v75)(v34, v84);
      SleepingSampleViewModel.dayRange.getter();
      GregorianDayRange.gregorianCalendar.getter();
      ((void (*)(char *, uint64_t))v94)(v39, v40);
      int v41 = v81;
      DayIndex.startDate(in:)();
      ((void (*)(char *, uint64_t))v93)(v35, v36);
      char v42 = Date.isSameDay(as:)();
      uint64_t v43 = *v74;
      uint64_t v44 = v41;
      uint64_t v45 = v82;
      (*v74)(v44, v82);
      v43(v38, v45);
      if (v42) {
        break;
      }
      uint64_t v22 = v72;
      uint64_t v19 = v73;
      (*v71)(v72, v73);
      unint64_t v33 = v91 + v70;
      uint64_t v29 = v92 - 1;
      if (v92 == 1)
      {
        uint64_t v46 = 1;
        uint64_t v7 = v60;
        uint64_t v8 = v59;
        uint64_t v10 = v58;
        uint64_t v47 = (uint64_t)v69;
        uint64_t v20 = v57;
        goto LABEL_8;
      }
    }
    uint64_t v48 = v57;
    uint64_t v47 = (uint64_t)v69;
    uint64_t v19 = v73;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v69, v72, v73);
    uint64_t v46 = 0;
    uint64_t v7 = v60;
    uint64_t v8 = v59;
    uint64_t v10 = v58;
    uint64_t v20 = v48;
LABEL_8:
    uint64_t v26 = v56;
  }
  else
  {
    uint64_t v46 = 1;
    uint64_t v47 = (uint64_t)v69;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v47, v46, 1, v19);
  swift_bridgeObjectRelease();
  sub_1000AEF2C(v47, (uint64_t)v26, &qword_100964250);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v26, 1, v19) == 1)
  {
    sub_10008DB18((uint64_t)v26, &qword_100964250);
LABEL_13:
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LocalizationFeature.workout(_:), v7);
    static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    return sub_10008DB18(v47, &qword_100964250);
  }
  uint64_t v49 = v26;
  uint64_t v50 = v66;
  SleepingSampleBaselineComparison.aggregate.getter();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v19);
  uint64_t v51 = (void *)SleepingSampleAggregate.quantity.getter();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v50, v68);
  if (!v51) {
    goto LABEL_13;
  }
  char v52 = v63;
  SleepingSampleViewModel.dataType.getter();
  char v53 = (void *)SleepingSampleViewModel.preferredAggregateValueUnit.getter();
  HKQuantity.formattedAttributedValue(for:unit:)();

  (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v65);
  return sub_10008DB18(v47, &qword_100964250);
}

uint64_t sub_1005C72CC(uint64_t a1)
{
  uint64_t v69 = a1;
  uint64_t v2 = type metadata accessor for SleepingSampleAggregate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for Calendar();
  uint64_t v6 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for GregorianDayRange();
  uint64_t v74 = *(char **)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v65 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for DayIndex();
  uint64_t v73 = *(char **)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v63 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Date();
  uint64_t v72 = *(void *)(v62 - 8);
  uint64_t v10 = __chkstk_darwin(v62);
  uint64_t v61 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v60 = (char *)v43 - v12;
  uint64_t v13 = type metadata accessor for SleepingSampleBaselineComparison();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100964250);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v43 - v21;
  uint64_t v70 = v1;
  uint64_t v23 = SleepingSampleViewModel.chronologicalBaselineComparisons.getter();
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v44 = v20;
    uint64_t v45 = v22;
    uint64_t v47 = v5;
    uint64_t v48 = v3;
    uint64_t v49 = v2;
    uint64_t v46 = v14;
    uint64_t v26 = *(void (**)(char *))(v14 + 16);
    uint64_t v25 = v14 + 16;
    uint64_t v58 = v26;
    unint64_t v27 = (*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64);
    v43[1] = v23;
    unint64_t v28 = v23 + v27;
    char v56 = (char **)(v6 + 8);
    uint64_t v57 = (char **)(v74 + 8);
    long long v54 = (void (**)(char *, uint64_t))(v72 + 8);
    long long v55 = (void (**)(char *, uint64_t))(v73 + 8);
    uint64_t v51 = (void (**)(char *, uint64_t))(v25 - 8);
    uint64_t v59 = v25;
    uint64_t v50 = *(void *)(v25 + 56);
    uint64_t v53 = v13;
    char v52 = v16;
    uint64_t v29 = v65;
    uint64_t v30 = v66;
    uint64_t v31 = v56;
    uint64_t v32 = v68;
    while (1)
    {
      unint64_t v71 = v28;
      uint64_t v72 = v24;
      v58(v16);
      unint64_t v33 = v63;
      SleepingSampleBaselineComparison.morningIndex.getter();
      SleepingSampleViewModel.dayRange.getter();
      uint64_t v34 = v67;
      GregorianDayRange.gregorianCalendar.getter();
      uint64_t v74 = *v57;
      ((void (*)(char *, uint64_t))v74)(v29, v30);
      uint64_t v35 = v60;
      DayIndex.startDate(in:)();
      uint64_t v73 = *v31;
      ((void (*)(char *, uint64_t))v73)(v34, v32);
      (*v55)(v33, v64);
      SleepingSampleViewModel.dayRange.getter();
      GregorianDayRange.gregorianCalendar.getter();
      ((void (*)(char *, uint64_t))v74)(v29, v30);
      uint64_t v36 = v61;
      DayIndex.startDate(in:)();
      ((void (*)(char *, uint64_t))v73)(v34, v32);
      char v37 = Date.isSameDay(as:)();
      uint64_t v38 = *v54;
      uint64_t v39 = v62;
      (*v54)(v36, v62);
      v38(v35, v39);
      if (v37) {
        break;
      }
      uint64_t v16 = v52;
      uint64_t v13 = v53;
      (*v51)(v52, v53);
      unint64_t v28 = v71 + v50;
      uint64_t v24 = v72 - 1;
      if (v72 == 1)
      {
        uint64_t v40 = 1;
        uint64_t v2 = v49;
        uint64_t v3 = v48;
        uint64_t v5 = v47;
        uint64_t v14 = v46;
        uint64_t v22 = v45;
        goto LABEL_8;
      }
    }
    uint64_t v14 = v46;
    uint64_t v22 = v45;
    uint64_t v13 = v53;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v45, v52, v53);
    uint64_t v40 = 0;
    uint64_t v2 = v49;
    uint64_t v3 = v48;
    uint64_t v5 = v47;
LABEL_8:
    uint64_t v20 = v44;
  }
  else
  {
    uint64_t v40 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v22, v40, 1, v13);
  swift_bridgeObjectRelease();
  sub_1000AEF2C((uint64_t)v22, (uint64_t)v20, &qword_100964250);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13) == 1)
  {
    sub_10008DB18((uint64_t)v22, &qword_100964250);
    sub_10008DB18((uint64_t)v20, &qword_100964250);
  }
  else
  {
    SleepingSampleBaselineComparison.aggregate.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    int v41 = (void *)SleepingSampleAggregate.quantity.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_10008DB18((uint64_t)v22, &qword_100964250);
    if (v41)
    {

      return 1;
    }
  }
  return 0;
}

uint64_t sub_1005C7A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005C7AA4(a1, a2);
}

uint64_t sub_1005C7AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v3 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v64 = *(void *)(v3 - 8);
  uint64_t v65 = v3;
  __chkstk_darwin(v3);
  uint64_t v67 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Calendar();
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  __chkstk_darwin(v7);
  uint64_t v66 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DayIndex();
  uint64_t v77 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v70 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v71 = (char *)&v55 - v12;
  __chkstk_darwin(v13);
  uint64_t v76 = (char *)&v55 - v14;
  uint64_t v60 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v60);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v55 - v18;
  uint64_t v72 = type metadata accessor for GregorianDayRange();
  uint64_t v78 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v55 - v23;
  uint64_t v25 = sub_1000AFA94(&qword_100964248);
  __chkstk_darwin(v25 - 8);
  unint64_t v27 = (uint64_t *)((char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v55 - v29;
  uint64_t v31 = type metadata accessor for BaselineRelativeValue();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v74 = (char *)&v55 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = SleepingSampleBaselineComparison.relativeComparison.getter();
  uint64_t v73 = a1;
  if ((v35 & 1) == 0)
  {
    *unint64_t v27 = v34;
    uint64_t v36 = (unsigned int *)&enum case for BaselineRelativeValue.determinate(_:);
LABEL_5:
    (*(void (**)(uint64_t *, void, uint64_t))(v32 + 104))(v27, *v36, v31);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v31);
    goto LABEL_7;
  }
  if (SleepingSampleBaselineComparison.isWarmupDay.getter())
  {
    uint64_t v36 = (unsigned int *)&enum case for BaselineRelativeValue.indeterminate(_:);
    goto LABEL_5;
  }
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v27, 1, 1, v31);
LABEL_7:
  sub_1005C8360((uint64_t)v27, (uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_10008DB18((uint64_t)v30, &qword_100964248);
  }
  else
  {
    uint64_t v59 = v21;
    char v37 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
    uint64_t v58 = v32 + 32;
    uint64_t v57 = v37;
    v37((uint64_t)v74, v30, v31);
    SleepingSampleViewModel.dayRange.getter();
    GregorianDayRange.dayIndexRange.getter();
    uint64_t v38 = v78 + 8;
    char v56 = *(void (**)(char *, uint64_t))(v78 + 8);
    v56(v24, v72);
    uint64_t v39 = v76;
    SleepingSampleBaselineComparison.morningIndex.getter();
    sub_1005C92C0((unint64_t *)&qword_100950740);
    char v40 = dispatch thunk of static Comparable.>= infix(_:_:)();
    int v41 = v71;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v71, v39, v9);
    sub_1000AEF2C((uint64_t)v19, (uint64_t)v16, &qword_100950728);
    uint64_t v78 = v38;
    char v42 = v70;
    if (v40) {
      char v43 = dispatch thunk of static Comparable.<= infix(_:_:)();
    }
    else {
      char v43 = 0;
    }
    sub_10008DB18((uint64_t)v16, &qword_100950728);
    uint64_t v44 = *(void (**)(char *, uint64_t))(v77 + 8);
    v44(v41, v9);
    v44(v76, v9);
    sub_10008DB18((uint64_t)v19, &qword_100950728);
    if (v43)
    {
      uint64_t v45 = v42;
      SleepingSampleBaselineComparison.morningIndex.getter();
      uint64_t v46 = v59;
      SleepingSampleViewModel.dayRange.getter();
      uint64_t v47 = v61;
      GregorianDayRange.gregorianCalendar.getter();
      v56(v46, v72);
      uint64_t v48 = v66;
      DayIndex.startDate(in:)();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v63);
      v44(v45, v9);
      SleepingSampleBaselineComparison.isOutOfRange.getter();
      (*(void (**)(char *, void, uint64_t))(v64 + 104))(v67, enum case for Color.RGBColorSpace.displayP3(_:), v65);
      uint64_t v51 = Color.init(_:red:green:blue:opacity:)();
      uint64_t v52 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
      uint64_t v53 = v75;
      v57(v75 + *(int *)(v52 + 20), v74, v31);
      (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v53, v48, v69);
      *(void *)(v53 + *(int *)(v52 + 24)) = v51;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v53, 0, 1, v52);
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v74, v31);
  }
  uint64_t v49 = v75;
  uint64_t v50 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
}

uint64_t sub_1005C8360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100964248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1005C83C8(void (**a1)(char *, uint64_t, uint64_t), int a2)
{
  uint64_t v125 = a1;
  uint64_t v4 = type metadata accessor for DayIndex();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v120 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v118 = (char *)&v98 - v8;
  uint64_t v114 = sub_1000AFA94(&qword_100950728);
  __chkstk_darwin(v114);
  uint64_t v115 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for Calendar();
  uint64_t v111 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v129 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for GregorianDayRange();
  uint64_t v121 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v131 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for Date();
  uint64_t v110 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v127 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v126 = (char *)&v98 - v14;
  uint64_t v15 = sub_1000AFA94(&qword_1009508A0);
  __chkstk_darwin(v15 - 8);
  uint64_t v105 = (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v103 = (uint64_t)&v98 - v18;
  __chkstk_darwin(v19);
  uint64_t v117 = (uint64_t)&v98 - v20;
  uint64_t v21 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v101 = (uint64_t)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v100 = (uint64_t)&v98 - v25;
  __chkstk_darwin(v26);
  uint64_t v102 = (char *)&v98 - v27;
  __chkstk_darwin(v28);
  uint64_t v99 = (uint64_t)&v98 - v29;
  __chkstk_darwin(v30);
  uint64_t v113 = (uint64_t)&v98 - v31;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v98 - v33;
  __chkstk_darwin(v35);
  uint64_t v112 = (uint64_t)&v98 - v36;
  uint64_t v37 = SleepingSampleViewModel.chronologicalBaselineComparisons.getter();
  uint64_t v133 = v2;
  uint64_t v135 = v2;
  uint64_t v38 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_1006DE924((void (*)(void))sub_1005C9230, (uint64_t)v134, v37);
  uint64_t v104 = 0;
  swift_bridgeObjectRelease();
  uint64_t v39 = *((void *)v38 + 2);
  int v119 = a2;
  uint64_t v109 = v22;
  uint64_t v108 = v4;
  uint64_t v107 = v21;
  if (v39)
  {
    uint64_t v106 = v5;
    uint64_t v40 = (uint64_t)v38 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v123 = (void (**)(char *, uint64_t))(v121 + 8);
    uint64_t v124 = (void (**)(char *, char *, uint64_t))(v110 + 16);
    int v41 = (void (**)(char *, uint64_t))(v111 + 8);
    char v42 = (void (**)(char *, uint64_t))(v110 + 8);
    unint64_t v122 = *(void *)(v22 + 72);
    uint64_t v116 = v38;
    swift_bridgeObjectRetain();
    char v43 = v126;
    uint64_t v44 = v128;
    while (1)
    {
      sub_1005C925C(v40, (uint64_t)v34);
      (*v124)(v43, v34, v44);
      uint64_t v45 = v131;
      SleepingSampleViewModel.dayRange.getter();
      uint64_t v46 = v129;
      GregorianDayRange.gregorianCalendar.getter();
      (*v123)(v45, v132);
      uint64_t v47 = v127;
      DayIndex.startDate(in:)();
      (*v41)(v46, v130);
      char v48 = Date.isSameDay(as:)();
      uint64_t v49 = *v42;
      (*v42)(v47, v44);
      v49(v43, v44);
      if (v48) {
        break;
      }
      sub_10018B560((uint64_t)v34);
      v40 += v122;
      if (!--v39)
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = v109;
        uint64_t v4 = v108;
        uint64_t v5 = v106;
        uint64_t v21 = v107;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v51 = v117;
    sub_1005C9304((uint64_t)v34, v117);
    uint64_t v22 = v109;
    uint64_t v50 = *(char **)(v109 + 56);
    uint64_t v21 = v107;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v50)(v51, 0, 1, v107);
    uint64_t v4 = v108;
    uint64_t v5 = v106;
  }
  else
  {
LABEL_6:
    uint64_t v50 = *(char **)(v22 + 56);
    uint64_t v51 = v117;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50)(v117, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  uint64_t v117 = v22 + 48;
  uint64_t v116 = v52;
  unsigned int v53 = v52(v51, 1, v21);
  uint64_t v54 = v133;
  uint64_t v55 = v118;
  if (v53 == 1)
  {
    sub_10008DB18(v51, &qword_1009508A0);
    unint64_t v122 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v56 = v51;
    uint64_t v57 = v112;
    sub_1005C9304(v56, v112);
    sub_1005C925C(v57, v113);
    uint64_t v58 = sub_1001E86E8(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v60 = *(void *)(v58 + 16);
    unint64_t v59 = *(void *)(v58 + 24);
    unint64_t v122 = v58;
    if (v60 >= v59 >> 1) {
      unint64_t v122 = sub_1001E86E8(v59 > 1, v60 + 1, 1, v122);
    }
    unint64_t v61 = v122;
    *(void *)(v122 + 16) = v60 + 1;
    sub_1005C9304(v113, v61+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v60);
    sub_10018B560(v112);
  }
  uint64_t v62 = v131;
  SleepingSampleViewModel.dayRange.getter();
  uint64_t v63 = (uint64_t)v115;
  GregorianDayRange.dayIndexRange.getter();
  uint64_t v64 = *(void (***)(char *, char *, uint64_t))(v121 + 8);
  v121 += 8;
  uint64_t v124 = v64;
  ((void (*)(char *, uint64_t))v64)(v62, v132);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v55, v63 + *(int *)(v114 + 36), v4);
  sub_10008DB18(v63, &qword_100950728);
  sub_1005C92C0(&qword_100950730);
  char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v68 = *(char **)(v5 + 8);
  uint64_t v67 = v5 + 8;
  uint64_t v66 = v68;
  ((void (*)(char *, uint64_t))v68)(v55, v4);
  if (v65)
  {
    unint64_t v69 = v122;
    if (v119) {
      return (void *)v69;
    }
    goto LABEL_31;
  }
  uint64_t v115 = v50;
  uint64_t v70 = 1;
  DayIndex.init(integerLiteral:)();
  static DayIndex.+ infix(_:_:)();
  char v118 = v66;
  ((void (*)(char *, uint64_t))v66)(v55, v4);
  uint64_t v71 = SleepingSampleViewModel.chronologicalBaselineComparisons.getter();
  __chkstk_darwin(v71);
  *(&v98 - 2) = v54;
  uint64_t v72 = sub_1006DE924((void (*)(void))sub_1005C9368, (uint64_t)(&v98 - 4), v71);
  swift_bridgeObjectRelease();
  uint64_t v73 = v72[2];
  char v74 = v119;
  if (v73)
  {
    uint64_t v106 = v67;
    uint64_t v75 = (uint64_t)v72 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v125 = (void (**)(char *, uint64_t, uint64_t))(v110 + 16);
    uint64_t v76 = (void (**)(char *, uint64_t))(v111 + 8);
    uint64_t v77 = (void (**)(char *, uint64_t))(v110 + 8);
    uint64_t v123 = *(void (***)(char *, uint64_t))(v22 + 72);
    uint64_t v114 = (uint64_t)v72;
    swift_bridgeObjectRetain();
    uint64_t v78 = (uint64_t)v102;
    uint64_t v79 = v126;
    uint64_t v80 = v128;
    while (1)
    {
      sub_1005C925C(v75, v78);
      (*v125)(v79, v78, v80);
      uint64_t v81 = v131;
      SleepingSampleViewModel.dayRange.getter();
      uint64_t v82 = v129;
      GregorianDayRange.gregorianCalendar.getter();
      ((void (*)(char *, uint64_t))v124)(v81, v132);
      uint64_t v83 = v127;
      DayIndex.startDate(in:)();
      (*v76)(v82, v130);
      char v84 = Date.isSameDay(as:)();
      uint64_t v85 = *v77;
      (*v77)(v83, v80);
      v85(v79, v80);
      if (v84) {
        break;
      }
      sub_10018B560(v78);
      v75 += (uint64_t)v123;
      if (!--v73)
      {
        swift_bridgeObjectRelease();
        uint64_t v70 = 1;
        char v74 = v119;
        uint64_t v22 = v109;
        uint64_t v4 = v108;
        uint64_t v21 = v107;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v86 = v103;
    sub_1005C9304(v78, v103);
    uint64_t v70 = 0;
    char v74 = v119;
    uint64_t v22 = v109;
    uint64_t v4 = v108;
    uint64_t v21 = v107;
  }
  else
  {
LABEL_21:
    uint64_t v86 = v103;
  }
  uint64_t v87 = v70;
  uint64_t v50 = v115;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v115)(v86, v87, 1, v21);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v118)(v120, v4);
  if (v116(v86, 1, v21) == 1)
  {
    sub_10008DB18(v86, &qword_1009508A0);
    unint64_t v69 = v122;
    if (v74) {
      return (void *)v69;
    }
    goto LABEL_31;
  }
  uint64_t v88 = v99;
  sub_1005C9304(v86, v99);
  uint64_t v89 = v100;
  sub_1005C925C(v88, v100);
  unint64_t v69 = v122;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v69 = sub_1001E86E8(0, *(void *)(v69 + 16) + 1, 1, v69);
  }
  unint64_t v91 = *(void *)(v69 + 16);
  unint64_t v90 = *(void *)(v69 + 24);
  if (v91 >= v90 >> 1) {
    unint64_t v69 = sub_1001E86E8(v90 > 1, v91 + 1, 1, v69);
  }
  *(void *)(v69 + 16) = v91 + 1;
  sub_1005C9304(v89, v69+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v91);
  sub_10018B560(v88);
  uint64_t v50 = v115;
  if ((v74 & 1) == 0)
  {
LABEL_31:
    uint64_t v92 = *(void *)(v69 + 16);
    if (v92)
    {
      uint64_t v93 = v105;
      sub_1005C925C(v69+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * (v92 - 1), v105);
      uint64_t v94 = 0;
    }
    else
    {
      uint64_t v94 = 1;
      uint64_t v93 = v105;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50)(v93, v94, 1, v21);
    swift_bridgeObjectRelease();
    if (v116(v93, 1, v21) == 1)
    {
      sub_10008DB18(v93, &qword_1009508A0);
      return _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v95 = v101;
      sub_1005C9304(v93, v101);
      sub_1000AFA94(&qword_10094F460);
      unint64_t v96 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      unint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_1007509E0;
      sub_1005C9304(v95, v69 + v96);
    }
  }
  return (void *)v69;
}

uint64_t sub_1005C9230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005C7AA4(a1, a2);
}

uint64_t sub_1005C925C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005C92C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DayIndex();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005C9304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepingSampleBaselineRelativeChartPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005C9368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005C9230(a1, a2);
}

id sub_1005C9380(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)&v3[OBJC_IVAR___CHWhatsNewViewController_buttonHandler];
  *uint64_t v5 = a2;
  v5[1] = a3;
  v3[OBJC_IVAR___CHWhatsNewViewController_fitnessPlusAvailable] = a1;
  uint64_t v6 = self;
  sub_10008A670(a2);
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for WhatsNewViewController();
  id v11 = [super initWithTitle:v10 detailText:0 icon:0 contentLayout:2];
  sub_10005E5F8(a2);

  return v11;
}

void sub_1005C9554()
{
  v66.receiver = v0;
  v66.super_class = (Class)type metadata accessor for WhatsNewViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  uint64_t v3 = self;
  id v4 = [v3 secondarySystemGroupedBackgroundColor];
  [v2 setBackgroundColor:v4];

  uint64_t v5 = self;
  id v6 = [v5 sharedBehavior];
  if (!v6)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  id v7 = v6;
  [v6 isStandalonePhoneFitnessMode];

  id v65 = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self smm_systemImageNamed:v8];

  NSString v10 = self;
  id v11 = [v10 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 localizedStringForKey:v12 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v10 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v64 = v9;
  [v0 addBulletedListItemWithTitle:v14 description:v18 image:v9];

  if (*((unsigned char *)v0 + OBJC_IVAR___CHWhatsNewViewController_fitnessPlusAvailable) == 1)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [self smm_systemImageNamed:v19];

    id v21 = [v10 mainBundle];
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v21 localizedStringForKey:v22 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v25 = [v10 mainBundle];
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 addBulletedListItemWithTitle:v24 description:v28 image:v20];
  }
  NSString v29 = String._bridgeToObjectiveC()();
  id v63 = self;
  id v30 = [v63 smm_systemImageNamed:v29];

  id v31 = [v10 mainBundle];
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = [v31 localizedStringForKey:v32 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v35 = [v10 mainBundle];
  NSString v36 = String._bridgeToObjectiveC()();
  id v37 = [v35 localizedStringForKey:v36 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v30;
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 addBulletedListItemWithTitle:v34 description:v39 image:v30];

  id v40 = [v5 sharedBehavior];
  if (!v40) {
    goto LABEL_11;
  }
  int v41 = v40;
  unsigned __int8 v42 = [v40 isStandalonePhoneFitnessMode];

  if ((v42 & 1) == 0)
  {
    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = [v63 smm_systemImageNamed:v43];

    id v45 = [v10 mainBundle];
    NSString v46 = String._bridgeToObjectiveC()();
    id v47 = [v45 localizedStringForKey:v46 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v49 = [v10 mainBundle];
    NSString v50 = String._bridgeToObjectiveC()();
    id v51 = [v49 localizedStringForKey:v50 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v52 = String._bridgeToObjectiveC()();
    uint64_t v38 = v30;
    swift_bridgeObjectRelease();
    [v0 addBulletedListItemWithTitle:v48 description:v52 image:v44];
  }
  id v53 = [self boldButton];
  [v53 addTarget:v0 action:"didTapContinueButton" forControlEvents:64];
  id v54 = [v10 mainBundle];
  NSString v55 = String._bridgeToObjectiveC()();
  id v56 = [v54 localizedStringForKey:v55 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v53 setTitle:v57 forState:0];

  id v58 = v53;
  id v59 = [v65 tertiarySystemGroupedBackgroundColor];
  [v58 setTintColor:v59];

  id v60 = v58;
  NSString v61 = String._bridgeToObjectiveC()();
  [v60 setAccessibilityIdentifier:v61];

  id v62 = [v0 buttonTray];
  [v62 addButton:v60];

  [v0 setModalInPresentation:1];
}

id sub_1005CA030()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WhatsNewViewController();
  [super dealloc];
}

uint64_t type metadata accessor for WhatsNewViewController()
{
  return self;
}

uint64_t sub_1005CA09C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

id sub_1005CA0D4()
{
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setAdjustsFontForContentSizeCategory:1];
  return v0;
}

void sub_1005CA144(uint64_t a1)
{
}

uint64_t sub_1005CA158()
{
  uint64_t result = static Font.body.getter();
  qword_100964298 = result;
  return result;
}

uint64_t sub_1005CA178()
{
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  uint64_t result = static UIFont.systemFont(ofSize:weight:design:)();
  qword_1009642A0 = result;
  return result;
}

uint64_t sub_1005CA1DC()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094C448);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.title(_:), v3);
  uint64_t v7 = enum case for Font.Design.rounded(_:);
  uint64_t v8 = type metadata accessor for Font.Design();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  static Font.Weight.medium.getter();
  uint64_t v10 = static Font.system(_:design:weight:)();
  sub_10008DB18((uint64_t)v2, &qword_10094C448);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_1009642A8 = v10;
  return result;
}

id sub_1005CA3CC()
{
  id result = sub_1005CA3EC();
  qword_1009642B0 = (uint64_t)result;
  return result;
}

id sub_1005CA3EC()
{
  sub_1000AFA94(&qword_10095CCE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  sub_1000AFA94(&qword_10095CCE8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1007509E0;
  sub_1000AFA94(&qword_10095CCF0);
  uint64_t v2 = swift_initStackObject();
  *(_OWORD *)(v2 + 16) = xmmword_10074E640;
  uint64_t v3 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 40) = 38;
  uint64_t v4 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 56) = 1;
  uint64_t v5 = UIFontDescriptorFeatureSettingsAttribute;
  id v6 = v3;
  id v7 = v4;
  *(void *)(v1 + 32) = sub_100522C50(v2);
  *(void *)(inited + 40) = v1;
  unint64_t v8 = sub_100522FF8(inited);
  if (qword_10094AF20 != -1) {
    swift_once();
  }
  id v9 = [qword_1009642A0 fontDescriptor:1, 2];
  sub_1003D775C(v8);
  swift_bridgeObjectRelease();
  type metadata accessor for AttributeName(0);
  sub_10008F8E4((unint64_t *)&qword_10094B980, type metadata accessor for AttributeName);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v9 fontDescriptorByAddingAttributes:isa];

  [(id)qword_1009642A0 pointSize];
  id v13 = [self fontWithDescriptor:v11 size:v12];

  return v13;
}

void sub_1005CA634(uint64_t a1)
{
}

id sub_1005CA648(uint64_t a1)
{
  return sub_100474E58(a1, &qword_10094AF10, (void **)&qword_100964290, (void **)&qword_1009642C0);
}

id sub_1005CA674()
{
  id result = [self fu_sausageFontOfSize:30.0];
  qword_1009642C8 = (uint64_t)result;
  return result;
}

id sub_1005CA6B4(uint64_t a1)
{
  return sub_100474E58(a1, &qword_10094AF48, (void **)&qword_1009642C8, (void **)&qword_1009642D0);
}

id sub_1005CA6E0()
{
  if (qword_10094AF30 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1009642B0;
  qword_1009642D8 = qword_1009642B0;

  return v0;
}

id sub_1005CA744(uint64_t a1)
{
  return sub_100474E58(a1, &qword_10094AF48, (void **)&qword_1009642C8, (void **)&qword_1009642E0);
}

void sub_1005CA770(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    [v1 size];
    [v1 size];
    [v1 size];
    [v1 size];
    v3.origin.x = 16.0;
    v3.origin.y = 16.0;
    v3.size.width = 40.0;
    v3.size.height = 40.0;
    CGRectGetWidth(v3);
    v4.origin.x = 16.0;
    v4.origin.y = 16.0;
    v4.size.width = 40.0;
    v4.size.height = 40.0;
    CGRectGetHeight(v4);
    CGRect.centered(in:)();
    [v1 drawInRect:];
  }
}

id sub_1005CA87C(id result)
{
  if (result) {
    return [result drawInRect:CGRectMake(16.0, 16.0, 40.0, 40.0)];
  }
  return result;
}

uint64_t sub_1005CA8A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

id sub_1005CA8CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AFA94(&qword_100960A18);
  __chkstk_darwin(v2 - 8);
  CGRect v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095BF60);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AttributedString();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v63 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100960988);
  __chkstk_darwin(v11 - 8);
  id v65 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100960990);
  uint64_t v62 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  NSString v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v59 = (uint64_t)&v59 - v17;
  uint64_t v18 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v18 - 8);
  MindfulnessSessionViewModel.duration.getter();
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v20 = [self stringWithNumber:isa decimalPrecision:1 roundingMode:6];
  uint64_t v69 = v13;
  uint64_t v70 = a1;
  id v60 = v16;
  NSString v61 = v4;
  uint64_t v67 = v7;
  Class v68 = isa;
  uint64_t v66 = v8;
  uint64_t v64 = v9;
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v24 = v23;
  }
  else
  {
    unint64_t v24 = 0xE100000000000000;
    uint64_t v22 = 48;
  }
  id v25 = self;
  id v26 = [v25 mainBundle];
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v26 localizedStringForKey:v27 value:0 table:0];

  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  id v32 = [v25 mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [v32 localizedStringForKey:v33 value:0 table:0];

  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v36;

  uint64_t v71 = v35;
  uint64_t v72 = v37;
  sub_1000A06D0();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_10074E640;
  *(void *)(v38 + 56) = &type metadata for String;
  unint64_t v39 = sub_1000AA64C();
  *(void *)(v38 + 32) = v22;
  *(void *)(v38 + 40) = v24;
  *(void *)(v38 + 96) = &type metadata for String;
  *(void *)(v38 + 104) = v39;
  *(void *)(v38 + 64) = v39;
  *(void *)(v38 + 72) = v29;
  *(void *)(v38 + 80) = v31;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  uint64_t v40 = v70;
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  *(&v59 - 2) = __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  id result = [self fiui_meditationTeal];
  if (result)
  {
    uint64_t v71 = Color.init(uiColor:)();
    sub_1000A5D60();
    AttributedString.subscript.setter();
    uint64_t v43 = swift_getKeyPath();
    *(&v59 - 2) = __chkstk_darwin(v43);
    swift_getKeyPath();
    uint64_t v44 = v69;
    uint64_t v45 = (uint64_t)v67;
    if (qword_10094AF28 != -1) {
      swift_once();
    }
    uint64_t v71 = qword_1009642A8;
    sub_1000AA6A0();
    swift_retain();
    AttributedString.subscript.setter();
    NSString v46 = v63;
    uint64_t v47 = v64;
    uint64_t v48 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v40, v66);
    uint64_t v71 = v29;
    uint64_t v72 = v31;
    uint64_t v49 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v45, 1, 1, v49);
    sub_10008F8E4((unint64_t *)&qword_100960998, (void (*)(uint64_t))&type metadata accessor for AttributedString);
    uint64_t v50 = (uint64_t)v65;
    AttributedStringProtocol.range<A>(of:options:locale:)();
    sub_10008DB18(v45, (uint64_t *)&unk_10095BF60);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v50, 1, v44) == 1)
    {

      id v51 = &qword_100960988;
      uint64_t v52 = v50;
    }
    else
    {
      uint64_t v53 = v59;
      sub_1000AA6F4(v50, v59);
      uint64_t v54 = (uint64_t)v60;
      sub_1000AEF2C(v53, (uint64_t)v60, &qword_100960990);
      uint64_t v55 = swift_getKeyPath();
      *(&v59 - 2) = __chkstk_darwin(v55);
      swift_getKeyPath();
      id v56 = v61;
      static Text.Scale.secondary.getter();
      uint64_t v57 = type metadata accessor for Text.Scale();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
      sub_1005CDCCC();
      id v58 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
      sub_1000AA7AC();
      AttributedSubstring.subscript.setter();
      v58(&v71, 0);

      sub_10008DB18(v54, &qword_100960990);
      uint64_t v52 = v53;
      id v51 = &qword_100960990;
    }
    return (id)sub_10008DB18(v52, v51);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1005CB130()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___CHMindfulnessSessionFormattingManager_fiuiFormattingManager);
  MindfulnessSessionViewModel.duration.getter();
  id v2 = [v1 stringWithDuration:3];
  if (v2)
  {
    uint64_t v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    MindfulnessSessionViewModel.duration.getter();
    Double.write<A>(to:)();
  }
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v5 = self;
  uint64_t v6 = NSForegroundColorAttributeName;
  id result = [v5 elapsedTimeColors];
  if (result)
  {
    uint64_t v8 = result;
    id v9 = [result nonGradientTextColor];

    uint64_t v10 = sub_1000AFA94(&qword_10095D8A0);
    *(void *)(inited + 40) = v9;
    *(void *)(inited + 64) = v10;
    *(void *)(inited + 72) = NSFontAttributeName;
    uint64_t v11 = qword_10094AF48;
    uint64_t v12 = NSFontAttributeName;
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)qword_1009642C8;
    *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
    *(void *)(inited + 80) = v13;
    id v14 = v13;
    sub_1000DFC2C(inited);
    id v15 = objc_allocWithZone((Class)NSAttributedString);
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_10008F8E4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v18 = [v15 initWithString:v16 attributes:isa];

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005CB39C(uint64_t a1, char a2, uint64_t a3, void (*a4)(id))
{
  if (a2)
  {
    id v12 = [self mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    id v8 = [v12 localizedStringForKey:v13 value:0 table:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v14;
  }
  else
  {
    uint64_t v6 = self;
    id v7 = [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)&a1];
    id v8 = [v6 localizedStringFromNumber:v7 numberStyle:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }

  id v15 = sub_1005CD764(v9, v11);
  swift_bridgeObjectRelease();
  a4(v15);
}

void sub_1005CB514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CGRect v4 = v3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = self;
  MindfulnessSessionViewModel.uuid.getter();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v13 = [v11 predicateForObjectWithUUID:isa];

  sub_10007E2D8(0, (unint64_t *)&unk_1009555C0);
  Class v14 = HKCategoryType.init(_:)(HKCategoryTypeIdentifierMindfulSession).super.super.super.isa;
  id v15 = *(void **)&v4[OBJC_IVAR___CHMindfulnessSessionFormattingManager_healthStore];
  NSString v16 = (void *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = v4;
  v16[5] = v15;
  id v17 = objc_allocWithZone((Class)HKSampleQuery);
  aBlock[4] = sub_1005CDBF4;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000696FC;
  aBlock[3] = &unk_1008D0C90;
  id v18 = _Block_copy(aBlock);
  swift_retain();
  NSString v19 = v4;
  id v20 = v15;
  id v21 = [v17 initWithSampleType:v14 predicate:v13 limit:1 sortDescriptors:0 resultsHandler:v18];

  _Block_release(v18);
  swift_release();
  [v20 executeQuery:v21];
}

void sub_1005CB778(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5, void *a6, void *a7)
{
  if (!a2)
  {
LABEL_10:
    id v23 = [self mainBundle];
    NSString v24 = String._bridgeToObjectiveC()();
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v23 localizedStringForKey:v24 value:0 table:v25];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_10095BF70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10074E640;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    id v28 = self;
    swift_bridgeObjectRetain();
    uint64_t v29 = NSForegroundColorAttributeName;
    id v30 = [v28 systemTealColor];
    uint64_t v31 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    *(void *)(inited + 40) = v30;
    *(void *)(inited + 64) = v31;
    *(void *)(inited + 72) = NSFontAttributeName;
    uint64_t v32 = qword_10094AF60;
    NSString v33 = NSFontAttributeName;
    if (v32 != -1) {
      swift_once();
    }
    id v34 = (void *)qword_1009642E0;
    *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
    *(void *)(inited + 80) = v34;
    id v35 = v34;
    sub_1000DFC2C(inited);
    id v36 = objc_allocWithZone((Class)NSAttributedString);
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_10008F8E4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v22 = [v36 initWithString:v37 attributes:isa];
    swift_bridgeObjectRelease();

    a4(v22);
    goto LABEL_13;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!(a2 >> 62))
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)(v12 + 16))
  {
    id v14 = *(id *)(a2 + 32);
LABEL_7:
    id v15 = v14;
    swift_bridgeObjectRelease();
    id v16 = [self predicateForSamplesAssociatedWithSample:v15];
    sub_10007E2D8(0, &qword_100964320);
    id v17 = [(id)swift_getObjCClassFromMetadata() stateOfMindType];
    id v18 = (void *)swift_allocObject();
    v18[2] = a6;
    v18[3] = a4;
    v18[4] = a5;
    id v19 = objc_allocWithZone((Class)HKSampleQuery);
    v39[4] = sub_1005CDC40;
    v39[5] = v18;
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 1107296256;
    v39[2] = sub_1000696FC;
    v39[3] = &unk_1008D0CE0;
    id v20 = _Block_copy(v39);
    id v21 = a6;
    swift_retain();
    id v22 = [v19 initWithSampleType:v17 predicate:v16 limit:1 sortDescriptors:0 resultsHandler:v20];

    _Block_release(v20);
    swift_release();
    [a7 executeQuery:v22];

LABEL_13:
    return;
  }
  __break(1u);
}

void sub_1005CBC14(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id))
{
  if (!a2) {
    goto LABEL_13;
  }
  uint64_t v8 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!(a2 >> 62))
  {
    uint64_t v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)_CocoaArrayWrapper.endIndex.getter();
  if (!v9) {
    goto LABEL_12;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v8 + 16))
    {
      __break(1u);
      goto LABEL_17;
    }
    id v10 = *(id *)(a2 + 32);
  }
  uint64_t v9 = v10;
  swift_bridgeObjectRelease();
  self;
  uint64_t v11 = (void *)swift_dynamicCastObjCClass();
  if (!v11)
  {

LABEL_13:
    id v24 = 0;
    goto LABEL_14;
  }
  [v11 valenceClassification];
  id v12 = (id)HKUILocalizedStringForValenceClassification();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v13 = self;
  swift_bridgeObjectRetain();
  id v14 = NSForegroundColorAttributeName;
  id v15 = [v13 systemTealColor];
  uint64_t v16 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  *(void *)(inited + 40) = v15;
  *(void *)(inited + 64) = v16;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v17 = qword_10094AF60;
  id v18 = NSFontAttributeName;
  if (v17 != -1) {
LABEL_17:
  }
    swift_once();
  id v19 = (void *)qword_1009642E0;
  *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
  *(void *)(inited + 80) = v19;
  id v20 = v19;
  sub_1000DFC2C(inited);
  id v21 = objc_allocWithZone((Class)NSAttributedString);
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F8E4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v24 = [v21 initWithString:v22 attributes:isa];
  swift_bridgeObjectRelease();

LABEL_14:
  a5(v24);
}

id sub_1005CBF34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MindfulnessSessionFormattingManager();
  return [super dealloc];
}

id sub_1005CBFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Trainer();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v53 - v11;
  uint64_t v13 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter();
  if (v14)
  {
    uint64_t v19 = MindfulnessSessionViewModel.sourceRevision.getter();
    id v20 = [(id)v19 source];

    LOBYTE(v19) = [v20 _hasFirstPartyBundleID];
    if (v19)
    {
LABEL_3:
      id v16 = [self mainBundle];
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [v16 localizedStringForKey:v17 value:0 table:0];
LABEL_11:
      id v29 = v18;

      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      id v21 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
      id v22 = [v21 source];

      id v23 = [v22 name];
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  else
  {
    uint64_t v15 = v13;
    switch(v13)
    {
      case 0:
      case 1:
      case 2:
        goto LABEL_3;
      case 3:
        sub_1000AEF2C(a2, (uint64_t)v5, &qword_100950BA8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        {
          sub_10008DB18((uint64_t)v5, &qword_100950BA8);
          id v16 = [self mainBundle];
          NSString v17 = String._bridgeToObjectiveC()();
          id v18 = [v16 localizedStringForKey:v17 value:0 table:0];
          goto LABEL_11;
        }
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
        id v44 = [self mainBundle];
        NSString v45 = String._bridgeToObjectiveC()();
        id v46 = [v44 localizedStringForKey:v45 value:0 table:0];

        v53[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v47 = Trainer.informalName.getter();
        uint64_t v49 = v48;
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
        if (!v49)
        {
          uint64_t v47 = Trainer.name.getter();
          uint64_t v49 = v50;
        }
        id v51 = *(void (**)(char *, uint64_t))(v7 + 8);
        v51(v10, v6);
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_1007509E0;
        *(void *)(v52 + 56) = &type metadata for String;
        *(void *)(v52 + 64) = sub_1000AA64C();
        *(void *)(v52 + 32) = v47;
        *(void *)(v52 + 40) = v49;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51(v12, v6);
        break;
      default:
        os_log_type_t v24 = static os_log_type_t.fault.getter();
        NSString v25 = (void *)HKLogActivity;
        os_log_type_t v26 = v24;
        if (os_log_type_enabled(HKLogActivity, v24))
        {
          NSString v27 = v25;
          uint64_t v28 = swift_slowAlloc();
          uint64_t v55 = swift_slowAlloc();
          *(_DWORD *)uint64_t v28 = 136315394;
          uint64_t v54 = sub_10008F1F4(0xD000000000000020, 0x80000001007CFEF0, &v55);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v28 + 12) = 2048;
          uint64_t v54 = v15;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v27, v26, "%s found unexpected _HKPrivateMindfulnessType %ld; falling back to meditate",
            (uint8_t *)v28,
            0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        goto LABEL_3;
    }
  }
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v31 = self;
  uint64_t v32 = NSForegroundColorAttributeName;
  id v33 = [v31 labelColor];
  uint64_t v34 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  *(void *)(inited + 40) = v33;
  *(void *)(inited + 64) = v34;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v35 = qword_10094AF10;
  id v36 = NSFontAttributeName;
  if (v35 != -1) {
    swift_once();
  }
  NSString v37 = (void *)qword_100964290;
  *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
  *(void *)(inited + 80) = v37;
  id v38 = v37;
  sub_1000DFC2C(inited);
  id v39 = objc_allocWithZone((Class)NSAttributedString);
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F8E4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v42 = [v39 initWithString:v40 attributes:isa];

  return v42;
}

id sub_1005CC8F0()
{
  MindfulnessSessionViewModel.duration.getter();
  v37.super.super.Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v0 = [self stringWithNumber:v37.super.super.isa decimalPrecision:1 roundingMode:6];
  if (v0)
  {
    id v1 = v0;
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v4 = v3;
  }
  else
  {
    unint64_t v4 = 0xE100000000000000;
    uint64_t v2 = 48;
  }
  uint64_t v5 = self;
  id v6 = [v5 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 localizedStringForKey:v7 value:0 table:0];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  id v12 = [v5 mainBundle];
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 localizedStringForKey:v13 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000A06D0();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10007E2D8(0, &qword_10094B778);
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10074E640;
  *(void *)(v16 + 56) = &type metadata for String;
  unint64_t v17 = sub_1000AA64C();
  *(void *)(v16 + 32) = v2;
  *(void *)(v16 + 40) = v4;
  *(void *)(v16 + 96) = &type metadata for String;
  *(void *)(v16 + 104) = v17;
  *(void *)(v16 + 64) = v17;
  *(void *)(v16 + 72) = v9;
  *(void *)(v16 + 80) = v11;
  swift_bridgeObjectRetain();
  id v18 = NSString.init(format:_:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  id v20 = self;
  id v21 = NSForegroundColorAttributeName;
  id v22 = [v20 fiui_meditationTeal];
  uint64_t v23 = sub_1000AFA94(&qword_10095D8A0);
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 64) = v23;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v24 = qword_10094AF20;
  NSString v25 = NSFontAttributeName;
  if (v24 != -1) {
    swift_once();
  }
  os_log_type_t v26 = (void *)qword_1009642A0;
  *(void *)(inited + 104) = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 80) = v26;
  id v27 = v26;
  sub_1000DFC2C(inited);
  id v28 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F8E4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v31 = [v28 initWithString:v29 attributes:isa];

  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = [v18 rangeOfString:v32];
  uint64_t v35 = v34;

  if (qword_10094AF30 != -1) {
    swift_once();
  }
  [v31 addAttribute:v25 value:qword_1009642B0 range:v33 v35:2, 4];

  return v31;
}

uint64_t sub_1005CCDAC()
{
  uint64_t v0 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter();
  if (v1)
  {
    unint64_t v3 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
    id v4 = [v3 source];

    LODWORD(v3) = [v4 _hasFirstPartyBundleID];
    if (v3) {
      return 0x656D2E656C707061;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v2 = 0x72622E656C707061;
    switch(v0)
    {
      case 0:
        return v2;
      case 1:
        unint64_t v2 = 0x65722E656C707061;
        break;
      case 2:
        return 0x656D2E656C707061;
      case 3:
        unint64_t v2 = 0xD000000000000011;
        break;
      default:
        unint64_t v2 = 0x656D2E656C707061;
        os_log_type_t v5 = static os_log_type_t.fault.getter();
        id v6 = (void *)HKLogActivity;
        os_log_type_t v7 = v5;
        if (os_log_type_enabled(HKLogActivity, v5))
        {
          id v8 = v6;
          uint64_t v9 = swift_slowAlloc();
          uint64_t v11 = swift_slowAlloc();
          *(_DWORD *)uint64_t v9 = 136315394;
          sub_10008F1F4(0xD000000000000010, 0x80000001007CFEB0, &v11);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v9 + 12) = 2048;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v8, v7, "%s found unexpected _HKPrivateMindfulnessType %ld; falling back to meditate",
            (uint8_t *)v9,
            0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        break;
    }
  }
  return v2;
}

id sub_1005CD058()
{
  sub_1005CCDAC();
  if (!v0) {
    return 0;
  }
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [self smm_systemImageNamed:v1];

  id result = [self fiui_meditationTeal];
  if (result)
  {
    id v4 = result;
    id v5 = [v2 imageWithTintColor:result renderingMode:1];

    return v5;
  }
  __break(1u);
  return result;
}

id sub_1005CD128(double a1)
{
  id v2 = [objc_allocWithZone((Class)CHWatchIconParameters) init];
  unint64_t v3 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
  id v4 = [v3 source];

  NSString v5 = [v4 bundleIdentifier];
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v2 setBundleID:v5];

  id v6 = self;
  id v7 = v2;
  id v8 = [v6 mainScreen];
  [v8 scale];
  double v10 = v9;

  [v7 setPreferredAppStoreIconWidth:v10 * a1];
  [v7 setIconVariant2x:50];
  [v7 setIconVariant3x:50];
  return v7;
}

id sub_1005CD288(double a1)
{
  id v2 = [objc_allocWithZone((Class)CHPhoneIconParameters) init];
  unint64_t v3 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
  id v4 = [v3 source];

  NSString v5 = [v4 bundleIdentifier];
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v2 setBundleID:v5];

  id v6 = self;
  id v7 = v2;
  id v8 = [v6 mainScreen];
  [v8 scale];
  double v10 = v9;

  [v7 setPreferredAppStoreIconWidth:v10 * a1];
  [v7 setAppIconFormat:2];
  return v7;
}

id sub_1005CD3D4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = &v33[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v4 = [self timeDateFormatter];
  MindfulnessSessionViewModel.startDate.getter();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v6 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  id v7 = [v4 stringFromDate:isa];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  MindfulnessSessionViewModel.endDate.getter();
  Class v11 = Date._bridgeToObjectiveC()().super.isa;
  v6(v3, v0);
  id v12 = v4;
  id v13 = [v4 stringFromDate:v11];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  uint64_t v34 = v8;
  uint64_t v35 = v10;
  v17._countAndFlagsBits = 9666786;
  v17._object = (void *)0xA300000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = v14;
  v18._object = v16;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  id v20 = self;
  id v21 = NSForegroundColorAttributeName;
  id v22 = [v20 secondaryLabelColor];
  uint64_t v23 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 64) = v23;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v24 = qword_10094AF40;
  NSString v25 = NSFontAttributeName;
  if (v24 != -1) {
    swift_once();
  }
  os_log_type_t v26 = (void *)qword_1009642C0;
  *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
  *(void *)(inited + 80) = v26;
  id v27 = v26;
  sub_1000DFC2C(inited);
  id v28 = objc_allocWithZone((Class)NSAttributedString);
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F8E4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class v30 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v31 = [v28 initWithString:v29 attributes:v30];

  return v31;
}

id sub_1005CD764(uint64_t a1, uint64_t a2)
{
  id v4 = self;
  id v5 = [v4 mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v4 mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  sub_10007E2D8(0, &qword_10094B778);
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10074E640;
  *(void *)(v15 + 56) = &type metadata for String;
  unint64_t v16 = sub_1000AA64C();
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  *(void *)(v15 + 96) = &type metadata for String;
  *(void *)(v15 + 104) = v16;
  *(void *)(v15 + 64) = v16;
  *(void *)(v15 + 72) = v12;
  *(void *)(v15 + 80) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::String v17 = NSString.init(format:_:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v19 = self;
  id v20 = NSForegroundColorAttributeName;
  id result = [v19 heartRateColors];
  if (result)
  {
    id v22 = result;
    id v23 = [result nonGradientTextColor];

    uint64_t v24 = sub_1000AFA94(&qword_10095D8A0);
    *(void *)(inited + 40) = v23;
    *(void *)(inited + 64) = v24;
    *(void *)(inited + 72) = NSFontAttributeName;
    uint64_t v25 = qword_10094AF50;
    os_log_type_t v26 = NSFontAttributeName;
    if (v25 != -1) {
      swift_once();
    }
    id v27 = (void *)qword_1009642D0;
    *(void *)(inited + 104) = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
    *(void *)(inited + 80) = v27;
    id v28 = v27;
    sub_1000DFC2C(inited);
    id v29 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_10008F8E4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v32 = [v29 initWithString:v30 attributes:isa];

    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v34 = [v17 rangeOfString:v33];
    uint64_t v36 = v35;

    if (qword_10094AF58 != -1) {
      swift_once();
    }
    [v32 addAttribute:v26 value:qword_1009642D8 range:v34, v36, 2, 4];

    return v32;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005CDBAC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005CDBF4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1005CB778(a1, a2, a3, *(void (**)(id))(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1005CDC00()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005CDC40(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1005CBC14(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(id))(v3 + 24));
}

uint64_t sub_1005CDC58()
{
  return 8;
}

uint64_t sub_1005CDC64()
{
  return swift_release();
}

uint64_t sub_1005CDC6C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1005CDC80(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1005CDC98()
{
  return 8;
}

uint64_t sub_1005CDCB8()
{
  return 8;
}

unint64_t sub_1005CDCCC()
{
  unint64_t result = qword_1009609A0;
  if (!qword_1009609A0)
  {
    sub_1000A1370(&qword_100960990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009609A0);
  }
  return result;
}

uint64_t sub_1005CDD44(uint64_t a1, Swift::UInt a2, char a3)
{
  id v4 = v3;
  char v7 = a3 & 1;
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v8 - 8);
  NSString v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MetricDetailViewModel();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_10008DB18(a1, (uint64_t *)&unk_100955590);
    unint64_t v15 = sub_10052931C(a2, v7);
    if (v16)
    {
      unint64_t v17 = v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *v4;
      uint64_t v23 = *v4;
      *id v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1004F1E18();
        uint64_t v19 = v23;
      }
      sub_1000C8F30(*(void *)(v19 + 56) + *(void *)(v12 + 72) * v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      sub_1005DC308(v17, v19);
      *id v4 = v19;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    return sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_100955590);
  }
  else
  {
    sub_1000C8F30(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v4;
    *id v4 = 0x8000000000000000;
    sub_1004EF2A0((uint64_t)v14, a2, v7, v20);
    *id v4 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005CDFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ImpressionMetrics();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_10008DB18(a1, (uint64_t *)&unk_10095F740);
    unint64_t v13 = sub_100005758(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1004F3130();
        uint64_t v17 = v21;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, v9);
      sub_1005DCF00(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095F740);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1004EFD98((uint64_t)v12, a2, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005CE20C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095F740);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ImpressionMetrics();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_10008DB18(a1, (uint64_t *)&unk_10095F740);
    sub_1005DBBC4(a2, (uint64_t)v8);
    uint64_t v13 = type metadata accessor for IndexPath();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095F740);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1004EFB94((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = type metadata accessor for IndexPath();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1005CE438(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94(&qword_10095BFB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TrendListMetric();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_10008DB18(a1, &qword_10095BFB0);
    unint64_t v13 = sub_1000D5C14(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1004F33E0();
        uint64_t v17 = v21;
      }
      sub_1000C8F30(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      sub_1005DD118(v15, v17, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_10008DB18((uint64_t)v8, &qword_10095BFB0);
  }
  else
  {
    sub_1000C8F30(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1004F00D8((uint64_t)v12, a2, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005CE6AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_100955590);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MetricDetailViewModel();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_10008DB18(a1, (uint64_t *)&unk_100955590);
    unint64_t v14 = sub_1000D5C14(a2);
    if (v15)
    {
      unint64_t v16 = v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v3;
      uint64_t v22 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1004F3AA4();
        uint64_t v18 = v22;
      }
      sub_1000C8F30(*(void *)(v18 + 56) + *(void *)(v10 + 72) * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      sub_1005DD118(v16, v18, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
      *uint64_t v3 = v18;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_100955590);
  }
  else
  {
    sub_1000C8F30(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MetricDetailViewModel);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1004F067C((uint64_t)v13, a2, v19);
    *uint64_t v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005CE920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_10005C2B0((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1004F09C0(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10008DB18(a1, &qword_100955A00);
    sub_1005DBD94(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_10008DB18((uint64_t)v9, &qword_100955A00);
  }
}

uint64_t sub_1005CE9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v8 = sub_1000AFA94(&qword_100950BA8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Trainer();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_10008DB18(a1, &qword_100950BA8);
    sub_1005DBFD4(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10008DB18((uint64_t)v10, &qword_100950BA8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *id v4 = 0x8000000000000000;
    sub_1004F0CEC((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *id v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005CEBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WorkoutChartViewModel(0);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_10008DB18(a1, &qword_10094D448);
    sub_1005DC17C(a2, (uint64_t)v8);
    return sub_10008DB18((uint64_t)v8, &qword_10094D448);
  }
  else
  {
    sub_1000C8F30(a1, (uint64_t)v12, type metadata accessor for WorkoutChartViewModel);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1004F1438((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v17;
    return swift_bridgeObjectRelease();
  }
}

BOOL sub_1005CED84(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1000B71E0(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for DateInterval, (uint64_t *)&unk_1009546B0);
}

uint64_t sub_1005CEDBC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v15 = v7;
      char v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      char v11 = v10;

      if (v11)
      {
        swift_bridgeObjectRelease();
        char v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_1005CEEF4(uint64_t a1)
{
  uint64_t v55 = sub_1000AFA94(&qword_100964510);
  __chkstk_darwin(v55);
  uint64_t v54 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v53 = (char *)&v43 - v5;
  __chkstk_darwin(v6);
  uint64_t v52 = (char *)&v43 - v7;
  uint64_t v8 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  char v12 = _swiftEmptyArrayStorage;
  if (!v11) {
    return (uint64_t)v12;
  }
  uint64_t v43 = v1;
  uint64_t v59 = _swiftEmptyArrayStorage;
  sub_1001C8F4C(0, v11, 0);
  uint64_t result = sub_1005DE334(a1);
  uint64_t v15 = result;
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  uint64_t v44 = a1 + 80;
  int64_t v45 = v11;
  uint64_t v48 = v10;
  uint64_t v49 = a1;
  uint64_t v46 = v14;
  uint64_t v47 = a1 + 64;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = (unint64_t)v15 >> 6;
    if ((*(void *)(v17 + 8 * ((unint64_t)v15 >> 6)) & (1 << v15)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_26;
    }
    uint64_t v56 = v16;
    uint64_t v57 = 1 << v15;
    uint64_t v21 = v55;
    uint64_t v58 = *(int *)(v55 + 48);
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = type metadata accessor for Date();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    uint64_t v26 = (uint64_t)v52;
    v25(v52, v22 + *(void *)(v24 + 72) * v15, v23);
    uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8 * v15);
    *(void *)(v26 + v58) = v27;
    id v28 = v53;
    v25(v53, v26, v23);
    *(void *)&v28[*(int *)(v21 + 48)] = v27;
    uint64_t v29 = (uint64_t)v28;
    uint64_t v30 = v54;
    sub_1000AEEC8(v29, v54, &qword_100964510);
    swift_retain_n();
    sub_10008DB18(v26, &qword_100964510);
    uint64_t v31 = *(int *)(v21 + 48);
    uint64_t v32 = (uint64_t)v48;
    uint64_t v33 = *(void *)(v30 + v31);
    v25(v48, v30, v23);
    double v34 = *(double *)(v33 + 16) / *(double *)(v33 + 24);
    uint64_t v35 = v51;
    *(double *)(v32 + *(int *)(v51 + 20)) = v34;
    *(double *)(v32 + *(int *)(v35 + 24)) = v34;
    *(double *)(v32 + *(int *)(v35 + 28)) = v34;
    sub_10008DB18(v30, &qword_100964510);
    char v12 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1001C8F4C(0, v12[2] + 1, 1);
      char v12 = v59;
    }
    unint64_t v37 = v12[2];
    unint64_t v36 = v12[3];
    a1 = v49;
    if (v37 >= v36 >> 1)
    {
      sub_1001C8F4C(v36 > 1, v37 + 1, 1);
      char v12 = v59;
    }
    v12[2] = v37 + 1;
    uint64_t result = sub_1000C8F30(v32, (uint64_t)v12+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v37, type metadata accessor for WorkoutChartDataElement);
    int64_t v18 = 1 << *(unsigned char *)(a1 + 32);
    if (v15 >= v18) {
      goto LABEL_27;
    }
    uint64_t v17 = v47;
    uint64_t v38 = *(void *)(v47 + 8 * v20);
    if ((v38 & v57) == 0) {
      goto LABEL_28;
    }
    LODWORD(v14) = v46;
    if (*(_DWORD *)(a1 + 36) != v46) {
      goto LABEL_29;
    }
    unint64_t v39 = v38 & (-2 << (v15 & 0x3F));
    if (v39)
    {
      int64_t v18 = __clz(__rbit64(v39)) | v15 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v45;
    }
    else
    {
      unint64_t v40 = v20 + 1;
      unint64_t v41 = (unint64_t)(v18 + 63) >> 6;
      int64_t v19 = v45;
      if (v20 + 1 < v41)
      {
        unint64_t v42 = *(void *)(v47 + 8 * v40);
        if (v42)
        {
LABEL_22:
          int64_t v18 = __clz(__rbit64(v42)) + (v40 << 6);
        }
        else
        {
          while (v41 - 2 != v20)
          {
            unint64_t v42 = *(void *)(v44 + 8 * v20++);
            if (v42)
            {
              unint64_t v40 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v56 + 1;
    uint64_t v15 = v18;
    if (v56 + 1 == v19) {
      return (uint64_t)v12;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1005CF37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005DBA60(a1, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for TaskPriority();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10008DB18((uint64_t)v10, &qword_10094B7A0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  int64_t v18 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    int64_t v18 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1005CF57C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8 = a2;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    sub_10007E2D8(0, &qword_10095A3B8);
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  if (a3)
  {
    sub_10007E2D8(0, &qword_10095A3B8);
    a3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v10 = a4;
  id v11 = a5;
  v9(v8, a3, a4, a5);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005CF678(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10007E2D8(0, (unint64_t *)&qword_100951108);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005CF71C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1005CF790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __n128 v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (v11)
  {
    id v12 = [v11 startDate:v8.n128_f64[0]];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v13(v10, v6, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v10, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v10, 1, 1, v3, v8);
  }
  id v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "startDate"));
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  return sub_10008DB18((uint64_t)v10, (uint64_t *)&unk_10095B890);
}

uint64_t sub_1005CF9A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v9 = (char *)&v18 - v8;
  id v10 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (!v10)
  {
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
LABEL_7:
    id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "endDate"));
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    return sub_10008DB18((uint64_t)v9, (uint64_t *)&unk_10095B890);
  }
  id v11 = [v10 endDate:v7];
  if (v11)
  {
    id v12 = v11;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
  }
  else
  {
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  }
  sub_1000AEEC8((uint64_t)v5, (uint64_t)v9, (uint64_t *)&unk_10095B890);
  type metadata accessor for Date();
  uint64_t v15 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v13) == 1) {
    goto LABEL_7;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v9, v13);
}

id sub_1005CFC00(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  id v39 = a1;
  uint64_t v13 = sub_1000AFA94(&qword_100964528);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore__chartData;
  unint64_t v40 = _swiftEmptyDictionarySingleton;
  sub_1000AFA94((uint64_t *)&unk_100964370);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  uint64_t v18 = a5;
  int64_t v19 = a4;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData) = _swiftEmptyArrayStorage;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties) = v18;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator) = a3;
  swift_retain();
  id v20 = a3;
  id v21 = [a6 fitnessUIFormattingManager];
  type metadata accessor for WorkoutChartDataElementFormattingManager();
  uint64_t v22 = (void *)swift_allocObject();
  id v23 = a2;
  id v24 = v39;
  id v25 = sub_10009F6D8();
  v22[2] = v21;
  v22[3] = v24;
  v22[4] = a2;
  v22[5] = v25;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager) = v22;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_locationReadings) = v19;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout) = v24;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity) = a2;
  *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutFormattingManager) = a6;
  id v26 = v24;
  id v38 = v20;
  if (a2)
  {
    id v27 = v23;
    id v28 = v19;
    id v29 = a6;
    id result = [v27 fiui_activityType];
LABEL_4:
    *(void *)(v7 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType) = result;
    id v33 = result;
    double v34 = sub_10065C0C8(v33);
    uint64_t v35 = sub_100651C40();
    unint64_t v36 = sub_10065C6A8((uint64_t)v34, (uint64_t)v35);

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v7 + 16) = v36;
    return (id)v7;
  }
  id v31 = v19;
  id v32 = a6;
  id result = [v26 fiui_activityType];
  if (result) {
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005CFED4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore__chartData;
  uint64_t v2 = sub_1000AFA94(&qword_100964528);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1005CFFD4()
{
  sub_1005CFED4();

  return swift_deallocClassInstance();
}

uint64_t sub_1005D002C()
{
  return type metadata accessor for WorkoutChartDataStore();
}

uint64_t type metadata accessor for WorkoutChartDataStore()
{
  uint64_t result = qword_100964358;
  if (!qword_100964358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005D0080()
{
  sub_1005D0150();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1005D0150()
{
  if (!qword_100964368)
  {
    sub_1000A1370((uint64_t *)&unk_100964370);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100964368);
    }
  }
}

uint64_t sub_1005D01AC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WorkoutChartDataStore();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005D01EC()
{
  uint64_t v1 = v0;
  uint64_t v49 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v50 = (uint64_t)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DateInterval();
  uint64_t v55 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v76 = (char *)&v48 - v10;
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v11 - 8);
  uint64_t v64 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v63 = (char *)&v48 - v14;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v48 - v21;
  id v23 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  uint64_t v62 = v24;
  id v65 = v23;
  if (v23)
  {
    uint64_t v67 = sub_1006CB820();
    id v53 = v23;
  }
  else
  {
    uint64_t v67 = sub_100415450();
    id v53 = 0;
  }
  sub_1005CF790((uint64_t)v22);
  uint64_t v57 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
  uint64_t v69 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
  NSString v61 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v54 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  uint64_t v66 = (void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
  uint64_t v71 = (void (**)(uint64_t, uint64_t))(v16 + 8);
  id v60 = (void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v73 = (unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  uint64_t v74 = v55 + 16;
  uint64_t v72 = (void (**)(char *, char *, uint64_t))(v55 + 32);
  id v25 = (void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v56 = _swiftEmptyArrayStorage;
  uint64_t v75 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
  unint64_t v51 = (v55 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  Class v68 = v22;
  uint64_t v26 = (uint64_t)v64;
  uint64_t v52 = v1;
  uint64_t v58 = v18;
  uint64_t v59 = v15;
  while (1)
  {
    if (!v65)
    {
      uint64_t v31 = (uint64_t)v63;
      (*v61)(v63, 1, 1, v15);
LABEL_13:
      uint64_t v32 = v1;
      id v33 = [*(id *)(v1 + v57) endDate:v48];
      uint64_t v34 = v62;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10008DB18(v31, (uint64_t *)&unk_10095B890);
      goto LABEL_15;
    }
    id v28 = [v53 endDate];
    if (v28)
    {
      id v29 = v28;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = 1;
    }
    uint64_t v31 = (uint64_t)v63;
    (*v61)((char *)v26, v30, 1, v15);
    sub_1000AEEC8(v26, v31, (uint64_t *)&unk_10095B890);
    if ((*v54)(v31, 1, v15) == 1) {
      goto LABEL_13;
    }
    uint64_t v32 = v1;
    uint64_t v34 = v62;
    (*v66)(v62, v31, v15);
LABEL_15:
    id v27 = v68;
    char v35 = static Date.< infix(_:_:)();
    uint64_t v70 = *v71;
    v70(v34, v15);
    if ((v35 & 1) == 0) {
      break;
    }
    (*v60)(v18, v27, v15);
    uint64_t v1 = v32;
    DateInterval.init(start:duration:)();
    uint64_t v36 = v67[2];
    if (v36)
    {
      uint64_t v37 = (char *)v67 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
      uint64_t v38 = *(void *)(v55 + 72);
      id v39 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v39(v5, v37, v6);
        unint64_t v40 = *v75;
        (*v75)(v5, 0, 1, v6);
        if ((*v73)(v5, 1, v6) == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v1 = v52;
          uint64_t v26 = (uint64_t)v64;
          uint64_t v18 = v58;
          uint64_t v15 = v59;
          id v27 = v68;
          goto LABEL_6;
        }
        (*v72)(v8, v5, v6);
        char v41 = DateInterval.intersects(_:)();
        (*v25)(v8, v6);
        if (v41) {
          break;
        }
        v37 += v38;
        if (!--v36)
        {
          uint64_t v1 = v52;
          uint64_t v15 = v59;
          id v27 = v68;
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v42 = v50;
      id v27 = v68;
      uint64_t v1 = v52;
      sub_1005D4234();
      uint64_t v43 = v49;
      *(void *)(v42 + *(int *)(v49 + 20)) = 0;
      *(void *)(v42 + *(int *)(v43 + 24)) = 0;
      *(void *)(v42 + *(int *)(v43 + 28)) = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v56 = (void *)sub_1001E7108(0, v56[2] + 1, 1, (unint64_t)v56);
      }
      uint64_t v18 = v58;
      uint64_t v15 = v59;
      unint64_t v45 = v56[2];
      unint64_t v44 = v56[3];
      if (v45 >= v44 >> 1) {
        uint64_t v56 = (void *)sub_1001E7108(v44 > 1, v45 + 1, 1, (unint64_t)v56);
      }
      uint64_t v46 = v56;
      v56[2] = v45 + 1;
      sub_1000C8F30(v50, (uint64_t)v46+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v45, type metadata accessor for WorkoutChartDataElement);
    }
    else
    {
      unint64_t v40 = *v75;
      swift_bridgeObjectRetain();
      uint64_t v15 = v59;
LABEL_23:
      v40(v5, 1, 1, v6);
      swift_bridgeObjectRelease();
      uint64_t v18 = v58;
    }
    uint64_t v26 = (uint64_t)v64;
LABEL_6:
    Date.addingTimeInterval(_:)();
    v70((uint64_t)v27, v15);
    (*v25)(v76, v6);
    (*v66)((uint64_t)v27, (uint64_t)v18, v15);
  }
  v70((uint64_t)v27, v15);
  swift_bridgeObjectRelease();
  *(void *)(v32 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData) = v56;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005D0A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  sub_1000AFA94(&qword_10094B7A0);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  return _swift_task_switch(sub_1005D0B2C, 0, 0);
}

uint64_t sub_1005D0B2C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v27 = *(void *)(v2 + 16);
  if (v27)
  {
    uint64_t v3 = type metadata accessor for TaskPriority();
    uint64_t v4 = *(void *)(v3 - 8);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    id v25 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v24 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v8 = *(void *)(v0 + 112);
      uint64_t v7 = *(void *)(v0 + 120);
      uint64_t v9 = v2;
      char v10 = *(unsigned char *)(v2 + v5 + 32);
      v26(v7, 1, 1, v3);
      uint64_t v11 = swift_allocObject();
      swift_weakInit();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0;
      uint64_t v13 = (void *)(v12 + 16);
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = v11;
      *(unsigned char *)(v12 + 40) = v10;
      sub_1005DBA60(v7, v8);
      int v14 = (*v25)(v8, 1, v3);
      uint64_t v15 = *(void *)(v0 + 112);
      if (v14 == 1)
      {
        sub_10008DB18(*(void *)(v0 + 112), &qword_10094B7A0);
        if (!*v13) {
          goto LABEL_8;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*v24)(v15, v3);
        if (!*v13)
        {
LABEL_8:
          uint64_t v16 = 0;
          uint64_t v18 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v18 = v17;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v19 = **(void **)(v0 + 96);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = &unk_1009644E8;
      *(void *)(v20 + 24) = v12;
      uint64_t v21 = v18 | v16;
      if (v18 | v16)
      {
        uint64_t v21 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v16;
        *(void *)(v0 + 40) = v18;
      }
      uint64_t v2 = v9;
      ++v5;
      uint64_t v6 = *(void *)(v0 + 120);
      *(void *)(v0 + 72) = 1;
      *(void *)(v0 + 80) = v21;
      *(void *)(v0 + 88) = v19;
      swift_task_create();
      swift_release();
      sub_10008DB18(v6, &qword_10094B7A0);
      if (v27 == v5)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1005D0E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 64) = a5;
  *(void *)(v5 + 40) = a4;
  return _swift_task_switch(sub_1005D0E60, 0, 0);
}

uint64_t sub_1005D0E60()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 48) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 56) = v3;
    *(void *)uint64_t v3 = v0;
    *(void *)(v3 + 8) = sub_1005D0F70;
    char v4 = *(unsigned char *)(v0 + 64);
    *(void *)(v3 + 16) = v2;
    *(unsigned char *)(v3 + 32) = v4;
    return _swift_task_switch(sub_1005D10A4, 0, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1005D0F70()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1005D1080(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 32) = a1;
  return _swift_task_switch(sub_1005D10A4, 0, 0);
}

uint64_t sub_1005D10A4()
{
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      char v1 = 1;
      goto LABEL_16;
    case 2:
      uint64_t v2 = (void *)swift_task_alloc();
      *(void *)(v0 + 24) = v2;
      *uint64_t v2 = v0;
      v2[1] = sub_1005D1304;
      return sub_1005D13F8();
    case 3:
      sub_1005D8C08(3, (uint64_t)&unk_1008D0DF0, (uint64_t)sub_1005DBBB8, (uint64_t)&unk_1008D0E08, (SEL *)&selRef_cadenceSamplesForWorkout_workoutActivity_completion_);
      break;
    case 4:
      sub_1005D2B18();
      break;
    case 5:
      uint64_t v4 = &unk_1008D0F10;
      uint64_t v5 = &selRef_groundContactTimeSamplesForWorkout_workoutActivity_completion_;
      uint64_t v6 = sub_1005DF0E0;
      goto LABEL_13;
    case 6:
      uint64_t v4 = &unk_1008D1258;
      uint64_t v5 = &selRef_strideLengthSamplesForWorkout_workoutActivity_completion_;
      uint64_t v6 = sub_1005DF2E0;
      goto LABEL_13;
    case 7:
      uint64_t v4 = &unk_1008D12D0;
      uint64_t v5 = &selRef_verticalOscillationSamplesForWorkout_workoutActivity_completion_;
      uint64_t v6 = sub_1005DF340;
      goto LABEL_13;
    case 8:
      char v1 = 8;
LABEL_16:
      sub_1005D2A18(v1);
      break;
    case 9:
      uint64_t v4 = &unk_1008D11E0;
      uint64_t v5 = &selRef_cyclingSpeedSamplesForWorkout_workoutActivity_completion_;
      uint64_t v6 = sub_1005DF280;
LABEL_13:
      sub_1005D2C68((uint64_t)v6, (uint64_t)v4, (SEL *)v5);
      break;
    case 0xA:
      sub_1005D8C08(10, (uint64_t)&unk_1008D0DF0, (uint64_t)sub_1005DBBB8, (uint64_t)&unk_1008D0E08, (SEL *)&selRef_cadenceSamplesForWorkout_workoutActivity_completion_);
      break;
    default:
      sub_1005D290C();
      break;
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1005D1304()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1005D13F8()
{
  v1[24] = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  v1[25] = v2;
  v1[26] = *(void *)(v2 - 8);
  v1[27] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DispatchQoS();
  v1[28] = v3;
  v1[29] = *(void *)(v3 - 8);
  v1[30] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10095B890);
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v1[33] = v4;
  v1[34] = *(void *)(v4 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  return _swift_task_switch(sub_1005D15E4, 0, 0);
}

uint64_t sub_1005D15E4()
{
  char v1 = *(void **)(v0[24] + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_locationReadings);
  if ((uint64_t)[v1 count] >= 2)
  {
    id v2 = [v1 allValidLocations];
    sub_10007E2D8(0, (unint64_t *)&qword_100957EE0);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62) {
      goto LABEL_34;
    }
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v6 = &qword_100997FF0[2];
    if (v5)
    {
      while (1)
      {
        if (v5 < 1)
        {
          __break(1u);
          goto LABEL_51;
        }
        uint64_t v7 = 0;
        uint64_t v8 = v0[24];
        uint64_t v86 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
        uint64_t v87 = v6[186];
        uint64_t v9 = v0[34];
        unint64_t v10 = v3 & 0xC000000000000001;
        uint64_t v89 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
        unint64_t v91 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
        uint64_t v88 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
        uint64_t v95 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        unint64_t v96 = (void (**)(unint64_t, uint64_t))(v9 + 8);
        uint64_t v82 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
        uint64_t v11 = _swiftEmptyDictionarySingleton;
        uint64_t v12 = &selRef_setCenterCoordinate_;
        __asm { FMOV            V0.2D, #1.0 }
        long long v81 = _Q0;
        uint64_t v84 = v5;
        unint64_t v85 = v3;
        uint64_t v93 = v8;
        unint64_t v83 = v3 & 0xC000000000000001;
        while (1)
        {
          id v18 = v10 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v3 + 8 * v7 + 32);
          uint64_t v19 = v18;
          [v18 v12[318] v81];
          if (v20 > 0.0) {
            break;
          }

LABEL_7:
          if (v5 == ++v7) {
            goto LABEL_36;
          }
        }
        aBlock = v11;
        id v21 = [v19 timestamp];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v22 = *(void **)(v8 + v87);
        if (!v22) {
          break;
        }
        uint64_t v23 = v0[36];
        uint64_t v25 = v0[32];
        uint64_t v24 = v0[33];
        id v26 = [v22 startDate];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v27 = *v91;
        (*v91)(v25, v23, v24);
        uint64_t v28 = *v95;
        (*v95)(v25, 0, 1, v24);
        if ((*v88)(v25, 1, v24) == 1)
        {
          uint64_t v8 = v93;
LABEL_16:
          uint64_t v29 = v0[32];
          id v30 = [*(id *)(v8 + v89) startDate];
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          sub_10008DB18(v29, (uint64_t *)&unk_10095B890);
          goto LABEL_18;
        }
        v27(v0[37], v0[32], v0[33]);
        uint64_t v8 = v93;
LABEL_18:
        unint64_t v3 = v0[37];
        uint64_t v31 = v0[33];
        Date.timeIntervalSince(_:)();
        double v33 = v32;
        uint64_t v34 = *v96;
        (*v96)(v3, v31);
        double v35 = v33
            / *(double *)(*(void *)(v8 + v86) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
        if ((~*(void *)&v35 & 0x7FF0000000000000) != 0)
        {
          if (v35 <= -9.22337204e18) {
            goto LABEL_32;
          }
          if (v35 >= 9.22337204e18) {
            goto LABEL_33;
          }
          if (v22)
          {
            uint64_t v36 = v0[36];
            uint64_t v37 = v0[33];
            uint64_t v38 = v0[31];
            id v39 = [v22 startDate];
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            unint64_t v40 = *v91;
            (*v91)(v38, v36, v37);
            v28(v38, 0, 1, v37);
            if ((*v88)(v38, 1, v37) != 1)
            {
              v40(v0[35], v0[31], v0[33]);
              goto LABEL_26;
            }
          }
          else
          {
            v28(v0[31], 1, 1, v0[33]);
          }
          uint64_t v41 = v0[31];
          id v42 = [*(id *)(v8 + v89) startDate];
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          sub_10008DB18(v41, (uint64_t *)&unk_10095B890);
LABEL_26:
          uint64_t v11 = aBlock;
          uint64_t v43 = v0[38];
          uint64_t v44 = v0[35];
          uint64_t v45 = v0[33];
          Date.addingTimeInterval(_:)();
          v34(v44, v45);
          v34(v43, v45);
          if (aBlock[2] && (unint64_t v46 = sub_100529660(v0[39]), (v47 & 1) != 0))
          {
            uint64_t v48 = *(void *)(aBlock[7] + 8 * v46);
            swift_retain();
          }
          else
          {
            type metadata accessor for WorkoutDataBucket();
            uint64_t v48 = swift_allocObject();
            *(void *)(v48 + 16) = 0;
            *(void *)(v48 + 24) = 0;
          }
          uint64_t v49 = v0[39];
          uint64_t v50 = v0[36];
          uint64_t v51 = v0[33];
          [v19 altitude];
          v52.f64[1] = *((float64_t *)&v81 + 1);
          v52.f64[0] = v53;
          *(float64x2_t *)(v48 + 16) = vaddq_f64(v52, *(float64x2_t *)(v48 + 16));
          (*v82)(v50, v49, v51);
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_1004F127C(v48, v50, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          v34(v50, v51);

          swift_release();
          v34(v49, v51);
          uint64_t v5 = v84;
          unint64_t v3 = v85;
          uint64_t v8 = v93;
          unint64_t v10 = v83;
          uint64_t v12 = &selRef_setCenterCoordinate_;
          goto LABEL_7;
        }
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        id v4 = (id)swift_bridgeObjectRelease();
        uint64_t v6 = qword_100997FF0 + 16;
        if (!v5) {
          goto LABEL_35;
        }
      }
      uint64_t v28 = *v95;
      (*v95)(v0[32], 1, 1, v0[33]);
      goto LABEL_16;
    }
LABEL_35:
    uint64_t v11 = _swiftEmptyDictionarySingleton;
LABEL_36:
    v0[40] = v11;
    uint64_t v55 = v0[24];
    swift_bridgeObjectRelease();
    uint64_t v56 = swift_bridgeObjectRetain();
    v0[41] = sub_1005CEEF4(v56);
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void **)(v55 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
    id v4 = [v57 fiui_activityType];
    if (!v4)
    {
LABEL_51:
      __break(1u);
      return _swift_continuation_await(v4);
    }
    uint64_t v58 = v4;
    unsigned int v59 = [v4 isDownhillSnowSport];

    if (v59)
    {
      id v60 = *(void **)(v0[24] + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator);
      v0[2] = v0;
      v0[7] = v0 + 23;
      v0[3] = sub_1005D20B4;
      uint64_t v61 = swift_continuation_init();
      v0[16] = _NSConcreteStackBlock;
      v0[17] = 0x40000000;
      v0[18] = sub_1005D43D0;
      v0[19] = &unk_1008D0EF8;
      v0[20] = v61;
      [v60 downhillRunsForWorkout:v57 completion:v0 + 16];
      id v4 = v0 + 2;
      return _swift_continuation_await(v4);
    }
    uint64_t v62 = *(void **)(v0[24] + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
    if (v62 && (id v63 = objc_msgSend(v62, "fiui_elevationGain")) != 0
      || (id v63 = objc_msgSend(v57, "fiui_elevationGain")) != 0)
    {
      uint64_t v64 = self;
      id v65 = v63;
      id v66 = [v64 meterUnit];
      [v65 doubleValueForUnit:v66];
      uint64_t v68 = v67;

      id v97 = v65;
      char v69 = 0;
    }
    else
    {
      id v97 = 0;
      char v69 = 1;
      uint64_t v68 = 0;
    }
    uint64_t v70 = v0[41];
    uint64_t v72 = v0[29];
    uint64_t v71 = v0[30];
    uint64_t v73 = v0[27];
    uint64_t v92 = v0[28];
    uint64_t v75 = v0[25];
    uint64_t v74 = v0[26];
    uint64_t v76 = v0[24];
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    unint64_t v90 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = v68;
    *(unsigned char *)(v77 + 24) = v69;
    *(void *)(v77 + 32) = v76;
    *(void *)(v77 + 40) = v70;
    v0[14] = sub_1005DF0D0;
    v0[15] = v77;
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 1107296256;
    v0[12] = sub_100070394;
    v0[13] = &unk_1008D0ED0;
    uint64_t v78 = _Block_copy(v0 + 10);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[22] = _swiftEmptyArrayStorage;
    sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v78);

    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v75);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v92);

    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v79 = (uint64_t (*)(void))v0[1];
  return v79();
}

uint64_t sub_1005D20B4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 336) = v1;
  if (v1) {
    id v2 = sub_1005D2670;
  }
  else {
    id v2 = sub_1005D21C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005D21C4()
{
  unint64_t v1 = v0[23];
  uint64_t v2 = 0;
  if (!v1) {
    goto LABEL_15;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_13;
    }
  }
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if (v3 < 0)
  {
    __break(1u);
    return result;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v5 + 1;
      id v7 = objc_retain(*(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)()
                             + OBJC_IVAR___CHWorkoutDownhillRun_downhillRun));
      swift_unknownObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t v5 = v6;
    }
    while (v3 != v6);
  }
  else
  {
    uint64_t v8 = (uint64_t *)(v1 + 32);
    do
    {
      uint64_t v9 = *v8++;
      id v10 = *(id *)(v9 + OBJC_IVAR___CHWorkoutDownhillRun_downhillRun);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v3;
    }
    while (v3);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  type metadata accessor for DownhillRunsStats();
  swift_allocObject();
  DownhillRunsStats.init(downhillRuns:)();
  uint64_t v11 = (void *)DownhillRunsStats.elevationDescended.getter();
  swift_release();
  if (!v11)
  {
LABEL_15:
    uint64_t v27 = 0;
    char v26 = 1;
    goto LABEL_16;
  }
  uint64_t v12 = self;
  id v13 = v11;
  id v14 = [v12 meterUnit];
  [v13 doubleValueForUnit:v14];
  uint64_t v2 = v15;

  uint64_t v27 = v13;
  char v26 = 0;
LABEL_16:
  uint64_t v16 = v0[41];
  uint64_t v18 = v0[29];
  uint64_t v17 = v0[30];
  uint64_t v19 = v0[27];
  uint64_t v29 = v0[28];
  uint64_t v20 = v0[25];
  uint64_t v21 = v0[26];
  uint64_t v22 = v0[24];
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v28 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v2;
  *(unsigned char *)(v23 + 24) = v26;
  *(void *)(v23 + 32) = v22;
  *(void *)(v23 + 40) = v16;
  v0[14] = sub_1005DF0D0;
  v0[15] = v23;
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_100070394;
  v0[13] = &unk_1008D0ED0;
  uint64_t v24 = _Block_copy(v0 + 10);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[22] = _swiftEmptyArrayStorage;
  sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v24);

  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v29);

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_1005D2670()
{
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = v0[41];
  uint64_t v3 = v0[29];
  uint64_t v2 = v0[30];
  uint64_t v4 = v0[27];
  uint64_t v13 = v0[28];
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[26];
  uint64_t v7 = v0[24];
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(unsigned char *)(v8 + 24) = 1;
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 40) = v1;
  v0[14] = sub_1005DF0D0;
  v0[15] = v8;
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_100070394;
  v0[13] = &unk_1008D0ED0;
  uint64_t v9 = _Block_copy(v0 + 10);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[22] = _swiftEmptyArrayStorage;
  sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_1005D290C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  v6[4] = sub_1005DF140;
  v6[5] = v4;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1005CF57C;
  v6[3] = &unk_1008D0F88;
  uint64_t v5 = _Block_copy(v6);
  swift_release();
  [v1 heartRateDataForWorkout:v2 workoutActivity:v3 completion:v5];
  _Block_release(v5);
}

void sub_1005D2A18(char a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (v3)
  {
    id v4 = [v3 workoutConfiguration];
    [v4 activityType];
  }
  else
  {
    [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout) workoutActivityType];
  }
  id v5 = (id)_HKWorkoutSpeedTypeForActivityType();

  if (v5)
  {
    uint64_t v6 = &unk_1008D10B0;
    uint64_t v7 = &unk_1008D10C8;
    uint64_t v8 = &selRef_paceSamplesForWorkout_workoutActivity_completion_;
    uint64_t v9 = sub_1005DF1F4;
  }
  else
  {
    uint64_t v6 = &unk_1008D1150;
    uint64_t v7 = &unk_1008D1168;
    uint64_t v8 = &selRef_distanceSamplesForWorkout_workoutActivity_completion_;
    uint64_t v9 = sub_1005DF208;
  }
  sub_1005D8C08(a1, (uint64_t)v6, (uint64_t)v9, (uint64_t)v7, (SEL *)v8);
}

void sub_1005D2B18()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator);
  uint64_t v4 = *(void *)((char *)v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  uint64_t v5 = *(void *)((char *)v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v2;
  _OWORD v9[4] = sub_1005DF194;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  _OWORD v9[2] = sub_1005CF678;
  v9[3] = &unk_1008D1028;
  uint64_t v8 = _Block_copy(v9);
  swift_release();
  [v3 powerSamplesForWorkout:v4 workoutActivity:v5 completion:v8];
  _Block_release(v8);
}

void sub_1005D2C68(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator);
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  v12[4] = a1;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1005CF678;
  v12[3] = a2;
  uint64_t v11 = _Block_copy(v12);
  swift_release();
  [v7 *a3:v8, v9, v11];
  _Block_release(v11);
}

void sub_1005D2D6C(unint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v59 = a4;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WorkoutChartDataElement(0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    uint64_t v54 = v16;
    uint64_t v53 = v15;
    uint64_t v57 = v7;
    uint64_t v58 = v13;
    uint64_t v55 = v11;
    uint64_t v56 = v9;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong) {
      return;
    }
    unint64_t v27 = Strong;
    if (!a1) {
      goto LABEL_22;
    }
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v28 = v58;
      if (v49)
      {
LABEL_8:
        swift_retain();
        uint64_t v29 = sub_1005DE520(a1, v27, v27);
        swift_release();
        if (v29)
        {
          uint64_t v58 = (char *)v29;
          uint64_t v30 = swift_allocObject();
          uint64_t v31 = *(void **)(v27 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
          unint64_t v52 = v27;
          if (!v31) {
            uint64_t v31 = *(void **)(v27 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
          }
          [v31 fiui_averageCadence];
          uint64_t v32 = v57;
          uint64_t v33 = v10;
          uint64_t v34 = v6;
          char v35 = v59;
          *(double *)(v30 + 16) = v36;
          if (v36 < 2.22044605e-16)
          {
            uint64_t v37 = *((void *)v58 + 2);
            if (v37)
            {
              uint64_t v50 = v30;
              uint64_t v38 = (uint64_t)&v58[(*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80)];
              uint64_t v39 = *(void *)(v54 + 72);
              swift_bridgeObjectRetain();
              double v40 = 0.0;
              uint64_t v41 = v53;
              do
              {
                sub_10037B17C(v38, (uint64_t)v18, type metadata accessor for WorkoutChartDataElement);
                double v40 = v40 + *(double *)&v18[*(int *)(v41 + 20)];
                sub_10037B1E4((uint64_t)v18, type metadata accessor for WorkoutChartDataElement);
                v38 += v39;
                --v37;
              }
              while (v37);
              id v42 = (uint64_t *)v58;
              swift_bridgeObjectRelease();
              double v43 = v40 / (double)v42[2];
              char v35 = v59;
              uint64_t v30 = v50;
            }
            else
            {
              double v43 = NAN;
            }
            *(double *)(v30 + 16) = v43;
            uint64_t v32 = v57;
            uint64_t v33 = v10;
            uint64_t v34 = v6;
          }
          uint64_t v51 = v33;
          sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
          uint64_t v44 = v30;
          uint64_t v45 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v46 = swift_allocObject();
          *(void *)(v46 + 16) = v52;
          *(void *)(v46 + 24) = v44;
          *(unsigned char *)(v46 + 32) = v35;
          *(void *)(v46 + 40) = v58;
          aBlock[4] = (uint64_t)sub_1005DF010;
          aBlock[5] = v46;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_100070394;
          aBlock[3] = (uint64_t)&unk_1008D0E80;
          char v47 = _Block_copy(aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
          sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1000AFA94((uint64_t *)&unk_1009555E0);
          sub_100075AF8();
          uint64_t v48 = v56;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v47);
          swift_release();

          (*(void (**)(char *, uint64_t))(v32 + 8))(v48, v34);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v51);
        }
      }
    }
    else
    {
      uint64_t v28 = v58;
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_8;
      }
    }
LABEL_22:
    swift_release();
    return;
  }
  swift_errorRetain();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  uint64_t v20 = (void *)HKLogWorkouts;
  os_log_type_t v21 = v19;
  if (os_log_type_enabled(HKLogWorkouts, v19))
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v22 = v20;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315138;
    swift_getErrorValue();
    uint64_t v24 = Error.localizedDescription.getter();
    void aBlock[6] = sub_10008F1F4(v24, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "Error getting cadence: %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
  }
}

uint64_t sub_1005D3460(id *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  unint64_t v85 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v72 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(char **)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v84 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v72 - v13;
  __chkstk_darwin(v15);
  uint64_t v95 = (char *)&v72 - v16;
  __chkstk_darwin(v17);
  unint64_t v83 = (char *)&v72 - v18;
  __chkstk_darwin(v19);
  uint64_t v76 = (char *)&v72 - v20;
  __chkstk_darwin(v21);
  uint64_t v94 = (char *)&v72 - v22;
  uint64_t v75 = type metadata accessor for DateInterval();
  uint64_t v23 = *(void (***)(char *, uint64_t))(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v74 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v8;
  if ((unint64_t)a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v25 = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v25)
  {
    while (1)
    {
      if (v25 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v82 = v14;
      uint64_t v27 = 0;
      uint64_t v81 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
      unint64_t v88 = (unint64_t)a1 & 0xC000000000000001;
      uint64_t v80 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity;
      uint64_t v73 = v23 + 1;
      uint64_t v90 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
      unint64_t v91 = (void (**)(char *, char *, uint64_t))(v10 + 32);
      uint64_t v93 = (id **)(v10 + 56);
      uint64_t v89 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      uint64_t v79 = (void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v77 = (void (**)(char *, uint64_t, uint64_t))(v10 + 16);
      unint64_t v96 = _swiftEmptyDictionarySingleton;
      uint64_t v28 = &selRef_setModalPresentationStyle_;
      long long v72 = xmmword_1007509E0;
      uint64_t v92 = a2;
      uint64_t v78 = a1;
      uint64_t v87 = v25;
      while (1)
      {
        id v37 = v88 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : a1[v27 + 4];
        uint64_t v38 = v37;
        id v39 = [v37 quantityType:v72];
        id v40 = [v39 aggregationStyle];

        double v41 = 1.0;
        if (v40) {
          break;
        }
        id v42 = [v38 v28[359]];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        id v43 = [v38 endDate];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v44 = v74;
        DateInterval.init(start:end:)();
        DateInterval.duration.getter();
        double v41 = v45;
        (*v73)(v44, v75);
        if (v41 > 0.0) {
          break;
        }
        static os_log_type_t.error.getter();
        id v66 = (void *)HKLogWorkouts;
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v67 = swift_allocObject();
        *(_OWORD *)(v67 + 16) = v72;
        *(void *)(v67 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100951108);
        *(void *)(v67 + 64) = sub_1005DF028();
        *(void *)(v67 + 32) = v38;
        id v68 = v66;
        id v69 = v38;
        os_log(_:dso:log:_:_:)();

        swift_bridgeObjectRelease();
LABEL_7:
        ++v27;
        a2 = v92;
        if (v87 == v27) {
          goto LABEL_36;
        }
      }
      id v46 = [v38 v28[359]];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v23 = *(void (***)(char *, uint64_t))(a2 + v80);
      if (!v23) {
        break;
      }
      id v47 = [*(id *)(a2 + v80) v28[359]];
      uint64_t v48 = v94;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v49 = *v91;
      (*v91)(v8, v48, v9);
      a1 = *v93;
      ((void (*)(char *, void, uint64_t, uint64_t))*v93)(v8, 0, 1, v9);
      if ((*v89)(v8, 1, v9) == 1)
      {
        uint64_t v28 = &selRef_setModalPresentationStyle_;
LABEL_17:
        id v50 = [*(id *)(a2 + v90) v28[359]];
        uint64_t v14 = v82;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10008DB18((uint64_t)v8, (uint64_t *)&unk_10095B890);
        goto LABEL_19;
      }
      uint64_t v14 = v82;
      v49(v82, v8, v9);
LABEL_19:
      uint64_t v10 = v95;
      Date.timeIntervalSince(_:)();
      double v52 = v51;
      uint64_t v53 = *v79;
      (*v79)(v14, v9);
      double v54 = v52
          / *(double *)(*(void *)(a2 + v81) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
      if ((~*(void *)&v54 & 0x7FF0000000000000) != 0)
      {
        if (v54 <= -9.22337204e18) {
          goto LABEL_33;
        }
        if (v54 >= 9.22337204e18) {
          goto LABEL_34;
        }
        if (v23)
        {
          id v55 = [v23 startDate];
          uint64_t v56 = v94;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v57 = *v91;
          uint64_t v58 = (uint64_t)v85;
          (*v91)(v85, v56, v9);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))a1)(v58, 0, 1, v9);
          unsigned int v59 = (*v89)((char *)v58, 1, v9);
          uint64_t v60 = (uint64_t)v83;
          uint64_t v61 = v84;
          if (v59 != 1)
          {
            v57(v84, (char *)v58, v9);
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v58 = (uint64_t)v85;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))a1)(v85, 1, 1, v9);
          uint64_t v60 = (uint64_t)v83;
          uint64_t v61 = v84;
        }
        id v62 = [*(id *)(v92 + v90) startDate];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10008DB18(v58, (uint64_t *)&unk_10095B890);
LABEL_27:
        a1 = v78;
        Date.addingTimeInterval(_:)();
        v53(v61, v9);
        v53(v95, v9);
        id v63 = v96;
        if (v96[2] && (unint64_t v64 = sub_100529660(v60), (v65 & 1) != 0))
        {
          uint64_t v29 = *(void *)(v63[7] + 8 * v64);
          swift_retain();
        }
        else
        {
          type metadata accessor for WorkoutDataBucket();
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = 0;
          *(void *)(v29 + 24) = 0;
        }
        id v30 = [v38 quantity];
        [v30 _value];
        double v32 = v31;

        double v33 = v41 + *(double *)(v29 + 24);
        *(double *)(v29 + 16) = v32 + *(double *)(v29 + 16);
        *(double *)(v29 + 24) = v33;
        uint64_t v34 = (uint64_t)v94;
        (*v77)(v94, v60, v9);
        swift_retain();
        char v35 = v96;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v97 = v35;
        sub_1004F127C(v29, v34, isUniquelyReferenced_nonNull_native);
        unint64_t v96 = v97;
        swift_bridgeObjectRelease();
        v53((char *)v34, v9);

        swift_release();
        v53((char *)v60, v9);
        uint64_t v8 = v86;
        uint64_t v28 = &selRef_setModalPresentationStyle_;
        goto LABEL_7;
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      swift_bridgeObjectRetain();
      uint64_t v8 = v86;
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v25 = result;
      if (!result) {
        goto LABEL_36;
      }
    }
    a1 = *v93;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v93)(v8, 1, 1, v9);
    goto LABEL_17;
  }
LABEL_36:
  swift_bridgeObjectRelease();
  uint64_t v70 = swift_bridgeObjectRetain();
  uint64_t v71 = sub_1005CEEF4(v70);
  swift_bridgeObjectRelease();
  if (!*(void *)(v71 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v71 = 0;
  }
  swift_bridgeObjectRelease();
  return v71;
}

uint64_t sub_1005D3E8C(uint64_t a1, uint64_t a2, unsigned int a3, void *a4)
{
  char v35 = a4;
  unsigned int v33 = a3;
  uint64_t v32 = a2;
  uint64_t v5 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v5 - 8);
  uint64_t v37 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v36 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager);
  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  swift_beginAccess();
  uint64_t v22 = v19;
  uint64_t v23 = v33;
  id v24 = sub_1001DBF90(v22, v21, *(void *)(v32 + 16), 0, v33);
  swift_bridgeObjectRelease();
  id v25 = v24;
  char v26 = v35;
  swift_bridgeObjectRetain();
  sub_1005CF790((uint64_t)v12);
  sub_1005CF9A8((uint64_t)v9);
  uint64_t v27 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100377610(v23, 0, 0, v25, v26, 0, (uint64_t)v12, (uint64_t)v9, (uint64_t)v14, v27, 0, v15);
  uint64_t v28 = v37;
  sub_10037B17C((uint64_t)v14, v37, type metadata accessor for WorkoutChartViewModel);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v28, 0, 1, v36);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v29 = (void (*)(char *, void))static Published.subscript.modify();
  sub_1005CEBD4(v28, v23);
  v29(v38, 0);

  swift_release();
  swift_release();
  return sub_10037B1E4((uint64_t)v14, type metadata accessor for WorkoutChartViewModel);
}

uint64_t sub_1005D4234()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005CF790((uint64_t)v4);
  Date.timeIntervalSince(_:)();
  double v6 = v5;
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  uint64_t result = v7(v4, v1);
  double v9 = v6
     / *(double *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties)
                 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v9 < 9.22337204e18)
  {
    sub_1005CF790((uint64_t)v4);
    Date.addingTimeInterval(_:)();
    return v7(v4, v1);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1005D43D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000AFA94(&qword_10095C080);
    uint64_t v5 = swift_allocError();
    *double v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    uint64_t v8 = 0;
    if (a2)
    {
      type metadata accessor for DownhillRunBridge();
      uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    uint64_t v10 = v8;
    sub_1000AEEC8((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40), &qword_100964518);
    return swift_continuation_throwingResume();
  }
}

id sub_1005D44B0(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v16 = (char *)&v37 - v15;
  uint64_t v17 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v18 = *(void *)(v17 - 8);
  *(void *)&double v19 = __chkstk_darwin(v17).n128_u64[0];
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v42 = v10;
  if (a2)
  {
    id v30 = [objc_allocWithZone((Class)NSAttributedString) init];
    goto LABEL_5;
  }
  uint64_t v37 = v13;
  uint64_t v38 = a1;
  uint64_t v39 = v18;
  uint64_t v40 = v17;
  double v41 = a4;
  id result = [*(id *)(a3 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout) fiui_activityType:v19];
  if (result)
  {
    uint64_t v23 = result;
    [result isDownhillSnowSport];

    id v24 = [self mainBundle];
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;

    swift_bridgeObjectRelease();
    id v30 = sub_1001DBF90(v27, v29, v38, 0, 2);
    swift_bridgeObjectRelease();
    uint64_t v17 = v40;
    a4 = v41;
    uint64_t v18 = v39;
    uint64_t v13 = v37;
LABEL_5:
    id v31 = v30;
    swift_bridgeObjectRetain();
    sub_1005CF790((uint64_t)v16);
    sub_1005CF9A8((uint64_t)v13);
    uint64_t v32 = *(void *)(a3 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
    uint64_t v33 = (uint64_t)v13;
    uint64_t v34 = *(void **)(a3 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100377610(2, 0, 0, v31, a4, 0, (uint64_t)v16, v33, (uint64_t)v21, v32, 0, v34);
    uint64_t v35 = (uint64_t)v42;
    sub_10037B17C((uint64_t)v21, (uint64_t)v42, type metadata accessor for WorkoutChartViewModel);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v35, 0, 1, v17);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v36 = (void (*)(unsigned char *, void))static Published.subscript.modify();
    sub_1005CEBD4(v35, 2);
    v36(v43, 0);

    swift_release();
    swift_release();
    return (id)sub_10037B1E4((uint64_t)v21, type metadata accessor for WorkoutChartViewModel);
  }
  __break(1u);
  return result;
}

void sub_1005D48E0(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    uint64_t v13 = (void *)HKLogWorkouts;
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(HKLogWorkouts, v12))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v15 = v13;
      id v16 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v16 = 136315138;
      swift_getErrorValue();
      uint64_t v17 = Error.localizedDescription.getter();
      void aBlock[6] = sub_10008F1F4(v17, v18, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "Error getting ground contact time data: %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  int64_t v20 = Strong;
  if (!a1) {
    goto LABEL_22;
  }
  unint64_t v21 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_8;
    }
LABEL_22:
    swift_release();
    return;
  }
  unint64_t v46 = a1 >> 62;
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v21 = v46;
  if (!v22) {
    goto LABEL_22;
  }
LABEL_8:
  uint64_t v45 = v4;
  unint64_t v46 = v21;
  uint64_t v42 = v9;
  uint64_t v43 = v8;
  uint64_t v44 = v5;
  int64_t v41 = v20;
  sub_1005D4ECC(a1, v20);
  uint64_t v40 = v23;
  if (v22 < 1)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = 0;
    double v25 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(a1 + 8 * v24 + 32);
      }
      uint64_t v27 = v26;
      ++v24;
      id v28 = [v26 quantity];
      [v28 _value];
      double v30 = v29;

      double v25 = v25 + v30;
    }
    while (v22 != v24);
    swift_bridgeObjectRelease();
    if (v46)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v33 = v44;
    uint64_t v32 = v45;
    uint64_t v34 = v42;
    double v35 = v25 / (double)v31;
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v36 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v41;
    *(double *)(v37 + 24) = v35;
    *(void *)(v37 + 32) = v40;
    aBlock[4] = (uint64_t)sub_1005DF118;
    aBlock[5] = v37;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100070394;
    aBlock[3] = (uint64_t)&unk_1008D0F60;
    uint64_t v38 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v38);
    swift_release();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v32);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v43);
  }
}

void sub_1005D4ECC(unint64_t a1, int64_t a2)
{
  int64_t v129 = a2;
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v3 - 8);
  uint64_t v115 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v118 = (char *)&v108 - v6;
  uint64_t v7 = type metadata accessor for NSIndexSetIterator();
  uint64_t v8 = *(void **)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v108 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v122 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v128 = (void **)((char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  unint64_t v18 = (unint64_t)&v108 - v17;
  __chkstk_darwin(v19);
  uint64_t v120 = (char *)&v108 - v20;
  __chkstk_darwin(v21);
  uint64_t v117 = (char *)&v108 - v22;
  __chkstk_darwin(v23);
  uint64_t v135 = (char *)&v108 - v24;
  __chkstk_darwin(v25);
  uint64_t v116 = (char *)&v108 - v26;
  __chkstk_darwin(v27);
  uint64_t v137 = (char *)&v108 - v28;
  uint64_t v124 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v136 = (uint64_t)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000AFA94(&qword_10094D6D8);
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  double v35 = (char *)&v108 - v34;
  unint64_t v114 = a1;
  if (a1 >> 62) {
    goto LABEL_98;
  }
  uint64_t v36 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v126 = v32;
    uint64_t v127 = v10;
    uint64_t v125 = v35;
    if (!v36)
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = (char *)_swiftEmptyDictionarySingleton;
LABEL_43:
      uint64_t v76 = *((void *)v75 + 8);
      uint64_t v128 = v75 + 64;
      uint64_t v77 = 1 << v75[32];
      uint64_t v78 = -1;
      if (v77 < 64) {
        uint64_t v78 = ~(-1 << v77);
      }
      unint64_t v18 = v78 & v76;
      int64_t v129 = (unint64_t)(v77 + 63) >> 6;
      id v130 = (id)(v122 + 16);
      id v134 = (char **)(v8 + 1);
      uint64_t v135 = (char *)(v122 + 32);
      uint64_t v121 = v129 - 1;
      v138 = v75;
      swift_bridgeObjectRetain();
      uint64_t v131 = 0;
      uint64_t v8 = _swiftEmptyArrayStorage;
      uint64_t v132 = v13;
      if (v18)
      {
LABEL_46:
        unint64_t v79 = __clz(__rbit64(v18));
        uint64_t v80 = (void *)((v18 - 1) & v18);
        unint64_t v81 = v79 | (v131 << 6);
      }
      else
      {
        while (1)
        {
          int64_t v87 = v131 + 1;
          if (__OFADD__(v131, 1)) {
            goto LABEL_94;
          }
          if (v87 < v129)
          {
            unint64_t v88 = v128[v87];
            if (v88) {
              goto LABEL_51;
            }
            int64_t v89 = v131 + 2;
            ++v131;
            if (v87 + 1 < v129)
            {
              unint64_t v88 = v128[v89];
              if (v88) {
                goto LABEL_54;
              }
              uint64_t v131 = v87 + 1;
              if (v87 + 2 < v129)
              {
                unint64_t v88 = v128[v87 + 2];
                if (v88)
                {
                  v87 += 2;
                  goto LABEL_51;
                }
                int64_t v89 = v87 + 3;
                uint64_t v131 = v87 + 2;
                if (v87 + 3 < v129) {
                  break;
                }
              }
            }
          }
LABEL_65:
          uint64_t v90 = sub_1000AFA94(&qword_10094D6E0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v32, 1, 1, v90);
          uint64_t v80 = 0;
LABEL_66:
          sub_1000AEEC8((uint64_t)v32, (uint64_t)v35, &qword_10094D6D8);
          uint64_t v91 = sub_1000AFA94(&qword_10094D6E0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v35, 1, v91) == 1)
          {
            swift_release();
            swift_bridgeObjectRelease();
            return;
          }
          id v133 = v80;
          uint64_t v92 = *(void **)&v35[*(int *)(v91 + 48)];
          uint64_t v93 = *(void (**)(uint64_t, char *, uint64_t))v135;
          uint64_t v94 = v14;
          (*(void (**)(char *, char *, uint64_t))v135)(v137, v35, v14);
          id v95 = v92;
          NSIndexSet.makeIterator()();

          sub_100067B9C(&qword_10094D6E8, (void (*)(uint64_t))&type metadata accessor for NSIndexSetIterator);
          dispatch thunk of IteratorProtocol.next()();
          if (v140)
          {
            unint64_t v96 = v13;
            id v97 = *v134;
            ((void (*)(char *, uint64_t))*v134)(v96, v7);
            uint64_t v98 = 0;
          }
          else
          {
            uint64_t v98 = (uint64_t)v139;
            dispatch thunk of IteratorProtocol.next()();
            if ((v140 & 1) == 0)
            {
              do
              {
                if ((uint64_t)v139 < v98) {
                  uint64_t v98 = (uint64_t)v139;
                }
                dispatch thunk of IteratorProtocol.next()();
              }
              while (v140 != 1);
            }
            uint64_t v99 = v13;
            id v97 = *v134;
            ((void (*)(char *, uint64_t))*v134)(v99, v7);
          }
          id v100 = v95;
          NSIndexSet.makeIterator()();

          dispatch thunk of IteratorProtocol.next()();
          if (v140)
          {
            ((void (*)(char *, uint64_t))v97)(v10, v7);
            uint64_t v101 = 0;
          }
          else
          {
            uint64_t v102 = v10;
            uint64_t v101 = (uint64_t)v139;
            dispatch thunk of IteratorProtocol.next()();
            if ((v140 & 1) == 0)
            {
              do
              {
                if (v101 <= (uint64_t)v139) {
                  uint64_t v101 = (uint64_t)v139;
                }
                dispatch thunk of IteratorProtocol.next()();
              }
              while (v140 != 1);
            }
            ((void (*)(char *, uint64_t))v97)(v102, v7);
          }
          double v103 = (double)v98;
          uint64_t v104 = v136;
          uint64_t v14 = v94;
          v93(v136, v137, v94);
          uint64_t v105 = v124;
          *(double *)(v104 + *(int *)(v124 + 24)) = v103;
          *(double *)(v104 + *(int *)(v105 + 28)) = (double)v101;
          *(double *)(v104 + *(int *)(v105 + 20)) = (v103 + (double)v101) * 0.5;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = (void *)sub_1001E7108(0, v8[2] + 1, 1, (unint64_t)v8);
          }
          uint64_t v32 = v126;
          uint64_t v10 = v127;
          double v35 = v125;
          unint64_t v107 = v8[2];
          unint64_t v106 = v8[3];
          if (v107 >= v106 >> 1) {
            uint64_t v8 = (void *)sub_1001E7108(v106 > 1, v107 + 1, 1, (unint64_t)v8);
          }
          v8[2] = v107 + 1;
          sub_1000C8F30(v136, (uint64_t)v8+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(void *)(v123 + 72) * v107, type metadata accessor for WorkoutChartDataElement);

          uint64_t v13 = v132;
          unint64_t v18 = (unint64_t)v133;
          if (v133) {
            goto LABEL_46;
          }
        }
        unint64_t v88 = v128[v89];
        if (!v88)
        {
          while (1)
          {
            int64_t v87 = v89 + 1;
            if (__OFADD__(v89, 1)) {
              goto LABEL_100;
            }
            if (v87 >= v129)
            {
              uint64_t v131 = v121;
              goto LABEL_65;
            }
            unint64_t v88 = v128[v87];
            ++v89;
            if (v88) {
              goto LABEL_51;
            }
          }
        }
LABEL_54:
        int64_t v87 = v89;
LABEL_51:
        uint64_t v80 = (void *)((v88 - 1) & v88);
        unint64_t v81 = __clz(__rbit64(v88)) + (v87 << 6);
        uint64_t v131 = v87;
      }
      uint64_t v82 = v138;
      (*(void (**)(char *, unint64_t, uint64_t))(v122 + 16))(v32, *((void *)v138 + 6) + *(void *)(v122 + 72) * v81, v14);
      uint64_t v83 = *((void *)v82 + 7);
      uint64_t v84 = sub_1000AFA94(&qword_10094D6E0);
      unint64_t v85 = *(void **)(v83 + 8 * v81);
      *(void *)&v32[*(int *)(v84 + 48)] = v85;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v32, 0, 1, v84);
      id v86 = v85;
      uint64_t v13 = v132;
      goto LABEL_66;
    }
    if (v36 < 1) {
      break;
    }
    unint64_t v111 = v18;
    uint64_t v108 = v8;
    unint64_t v18 = 0;
    id v37 = *(id *)(v129 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
    unint64_t v113 = a1 & 0xC000000000000001;
    uint64_t v121 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
    uint64_t v112 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
    uint64_t v8 = (void *)(v122 + 32);
    uint64_t v131 = v122 + 56;
    int v119 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
    id v134 = (char **)(v122 + 8);
    uint64_t v109 = (void (**)(uint64_t, char *, uint64_t))(v122 + 16);
    double v35 = (char *)_swiftEmptyDictionarySingleton;
    id v130 = v37;
    uint64_t v132 = (char *)(v122 + 32);
    uint64_t v110 = v36;
    while (1)
    {
      id v43 = v113 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v18 + 32);
      uint64_t v44 = (uint64_t)v118;
      v138 = v35;
      uint64_t v45 = &selRef_setModalPresentationStyle_;
      id v133 = v43;
      id v46 = [v43 startDate:v108];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      if (v37)
      {
        id v47 = [v37 startDate];
        uint64_t v48 = v120;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v49 = (void (*)(uint64_t, uint64_t, uint64_t))*v8;
        ((void (*)(uint64_t, char *, uint64_t))*v8)(v44, v48, v14);
        double v35 = *(char **)v131;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))v131)(v44, 0, 1, v14);
        if ((*v119)(v44, 1, v14) != 1)
        {
          uint64_t v10 = v117;
          v49((uint64_t)v117, v44, v14);
          uint64_t v8 = (void *)v129;
          goto LABEL_17;
        }
      }
      else
      {
        double v35 = *(char **)v131;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v131)(v44, 1, 1, v14);
      }
      uint64_t v10 = v117;
      uint64_t v8 = (void *)v129;
      id v50 = [*(id *)(v129 + v121) startDate];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10008DB18(v44, (uint64_t *)&unk_10095B890);
LABEL_17:
      Date.timeIntervalSince(_:)();
      double v52 = v51;
      uint64_t v32 = *v134;
      ((void (*)(char *, uint64_t))*v134)(v10, v14);
      double v53 = v52
          / *(double *)(*(void *)((char *)v8 + v112)
                      + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
      if ((~*(void *)&v53 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v53 <= -9.22337204e18) {
        goto LABEL_89;
      }
      if (v53 >= 9.22337204e18) {
        goto LABEL_90;
      }
      if (!v130)
      {
        uint64_t v57 = (uint64_t)v115;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v35)(v115, 1, 1, v14);
LABEL_24:
        id v61 = [*(id *)(v129 + v121) v45[359]];
        unint64_t v59 = v111;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10008DB18(v57, (uint64_t *)&unk_10095B890);
        double v35 = v138;
        uint64_t v8 = v132;
        goto LABEL_25;
      }
      id v54 = [v130 startDate];
      id v55 = v120;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v56 = *(void (**)(unint64_t, uint64_t, uint64_t))v132;
      uint64_t v57 = (uint64_t)v115;
      uint64_t v58 = v55;
      uint64_t v45 = &selRef_setModalPresentationStyle_;
      (*(void (**)(char *, char *, uint64_t))v132)(v115, v58, v14);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v35)(v57, 0, 1, v14);
      if ((*v119)(v57, 1, v14) == 1) {
        goto LABEL_24;
      }
      unint64_t v59 = v111;
      uint64_t v60 = v57;
      uint64_t v8 = v132;
      v56(v111, v60, v14);
      double v35 = v138;
LABEL_25:
      uint64_t v10 = v116;
      Date.addingTimeInterval(_:)();
      ((void (*)(unint64_t, uint64_t))v32)(v59, v14);
      ((void (*)(char *, uint64_t))v32)(v135, v14);
      id v62 = [v133 quantity];
      [v62 _value];
      double v64 = v63;

      if (*((void *)v35 + 2) && (unint64_t v65 = sub_100529660((uint64_t)v10), (v66 & 1) != 0))
      {
        if ((~*(void *)&v64 & 0x7FF0000000000000) == 0) {
          goto LABEL_95;
        }
        if (v64 <= -9.22337204e18) {
          goto LABEL_96;
        }
        if (v64 >= 9.22337204e18) {
          goto LABEL_97;
        }
        [*(id *)(*((void *)v35 + 7) + 8 * v65) addIndex:(uint64_t)v64];
        a1 = v114;
      }
      else
      {
        (*v109)((uint64_t)v128, v10, v14);
        if ((~*(void *)&v64 & 0x7FF0000000000000) == 0) {
          goto LABEL_91;
        }
        if (v64 <= -9.22337204e18) {
          goto LABEL_92;
        }
        if (v64 >= 9.22337204e18) {
          goto LABEL_93;
        }
        id v67 = [objc_allocWithZone((Class)NSMutableIndexSet) initWithIndex:(uint64_t)v64];
        if (!v67)
        {
          uint64_t v68 = (uint64_t)v138;
          swift_bridgeObjectRetain();
          unint64_t v69 = sub_100529660((uint64_t)v128);
          char v71 = v70;
          swift_bridgeObjectRelease();
          if (v71)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v139 = (char *)v68;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1004F20AC();
              uint64_t v68 = (uint64_t)v139;
            }
            ((void (*)(unint64_t, uint64_t))v32)(*(void *)(v68 + 48) + *(void *)(v122 + 72) * v69, v14);
            uint64_t v73 = *(void **)(*((void *)v139 + 7) + 8 * v69);
            int64_t v74 = v69;
            double v35 = v139;
            sub_1005DD758(v74, (uint64_t)v139, (uint64_t (*)(void))&type metadata accessor for Date, (unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v73 = 0;
            double v35 = (char *)v68;
          }
          ((void (*)(void *, uint64_t))v32)(v128, v14);

          id v42 = v73;
          a1 = v114;
          uint64_t v8 = v132;
          goto LABEL_8;
        }
        uint64_t v38 = (uint64_t)v67;
        uint64_t v39 = (uint64_t)v138;
        char v40 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v139 = (char *)v39;
        uint64_t v41 = (uint64_t)v128;
        sub_1004EF404(v38, (uint64_t)v128, v40);
        double v35 = v139;
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v32)(v41, v14);
        a1 = v114;
        uint64_t v8 = v132;
      }
      id v42 = v133;
LABEL_8:
      ++v18;

      ((void (*)(char *, uint64_t))v32)(v10, v14);
      id v37 = v130;
      if (v110 == v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v75 = v35;
        double v35 = v125;
        uint64_t v32 = v126;
        uint64_t v10 = v127;
        uint64_t v8 = v108;
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    swift_bridgeObjectRetain();
    a1 = v114;
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
  }
  __break(1u);
LABEL_100:
  __break(1u);
}

void sub_1005D6008(unint64_t a1, int64_t a2)
{
  int64_t v130 = a2;
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v3 - 8);
  uint64_t v116 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v119 = (char *)&v109 - v6;
  uint64_t v7 = type metadata accessor for NSIndexSetIterator();
  uint64_t v8 = *(void **)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v109 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v123 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  int64_t v129 = (void **)((char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  unint64_t v18 = (unint64_t)&v109 - v17;
  __chkstk_darwin(v19);
  uint64_t v121 = (char *)&v109 - v20;
  __chkstk_darwin(v21);
  char v118 = (char *)&v109 - v22;
  __chkstk_darwin(v23);
  uint64_t v136 = (char *)&v109 - v24;
  __chkstk_darwin(v25);
  uint64_t v117 = (char *)&v109 - v26;
  __chkstk_darwin(v27);
  v138 = (char *)&v109 - v28;
  uint64_t v125 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v137 = (uint64_t)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000AFA94(&qword_10094D6D8);
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)&v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  double v35 = (char *)&v109 - v34;
  unint64_t v115 = a1;
  if (a1 >> 62) {
    goto LABEL_98;
  }
  uint64_t v36 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v127 = v32;
    uint64_t v128 = v10;
    uint64_t v126 = v35;
    if (!v36)
    {
      swift_bridgeObjectRelease();
      uint64_t v76 = (char *)_swiftEmptyDictionarySingleton;
LABEL_43:
      uint64_t v77 = *((void *)v76 + 8);
      int64_t v129 = v76 + 64;
      uint64_t v78 = 1 << v76[32];
      uint64_t v79 = -1;
      if (v78 < 64) {
        uint64_t v79 = ~(-1 << v78);
      }
      unint64_t v18 = v79 & v77;
      int64_t v130 = (unint64_t)(v78 + 63) >> 6;
      id v131 = (id)(v123 + 16);
      uint64_t v135 = (char **)(v8 + 1);
      uint64_t v136 = (char *)(v123 + 32);
      uint64_t v122 = v130 - 1;
      uint64_t v139 = v76;
      swift_bridgeObjectRetain();
      uint64_t v132 = 0;
      uint64_t v8 = _swiftEmptyArrayStorage;
      id v133 = v13;
      if (v18)
      {
LABEL_46:
        unint64_t v80 = __clz(__rbit64(v18));
        unint64_t v81 = (void *)((v18 - 1) & v18);
        unint64_t v82 = v80 | (v132 << 6);
      }
      else
      {
        while (1)
        {
          int64_t v88 = v132 + 1;
          if (__OFADD__(v132, 1)) {
            goto LABEL_94;
          }
          if (v88 < v130)
          {
            unint64_t v89 = v129[v88];
            if (v89) {
              goto LABEL_51;
            }
            int64_t v90 = v132 + 2;
            ++v132;
            if (v88 + 1 < v130)
            {
              unint64_t v89 = v129[v90];
              if (v89) {
                goto LABEL_54;
              }
              uint64_t v132 = v88 + 1;
              if (v88 + 2 < v130)
              {
                unint64_t v89 = v129[v88 + 2];
                if (v89)
                {
                  v88 += 2;
                  goto LABEL_51;
                }
                int64_t v90 = v88 + 3;
                uint64_t v132 = v88 + 2;
                if (v88 + 3 < v130) {
                  break;
                }
              }
            }
          }
LABEL_65:
          uint64_t v91 = sub_1000AFA94(&qword_10094D6E0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v32, 1, 1, v91);
          unint64_t v81 = 0;
LABEL_66:
          sub_1000AEEC8((uint64_t)v32, (uint64_t)v35, &qword_10094D6D8);
          uint64_t v92 = sub_1000AFA94(&qword_10094D6E0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 48))(v35, 1, v92) == 1)
          {
            swift_release();
            swift_bridgeObjectRelease();
            return;
          }
          id v134 = v81;
          uint64_t v93 = *(void **)&v35[*(int *)(v92 + 48)];
          uint64_t v94 = *(void (**)(uint64_t, char *, uint64_t))v136;
          uint64_t v95 = v14;
          (*(void (**)(char *, char *, uint64_t))v136)(v138, v35, v14);
          id v96 = v93;
          NSIndexSet.makeIterator()();

          sub_100067B9C(&qword_10094D6E8, (void (*)(uint64_t))&type metadata accessor for NSIndexSetIterator);
          dispatch thunk of IteratorProtocol.next()();
          if (v141)
          {
            id v97 = v13;
            uint64_t v98 = *v135;
            ((void (*)(char *, uint64_t))*v135)(v97, v7);
            uint64_t v99 = 0;
          }
          else
          {
            uint64_t v99 = (uint64_t)v140;
            dispatch thunk of IteratorProtocol.next()();
            if ((v141 & 1) == 0)
            {
              do
              {
                if ((uint64_t)v140 < v99) {
                  uint64_t v99 = (uint64_t)v140;
                }
                dispatch thunk of IteratorProtocol.next()();
              }
              while (v141 != 1);
            }
            id v100 = v13;
            uint64_t v98 = *v135;
            ((void (*)(char *, uint64_t))*v135)(v100, v7);
          }
          id v101 = v96;
          NSIndexSet.makeIterator()();

          dispatch thunk of IteratorProtocol.next()();
          if (v141)
          {
            ((void (*)(char *, uint64_t))v98)(v10, v7);
            uint64_t v102 = 0;
          }
          else
          {
            double v103 = v10;
            uint64_t v102 = (uint64_t)v140;
            dispatch thunk of IteratorProtocol.next()();
            if ((v141 & 1) == 0)
            {
              do
              {
                if (v102 <= (uint64_t)v140) {
                  uint64_t v102 = (uint64_t)v140;
                }
                dispatch thunk of IteratorProtocol.next()();
              }
              while (v141 != 1);
            }
            ((void (*)(char *, uint64_t))v98)(v103, v7);
          }
          double v104 = (double)v99;
          uint64_t v105 = v137;
          uint64_t v14 = v95;
          v94(v137, v138, v95);
          uint64_t v106 = v125;
          *(double *)(v105 + *(int *)(v125 + 24)) = v104;
          *(double *)(v105 + *(int *)(v106 + 28)) = (double)v102;
          *(double *)(v105 + *(int *)(v106 + 20)) = (v104 + (double)v102) * 0.5;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = (void *)sub_1001E7108(0, v8[2] + 1, 1, (unint64_t)v8);
          }
          uint64_t v32 = v127;
          uint64_t v10 = v128;
          double v35 = v126;
          unint64_t v108 = v8[2];
          unint64_t v107 = v8[3];
          if (v108 >= v107 >> 1) {
            uint64_t v8 = (void *)sub_1001E7108(v107 > 1, v108 + 1, 1, (unint64_t)v8);
          }
          v8[2] = v108 + 1;
          sub_1000C8F30(v137, (uint64_t)v8+ ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80))+ *(void *)(v124 + 72) * v108, type metadata accessor for WorkoutChartDataElement);

          uint64_t v13 = v133;
          unint64_t v18 = (unint64_t)v134;
          if (v134) {
            goto LABEL_46;
          }
        }
        unint64_t v89 = v129[v90];
        if (!v89)
        {
          while (1)
          {
            int64_t v88 = v90 + 1;
            if (__OFADD__(v90, 1)) {
              goto LABEL_100;
            }
            if (v88 >= v130)
            {
              uint64_t v132 = v122;
              goto LABEL_65;
            }
            unint64_t v89 = v129[v88];
            ++v90;
            if (v89) {
              goto LABEL_51;
            }
          }
        }
LABEL_54:
        int64_t v88 = v90;
LABEL_51:
        unint64_t v81 = (void *)((v89 - 1) & v89);
        unint64_t v82 = __clz(__rbit64(v89)) + (v88 << 6);
        uint64_t v132 = v88;
      }
      uint64_t v83 = v139;
      (*(void (**)(char *, unint64_t, uint64_t))(v123 + 16))(v32, *((void *)v139 + 6) + *(void *)(v123 + 72) * v82, v14);
      uint64_t v84 = *((void *)v83 + 7);
      uint64_t v85 = sub_1000AFA94(&qword_10094D6E0);
      id v86 = *(void **)(v84 + 8 * v82);
      *(void *)&v32[*(int *)(v85 + 48)] = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v32, 0, 1, v85);
      id v87 = v86;
      uint64_t v13 = v133;
      goto LABEL_66;
    }
    if (v36 < 1) {
      break;
    }
    unint64_t v112 = v18;
    uint64_t v109 = v8;
    unint64_t v18 = 0;
    id v37 = *(id *)(v130 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
    unint64_t v114 = a1 & 0xC000000000000001;
    uint64_t v122 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
    uint64_t v8 = (void *)(v123 + 32);
    uint64_t v113 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
    uint64_t v132 = v123 + 56;
    uint64_t v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
    uint64_t v135 = (char **)(v123 + 8);
    double v35 = (char *)_swiftEmptyDictionarySingleton;
    uint64_t v110 = (void (**)(uint64_t, char *, uint64_t))(v123 + 16);
    id v131 = v37;
    id v133 = (char *)(v123 + 32);
    uint64_t v111 = v36;
    while (1)
    {
      id v43 = v114 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v18 + 32);
      uint64_t v44 = (uint64_t)v119;
      uint64_t v139 = v35;
      uint64_t v45 = &selRef_setModalPresentationStyle_;
      id v134 = v43;
      id v46 = [v43 startDate:v109];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      if (v37)
      {
        id v47 = [v37 startDate];
        uint64_t v48 = v121;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v49 = (void (*)(uint64_t, uint64_t, uint64_t))*v8;
        ((void (*)(uint64_t, char *, uint64_t))*v8)(v44, v48, v14);
        double v35 = *(char **)v132;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))v132)(v44, 0, 1, v14);
        if ((*v120)(v44, 1, v14) != 1)
        {
          uint64_t v10 = v118;
          v49((uint64_t)v118, v44, v14);
          uint64_t v8 = (void *)v130;
          goto LABEL_17;
        }
      }
      else
      {
        double v35 = *(char **)v132;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v132)(v44, 1, 1, v14);
      }
      uint64_t v10 = v118;
      uint64_t v8 = (void *)v130;
      id v50 = [*(id *)(v130 + v122) startDate];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10008DB18(v44, (uint64_t *)&unk_10095B890);
LABEL_17:
      Date.timeIntervalSince(_:)();
      double v52 = v51;
      uint64_t v32 = *v135;
      ((void (*)(char *, uint64_t))*v135)(v10, v14);
      double v53 = v52
          / *(double *)(*(void *)((char *)v8 + v113)
                      + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
      if ((~*(void *)&v53 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v53 <= -9.22337204e18) {
        goto LABEL_89;
      }
      if (v53 >= 9.22337204e18) {
        goto LABEL_90;
      }
      if (!v131)
      {
        uint64_t v57 = (uint64_t)v116;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v35)(v116, 1, 1, v14);
LABEL_24:
        id v61 = [*(id *)(v130 + v122) v45[359]];
        unint64_t v59 = v112;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10008DB18(v57, (uint64_t *)&unk_10095B890);
        double v35 = v139;
        uint64_t v8 = v133;
        goto LABEL_25;
      }
      id v54 = [v131 startDate];
      id v55 = v121;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v56 = *(void (**)(unint64_t, uint64_t, uint64_t))v133;
      uint64_t v57 = (uint64_t)v116;
      uint64_t v58 = v55;
      uint64_t v45 = &selRef_setModalPresentationStyle_;
      (*(void (**)(char *, char *, uint64_t))v133)(v116, v58, v14);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v35)(v57, 0, 1, v14);
      if ((*v120)(v57, 1, v14) == 1) {
        goto LABEL_24;
      }
      unint64_t v59 = v112;
      uint64_t v60 = v57;
      uint64_t v8 = v133;
      v56(v112, v60, v14);
      double v35 = v139;
LABEL_25:
      uint64_t v10 = v117;
      Date.addingTimeInterval(_:)();
      ((void (*)(unint64_t, uint64_t))v32)(v59, v14);
      ((void (*)(char *, uint64_t))v32)(v136, v14);
      id v62 = [v134 quantity];
      [v62 _value];
      double v64 = v63;

      double v65 = v64 * 100.0;
      if (*((void *)v35 + 2) && (unint64_t v66 = sub_100529660((uint64_t)v10), (v67 & 1) != 0))
      {
        if ((~*(void *)&v65 & 0x7FF0000000000000) == 0) {
          goto LABEL_95;
        }
        if (v65 <= -9.22337204e18) {
          goto LABEL_96;
        }
        if (v65 >= 9.22337204e18) {
          goto LABEL_97;
        }
        [*(id *)(*((void *)v35 + 7) + 8 * v66) addIndex:(uint64_t)v65];
        a1 = v115;
      }
      else
      {
        (*v110)((uint64_t)v129, v10, v14);
        if ((~*(void *)&v65 & 0x7FF0000000000000) == 0) {
          goto LABEL_91;
        }
        if (v65 <= -9.22337204e18) {
          goto LABEL_92;
        }
        if (v65 >= 9.22337204e18) {
          goto LABEL_93;
        }
        id v68 = [objc_allocWithZone((Class)NSMutableIndexSet) initWithIndex:(uint64_t)v65];
        if (!v68)
        {
          uint64_t v69 = (uint64_t)v139;
          swift_bridgeObjectRetain();
          unint64_t v70 = sub_100529660((uint64_t)v129);
          char v72 = v71;
          swift_bridgeObjectRelease();
          if (v72)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            char v140 = (char *)v69;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1004F20AC();
              uint64_t v69 = (uint64_t)v140;
            }
            ((void (*)(unint64_t, uint64_t))v32)(*(void *)(v69 + 48) + *(void *)(v123 + 72) * v70, v14);
            int64_t v74 = *(void **)(*((void *)v140 + 7) + 8 * v70);
            int64_t v75 = v70;
            double v35 = v140;
            sub_1005DD758(v75, (uint64_t)v140, (uint64_t (*)(void))&type metadata accessor for Date, (unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
            swift_bridgeObjectRelease();
          }
          else
          {
            int64_t v74 = 0;
            double v35 = (char *)v69;
          }
          ((void (*)(void *, uint64_t))v32)(v129, v14);

          id v42 = v74;
          a1 = v115;
          uint64_t v8 = v133;
          goto LABEL_8;
        }
        uint64_t v38 = (uint64_t)v68;
        uint64_t v39 = (uint64_t)v139;
        char v40 = swift_isUniquelyReferenced_nonNull_native();
        char v140 = (char *)v39;
        uint64_t v41 = (uint64_t)v129;
        sub_1004EF404(v38, (uint64_t)v129, v40);
        double v35 = v140;
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v32)(v41, v14);
        a1 = v115;
        uint64_t v8 = v133;
      }
      id v42 = v134;
LABEL_8:
      ++v18;

      ((void (*)(char *, uint64_t))v32)(v10, v14);
      id v37 = v131;
      if (v111 == v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v76 = v35;
        double v35 = v126;
        uint64_t v32 = v127;
        uint64_t v10 = v128;
        uint64_t v8 = v109;
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    swift_bridgeObjectRetain();
    a1 = v115;
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
  }
  __break(1u);
LABEL_100:
  __break(1u);
}

void sub_1005D7150(unint64_t a1, uint64_t a2, void *a3, void *a4, void (**a5)(char *, char *, uint64_t))
{
  int v186 = a5;
  v187 = a4;
  id v152 = a3;
  unint64_t v176 = a1;
  uint64_t v154 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v151 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v150 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = type metadata accessor for DispatchQoS();
  uint64_t v170 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  v149 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NSIndexSetIterator();
  uint64_t v171 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v168 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v173 = (char *)&v148 - v10;
  uint64_t v167 = type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v169 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  v166 = (char *)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v12 - 8);
  uint64_t v172 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v148 - v15;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v165 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v148 - v21;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v148 - v24;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v148 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v148 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v148 - v33;
  __chkstk_darwin(v35);
  id v37 = (char *)&v148 - v36;
  uint64_t v38 = sub_1000AFA94(&qword_10094D6D8);
  __chkstk_darwin(v38 - 8);
  __chkstk_darwin(v39);
  if (v187)
  {
    swift_errorRetain();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    id v43 = (void *)HKLogWorkouts;
    os_log_type_t v44 = v42;
    if (os_log_type_enabled(HKLogWorkouts, v42))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v45 = v43;
      id v46 = (uint8_t *)swift_slowAlloc();
      aBlock = (void *)swift_slowAlloc();
      *(_DWORD *)id v46 = 136315138;
      swift_getErrorValue();
      uint64_t v47 = Error.localizedDescription.getter();
      uint64_t v194 = sub_10008F1F4(v47, v48, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v44, "Error getting heart rates: %s", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  int64_t v182 = (int64_t)v37;
  uint64_t v185 = v34;
  int v163 = v31;
  uint64_t v178 = v28;
  v161 = v25;
  uint64_t v174 = v22;
  uint64_t v162 = v16;
  uint64_t v159 = (uint64_t)&v148 - v40;
  uint64_t v160 = v41;
  v181 = v19;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  id v50 = (void *)Strong;
  uint64_t v51 = v176;
  if (!v176)
  {
    swift_release();
    return;
  }
  if (v176 >> 62) {
    goto LABEL_112;
  }
  uint64_t v52 = *(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_8:
  double v53 = v173;
  id v54 = v178;
  id v55 = v163;
  if (!v52)
  {
    swift_release();
    goto LABEL_100;
  }
  v183 = v50;
  id v156 = self;
  uint64_t v155 = v52;
  if (v52 < 1)
  {
    __break(1u);
    goto LABEL_114;
  }
  uint64_t v56 = 0;
  int64_t v180 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity;
  uint64_t v175 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
  unint64_t v158 = v51 & 0xC000000000000001;
  int v186 = (void (**)(char *, char *, uint64_t))(v165 + 32);
  uint64_t v157 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
  uint64_t v179 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56);
  int v164 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v165 + 48);
  uint64_t v57 = (void (**)(char *, uint64_t))(v165 + 8);
  v177 = (void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
  id v50 = _swiftEmptyDictionarySingleton;
  do
  {
    if (v158) {
      double v63 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      double v63 = *(id *)(v51 + 8 * v56 + 32);
    }
    v187 = v50;
    uint64_t v184 = (void (**)(char *, uint64_t))v63;
    id v64 = [v63 date];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v51 = (uint64_t)v183;
    double v65 = *(void **)((char *)v183 + v180);
    if (!v65)
    {
      uint64_t v69 = *v179;
      uint64_t v68 = (uint64_t)v162;
      (*v179)(v162, 1, 1, v17);
      goto LABEL_21;
    }
    id v66 = [v65 startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    char v67 = *v186;
    uint64_t v68 = (uint64_t)v162;
    (*v186)(v162, v54, v17);
    uint64_t v69 = *v179;
    (*v179)((char *)v68, 0, 1, v17);
    if ((*v164)(v68, 1, v17) == 1)
    {
      uint64_t v51 = (uint64_t)v183;
LABEL_21:
      id v70 = [*(id *)(v51 + v175) startDate];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10008DB18(v68, (uint64_t *)&unk_10095B890);
      goto LABEL_23;
    }
    v67(v55, (char *)v68, v17);
    uint64_t v51 = (uint64_t)v183;
LABEL_23:
    id v50 = v185;
    Date.timeIntervalSince(_:)();
    double v72 = v71;
    uint64_t v73 = *v57;
    (*v57)(v55, v17);
    double v74 = v72
        / *(double *)(*(void *)(v51 + v157) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
    if ((~*(void *)&v74 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      goto LABEL_8;
    }
    if (v74 <= -9.22337204e18) {
      goto LABEL_103;
    }
    if (v74 >= 9.22337204e18) {
      goto LABEL_104;
    }
    int64_t v75 = *(void **)(v51 + v180);
    if (!v75)
    {
      uint64_t v79 = (uint64_t)v172;
      v69(v172, 1, 1, v17);
      unint64_t v81 = (char *)v185;
LABEL_30:
      id v83 = [*(id *)((char *)v183 + v175) startDate];
      unint64_t v82 = v161;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10008DB18(v79, (uint64_t *)&unk_10095B890);
      goto LABEL_31;
    }
    id v76 = [v75 startDate];
    uint64_t v77 = v178;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v78 = *v186;
    uint64_t v79 = (uint64_t)v172;
    (*v186)(v172, v77, v17);
    v69((char *)v79, 0, 1, v17);
    unsigned int v80 = (*v164)(v79, 1, v17);
    unint64_t v81 = (char *)v185;
    if (v80 == 1) {
      goto LABEL_30;
    }
    unint64_t v82 = v161;
    v78(v161, (char *)v79, v17);
LABEL_31:
    uint64_t v84 = v182;
    Date.addingTimeInterval(_:)();
    v73(v82, v17);
    v73(v81, v17);
    id v85 = [v184 quantity];
    id v86 = [v156 _countPerMinuteUnit];
    [v85 doubleValueForUnit:v86];
    double v88 = v87;

    uint64_t v89 = v84;
    id v50 = v187;
    uint64_t v51 = (uint64_t)v174;
    id v55 = v163;
    if (v187[2])
    {
      unint64_t v90 = sub_100529660(v89);
      if (v91)
      {
        id v54 = v178;
        if ((~*(void *)&v88 & 0x7FF0000000000000) == 0) {
          goto LABEL_109;
        }
        if (v88 <= -9.22337204e18) {
          goto LABEL_110;
        }
        if (v88 >= 9.22337204e18) {
          goto LABEL_111;
        }
        [*(id *)(v50[7] + 8 * v90) addIndex:(uint64_t)v88];
        goto LABEL_12;
      }
    }
    (*v177)(v51, v89, v17);
    if ((~*(void *)&v88 & 0x7FF0000000000000) == 0) {
      goto LABEL_105;
    }
    if (v88 <= -9.22337204e18) {
      goto LABEL_106;
    }
    if (v88 >= 9.22337204e18) {
      goto LABEL_107;
    }
    id v92 = [objc_allocWithZone((Class)NSMutableIndexSet) initWithIndex:(uint64_t)v88];
    if (v92)
    {
      uint64_t v58 = (uint64_t)v92;
      unint64_t v59 = v187;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock = v59;
      sub_1004EF404(v58, v51, isUniquelyReferenced_nonNull_native);
      id v50 = aBlock;
      swift_bridgeObjectRelease();
      v73((char *)v51, v17);
      id v54 = v178;
LABEL_12:
      id v61 = v184;
      goto LABEL_13;
    }
    id v50 = v187;
    swift_bridgeObjectRetain();
    unint64_t v93 = sub_100529660(v51);
    char v95 = v94;
    swift_bridgeObjectRelease();
    if (v95)
    {
      int v96 = swift_isUniquelyReferenced_nonNull_native();
      aBlock = v50;
      if (!v96)
      {
        sub_1004F20AC();
        id v50 = aBlock;
      }
      v73((char *)(v50[6] + *(void *)(v165 + 72) * v93), v17);
      id v50 = aBlock;
      id v61 = *(id *)(aBlock[7] + 8 * v93);
      sub_1005DD758(v93, (uint64_t)aBlock, (uint64_t (*)(void))&type metadata accessor for Date, (unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v61 = 0;
    }
    v73(v174, v17);

    id v54 = v178;
LABEL_13:
    ++v56;

    v73((char *)v182, v17);
    uint64_t v51 = v176;
    uint64_t v62 = v171;
  }
  while (v155 != v56);
  swift_bridgeObjectRelease();
  uint64_t v97 = v50[8];
  uint64_t v179 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 8);
  uint64_t v98 = 1 << *((unsigned char *)v50 + 32);
  uint64_t v99 = -1;
  if (v98 < 64) {
    uint64_t v99 = ~(-1 << v98);
  }
  uint64_t v51 = v99 & v97;
  uint64_t v184 = (void (**)(char *, uint64_t))(v62 + 8);
  int64_t v180 = (unint64_t)(v98 + 63) >> 6;
  uint64_t v178 = (char *)(v180 - 1);
  swift_bridgeObjectRetain();
  int64_t v182 = 0;
  uint64_t v185 = _swiftEmptyArrayStorage;
  uint64_t v100 = v170;
  uint64_t v101 = v160;
  if (v51)
  {
LABEL_54:
    unint64_t v102 = __clz(__rbit64(v51));
    v51 &= v51 - 1;
    unint64_t v103 = v102 | (v182 << 6);
LABEL_55:
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v165 + 16))(v101, v50[6] + *(void *)(v165 + 72) * v103, v17);
    uint64_t v104 = v50[7];
    uint64_t v105 = sub_1000AFA94(&qword_10094D6E0);
    uint64_t v106 = *(void **)(v104 + 8 * v103);
    *(void *)(v101 + *(int *)(v105 + 48)) = v106;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v101, 0, 1, v105);
    id v107 = v106;
    goto LABEL_74;
  }
  while (2)
  {
    int64_t v108 = v182 + 1;
    if (__OFADD__(v182, 1)) {
      goto LABEL_108;
    }
    if (v108 < v180)
    {
      unint64_t v109 = (unint64_t)v179[v108];
      if (v109) {
        goto LABEL_59;
      }
      int64_t v110 = v182 + 2;
      ++v182;
      if (v108 + 1 < v180)
      {
        unint64_t v109 = (unint64_t)v179[v110];
        if (v109) {
          goto LABEL_62;
        }
        int64_t v182 = v108 + 1;
        if (v108 + 2 < v180)
        {
          unint64_t v109 = (unint64_t)v179[v108 + 2];
          if (v109)
          {
            v108 += 2;
            goto LABEL_59;
          }
          int64_t v110 = v108 + 3;
          int64_t v182 = v108 + 2;
          if (v108 + 3 < v180)
          {
            unint64_t v109 = (unint64_t)v179[v110];
            if (v109)
            {
LABEL_62:
              int64_t v108 = v110;
LABEL_59:
              uint64_t v51 = (v109 - 1) & v109;
              unint64_t v103 = __clz(__rbit64(v109)) + (v108 << 6);
              int64_t v182 = v108;
              goto LABEL_55;
            }
            while (1)
            {
              int64_t v108 = v110 + 1;
              if (__OFADD__(v110, 1)) {
                break;
              }
              if (v108 >= v180)
              {
                int64_t v182 = (int64_t)v178;
                goto LABEL_73;
              }
              unint64_t v109 = (unint64_t)v179[v108];
              ++v110;
              if (v109) {
                goto LABEL_59;
              }
            }
LABEL_114:
            __break(1u);
            return;
          }
        }
      }
    }
LABEL_73:
    uint64_t v111 = sub_1000AFA94(&qword_10094D6E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v101, 1, 1, v111);
    uint64_t v51 = 0;
LABEL_74:
    uint64_t v112 = v101;
    uint64_t v113 = v159;
    sub_1000AEEC8(v112, v159, &qword_10094D6D8);
    uint64_t v114 = sub_1000AFA94(&qword_10094D6E0);
    int v115 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 48))(v113, 1, v114);
    v187 = v50;
    if (v115 != 1)
    {
      uint64_t v116 = *(void **)(v113 + *(int *)(v114 + 48));
      uint64_t v117 = *v186;
      (*v186)(v181, (char *)v113, v17);
      id v118 = v116;
      NSIndexSet.makeIterator()();

      sub_100067B9C(&qword_10094D6E8, (void (*)(uint64_t))&type metadata accessor for NSIndexSetIterator);
      dispatch thunk of IteratorProtocol.next()();
      if (v189)
      {
        int v119 = v53;
        uint64_t v120 = *v184;
        (*v184)(v119, v7);
        uint64_t v121 = 0;
        uint64_t v122 = v168;
      }
      else
      {
        uint64_t v121 = aBlock;
        dispatch thunk of IteratorProtocol.next()();
        uint64_t v122 = v168;
        if ((v189 & 1) == 0)
        {
          do
          {
            if ((uint64_t)aBlock < (uint64_t)v121) {
              uint64_t v121 = aBlock;
            }
            dispatch thunk of IteratorProtocol.next()();
          }
          while (v189 != 1);
        }
        uint64_t v123 = v53;
        uint64_t v120 = *v184;
        (*v184)(v123, v7);
      }
      id v124 = v118;
      NSIndexSet.makeIterator()();

      dispatch thunk of IteratorProtocol.next()();
      if (v189)
      {
        v120(v122, v7);
        uint64_t v125 = 0;
      }
      else
      {
        uint64_t v126 = v122;
        uint64_t v125 = aBlock;
        dispatch thunk of IteratorProtocol.next()();
        if ((v189 & 1) == 0)
        {
          do
          {
            if ((uint64_t)v125 <= (uint64_t)aBlock) {
              uint64_t v125 = aBlock;
            }
            dispatch thunk of IteratorProtocol.next()();
          }
          while (v189 != 1);
        }
        v120(v126, v7);
      }
      double v127 = (double)(uint64_t)v125;
      uint64_t v128 = v166;
      v117(v166, v181, v17);
      uint64_t v129 = (uint64_t)v128;
      uint64_t v130 = v167;
      *(double *)&v128[*(int *)(v167 + 24)] = (double)(uint64_t)v121;
      *(double *)&v128[*(int *)(v130 + 28)] = v127;
      *(double *)&v128[*(int *)(v130 + 20)] = ((double)(uint64_t)v121 + v127) * 0.5;
      char v131 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v100 = v170;
      double v53 = v173;
      if ((v131 & 1) == 0) {
        uint64_t v185 = (void *)sub_1001E7108(0, v185[2] + 1, 1, (unint64_t)v185);
      }
      uint64_t v101 = v160;
      unint64_t v133 = v185[2];
      unint64_t v132 = v185[3];
      uint64_t v134 = v169;
      if (v133 >= v132 >> 1)
      {
        uint64_t v136 = (void *)sub_1001E7108(v132 > 1, v133 + 1, 1, (unint64_t)v185);
        uint64_t v134 = v169;
        uint64_t v185 = v136;
      }
      uint64_t v135 = v185;
      v185[2] = v133 + 1;
      sub_1000C8F30(v129, (uint64_t)v135+ ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80))+ *(void *)(v134 + 72) * v133, type metadata accessor for WorkoutChartDataElement);

      id v50 = v187;
      if (v51) {
        goto LABEL_54;
      }
      continue;
    }
    break;
  }
  uint64_t v137 = v100;
  swift_release();
  id v138 = v152;
  if (v152)
  {
    [v152 doubleValue];
    uint64_t v140 = v139;
  }
  else
  {
    uint64_t v140 = 0;
  }
  uint64_t v141 = v151;
  v142 = v150;
  long long v143 = v149;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v144 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v145 = swift_allocObject();
  *(void *)(v145 + 16) = v183;
  *(void *)(v145 + 24) = v140;
  *(unsigned char *)(v145 + 32) = v138 == 0;
  *(void *)(v145 + 40) = v185;
  v192 = sub_1005DF14C;
  uint64_t v193 = v145;
  aBlock = _NSConcreteStackBlock;
  uint64_t v189 = 1107296256;
  uint64_t v190 = sub_100070394;
  v191 = &unk_1008D0FD8;
  unsigned __int8 v146 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock = _swiftEmptyArrayStorage;
  sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  uint64_t v147 = v154;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v146);
  swift_release();

  (*(void (**)(char *, uint64_t))(v141 + 8))(v142, v147);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v143, v153);
LABEL_100:
  swift_bridgeObjectRelease();
}

uint64_t sub_1005D8888(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v34 = a4;
  uint64_t v32 = a2;
  int v31 = a3 & 1;
  uint64_t v5 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v5 - 8);
  uint64_t v35 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Date();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v12 = &v30[-v11];
  uint64_t v33 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v13 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager);
  id v17 = [self mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 localizedStringForKey:v18 value:0 table:0];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  id v23 = sub_1001DBF90(v20, v22, v32, v31, 0);
  swift_bridgeObjectRelease();
  id v24 = v23;
  uint64_t v25 = v34;
  swift_bridgeObjectRetain();
  sub_1005CF790((uint64_t)v12);
  sub_1005CF9A8((uint64_t)v9);
  uint64_t v26 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100377610(0, 0, 0, v24, v25, 1, (uint64_t)v12, (uint64_t)v9, (uint64_t)v15, v26, 0, v16);
  uint64_t v27 = v35;
  sub_10037B17C((uint64_t)v15, (uint64_t)v35, type metadata accessor for WorkoutChartViewModel);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v27, 0, 1, v33);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v28 = (void (*)(char *, void))static Published.subscript.modify();
  sub_1005CEBD4((uint64_t)v27, 0);
  v28(v36, 0);

  swift_release();
  swift_release();
  return sub_10037B1E4((uint64_t)v15, type metadata accessor for WorkoutChartViewModel);
}

void sub_1005D8C08(char a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v9 = v5;
  uint64_t v11 = *(void **)(v5 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_dataCalculator);
  uint64_t v12 = *(void *)(v9 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  uint64_t v13 = *(void *)(v9 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(unsigned char *)(v15 + 24) = a1;
  v17[4] = a3;
  v17[5] = v15;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1005CF678;
  v17[3] = a4;
  uint64_t v16 = _Block_copy(v17);
  swift_release();
  [v11 *a5:v12, v13, v16];
  _Block_release(v16);
}

void sub_1005D8D38(id *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    uint64_t v16 = (void *)HKLogWorkouts;
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(HKLogWorkouts, v15))
    {
      swift_errorRetain();
      swift_errorRetain();
      NSString v18 = v16;
      id v19 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v19 = 136315138;
      swift_getErrorValue();
      uint64_t v20 = Error.localizedDescription.getter();
      void aBlock[6] = sub_10008F1F4(v20, v21, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "Error getting pace data: %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v23 = Strong;
  if (!a1) {
    goto LABEL_33;
  }
  if (!((unint64_t)a1 >> 62))
  {
    if (*(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_33:
    swift_release();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v48) {
    goto LABEL_33;
  }
LABEL_8:
  uint64_t v24 = sub_1005D3460(a1, v23);
  if (!v24) {
    goto LABEL_33;
  }
  uint64_t v51 = v24;
  uint64_t v52 = v8;
  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
  id v26 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v23
                                                              + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "totalDistance"));
  if (v26)
  {
    uint64_t v27 = v26;
    id v28 = [self meterUnit];
    [v27 doubleValueForUnit:v28];
    double v30 = v29;
  }
  else
  {
    double v30 = 0.0;
  }
  [*(id *)(v23 + v25) duration];
  double v32 = v31;
  uint64_t v33 = *(void **)(v23 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (v33)
  {
    id v34 = v33;
    id v35 = [v34 distanceType];
    if (v35)
    {
      uint64_t v36 = v35;
      [v34 duration];
      double v32 = v37;
      id v38 = [v34 statisticsForType:v36];
      if (v38)
      {
        uint64_t v39 = v38;
        id v40 = [v38 sumQuantity];
        if (v40)
        {
          id v50 = v40;
          id v49 = [self meterUnit];
          [v50 doubleValueForUnit:v49];
          double v30 = v41;
        }
        else
        {
          double v30 = 0.0;
        }
      }
      else
      {
        double v30 = 0.0;
        uint64_t v39 = v36;
      }
    }
  }
  BOOL v42 = v32 <= 0.0;
  if (v32 > 0.0) {
    double v43 = v30 / v32;
  }
  else {
    double v43 = 0.0;
  }
  char v44 = v42;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v45 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v23;
  *(double *)(v46 + 24) = v43;
  *(unsigned char *)(v46 + 32) = v44;
  *(unsigned char *)(v46 + 33) = a4;
  *(void *)(v46 + 40) = v51;
  aBlock[4] = (uint64_t)sub_1005DF204;
  aBlock[5] = v46;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  aBlock[3] = (uint64_t)&unk_1008D11B8;
  uint64_t v47 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v47);
  swift_release();

  (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1005D93C4(id *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v16 = result;
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    NSString v18 = (void *)HKLogWorkouts;
    os_log_type_t v19 = v17;
    if (!os_log_type_enabled(HKLogWorkouts, v17))
    {
      swift_release();
      return swift_errorRelease();
    }
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v20 = v18;
    unint64_t v21 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v21 = 136315138;
    swift_getErrorValue();
    uint64_t v22 = Error.localizedDescription.getter();
    uint64_t v54 = sub_10008F1F4(v22, v23, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v19, "Error getting pace data: %s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    return swift_release();
  }
  if (!a1) {
    goto LABEL_31;
  }
  if (!((unint64_t)a1 >> 62))
  {
    if (*(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_31:
    sub_1005D8C08(a4, (uint64_t)&unk_1008D1150, (uint64_t)sub_1005DF208, (uint64_t)&unk_1008D1168, (SEL *)&selRef_distanceSamplesForWorkout_workoutActivity_completion_);
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v48) {
    goto LABEL_31;
  }
LABEL_8:
  uint64_t v24 = sub_1005D3460(a1, v16);
  if (!v24) {
    goto LABEL_31;
  }
  uint64_t v52 = v24;
  uint64_t v53 = v8;
  uint64_t v25 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
  id v26 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v16
                                                              + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout), "totalDistance"));
  if (v26)
  {
    uint64_t v27 = v26;
    id v28 = [self meterUnit];
    [v27 doubleValueForUnit:v28];
    double v30 = v29;
  }
  else
  {
    double v30 = 0.0;
  }
  [*(id *)(v16 + v25) duration];
  double v32 = v31;
  uint64_t v33 = *(void **)(v16 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (v33)
  {
    id v34 = v33;
    id v35 = [v34 distanceType];
    if (v35)
    {
      uint64_t v36 = v35;
      [v34 duration];
      double v32 = v37;
      id v38 = [v34 statisticsForType:v36];
      if (v38)
      {
        uint64_t v39 = v38;
        id v40 = [v38 sumQuantity];
        if (v40)
        {
          id v51 = v40;
          id v50 = [self meterUnit];
          [v51 doubleValueForUnit:v50];
          double v30 = v41;
        }
        else
        {
          double v30 = 0.0;
        }
      }
      else
      {
        double v30 = 0.0;
        uint64_t v39 = v36;
      }
    }
  }
  BOOL v42 = v32 <= 0.0;
  if (v32 > 0.0) {
    double v43 = v30 / v32;
  }
  else {
    double v43 = 0.0;
  }
  char v44 = v42;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v45 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v16;
  *(double *)(v46 + 24) = v43;
  *(unsigned char *)(v46 + 32) = v44;
  *(unsigned char *)(v46 + 33) = a4;
  *(void *)(v46 + 40) = v52;
  aBlock[4] = (uint64_t)sub_1005DF204;
  aBlock[5] = v46;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  aBlock[3] = (uint64_t)&unk_1008D1118;
  uint64_t v47 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v47);
  swift_release();

  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1005D9A64(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  double v37 = a5;
  uint64_t v34 = a2;
  int v33 = a3 & 1;
  uint64_t v7 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v7 - 8);
  id v38 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Date();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v14 = &v32[-v13];
  uint64_t v15 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v35 = *(void *)(v15 - 8);
  uint64_t v36 = v15;
  __chkstk_darwin(v15);
  os_log_type_t v17 = &v32[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  NSString v18 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager);
  id v19 = [self mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v19 localizedStringForKey:v20 value:0 table:0];

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  id v25 = sub_1001DBF90(v22, v24, v34, v33, a4);
  swift_bridgeObjectRelease();
  id v26 = v25;
  uint64_t v27 = v37;
  swift_bridgeObjectRetain();
  sub_1005CF790((uint64_t)v14);
  sub_1005CF9A8((uint64_t)v11);
  uint64_t v28 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100377610(a4, 0, 0, v26, v27, 0, (uint64_t)v14, (uint64_t)v11, (uint64_t)v17, v28, 0, v18);
  double v29 = v38;
  sub_10037B17C((uint64_t)v17, (uint64_t)v38, type metadata accessor for WorkoutChartViewModel);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v29, 0, 1, v36);
  swift_getKeyPath();
  swift_getKeyPath();
  double v30 = (void (*)(char *, void))static Published.subscript.modify();
  sub_1005CEBD4((uint64_t)v29, a4);
  v30(v39, 0);

  swift_release();
  swift_release();
  return sub_10037B1E4((uint64_t)v17, type metadata accessor for WorkoutChartViewModel);
}

void sub_1005D9DE8(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    uint64_t v13 = (void *)HKLogWorkouts;
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(HKLogWorkouts, v12))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v15 = v13;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_getErrorValue();
      uint64_t v17 = Error.localizedDescription.getter();
      uint64_t aBlock[6] = sub_10008F1F4(v17, v18, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "Error getting power data: %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  int64_t v20 = Strong;
  if (!a1) {
    goto LABEL_19;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_8;
    }
LABEL_19:
    swift_release();
    return;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_19;
  }
LABEL_8:
  sub_1005D4ECC(a1, v20);
  uint64_t v22 = v21;
  if ([*(id *)(v20 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType) identifier] == (id)13)
  {
    uint64_t v33 = v22;
    uint64_t v23 = *(void *)(v20 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
    uint64_t v24 = *(void *)(v20 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
    id v32 = *(id *)(v20 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutFormattingManager);
    if ([v32 hasAverageCyclingPowerForWorkout:v23 workoutActivity:v24]) {
      [v32 averageCyclingPowerForWorkout:v23 workoutActivity:v24];
    }
    else {
      double v25 = sub_1005DE3BC(a1);
    }
    double v26 = v25;
    uint64_t v22 = v33;
  }
  else
  {
    double v26 = sub_1005DE3BC(a1);
  }
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v33 = static OS_dispatch_queue.main.getter();
  uint64_t v27 = (double *)swift_allocObject();
  *((void *)v27 + 2) = v20;
  v27[3] = v26;
  *((void *)v27 + 4) = v22;
  aBlock[4] = (uint64_t)sub_1005DF1CC;
  aBlock[5] = (uint64_t)v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  aBlock[3] = (uint64_t)&unk_1008D1078;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  double v29 = (void *)v33;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v28);
  swift_release();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1005DA370(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  id v32 = a2;
  uint64_t v7 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v7 - 8);
  uint64_t v34 = (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  os_log_type_t v14 = (char *)&v31 - v13;
  uint64_t v33 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_formattingManager);
  id v18 = [self mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v18 localizedStringForKey:v19 value:0 table:0];

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  id v24 = sub_1001DBF90(v21, v23, *(uint64_t *)&a4, 0, a3);
  swift_bridgeObjectRelease();
  id v25 = v24;
  double v26 = v32;
  swift_bridgeObjectRetain();
  sub_1005CF790((uint64_t)v14);
  sub_1005CF9A8((uint64_t)v11);
  uint64_t v27 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_pauseChartData);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100377610(a3, 0, 0, v25, v26, 1, (uint64_t)v14, (uint64_t)v11, (uint64_t)v16, v27, 0, v17);
  uint64_t v28 = v34;
  sub_10037B17C((uint64_t)v16, v34, type metadata accessor for WorkoutChartViewModel);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v33);
  swift_getKeyPath();
  swift_getKeyPath();
  double v29 = (void (*)(char *, void))static Published.subscript.modify();
  sub_1005CEBD4(v28, a3);
  v29(v35, 0);

  swift_release();
  swift_release();
  return sub_10037B1E4((uint64_t)v16, type metadata accessor for WorkoutChartViewModel);
}

void sub_1005DA6FC(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    uint64_t v13 = (void *)HKLogWorkouts;
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(HKLogWorkouts, v12))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v15 = v13;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_getErrorValue();
      uint64_t v17 = Error.localizedDescription.getter();
      uint64_t aBlock[6] = sub_10008F1F4(v17, v18, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "Error getting power data: %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  int64_t v20 = Strong;
  if (!a1) {
    goto LABEL_16;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_8;
    }
LABEL_16:
    swift_release();
    return;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v33 = v5;
  sub_1005D4ECC(a1, v20);
  uint64_t v32 = v21;
  uint64_t v22 = *(void **)(v20 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutFormattingManager);
  uint64_t v23 = *(void *)(v20 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  uint64_t v24 = *(void *)(v20 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if ([v22 hasAverageCyclingSpeedForWorkout:v23 workoutActivity:v24]) {
    [v22 averageCyclingSpeedForWorkout:v23 workoutActivity:v24];
  }
  else {
    double v25 = sub_1005DE3BC(a1);
  }
  double v26 = v25;
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  uint64_t v27 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v28 = (double *)swift_allocObject();
  *((void *)v28 + 2) = v20;
  v28[3] = v26;
  *((void *)v28 + 4) = v32;
  aBlock[4] = (uint64_t)sub_1005DF2B8;
  aBlock[5] = (uint64_t)v28;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100070394;
  aBlock[3] = (uint64_t)&unk_1008D1230;
  double v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_100075AF8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v29);
  swift_release();

  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1005DAC58(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    uint64_t v13 = (void *)HKLogWorkouts;
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(HKLogWorkouts, v12))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v15 = v13;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_getErrorValue();
      uint64_t v17 = Error.localizedDescription.getter();
      uint64_t aBlock[6] = sub_10008F1F4(v17, v18, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "Error getting stride length data: %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  int64_t v20 = Strong;
  if (!a1) {
    goto LABEL_22;
  }
  unint64_t v21 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_8;
    }
LABEL_22:
    swift_release();
    return;
  }
  unint64_t v46 = a1 >> 62;
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v21 = v46;
  if (!v22) {
    goto LABEL_22;
  }
LABEL_8:
  uint64_t v45 = v4;
  unint64_t v46 = v21;
  uint64_t v42 = v9;
  uint64_t v43 = v8;
  uint64_t v44 = v5;
  int64_t v41 = v20;
  sub_1005D6008(a1, v20);
  uint64_t v40 = v23;
  if (v22 < 1)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = 0;
    double v25 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(a1 + 8 * v24 + 32);
      }
      uint64_t v27 = v26;
      ++v24;
      id v28 = [v26 quantity];
      [v28 _value];
      double v30 = v29;

      double v25 = v25 + v30;
    }
    while (v22 != v24);
    swift_bridgeObjectRelease();
    if (v46)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v33 = v44;
    uint64_t v32 = v45;
    uint64_t v34 = v42;
    double v35 = v25 / (double)v31 * 100.0;
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v36 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v41;
    *(double *)(v37 + 24) = v35;
    *(void *)(v37 + 32) = v40;
    aBlock[4] = (uint64_t)sub_1005DF318;
    aBlock[5] = v37;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100070394;
    aBlock[3] = (uint64_t)&unk_1008D12A8;
    id v38 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v38);
    swift_release();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v32);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v43);
  }
}

void sub_1005DB250(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    uint64_t v13 = (void *)HKLogWorkouts;
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(HKLogWorkouts, v12))
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v15 = v13;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_getErrorValue();
      uint64_t v17 = Error.localizedDescription.getter();
      uint64_t aBlock[6] = sub_10008F1F4(v17, v18, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "Error getting vertical oscillation data: %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  int64_t v20 = Strong;
  if (!a1) {
    goto LABEL_22;
  }
  unint64_t v21 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_8;
    }
LABEL_22:
    swift_release();
    return;
  }
  unint64_t v46 = a1 >> 62;
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v21 = v46;
  if (!v22) {
    goto LABEL_22;
  }
LABEL_8:
  uint64_t v45 = v4;
  unint64_t v46 = v21;
  uint64_t v42 = v9;
  uint64_t v43 = v8;
  uint64_t v44 = v5;
  int64_t v41 = v20;
  sub_1005D6008(a1, v20);
  uint64_t v40 = v23;
  if (v22 < 1)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = 0;
    double v25 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(a1 + 8 * v24 + 32);
      }
      uint64_t v27 = v26;
      ++v24;
      id v28 = [v26 quantity];
      [v28 _value];
      double v30 = v29;

      double v25 = v25 + v30;
    }
    while (v22 != v24);
    swift_bridgeObjectRelease();
    if (v46)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v33 = v44;
    uint64_t v32 = v45;
    uint64_t v34 = v42;
    double v35 = v25 * 100.0 / (double)v31;
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v36 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v41;
    *(double *)(v37 + 24) = v35;
    *(void *)(v37 + 32) = v40;
    aBlock[4] = (uint64_t)sub_1005DF3DC;
    aBlock[5] = v37;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100070394;
    aBlock[3] = (uint64_t)&unk_1008D1320;
    id v38 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_100067B9C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v38);
    swift_release();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v32);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v43);
  }
}

uint64_t sub_1005DB848@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005DB8C8()
{
  return static Published.subscript.setter();
}

uint64_t sub_1005DB944()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005DB97C()
{
  return sub_1005DF378((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1005DB9AC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_10005DB5C;
  *(unsigned char *)(v4 + 64) = v3;
  *(void *)(v4 + 40) = v2;
  return _swift_task_switch(sub_1005D0E60, 0, 0);
}

uint64_t sub_1005DBA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094B7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005DBAC8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000DBD6C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1009644E0 + dword_1009644E0);
  return v6(a1, v4);
}

uint64_t sub_1005DBB80()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005DBBB8(unint64_t a1, uint64_t a2)
{
  sub_1005D2D6C(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_1005DBBC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100529B44(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *char v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1004F2D88();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for IndexPath();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for ImpressionMetrics();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_1005DCBB8(v6, v9);
    *char v3 = v9;
    swift_bridgeObjectRelease();
    os_log_type_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ImpressionMetrics();
    os_log_type_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

double sub_1005DBD94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1000DA1C0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1004F46CC();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_10005C2B0((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1005DD580(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1005DBE98(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10008F618(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1004F48B4();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1005DD758(v4, v7, (uint64_t (*)(void))&type metadata accessor for UUID, (unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1005DBFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1000DA1C0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1004F5020();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for Trainer();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_1005DDA38(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    os_log_type_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for Trainer();
    os_log_type_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1005DC17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10052A09C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *char v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1004F5CE4();
      uint64_t v9 = v19;
    }
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for WorkoutChartViewModel(0);
    uint64_t v18 = *(void *)(v11 - 8);
    sub_1000C8F30(v10 + *(void *)(v18 + 72) * v6, a2, type metadata accessor for WorkoutChartViewModel);
    sub_1005DDDE0(v6, v9);
    *char v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for WorkoutChartViewModel(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

unint64_t sub_1005DC308(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = 16 * v6;
        uint64_t v10 = *(void *)(a2 + 48) + 16 * v6;
        Swift::UInt v11 = *(void *)v10;
        char v12 = *(unsigned char *)(v10 + 8);
        Hasher.init(_seed:)();
        if ((v12 & 1) == 0) {
          Hasher._combine(_:)(3uLL);
        }
        Hasher._combine(_:)(v11);
        double result = Hasher._finalize()();
        unint64_t v13 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v13 < v8) {
          goto LABEL_13;
        }
LABEL_14:
        uint64_t v14 = *(void *)(a2 + 48);
        uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
        uint64_t v16 = (_OWORD *)(v14 + v9);
        if (16 * v3 != v9 || v15 >= v16 + 1) {
          *uint64_t v15 = *v16;
        }
        uint64_t v17 = *(void *)(a2 + 56);
        uint64_t v18 = *(void *)(*(void *)(type metadata accessor for MetricDetailViewModel() - 8) + 72);
        int64_t v19 = v18 * v3;
        double result = v17 + v18 * v3;
        int64_t v20 = v18 * v6;
        unint64_t v21 = v17 + v18 * v6 + v18;
        if (v19 < v20 || result >= v21)
        {
          double result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v19 == v20) {
            goto LABEL_6;
          }
          double result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_23;
        }
      }
      if (v13 < v8) {
        goto LABEL_6;
      }
LABEL_13:
      if (v3 < (uint64_t)v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
LABEL_23:
    uint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  uint64_t *v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DC524(int64_t a1, uint64_t a2)
{
  return sub_1005DD758(a1, a2, (uint64_t (*)(void))&type metadata accessor for Date, (unint64_t *)&qword_10094E748, (void (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_1005DC56C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v9 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v9);
        double result = Hasher._finalize()();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          char v12 = (unsigned char *)(v11 + v3);
          unint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *char v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DC728(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EffortUtilities.WorkoutAndActivityKey();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      unint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_100067B9C(&qword_10095FEE8, (void (*)(uint64_t))&type metadata accessor for EffortUtilities.WorkoutAndActivityKey);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              void *v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DCA20(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (_OWORD *)(v15 + 16 * v3);
            uint64_t v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DCBB8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      uint64_t v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      id v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_100067B9C(&qword_10095FD98, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        uint64_t v19 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(type metadata accessor for ImpressionMetrics() - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    BOOL v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  uint64_t *v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DCF00(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for ImpressionMetrics() - 8) + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DD0D0(int64_t a1, uint64_t a2)
{
  return sub_1005DD758(a1, a2, (uint64_t (*)(void))&type metadata accessor for DateComponents, &qword_10094F290, (void (*)(uint64_t))&type metadata accessor for DateComponents, (uint64_t)&protocol conformance descriptor for DateComponents);
}

unint64_t sub_1005DD118(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        Swift::UInt v11 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v7);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v11);
        unint64_t result = Hasher._finalize()();
        unint64_t v12 = result & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (unsigned char *)(v13 + v4);
        uint64_t v15 = (unsigned char *)(v13 + v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *uint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        unint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DD31C(unint64_t result, uint64_t a2)
{
  int64_t v2 = result;
  uint64_t v3 = a2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v5 = (result + 1) & ~v4;
  if (((1 << v5) & *(void *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    uint64_t v6 = ~v4;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v3 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      unint64_t v7 = (result + 1) & v6;
      uint64_t v8 = a2;
      while (1)
      {
        uint64_t v9 = 24 * v5;
        unint64_t v10 = (unsigned __int8 *)(*(void *)(v8 + 48) + 24 * v5);
        Swift::UInt v11 = *v10;
        Swift::UInt v12 = *((void *)v10 + 1);
        unsigned __int8 v13 = v10[16];
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v11);
        if ((v13 & 1) == 0) {
          Hasher._combine(_:)(3uLL);
        }
        Hasher._combine(_:)(v12);
        unint64_t result = Hasher._finalize()();
        unint64_t v14 = result & v6;
        if (v2 >= (uint64_t)v7)
        {
          uint64_t v8 = a2;
          if (v14 < v7) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v8 = a2;
          if (v14 >= v7) {
            goto LABEL_13;
          }
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_13:
          uint64_t v15 = *(void *)(v8 + 48);
          unint64_t v16 = v15 + 24 * v2;
          uint64_t v17 = (long long *)(v15 + v9);
          if (24 * v2 < v9 || v16 >= (unint64_t)v17 + 24 || v2 != v5)
          {
            long long v18 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v18;
          }
          uint64_t v19 = *(void *)(v8 + 56);
          uint64_t v20 = *(void *)(*(void *)(type metadata accessor for MetricDetailViewModel() - 8) + 72);
          int64_t v21 = v20 * v2;
          unint64_t result = v19 + v20 * v2;
          int64_t v22 = v20 * v5;
          unint64_t v23 = v19 + v20 * v5 + v20;
          if (v21 < v22 || result >= v23)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
            int64_t v2 = v5;
            uint64_t v8 = a2;
          }
          else
          {
            int64_t v2 = v5;
            uint64_t v8 = a2;
            if (v21 != v22)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              int64_t v2 = v5;
            }
          }
        }
LABEL_5:
        unint64_t v5 = (v5 + 1) & v6;
        if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    uint64_t v8 = a2;
LABEL_25:
    uint64_t v25 = (uint64_t *)(v3 + 8 * ((unint64_t)v2 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << v2) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(v3 + 8 * (result >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << result) - 1;
    uint64_t v8 = a2;
  }
  *uint64_t v25 = v26 & v27;
  uint64_t v28 = *(void *)(v8 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v8 + 16) = v30;
    ++*(_DWORD *)(v8 + 36);
  }
  return result;
}

unint64_t sub_1005DD580(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          unsigned __int8 v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *unsigned __int8 v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *unint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    long long v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *long long v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DD758(int64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v43 = a4;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = a2 + 64;
  uint64_t v14 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(void *)(a2 + 64 + 8 * (v15 >> 6))) != 0)
  {
    uint64_t v16 = ~v14;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      uint64_t v17 = (result + 1) & v16;
      int64_t v41 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v42 = v9 + 16;
      uint64_t v46 = *(void *)(v9 + 72);
      uint64_t v40 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
      do
      {
        uint64_t v18 = v13;
        int64_t v19 = v46 * v15;
        v41(v12, *(void *)(a2 + 48) + v46 * v15, v8);
        unint64_t v20 = v17;
        uint64_t v21 = v16;
        sub_100067B9C(v43, v44);
        uint64_t v22 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v40)(v12, v8);
        uint64_t v23 = v22 & v21;
        uint64_t v16 = v21;
        uint64_t v17 = v20;
        if (a1 >= (uint64_t)v20)
        {
          if (v23 >= v20 && a1 >= v23)
          {
LABEL_17:
            uint64_t v26 = *(void *)(a2 + 48);
            unint64_t result = v26 + v46 * a1;
            unint64_t v27 = v26 + v19 + v46;
            if (v46 * a1 < v19 || result >= v27)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              uint64_t v13 = v18;
            }
            else
            {
              BOOL v29 = v46 * a1 == v19;
              uint64_t v13 = v18;
              if (!v29) {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v30 = *(void *)(a2 + 56);
            uint64_t v31 = (void *)(v30 + 8 * a1);
            uint64_t v32 = (void *)(v30 + 8 * v15);
            if (a1 != v15 || (a1 = v15, v31 >= v32 + 1))
            {
              *uint64_t v31 = *v32;
              a1 = v15;
            }
            goto LABEL_5;
          }
        }
        else if (v23 >= v20 || a1 >= v23)
        {
          goto LABEL_17;
        }
        uint64_t v13 = v18;
LABEL_5:
        unint64_t v15 = (v15 + 1) & v16;
      }
      while (((*(void *)(v13 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    }
    BOOL v33 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v34 = *v33;
    uint64_t v35 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v33 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v35 = *v33;
    uint64_t v34 = (-1 << a1) - 1;
  }
  *BOOL v33 = v35 & v34;
  uint64_t v36 = *(void *)(a2 + 16);
  BOOL v37 = __OFSUB__(v36, 1);
  uint64_t v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v38;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DDA38(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for Trainer() - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *unint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DDC48(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            int64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1005DDDE0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        unint64_t result = Hasher._finalize()();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        unint64_t v11 = (unsigned char *)(v10 + v3);
        uint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *unint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for WorkoutChartViewModel(0) - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
    JUMPOUT(0x1005DE12CLL);
  }
  *(void *)(a2 + 16) = v24;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1005DE158(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          int64_t v15 = (_OWORD *)(v14 + 16 * v3);
          int64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *int64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1005DE334(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  Swift::Int v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

double sub_1005DE3BC(unint64_t a1)
{
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v3 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4)
    {
      swift_bridgeObjectRelease();
      double v6 = 0.0;
      goto LABEL_11;
    }
LABEL_3:
    uint64_t v5 = 0;
    double v6 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(a1 + 8 * v5 + 32);
      }
      unint64_t v8 = v7;
      ++v5;
      id v9 = [v7 quantity];
      [v9 _value];
      double v11 = v10;

      double v6 = v6 + v11;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v3) {
      goto LABEL_9;
    }
LABEL_11:
    uint64_t v12 = *(void *)(v2 + 16);
    return v6 / (double)v12;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  if (v14)
  {
    uint64_t v4 = v14;
    if (v14 >= 1) {
      goto LABEL_3;
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
  double v6 = 0.0;
LABEL_9:
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v6 / (double)v12;
}

uint64_t sub_1005DE520(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v89 = a3;
  unint64_t v97 = a2;
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  id v86 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v76 - v7;
  uint64_t v9 = type metadata accessor for Date();
  double v10 = *(char **)(v9 - 8);
  __chkstk_darwin(v9);
  double v88 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v76 - v13;
  __chkstk_darwin(v15);
  uint64_t v101 = (char *)&v76 - v16;
  __chkstk_darwin(v17);
  double v87 = (char *)&v76 - v18;
  __chkstk_darwin(v19);
  unsigned int v80 = (char *)&v76 - v20;
  __chkstk_darwin(v21);
  uint64_t v99 = (char *)&v76 - v22;
  uint64_t v79 = type metadata accessor for DateInterval();
  BOOL v23 = *(void (***)(char *, uint64_t))(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v78 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v90 = v8;
  if (a1 >> 62) {
    goto LABEL_37;
  }
  uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v25)
  {
    while (1)
    {
      if (v25 < 1)
      {
        __break(1u);
        return result;
      }
      id v85 = v14;
      uint64_t v27 = 0;
      uint64_t v84 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_chartProperties;
      unint64_t v93 = a1 & 0xC000000000000001;
      uint64_t v83 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity;
      uint64_t v95 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout;
      uint64_t v77 = v23 + 1;
      int v96 = (void (**)(uint64_t, char *, uint64_t))(v10 + 32);
      uint64_t v82 = OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType;
      uint64_t v98 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      char v94 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      uint64_t v100 = (void (**)(char *, uint64_t))(v10 + 8);
      unint64_t v81 = (void (**)(char *, uint64_t, uint64_t))(v10 + 16);
      unint64_t v102 = _swiftEmptyDictionarySingleton;
      uint64_t v28 = &selRef_setModalPresentationStyle_;
      long long v76 = xmmword_1007509E0;
      uint64_t v91 = v25;
      unint64_t v92 = a1;
      uint64_t v29 = (uint64_t)v8;
      while (1)
      {
        id v40 = v93 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v27 + 32);
        int64_t v41 = v40;
        id v42 = [v40 quantityType:v76];
        id v43 = [v42 aggregationStyle];

        double v44 = 1.0;
        a1 = v97;
        if (v43) {
          break;
        }
        id v45 = [v41 v28[359]];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        id v46 = [v41 endDate];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v47 = v78;
        DateInterval.init(start:end:)();
        DateInterval.duration.getter();
        double v44 = v48;
        (*v77)(v47, v79);
        if (v44 > 0.0) {
          break;
        }
        static os_log_type_t.error.getter();
        uint64_t v69 = (void *)HKLogWorkouts;
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v70 = swift_allocObject();
        *(_OWORD *)(v70 + 16) = v76;
        *(void *)(v70 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100951108);
        *(void *)(v70 + 64) = sub_1005DF028();
        *(void *)(v70 + 32) = v41;
        uint64_t v71 = v29;
        id v72 = v69;
        id v73 = v41;
        os_log(_:dso:log:_:_:)();

        uint64_t v29 = v71;
        swift_bridgeObjectRelease();
LABEL_9:
        ++v27;
        a1 = v92;
        if (v91 == v27) {
          goto LABEL_38;
        }
      }
      id v49 = [v41 v28[359]];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      BOOL v23 = *(void (***)(char *, uint64_t))(a1 + v83);
      if (!v23) {
        break;
      }
      id v50 = [*(id *)(a1 + v83) v28[359]];
      id v51 = v99;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v52 = *v96;
      (*v96)(v29, v51, v9);
      uint64_t v53 = *v98;
      (*v98)(v29, 0, 1, v9);
      if ((*v94)(v29, 1, v9) == 1)
      {
        uint64_t v28 = &selRef_setModalPresentationStyle_;
LABEL_19:
        id v54 = [*(id *)(a1 + v95) v28[359]];
        uint64_t v14 = v85;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10008DB18(v29, (uint64_t *)&unk_10095B890);
        goto LABEL_21;
      }
      uint64_t v14 = v85;
      v52((uint64_t)v85, (char *)v29, v9);
LABEL_21:
      double v10 = v101;
      Date.timeIntervalSince(_:)();
      double v56 = v55;
      uint64_t v57 = *v100;
      (*v100)(v14, v9);
      double v58 = v56
          / *(double *)(*(void *)(a1 + v84) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
      if ((~*(void *)&v58 & 0x7FF0000000000000) != 0)
      {
        if (v58 <= -9.22337204e18) {
          goto LABEL_35;
        }
        if (v58 >= 9.22337204e18) {
          goto LABEL_36;
        }
        if (v23)
        {
          id v59 = [v23 startDate];
          uint64_t v60 = v99;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          id v61 = *v96;
          uint64_t v62 = (uint64_t)v86;
          (*v96)((uint64_t)v86, v60, v9);
          v53(v62, 0, 1, v9);
          if ((*v94)(v62, 1, v9) != 1)
          {
            double v63 = v88;
            v61((uint64_t)v88, (char *)v62, v9);
            goto LABEL_29;
          }
        }
        else
        {
          uint64_t v62 = (uint64_t)v86;
          v53((uint64_t)v86, 1, 1, v9);
        }
        id v64 = [*(id *)(v97 + v95) startDate];
        double v63 = v88;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10008DB18(v62, (uint64_t *)&unk_10095B890);
LABEL_29:
        double v65 = v102;
        uint64_t v66 = (uint64_t)v87;
        Date.addingTimeInterval(_:)();
        v57(v63, v9);
        v57(v101, v9);
        if (v65[2] && (unint64_t v67 = sub_100529660(v66), (v68 & 1) != 0))
        {
          uint64_t v30 = *(void *)(v65[7] + 8 * v67);
          swift_retain();
        }
        else
        {
          type metadata accessor for WorkoutDataBucket();
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = 0;
          *(void *)(v30 + 24) = 0;
        }
        id v31 = [*(id *)(v89 + v82) identifier];
        id v32 = [v41 quantity];
        [v32 _value];
        double v34 = v33;

        double v35 = v34 * 60.0;
        if (v31 == (id)13) {
          double v35 = v34;
        }
        double v36 = *(double *)(v30 + 24);
        *(double *)(v30 + 16) = v35 + *(double *)(v30 + 16);
        *(double *)(v30 + 24) = v44 + v36;
        uint64_t v37 = (uint64_t)v99;
        (*v81)(v99, v66, v9);
        swift_retain();
        uint64_t v38 = v102;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v103 = v38;
        sub_1004F127C(v30, v37, isUniquelyReferenced_nonNull_native);
        unint64_t v102 = v103;
        swift_bridgeObjectRelease();
        v57((char *)v37, v9);

        swift_release();
        v57((char *)v66, v9);
        uint64_t v29 = (uint64_t)v90;
        uint64_t v28 = &selRef_setModalPresentationStyle_;
        goto LABEL_9;
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      swift_bridgeObjectRetain();
      unint64_t v8 = v90;
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v25 = result;
      if (!result) {
        goto LABEL_38;
      }
    }
    uint64_t v53 = *v98;
    (*v98)(v29, 1, 1, v9);
    goto LABEL_19;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  uint64_t v74 = swift_bridgeObjectRetain();
  uint64_t v75 = sub_1005CEEF4(v74);
  swift_bridgeObjectRelease();
  if (!*(void *)(v75 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v75 = 0;
  }
  swift_bridgeObjectRelease();
  return v75;
}

uint64_t sub_1005DEFB8()
{
  return swift_deallocObject();
}

uint64_t sub_1005DEFC8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005DF010()
{
  return sub_1005D3E8C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void **)(v0 + 40));
}

unint64_t sub_1005DF028()
{
  unint64_t result = qword_100964508;
  if (!qword_100964508)
  {
    sub_10007E2D8(255, (unint64_t *)&qword_100951108);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964508);
  }
  return result;
}

uint64_t sub_1005DF090()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1005DF0D0()
{
  return sub_1005D44B0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_1005DF0E0(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_1005DF0E8()
{
  return sub_1005DF378((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005DF118()
{
  return sub_1005DA370(*(void *)(v0 + 16), *(void **)(v0 + 32), 5, *(double *)(v0 + 24));
}

void sub_1005DF140(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_1005D7150(a1, a2, a3, a4, v4);
}

uint64_t sub_1005DF14C()
{
  return sub_1005D8888(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1005DF15C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005DF194(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_1005DF19C()
{
  return sub_1005DF378((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005DF1CC()
{
  return sub_1005DA370(*(void *)(v0 + 16), *(void **)(v0 + 32), 4, *(double *)(v0 + 24));
}

uint64_t sub_1005DF1F4(id *a1, uint64_t a2)
{
  return sub_1005D93C4(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

void sub_1005DF208(id *a1, uint64_t a2)
{
  sub_1005D8D38(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1005DF218()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005DF258()
{
  return sub_1005D9A64(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(unsigned __int8 *)(v0 + 33), *(void **)(v0 + 40));
}

void sub_1005DF280(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_1005DF288()
{
  return sub_1005DF378((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005DF2B8()
{
  return sub_1005DA370(*(void *)(v0 + 16), *(void **)(v0 + 32), 9, *(double *)(v0 + 24));
}

void sub_1005DF2E0(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_1005DF2E8()
{
  return sub_1005DF378((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005DF318()
{
  return sub_1005DA370(*(void *)(v0 + 16), *(void **)(v0 + 32), 6, *(double *)(v0 + 24));
}

void sub_1005DF340(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_1005DF348()
{
  return sub_1005DF378((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005DF378(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));

  return swift_deallocObject();
}

uint64_t sub_1005DF3DC()
{
  return sub_1005DA370(*(void *)(v0 + 16), *(void **)(v0 + 32), 7, *(double *)(v0 + 24));
}

uint64_t sub_1005DF404()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005DF43C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10005DB5C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1009644E0 + dword_1009644E0);
  return v6(a1, v4);
}

uint64_t sub_1005DF570(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  char v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_1000917F8(v13, v14, v15);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *v18;
  LOBYTE(v18) = *((unsigned char *)v18 + 8);
  *(void *)uint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = (_BYTE)v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005DF678(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  return a1;
}

uint64_t sub_1005DF73C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  char v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_1000917F8(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  LOBYTE(v17) = *((unsigned char *)v17 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = (_BYTE)v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005DF814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005DF828);
}

uint64_t sub_1005DF828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1005DF8E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

id sub_1005DF9A0()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC10FitnessApp29ActivitySummaryChangeListener_noteListener;
  swift_beginAccess();
  sub_100335DBC(v1, (uint64_t)&v5);
  if (v6)
  {
    sub_10005C2B0(&v5, &v7);
    id v2 = [self defaultCenter];
    sub_10007E4EC(&v7, v8);
    [v2 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v7);
  }
  else
  {
    sub_100074898((uint64_t)&v5);
  }
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ActivitySummaryChangeListener();
  [super dealloc];
}

uint64_t sub_1005DFB0C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005DFB44()
{
  return sub_1005E4CFC(&qword_100964610, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

uint64_t type metadata accessor for ActivityRingEntity()
{
  uint64_t result = qword_1009647E8;
  if (!qword_1009647E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005DFBD8()
{
  return sub_1005E4CFC(&qword_100964618, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

uint64_t sub_1005DFC20()
{
  return sub_1005E4CFC(&qword_100964620, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

unint64_t sub_1005DFC6C()
{
  unint64_t result = qword_100964628;
  if (!qword_100964628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964628);
  }
  return result;
}

uint64_t sub_1005DFCC0()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1005DFCE4()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1005DFD08()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1005DFD2C()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1005DFD50()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1005DFD74()
{
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  qword_1009985E8 = result;
  return result;
}

uint64_t sub_1005DFDDC()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v5, qword_1009985F0);
  sub_1000876DC(v5, (uint64_t)qword_1009985F0);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1005DFF48()
{
  uint64_t v0 = sub_1000AFA94(&qword_1009648C8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_1009648D0);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000AFA94(&qword_1009648C0);
  sub_1000258C4(v5, qword_100998608);
  sub_1000876DC(v5, (uint64_t)qword_100998608);
  type metadata accessor for ActivityRingEntity();
  sub_1005E4CFC(&qword_100964630, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._object = (void *)0x80000001007C0770;
  v6._countAndFlagsBits = 0xD000000000000016;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v7);
  return EntityURLRepresentation.init(stringInterpolation:)();
}

void sub_1005E0168()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setDateFormat:v1];

  qword_100998620 = (uint64_t)v0;
}

uint64_t sub_1005E01E0()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  LocalizedStringResource.init(stringLiteral:)();
  if (qword_10094AF88 != -1) {
    swift_once();
  }
  Swift::String v6 = (void *)qword_100998620;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v8 = [v6 stringFromDate:isa];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  return DisplayRepresentation.init(title:subtitle:image:)();
}

void sub_1005E0434(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v118 = type metadata accessor for DispatchTimeInterval();
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v114 = (char **)((char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v117 = type metadata accessor for DispatchTime();
  uint64_t v115 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v113 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v104 = (char *)&v92 - v6;
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v108 = *(void *)(v7 - 8);
  uint64_t v109 = v7;
  __chkstk_darwin(v7);
  uint64_t v111 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int64_t v110 = (char *)&v92 - v10;
  uint64_t v11 = type metadata accessor for ActivityRingEntity();
  uint64_t v107 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v107 + 64);
  __chkstk_darwin(v11);
  uint64_t v112 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v92 - v14;
  __chkstk_darwin(v16);
  dispatch_semaphore_t v106 = (dispatch_semaphore_t)((char *)&v92 - v17);
  uint64_t v18 = type metadata accessor for Calendar.Component();
  uint64_t v102 = *(void *)(v18 - 8);
  uint64_t v103 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v21 - 8);
  uint64_t v105 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v119 = *(void *)(v23 - 8);
  uint64_t v120 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v92 - v27;
  __chkstk_darwin(v29);
  id v31 = (char *)&v92 - v30;
  __chkstk_darwin(v32);
  double v34 = (char *)&v92 - v33;
  uint64_t v35 = type metadata accessor for Calendar();
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v92 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = *(int *)(v11 + 40);
  int64_t v41 = *(void **)(*(void *)(a1 + v40) + 16);
  if (v41)
  {
    id v42 = *(id *)(*(void *)(a1 + v40) + 16);
LABEL_12:
    *uint64_t v121 = v42;
    id v91 = v41;
    return;
  }
  uint64_t v98 = v28;
  uint64_t v99 = v25;
  int v96 = v15;
  uint64_t v95 = v40;
  uint64_t v93 = v37;
  uint64_t v94 = v36;
  uint64_t v101 = v31;
  uint64_t v97 = v11;
  id v43 = v39;
  static Calendar.current.getter();
  uint64_t v44 = a1;
  Calendar.startOfDay(for:)();
  uint64_t v46 = v102;
  uint64_t v45 = v103;
  (*(void (**)(char *, void, uint64_t))(v102 + 104))(v20, enum case for Calendar.Component.day(_:), v103);
  uint64_t v47 = (uint64_t)v105;
  uint64_t v100 = v34;
  unint64_t v92 = v43;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v45);
  dispatch_semaphore_t v48 = v106;
  sub_1005E3F5C(v44, (uint64_t)v106);
  uint64_t v50 = v119;
  uint64_t v49 = v120;
  uint64_t v51 = v44;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v47, 1, v120) == 1)
  {
    uint64_t v52 = v101;
    (*(void (**)(char *, dispatch_semaphore_t, uint64_t))(v50 + 16))(v101, v48, v49);
    sub_1005E3FC0((uint64_t)v48);
    sub_10008DB18(v47, (uint64_t *)&unk_10095B890);
  }
  else
  {
    sub_1005E3FC0((uint64_t)v48);
    uint64_t v52 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v101, v47, v49);
  }
  uint64_t v53 = v49;
  uint64_t v54 = (uint64_t)v99;
  uint64_t v55 = (uint64_t)v98;
  dispatch_semaphore_t v106 = dispatch_semaphore_create(0);
  double v56 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 16);
  v56(v55, v100, v53);
  v56(v54, v52, v53);
  uint64_t v57 = v51 + *(int *)(v97 + 52);
  uint64_t v58 = v109;
  id v59 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
  uint64_t v60 = (uint64_t)v110;
  v59(v110, v57, v109);
  uint64_t v61 = (uint64_t)v111;
  v59(v111, v57, v58);
  uint64_t v62 = (uint64_t)v96;
  sub_1005E3F5C(v51, (uint64_t)v96);
  unint64_t v63 = (*(unsigned __int8 *)(v107 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
  unint64_t v64 = (v12 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v65 = swift_allocObject();
  sub_1005E41B4(v62, v65 + v63);
  dispatch_semaphore_t v66 = v106;
  *(void *)(v65 + v64) = v106;
  id v67 = objc_allocWithZone((Class)_HKActivityStatisticsQuery);
  char v68 = v66;
  uint64_t v69 = v51;
  id v70 = sub_1004147FC((uint64_t)v98, (uint64_t)v99, v60, v61, (uint64_t)sub_1005E4218, v65);
  uint64_t v71 = v68;
  AppDependency.wrappedValue.getter();
  id v72 = v122;
  [v122 executeQuery:v70];

  id v73 = v113;
  static DispatchTime.now()();
  uint64_t v74 = v114;
  *uint64_t v114 = 15;
  uint64_t v75 = v116;
  uint64_t v76 = v118;
  (*(void (**)(void *, void, uint64_t))(v116 + 104))(v74, enum case for DispatchTimeInterval.seconds(_:), v118);
  uint64_t v77 = v104;
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v75 + 8))(v74, v76);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v115 + 8);
  uint64_t v79 = v117;
  v78(v73, v117);
  OS_dispatch_semaphore.wait(timeout:)();
  v78(v77, v79);
  LOBYTE(v76) = static DispatchTimeoutResult.== infix(_:_:)();
  uint64_t v80 = v112;
  sub_1005E3F5C(v69, v112);
  if ((v76 & 1) != 0 || !*(void *)(*(void *)(v80 + *(int *)(v97 + 40)) + 16))
  {
    sub_1005E3FC0(v80);
    uint64_t v81 = v95;
    uint64_t v82 = *(void *)(v69 + v95);
    id v83 = [objc_allocWithZone((Class)_HKActivityStatisticsQueryResult) init];
    uint64_t v84 = *(void **)(v82 + 16);
    *(void *)(v82 + 16) = v83;
  }
  else
  {
    sub_1005E3FC0(v80);
    uint64_t v81 = v95;
  }
  id v85 = *(void **)(*(void *)(v69 + v81) + 16);
  id v86 = v101;
  double v87 = v100;
  if (v85)
  {
    id v42 = v85;

    double v88 = *(void (**)(char *, uint64_t))(v119 + 8);
    uint64_t v89 = v86;
    uint64_t v90 = v120;
    v88(v89, v120);
    v88(v87, v90);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v92, v94);
    int64_t v41 = 0;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1005E0E04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v27 = a5;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActivityRingEntity();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(a4 + *(int *)(v17 + 52));
  sub_1005E3F5C(a4, (uint64_t)v16);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v19 = (v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  sub_1005E41B4((uint64_t)v16, v20 + v18);
  *(void *)(v20 + v19) = a2;
  uint64_t v21 = v27;
  *(void *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8)) = v27;
  aBlock[4] = sub_1005E447C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D14E8;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = a2;
  id v24 = v21;
  static DispatchQoS.unspecified.getter();
  id v31 = _swiftEmptyArrayStorage;
  sub_1005E4CFC((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1000A132C((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
  return swift_release();
}

Swift::Int sub_1005E1188(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for ActivityRingEntity() + 40));
  uint64_t v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = a2;
  id v5 = a2;

  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_1005E11DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_1009511B8);
  __chkstk_darwin(v3 - 8);
  id v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_1009546C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  uint64_t v27 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = (int *)type metadata accessor for ActivityRingEntity();
  uint64_t v13 = v12[5];
  sub_1000AFA94(&qword_100964840);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1000A132C(&qword_100964850, &qword_100964858);
  *(void *)(a2 + v13) = EntityProperty<>.init(title:_get:)();
  uint64_t v14 = v12[6];
  sub_1000AFA94(&qword_100964860);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1000A132C(&qword_100964870, &qword_100964878);
  *(void *)(a2 + v14) = EntityProperty<>.init(title:_get:)();
  uint64_t v15 = v12[7];
  LocalizedStringResource.init(stringLiteral:)();
  *(void *)(a2 + v15) = EntityProperty<>.init(title:_get:)();
  uint64_t v16 = v12[8];
  sub_1000AFA94(&qword_100964888);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1000A132C(&qword_100964898, &qword_1009648A0);
  *(void *)(a2 + v16) = EntityProperty<>.init(title:_get:)();
  uint64_t v17 = v12[9];
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v35 = 0;
  static AppDependencyManager.shared.getter();
  *(void *)(a2 + v17) = AppDependency.__allocating_init(key:manager:)();
  uint64_t v18 = v12[10];
  type metadata accessor for ActivityRingEntity.Cache();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(a2 + v18) = v19;
  uint64_t v20 = v12[11];
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  static DispatchQoS.userInitiated.getter();
  *(void *)&long long v33 = _swiftEmptyArrayStorage;
  sub_1005E4CFC(&qword_10095B0A0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000AFA94(&qword_10095B0A8);
  sub_1000A132C(&qword_10095B0B0, &qword_10095B0A8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v29);
  *(void *)(a2 + v20) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v21 = v12[12];
  sub_1000AFA94(&qword_1009648A8);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 16) = 0;
  *(void *)(a2 + v21) = v22;
  uint64_t v23 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v30, 1, 1, v23);
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v31, 1, 1, v24);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  DateComponents.day.setter();
  uint64_t v25 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(a2, v32, v25);
}

uint64_t sub_1005E18F8@<X0>(void *a1@<X8>)
{
  if (qword_10094AF70 != -1) {
    swift_once();
  }
  *a1 = qword_1009985E8;

  return swift_retain();
}

uint64_t sub_1005E1964()
{
  return sub_1005E4CFC(&qword_100964630, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

uint64_t sub_1005E19AC()
{
  return sub_1005E4CFC(&qword_100964638, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

uint64_t sub_1005E19F4@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094AF80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000AFA94(&qword_1009648C0);
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_100998608);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1005E1AA0()
{
  return sub_1005E4CFC(&qword_100964640, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

uint64_t sub_1005E1AE8()
{
  return sub_1005E4CFC(&qword_100964648, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

uint64_t sub_1005E1B30()
{
  return sub_1005E4CFC(&qword_100964650, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

uint64_t sub_1005E1B78()
{
  return sub_1005E4CFC((unint64_t *)&unk_100964658, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

void sub_1005E1BC0(uint64_t *a1@<X8>)
{
  if (qword_10094AF88 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_100998620;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v4 = [v2 stringFromDate:isa];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  *a1 = v5;
  a1[1] = v7;
}

uint64_t sub_1005E1C64()
{
  sub_1005E4CFC(&qword_1009648B8, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
  uint64_t v2 = URLRepresentableEntity.urlRepresentationParameter.getter();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1001B8FDC(v3, v0, v2, v1);
}

uint64_t sub_1005E1D28@<X0>(uint64_t a1@<X8>)
{
  if (qword_10094AF78 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000876DC(v2, (uint64_t)qword_1009985F0);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1005E1DD0()
{
  return sub_1000A132C(&qword_100964668, &qword_100964670);
}

uint64_t sub_1005E1E0C(uint64_t a1)
{
  uint64_t v2 = sub_1005E4CFC(&qword_100964630, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1005E1E88()
{
  return sub_1005E4CFC(&qword_100964678, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);
}

uint64_t sub_1005E1ED4(uint64_t a1)
{
  uint64_t v2 = sub_1005E4CFC((unint64_t *)&unk_100964658, (void (*)(uint64_t))type metadata accessor for ActivityRingEntity);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

double sub_1005E1F54@<D0>(uint64_t a1@<X8>)
{
  sub_1005E4B64((uint64_t *)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v5;
  return result;
}

unint64_t sub_1005E1F9C()
{
  unint64_t result = qword_100964680;
  if (!qword_100964680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964680);
  }
  return result;
}

unint64_t sub_1005E1FF4()
{
  unint64_t result = qword_100964688;
  if (!qword_100964688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964688);
  }
  return result;
}

unint64_t sub_1005E204C()
{
  unint64_t result = qword_100964690;
  if (!qword_100964690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964690);
  }
  return result;
}

uint64_t sub_1005E20A0()
{
  return sub_1000A132C(&qword_100964698, &qword_1009646A0);
}

uint64_t sub_1005E20DC(uint64_t a1)
{
  unint64_t v2 = sub_1005E4558();

  return static TransientAppEntity.defaultQuery.getter(a1, v2);
}

unint64_t sub_1005E212C()
{
  unint64_t result = qword_1009646A8;
  if (!qword_1009646A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009646A8);
  }
  return result;
}

unint64_t sub_1005E2184()
{
  unint64_t result = qword_1009646B0;
  if (!qword_1009646B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009646B0);
  }
  return result;
}

unint64_t sub_1005E21E0()
{
  unint64_t result = qword_1009646B8;
  if (!qword_1009646B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009646B8);
  }
  return result;
}

uint64_t sub_1005E2234()
{
  return sub_1005E4CFC((unint64_t *)&qword_10095B840, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_1005E227C(uint64_t a1)
{
  unint64_t v2 = sub_1005E4558();

  return TransientAppEntity.id.getter(a1, v2);
}

uint64_t sub_1005E22C8()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1005E240C()
{
  return sub_1000A132C(&qword_1009646C0, &qword_1009646C8);
}

uint64_t sub_1005E2448(uint64_t a1)
{
  unint64_t v2 = sub_100312078();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1005E2498()
{
  unint64_t result = qword_1009646D0;
  if (!qword_1009646D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009646D0);
  }
  return result;
}

uint64_t sub_1005E24EC()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v8 = type metadata accessor for DisplayRepresentation.Image();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_1005E26BC(uint64_t a1)
{
  unint64_t v2 = sub_1005E21E0();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t type metadata accessor for ActivityRingEntity.Cache()
{
  return self;
}

uint64_t *sub_1005E272C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v10 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v11 = a3[11];
    uint64_t v12 = a3[12];
    uint64_t v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    uint64_t v14 = a3[13];
    uint64_t v20 = (char *)a2 + v14;
    uint64_t v21 = (char *)a1 + v14;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for DateComponents();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v16 = v13;
    swift_retain();
    v19(v21, v20, v15);
  }
  return a1;
}

uint64_t sub_1005E28E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 52);
  uint64_t v6 = type metadata accessor for DateComponents();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1005E29F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[11];
  uint64_t v11 = a3[12];
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v10) = v12;
  uint64_t v13 = a3[13];
  uint64_t v18 = a2 + v13;
  uint64_t v19 = a1 + v13;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for DateComponents();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v15 = v12;
  swift_retain();
  v17(v19, v18, v14);
  return a1;
}

uint64_t sub_1005E2B5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  uint64_t v7 = a3[11];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  uint64_t v11 = a3[13];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1005E2CF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v11 = a3[13];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v14 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1005E2DF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  uint64_t v7 = a3[11];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_release();
  uint64_t v9 = a3[13];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1005E2F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E2F64);
}

uint64_t sub_1005E2F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for DateComponents();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 52);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1005E3090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E30A4);
}

uint64_t sub_1005E30A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for DateComponents();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 52);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1005E31D0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DateComponents();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityRingGoals()
{
  return &type metadata for ActivityRingGoals;
}

uint64_t sub_1005E32D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1005E32F0, 0, 0);
}

void sub_1005E32F0()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + *(int *)(type metadata accessor for ActivityRingEntity() + 48));
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_1005E4D44;
  *(void *)(v4 + 24) = v3;
  os_unfair_lock_lock(v2 + 4);
  sub_1005E3F44(&v16);
  os_unfair_lock_unlock(v2 + 4);
  uint64_t v5 = v16;
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = [v5 activeEnergyResults];

  if (!v6) {
    goto LABEL_11;
  }
  sub_10007E2D8(0, &qword_1009511C0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    id v14 = [self kilocalories];
    sub_10007E2D8(0, &qword_10094F130);
    Measurement.init(value:unit:)();
    goto LABEL_12;
  }
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(v7 + 32);
  }
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = [v9 quantityValue];

  if (!v10) {
    goto LABEL_11;
  }
  id v11 = [self largeCalorieUnit];
  [v10 doubleValueForUnit:v11];

  id v12 = [self kilocalories];
  sub_10007E2D8(0, &qword_10094F130);
  Measurement.init(value:unit:)();

LABEL_12:
  id v15 = *(void (**)(void))(v0 + 8);
  v15();
}

uint64_t sub_1005E35F8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1005E3618, 0, 0);
}

void sub_1005E3618()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + *(int *)(type metadata accessor for ActivityRingEntity() + 48));
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_1005E4D44;
  *(void *)(v4 + 24) = v3;
  os_unfair_lock_lock(v2 + 4);
  sub_1005E3F44(&v16);
  os_unfair_lock_unlock(v2 + 4);
  uint64_t v5 = v16;
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = [v5 appleMoveTimeResults];

  if (!v6) {
    goto LABEL_11;
  }
  sub_10007E2D8(0, &qword_1009511C0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    id v14 = [self minutes];
    sub_10007E2D8(0, &qword_10094F0E8);
    Measurement.init(value:unit:)();
    goto LABEL_12;
  }
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(v7 + 32);
  }
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = [v9 quantityValue];

  if (!v10) {
    goto LABEL_11;
  }
  id v11 = [self minuteUnit];
  [v10 doubleValueForUnit:v11];

  id v12 = [self minutes];
  sub_10007E2D8(0, &qword_10094F0E8);
  Measurement.init(value:unit:)();

LABEL_12:
  id v15 = *(void (**)(void))(v0 + 8);
  v15();
}

uint64_t sub_1005E3920(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1005E3940, 0, 0);
}

void sub_1005E3940()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + *(int *)(type metadata accessor for ActivityRingEntity() + 48));
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_1005E4D44;
  *(void *)(v4 + 24) = v3;
  os_unfair_lock_lock(v2 + 4);
  sub_1005E3F44(&v16);
  os_unfair_lock_unlock(v2 + 4);
  uint64_t v5 = v16;
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = [v5 appleExerciseTimeResults];

  if (!v6) {
    goto LABEL_11;
  }
  sub_10007E2D8(0, &qword_1009511C0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    id v14 = [self minutes];
    sub_10007E2D8(0, &qword_10094F0E8);
    Measurement.init(value:unit:)();
    goto LABEL_12;
  }
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(v7 + 32);
  }
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = [v9 quantityValue];

  if (!v10) {
    goto LABEL_11;
  }
  id v11 = [self minuteUnit];
  [v10 doubleValueForUnit:v11];

  id v12 = [self minutes];
  sub_10007E2D8(0, &qword_10094F0E8);
  Measurement.init(value:unit:)();

LABEL_12:
  id v15 = *(void (**)(void))(v0 + 8);
  v15();
}

uint64_t sub_1005E3C48(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1005E3C68, 0, 0);
}

void sub_1005E3C68()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + *(int *)(type metadata accessor for ActivityRingEntity() + 48));
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_1005E3F28;
  *(void *)(v4 + 24) = v3;
  os_unfair_lock_lock(v2 + 4);
  sub_1005E3F44(&v15);
  os_unfair_lock_unlock(v2 + 4);
  uint64_t v5 = (void *)v15;
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = [v5 appleStandHourResults];

  if (v6)
  {
    sub_10007E2D8(0, &qword_1009511C8);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v8)
      {
LABEL_4:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v8; ++i)
        {
          if ((v7 & 0xC000000000000001) != 0) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v7 + 8 * i + 32);
          }
          id v11 = v10;
          if (objc_msgSend(v10, "state", v15))
          {
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v12 = v15;
        if ((v15 & 0x8000000000000000) != 0) {
          goto LABEL_24;
        }
LABEL_18:
        if ((v12 & 0x4000000000000000) == 0)
        {
          uint64_t v13 = *(void *)(v12 + 16);
LABEL_20:
          swift_release();
          goto LABEL_21;
        }
LABEL_24:
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_24;
    }
    goto LABEL_18;
  }
  uint64_t v13 = 0;
LABEL_21:
  **(void **)(v0 + 16) = v13;
  id v14 = *(void (**)(void))(v0 + 8);
  v14();
}

void sub_1005E3F28(void *a1@<X8>)
{
  sub_1005E0434(*(void *)(v1 + 16), a1);
}

void *sub_1005E3F44@<X0>(void *a1@<X8>)
{
  return sub_1005E4514(a1);
}

uint64_t sub_1005E3F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityRingEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E3FC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivityRingEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005E401C()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivityRingEntity() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v6 = v4 + v1[15];
  uint64_t v7 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_deallocObject();
}

uint64_t sub_1005E41B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityRingEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E4218(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for ActivityRingEntity() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void **)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1005E0E04(a1, a2, a3, v3 + v8, v9);
}

uint64_t sub_1005E42CC()
{
  uint64_t v1 = (int *)(type metadata accessor for ActivityRingEntity() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v6 = v4 + v1[15];
  uint64_t v7 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_deallocObject();
}

Swift::Int sub_1005E447C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ActivityRingEntity() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1005E1188(v0 + v2, v3);
}

void *sub_1005E4514@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_1005E4558()
{
  unint64_t result = qword_1009648B0;
  if (!qword_1009648B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009648B0);
  }
  return result;
}

uint64_t sub_1005E45AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v6 = sub_1000AFA94(&qword_10094FE50);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v27 - v9;
  uint64_t v11 = sub_1000AFA94(&qword_10094F088);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v17 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v17 - 8);
  sub_1000AFA94(&qword_10094F0C0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v18 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094FE58);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v19 = EntityProperty<>.init(title:)();
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v20 = EntityProperty<>.init(title:)();
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v21 = EntityProperty<>.init(title:)();
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v22 = EntityProperty<>.init(title:)();
  sub_1000AEF2C(v34, (uint64_t)v16, &qword_10094F088);
  sub_1000AEF2C((uint64_t)v16, (uint64_t)v13, &qword_10094F088);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  sub_10008DB18((uint64_t)v16, &qword_10094F088);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000AEF2C(v33, (uint64_t)v10, &qword_10094FE50);
  uint64_t v23 = v28;
  sub_1000AEF2C((uint64_t)v10, v28, &qword_10094FE50);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  sub_10008DB18((uint64_t)v10, &qword_10094FE50);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000AEF2C(v32, (uint64_t)v10, &qword_10094FE50);
  sub_1000AEF2C((uint64_t)v10, v23, &qword_10094FE50);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  sub_10008DB18((uint64_t)v10, &qword_10094FE50);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000AEF2C(v31, (uint64_t)v10, &qword_10094FE50);
  sub_1000AEF2C((uint64_t)v10, v23, &qword_10094FE50);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  sub_10008DB18((uint64_t)v10, &qword_10094FE50);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v24 = v29;
  sub_1000AEF2C(v29, (uint64_t)v10, &qword_10094FE50);
  sub_1000AEF2C((uint64_t)v10, v23, &qword_10094FE50);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  sub_10008DB18((uint64_t)v10, &qword_10094FE50);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10008DB18(v24, &qword_10094FE50);
  sub_10008DB18(v31, &qword_10094FE50);
  sub_10008DB18(v32, &qword_10094FE50);
  sub_10008DB18(v33, &qword_10094FE50);
  sub_10008DB18(v34, &qword_10094F088);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v26 = v30;
  *uint64_t v30 = v18;
  v26[1] = v19;
  v26[2] = v20;
  v26[3] = v21;
  v26[4] = v22;
  return result;
}

uint64_t sub_1005E4B64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v2 - 8);
  sub_1000AFA94(&qword_10094F0C0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v3 = EntityProperty<>.init(title:)();
  sub_1000AFA94(&qword_10094FE58);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v4 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v5 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v6 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t result = EntityProperty<>.init(title:)();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = result;
  return result;
}

uint64_t sub_1005E4CFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1005E4D44(void *a1@<X8>)
{
}

id sub_1005E4D5C()
{
  id result = [self preferredFontForTextStyle:UIFontTextStyleCaption2];
  qword_1009648E0 = (uint64_t)result;
  return result;
}

char *sub_1005E4DA4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  id v12 = [v10 init];
  if (qword_10094AF90 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)UILabel.withFont(_:)();

  [v13 setTextAlignment:1];
  [v13 setLineBreakMode:0];
  [v13 setNumberOfLines:2];
  uint64_t v14 = UIView.forAutoLayout()();

  *(void *)&v11[v9] = v14;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView;
  id v16 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v17 = UIView.forAutoLayout()();

  *(void *)&v11[v15] = v17;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView;
  id v19 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v20 = UIView.forAutoLayout()();

  *(void *)&v11[v18] = v20;
  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailFriendCell();
  uint64_t v21 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView;
  uint64_t v23 = *(void **)&v21[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView];
  uint64_t v24 = v21;
  id v25 = [v23 layer];
  [v25 setMasksToBounds:1];

  [v24 addSubview:*(void *)&v21[v22]];
  [v24 addSubview:*(void *)&v24[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView]];
  [v24 addSubview:*(void *)&v24[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel]];
  sub_1005E504C();

  return v24;
}

void sub_1005E504C()
{
  id v1 = [self sharedApplication];
  id v2 = [v1 preferredContentSizeCategory];

  char v3 = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v3) {
    double v4 = 16.0;
  }
  else {
    double v4 = 8.0;
  }
  if (v3) {
    double v5 = 128.0;
  }
  else {
    double v5 = 64.0;
  }
  if (v3) {
    double v6 = 20.0;
  }
  else {
    double v6 = 10.0;
  }
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView];
  id v8 = [v7 layer];
  [v8 setCornerRadius:v5 * 0.5];

  uint64_t v52 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1007545A0;
  id v10 = [v7 topAnchor];
  id v11 = [v0 topAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11 constant:v6];

  *(void *)(v9 + 32) = v12;
  id v13 = [v7 trailingAnchor];
  id v14 = [v0 trailingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14 constant:-v6];

  *(void *)(v9 + 40) = v15;
  id v16 = [v7 leadingAnchor];
  id v17 = [v0 leadingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:v6];

  *(void *)(v9 + 48) = v18;
  id v19 = [v7 widthAnchor];
  id v20 = [v7 heightAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v9 + 56) = v21;
  id v22 = [v7 widthAnchor];
  id v23 = [v22 constraintEqualToConstant:v5];

  *(void *)(v9 + 64) = v23;
  uint64_t v24 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView];
  id v25 = [v24 topAnchor];
  id v26 = [v0 topAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26 constant:v6];

  *(void *)(v9 + 72) = v27;
  id v28 = [v24 trailingAnchor];
  id v29 = [v0 trailingAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29 constant:-v6];

  *(void *)(v9 + 80) = v30;
  id v31 = [v24 leadingAnchor];
  id v32 = [v0 leadingAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32 constant:v6];

  *(void *)(v9 + 88) = v33;
  id v34 = [v24 widthAnchor];
  id v35 = [v24 heightAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v9 + 96) = v36;
  id v37 = [v24 widthAnchor];
  id v38 = [v37 constraintEqualToConstant:v5];

  *(void *)(v9 + 104) = v38;
  uint64_t v39 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel];
  id v40 = [v39 topAnchor];
  id v41 = [v7 bottomAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41 constant:v4];

  *(void *)(v9 + 112) = v42;
  id v43 = [v39 trailingAnchor];
  id v44 = [v0 trailingAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 constant:-v6];

  *(void *)(v9 + 120) = v45;
  id v46 = [v39 leadingAnchor];
  id v47 = [v0 leadingAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 constant:v6];

  *(void *)(v9 + 128) = v48;
  id v49 = [v39 bottomAnchor];
  id v50 = [v0 bottomAnchor];
  id v51 = [v49 constraintLessThanOrEqualToAnchor:v50 constant:-v6];

  *(void *)(v9 + 136) = v51;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v52 activateConstraints:isa];
}

void sub_1005E571C(void *a1)
{
  uint64_t v2 = v1;
  id v44 = [objc_allocWithZone((Class)CNContactStore) init];
  id v4 = [a1 contact];
  if (v4)
  {
    double v5 = v4;
    id v6 = [v4 linkedContactStoreIdentifier];
    if (v6)
    {
      uint64_t v7 = v6;
      sub_1000AFA94((uint64_t *)&unk_10095B850);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_100752650;
      *(void *)(v8 + 32) = CNContactThumbnailImageDataKey;
      *(void *)(v8 + 40) = CNContactGivenNameKey;
      *(void *)(v8 + 48) = CNContactNicknameKey;
      specialized Array._endMutation()();
      uint64_t v9 = CNContactThumbnailImageDataKey;
      id v10 = CNContactGivenNameKey;
      id v11 = CNContactNicknameKey;
      sub_1000AFA94((uint64_t *)&unk_100955C00);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v45 = 0;
      id v13 = [v44 unifiedContactWithIdentifier:v7 keysToFetch:isa error:&v45];

      if (v13)
      {
        id v14 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel);
        id v15 = v45;
        id v16 = [v13 nickname];
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v19 = v18;

        swift_bridgeObjectRelease();
        uint64_t v20 = HIBYTE(v19) & 0xF;
        if ((v19 & 0x2000000000000000) == 0) {
          uint64_t v20 = v17 & 0xFFFFFFFFFFFFLL;
        }
        if (v20) {
          id v21 = &selRef_nickname;
        }
        else {
          id v21 = &selRef_givenName;
        }
        id v22 = [v13 *v21];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v14 setText:v23];

        id v24 = [v13 thumbnailImageData];
        if (v24)
        {
          id v25 = v24;
          uint64_t v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v28 = v27;

          id v29 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView);
          id v30 = objc_allocWithZone((Class)UIImage);
          sub_10025C56C(v26, v28);
          Class v31 = Data._bridgeToObjectiveC()().super.isa;
          id v32 = [v30 initWithData:v31];
          sub_1000939A4(v26, v28);

          [v29 setImage:v32];
          [*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView) setHidden:1];
          [v29 setHidden:0];

          sub_1000939A4(v26, v28);
        }
        else
        {
          id v34 = [self settingsWithContactStore:v44 threeDTouchEnabled:0];
          id v35 = [objc_allocWithZone((Class)CNAvatarViewController) initWithSettings:v34];
          uint64_t v36 = swift_allocObject();
          *(_OWORD *)(v36 + 16) = xmmword_100751040;
          *(void *)(v36 + 32) = v13;
          id v45 = (id)v36;
          specialized Array._endMutation()();
          sub_10007E2D8(0, (unint64_t *)&qword_100955C20);
          id v37 = v13;
          Class v38 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v35 setContacts:v38];

          id v39 = [self sharedApplication];
          id v40 = [v39 preferredContentSizeCategory];

          LOBYTE(v39) = UIContentSizeCategory.isAccessibilityCategory.getter();
          if (v39) {
            double v41 = 128.0;
          }
          else {
            double v41 = 64.0;
          }
          id v42 = [v35 view];
          [v42 setFrame:0.0, 0.0, v41, v41];
          id v43 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView);
          [v43 addSubview:v42];
          [v43 setHidden:0];
          [*(id *)(v2 + OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView) setHidden:1];
        }
      }
      else
      {
        id v33 = v45;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
      }
      return;
    }
  }
}

id sub_1005E5CDC()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailFriendCell();
  [super prepareForReuse];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView] setImage:0];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel] setText:0];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView];
  id v2 = [v1 subviews];
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    return [v1 setHidden:0];
  }
  swift_bridgeObjectRetain();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      [v7 removeFromSuperview];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

id sub_1005E5EBC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrophyCaseAwardDetailFriendCell();
  return [super dealloc];
}

uint64_t type metadata accessor for TrophyCaseAwardDetailFriendCell()
{
  return self;
}

void sub_1005E5F70()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_nameLabel;
  id v3 = [objc_allocWithZone((Class)UILabel) init];
  if (qword_10094AF90 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)UILabel.withFont(_:)();

  [v4 setTextAlignment:1];
  [v4 setLineBreakMode:0];
  [v4 setNumberOfLines:2];
  uint64_t v5 = UIView.forAutoLayout()();

  *(void *)&v1[v2] = v5;
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_avatarImageView;
  id v7 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = UIView.forAutoLayout()();

  *(void *)&v1[v6] = v8;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp31TrophyCaseAwardDetailFriendCell_fallbackAvatarView;
  id v10 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v11 = UIView.forAutoLayout()();

  *(void *)&v1[v9] = v11;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

char *sub_1005E6118(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a2[1];
    uint64_t v9 = a2[2];
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v9;
    id v10 = a2[3];
    uint64_t v11 = a2[4];
    *((void *)a1 + 3) = v10;
    *((void *)a1 + 4) = v11;
    id v13 = a2[5];
    id v12 = a2[6];
    *((void *)a1 + 5) = v13;
    *((void *)a1 + 6) = v12;
    id v33 = a2[7];
    uint64_t v14 = a3[12];
    uint64_t v34 = (uint64_t)a2 + v14;
    id v35 = &a1[v14];
    *((void *)a1 + 7) = v33;
    uint64_t DataType = type metadata accessor for TrainingLoadDataType();
    id v32 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(DataType - 8) + 16);
    id v16 = v4;
    uint64_t v17 = v8;
    unint64_t v18 = v9;
    unint64_t v19 = v10;
    uint64_t v20 = v11;
    id v21 = v13;
    swift_retain();
    id v22 = v33;
    v32(v35, v34, DataType);
    uint64_t v23 = sub_1000AFA94(&qword_100964928);
    *(void *)&v35[*(int *)(v23 + 28)] = *(void *)(v34 + *(int *)(v23 + 28));
    uint64_t v24 = a3[13];
    uint64_t v25 = a3[14];
    uint64_t v26 = &v7[v24];
    uint64_t v27 = (uint64_t)a2 + v24;
    *uint64_t v26 = *(unsigned char *)v27;
    *((void *)v26 + 1) = *(void *)(v27 + 8);
    unint64_t v28 = &v7[v25];
    uint64_t v29 = (uint64_t)a2 + v25;
    id v30 = *(char **)((char *)a2 + v25);
    LOBYTE(v10) = *(unsigned char *)(v29 + 8);
    swift_retain();
    swift_retain();
    sub_1001AEDAC(v30, (char)v10);
    *(void *)unint64_t v28 = v30;
    v28[8] = (char)v10;
  }
  return v7;
}

void sub_1005E62C8(id *a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 48);
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, uint64_t))(*(void *)(DataType - 8) + 8))(v4, DataType);
  sub_1000AFA94(&qword_100964928);
  swift_release();
  swift_release();
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 56);
  id v7 = *(void **)v6;
  char v8 = v6[8];

  sub_1001AEDC8(v7, v8);
}

void *sub_1005E63BC(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  char v8 = *(void **)(a2 + 16);
  id v7 = *(void **)(a2 + 24);
  a1[2] = v8;
  a1[3] = v7;
  uint64_t v9 = *(void **)(a2 + 32);
  id v10 = *(void **)(a2 + 40);
  a1[4] = v9;
  a1[5] = v10;
  uint64_t v11 = a3[12];
  id v32 = (char *)a1 + v11;
  id v30 = *(void **)(a2 + 56);
  uint64_t v31 = a2 + v11;
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v30;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(DataType - 8) + 16);
  id v13 = v5;
  id v14 = v6;
  id v15 = v8;
  id v16 = v7;
  id v17 = v9;
  id v18 = v10;
  swift_retain();
  id v19 = v30;
  v29(v32, v31, DataType);
  uint64_t v20 = sub_1000AFA94(&qword_100964928);
  *(void *)&v32[*(int *)(v20 + 28)] = *(void *)(v31 + *(int *)(v20 + 28));
  uint64_t v21 = a3[13];
  uint64_t v22 = a3[14];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)(a2 + v21);
  char *v23 = *v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  uint64_t v25 = (char *)a1 + v22;
  uint64_t v26 = a2 + v22;
  uint64_t v27 = *(void **)(a2 + v22);
  LOBYTE(v9) = *(unsigned char *)(v26 + 8);
  swift_retain();
  swift_retain();
  sub_1001AEDAC(v27, (char)v9);
  *(void *)uint64_t v25 = v27;
  v25[8] = (char)v9;
  return a1;
}

uint64_t sub_1005E6518(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  id v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  id v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  id v12 = *(void **)(a2 + 16);
  id v13 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  id v14 = v12;

  id v15 = *(void **)(a2 + 24);
  id v16 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v15;
  id v17 = v15;

  id v18 = *(void **)(a2 + 32);
  id v19 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v18;
  id v20 = v18;

  uint64_t v21 = *(void **)(a2 + 40);
  uint64_t v22 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v21;
  id v23 = v21;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v24 = *(void **)(a1 + 56);
  uint64_t v25 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v25;
  id v26 = v25;

  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DataType - 8) + 24))(v28, v29, DataType);
  uint64_t v31 = sub_1000AFA94(&qword_100964928);
  *(void *)(v28 + *(int *)(v31 + 28)) = *(void *)(v29 + *(int *)(v31 + 28));
  swift_retain();
  swift_release();
  uint64_t v32 = a3[13];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  swift_retain();
  swift_release();
  uint64_t v35 = a3[14];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  id v38 = *(id *)v37;
  LOBYTE(a3) = *(unsigned char *)(v37 + 8);
  sub_1001AEDAC(*(id *)v37, (char)a3);
  id v39 = *(void **)v36;
  char v40 = *(unsigned char *)(v36 + 8);
  *(void *)uint64_t v36 = v38;
  *(unsigned char *)(v36 + 8) = (_BYTE)a3;
  sub_1001AEDC8(v39, v40);
  return a1;
}

_OWORD *sub_1005E66C8(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[12];
  uint64_t v9 = (char *)a1 + v8;
  id v10 = (char *)a2 + v8;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(DataType - 8) + 32))(v9, v10, DataType);
  uint64_t v12 = sub_1000AFA94(&qword_100964928);
  *(void *)&v9[*(int *)(v12 + 28)] = *(void *)&v10[*(int *)(v12 + 28)];
  uint64_t v13 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  id v14 = (char *)a1 + v13;
  id v15 = (char *)a2 + v13;
  *(void *)id v14 = *(void *)v15;
  v14[8] = v15[8];
  return a1;
}

uint64_t sub_1005E6798(uint64_t a1, void *a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *a2;

  long long v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2[2];

  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = a2[3];

  id v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = a2[4];

  id v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = a2[5];

  *(void *)(a1 + 48) = a2[6];
  swift_release();
  uint64_t v12 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = a2[7];

  uint64_t v13 = a3[12];
  uint64_t v14 = a1 + v13;
  id v15 = (char *)a2 + v13;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(DataType - 8) + 40))(v14, v15, DataType);
  uint64_t v17 = sub_1000AFA94(&qword_100964928);
  *(void *)(v14 + *(int *)(v17 + 28)) = *(void *)&v15[*(int *)(v17 + 28)];
  swift_release();
  uint64_t v18 = a3[13];
  uint64_t v19 = a1 + v18;
  id v20 = (char *)a2 + v18;
  *(unsigned char *)uint64_t v19 = *v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  swift_release();
  uint64_t v21 = a3[14];
  uint64_t v22 = a1 + v21;
  id v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  LOBYTE(v23) = v23[8];
  uint64_t v25 = *(void **)v22;
  char v26 = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = (_BYTE)v23;
  sub_1001AEDC8(v25, v26);
  return a1;
}

uint64_t sub_1005E6908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E691C);
}

uint64_t sub_1005E691C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94(&qword_100964928);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005E69D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E69E4);
}

void *sub_1005E69E4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *id result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000AFA94(&qword_100964928);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 48);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LoadDetailsView()
{
  uint64_t result = qword_100964988;
  if (!qword_100964988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005E6ADC()
{
  sub_1005E6BAC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1005E6BAC()
{
  if (!qword_100964998)
  {
    type metadata accessor for TrainingLoadDataType();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100964998);
    }
  }
}

uint64_t sub_1005E6C04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005E6C20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1005EB540(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  __int16 v5 = *(_WORD *)(v3 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsFilter + 8);
  *(void *)a2 = *(void *)(v3 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyItemsFilter);
  *(_WORD *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1005E6CDC()
{
  return swift_release();
}

uint64_t sub_1005E6DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, unsigned __int8 a11)
{
  uint64_t v30 = a7;
  uint64_t v31 = a8;
  uint64_t v29 = a6;
  int v32 = a11;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v18 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  id v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v21 = v29;
  a9[4] = a5;
  a9[5] = v21;
  uint64_t v22 = v31;
  a9[6] = v30;
  a9[7] = v22;
  DetailsSwift::String View = type metadata accessor for LoadDetailsView();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a10, DataType);
  State.init(wrappedValue:)();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a10, DataType);
  uint64_t v24 = (char *)a9 + *(int *)(DetailsView + 52);
  char v33 = v32;
  State.init(wrappedValue:)();
  uint64_t v25 = v35;
  *uint64_t v24 = v34;
  *((void *)v24 + 1) = v25;
  char v26 = (char *)a9 + *(int *)(DetailsView + 56);
  type metadata accessor for BalanceDataProvider();
  sub_1005EB540(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  uint64_t result = Environment.init<A>(_:)();
  *(void *)char v26 = result;
  v26[8] = v28 & 1;
  return result;
}

uint64_t sub_1005E6FA8()
{
  uint64_t v68 = sub_1000AFA94(&qword_100950728) - 8;
  __chkstk_darwin(v68);
  id v67 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for Calendar.Identifier();
  uint64_t v58 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v61 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  __chkstk_darwin(v3);
  uint64_t v53 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  __chkstk_darwin(v5);
  uint64_t v52 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for GregorianDayRange();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DayIndex();
  uint64_t v51 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v50 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v57 = (char *)&v50 - v13;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v15 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v55 = *(void *)(ViewModel - 8);
  uint64_t v56 = ViewModel;
  __chkstk_darwin(ViewModel);
  uint64_t v54 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v50 - v21;
  uint64_t v23 = v0 + *(int *)(type metadata accessor for LoadDetailsView() + 56);
  id v24 = *(id *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_1001AEDAC(*(id *)v23, v25);
  id v26 = sub_1004E75C0(v24, v25);
  sub_1001AEDC8(v24, v25);
  swift_retain();

  uint64_t v27 = v51;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for TrainingLoadDataType.workout(_:), DataType);
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
  swift_release();
  char v28 = v17;
  uint64_t v29 = v10;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v28, DataType);
  type metadata accessor for TrainingLoadViewModelProvider();
  uint64_t v30 = v52;
  static Date.now.getter();
  uint64_t v31 = v58;
  int v32 = v61;
  uint64_t v33 = v64;
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v61, enum case for Calendar.Identifier.gregorian(_:), v64);
  char v34 = v53;
  Calendar.init(identifier:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v34, v66);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v30, v63);
  uint64_t v35 = (uint64_t)v67;
  GregorianDayRange.dayIndexRange.getter();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v9, v60);
  uint64_t v36 = *(void (**)(void))(v27 + 16);
  uint64_t v37 = v57;
  ((void (*)(char *, uint64_t, uint64_t))v36)(v57, v35 + *(int *)(v68 + 44), v29);
  sub_10008DB18(v35, &qword_100950728);
  id v38 = v37;
  char v39 = TrainingLoadViewModel.isPending(onDay:)();
  char v40 = v54;
  LOBYTE(v35) = v39;
  uint64_t v41 = v55;
  id v42 = *(void (**)(char *, char *))(v55 + 16);
  uint64_t v68 = (uint64_t)v22;
  uint64_t v43 = v56;
  v42(v54, v22);
  id v44 = v50;
  v36();
  if (v35) {
    char v45 = 0;
  }
  else {
    char v45 = TrainingLoadViewModel.isNoData(onDay:)() ^ 1;
  }
  id v46 = v40;
  id v47 = *(void (**)(char *, uint64_t))(v27 + 8);
  v47(v44, v29);
  id v48 = *(void (**)(char *, uint64_t))(v41 + 8);
  v48(v46, v43);
  v47(v38, v29);
  v48((char *)v68, v43);
  return v45 & 1;
}

uint64_t sub_1005E767C()
{
  uint64_t v1 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsSwift::String View = type metadata accessor for LoadDetailsView();
  __chkstk_darwin(DetailsView);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = sub_1005E6FA8();
  sub_1005EB818(v0, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
  if (v8)
  {
    sub_1005EB880((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
    return 0;
  }
  uint64_t v9 = &v7[*(int *)(DetailsView + 56)];
  id v10 = *(id *)v9;
  char v11 = v9[8];
  sub_1001AEDAC(*(id *)v9, v11);
  id v12 = sub_1004E75C0(v10, v11);
  sub_1001AEDC8(v10, v11);
  swift_retain();

  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  swift_release();
  char v13 = OvernightMetricsViewModel.watchExperienceRequiresSetup.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1005EB880((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
  if (v13 == 2) {
    return 0;
  }
  return v13 & 1;
}

uint64_t sub_1005E7880@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v3 = *(void *)(DataType - 8);
  uint64_t v57 = DataType;
  uint64_t v58 = v3;
  __chkstk_darwin(DataType);
  uint64_t v54 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsSwift::String View = type metadata accessor for LoadDetailsView();
  uint64_t v6 = DetailsView - 8;
  uint64_t v7 = *(void *)(DetailsView - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(DetailsView);
  uint64_t v49 = sub_1000AFA94(&qword_1009649F0);
  __chkstk_darwin(v49);
  id v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_1009649F8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v55 = v11;
  uint64_t v56 = v12;
  __chkstk_darwin(v11);
  uint64_t v62 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100964A00);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  uint64_t v60 = v15;
  __chkstk_darwin(v14);
  uint64_t v53 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E7EE4(v1, (uint64_t)v10);
  uint64_t v17 = v1 + *(int *)(v6 + 60);
  char v18 = *(unsigned char *)v17;
  uint64_t v19 = *(void *)(v17 + 8);
  LOBYTE(v67) = v18;
  uint64_t v68 = v19;
  sub_1000AFA94(&qword_10094DEE0);
  State.projectedValue.getter();
  v45[3] = v65;
  uint64_t v52 = type metadata accessor for LoadDetailsView;
  uint64_t v48 = (uint64_t)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005EB818(v1, v48, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 16) & ~v20;
  uint64_t v50 = v20 | 7;
  uint64_t v51 = v21 + v8;
  uint64_t v22 = swift_allocObject();
  sub_1005EB054((uint64_t)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
  DetailsStackedChartSwift::String View = type metadata accessor for LoadDetailsStackedChartView(0);
  unint64_t v47 = sub_1005EB128();
  uint64_t v44 = sub_1005EB540(&qword_100964A80, (void (*)(uint64_t))type metadata accessor for LoadDetailsStackedChartView);
  uint64_t v23 = v49;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  sub_10008DB18((uint64_t)v10, &qword_1009649F0);
  sub_1000AFA94(&qword_100964928);
  id v24 = v54;
  State.wrappedValue.getter();
  uint64_t v25 = v48;
  sub_1005EB818(v1, v48, (uint64_t (*)(void))v52);
  uint64_t v26 = swift_allocObject();
  sub_1005EB054(v25, v26 + v21);
  uint64_t v63 = v23;
  uint64_t v64 = DetailsStackedChartView;
  unint64_t v65 = v47;
  uint64_t v66 = v44;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v28 = sub_1005EB540(&qword_100964A88, (void (*)(uint64_t))&type metadata accessor for TrainingLoadDataType);
  uint64_t v29 = v53;
  uint64_t v30 = v55;
  uint64_t v31 = v57;
  int v32 = v62;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  uint64_t v33 = v24;
  uint64_t v34 = v31;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v33, v31);
  uint64_t v35 = v30;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v30);
  id v36 = [self mainBundle];
  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = [v36 localizedStringForKey:v37 value:0 table:0];

  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  uint64_t v67 = v39;
  uint64_t v68 = v41;
  uint64_t v63 = v35;
  uint64_t v64 = v34;
  unint64_t v65 = OpaqueTypeConformance2;
  uint64_t v66 = v28;
  swift_getOpaqueTypeConformance2();
  sub_1000A06D0();
  uint64_t v42 = v59;
  View.navigationTitle<A>(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v29, v42);
}

uint64_t sub_1005E7EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  uint64_t v82 = type metadata accessor for PlainListStyle();
  uint64_t v74 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  id v73 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100964A90);
  __chkstk_darwin(v4 - 8);
  uint64_t v71 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000AFA94(&qword_100964A38);
  __chkstk_darwin(v64);
  uint64_t v69 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for ListSectionSpacing();
  uint64_t v66 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v76 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000AFA94(&qword_100964A58);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v61 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000AFA94(&qword_100964A48);
  __chkstk_darwin(v60);
  uint64_t v75 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000AFA94(&qword_100964A20);
  __chkstk_darwin(v80);
  uint64_t v67 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_100964A98);
  uint64_t v72 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  unint64_t v65 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v59 - v13;
  uint64_t v77 = sub_1000AFA94(&qword_100964AA0);
  __chkstk_darwin(v77);
  uint64_t v78 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000AFA94(&qword_10094BFB8);
  uint64_t v15 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailsSwift::String View = type metadata accessor for LoadDetailsView();
  __chkstk_darwin(DetailsView);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1 + *(int *)(v21 + 56);
  id v23 = *(id *)v22;
  char v24 = *(unsigned char *)(v22 + 8);
  sub_1001AEDAC(*(id *)v22, v24);
  id v25 = sub_1004E75C0(v23, v24);
  sub_1001AEDC8(v23, v24);
  swift_retain();

  LOBYTE(v25) = dispatch thunk of TrainingLoadViewModelProvider.isLoadingWorkoutViewModelForTheFirstTime.getter();
  swift_release();
  sub_1005EB818(a1, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
  if (v25)
  {
    sub_1005EB880((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
LABEL_4:
    ProgressView<>.init<>()();
    uint64_t v31 = v79;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v78, v17, v79);
    swift_storeEnumTagMultiPayload();
    sub_1000A132C((unint64_t *)&qword_10094BFB0, &qword_10094BFB8);
    unint64_t v32 = sub_1005EB290();
    uint64_t v84 = v80;
    uint64_t v85 = v82;
    unint64_t v86 = v32;
    double v87 = &protocol witness table for PlainListStyle;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v31);
  }
  uint64_t v26 = &v20[*(int *)(DetailsView + 56)];
  id v27 = *(id *)v26;
  char v28 = v26[8];
  sub_1001AEDAC(*(id *)v26, v28);
  id v29 = sub_1004E75C0(v27, v28);
  sub_1001AEDC8(v27, v28);
  swift_retain();

  LOBYTE(v27) = dispatch thunk of TrainingLoadViewModelProvider.isFetchingDataForNewDateRange.getter();
  swift_release();
  uint64_t v30 = sub_1005EB880((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
  if (v27) {
    goto LABEL_4;
  }
  __chkstk_darwin(v30);
  *(&v59 - 2) = a1;
  sub_1000AFA94(&qword_100964AA8);
  sub_1000A132C(&qword_100964AB0, &qword_100964AA8);
  uint64_t v34 = v61;
  List<>.init(content:)();
  uint64_t v84 = static Color.clear.getter();
  swift_retain();
  uint64_t v35 = AnyView.init<A>(_:)();
  uint64_t v36 = v62;
  uint64_t v37 = v75;
  uint64_t v38 = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v75, v34, v63);
  swift_release();
  *(void *)(v37 + *(int *)(v60 + 36)) = v35;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v38);
  uint64_t v39 = v76;
  static ListSectionSpacing.custom(_:)();
  uint64_t v40 = (uint64_t)v69;
  uint64_t v41 = v70;
  uint64_t v42 = &v69[*(int *)(v64 + 36)];
  uint64_t v43 = v66;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v44(v42, v39, v70);
  char v45 = *(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56);
  v45(v42, 0, 1, v41);
  sub_1000AEF2C(v37, v40, &qword_100964A48);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v47 = (uint64_t)v71;
  v44(v71, v39, v41);
  v45((char *)v47, 0, 1, v41);
  uint64_t v48 = v80;
  uint64_t v49 = (uint64_t)v67;
  uint64_t v50 = (uint64_t *)&v67[*(int *)(v80 + 36)];
  uint64_t v51 = sub_1000AFA94(&qword_100964A78);
  sub_1000AEF2C(v47, (uint64_t)v50 + *(int *)(v51 + 28), &qword_100964A90);
  uint64_t *v50 = KeyPath;
  sub_1000AEF2C(v40, v49, &qword_100964A38);
  sub_10008DB18(v47, &qword_100964A90);
  sub_10008DB18(v40, &qword_100964A38);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v76, v41);
  sub_10008DB18(v75, &qword_100964A48);
  uint64_t v52 = v73;
  PlainListStyle.init()();
  unint64_t v53 = sub_1005EB290();
  uint64_t v54 = v65;
  uint64_t v55 = v82;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v52, v55);
  sub_10008DB18(v49, &qword_100964A20);
  uint64_t v56 = v72;
  uint64_t v57 = v68;
  uint64_t v58 = v81;
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v68, v54, v81);
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v78, v57, v58);
  swift_storeEnumTagMultiPayload();
  sub_1000A132C((unint64_t *)&qword_10094BFB0, &qword_10094BFB8);
  uint64_t v84 = v48;
  uint64_t v85 = v55;
  unint64_t v86 = v53;
  double v87 = &protocol witness table for PlainListStyle;
  swift_getOpaqueTypeConformance2();
  _ConditionalContent<>.init(storage:)();
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v57, v58);
}

uint64_t sub_1005E89AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v58 = type metadata accessor for LoadItemsList() - 8;
  __chkstk_darwin(v58);
  uint64_t v59 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v52 - v5);
  uint64_t v7 = sub_1000AFA94(&qword_100964AB8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100964AC0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v61 = (uint64_t)&v52 - v16;
  uint64_t v62 = a1;
  sub_1000AFA94(&qword_100964AC8);
  uint64_t v17 = sub_1000A1370(&qword_100964AD0);
  uint64_t v18 = sub_1000A1370(&qword_100964AD8);
  unint64_t v19 = sub_1005EB654();
  uint64_t v63 = v18;
  unint64_t v64 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v63 = v17;
  unint64_t v64 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  Section<>.init(content:)();
  LOBYTE(v17) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v7);
  id v29 = &v14[*(int *)(v12 + 44)];
  uint64_t v57 = v14;
  char *v29 = v17;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1000AEEC8((uint64_t)v14, v61, &qword_100964AC0);
  uint64_t v30 = *(void **)a1;
  uint64_t v31 = *(void **)(a1 + 8);
  uint64_t v33 = *(void **)(a1 + 16);
  unint64_t v32 = *(void **)(a1 + 24);
  uint64_t v34 = *(void *)(a1 + 48);
  id v54 = *(id *)(a1 + 40);
  uint64_t v35 = *(void **)(a1 + 56);
  uint64_t v56 = a1 + *(int *)(type metadata accessor for LoadDetailsView() + 48);
  uint64_t v36 = v58;
  uint64_t v55 = (char *)v6 + *(int *)(v58 + 52);
  id v37 = v35;
  id v53 = v30;
  id v38 = v31;
  id v39 = v33;
  id v40 = v32;
  id v41 = v54;
  swift_retain();
  sub_1000AFA94(&qword_100964928);
  State.wrappedValue.getter();
  uint64_t v42 = *(void **)(a1 + 32);
  *uint64_t v6 = v53;
  v6[1] = v38;
  v6[2] = v39;
  v6[3] = v40;
  v6[4] = v41;
  v6[5] = v34;
  void v6[6] = v35;
  *(void *)((char *)v6 + *(int *)(v36 + 56)) = v42;
  uint64_t v43 = (char *)v6 + *(int *)(v36 + 60);
  type metadata accessor for BalanceDataProvider();
  sub_1005EB540(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  id v44 = v42;
  *(void *)uint64_t v43 = Environment.init<A>(_:)();
  v43[8] = v45 & 1;
  uint64_t v46 = v61;
  uint64_t v47 = (uint64_t)v57;
  sub_1000AEF2C(v61, (uint64_t)v57, &qword_100964AC0);
  uint64_t v48 = v59;
  sub_1005EB818((uint64_t)v6, v59, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
  uint64_t v49 = v60;
  sub_1000AEF2C(v47, v60, &qword_100964AC0);
  uint64_t v50 = sub_1000AFA94(&qword_100964AF8);
  sub_1005EB818(v48, v49 + *(int *)(v50 + 48), (uint64_t (*)(void))type metadata accessor for LoadItemsList);
  sub_1005EB880((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
  sub_10008DB18(v46, &qword_100964AC0);
  sub_1005EB880(v48, (uint64_t (*)(void))type metadata accessor for LoadItemsList);
  return sub_10008DB18(v47, &qword_100964AC0);
}

uint64_t sub_1005E8E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  DetailsSwift::String View = type metadata accessor for LoadDetailsView();
  uint64_t v37 = *(void *)(DetailsView - 8);
  uint64_t v4 = *(void *)(v37 + 64);
  __chkstk_darwin(DetailsView - 8);
  uint64_t v35 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RoundedRectangle();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (_OWORD *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1000AFA94(&qword_100964AF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100964AD8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000AFA94(&qword_100964AD0);
  uint64_t v15 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = static HorizontalAlignment.leading.getter();
  *((void *)v11 + 1) = 0x4000000000000000;
  v11[16] = 0;
  uint64_t v18 = sub_1000AFA94(&qword_100964B00);
  sub_1005E928C(a1, (uint64_t)&v11[*(int *)(v18 + 44)]);
  unint64_t v19 = (char *)v8 + *(int *)(v6 + 28);
  uint64_t v20 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v21 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  __asm { FMOV            V0.2D, #14.0 }
  *uint64_t v8 = _Q0;
  uint64_t v27 = (uint64_t)&v14[*(int *)(v12 + 36)];
  sub_1005EB818((uint64_t)v8, v27, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v27 + *(int *)(sub_1000AFA94(&qword_10094E460) + 36)) = 256;
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v14, &qword_100964AF0);
  sub_1005EB880((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10008DB18((uint64_t)v11, &qword_100964AF0);
  uint64_t v28 = a1;
  uint64_t v29 = v35;
  sub_1005EB818(v28, v35, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
  unint64_t v30 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v31 = swift_allocObject();
  sub_1005EB054(v29, v31 + v30);
  unint64_t v32 = sub_1005EB654();
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18((uint64_t)v14, &qword_100964AD8);
  static VerticalEdge.Set.all.getter();
  uint64_t v39 = v12;
  unint64_t v40 = v32;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = v36;
  View.listRowSeparator(_:edges:)();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v33);
}

uint64_t sub_1005E928C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v91 = sub_1000AFA94(&qword_100964B08);
  __chkstk_darwin(v91);
  uint64_t v93 = (ValueMetadata **)((char *)v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  DetailsSwift::String View = type metadata accessor for LoadDetailsView();
  uint64_t v5 = DetailsView - 8;
  v86[0] = *(void *)(DetailsView - 8);
  __chkstk_darwin(DetailsView);
  v86[1] = v6;
  uint64_t v87 = (uint64_t)v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000AFA94(&qword_100964B10);
  uint64_t v89 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  double v88 = (char *)v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_100964B18);
  uint64_t v111 = *(void *)(v8 - 8);
  uint64_t v112 = v8;
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v106 = *(void *)(v10 - 8);
  uint64_t v107 = v10;
  __chkstk_darwin(v10);
  uint64_t v105 = (char *)v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100964B20);
  __chkstk_darwin(v12 - 8);
  uint64_t v110 = (uint64_t)v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v109 = (uint64_t)v86 - v15;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v103 = *(void *)(DataType - 8);
  uint64_t v104 = DataType;
  __chkstk_darwin(DataType);
  uint64_t v98 = (char *)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v101 = *(void *)(ViewModel - 8);
  uint64_t v102 = ViewModel;
  __chkstk_darwin(ViewModel);
  uint64_t v97 = (char *)v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100964B28);
  uint64_t v99 = *(void *)(v20 - 8);
  uint64_t v100 = v20;
  __chkstk_darwin(v20);
  int v96 = (char *)v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_100964B30);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000AFA94(&qword_100964B38);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000AFA94(&qword_100964B40);
  uint64_t v30 = v29 - 8;
  __chkstk_darwin(v29);
  uint64_t v108 = (uint64_t)v86 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)v86 - v33;
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)v86 - v36;
  *(void *)uint64_t v24 = static HorizontalAlignment.leading.getter();
  *((void *)v24 + 1) = 0x4028000000000000;
  v24[16] = 0;
  uint64_t v38 = sub_1000AFA94(&qword_100964B48);
  sub_1005E9E10(a1, (uint64_t)&v24[*(int *)(v38 + 44)]);
  char v39 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  sub_1000AEF2C((uint64_t)v24, (uint64_t)v28, &qword_100964B30);
  uint64_t v48 = &v28[*(int *)(v26 + 44)];
  char *v48 = v39;
  *((void *)v48 + 1) = v41;
  *((void *)v48 + 2) = v43;
  *((void *)v48 + 3) = v45;
  *((void *)v48 + 4) = v47;
  v48[40] = 0;
  sub_10008DB18((uint64_t)v24, &qword_100964B30);
  uint64_t v95 = static Alignment.center.getter();
  uint64_t v94 = v49;
  uint64_t v50 = &v34[*(int *)(v30 + 44)];
  uint64_t v51 = a1 + *(int *)(v5 + 64);
  uint64_t v52 = a1;
  id v53 = *(id *)v51;
  LOBYTE(a1) = *(unsigned char *)(v51 + 8);
  sub_1001AEDAC(*(id *)v51, a1);
  id v54 = sub_1004E75C0(v53, a1);
  uint64_t v55 = v53;
  uint64_t v56 = v52;
  sub_1001AEDC8(v55, a1);
  swift_retain();

  sub_1000AFA94(&qword_100964928);
  uint64_t v57 = v98;
  State.wrappedValue.getter();
  uint64_t v58 = v97;
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
  uint64_t v59 = (uint64_t)v37;
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v57, v104);
  uint64_t v60 = v96;
  TrainingLoadViewModel.loadBandFlavoredGradientBackground(rotated:)();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v58, v102);
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v50, v60, v100);
  uint64_t v61 = (uint64_t *)&v50[*(int *)(sub_1000AFA94(&qword_100964B50) + 36)];
  uint64_t v62 = v94;
  uint64_t *v61 = v95;
  v61[1] = v62;
  sub_1000AEEC8((uint64_t)v28, (uint64_t)v34, &qword_100964B38);
  sub_1000AEEC8((uint64_t)v34, (uint64_t)v37, &qword_100964B40);
  id v63 = *(id *)v51;
  LOBYTE(v5) = *(unsigned char *)(v51 + 8);
  sub_1001AEDAC(*(id *)v51, v5);
  id v64 = sub_1004E75C0(v63, v5);
  sub_1001AEDC8(v63, v5);
  unint64_t v65 = v105;
  dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
  LOBYTE(v63) = OvernightMetricsViewModel.isWatchExperienceAvailable.getter();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v65, v107);

  if (v63)
  {
    char v68 = sub_1005E767C();
    type metadata accessor for BalanceDataProvider();
    sub_1005EB540(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
    uint64_t v69 = (ValueMetadata *)Environment.init<A>(_:)();
    if (v68)
    {
      uint64_t v114 = v69;
      LOBYTE(v115) = v70 & 1;
      uint64_t v71 = v87;
      sub_1005EB818(v56, v87, (uint64_t (*)(void))type metadata accessor for LoadDetailsView);
      unint64_t v72 = (*(unsigned __int8 *)(v86[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86[0] + 80);
      uint64_t v73 = swift_allocObject();
      sub_1005EB054(v71, v73 + v72);
      unint64_t v74 = sub_1005EB734();
      uint64_t v75 = v88;
      View.onTapGesture(count:perform:)();
      swift_release();
      sub_1001AEDC8(v114, v115);
      uint64_t v76 = v89;
      uint64_t v77 = v92;
      (*(void (**)(ValueMetadata **, char *, uint64_t))(v89 + 16))(v93, v75, v92);
      swift_storeEnumTagMultiPayload();
      uint64_t v114 = &type metadata for OvernightMetricsView;
      unint64_t v115 = v74;
      swift_getOpaqueTypeConformance2();
      uint64_t v78 = (uint64_t)v90;
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    }
    else
    {
      uint64_t v79 = v93;
      void *v93 = v69;
      *((unsigned char *)v79 + 8) = v70 & 1;
      swift_storeEnumTagMultiPayload();
      unint64_t v80 = sub_1005EB734();
      uint64_t v114 = &type metadata for OvernightMetricsView;
      unint64_t v115 = v80;
      swift_getOpaqueTypeConformance2();
      uint64_t v78 = (uint64_t)v90;
      _ConditionalContent<>.init(storage:)();
    }
    uint64_t v67 = v109;
    sub_1000AEEC8(v78, v109, &qword_100964B18);
    uint64_t v66 = 0;
  }
  else
  {
    uint64_t v66 = 1;
    uint64_t v67 = v109;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56))(v67, v66, 1, v112);
  uint64_t v81 = v108;
  sub_1000AEF2C(v59, v108, &qword_100964B40);
  uint64_t v82 = v110;
  sub_1000AEF2C(v67, v110, &qword_100964B20);
  uint64_t v83 = v113;
  sub_1000AEF2C(v81, v113, &qword_100964B40);
  uint64_t v84 = sub_1000AFA94(&qword_100964B58);
  sub_1000AEF2C(v82, v83 + *(int *)(v84 + 48), &qword_100964B20);
  sub_10008DB18(v67, &qword_100964B20);
  sub_10008DB18(v59, &qword_100964B40);
  sub_10008DB18(v82, &qword_100964B20);
  return sub_10008DB18(v81, &qword_100964B40);
}

uint64_t sub_1005E9E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v69 = type metadata accessor for Calendar.Identifier();
  uint64_t v65 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v62 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  __chkstk_darwin(v4);
  uint64_t v61 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for Date();
  uint64_t v64 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v57 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for GregorianDayRange();
  uint64_t v63 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v58 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for LoadDetailsChartView() - 8;
  __chkstk_darwin(v60);
  uint64_t v66 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v50 - v10;
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v75 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViewModel = type metadata accessor for TrainingLoadViewModel();
  uint64_t v76 = *(void *)(ViewModel - 8);
  __chkstk_darwin(ViewModel);
  uint64_t v51 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t TypeScrollView = type metadata accessor for LoadTypeScrollView();
  uint64_t v16 = TypeScrollView - 8;
  __chkstk_darwin(TypeScrollView);
  uint64_t v56 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v73 = (uint64_t)&v50 - v19;
  uint64_t v20 = *(int *)(type metadata accessor for LoadDetailsView() + 56);
  uint64_t v55 = a1;
  uint64_t v21 = a1 + v20;
  uint64_t v22 = *(void **)(a1 + v20);
  char v23 = *(unsigned char *)(v21 + 8);
  sub_1001AEDAC(v22, v23);
  id v24 = sub_1004E75C0(v22, v23);
  sub_1001AEDC8(v22, v23);
  swift_retain();

  sub_1000AFA94(&qword_100964928);
  State.wrappedValue.getter();
  uint64_t v25 = v51;
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
  swift_release();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v75 + 8);
  v75 += 8;
  uint64_t v52 = v26;
  v26(v13, DataType);
  uint64_t v27 = v73;
  State.projectedValue.getter();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  v76 += 32;
  id v54 = v28;
  v28((char *)v27, v25, ViewModel);
  uint64_t v29 = v27 + *(int *)(v16 + 32);
  type metadata accessor for BalanceDataProvider();
  uint64_t v53 = sub_1005EB540(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  *(void *)uint64_t v29 = Environment.init<A>(_:)();
  *(unsigned char *)(v29 + 8) = v30 & 1;
  id v31 = *(id *)v21;
  char v32 = *(unsigned char *)(v21 + 8);
  sub_1001AEDAC(*(id *)v21, v32);
  id v33 = sub_1004E75C0(v31, v32);
  sub_1001AEDC8(v31, v32);
  swift_retain();

  State.wrappedValue.getter();
  dispatch thunk of TrainingLoadViewModelProvider.viewModel(for:)();
  swift_release();
  v52(v13, DataType);
  type metadata accessor for TrainingLoadViewModelProvider();
  uint64_t v34 = v57;
  static Date.now.getter();
  uint64_t v35 = v65;
  uint64_t v36 = v62;
  uint64_t v37 = v69;
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v62, enum case for Calendar.Identifier.gregorian(_:), v69);
  uint64_t v38 = v61;
  Calendar.init(identifier:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  char v39 = v58;
  static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v38, v71);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v34, v68);
  LOBYTE(v37) = sub_1005E6FA8();
  uint64_t v40 = (uint64_t)v59;
  v54(v59, v25, ViewModel);
  uint64_t v41 = v60;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v40 + *(int *)(v60 + 28), v39, v67);
  *(unsigned char *)(v40 + *(int *)(v41 + 32)) = v37 & 1;
  uint64_t v42 = v40 + *(int *)(v41 + 36);
  *(void *)uint64_t v42 = Environment.init<A>(_:)();
  *(unsigned char *)(v42 + 8) = v43 & 1;
  uint64_t v44 = v73;
  uint64_t v45 = v56;
  sub_1005EB818(v73, v56, (uint64_t (*)(void))type metadata accessor for LoadTypeScrollView);
  uint64_t v46 = v66;
  sub_1005EB818(v40, v66, (uint64_t (*)(void))type metadata accessor for LoadDetailsChartView);
  uint64_t v47 = v72;
  sub_1005EB818(v45, v72, (uint64_t (*)(void))type metadata accessor for LoadTypeScrollView);
  uint64_t v48 = sub_1000AFA94(&qword_100964B68);
  sub_1005EB818(v46, v47 + *(int *)(v48 + 48), (uint64_t (*)(void))type metadata accessor for LoadDetailsChartView);
  sub_1005EB880(v40, (uint64_t (*)(void))type metadata accessor for LoadDetailsChartView);
  sub_1005EB880(v44, (uint64_t (*)(void))type metadata accessor for LoadTypeScrollView);
  sub_1005EB880(v46, (uint64_t (*)(void))type metadata accessor for LoadDetailsChartView);
  return sub_1005EB880(v45, (uint64_t (*)(void))type metadata accessor for LoadTypeScrollView);
}

void sub_1005EA674(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OvernightMetricsViewModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EffortUtilities.OvernightVitalsState();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 56))
  {
    uint64_t v10 = a1 + *(int *)(type metadata accessor for LoadDetailsView() + 56);
    id v11 = *(id *)v10;
    char v12 = *(unsigned char *)(v10 + 8);
    sub_1001AEDAC(*(id *)v10, v12);
    id v13 = sub_1004E75C0(v11, v12);
    sub_1001AEDC8(v11, v12);
    swift_retain();

    dispatch thunk of SleepingSampleViewModelProvider.overnightMetricsModel.getter();
    swift_release();
    OvernightMetricsViewModel.overnightVitalsState.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1004AF4D4((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1005EA860()
{
  uint64_t result = sub_1005E6FA8();
  if (result)
  {
    type metadata accessor for LoadDetailsView();
    swift_retain();
    sub_1000AFA94(&qword_10094DEE0);
    State.wrappedValue.getter();
    State.wrappedValue.setter();
    return swift_release();
  }
  return result;
}

double sub_1005EA90C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for Calendar.Identifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Calendar();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  char v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for GregorianDayRange();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_1009614F0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LoadDetailsView();
  sub_1000AFA94(&qword_100964928);
  State.projectedValue.getter();
  type metadata accessor for TrainingLoadViewModelProvider();
  static Date.now.getter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Calendar.Identifier.gregorian(_:), v3);
  Calendar.init(identifier:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  static TrainingLoadViewModelProvider.createDayRange(now:days:gregorianCalendar:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
  uint64_t v19 = *(void **)(a1 + 56);
  uint64_t v20 = *(void **)(a1 + 32);
  id v21 = v19;
  id v22 = v20;
  return sub_10053E24C((uint64_t)v18, (uint64_t)v15, v19, v20, v27);
}

uint64_t sub_1005EAC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DataType = type metadata accessor for TrainingLoadDataType();
  uint64_t v6 = *(void *)(DataType - 8);
  __chkstk_darwin(DataType);
  uint64_t v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v10 = __chkstk_darwin(v9);
  char v12 = (uint64_t *)&v27[-v11];
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v13(&v27[-v11], a2, DataType, v10);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 88))(v12, DataType);
  if (result == enum case for TrainingLoadDataType.workoutType(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 96))(v12, DataType);
    uint64_t v15 = *v12;
    uint64_t v16 = a3 + *(int *)(type metadata accessor for LoadDetailsView() + 56);
    id v17 = *(id *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    sub_1001AEDAC(*(id *)v16, v18);
    id v19 = sub_1004E75C0(v17, v18);
    sub_1001AEDC8(v17, v18);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(void *)&v27[-32] = v19;
    *(void *)&v27[-24] = v15;
    LOWORD(v26) = 258;
    id v28 = v19;
    sub_1005EB540(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  }
  else
  {
    if (result == enum case for TrainingLoadDataType.allDay(_:)) {
      return result;
    }
    if (result != enum case for TrainingLoadDataType.workout(_:))
    {
      ((void (*)(unsigned char *, uint64_t, uint64_t))v13)(v8, a2, DataType);
      id v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      _StringGuts.grow(_:)(46);
      v25._object = (void *)0x80000001007D03B0;
      v25._countAndFlagsBits = 0xD00000000000002CLL;
      String.append(_:)(v25);
      _print_unlocked<A, B>(_:_:)();
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    uint64_t v21 = a3 + *(int *)(type metadata accessor for LoadDetailsView() + 56);
    id v22 = *(id *)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    sub_1001AEDAC(*(id *)v21, v23);
    id v19 = sub_1004E75C0(v22, v23);
    sub_1001AEDC8(v22, v23);
    uint64_t v24 = swift_getKeyPath();
    __chkstk_darwin(v24);
    *(void *)&v27[-32] = v19;
    *(void *)&v27[-24] = 0;
    LOWORD(v26) = 768;
    id v28 = v19;
    sub_1005EB540(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  }
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  return swift_release();
}

uint64_t sub_1005EB054(uint64_t a1, uint64_t a2)
{
  DetailsSwift::String View = type metadata accessor for LoadDetailsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(DetailsView - 8) + 32))(a2, a1, DetailsView);
  return a2;
}

double sub_1005EB0B8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LoadDetailsView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1005EA90C(v4, a1);
}

unint64_t sub_1005EB128()
{
  unint64_t result = qword_100964A08;
  if (!qword_100964A08)
  {
    sub_1000A1370(&qword_1009649F0);
    sub_1005EB19C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964A08);
  }
  return result;
}

unint64_t sub_1005EB19C()
{
  unint64_t result = qword_100964A10;
  if (!qword_100964A10)
  {
    sub_1000A1370(&qword_100964A18);
    sub_1000A132C((unint64_t *)&qword_10094BFB0, &qword_10094BFB8);
    sub_1000A1370(&qword_100964A20);
    type metadata accessor for PlainListStyle();
    sub_1005EB290();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964A10);
  }
  return result;
}

unint64_t sub_1005EB290()
{
  unint64_t result = qword_100964A28;
  if (!qword_100964A28)
  {
    sub_1000A1370(&qword_100964A20);
    sub_1005EB330();
    sub_1000A132C(&qword_100964A70, &qword_100964A78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964A28);
  }
  return result;
}

unint64_t sub_1005EB330()
{
  unint64_t result = qword_100964A30;
  if (!qword_100964A30)
  {
    sub_1000A1370(&qword_100964A38);
    sub_1005EB3D0();
    sub_1000A132C(&qword_100964A60, &qword_100964A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964A30);
  }
  return result;
}

unint64_t sub_1005EB3D0()
{
  unint64_t result = qword_100964A40;
  if (!qword_100964A40)
  {
    sub_1000A1370(&qword_100964A48);
    sub_1000A132C(&qword_100964A50, &qword_100964A58);
    sub_1000A132C(&qword_100953948, &qword_100953930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964A40);
  }
  return result;
}

uint64_t sub_1005EB498(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for LoadDetailsView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1005EAC38(a1, a2, v6);
}

uint64_t sub_1005EB520()
{
  return sub_10021C730(*(char **)(v0 + 16), *(void *)(v0 + 24), *(_WORD *)(v0 + 32));
}

uint64_t sub_1005EB540(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005EB588@<X0>(uint64_t a1@<X8>)
{
  return sub_1005E89AC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1005EB590()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t sub_1005EB5B4(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_100964A90);
  __chkstk_darwin(v2 - 8);
  sub_1000AEF2C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100964A90);
  return EnvironmentValues.listSectionSpacing.setter();
}

uint64_t sub_1005EB64C@<X0>(uint64_t a1@<X8>)
{
  return sub_1005E8E60(*(void *)(v1 + 16), a1);
}

unint64_t sub_1005EB654()
{
  unint64_t result = qword_100964AE0;
  if (!qword_100964AE0)
  {
    sub_1000A1370(&qword_100964AD8);
    sub_1000A132C(&qword_100964AE8, &qword_100964AF0);
    sub_1000A132C(&qword_1009509E8, &qword_10094E460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964AE0);
  }
  return result;
}

uint64_t sub_1005EB71C()
{
  return sub_1005EB7A4((uint64_t (*)(uint64_t))sub_1005EA860);
}

unint64_t sub_1005EB734()
{
  unint64_t result = qword_100964B60;
  if (!qword_100964B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964B60);
  }
  return result;
}

uint64_t sub_1005EB78C()
{
  return sub_1005EB7A4((uint64_t (*)(uint64_t))sub_1005EA674);
}

uint64_t sub_1005EB7A4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for LoadDetailsView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1005EB818(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005EB880(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005EB8E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005EBA58()
{
  return sub_1005EB520();
}

uint64_t sub_1005EBA70()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005EBAA8()
{
  swift_release();

  return swift_deallocObject();
}

void *assignWithCopy for Histogram1D(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for Histogram1D(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t sub_1005EBBB8@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v7);
  char v12 = (char *)v65 - v11;
  if (!a1)
  {
LABEL_53:
    __break(1u);
    return result;
  }
  uint64_t v69 = a2;
  uint64_t v13 = *v2;
  int64_t v14 = *(void *)(*v2 + 16);
  if (v14 % a1) {
    uint64_t v15 = v14 / a1 + 1;
  }
  else {
    uint64_t v15 = v14 / a1;
  }
  Date.init(timeIntervalSinceReferenceDate:)();
  Date.init(timeIntervalSinceReferenceDate:)();
  Date.timeIntervalSinceReferenceDate.getter();
  double v17 = v16;
  Date.timeIntervalSinceReferenceDate.getter();
  sub_100087AC8(v15, (uint64_t)v72, v17, v18);
  uint64_t v20 = (void *)v72[0];
  uint64_t v19 = v72[1];
  double v21 = v73;
  uint64_t v68 = v72[2];
  double v22 = v74;
  double v23 = v75;
  double v24 = v76;
  Swift::String v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v9, v5);
  v25(v12, v5);
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1005EC318(0, v14, a1, v13, a1);
  swift_bridgeObjectRelease();
  int64_t v27 = v26[2];
  if (!v27)
  {
    swift_bridgeObjectRelease();
    unint64_t v29 = _swiftEmptyArrayStorage;
    uint64_t v52 = _swiftEmptyArrayStorage[2];
    if (v52) {
      goto LABEL_33;
    }
    goto LABEL_50;
  }
  uint64_t v66 = v20;
  uint64_t v67 = v19;
  uint64_t v71 = _swiftEmptyArrayStorage;
  sub_10008CAD8(0, v27, 0);
  uint64_t v28 = 0;
  unint64_t v29 = v71;
  v65[1] = v26;
  char v30 = v26 + 4;
  do
  {
    uint64_t v31 = v30[v28];
    uint64_t v32 = *(void *)(v31 + 16);
    if (v32)
    {
      swift_bridgeObjectRetain();
      id v33 = (unsigned char *)(v31 + 48);
      uint64_t v34 = _swiftEmptyArrayStorage;
      do
      {
        if ((*v33 & 1) == 0)
        {
          long long v70 = *((_OWORD *)v33 - 1);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v34 = sub_1001E70FC(0, v34[2] + 1, 1, v34);
          }
          unint64_t v36 = v34[2];
          unint64_t v35 = v34[3];
          if (v36 >= v35 >> 1) {
            uint64_t v34 = sub_1001E70FC((void *)(v35 > 1), v36 + 1, 1, v34);
          }
          v34[2] = v36 + 1;
          *(_OWORD *)&v34[2 * v36 + 4] = v70;
        }
        v33 += 24;
        --v32;
      }
      while (v32);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = _swiftEmptyArrayStorage;
    }
    unint64_t v37 = v34[2];
    if (!v37)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v40 = 0.0;
      double v41 = 0.0;
      goto LABEL_29;
    }
    if (v37 >= 4)
    {
      uint64_t v38 = v37 & 0x7FFFFFFFFFFFFFFCLL;
      uint64_t v42 = (const double *)(v34 + 8);
      double v39 = 0.0;
      uint64_t v43 = v37 & 0x7FFFFFFFFFFFFFFCLL;
      do
      {
        uint64_t v44 = v42 - 4;
        float64x2x2_t v77 = vld2q_f64(v44);
        float64x2x2_t v78 = vld2q_f64(v42);
        v77.val[0] = vmulq_f64(v77.val[0], v77.val[1]);
        v78.val[0] = vmulq_f64(v78.val[0], v78.val[1]);
        double v39 = v39 + v77.val[0].f64[0] + v77.val[0].f64[1] + v78.val[0].f64[0] + v78.val[0].f64[1];
        v42 += 8;
        v43 -= 4;
      }
      while (v43);
      if (v37 == v38) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v38 = 0;
      double v39 = 0.0;
    }
    unint64_t v45 = v37 - v38;
    uint64_t v46 = (double *)&v34[2 * v38 + 5];
    do
    {
      double v39 = v39 + *(v46 - 1) * *v46;
      v46 += 2;
      --v45;
    }
    while (v45);
LABEL_26:
    double v41 = 0.0;
    uint64_t v47 = 5;
    uint64_t v48 = v34[2];
    do
    {
      double v41 = v41 + *(double *)&v34[v47];
      v47 += 2;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v40 = v39 / v41;
LABEL_29:
    uint64_t v71 = v29;
    unint64_t v50 = v29[2];
    unint64_t v49 = v29[3];
    if (v50 >= v49 >> 1)
    {
      sub_10008CAD8(v49 > 1, v50 + 1, 1);
      unint64_t v29 = v71;
    }
    ++v28;
    v29[2] = v50 + 1;
    uint64_t v51 = (double *)&v29[3 * v50];
    v51[4] = v40;
    v51[5] = v41;
    *((unsigned char *)v51 + 48) = v37 == 0;
  }
  while (v28 != v27);
  swift_bridgeObjectRelease();
  uint64_t v19 = v67;
  uint64_t v20 = v66;
  uint64_t v52 = v29[2];
  if (v52)
  {
LABEL_33:
    uint64_t v53 = 0;
    unint64_t v54 = 0;
    uint64_t v55 = (void *)v72[0];
    double v56 = v73;
    double v57 = v75;
    while (1)
    {
      uint64_t v60 = (double *)&v29[v53];
      if ((v29[v53 + 6] & 1) != 0 || v54 >= v55[2])
      {
        double v58 = v23;
        double v59 = v24;
      }
      else
      {
        double v61 = v60[4];
        double v62 = v60[5];
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if (result)
        {
          uint64_t v20 = v55;
        }
        else
        {
          uint64_t result = (uint64_t)sub_1005EC1D4(v55);
          uint64_t v20 = (void *)result;
        }
        if (v54 >= v20[2])
        {
          __break(1u);
          goto LABEL_53;
        }
        double v58 = v61;
        double v59 = v62;
        uint64_t v63 = (double *)&v20[v53];
        v63[4] = v61;
        v63[5] = v62;
        *((unsigned char *)v63 + 48) = 0;
        if (v56 < v61)
        {
          double v22 = v62;
          double v21 = v61;
          double v56 = v61;
        }
        if (v57 < 0.0 || v57 > v61)
        {
          double v57 = v61;
        }
        else
        {
          double v58 = v23;
          double v59 = v24;
        }
        uint64_t v55 = v20;
      }
      ++v54;
      v53 += 3;
      double v23 = v58;
      double v24 = v59;
      if (v52 == v54) {
        goto LABEL_51;
      }
    }
  }
LABEL_50:
  double v58 = v23;
  double v59 = v24;
LABEL_51:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v64 = v69;
  *(void *)uint64_t v69 = v20;
  *((void *)v64 + 1) = v19;
  *((void *)v64 + 2) = v68;
  void v64[3] = v21;
  v64[4] = v22;
  v64[5] = v58;
  v64[6] = v59;
  return result;
}

BOOL sub_1005EC14C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_1003755DC(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_10037564C(v2, v3);
}

void *sub_1005EC1AC(void *a1)
{
  return sub_10005B3A4(0, a1[2], 0, a1);
}

void *sub_1005EC1C0(void *a1)
{
  return sub_1000D1C2C(0, a1[2], 0, a1);
}

void *sub_1005EC1D4(void *a1)
{
  return sub_100087CD4(0, a1[2], 0, a1);
}

void *sub_1005EC1E8(void *a1)
{
  return sub_1001E71C4(0, a1[2], 0, a1);
}

uint64_t sub_1005EC1FC(unint64_t a1)
{
  return sub_100085C7C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1005EC210(void *a1)
{
  return sub_1001E783C(0, a1[2], 0, a1);
}

uint64_t sub_1005EC224(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void *sub_1005EC2A0(void *a1)
{
  return sub_1001E7F58(0, a1[2], 0, a1);
}

uint64_t sub_1005EC2B4(unint64_t a1)
{
  return sub_1001E70C8(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1005EC2C8(unint64_t a1)
{
  return sub_100083B5C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1005EC2DC(void *a1)
{
  return sub_100084014(0, a1[2], 0, a1);
}

uint64_t sub_1005EC2F0(unint64_t a1)
{
  return sub_1001E8954(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1005EC304(unint64_t a1)
{
  return sub_1001E8C30(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1005EC318(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a3;
  int64_t v7 = a1;
  int64_t v8 = 0;
  int64_t v9 = a1;
  while (1)
  {
    BOOL v10 = v9 <= a2;
    if (a3 > 0) {
      BOOL v10 = v9 >= a2;
    }
    if (v10) {
      break;
    }
    BOOL v11 = __OFADD__(v9, a3);
    v9 += a3;
    if (v11) {
      int64_t v9 = (v9 >> 63) ^ 0x8000000000000000;
    }
    BOOL v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      break;
    }
  }
  sub_1001C8ED4(0, v8, 0);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v8)
  {
    uint64_t v44 = *(void *)(a4 + 16);
    int64_t v13 = a2;
    while (1)
    {
      BOOL v14 = v7 <= v13;
      if (v6 > 0) {
        BOOL v14 = v7 >= v13;
      }
      if (v14) {
        break;
      }
      if (__OFADD__(v7, v6)) {
        int64_t v15 = ((v7 + v6) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v15 = v7 + v6;
      }
      if (__OFADD__(v7, a5)) {
        goto LABEL_72;
      }
      if (v44 >= v7 + a5) {
        uint64_t v16 = v7 + a5;
      }
      else {
        uint64_t v16 = v44;
      }
      uint64_t v17 = v16 - v7;
      if (v16 < v7) {
        goto LABEL_73;
      }
      if (v7 < 0) {
        goto LABEL_74;
      }
      uint64_t v47 = result;
      uint64_t v18 = v6;
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v19 = (void *)swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = _swiftEmptyArrayStorage;
      }
      uint64_t v20 = v19[2];
      swift_release();
      if (v20 == v17)
      {
        double v21 = (char *)swift_dynamicCastClass();
        uint64_t v6 = v18;
        int64_t v13 = a2;
        if (!v21)
        {
          swift_bridgeObjectRelease();
          double v21 = (char *)_swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        double v21 = (char *)_swiftEmptyArrayStorage;
        uint64_t v6 = v18;
        int64_t v13 = a2;
        if (v16 != v7)
        {
          if (v17 < 1)
          {
            if (v17 < 0) {
              goto LABEL_78;
            }
          }
          else
          {
            sub_1000AFA94(&qword_10094E728);
            double v21 = (char *)swift_allocObject();
            size_t v24 = j__malloc_size(v21);
            *((void *)v21 + 2) = v17;
            *((void *)v21 + 3) = 2 * ((uint64_t)(v24 - 32) / 24);
          }
          Swift::String v25 = v21 + 32;
          uint64_t v26 = (char *)(a4 + 32 + 24 * v7);
          size_t v27 = 24 * v17;
          if (v26 < &v21[24 * v17 + 32] && v25 < &v26[v27]) {
            goto LABEL_78;
          }
          memcpy(v25, v26, v27);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v47;
      unint64_t v23 = v47[2];
      unint64_t v22 = v47[3];
      if (v23 >= v22 >> 1)
      {
        sub_1001C8ED4(v22 > 1, v23 + 1, 1);
        int64_t v13 = a2;
        uint64_t result = v47;
      }
      result[2] = v23 + 1;
      result[v23 + 4] = v21;
      int64_t v7 = v15;
      if (!--v8) {
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
  }
  else
  {
    int64_t v15 = v7;
    int64_t v13 = a2;
LABEL_41:
    BOOL v28 = v15 <= v13;
    if (v6 > 0) {
      BOOL v28 = v15 >= v13;
    }
    if (v28) {
      return result;
    }
    while (1)
    {
      int64_t v29 = __OFADD__(v15, v6) ? ((v15 + v6) >> 63) ^ 0x8000000000000000 : v15 + v6;
      if (__OFADD__(v15, a5)) {
        break;
      }
      if (*(void *)(a4 + 16) >= v15 + a5) {
        uint64_t v30 = v15 + a5;
      }
      else {
        uint64_t v30 = *(void *)(a4 + 16);
      }
      uint64_t v31 = v30 - v15;
      if (v30 < v15) {
        goto LABEL_76;
      }
      if (v15 < 0) {
        goto LABEL_77;
      }
      uint64_t v32 = result;
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      id v33 = (void *)swift_dynamicCastClass();
      if (!v33)
      {
        swift_bridgeObjectRelease();
        id v33 = _swiftEmptyArrayStorage;
      }
      uint64_t v34 = v33[2];
      swift_release();
      if (v34 == v31)
      {
        unint64_t v35 = (char *)swift_dynamicCastClass();
        if (!v35)
        {
          swift_bridgeObjectRelease();
          unint64_t v35 = (char *)_swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v35 = (char *)_swiftEmptyArrayStorage;
        if (v30 != v15)
        {
          if (v31 < 1)
          {
            if (v31 < 0) {
              goto LABEL_78;
            }
          }
          else
          {
            sub_1000AFA94(&qword_10094E728);
            unint64_t v35 = (char *)swift_allocObject();
            size_t v40 = j__malloc_size(v35);
            *((void *)v35 + 2) = v31;
            *((void *)v35 + 3) = 2 * ((uint64_t)(v40 - 32) / 24);
          }
          double v41 = v35 + 32;
          uint64_t v42 = (char *)(a4 + 32 + 24 * v15);
          size_t v43 = 24 * v31;
          if (v42 < &v35[24 * v31 + 32] && v41 < &v42[v43]) {
            goto LABEL_78;
          }
          memcpy(v41, v42, v43);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v32;
      uint64_t v48 = v32;
      unint64_t v37 = v32[2];
      unint64_t v36 = v32[3];
      int64_t v38 = a2;
      if (v37 >= v36 >> 1)
      {
        sub_1001C8ED4(v36 > 1, v37 + 1, 1);
        int64_t v38 = a2;
        uint64_t result = v48;
      }
      result[2] = v37 + 1;
      result[v37 + 4] = v35;
      BOOL v39 = v29 <= v38;
      if (v6 > 0) {
        BOOL v39 = v29 >= v38;
      }
      int64_t v15 = v29;
      if (v39) {
        return result;
      }
    }
  }
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1005EC854()
{
  unint64_t result = qword_10094C018;
  if (!qword_10094C018)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094C018);
  }
  return result;
}

id sub_1005EC8AC(uint64_t a1)
{
  return sub_1005EC8CC(16.0, a1, &qword_100964B78);
}

id sub_1005EC8BC(uint64_t a1)
{
  return sub_1005EC8CC(14.0, a1, &qword_100964B80);
}

id sub_1005EC8CC(double a1, uint64_t a2, void *a3)
{
  id result = [self systemFontOfSize:a1 weight:UIFontWeightMedium];
  *a3 = result;
  return result;
}

uint64_t sub_1005EC92C()
{
  sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  uint64_t result = static UIFont.systemFont(ofSize:weight:design:)();
  qword_100964B88 = result;
  return result;
}

id sub_1005EC990()
{
  id result = sub_1005EC9B0();
  qword_100964B90 = (uint64_t)result;
  return result;
}

id sub_1005EC9B0()
{
  sub_1000AFA94(&qword_10095CCE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007509E0;
  *(void *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  sub_1000AFA94(&qword_10095CCE8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1007509E0;
  sub_1000AFA94(&qword_10095CCF0);
  uint64_t v2 = swift_initStackObject();
  *(_OWORD *)(v2 + 16) = xmmword_10074E640;
  uint64_t v3 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 40) = 38;
  long long v4 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v2 + 56) = 1;
  uint64_t v5 = UIFontDescriptorFeatureSettingsAttribute;
  id v6 = v3;
  id v7 = v4;
  *(void *)(v1 + 32) = sub_100522C50(v2);
  *(void *)(inited + 40) = v1;
  unint64_t v8 = sub_100522FF8(inited);
  if (qword_10094AFA8 != -1) {
    swift_once();
  }
  id v9 = [qword_100964B88 fontDescriptor:1, 2];
  sub_1003D775C(v8);
  swift_bridgeObjectRelease();
  type metadata accessor for AttributeName(0);
  sub_10008F7C4((unint64_t *)&qword_10094B980, type metadata accessor for AttributeName);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v9 fontDescriptorByAddingAttributes:isa];

  [(id)qword_100964B88 pointSize];
  id v13 = [self fontWithDescriptor:v11 size:v12];

  return v13;
}

void sub_1005ECBF8()
{
  id v0 = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.2];
  id v1 = [v0 CGColor];

  qword_100964B98 = (uint64_t)v1;
}

id sub_1005ECC60()
{
  id v0 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  id result = [v0 setAlignment:0];
  qword_100964BA0 = (uint64_t)v0;
  return result;
}

uint64_t sub_1005ECCB0()
{
  uint64_t v0 = type metadata accessor for DispatchTimeInterval();
  sub_1000258C4(v0, qword_100964BA8);
  *(void *)sub_1000876DC(v0, (uint64_t)qword_100964BA8) = 5;
  id v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

Swift::Int sub_1005ECD48(void *a1, uint64_t a2)
{
  id v3 = [a1 string];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  swift_beginAccess();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v6;
  swift_bridgeObjectRelease();
  return OS_dispatch_semaphore.signal()();
}

unint64_t sub_1005ECDD4()
{
  uint64_t v0 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter();
  if (v1) {
    return 0;
  }
  uint64_t v2 = v0;
  unint64_t result = 0;
  switch(v2)
  {
    case 0:
    case 1:
      unint64_t result = 0xD000000000000023;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      os_log_type_t v4 = static os_log_type_t.fault.getter();
      uint64_t v5 = (void *)HKLogActivity;
      os_log_type_t v6 = v4;
      if (os_log_type_enabled(HKLogActivity, v4))
      {
        id v7 = v5;
        uint64_t v8 = swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136315394;
        sub_10008F1F4(0xD000000000000019, 0x80000001007D0450, &v9);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v8 + 12) = 2048;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v7, v6, "%s found unexpected _HKPrivateMindfulnessType %ld; falling back to nil",
          (uint8_t *)v8,
          0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      return 0;
  }
  return result;
}

void sub_1005ECFD8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGColorSpaceRef DeviceRGB = CGColorSpaceCreateDeviceRGB();
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100756B20;
  BOOL v10 = self;
  space = DeviceRGB;
  id v11 = [v10 clearColor];
  id v12 = [v11 CGColor];

  *(void *)(v9 + 32) = v12;
  id v13 = [v10 blackColor];
  id v14 = [v13 CGColor];

  *(void *)(v9 + 40) = v14;
  uint64_t v25 = v9;
  specialized Array._endMutation()();
  type metadata accessor for CGColor(0);
  CFArrayRef isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v16 = CGGradientCreateWithColors(space, isa, 0);

  if (v16)
  {
    uint64_t v17 = UIGraphicsGetCurrentContext();
    if (v17)
    {
      uint64_t v18 = v17;
      v29.origin.x = a1;
      v29.origin.y = a2;
      v29.size.width = a3;
      v29.size.height = a4;
      v28.y = CGRectGetMaxY(v29);
      v27.y = 0.0;
      v27.x = (a1 + a3) * 0.5;
      v28.x = v27.x;
      CGContextDrawLinearGradient(v18, v16, v27, v28, 0);

      goto LABEL_7;
    }
  }
  os_log_type_t v19 = static os_log_type_t.error.getter();
  uint64_t v20 = (void *)HKLogActivity;
  os_log_type_t v21 = v19;
  if (os_log_type_enabled(HKLogActivity, v19))
  {
    unint64_t v22 = v20;
    unint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)unint64_t v23 = 136315138;
    sub_10008F1F4(0xD000000000000022, 0x80000001007D0400, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "%s - failed to draw gradient", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return;
  }
LABEL_7:
}

void sub_1005ED2EC(double a1, double a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100752410;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v11 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 40) = a5;
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  uint64_t v12 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  *(void *)(inited + 80) = a6;
  *(void *)(inited + 104) = v12;
  *(void *)(inited + 112) = NSParagraphStyleAttributeName;
  uint64_t v13 = qword_10094AFC0;
  id v14 = NSFontAttributeName;
  id v15 = a5;
  uint64_t v16 = NSForegroundColorAttributeName;
  id v17 = a6;
  uint64_t v18 = NSParagraphStyleAttributeName;
  if (v13 != -1) {
    swift_once();
  }
  os_log_type_t v19 = (void *)qword_100964BA0;
  *(void *)(inited + 144) = sub_10007E2D8(0, &qword_100964BC0);
  *(void *)(inited + 120) = v19;
  id v20 = v19;
  sub_1000DFC2C(inited);
  id v21 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F7C4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v24 = [v21 initWithString:v22 attributes:isa];

  [v24 drawAtPoint:a1, a2];
}

void sub_1005ED530(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100752410;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v12 = qword_10094AFA8;
  uint64_t v32 = NSFontAttributeName;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_100964B88;
  uint64_t v14 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  uint64_t v15 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  *(void *)(inited + 80) = a7;
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 112) = NSParagraphStyleAttributeName;
  uint64_t v16 = qword_10094AFC0;
  id v17 = v13;
  uint64_t v18 = NSForegroundColorAttributeName;
  id v19 = a7;
  id v20 = NSParagraphStyleAttributeName;
  if (v16 != -1) {
    swift_once();
  }
  id v21 = (void *)qword_100964BA0;
  *(void *)(inited + 144) = sub_10007E2D8(0, &qword_100964BC0);
  *(void *)(inited + 120) = v21;
  id v22 = v21;
  sub_1000DFC2C(inited);
  id v23 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10008F7C4((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v23 initWithString:v24 attributes:isa];

  if (a6)
  {
    NSString v27 = String._bridgeToObjectiveC()();
    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = [v27 rangeOfString:v28];
    uint64_t v31 = v30;

    if (qword_10094AFB0 != -1) {
      swift_once();
    }
    [v26 addAttribute:v32 value:qword_100964B90 range:v29, v31];
  }
  [v26 drawAtPoint:a1, a2];
}

BOOL sub_1005ED850()
{
  unint64_t v0 = dispatch thunk of MindfulnessSessionViewModel.sessionType.getter();
  if (v1) {
    return 0;
  }
  if (v0 < 4) {
    return (7u >> (v0 & 0xF)) & 1;
  }
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  os_log_type_t v4 = (void *)HKLogActivity;
  os_log_type_t v5 = v3;
  BOOL result = os_log_type_enabled(HKLogActivity, v3);
  if (result)
  {
    os_log_type_t v6 = v4;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_10008F1F4(0xD00000000000001CLL, 0x80000001007D0430, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v5, "%s found unexpected _HKPrivateMindfulnessType %ld; falling back to false",
      (uint8_t *)v7,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return 0;
  }
  return result;
}

void sub_1005ED9DC(double a1, double a2, CGFloat a3)
{
  os_log_type_t v4 = UIGraphicsGetCurrentContext();
  if (v4)
  {
    os_log_type_t v5 = v4;
    path = CGPathCreateMutable();
    v12[0] = 0x3FF0000000000000;
    v12[1] = 0;
    v12[2] = 0;
    v12[3] = 0x3FF0000000000000;
    v12[4] = 0;
    v12[5] = 0;
    CGMutablePathRef.move(to:transform:)();
    CGMutablePathRef.addLine(to:transform:)();
    CGPathCloseSubpath(path);
    CGContextAddPath(v5, path);
    if (qword_10094AFB8 != -1) {
      swift_once();
    }
    CGContextSetStrokeColorWithColor(v5, (CGColorRef)qword_100964B98);
    CGContextSetLineWidth(v5, a3);
    CGContextSetLineCap(v5, kCGLineCapRound);
    CGContextStrokePath(v5);
  }
  else
  {
    os_log_type_t v6 = static os_log_type_t.error.getter();
    uint64_t v7 = (void *)HKLogActivity;
    os_log_type_t v8 = v6;
    if (os_log_type_enabled(HKLogActivity, v6))
    {
      uint64_t v9 = v7;
      BOOL v10 = (uint8_t *)swift_slowAlloc();
      v12[0] = swift_slowAlloc();
      *(_DWORD *)BOOL v10 = 136315138;
      sub_10008F1F4(0xD000000000000022, 0x80000001007D0400, v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "%s - failed to draw keyline", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

void sub_1005EDC38(uint64_t a1, uint64_t a2, void (*a3)(void, void), CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  uint64_t v105 = a3;
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v103 = v13;
  uint64_t v104 = v14;
  __chkstk_darwin(v13);
  uint64_t v101 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v102 = (char *)&v99 - v17;
  sub_1005ECDD4();
  if (v18)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [self imageNamed:v19];

    [v20 drawInRect:a4, a5, a6, a7];
    swift_bridgeObjectRelease();
  }
  sub_1005ECFD8(a4, a5, a6, a7);
  id v21 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
  id v22 = [v21 source];

  LODWORD(v21) = [v22 _hasFirstPartyBundleID];
  if (v21)
  {
    id v23 = sub_1005CD058();
    if (v23)
    {
      NSString v24 = v23;
      [v23 size];
      [v24 size];
      [v24 size];
      [v24 size];
      v113.origin.x = 16.0;
      v113.origin.y = 16.0;
      v113.size.width = 40.0;
      v113.size.height = 40.0;
      CGRectGetWidth(v113);
      v114.origin.x = 16.0;
      v114.origin.y = 16.0;
      v114.size.width = 40.0;
      v114.size.height = 40.0;
      CGRectGetHeight(v114);
      CGRect.centered(in:)();
      [v24 drawInRect:];
    }
  }
  else
  {
    uint64_t v25 = MindfulnessSessionViewModel.sourceRevision.getter();
    id v26 = [(id)v25 source];

    LOBYTE(v25) = [v26 _isAppleWatch];
    if (v25)
    {
      id v27 = sub_1005CD128(40.0);
      NSString v28 = self;
      uint64_t v111 = sub_1005CA770;
      uint64_t v112 = 0;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v108 = 1107296256;
      uint64_t v109 = sub_100259288;
      uint64_t v110 = &unk_1008D1758;
      id v29 = _Block_copy(&aBlock);
      swift_release();
      [v28 fetchWatchIconWithParameters:v27 completion:v29];
    }
    else
    {
      id v27 = sub_1005CD288(40.0);
      uint64_t v30 = self;
      uint64_t v111 = sub_1005CA770;
      uint64_t v112 = 0;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v108 = 1107296256;
      uint64_t v109 = sub_100259288;
      uint64_t v110 = &unk_1008D16B8;
      id v29 = _Block_copy(&aBlock);
      swift_release();
      [v30 fetchPhoneIconWithParameters:v27 completion:v29];
    }
    _Block_release(v29);
  }
  id v31 = sub_1005CBFB4(a1, a2);
  id v32 = [v31 string];

  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;

  if (qword_10094AF98 != -1) {
    swift_once();
  }
  unint64_t v36 = (void *)qword_100964B78;
  unint64_t v37 = self;
  id v38 = [v37 whiteColor];
  sub_1005ED2EC(16.0, 104.0, v33, v35, v36, v38);

  swift_bridgeObjectRelease();
  BOOL v39 = self;
  id v40 = [v39 mainBundle];
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v40 localizedStringForKey:v41 value:0 table:0];

  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = v44;

  if (qword_10094AFA0 != -1) {
    swift_once();
  }
  uint64_t v46 = (void *)qword_100964B80;
  id v47 = [v37 secondaryLabelColor];
  sub_1005ED2EC(16.0, 140.0, v43, v45, v46, v47);
  swift_bridgeObjectRelease();

  id v48 = sub_1005CB130();
  id v49 = [v48 string];

  uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v51;

  uint64_t v53 = self;
  id v54 = [v53 elapsedTimeColors];
  if (!v54)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v55 = v54;
  id v56 = [v54 nonGradientTextColor];

  if (!v56)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_1005ED530(16.0, 152.0, v50, v52, 0, 0, v56);

  swift_bridgeObjectRelease();
  if (!sub_1005ED850()) {
    return;
  }
  id v100 = v53;
  sub_1005ED9DC(134.0, 141.0, 2.0);
  id v57 = [v39 mainBundle];
  NSString v58 = String._bridgeToObjectiveC()();
  id v59 = [v57 localizedStringForKey:v58 value:0 table:0];

  uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v61;

  uint64_t v63 = (void *)qword_100964B80;
  id v64 = [v37 secondaryLabelColor];
  sub_1005ED2EC(148.0, 140.0, v60, v62, v63, v64);
  swift_bridgeObjectRelease();

  uint64_t v65 = swift_allocObject();
  id v66 = [v39 mainBundle];
  NSString v67 = String._bridgeToObjectiveC()();
  id v68 = [v66 localizedStringForKey:v67 value:0 table:0];

  uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v71 = v70;

  *(void *)(v65 + 16) = v69;
  *(void *)(v65 + 24) = v71;
  dispatch_semaphore_t v72 = dispatch_semaphore_create(0);
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = v65;
  *(void *)(v73 + 24) = v72;
  double v74 = v105;
  double v75 = (void *)swift_allocObject();
  v75[2] = v74;
  v75[3] = sub_1005EE8BC;
  v75[4] = v73;
  swift_retain();
  double v76 = v72;
  id v77 = v74;
  swift_retain();
  static MindfulnessSessionDataCalculator.endingHeartRate(for:healthStore:completion:)();
  swift_release();
  swift_release();
  float64x2x2_t v78 = v101;
  static DispatchTime.now()();
  if (qword_10094AFC8 != -1) {
    swift_once();
  }
  uint64_t v79 = type metadata accessor for DispatchTimeInterval();
  sub_1000876DC(v79, (uint64_t)qword_100964BA8);
  + infix(_:_:)();
  unint64_t v80 = *(void (**)(void, void))(v104 + 8);
  v104 += 8;
  uint64_t v105 = v80;
  v80(v78, v103);
  OS_dispatch_semaphore.wait(timeout:)();
  uint64_t v81 = &selRef_initUsingEarnedShader_;
  if ((static DispatchTimeoutResult.== infix(_:_:)() & 1) == 0)
  {
    os_log_type_t v82 = static os_log_type_t.error.getter();
    uint64_t v83 = (void *)HKLogActivity;
    os_log_type_t v84 = v82;
    if (os_log_type_enabled(HKLogActivity, v82))
    {
      uint64_t v85 = v83;
      unint64_t v86 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)unint64_t v86 = 136315138;
      uint64_t v106 = sub_10008F1F4(0xD000000000000022, 0x80000001007D0400, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v87 = v85;
      uint64_t v81 = &selRef_initUsingEarnedShader_;
      _os_log_impl((void *)&_mh_execute_header, v87, v84, "%s failed to fetch heart rate; semaphore timed out",
        v86,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  swift_beginAccess();
  uint64_t v89 = *(void *)(v65 + 16);
  uint64_t v88 = *(void *)(v65 + 24);
  swift_bridgeObjectRetain();
  id v90 = [v39 mainBundle];
  NSString v91 = String._bridgeToObjectiveC()();
  id v92 = [v90 localizedStringForKey:v91 value:0 table:0];

  uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v95 = v94;

  id v96 = [v100 heartRateColors];
  if (!v96) {
    goto LABEL_28;
  }
  uint64_t v97 = v96;
  id v98 = [v96 v81[403]];

  if (!v98)
  {
LABEL_29:
    __break(1u);
    return;
  }
  sub_1005ED530(148.0, 152.0, v89, v88, v93, v95, v98);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v105(v102, v103);
  swift_release();
}

uint64_t sub_1005EE844()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005EE87C()
{
  swift_release();

  return swift_deallocObject();
}

Swift::Int sub_1005EE8BC(void *a1)
{
  return sub_1005ECD48(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005EE8C4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005EE904(uint64_t a1, char a2)
{
  sub_1005CB39C(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(id))(v2 + 24));
}

void sub_1005EE914(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  os_log_type_t v8 = UIGraphicsGetCurrentContext();
  if (v8)
  {
    c = v8;
    id v9 = [self secondarySystemBackgroundColor];
    BOOL v10 = (CGColor *)[v9 CGColor];

    CGContextSetFillColorWithColor(c, v10);
    v19.origin.x = a1;
    v19.origin.y = a2;
    v19.size.width = a3;
    v19.size.height = a4;
    CGContextFillRect(c, v19);
  }
  else
  {
    os_log_type_t v11 = static os_log_type_t.error.getter();
    uint64_t v12 = (void *)HKLogActivity;
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(HKLogActivity, v11))
    {
      uint64_t v14 = v12;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_10008F1F4(0xD000000000000022, 0x80000001007D0400, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v13, "%s - failed to draw background", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

void sub_1005EEB1C(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  sub_1005EE914(a3, a4, a5, a6);
  os_log_type_t v8 = (void *)MindfulnessSessionViewModel.sourceRevision.getter();
  id v9 = [v8 source];

  LODWORD(v8) = [v9 _hasFirstPartyBundleID];
  if (v8)
  {
    id v10 = sub_1005CD058();
    if (!v10) {
      goto LABEL_9;
    }
    id v11 = v10;
    [v10 drawInRect:CGRectMake(16.0, 16.0, 40.0, 40.0)];
  }
  else
  {
    uint64_t v12 = MindfulnessSessionViewModel.sourceRevision.getter();
    id v13 = [(id)v12 source];

    LOBYTE(v12) = [v13 _isAppleWatch];
    if (v12)
    {
      id v11 = sub_1005CD128(28.0);
      uint64_t v14 = self;
      uint64_t v45 = sub_1005CA87C;
      uint64_t v46 = 0;
      NSString v41 = _NSConcreteStackBlock;
      uint64_t v42 = 1107296256;
      uint64_t v43 = sub_100259288;
      uint64_t v44 = &unk_1008D17A8;
      uint64_t v15 = _Block_copy(&v41);
      swift_release();
      [v14 fetchWatchIconWithParameters:v11 completion:v15];
    }
    else
    {
      id v11 = sub_1005CD288(28.0);
      uint64_t v16 = self;
      uint64_t v45 = sub_1005CA87C;
      uint64_t v46 = 0;
      NSString v41 = _NSConcreteStackBlock;
      uint64_t v42 = 1107296256;
      uint64_t v43 = sub_100259288;
      uint64_t v44 = &unk_1008D1780;
      uint64_t v15 = _Block_copy(&v41);
      swift_release();
      [v16 fetchPhoneIconWithParameters:v11 completion:v15];
    }
    _Block_release(v15);
  }

LABEL_9:
  id v17 = sub_1005CBFB4(a1, a2);
  id v18 = [v17 string];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (qword_10094AF98 != -1) {
    swift_once();
  }
  id v22 = (void *)qword_100964B78;
  id v23 = self;
  id v24 = [v23 whiteColor];
  sub_1005ED2EC(68.0, 18.0, v19, v21, v22, v24);

  swift_bridgeObjectRelease();
  id v25 = [self mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 localizedStringForKey:v26 value:0 table:0];

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  if (qword_10094AFA0 != -1) {
    swift_once();
  }
  id v31 = (void *)qword_100964B80;
  id v32 = [v23 secondaryLabelColor];
  sub_1005ED2EC(68.0, 36.0, v28, v30, v31, v32);
  swift_bridgeObjectRelease();

  id v33 = sub_1005CB130();
  id v34 = [v33 string];

  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v36;

  id v38 = [self elapsedTimeColors];
  if (v38)
  {
    BOOL v39 = v38;
    id v40 = [v38 nonGradientTextColor];

    if (v40)
    {
      sub_1005ED530(176.0, 18.0, v35, v37, 0, 0, v40);
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t *sub_1005EF004(uint64_t *a1, uint64_t *a2, int *a3)
{
  os_log_type_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *os_log_type_t v4 = *a2;
    os_log_type_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    os_log_type_t v8 = (void *)a2[2];
    a1[2] = (uint64_t)v8;
    uint64_t v9 = a3[6];
    id v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for MetricPlatterType();
    id v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    id v14 = v8;
    v13(v10, v11, v12);
    uint64_t v15 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v16 = (char *)v4 + v15;
    id v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for WorkoutChartProperties();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    uint64_t v20 = a3[9];
    uint64_t v21 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)v4 + v20) = (uint64_t)v21;
    id v22 = v21;
  }
  return v4;
}

void sub_1005EF174(uint64_t a1, int *a2)
{
  swift_release();

  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for MetricPlatterType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = type metadata accessor for WorkoutChartProperties();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  os_log_type_t v8 = *(void **)(a1 + a2[9]);
}

void *sub_1005EF254(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  id v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for MetricPlatterType();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for WorkoutChartProperties();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  uint64_t v19 = a3[9];
  uint64_t v20 = *(void **)((char *)a2 + v19);
  *(void *)((char *)a1 + v19) = v20;
  id v21 = v20;
  return a1;
}

void *sub_1005EF374(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v9 = a3[6];
  id v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for MetricPlatterType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for WorkoutChartProperties();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = *(void **)((char *)a2 + v17);
  uint64_t v19 = *(void **)((char *)a1 + v17);
  *(void *)((char *)a1 + v17) = v18;
  id v20 = v18;

  return a1;
}

uint64_t sub_1005EF4A8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for MetricPlatterType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for WorkoutChartProperties();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

void *sub_1005EF598(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for MetricPlatterType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for WorkoutChartProperties();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);

  return a1;
}

uint64_t sub_1005EF6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005EF6C0);
}

uint64_t sub_1005EF6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MetricPlatterType();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for WorkoutChartProperties();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1005EF7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005EF800);
}

uint64_t sub_1005EF800(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MetricPlatterType();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for WorkoutChartProperties();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for MirrorGraphicsMetricsView()
{
  uint64_t result = qword_100964C20;
  if (!qword_100964C20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005EF978()
{
  uint64_t result = type metadata accessor for MetricPlatterType();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WorkoutChartProperties();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005EFA68()
{
  return swift_getOpaqueTypeConformance2();
}

int *sub_1005EFA84@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v165 = a2;
  uint64_t v201 = sub_1000AFA94(&qword_10094C0E0);
  uint64_t v209 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  int v164 = (char *)&v161 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v170 = (char *)&v161 - v5;
  uint64_t v203 = sub_1000AFA94(&qword_10094C0D0);
  uint64_t v202 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  v197 = (char *)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v161 - v8;
  __chkstk_darwin(v10);
  int v163 = (char *)&v161 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v161 - v13;
  __chkstk_darwin(v15);
  uint64_t v169 = (char *)&v161 - v16;
  __chkstk_darwin(v17);
  char v208 = (char *)&v161 - v18;
  uint64_t v178 = type metadata accessor for WorkoutChartProperties();
  uint64_t v176 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v174 = (char *)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for MetricPlatterType();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v184 = (char *)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for SessionChart();
  v187 = *(void (***)(char *, uint64_t))(v175 - 8);
  __chkstk_darwin(v175);
  int v186 = (char *)&v161 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AFA94(&qword_100964C70);
  __chkstk_darwin(v24 - 8);
  uint64_t v188 = (char *)&v161 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_1000AFA94(&qword_100964C78);
  __chkstk_darwin(v185);
  v177 = (char *)&v161 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_1000AFA94(&qword_100964C80);
  __chkstk_darwin(v179);
  uint64_t v190 = (uint64_t)&v161 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_1000AFA94(&qword_100964C88);
  uint64_t v227 = *(void *)(v216 - 8);
  __chkstk_darwin(v216);
  char v207 = (char *)&v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v189 = (char *)&v161 - v30;
  __chkstk_darwin(v31);
  long long v215 = (char *)&v161 - v32;
  uint64_t v219 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v225 = *(void *)(v219 - 8);
  __chkstk_darwin(v219);
  long long v218 = (char *)&v161 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = type metadata accessor for WorkoutViewStyle();
  uint64_t v221 = *(void *)(v224 - 8);
  __chkstk_darwin(v224);
  v223 = (char *)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000AFA94(&qword_10094C100);
  __chkstk_darwin(v35 - 8);
  uint64_t v37 = (char *)&v161 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_1000AFA94(&qword_10094C108);
  uint64_t v222 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  v198 = (char *)&v161 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v173 = (char *)&v161 - v40;
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v161 - v42;
  uint64_t v200 = sub_1000AFA94(&qword_10094C0E8);
  __chkstk_darwin(v200);
  uint64_t v162 = (char *)&v161 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v168 = (char *)&v161 - v46;
  __chkstk_darwin(v47);
  id v49 = (char *)&v161 - v48;
  uint64_t v193 = sub_1000AFA94(&qword_100964C90);
  __chkstk_darwin(v193);
  uint64_t v51 = (char *)&v161 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_1000AFA94(&qword_100964C98);
  uint64_t v182 = *(void *)(v183 - 8);
  __chkstk_darwin(v183);
  int64_t v180 = (char *)&v161 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000AFA94(&qword_100964CA0);
  uint64_t v213 = *(void *)(v53 - 8);
  uint64_t v214 = v53;
  __chkstk_darwin(v53);
  uint64_t v196 = (char *)&v161 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v181 = (char *)&v161 - v56;
  __chkstk_darwin(v57);
  long long v212 = (char *)&v161 - v58;
  uint64_t result = (int *)type metadata accessor for MirrorGraphicsMetricsView();
  uint64_t v60 = (char *)result[7];
  if (!*(void *)(*(void *)&v60[a1] + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  v191 = v14;
  v192 = v9;
  uint64_t v172 = v21;
  uint64_t v61 = v21 + 56;
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v63 = result;
  uint64_t v220 = v20;
  uint64_t v226 = v60;
  uint64_t v171 = v61;
  v205 = v62;
  v62(v37, 1, 1, v20);
  uint64_t v204 = v63[9];
  swift_retain();
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  swift_release();
  char v206 = v37;
  uint64_t result = (int *)sub_10008DB18((uint64_t)v37, &qword_10094C100);
  if (!*(void *)(*(void *)&v226[a1] + 16))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v64 = a1;
  uint64_t result = (int *)(id)HKWorkoutMetricTypeDescription();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v65 = result;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = v217;
  uint64_t v195 = OpaqueTypeConformance2;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  id v68 = *(void (**)(char *, uint64_t))(v222 + 8);
  v222 += 8;
  uint64_t v194 = v68;
  v68(v43, v67);
  uint64_t v167 = v63;
  uint64_t v166 = a1 + v63[8];
  WorkoutChartProperties.tintColor.getter();
  uint64_t v69 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v49, (uint64_t)v51, &qword_10094C0E8);
  uint64_t v71 = v193;
  dispatch_semaphore_t v72 = (uint64_t *)&v51[*(int *)(v193 + 36)];
  *dispatch_semaphore_t v72 = KeyPath;
  v72[1] = v69;
  sub_10008DB18((uint64_t)v49, &qword_10094C0E8);
  uint64_t v73 = v221;
  uint64_t v74 = v221 + 104;
  double v75 = v223;
  uint64_t v76 = v64;
  uint64_t v77 = v224;
  long long v211 = *(void (**)(void))(v221 + 104);
  ((void (*)(char *, void, uint64_t))v211)(v223, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v224);
  unint64_t v78 = sub_1005F13A0();
  uint64_t v79 = v180;
  View.workoutViewStyle(_:)();
  uint64_t v80 = v77;
  uint64_t v81 = v76;
  uint64_t v82 = v73 + 8;
  v210 = *(void (**)(char *, uint64_t))(v73 + 8);
  v210(v75, v80);
  sub_10008DB18((uint64_t)v51, &qword_100964C90);
  uint64_t v83 = v218;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v228 = v71;
  unint64_t v229 = v78;
  swift_getOpaqueTypeConformance2();
  os_log_type_t v84 = v181;
  uint64_t v85 = v183;
  View.accessibilityElement(children:)();
  unint64_t v86 = *(void (**)(char *, uint64_t))(v225 + 8);
  v225 += 8;
  uint64_t v193 = (uint64_t)v86;
  v86(v83, v219);
  (*(void (**)(char *, uint64_t))(v182 + 8))(v79, v85);
  (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v212, v84, v214);
  uint64_t v87 = v172;
  uint64_t v88 = v184;
  uint64_t v89 = v220;
  (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v184, v81 + v167[6], v220);
  int v90 = (*(uint64_t (**)(char *, uint64_t))(v87 + 88))(v88, v89);
  uint64_t v199 = v74;
  if (v90 == enum case for MetricPlatterType.power(_:))
  {
    swift_retain();
    MetricsPublisher.powerMetricsPublisher.getter();
    swift_release();
    PowerMetricsPublisher.powerChartData.getter();
    swift_release();
    uint64_t v91 = v179;
    uint64_t v92 = v178;
    uint64_t v93 = (uint64_t)v177;
    uint64_t v94 = v176;
    uint64_t v95 = v175;
  }
  else
  {
    uint64_t v91 = v179;
    uint64_t v95 = v175;
    if (v90 == enum case for MetricPlatterType.elevation(_:))
    {
      swift_retain();
      MetricsPublisher.elevationChartData.getter();
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v220);
    }
    uint64_t v92 = v178;
    uint64_t v93 = (uint64_t)v177;
    uint64_t v94 = v176;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v174, v166, v92);
  id v96 = v186;
  SessionChart.init(data:chartProperties:faking:)();
  sub_10000CDD4(&qword_100964CB0, (void (*)(uint64_t))&type metadata accessor for SessionChart);
  uint64_t v97 = (uint64_t)v188;
  View.accessibilityIdentifier(_:)();
  v187[1](v96, v95);
  char v98 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v100 = v99;
  uint64_t v102 = v101;
  uint64_t v104 = v103;
  uint64_t v106 = v105;
  sub_1000AEF2C(v97, v93, &qword_100964C70);
  uint64_t v107 = v93 + *(int *)(v185 + 36);
  *(unsigned char *)uint64_t v107 = v98;
  *(void *)(v107 + 8) = v100;
  *(void *)(v107 + 16) = v102;
  *(void *)(v107 + 24) = v104;
  *(void *)(v107 + 32) = v106;
  *(unsigned char *)(v107 + 40) = 0;
  sub_10008DB18(v97, &qword_100964C70);
  char v108 = static Edge.Set.bottom.getter();
  uint64_t v109 = v190;
  sub_1000AEF2C(v93, v190, &qword_100964C78);
  uint64_t v110 = v109 + *(int *)(v91 + 36);
  *(unsigned char *)uint64_t v110 = v108;
  *(_OWORD *)(v110 + 8) = 0u;
  *(_OWORD *)(v110 + 24) = 0u;
  *(unsigned char *)(v110 + 40) = 1;
  sub_10008DB18(v93, &qword_100964C78);
  uint64_t v112 = v223;
  uint64_t v111 = v224;
  ((void (*)(char *, void, uint64_t))v211)(v223, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v224);
  sub_1005F1468(&qword_100964CB8, &qword_100964C80, (void (*)(void))sub_1005F1440);
  CGRect v113 = v189;
  View.workoutViewStyle(_:)();
  v210(v112, v111);
  sub_10008DB18(v109, &qword_100964C80);
  uint64_t result = (int *)(*(uint64_t (**)(char *, char *, uint64_t))(v227 + 32))(v215, v113, v216);
  if (*(void *)(*(void *)&v226[v81] + 16) < 2uLL) {
    goto LABEL_19;
  }
  uint64_t v114 = (uint64_t)v206;
  v205(v206, 1, 1, v220);
  swift_retain();
  unint64_t v115 = v173;
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  swift_release();
  uint64_t result = (int *)sub_10008DB18(v114, &qword_10094C100);
  if (*(void *)(*(void *)&v226[v81] + 16) < 2uLL)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v190 = v81;
  uint64_t v221 = v82;
  uint64_t result = (int *)(id)HKWorkoutMetricTypeDescription();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v116 = result;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v117 = (uint64_t)v168;
  uint64_t v118 = v217;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  v194(v115, v118);
  uint64_t v119 = v223;
  LODWORD(v189) = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
  uint64_t v120 = v224;
  v211(v223);
  unint64_t v121 = sub_100188FC0();
  id v122 = v170;
  uint64_t v123 = v200;
  View.workoutViewStyle(_:)();
  v210(v119, v120);
  sub_10008DB18(v117, &qword_10094C0E8);
  id v124 = v218;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v228 = v123;
  unint64_t v229 = v121;
  uint64_t v125 = swift_getOpaqueTypeConformance2();
  uint64_t v126 = v169;
  uint64_t v127 = v201;
  View.accessibilityElement(children:)();
  ((void (*)(char *, uint64_t))v193)(v124, v219);
  uint64_t v128 = v209 + 8;
  uint64_t v129 = *(void (***)(char *, uint64_t))(v209 + 8);
  ((void (*)(char *, uint64_t))v129)(v122, v127);
  uint64_t v130 = *(uint64_t (**)(char *, char *, uint64_t))(v202 + 32);
  uint64_t result = (int *)v130(v208, v126, v203);
  uint64_t v131 = v190;
  if (*(void *)(*(void *)&v226[v190] + 16) < 3uLL) {
    goto LABEL_21;
  }
  v187 = v129;
  uint64_t v188 = (char *)v125;
  uint64_t v209 = v128;
  uint64_t v132 = (uint64_t)v206;
  unint64_t v133 = v226;
  v205(v206, 1, 1, v220);
  swift_retain();
  static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
  swift_release();
  uint64_t result = (int *)sub_10008DB18(v132, &qword_10094C100);
  if (*(void *)(*(void *)&v133[v131] + 16) < 3uLL)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t result = (int *)(id)HKWorkoutMetricTypeDescription();
  if (result)
  {
    uint64_t v134 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v135 = (uint64_t)v162;
    uint64_t v136 = v217;
    uint64_t v137 = v198;
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    v194(v137, v136);
    uint64_t v139 = v223;
    uint64_t v138 = v224;
    ((void (*)(char *, void, uint64_t))v211)(v223, v189, v224);
    uint64_t v140 = v164;
    View.workoutViewStyle(_:)();
    v210(v139, v138);
    sub_10008DB18(v135, &qword_10094C0E8);
    uint64_t v141 = v218;
    static AccessibilityChildBehavior.combine.getter();
    v142 = v163;
    uint64_t v143 = v201;
    View.accessibilityElement(children:)();
    ((void (*)(char *, uint64_t))v193)(v141, v219);
    ((void (*)(char *, uint64_t))v187)(v140, v143);
    uint64_t v144 = v191;
    uint64_t v145 = v203;
    v130(v191, v142, v203);
    uint64_t v146 = v214;
    uint64_t v147 = *(void (**)(char *, char *, uint64_t))(v213 + 16);
    uint64_t v148 = v196;
    v147(v196, v212, v214);
    uint64_t v226 = *(char **)(v227 + 16);
    ((void (*)(char *, char *, uint64_t))v226)(v207, v215, v216);
    uint64_t v149 = v202;
    uint64_t v150 = *(void (**)(char *, char *, uint64_t))(v202 + 16);
    v150(v192, v208, v145);
    v150(v197, v144, v145);
    uint64_t v151 = v165;
    v147(v165, v148, v146);
    id v152 = (int *)sub_1000AFA94(&qword_100964CD0);
    uint64_t v153 = v216;
    ((void (*)(char *, char *, uint64_t))v226)(&v151[v152[12]], v207, v216);
    uint64_t v154 = v192;
    v150(&v151[v152[16]], v192, v145);
    uint64_t v155 = &v151[v152[20]];
    id v156 = v197;
    v150(v155, v197, v145);
    uint64_t v157 = *(void (**)(char *, uint64_t))(v149 + 8);
    v157(v191, v145);
    v157(v208, v145);
    unint64_t v158 = *(void (**)(char *, uint64_t))(v227 + 8);
    v227 += 8;
    v158(v215, v153);
    uint64_t v159 = v214;
    uint64_t v160 = *(void (**)(char *, uint64_t))(v213 + 8);
    v160(v212, v214);
    v157(v156, v145);
    v157(v154, v145);
    v158(v207, v153);
    return (int *)((uint64_t (*)(char *, uint64_t))v160)(v196, v159);
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1005F12C4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  if (*(void *)(*(void *)(v2 + *(int *)(a1 + 28)) + 16) > 2uLL)
  {
    sub_1005EFA84(v2, a2);
    uint64_t v9 = sub_1000AFA94(&qword_100964C68);
    uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v6 = v9;
    uint64_t v7 = a2;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v4 = sub_1000AFA94(&qword_100964C68);
    uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v6 = v4;
    uint64_t v7 = a2;
    uint64_t v8 = 1;
  }

  return v5(v7, v8, 1, v6);
}

uint64_t sub_1005F138C(double a1, double a2, double a3, double a4)
{
  return sub_1005F1768(a1, a2, a3, a4);
}

unint64_t sub_1005F13A0()
{
  unint64_t result = qword_100964CA8;
  if (!qword_100964CA8)
  {
    sub_1000A1370(&qword_100964C90);
    sub_100188FC0();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964CA8);
  }
  return result;
}

uint64_t sub_1005F1440()
{
  return sub_1005F1468(&qword_100964CC0, &qword_100964C78, (void (*)(void))sub_1005F14E8);
}

uint64_t sub_1005F1468(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005F14E8()
{
  unint64_t result = qword_100964CC8;
  if (!qword_100964CC8)
  {
    sub_1000A1370(&qword_100964C70);
    sub_10000CDD4(&qword_100964CB0, (void (*)(uint64_t))&type metadata accessor for SessionChart);
    sub_10000CDD4((unint64_t *)&qword_10094C0F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964CC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MirrorGraphicsMetricsViewLayout()
{
  return &type metadata for MirrorGraphicsMetricsViewLayout;
}

unint64_t sub_1005F15D8()
{
  unint64_t result = qword_100964CD8;
  if (!qword_100964CD8)
  {
    sub_1000A1370(&qword_100964CE0);
    sub_1005F164C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964CD8);
  }
  return result;
}

unint64_t sub_1005F164C()
{
  unint64_t result = qword_100964CE8;
  if (!qword_100964CE8)
  {
    sub_1000A1370(&qword_100964C68);
    sub_1000A132C(&qword_100962348, &qword_100962350);
    sub_1000A132C(&qword_100964CF0, &qword_100964CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964CE8);
  }
  return result;
}

unint64_t sub_1005F1714()
{
  unint64_t result = qword_100964D00;
  if (!qword_100964D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964D00);
  }
  return result;
}

uint64_t sub_1005F1768(double a1, double a2, double a3, double a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LayoutSubview();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for MetricPlatterConstants();
  uint64_t v54 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v44 - v17;
  type metadata accessor for LayoutSubviews();
  sub_10000CDD4((unint64_t *)&qword_10094C148, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (dispatch thunk of Collection.distance(from:to:)() >= 2)
  {
    MetricPlatterConstants.init()();
    uint64_t v23 = self;
    id v24 = [v23 currentDevice];
    char v25 = UIDevice.isLargeDisplayZoomEnabled.getter();

    double v26 = 60.0;
    if (v25) {
      double v26 = 61.0;
    }
    double v50 = v26;
    id v27 = [v23 currentDevice];
    char v28 = UIDevice.isLargeDisplayZoomEnabled.getter();

    double v29 = 69.0;
    if (v28) {
      double v29 = 80.0;
    }
    double v49 = v29;
    id v30 = [v23 currentDevice];
    char v31 = UIDevice.isLargeDisplayZoomEnabled.getter();

    double v45 = a2;
    if (v31) {
      double v32 = 84.0;
    }
    else {
      double v32 = 65.0;
    }
    double v48 = v32;
    id v33 = [v23 currentDevice];
    UIDevice.isLargeDisplayZoomEnabled.getter();

    id v34 = [v23 currentDevice];
    UIDevice.isLargeDisplayZoomEnabled.getter();

    id v35 = [v23 currentDevice];
    UIDevice.isLargeDisplayZoomEnabled.getter();

    id v36 = [v23 currentDevice];
    UIDevice.isLargeDisplayZoomEnabled.getter();

    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    double v47 = v45 + a4 - v37;
    MetricPlatterConstants.metricMaxHeight.getter();
    double v50 = *(double *)&v18;
    MetricPlatterConstants.heightOfChartLabels.getter();
    double v48 = (a3 + -7.0) * 0.5;
    MetricPlatterConstants.init()();
    MetricPlatterConstants.metricMaxHeight.getter();
    uint64_t v39 = v38;
    uint64_t v40 = *(void (**)(char *, uint64_t))(v54 + 8);
    uint64_t v41 = v51;
    v54 += 8;
    double v49 = *(double *)&v40;
    v40(v15, v51);
    uint64_t v46 = v39;
    LayoutSubviews.subscript.getter();
    static UnitPoint.topLeading.getter();
    char v56 = 0;
    char v55 = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    uint64_t v42 = v53;
    uint64_t v43 = *(void (**)(char *, uint64_t))(v52 + 8);
    v43(v13, v53);
    LayoutSubviews.subscript.getter();
    static UnitPoint.topLeading.getter();
    char v56 = 0;
    char v55 = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    v43(v13, v42);
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    if (dispatch thunk of Collection.distance(from:to:)() >= 3)
    {
      LayoutSubviews.subscript.getter();
      static UnitPoint.topLeading.getter();
      char v56 = 0;
      char v55 = 0;
      LayoutSubview.place(at:anchor:proposal:)();
      v43(v13, v42);
    }
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    if (dispatch thunk of Collection.distance(from:to:)() > 3)
    {
      LayoutSubviews.subscript.getter();
      static UnitPoint.topLeading.getter();
      char v56 = 0;
      char v55 = 0;
      LayoutSubview.place(at:anchor:proposal:)();
      v43(v13, v42);
    }
    return (*(uint64_t (**)(void, uint64_t))&v49)(*(void *)&v50, v41);
  }
  else
  {
    static WOLog.dataLink.getter();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Received less than 2 subviews in the Graphics Metrics View Layout", v21, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t getEnumTagSinglePayload for ActivityTrendType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActivityTrendType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005F20A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

id sub_1005F20F4(void *a1, char a2)
{
  switch(a2)
  {
    case 1:
      id v2 = [a1 userActiveEnergyBurnedUnit];
      goto LABEL_9;
    case 2:
      id v2 = [a1 userDistanceHKUnitForDistanceType:1];
      goto LABEL_9;
    case 3:
    case 7:
      id v3 = [a1 userDistanceWalkingRunningHKUnit];
      id v4 = [self hourUnit];
      id v5 = [v3 unitDividedByUnit:v4];

      return v5;
    case 4:
      BOOL v7 = self;
      id v8 = [v7 literUnitWithMetricPrefix:4];
      id v9 = [v7 gramUnitWithMetricPrefix:9];
      id v10 = [v7 minuteUnit];
      id v11 = [v8 unitDividedByUnit:v9];
      id v12 = [v11 unitDividedByUnit:v10];

      return v12;
    case 5:
    case 6:
      id v2 = [self minuteUnit];
      goto LABEL_9;
    default:
      id v2 = [self countUnit];
LABEL_9:
      return v2;
  }
}

id sub_1005F2334(char a1)
{
  switch(a1)
  {
    case 1:
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.0, 0.28631, 1.0).super.isa;
      Class v11 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.19608, 0.52941, 1.0).super.isa;
      id v12 = (objc_class *)type metadata accessor for GradientColors();
      uint64_t v13 = (char *)objc_allocWithZone(v12);
      *(void *)&v13[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = isa;
      *(void *)&v13[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v11;
      v68.receiver = v13;
      v68.super_class = v12;
      id v14 = [super init];
      Class v15 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.066667, 0.3098, 1.0).super.isa;
      BOOL v7 = (objc_class *)type metadata accessor for MetricColors();
      uint64_t v16 = (char *)objc_allocWithZone(v7);
      *(void *)&v16[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v14;
      *(void *)&v16[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v15;
      uint64_t v67 = v16;
      id v9 = (objc_super *)&v67;
      break;
    case 2:
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      Class v17 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.60784, 1.0, 1.0).super.isa;
      Class v18 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.81569, 1.0, 1.0).super.isa;
      uint64_t v19 = (objc_class *)type metadata accessor for GradientColors();
      os_log_type_t v20 = (char *)objc_allocWithZone(v19);
      *(void *)&v20[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v17;
      *(void *)&v20[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v18;
      v74.receiver = v20;
      v74.super_class = v19;
      id v21 = [super init];
      Class v22 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.7451, 1.0, 1.0).super.isa;
      BOOL v7 = (objc_class *)type metadata accessor for MetricColors();
      uint64_t v23 = (char *)objc_allocWithZone(v7);
      *(void *)&v23[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v21;
      *(void *)&v23[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v22;
      uint64_t v73 = v23;
      id v9 = (objc_super *)&v73;
      break;
    case 3:
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      Class v24 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.59216, 0.4902, 0.88235, 1.0).super.isa;
      Class v25 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.76078, 0.63137, 1.0, 1.0).super.isa;
      double v26 = (objc_class *)type metadata accessor for GradientColors();
      id v27 = (char *)objc_allocWithZone(v26);
      *(void *)&v27[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v24;
      *(void *)&v27[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v25;
      v82.receiver = v27;
      v82.super_class = v26;
      id v28 = [super init];
      Class v29 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.63529, 0.5451, 0.88235, 1.0).super.isa;
      BOOL v7 = (objc_class *)type metadata accessor for MetricColors();
      id v30 = (char *)objc_allocWithZone(v7);
      *(void *)&v30[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v28;
      *(void *)&v30[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v29;
      uint64_t v81 = v30;
      id v9 = (objc_super *)&v81;
      break;
    case 4:
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      Class v31 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.43922, 0.22353, 1.0).super.isa;
      Class v32 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.61961, 0.12549, 1.0).super.isa;
      id v33 = (objc_class *)type metadata accessor for GradientColors();
      id v34 = (char *)objc_allocWithZone(v33);
      *(void *)&v34[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v31;
      *(void *)&v34[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v32;
      v78.receiver = v34;
      v78.super_class = v33;
      id v35 = [super init];
      Class v36 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.43922, 0.22353, 1.0).super.isa;
      BOOL v7 = (objc_class *)type metadata accessor for MetricColors();
      double v37 = (char *)objc_allocWithZone(v7);
      *(void *)&v37[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v35;
      *(void *)&v37[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v36;
      uint64_t v77 = v37;
      id v9 = (objc_super *)&v77;
      break;
    case 5:
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      Class v38 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.6, 1.0, 0.0, 1.0).super.isa;
      Class v39 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.84706, 1.0, 0.0, 1.0).super.isa;
      uint64_t v40 = (objc_class *)type metadata accessor for GradientColors();
      uint64_t v41 = (char *)objc_allocWithZone(v40);
      *(void *)&v41[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v38;
      *(void *)&v41[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v39;
      v70.receiver = v41;
      v70.super_class = v40;
      id v42 = [super init];
      Class v43 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.65068, 1.0, 0.0, 1.0).super.isa;
      BOOL v7 = (objc_class *)type metadata accessor for MetricColors();
      uint64_t v44 = (char *)objc_allocWithZone(v7);
      *(void *)&v44[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v42;
      *(void *)&v44[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v43;
      uint64_t v69 = v44;
      id v9 = (objc_super *)&v69;
      break;
    case 6:
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      Class v45 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.96078, 0.78824, 0.094118, 1.0).super.isa;
      Class v46 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.96078, 0.33725, 1.0).super.isa;
      double v47 = (objc_class *)type metadata accessor for GradientColors();
      double v48 = (char *)objc_allocWithZone(v47);
      *(void *)&v48[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v45;
      *(void *)&v48[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v46;
      v80.receiver = v48;
      v80.super_class = v47;
      [super init];
      Class v50 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.98039, 0.90196, 0.12549, 1.0).super.isa;
      BOOL v7 = (objc_class *)type metadata accessor for MetricColors();
      uint64_t v51 = (char *)objc_allocWithZone(v7);
      *(void *)&v51[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v49;
      *(void *)&v51[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v50;
      uint64_t v79 = v51;
      id v9 = (objc_super *)&v79;
      break;
    case 7:
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      Class v52 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.86275, 0.4902, 0.88235, 1.0).super.isa;
      Class v53 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.92157, 0.58824, 0.76471, 1.0).super.isa;
      uint64_t v54 = (objc_class *)type metadata accessor for GradientColors();
      char v55 = (char *)objc_allocWithZone(v54);
      *(void *)&v55[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v52;
      *(void *)&v55[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v53;
      v84.receiver = v55;
      v84.super_class = v54;
      id v56 = [super init];
      Class v57 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.86275, 0.54902, 0.88235, 1.0).super.isa;
      BOOL v7 = (objc_class *)type metadata accessor for MetricColors();
      uint64_t v58 = (char *)objc_allocWithZone(v7);
      *(void *)&v58[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v56;
      *(void *)&v58[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v57;
      uint64_t v83 = v58;
      id v9 = (objc_super *)&v83;
      break;
    case 8:
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      Class v59 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.58039, 0.29804, 1.0).super.isa;
      Class v60 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.94118, 0.73725, 0.0, 1.0).super.isa;
      uint64_t v61 = (objc_class *)type metadata accessor for GradientColors();
      uint64_t v62 = (char *)objc_allocWithZone(v61);
      *(void *)&v62[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v59;
      *(void *)&v62[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v60;
      v76.receiver = v62;
      v76.super_class = v61;
      id v63 = [super init];
      Class v64 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.68235, 0.082353, 1.0).super.isa;
      BOOL v7 = (objc_class *)type metadata accessor for MetricColors();
      uint64_t v65 = (char *)objc_allocWithZone(v7);
      *(void *)&v65[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v63;
      *(void *)&v65[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v64;
      v75.receiver = v65;
      id v9 = &v75;
      break;
    default:
      sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
      Class v1 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.84706, 1.0, 1.0).super.isa;
      Class v2 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 1.0, 0.62727, 1.0).super.isa;
      id v3 = (objc_class *)type metadata accessor for GradientColors();
      id v4 = (char *)objc_allocWithZone(v3);
      *(void *)&v4[OBJC_IVAR____TtC10FitnessApp14GradientColors_dark] = v1;
      *(void *)&v4[OBJC_IVAR____TtC10FitnessApp14GradientColors_light] = v2;
      v72.receiver = v4;
      v72.super_class = v3;
      id v5 = [super init];
      Class v6 = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 1.0, 0.96471, 1.0).super.isa;
      BOOL v7 = (objc_class *)type metadata accessor for MetricColors();
      id v8 = (char *)objc_allocWithZone(v7);
      *(void *)&v8[OBJC_IVAR____TtC10FitnessApp12MetricColors_gradient] = v5;
      *(void *)&v8[OBJC_IVAR____TtC10FitnessApp12MetricColors_text] = v6;
      uint64_t v71 = v8;
      id v9 = (objc_super *)&v71;
      break;
  }
  v9->super_class = v7;
  return [(objc_super *)v9 init];
}

double sub_1005F2D50(void *a1, char a2, double a3)
{
  uint64_t v6 = a2;
  id v7 = sub_10008CC68(byte_10076F40E[a2]);
  id v8 = [self quantityWithUnit:v7 doubleValue:a3];

  id v9 = sub_1005F20F4(a1, a2);
  [v8 doubleValueForUnit:v9];
  double v11 = v10;

  return round(v11 * dbl_10076F418[v6]) / dbl_10076F418[v6];
}

uint64_t sub_1005F2E20(uint64_t a1, char a2)
{
  uint64_t v2 = 0;
  switch(a2)
  {
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
      return v2;
    default:
      id v3 = [self mainBundle];
      NSString v4 = String._bridgeToObjectiveC()();
      id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

      uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
  }
  return v2;
}

uint64_t sub_1005F2FC0(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      id v2 = [self sharedBehavior];
      if (v2) {
        goto LABEL_8;
      }
      goto LABEL_12;
    case 3:
    case 4:
    case 7:
      id v3 = [self mainBundle];
      goto LABEL_9;
    case 8:
      id v2 = [self sharedBehavior];
      if (v2) {
        goto LABEL_8;
      }
      goto LABEL_11;
    default:
      id v2 = [self sharedBehavior];
      if (!v2)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x1005F32F4);
      }
LABEL_8:
      NSString v4 = v2;
      [v2 isStandalonePhoneFitnessMode];

      id v3 = [self mainBundle];
LABEL_9:
      NSString v5 = String._bridgeToObjectiveC()();
      id v6 = [v3 localizedStringForKey:v5 value:0 table:0];

      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      return v7;
  }
}

uint64_t sub_1005F333C(int a1, id a2, uint64_t a3, char a4)
{
  id v7 = [a2 userActiveEnergyBurnedUnit];
  id v8 = [self kilocalorieUnit];
  sub_10007E2D8(0, (unint64_t *)&qword_100954740);
  static NSObject.== infix(_:_:)();

  [a2 userDistanceUnitForDistanceType:1];
  switch(a4)
  {
    case 8:
      id v10 = [self mainBundle];
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(unsigned char *)(a3 + 24) != 1)
      {
        id v13 = [self mainBundle];
        NSString v14 = String._bridgeToObjectiveC()();
        id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        swift_bridgeObjectRetain();
        uint64_t v20 = String.init<A>(_:)();
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = v20;
      }
      break;
    default:
      id v9 = [self mainBundle];
      NSString v16 = String._bridgeToObjectiveC()();
      id v17 = [v9 localizedStringForKey:v16 value:0 table:0];

      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
  }
  return v18;
}

unint64_t sub_1005F3D08@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1005F3E54(*a1);
  *a2 = result;
  return result;
}

void sub_1005F3D34(void *a1@<X8>)
{
  *a1 = &off_1008AF420;
}

uint64_t sub_1005F3D44()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1005F3DA4()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1005F3DF8()
{
  unint64_t result = qword_100964D08;
  if (!qword_100964D08)
  {
    sub_1000A1370(&qword_100964D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964D08);
  }
  return result;
}

unint64_t sub_1005F3E54(unint64_t result)
{
  if (result >= 9) {
    return 9;
  }
  return result;
}

unint64_t sub_1005F3E64()
{
  unint64_t result = qword_100964D20;
  if (!qword_100964D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964D20);
  }
  return result;
}

uint64_t sub_1005F3EB8(void *a1, char a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v4 - 8);
  id v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = 0xD000000000000046;
  unint64_t v12 = 0x80000001007D0B80;
  switch(a2)
  {
    case 1:
      goto LABEL_12;
    case 2:
      uint64_t v11 = 0xD00000000000004ALL;
      NSString v14 = "x-apple-health://SampleType/HKQuantityTypeIdentifierDistanceWalkingRunning";
      goto LABEL_9;
    case 3:
      uint64_t v11 = 0xD000000000000040;
      NSString v14 = "x-apple-health://SampleType/HKQuantityTypeIdentifierWalkingSpeed";
      goto LABEL_9;
    case 4:
      uint64_t v11 = 0xD00000000000003ALL;
      NSString v14 = "x-apple-health://SampleType/HKQuantityTypeIdentifierVO2Max";
      goto LABEL_9;
    case 5:
      uint64_t v11 = 0xD000000000000045;
      NSString v14 = "x-apple-health://SampleType/HKQuantityTypeIdentifierAppleExerciseTime";
      goto LABEL_9;
    case 6:
      id v13 = "x-apple-health://SampleType/HKQuantityTypeIdentifierAppleStandTime";
      goto LABEL_11;
    case 7:
      uint64_t v11 = 0xD000000000000040;
      NSString v14 = "x-apple-health://SampleType/HKQuantityTypeIdentifierRunningSpeed";
LABEL_9:
      unint64_t v12 = (unint64_t)(v14 - 32) | 0x8000000000000000;
      goto LABEL_12;
    case 8:
      id v13 = "x-apple-health://SampleType/HKQuantityTypeIdentifierFlightsClimbed";
      goto LABEL_11;
    default:
      id v13 = "x-apple-health://SampleType/HKCategoryTypeIdentifierAppleStandHour";
LABEL_11:
      unint64_t v12 = (unint64_t)(v13 - 32) | 0x8000000000000000;
      uint64_t v11 = 0xD000000000000042;
LABEL_12:
      URL.init(string:)();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_1001C8AF0((uint64_t)v6);
        os_log_type_t v15 = static os_log_type_t.fault.getter();
        NSString v16 = (void *)HKLogActivity;
        os_log_type_t v17 = v15;
        if (os_log_type_enabled(HKLogActivity, v15))
        {
          uint64_t v18 = v16;
          swift_bridgeObjectRetain();
          uint64_t v19 = swift_slowAlloc();
          uint64_t v41 = swift_slowAlloc();
          *(_DWORD *)uint64_t v19 = 136315394;
          uint64_t v40 = sub_10008F1F4(0xD000000000000026, 0x80000001007D0910, &v41);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v19 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_10008F1F4(v11, v12, &v41);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v18, v17, "%s unable to create health URL from %s", (uint8_t *)v19, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        return 0;
      }
      else
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
        sub_1000AFA94((uint64_t *)&unk_10095B850);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_100756B20;
        id v21 = objc_allocWithZone((Class)NSAttributedString);
        NSString v22 = String._bridgeToObjectiveC()();
        id v23 = [v21 initWithString:v22];

        *(void *)(v20 + 32) = v23;
        id v24 = [self mainBundle];
        NSString v25 = String._bridgeToObjectiveC()();
        id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000AFA94((uint64_t *)&unk_10095BF70);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10074E640;
        *(void *)(inited + 32) = NSFontAttributeName;
        uint64_t v28 = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
        *(void *)(inited + 40) = a1;
        *(void *)(inited + 64) = v28;
        *(void *)(inited + 72) = NSLinkAttributeName;
        *(void *)(inited + 104) = v7;
        Class v29 = sub_1000B1710((uint64_t *)(inited + 80));
        (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v8 + 16))(v29, v10, v7);
        id v30 = a1;
        Class v31 = NSLinkAttributeName;
        Class v32 = NSFontAttributeName;
        sub_1000DFC2C(inited);
        id v33 = objc_allocWithZone((Class)NSAttributedString);
        swift_bridgeObjectRetain();
        NSString v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1001DCBD0();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v36 = [v33 initWithString:v34 attributes:isa];
        swift_bridgeObjectRelease();

        *(void *)(v20 + 40) = v36;
        uint64_t v41 = v20;
        specialized Array._endMutation()();
        uint64_t v37 = v41;
        (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
      }
      return v37;
  }
}

uint64_t sub_1005F44C0(uint64_t a1, uint64_t a2)
{
  uint64_t v155 = a2;
  uint64_t v133 = type metadata accessor for Calendar.Component();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v130 = (char *)v123 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for Calendar();
  uint64_t v129 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v128 = (char *)v123 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle();
  uint64_t v145 = *(void *)(v4 - 8);
  uint64_t v146 = v4;
  __chkstk_darwin(v4);
  v142 = (char *)v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date.FormatStyle.Symbol.Hour();
  uint64_t v143 = *(void *)(v6 - 8);
  uint64_t v144 = v6;
  __chkstk_darwin(v6);
  uint64_t v140 = (char *)v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date.FormatStyle();
  uint64_t v147 = *(void *)(v8 - 8);
  uint64_t v148 = v8;
  __chkstk_darwin(v8);
  uint64_t v139 = (char *)v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v141 = (char *)v123 - v11;
  uint64_t v138 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v135 = (char *)v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v134 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  NSString v14 = (char *)v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for Date();
  uint64_t v151 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  NSString v16 = (char *)v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v150 = (char *)v123 - v18;
  __chkstk_darwin(v19);
  uint64_t v149 = (char *)v123 - v20;
  __chkstk_darwin(v21);
  uint64_t v153 = (char *)v123 - v22;
  uint64_t Language = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState();
  __chkstk_darwin(Language);
  NSString v25 = (char *)v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  id v156 = (char *)v123 - v27;
  uint64_t v28 = sub_1000AFA94(&qword_100963B50);
  __chkstk_darwin(v28 - 8);
  id v30 = (char *)v123 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Band = type metadata accessor for TrainingLoadBand();
  uint64_t v32 = *(void *)(Band - 8);
  __chkstk_darwin(Band);
  NSString v34 = (char *)v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)v123 - v36;
  TrainingLoadViewModel.trainingLoadBandForToday.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, Band) == 1)
  {
    sub_10008DB18((uint64_t)v30, &qword_100963B50);
    return sub_1005F7C08();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v37, v30, Band);
    Class v39 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    id v152 = v37;
    v39(v34, v37, Band);
    uint64_t v126 = v32;
    uint64_t v40 = *(uint64_t (**)(char *, uint64_t))(v32 + 88);
    uint64_t v127 = Band;
    int v41 = v40(v34, Band);
    if (v41 == enum case for TrainingLoadBand.wellBelow(_:))
    {
      id v42 = (void *)0xEA0000000000574FLL;
      uint64_t v125 = 0x4C45425F4C4C4557;
      uint64_t v43 = (uint64_t)v152;
      uint64_t v44 = (uint64_t)v156;
    }
    else
    {
      uint64_t v43 = (uint64_t)v152;
      uint64_t v44 = (uint64_t)v156;
      if (v41 == enum case for TrainingLoadBand.below(_:))
      {
        id v42 = (void *)0xE500000000000000;
        uint64_t v45 = 0x574F4C4542;
      }
      else if (v41 == enum case for TrainingLoadBand.near(_:))
      {
        id v42 = (void *)0xE600000000000000;
        uint64_t v45 = 0x594441455453;
      }
      else if (v41 == enum case for TrainingLoadBand.above(_:))
      {
        id v42 = (void *)0xE500000000000000;
        uint64_t v45 = 0x45564F4241;
      }
      else
      {
        if (v41 != enum case for TrainingLoadBand.wellAbove(_:))
        {
          v157[0] = 0;
          v157[1] = 0xE000000000000000;
          _StringGuts.grow(_:)(21);
          v121._object = (void *)0x80000001007D1200;
          v121._countAndFlagsBits = 0xD000000000000012;
          String.append(_:)(v121);
          _print_unlocked<A, B>(_:_:)();
          v122._countAndFlagsBits = 46;
          v122._object = (void *)0xE100000000000000;
          String.append(_:)(v122);
          _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          JUMPOUT(0x1005F5878);
        }
        id v42 = (void *)0xEA00000000004556;
        uint64_t v45 = 0x4F42415F4C4C4557;
      }
      uint64_t v125 = v45;
    }
    sub_1005F58DC(v155, v44);
    uint64_t v46 = sub_1005F7430();
    LODWORD(v155) = v47;
    uint64_t v48 = sub_1005F7598(v43, v44);
    Class v50 = v49;
    sub_1005F807C(v44, (uint64_t)v25);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v124 = v46;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v80 = v151;
        uint64_t v81 = v154;
        (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v150, v25, v154);
        v157[0] = 0;
        v157[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(28);
        swift_bridgeObjectRelease();
        v157[0] = 0xD000000000000017;
        v157[1] = 0x80000001007D1280;
        v82._countAndFlagsBits = v125;
        v82._object = v42;
        String.append(_:)(v82);
        swift_bridgeObjectRelease();
        v83._countAndFlagsBits = 95;
        v83._object = (void *)0xE100000000000000;
        String.append(_:)(v83);
        v84._countAndFlagsBits = v48;
        v84._object = v50;
        String.append(_:)(v84);
        swift_bridgeObjectRelease();
        id v85 = [objc_allocWithZone((Class)NSRelativeDateTimeFormatter) init];
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        Date.init()();
        Class v87 = Date._bridgeToObjectiveC()().super.isa;
        uint64_t v88 = *(void (**)(char *, uint64_t))(v80 + 8);
        v88(v16, v81);
        id v89 = [v85 localizedStringForDate:isa relativeToDate:v87];

        uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v92 = v91;

        id v93 = [self mainBundle];
        NSString v94 = String._bridgeToObjectiveC()();
        id v95 = [v93 localizedStringForKey:v94 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        swift_bridgeObjectRelease();

        uint64_t v43 = (uint64_t)v152;
        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v96 = swift_allocObject();
        *(_OWORD *)(v96 + 16) = xmmword_1007509E0;
        *(void *)(v96 + 56) = &type metadata for String;
        *(void *)(v96 + 64) = sub_1000AA64C();
        *(void *)(v96 + 32) = v90;
        *(void *)(v96 + 40) = v92;
        uint64_t v38 = String.init(format:_:)();
        unint64_t v74 = v97;

        uint64_t v44 = (uint64_t)v156;
        swift_bridgeObjectRelease();
        v88(v150, v154);
        goto LABEL_22;
      case 2:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v38 = 0;
        unint64_t v74 = 0xE000000000000000;
        goto LABEL_22;
      case 3:
        v157[0] = 0;
        v157[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(19);
        swift_bridgeObjectRelease();
        strcpy((char *)v157, "WORKOUT_TODAY_");
        HIBYTE(v157[1]) = -18;
        v75._countAndFlagsBits = v125;
        v75._object = v42;
        String.append(_:)(v75);
        swift_bridgeObjectRelease();
        v76._countAndFlagsBits = 95;
        v76._object = (void *)0xE100000000000000;
        String.append(_:)(v76);
        v77._countAndFlagsBits = v48;
        v77._object = v50;
        String.append(_:)(v77);
        swift_bridgeObjectRelease();
        id v71 = [self mainBundle];
        NSString v72 = String._bridgeToObjectiveC()();
        id v73 = [v71 localizedStringForKey:v72 value:0 table:0];
        goto LABEL_20;
      case 4:
        v157[0] = 0;
        v157[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(23);
        swift_bridgeObjectRelease();
        v157[0] = 0xD000000000000012;
        v157[1] = 0x80000001007D1220;
        v68._countAndFlagsBits = v125;
        v68._object = v42;
        String.append(_:)(v68);
        swift_bridgeObjectRelease();
        v69._countAndFlagsBits = 95;
        v69._object = (void *)0xE100000000000000;
        String.append(_:)(v69);
        v70._countAndFlagsBits = v48;
        v70._object = v50;
        String.append(_:)(v70);
        swift_bridgeObjectRelease();
        id v71 = [self mainBundle];
        NSString v72 = String._bridgeToObjectiveC()();
        id v73 = [v71 localizedStringForKey:v72 value:0 table:0];
LABEL_20:
        id v78 = v73;

        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v74 = v79;

        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v98 = v127;
        uint64_t v99 = v126;
        break;
      default:
        uint64_t v52 = v151;
        (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v153, v25, v154);
        v157[0] = 0;
        v157[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(23);
        swift_bridgeObjectRelease();
        v157[0] = 0xD000000000000012;
        v157[1] = 0x80000001007D12A0;
        v53._countAndFlagsBits = v125;
        v53._object = v42;
        String.append(_:)(v53);
        swift_bridgeObjectRelease();
        v54._countAndFlagsBits = 95;
        v54._object = (void *)0xE100000000000000;
        String.append(_:)(v54);
        v55._countAndFlagsBits = v48;
        v55._object = v50;
        String.append(_:)(v55);
        swift_bridgeObjectRelease();
        v123[0] = v157[0];
        v123[1] = v157[1];
        static Date.FormatStyle.DateStyle.omitted.getter();
        id v56 = v135;
        static Date.FormatStyle.TimeStyle.shortened.getter();
        uint64_t v150 = (char *)Date.formatted(date:time:)();
        uint64_t v125 = v57;
        (*(void (**)(char *, uint64_t))(v137 + 8))(v56, v138);
        (*(void (**)(char *, uint64_t))(v134 + 8))(v14, v136);
        uint64_t v58 = v139;
        static FormatStyle<>.dateTime.getter();
        Class v59 = v142;
        static Date.FormatStyle.Symbol.Hour.AMPMStyle.omitted.getter();
        Class v60 = v140;
        static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)();
        (*(void (**)(char *, uint64_t))(v145 + 8))(v59, v146);
        uint64_t v61 = v141;
        Date.FormatStyle.hour(_:)();
        (*(void (**)(char *, uint64_t))(v143 + 8))(v60, v144);
        uint64_t v62 = v148;
        id v63 = *(void (**)(char *, uint64_t))(v147 + 8);
        v63(v58, v148);
        sub_1005F8144(&qword_100953118, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
        Date.formatted<A>(_:)();
        v63(v61, v62);
        id v64 = [objc_allocWithZone((Class)NSNumberFormatter) init];
        NSString v65 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v66 = [v64 numberFromString:v65];

        if (v66)
        {
          uint64_t v67 = (char *)[v66 integerValue];
        }
        else
        {
          uint64_t v67 = 0;
        }
        uint64_t v99 = v126;
        uint64_t v107 = v149;
        uint64_t v108 = v154;
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v149, v153, v154);
        uint64_t v98 = v127;
        if (v66)
        {
          uint64_t v109 = *(void (**)(char *, uint64_t))(v52 + 8);
          v109(v107, v108);
          uint64_t v149 = v67;
        }
        else
        {
          uint64_t v110 = v128;
          static Calendar.current.getter();
          uint64_t v111 = v132;
          uint64_t v112 = v130;
          CGRect v113 = v107;
          uint64_t v114 = v133;
          (*(void (**)(char *, void, uint64_t))(v132 + 104))(v130, enum case for Calendar.Component.hour(_:), v133);
          uint64_t v149 = (char *)Calendar.component(_:from:)();
          (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v114);
          (*(void (**)(char *, uint64_t))(v129 + 8))(v110, v131);
          uint64_t v109 = *(void (**)(char *, uint64_t))(v52 + 8);
          v109(v113, v108);
        }
        id v115 = [self mainBundle];
        NSString v116 = String._bridgeToObjectiveC()();
        id v117 = [v115 localizedStringForKey:v116 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        swift_bridgeObjectRelease();

        sub_1000AFA94((uint64_t *)&unk_1009546D0);
        uint64_t v118 = swift_allocObject();
        *(_OWORD *)(v118 + 16) = xmmword_10074E640;
        *(void *)(v118 + 56) = &type metadata for Int;
        *(void *)(v118 + 64) = &protocol witness table for Int;
        *(void *)(v118 + 32) = v149;
        *(void *)(v118 + 96) = &type metadata for String;
        *(void *)(v118 + 104) = sub_1000AA64C();
        uint64_t v119 = v125;
        *(void *)(v118 + 72) = v150;
        *(void *)(v118 + 80) = v119;
        uint64_t v38 = String.init(format:_:)();
        unint64_t v74 = v120;
        swift_bridgeObjectRelease();
        v109(v153, v108);
        uint64_t v43 = (uint64_t)v152;
        uint64_t v44 = (uint64_t)v156;
        break;
    }
    if (!(_BYTE)v155 || v155 == 1)
    {
      id v100 = [self mainBundle];
      NSString v101 = String._bridgeToObjectiveC()();
      id v102 = [v100 localizedStringForKey:v101 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000AFA94((uint64_t *)&unk_1009546D0);
      uint64_t v103 = swift_allocObject();
      *(_OWORD *)(v103 + 16) = xmmword_10074E640;
      *(void *)(v103 + 56) = &type metadata for String;
      unint64_t v104 = sub_1000AA64C();
      *(void *)(v103 + 32) = v38;
      *(void *)(v103 + 40) = v74;
      *(void *)(v103 + 96) = &type metadata for Int;
      *(void *)(v103 + 104) = &protocol witness table for Int;
      uint64_t v105 = v124;
      *(void *)(v103 + 64) = v104;
      *(void *)(v103 + 72) = v105;
      uint64_t v38 = String.init(format:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1005F80E0(v44);
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v43, v98);
  }
  return v38;
}

uint64_t type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState()
{
  uint64_t result = qword_100964DC8;
  if (!qword_100964DC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005F58DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  Class v39 = (char *)a1;
  uint64_t v40 = a2;
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for Calendar();
  uint64_t v6 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v9 - 8);
  uint64_t v37 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v36 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v35 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v35 - v21;
  Date.init()();
  static Calendar.current.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Calendar.Component.day(_:), v2);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v38);
  sub_1005F67E0((uint64_t)v39);
  if (!v23)
  {
    sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_10095B890);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
    goto LABEL_12;
  }
  Class v39 = v13;
  id v24 = v23;
  id v25 = [v24 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v25) = Date.isSameDay(as:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v19, v14);
  if ((v25 & 1) == 0)
  {
    uint64_t v27 = (uint64_t)v39;
    uint64_t v28 = (void (*)(void, void, void))v37;
    sub_1000AEF2C((uint64_t)v39, (uint64_t)v37, (uint64_t *)&unk_10095B890);
    if ((*(unsigned int (**)(void, uint64_t, uint64_t))(v15 + 48))(v28, 1, v14) == 1)
    {
      sub_10008DB18((uint64_t)v28, (uint64_t *)&unk_10095B890);
      uint64_t v29 = v40;
    }
    else
    {
      id v30 = v36;
      uint64_t v37 = *(void **)(v15 + 32);
      uint64_t v38 = v15 + 32;
      ((void (*)(char *, void, uint64_t))v37)(v36, v28, v14);
      id v31 = [v24 startDate];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v31) = Date.isSameDay(as:)();
      v26(v19, v14);
      if (v31)
      {
        id v32 = [v24 startDate];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v26(v30, v14);
        sub_10008DB18((uint64_t)v39, (uint64_t *)&unk_10095B890);
        v26(v22, v14);
        ((void (*)(uint64_t, char *, uint64_t))v37)(v40, v19, v14);
        goto LABEL_12;
      }
      v26(v30, v14);
      uint64_t v27 = (uint64_t)v39;
      uint64_t v29 = v40;
    }
    id v33 = [v24 startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10008DB18(v27, (uint64_t *)&unk_10095B890);
    v26(v22, v14);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v29, v19, v14);
    goto LABEL_12;
  }

  sub_10008DB18((uint64_t)v39, (uint64_t *)&unk_10095B890);
  v26(v22, v14);
LABEL_12:
  type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1005F5E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v28 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t Language = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState();
  __chkstk_darwin(Language);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = sub_1000AFA94(&qword_100964D30);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v18[*(int *)(v19 + 56)];
  sub_1005F807C(a1, (uint64_t)v18);
  sub_1005F807C(a2, v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1005F807C((uint64_t)v18, (uint64_t)v12);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_6;
      }
      uint64_t v21 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v6, v20, v4);
      char v22 = static Date.== infix(_:_:)();
      id v23 = *(void (**)(char *, uint64_t))(v21 + 8);
      v23(v6, v4);
      v23(v12, v4);
      goto LABEL_14;
    case 2u:
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_8;
      }
      goto LABEL_12;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_12;
      }
      goto LABEL_8;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_12;
      }
LABEL_8:
      sub_1005F80E0((uint64_t)v18);
      char v22 = 1;
      break;
    default:
      sub_1005F807C((uint64_t)v18, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v12 = v15;
LABEL_6:
        (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v4);
LABEL_12:
        sub_10008DB18((uint64_t)v18, &qword_100964D30);
        char v22 = 0;
      }
      else
      {
        uint64_t v24 = v28;
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v9, v20, v4);
        char v22 = static Date.== infix(_:_:)();
        id v25 = *(void (**)(char *, uint64_t))(v24 + 8);
        v25(v9, v4);
        v25(v15, v4);
LABEL_14:
        sub_1005F80E0((uint64_t)v18);
      }
      break;
  }
  return v22 & 1;
}

uint64_t sub_1005F6230()
{
  uint64_t v0 = type metadata accessor for LocalizationFeature();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t BaselineComparison = type metadata accessor for TrainingLoadBaselineComparison();
  uint64_t v4 = *(void *)(BaselineComparison - 8);
  __chkstk_darwin(BaselineComparison);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100964D38);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100964D40);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - v14;
  TrainingLoadViewModel.trainingLoadDaySummaryForToday.getter();
  uint64_t SampleDaySummary = type metadata accessor for TrainingLoadSampleDaySummary();
  uint64_t v17 = *(void *)(SampleDaySummary - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, SampleDaySummary) == 1)
  {
    sub_10008DB18((uint64_t)v9, &qword_100964D38);
    uint64_t ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(ChronicBaseline - 8) + 56))(v15, 1, 1, ChronicBaseline);
  }
  else
  {
    TrainingLoadSampleDaySummary.trainingLoad.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, SampleDaySummary);
    TrainingLoadBaselineComparison.chronicBaseline.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, BaselineComparison);
    uint64_t ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(ChronicBaseline - 8) + 56))(v15, 0, 1, ChronicBaseline);
  }
  sub_1000AEF2C((uint64_t)v15, (uint64_t)v12, &qword_100964D40);
  type metadata accessor for TrainingLoadChronicBaseline();
  uint64_t v19 = *(void *)(ChronicBaseline - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, ChronicBaseline) == 1)
  {
    sub_10008DB18((uint64_t)v12, &qword_100964D40);
LABEL_10:
    id v29 = [self mainBundle];
    NSString v30 = String._bridgeToObjectiveC()();
    id v31 = [v29 localizedStringForKey:v30 value:0 table:0];

    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_11;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v12, ChronicBaseline) != enum case for TrainingLoadChronicBaseline.insufficientData(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, ChronicBaseline);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v19 + 96))(v12, ChronicBaseline);
  uint64_t v20 = sub_1000AFA94(&qword_100964D50);
  uint64_t v21 = *(void *)&v12[*(int *)(v20 + 48)];
  uint64_t v22 = *(void *)&v12[*(int *)(v20 + 64)];
  uint64_t result = sub_10008DB18((uint64_t)v12, &qword_100964D48);
  uint64_t v24 = v22 - v21;
  if (!__OFSUB__(v22, v21))
  {
    uint64_t v26 = v32;
    uint64_t v25 = v33;
    (*(void (**)(char *, void, uint64_t))(v32 + 104))(v2, enum case for LocalizationFeature.workout(_:), v33);
    static Localization.workoutUILocalizedString(_:feature:)();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v2, v25);
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1007509E0;
    *(void *)(v27 + 56) = &type metadata for Int;
    *(void *)(v27 + 64) = &protocol witness table for Int;
    *(void *)(v27 + 32) = v24;
    uint64_t v28 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    sub_10008DB18((uint64_t)v15, &qword_100964D40);
    return v28;
  }
  __break(1u);
  return result;
}

void sub_1005F67E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EffortUtilities.WorkoutAndActivityKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v47 - v7;
  swift_getKeyPath();
  uint64_t v9 = a1 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider___observationRegistrar;
  v61[0] = a1;
  uint64_t v55 = sub_1005F8144(&qword_10094D010, (void (*)(uint64_t))type metadata accessor for BalanceDataProvider);
  uint64_t v56 = v9;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__historyListForTheWeek);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(a1 + OBJC_IVAR____TtC10FitnessApp19BalanceDataProvider__workoutsWithEffortQuantities);
    uint64_t v13 = v10 + 32;
    swift_bridgeObjectRetain();
    uint64_t v57 = v12;
    swift_beginAccess();
    unint64_t v14 = 0;
    Swift::String v53 = v8;
    Swift::String v54 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v50 = v11;
    uint64_t v49 = v10 + 32;
    uint64_t v48 = v5;
    uint64_t v51 = v10;
    while (1)
    {
      if (v14 >= *(void *)(v10 + 16))
      {
        __break(1u);
        return;
      }
      sub_10008E75C(v13 + 40 * v14, (uint64_t)v61);
      sub_1000AFA94((uint64_t *)&unk_100955630);
      sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_7;
      }
      uint64_t v15 = v5;
      id v16 = v60;
      if ([v60 workoutActivityType] != (id)82) {
        break;
      }
      id v17 = [v16 workoutActivities];
      sub_10007E2D8(0, (unint64_t *)&qword_100955600);
      unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v19 = v18;
      unint64_t v59 = v18;
      if (!(v18 >> 62))
      {
        uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v20) {
          goto LABEL_13;
        }
        goto LABEL_38;
      }
      swift_bridgeObjectRetain();
      unint64_t v19 = v59;
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v20)
      {
LABEL_13:
        id v58 = v16;
        unint64_t v52 = v14;
        unint64_t v21 = v19 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v22 = 4;
        while (1)
        {
          if (v21) {
            id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v23 = *(id *)(v19 + 8 * v22);
          }
          uint64_t v24 = v23;
          uint64_t v25 = v22 - 3;
          if (__OFADD__(v22 - 4, 1))
          {
            __break(1u);
            goto LABEL_41;
          }
          id v26 = [v23 workoutConfiguration];
          id v27 = [v26 activityType];

          if (v27 == (id)83)
          {
          }
          else
          {
            id v28 = v58;
            id v29 = v24;
            EffortUtilities.WorkoutAndActivityKey.init(workout:activity:)();
            swift_getKeyPath();
            v61[0] = a1;
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            uint64_t v30 = *v57;
            if (*(void *)(*v57 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v31 = sub_1005299A0((uint64_t)v8);
              if (v32)
              {
                uint64_t v33 = a1;
                NSString v34 = *(void **)(*(void *)(v30 + 56) + 8 * v31);
                id v35 = v34;
                swift_bridgeObjectRelease();
                if (v34)
                {
                  [v35 _value];
                  double v37 = v36;

                  uint64_t v38 = v53;
                  (*v54)(v53, v2);
                  a1 = v33;
                  uint64_t v8 = v38;
                  unint64_t v19 = v59;
                  if (v37 != 0.0)
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_41;
                  }
                  goto LABEL_30;
                }

                a1 = v33;
                uint64_t v8 = v53;
              }
              else
              {

                swift_bridgeObjectRelease();
              }
            }
            else
            {
            }
            (*v54)(v8, v2);
          }
          unint64_t v19 = v59;
LABEL_30:
          ++v22;
          if (v25 == v20)
          {

            swift_bridgeObjectRelease();
            uint64_t v5 = v48;
            uint64_t v10 = v51;
            uint64_t v11 = v50;
            uint64_t v13 = v49;
            goto LABEL_6;
          }
        }
      }
LABEL_38:

      swift_bridgeObjectRelease();
      uint64_t v11 = v50;
      uint64_t v13 = v49;
      uint64_t v5 = v15;
      uint64_t v10 = v51;
LABEL_7:
      if (++v14 == v11)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    unint64_t v52 = v14;
    id v58 = v16;
    id v39 = v16;
    uint64_t v5 = v15;
    EffortUtilities.WorkoutAndActivityKey.init(workout:activity:)();
    swift_getKeyPath();
    v61[0] = a1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v40 = *v57;
    uint64_t v10 = v51;
    if (*(void *)(*v57 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v41 = sub_1005299A0((uint64_t)v5);
      if (v42)
      {
        uint64_t v43 = *(void **)(*(void *)(v40 + 56) + 8 * v41);
        id v44 = v43;
        swift_bridgeObjectRelease();
        if (v43)
        {
          [v44 _value];
          double v46 = v45;

          (*v54)(v5, v2);
          if (v46 != 0.0)
          {
LABEL_41:
            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_5;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    (*v54)(v5, v2);
LABEL_5:

    uint64_t v8 = v53;
LABEL_6:
    unint64_t v14 = v52;
    goto LABEL_7;
  }
}

uint64_t sub_1005F6E48()
{
  uint64_t v0 = sub_1000AFA94(&qword_100963B50);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v34[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t Band = type metadata accessor for TrainingLoadBand();
  uint64_t v4 = *(void *)(Band - 8);
  __chkstk_darwin(Band);
  uint64_t v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v9 = &v34[-v8];
  __chkstk_darwin(v10);
  uint64_t v55 = &v34[-v11];
  uint64_t SampleDaySummary = type metadata accessor for TrainingLoadSampleDaySummary();
  uint64_t v13 = *(void *)(SampleDaySummary - 8);
  __chkstk_darwin(SampleDaySummary);
  uint64_t v51 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t View = TrainingLoadViewModel.chronologicalTrainingLoadDaySummaries.getter();
  uint64_t v16 = View;
  uint64_t v17 = *(void *)(View + 16);
  if (v17)
  {
    char v42 = v9;
    double v46 = v6;
    uint64_t v18 = 0;
    int v19 = 0;
    unint64_t v50 = View + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v48 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v49 = v13 + 16;
    unsigned int v54 = enum case for TrainingLoadBand.wellAbove(_:);
    unint64_t v41 = (void (**)(unsigned char *, void, uint64_t))(v4 + 104);
    uint64_t v43 = (void (**)(unsigned char *, uint64_t))(v4 + 8);
    id v44 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32);
    uint64_t v40 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16);
    unsigned int v35 = enum case for TrainingLoadBand.above(_:);
    uint64_t v47 = (void (**)(unsigned char *, uint64_t))(v13 + 8);
    uint64_t v20 = v51;
    uint64_t v38 = v2;
    uint64_t v39 = View;
    uint64_t v45 = SampleDaySummary;
    uint64_t v37 = v17;
    uint64_t v36 = v13;
    while (v17 + v18 <= *(void *)(v16 + 16))
    {
      (*(void (**)(unsigned char *, unint64_t, uint64_t))(v13 + 16))(v20, v50 + *(void *)(v13 + 72) * (v17 + v18 - 1), SampleDaySummary);
      TrainingLoadSampleDaySummary.band.getter();
      if ((*v48)(v2, 1, Band) == 1)
      {
        (*v47)(v20, SampleDaySummary);
        swift_bridgeObjectRelease();
        sub_10008DB18((uint64_t)v2, &qword_100963B50);
        return -v18;
      }
      uint64_t v52 = v18;
      int v53 = v19;
      uint64_t v25 = v55;
      (*v44)(v55, v2, Band);
      id v26 = v42;
      uint64_t v56 = *v41;
      v56(v42, v54, Band);
      sub_1005F8144(&qword_100964D28, (void (*)(uint64_t))&type metadata accessor for TrainingLoadBand);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v28 = v57;
      uint64_t v27 = v58;
      id v29 = *v43;
      (*v43)(v26, Band);
      uint64_t v30 = v46;
      (*v40)(v46, v25, Band);
      if (v27 == v28)
      {
        v29(v30, Band);
        uint64_t v16 = v39;
      }
      else
      {
        v56(v26, v35, Band);
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        uint64_t v32 = v57;
        uint64_t v31 = v58;
        v29(v26, Band);
        v29(v30, Band);
        uint64_t v16 = v39;
        if (v31 != v32)
        {
          v29(v55, Band);
          (*v47)(v51, v45);
          swift_bridgeObjectRelease();
          return -v52;
        }
      }
      v56(v26, v54, Band);
      unint64_t v21 = v55;
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v23 = v57;
      uint64_t v22 = v58;
      v29(v26, Band);
      v29(v21, Band);
      uint64_t v20 = v51;
      uint64_t SampleDaySummary = v45;
      (*v47)(v51, v45);
      int v24 = v53;
      if ((v53 & 0xFE) == 0) {
        int v24 = 1;
      }
      if (v22 == v23) {
        int v19 = 2;
      }
      else {
        int v19 = v24;
      }
      uint64_t v18 = v52 - 1;
      uint64_t v17 = v37;
      uint64_t v2 = v38;
      uint64_t v13 = v36;
      if (!(v37 + v52 - 1)) {
        goto LABEL_18;
      }
    }
    __break(1u);
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1005F7430()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1005F6E48();
  if (result >= 6)
  {
    if (v5) {
      return result;
    }
    static WOLog.trainingLoad.getter();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return 0;
}

uint64_t sub_1005F7598(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v46 = a1;
  uint64_t v43 = type metadata accessor for Logger();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Language = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState();
  __chkstk_darwin(Language);
  uint64_t v38 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v47 = (uint64_t)&v38 - v5;
  uint64_t Band = type metadata accessor for TrainingLoadBand();
  uint64_t v42 = *(void *)(Band - 8);
  __chkstk_darwin(Band);
  uint64_t v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for Calendar();
  uint64_t v10 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for DateComponents();
  uint64_t v13 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v16 = type metadata accessor for Calendar.Component();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1007509E0;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, enum case for Calendar.Component.dayOfYear(_:), v16);
  sub_1000C6A18(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  Date.init()();
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v51);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v50);
  uint64_t v20 = DateComponents.dayOfYear.getter();
  LOBYTE(v12) = v21;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v49);
  if ((v12 & 1) == 0)
  {
    uint64_t v22 = (uint64_t)v38;
    uint64_t v23 = v42;
    int v24 = v40;
    uint64_t v25 = Band;
    (*(void (**)(char *, void, uint64_t))(v42 + 104))(v40, enum case for TrainingLoadBand.near(_:), Band);
    sub_1005F8144(&qword_100964D28, (void (*)(uint64_t))&type metadata accessor for TrainingLoadBand);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v27 = v52;
    uint64_t v26 = v53;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
    uint64_t v28 = v47;
    sub_1005F807C(v48, v47);
    if (v26 == v27)
    {
      swift_storeEnumTagMultiPayload();
      char v29 = sub_1005F5E98(v28, v22);
      sub_1005F80E0(v22);
      sub_1005F80E0(v28);
      if (v29)
      {
        uint64_t v30 = 5;
LABEL_10:
        uint64_t v53 = v20 % v30 + 1;
        return dispatch thunk of CustomStringConvertible.description.getter();
      }
    }
    else
    {
      sub_1005F80E0(v28);
    }
    uint64_t v30 = 4;
    goto LABEL_10;
  }
  uint64_t v31 = v41;
  uint64_t v32 = v43;
  uint64_t v33 = v45;
  static WOLog.trainingLoad.getter();
  NSString v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Could not determine the day of the year, defaulting to variant 1.", v36, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v32);
  return 49;
}

uint64_t sub_1005F7C08()
{
  uint64_t BaselineComparison = type metadata accessor for TrainingLoadBaselineComparison();
  uint64_t v1 = *(void *)(BaselineComparison - 8);
  __chkstk_darwin(BaselineComparison);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100964D38);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100964D40);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - v11;
  TrainingLoadViewModel.trainingLoadDaySummaryForToday.getter();
  uint64_t SampleDaySummary = type metadata accessor for TrainingLoadSampleDaySummary();
  uint64_t v14 = *(void *)(SampleDaySummary - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, SampleDaySummary) == 1)
  {
    sub_10008DB18((uint64_t)v6, &qword_100964D38);
    uint64_t ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(ChronicBaseline - 8) + 56))(v12, 1, 1, ChronicBaseline);
  }
  else
  {
    TrainingLoadSampleDaySummary.trainingLoad.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, SampleDaySummary);
    TrainingLoadBaselineComparison.chronicBaseline.getter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, BaselineComparison);
    uint64_t ChronicBaseline = type metadata accessor for TrainingLoadChronicBaseline();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(ChronicBaseline - 8) + 56))(v12, 0, 1, ChronicBaseline);
  }
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v9, &qword_100964D40);
  type metadata accessor for TrainingLoadChronicBaseline();
  uint64_t v16 = *(void *)(ChronicBaseline - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, ChronicBaseline) == 1)
  {
    sub_10008DB18((uint64_t)v9, &qword_100964D40);
LABEL_9:
    id v17 = [self mainBundle];
    goto LABEL_10;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v9, ChronicBaseline) != enum case for TrainingLoadChronicBaseline.insufficientData(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, ChronicBaseline);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v16 + 96))(v9, ChronicBaseline);
  sub_10008DB18((uint64_t)v9, &qword_100964D48);
  id v17 = [self mainBundle];
LABEL_10:
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 localizedStringForKey:v18 value:0 table:0];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10008DB18((uint64_t)v12, &qword_100964D40);
  return v20;
}

uint64_t sub_1005F807C(uint64_t a1, uint64_t a2)
{
  uint64_t Language = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Language - 8) + 16))(a2, a1, Language);
  return a2;
}

uint64_t sub_1005F80E0(uint64_t a1)
{
  uint64_t Language = type metadata accessor for TrainingLoadLanguageGenerator.LastWorkoutState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(Language - 8) + 8))(a1, Language);
  return a1;
}

uint64_t sub_1005F8144(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainingLoadLanguageGenerator()
{
  return &type metadata for TrainingLoadLanguageGenerator;
}

uint64_t *sub_1005F81A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1005F82F4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = type metadata accessor for Date();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1005F8370(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1005F847C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005F80E0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1005F8598(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1005F86A4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005F80E0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1005F87C4()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1005F884C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for MirrorView();
  uint64_t v11 = (uint64_t *)((char *)a6 + v10[9]);
  uint64_t v12 = (char *)a6 + v10[10];
  State.init(wrappedValue:)();
  *uint64_t v12 = v25;
  *((void *)v12 + 1) = *((void *)&v25 + 1);
  *(uint64_t *)((char *)a6 + v10[11]) = 0;
  *(uint64_t *)((char *)a6 + v10[12]) = 0;
  uint64_t v13 = v10[13];
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  *(uint64_t *)((char *)a6 + v13) = v14;
  uint64_t v15 = v10[14];
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  *(uint64_t *)((char *)a6 + v15) = v16;
  uint64_t v17 = v10[15];
  static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  *(uint64_t *)((char *)a6 + v17) = v18;
  uint64_t v19 = v10[16];
  sub_1000AFA94(&qword_100953288);
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a6 + v19) = v25;
  uint64_t v20 = (char *)a6 + v10[17];
  sub_1000AFA94(&qword_10094F400);
  State.init(wrappedValue:)();
  *(void *)uint64_t v20 = v25;
  v20[8] = BYTE8(v25);
  *((void *)v20 + 2) = v26;
  type metadata accessor for LowPowerModeMonitor();
  sub_1005FCE84(&qword_10095F178, (void (*)(uint64_t))&type metadata accessor for LowPowerModeMonitor);
  swift_retain();
  *a6 = ObservedObject.init(wrappedValue:)();
  a6[1] = v21;
  a6[2] = a1;
  a6[3] = a2;
  type metadata accessor for MirrorControlsState();
  sub_1005FCE84(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
  Bindable<A>.init(wrappedValue:)();
  uint64_t result = swift_release();
  *(uint64_t *)((char *)a6 + v10[8]) = a3;
  *uint64_t v11 = a4;
  v11[1] = a5;
  return result;
}

uint64_t type metadata accessor for MirrorView()
{
  uint64_t result = qword_100964E68;
  if (!qword_100964E68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1005F8B14(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *uint64_t v4 = *a2;
    v4[1] = v7;
    uint64_t v9 = (void *)a2[2];
    uint64_t v8 = a2[3];
    _OWORD v4[2] = (uint64_t)v9;
    v4[3] = v8;
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (char *)a2 + v10;
    swift_retain();
    id v13 = v9;
    swift_retain();
    uint64_t v14 = sub_1000AFA94(&qword_100964E08);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v12, v14);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (char *)a2 + v16;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v16);
    id v21 = v17;
    if (v20)
    {
      uint64_t v22 = *((void *)v19 + 1);
      *uint64_t v18 = v20;
      v18[1] = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    }
    uint64_t v24 = a3[10];
    uint64_t v25 = a3[11];
    uint64_t v26 = (char *)v4 + v24;
    uint64_t v27 = (char *)a2 + v24;
    *uint64_t v26 = *v27;
    *((void *)v26 + 1) = *((void *)v27 + 1);
    *(uint64_t *)((char *)v4 + v25) = *(uint64_t *)((char *)a2 + v25);
    uint64_t v28 = a3[13];
    *(uint64_t *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(uint64_t *)((char *)v4 + v28) = *(uint64_t *)((char *)a2 + v28);
    uint64_t v29 = a3[15];
    *(uint64_t *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)v4 + v29) = *(uint64_t *)((char *)a2 + v29);
    uint64_t v30 = a3[16];
    uint64_t v31 = a3[17];
    uint64_t v32 = (uint64_t *)((char *)v4 + v30);
    uint64_t v33 = (char *)a2 + v30;
    os_log_type_t v35 = *(void **)v33;
    uint64_t v34 = *((void *)v33 + 1);
    void *v32 = *(void *)v33;
    v32[1] = v34;
    uint64_t v36 = (char *)v4 + v31;
    uint64_t v37 = (char *)a2 + v31;
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    *((void *)v36 + 2) = *((void *)v37 + 2);
    swift_retain();
    id v38 = v35;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1005F8CE0(uint64_t a1, int *a2)
{
  swift_release();

  swift_release();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_1000AFA94(&qword_100964E08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  if (*(void *)(a1 + a2[9])) {
    swift_release();
  }
  swift_release();

  swift_release();

  return swift_release();
}

void *sub_1005F8DD0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v8 = (void *)a2[2];
  uint64_t v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  swift_retain();
  id v12 = v8;
  swift_retain();
  uint64_t v13 = sub_1000AFA94(&qword_100964E08);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = *(void **)((char *)a2 + v14);
  *(void *)((char *)a1 + v14) = v16;
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (char *)a2 + v15;
  uint64_t v19 = *(void *)((char *)a2 + v15);
  id v20 = v16;
  if (v19)
  {
    uint64_t v21 = *((void *)v18 + 1);
    *uint64_t v17 = v19;
    v17[1] = v21;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  *uint64_t v24 = *v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  uint64_t v26 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v27 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  uint64_t v28 = a3[16];
  uint64_t v29 = a3[17];
  uint64_t v30 = (void *)((char *)a1 + v28);
  uint64_t v31 = (char *)a2 + v28;
  uint64_t v33 = *(void **)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *uint64_t v30 = *(void *)v31;
  v30[1] = v32;
  uint64_t v34 = (char *)a1 + v29;
  os_log_type_t v35 = (char *)a2 + v29;
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  *((void *)v34 + 2) = *((void *)v35 + 2);
  swift_retain();
  id v36 = v33;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1005F8F50(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1000AFA94(&qword_100964E08);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)((char *)a2 + v13);
  uint64_t v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a1 + v17);
  uint64_t v21 = *(void *)((char *)a2 + v17);
  if (!v20)
  {
    if (v21)
    {
      uint64_t v23 = *((void *)v19 + 1);
      *uint64_t v18 = v21;
      v18[1] = v23;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    goto LABEL_8;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v22 = *((void *)v19 + 1);
  *uint64_t v18 = v21;
  v18[1] = v22;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *uint64_t v25 = *v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  uint64_t v27 = a3[16];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void **)((char *)a1 + v27);
  uint64_t v31 = *(void **)((char *)a2 + v27);
  *uint64_t v28 = v31;
  id v32 = v31;

  v28[1] = *((void *)v29 + 1);
  swift_retain();
  swift_release();
  uint64_t v33 = a3[17];
  uint64_t v34 = (char *)a1 + v33;
  os_log_type_t v35 = (char *)a2 + v33;
  uint64_t v36 = *(void *)v35;
  v34[8] = v35[8];
  *(void *)uint64_t v34 = v36;
  *((void *)v34 + 2) = *((void *)v35 + 2);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1005F916C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[7];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000AFA94(&qword_100964E08);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v14 = *v13;
  if (*v13)
  {
    uint64_t v15 = v13[1];
    *uint64_t v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  uint64_t v16 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v18 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v19 = a3[17];
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((void *)v20 + 2) = *((void *)v21 + 2);
  return a1;
}

void *sub_1005F928C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  a1[3] = a2[3];
  swift_release();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000AFA94(&qword_100964E08);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);

  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)((char *)a1 + v14);
  uint64_t v18 = *(void *)((char *)a2 + v14);
  if (!v17)
  {
    if (v18)
    {
      uint64_t v20 = *((void *)v16 + 1);
      *uint64_t v15 = v18;
      v15[1] = v20;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    goto LABEL_8;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v19 = *((void *)v16 + 1);
  *uint64_t v15 = v18;
  v15[1] = v19;
  swift_release();
LABEL_8:
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *uint64_t v22 = *v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_release();
  uint64_t v24 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  uint64_t v26 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void **)((char *)a1 + v26);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);

  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_release();
  uint64_t v30 = a3[17];
  uint64_t v31 = (char *)a1 + v30;
  id v32 = (char *)a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  *((void *)v31 + 2) = *((void *)v32 + 2);
  swift_release();
  return a1;
}

uint64_t sub_1005F9454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005F9468);
}

uint64_t sub_1005F9468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AFA94(&qword_100964E08);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005F951C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005F9530);
}

uint64_t sub_1005F9530(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000AFA94(&qword_100964E08);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1005F95DC()
{
  sub_1005F96C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1005F96C0()
{
  if (!qword_100964E78)
  {
    type metadata accessor for MirrorControlsState();
    unint64_t v0 = type metadata accessor for Bindable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100964E78);
    }
  }
}

uint64_t sub_1005F9718()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005F9734()
{
  return EnvironmentValues.legibilityWeight.getter();
}

uint64_t sub_1005F9758(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10095BAB8);
  __chkstk_darwin(v2 - 8);
  sub_1000AEF2C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10095BAB8);
  return EnvironmentValues.legibilityWeight.setter();
}

uint64_t sub_1005F97EC()
{
  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_100998628 = v1;
  return result;
}

uint64_t sub_1005F9830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v2 = sub_1000AFA94(&qword_10095BAB8);
  __chkstk_darwin(v2 - 8);
  uint64_t v46 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100964ED8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = type metadata accessor for MirrorView();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000AFA94(&qword_100964EE0);
  __chkstk_darwin(v41);
  uint64_t v18 = (uint64_t *)((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = sub_1000AFA94(&qword_100964EE8);
  uint64_t v42 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v18 = static Alignment.center.getter();
  v18[1] = v21;
  uint64_t v22 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))((char *)v18
                                                                   + *(int *)(sub_1000AFA94(&qword_100964EF0) + 44));
  sub_1005FD208(v1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MirrorView);
  unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v24 = swift_allocObject();
  sub_1005FCAA8((uint64_t)v16, v24 + v23);
  sub_1005FBE28(v1, (uint64_t)v12);
  sub_1000AEF2C((uint64_t)v12, (uint64_t)v9, &qword_100964ED8);
  *uint64_t v22 = sub_1005FCB0C;
  v22[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v24;
  uint64_t v25 = sub_1000AFA94(&qword_100964EF8);
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v22 + *(int *)(v25 + 48), &qword_100964ED8);
  swift_retain();
  sub_10008DB18((uint64_t)v12, &qword_100964ED8);
  sub_10008DB18((uint64_t)v9, &qword_100964ED8);
  swift_release();
  uint64_t v27 = v43;
  uint64_t v26 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v6, enum case for DynamicTypeSize.large(_:), v44);
  sub_1000A132C(&qword_100964F00, &qword_100964EE0);
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v26);
  sub_10008DB18((uint64_t)v18, &qword_100964EE0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = enum case for LegibilityWeight.regular(_:);
  uint64_t v30 = type metadata accessor for LegibilityWeight();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 104))(v46, v29, v30);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v30);
  uint64_t v33 = sub_1000AFA94(&qword_100964F08);
  uint64_t v34 = v47;
  os_log_type_t v35 = (uint64_t *)(v47 + *(int *)(v33 + 36));
  uint64_t v36 = sub_1000AFA94(&qword_10095BB88);
  sub_1000AEF2C(v32, (uint64_t)v35 + *(int *)(v36 + 28), &qword_10095BAB8);
  uint64_t *v35 = KeyPath;
  uint64_t v37 = v42;
  uint64_t v38 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v34, v20, v45);
  sub_10008DB18(v32, &qword_10095BAB8);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v20, v38);
}

uint64_t sub_1005F9D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = static Alignment.top.getter();
  a3[1] = v6;
  uint64_t v7 = sub_1000AFA94(&qword_100964F68);
  return sub_1005F9DE4(a2, a1, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_1005F9DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v122 = a3;
  uint64_t v4 = type metadata accessor for WorkoutAnimationStyle();
  uint64_t v117 = *(void *)(v4 - 8);
  uint64_t v118 = v4;
  __chkstk_darwin(v4);
  id v115 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100964E08);
  uint64_t v121 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v100 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MirrorView();
  uint64_t v9 = v8 - 8;
  uint64_t v119 = *(char **)(v8 - 8);
  uint64_t v10 = *((void *)v119 + 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100964F70);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100964F78);
  uint64_t v16 = (int *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1000AFA94(&qword_100964F80);
  __chkstk_darwin(v101);
  uint64_t v102 = (uint64_t)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000AFA94(&qword_100964F88);
  __chkstk_darwin(v108);
  uint64_t v106 = (uint64_t)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_100964F90);
  uint64_t v110 = *(void *)(v21 - 8);
  uint64_t v111 = v21;
  __chkstk_darwin(v21);
  uint64_t v123 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AFA94(&qword_100964F98);
  uint64_t v113 = *(void *)(v23 - 8);
  uint64_t v114 = v23;
  __chkstk_darwin(v23);
  uint64_t v112 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000AFA94(&qword_100964FA0);
  __chkstk_darwin(v109);
  uint64_t v125 = (uint64_t)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v107 = (char *)&v99 - v27;
  __chkstk_darwin(v28);
  uint64_t v126 = (uint64_t)&v99 - v29;
  *(void *)uint64_t v14 = static HorizontalAlignment.leading.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 0;
  uint64_t v30 = sub_1000AFA94(&qword_100964FA8);
  sub_1005FAAC8(a1, &v14[*(int *)(v30 + 44)]);
  sub_1005FD208(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MirrorView);
  uint64_t v31 = v119[80];
  uint64_t v32 = (v31 + 16) & ~v31;
  uint64_t v103 = v31 | 7;
  uint64_t v104 = v32 + v10;
  uint64_t v33 = swift_allocObject();
  uint64_t v105 = v32;
  uint64_t v119 = v11;
  sub_1005FCAA8((uint64_t)v11, v33 + v32);
  type metadata accessor for DataLinkMonitor();
  sub_1005FCE84((unint64_t *)&qword_10094C900, (void (*)(uint64_t))type metadata accessor for DataLinkMonitor);
  uint64_t v34 = EnvironmentObject.init()();
  sub_1002F46C0(v34, v35, (uint64_t)sub_1005FCE6C, v33, (uint64_t)v152);
  uint64_t v36 = *(int *)(v9 + 36);
  uint64_t v124 = a1;
  uint64_t v37 = a1 + v36;
  uint64_t v38 = v100;
  uint64_t v116 = v37;
  Bindable.projectedValue.getter();
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v121 + 8);
  uint64_t v121 = v6;
  v39(v38, v6);
  uint64_t v40 = v136;
  unint64_t v41 = v137;
  LOBYTE(v6) = v138;
  uint64_t v42 = &v18[v16[15]];
  long long v43 = v152[3];
  *((_OWORD *)v42 + 2) = v152[2];
  *((_OWORD *)v42 + 3) = v43;
  *((_OWORD *)v42 + 4) = v152[4];
  long long v44 = v152[1];
  *(_OWORD *)uint64_t v42 = v152[0];
  *((_OWORD *)v42 + 1) = v44;
  sub_1000AEEC8((uint64_t)v14, (uint64_t)v18, &qword_100964F70);
  uint64_t v45 = &v18[v16[16]];
  *(void *)uint64_t v45 = v40;
  *((void *)v45 + 1) = v41;
  v45[16] = v6;
  *(void *)&v18[v16[17]] = 0;
  *(void *)&v18[v16[18]] = 0;
  if (qword_10094AD60 != -1) {
    swift_once();
  }
  uint64_t v46 = qword_100998140;
  swift_retain();
  char v47 = static Edge.Set.all.getter();
  uint64_t v48 = v102;
  sub_1000AEF2C((uint64_t)v18, v102, &qword_100964F78);
  uint64_t v49 = v48 + *(int *)(v101 + 36);
  *(void *)uint64_t v49 = v46;
  *(unsigned char *)(v49 + 8) = v47;
  sub_10008DB18((uint64_t)v18, &qword_100964F78);
  uint64_t v50 = *(void **)(v124 + 16);
  uint64_t v51 = v124;
  uint64_t v52 = static ObservableObject.environmentStore.getter();
  uint64_t v53 = v106;
  sub_1000AEF2C(v48, v106, &qword_100964F80);
  uint64_t v54 = v108;
  uint64_t v55 = (uint64_t *)(v53 + *(int *)(v108 + 36));
  *uint64_t v55 = v52;
  v55[1] = (uint64_t)v50;
  id v56 = v50;
  sub_10008DB18(v48, &qword_100964F80);
  swift_retain();
  LOBYTE(v48) = dispatch thunk of LowPowerModeMonitor.lowPowerModeEnabled.getter();
  swift_release();
  uint64_t v57 = v117;
  uint64_t v58 = (unsigned int *)&enum case for WorkoutAnimationStyle.reduced(_:);
  if ((v48 & 1) == 0) {
    uint64_t v58 = (unsigned int *)&enum case for WorkoutAnimationStyle.fullSpeed(_:);
  }
  unint64_t v59 = v115;
  uint64_t v60 = v118;
  (*(void (**)(char *, void, uint64_t))(v117 + 104))(v115, *v58, v118);
  unint64_t v61 = sub_1005FCED4();
  View.workoutAnimationStyle(_:)();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v60);
  sub_10008DB18(v53, &qword_100964F88);
  swift_retain();
  LOBYTE(v60) = dispatch thunk of LowPowerModeMonitor.lowPowerModeEnabled.getter();
  swift_release();
  LOBYTE(v129) = v60 & 1;
  uint64_t v62 = (uint64_t)v119;
  sub_1005FD208(v51, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for MirrorView);
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v105;
  sub_1005FCAA8(v62, v63 + v105);
  uint64_t v136 = v54;
  unint64_t v137 = v61;
  swift_getOpaqueTypeConformance2();
  uint64_t v66 = v111;
  NSString v65 = v112;
  uint64_t v67 = v123;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v67, v66);
  sub_1005FD208(v124, v62, (uint64_t (*)(void))type metadata accessor for MirrorView);
  uint64_t v68 = swift_allocObject();
  sub_1005FCAA8(v62, v68 + v64);
  uint64_t v70 = v113;
  uint64_t v69 = v114;
  uint64_t v71 = (uint64_t)v107;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v107, v65, v114);
  NSString v72 = (uint64_t (**)())(v71 + *(int *)(v109 + 36));
  *NSString v72 = sub_1005FCBB8;
  v72[1] = (uint64_t (*)())v68;
  v72[2] = 0;
  void v72[3] = 0;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v65, v69);
  sub_1000AEEC8(v71, v126, &qword_100964FA0);
  sub_1000AFA94((uint64_t *)&unk_100959030);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_10074E640;
  *(void *)(v73 + 32) = static Color.black.getter();
  *(void *)(v73 + 40) = static Color.clear.getter();
  uint64_t v136 = v73;
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  Gradient.init(colors:)();
  double v74 = 1.0;
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v124 = v153;
  unint64_t v75 = v154;
  uint64_t v76 = v155;
  uint64_t v77 = v156;
  uint64_t v78 = v157;
  swift_bridgeObjectRelease();
  GeometryProxy.safeAreaInsets.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v123 = v158;
  LODWORD(v114) = v159;
  unsigned __int8 v79 = v161;
  uint64_t v119 = (char *)v162;
  uint64_t v120 = v160;
  uint64_t v118 = v163;
  LODWORD(v117) = static Edge.Set.top.getter();
  id v115 = (char *)static SafeAreaRegions.all.getter();
  Bindable.wrappedValue.getter();
  uint64_t v80 = v136;
  swift_getKeyPath();
  uint64_t v136 = v80;
  sub_1005FCE84(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v73) = *(unsigned __int8 *)(v80 + 16);
  swift_release();
  if (!v73) {
    double v74 = 0.0;
  }
  uint64_t v113 = static Animation.easeIn(duration:)();
  Bindable.wrappedValue.getter();
  uint64_t v81 = v136;
  swift_getKeyPath();
  uint64_t v136 = v81;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v121) = *(unsigned __int8 *)(v81 + 16);
  swift_release();
  unsigned __int8 v128 = v114;
  unsigned __int8 v127 = v79;
  uint64_t v82 = v125;
  sub_1000AEF2C(v126, v125, &qword_100964FA0);
  unsigned __int8 v83 = v128;
  LODWORD(v114) = v128;
  unsigned __int8 v84 = v127;
  LODWORD(v116) = v127;
  uint64_t v85 = v122;
  sub_1000AEF2C(v82, v122, &qword_100964FA0);
  unint64_t v86 = (_OWORD *)(v85 + *(int *)(sub_1000AFA94(&qword_100964FD8) + 48));
  uint64_t v88 = v123;
  uint64_t v87 = v124;
  *(void *)&long long v129 = v124;
  *((void *)&v129 + 1) = v75;
  *(void *)&long long v130 = v76;
  *((void *)&v130 + 1) = v77;
  *(void *)&long long v131 = v78;
  *((void *)&v131 + 1) = v123;
  LOBYTE(v132) = v83;
  uint64_t v89 = v120;
  *((void *)&v132 + 1) = v120;
  LOBYTE(v133) = v84;
  uint64_t v90 = v118;
  uint64_t v91 = (uint64_t)v119;
  *((void *)&v133 + 1) = v119;
  *(void *)&long long v134 = v118;
  uint64_t v92 = v115;
  *((void *)&v134 + 1) = v115;
  char v93 = v117;
  LOBYTE(v135[0]) = v117;
  *((double *)v135 + 1) = v74;
  uint64_t v94 = v113;
  *(void *)&v135[1] = v113;
  LOBYTE(v81) = v121;
  BYTE8(v135[1]) = v121;
  long long v95 = v130;
  *unint64_t v86 = v129;
  v86[1] = v95;
  long long v96 = v134;
  v86[4] = v133;
  v86[5] = v96;
  v86[6] = v135[0];
  *(_OWORD *)((char *)v86 + 105) = *(_OWORD *)((char *)v135 + 9);
  long long v97 = v132;
  void v86[2] = v131;
  v86[3] = v97;
  sub_1005FD040((uint64_t)&v129);
  sub_10008DB18(v126, &qword_100964FA0);
  uint64_t v136 = v87;
  unint64_t v137 = v75;
  uint64_t v138 = v76;
  uint64_t v139 = v77;
  uint64_t v140 = v78;
  uint64_t v141 = v88;
  char v142 = v114;
  uint64_t v143 = v89;
  char v144 = v116;
  uint64_t v145 = v91;
  uint64_t v146 = v90;
  uint64_t v147 = v92;
  char v148 = v93;
  double v149 = v74;
  uint64_t v150 = v94;
  char v151 = v81;
  sub_1005FD078((uint64_t)&v136);
  return sub_10008DB18(v125, &qword_100964FA0);
}

uint64_t sub_1005FAAC8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v3 = type metadata accessor for MirrorView();
  uint64_t v116 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v117 = v4;
  uint64_t v118 = (uint64_t)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v115 = (uint64_t)&v96 - v6;
  uint64_t v7 = type metadata accessor for MirrorStatusView();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = (int *)sub_1000AFA94(&qword_10094F8E0);
  __chkstk_darwin(v114);
  uint64_t v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = (int *)sub_1000AFA94(&qword_100964FE0);
  __chkstk_darwin(v119);
  uint64_t v122 = (uint64_t)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v96 - v14;
  __chkstk_darwin(v16);
  uint64_t v123 = (uint64_t)&v96 - v17;
  uint64_t v18 = type metadata accessor for MirrorPlatterView();
  __chkstk_darwin(v18 - 8);
  uint64_t v121 = (uint64_t)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v96 - v21;
  uint64_t v23 = *(void *)(*(void *)(a1 + 16) + OBJC_IVAR___WODataLinkMonitor_publisher);
  id v24 = *(id *)(a1 + *(int *)(v3 + 32));
  swift_retain();
  swift_retain();
  uint64_t v120 = v22;
  sub_100276FD0(v24, v23, (uint64_t)v22);
  swift_retain();
  sub_100499690((uint64_t)v9);
  LOBYTE(v24) = static Edge.Set.leading.getter();
  unsigned __int8 v25 = static Edge.Set.trailing.getter();
  char v26 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v24) {
    char v26 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v25) {
    char v26 = Edge.Set.init(rawValue:)();
  }
  if (qword_10094AFD0 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_1005FD208((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MirrorStatusView);
  uint64_t v35 = &v11[v114[9]];
  char *v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_1005FD2C8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MirrorStatusView);
  char v36 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  sub_1000AEF2C((uint64_t)v11, (uint64_t)v15, &qword_10094F8E0);
  uint64_t v45 = &v15[v119[9]];
  *uint64_t v45 = v36;
  *((void *)v45 + 1) = v38;
  *((void *)v45 + 2) = v40;
  *((void *)v45 + 3) = v42;
  *((void *)v45 + 4) = v44;
  v45[40] = 0;
  sub_10008DB18((uint64_t)v11, &qword_10094F8E0);
  sub_1000AEEC8((uint64_t)v15, v123, &qword_100964FE0);
  sub_1000AFA94(&qword_100964E08);
  Bindable.wrappedValue.getter();
  uint64_t v119 = (int *)v140[0];
  uint64_t v46 = v115;
  sub_1005FD208(a1, v115, (uint64_t (*)(void))type metadata accessor for MirrorView);
  unint64_t v47 = (*(unsigned __int8 *)(v116 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
  uint64_t v113 = swift_allocObject();
  sub_1005FCAA8(v46, v113 + v47);
  uint64_t v48 = v118;
  sub_1005FD208(a1, v118, (uint64_t (*)(void))type metadata accessor for MirrorView);
  uint64_t v111 = swift_allocObject();
  sub_1005FCAA8(v48, v111 + v47);
  type metadata accessor for DataLinkMonitor();
  sub_1005FCE84((unint64_t *)&qword_10094C900, (void (*)(uint64_t))type metadata accessor for DataLinkMonitor);
  uint64_t v49 = (char *)EnvironmentObject.init()();
  uint64_t v114 = v50;
  int v110 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v108 = v52;
  uint64_t v109 = v51;
  uint64_t v106 = v54;
  uint64_t v107 = v53;
  int v105 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v103 = v56;
  uint64_t v104 = v55;
  uint64_t v101 = v58;
  uint64_t v102 = v57;
  unsigned __int8 v59 = static Edge.Set.leading.getter();
  unsigned __int8 v60 = static Edge.Set.trailing.getter();
  int v61 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v59) {
    int v61 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() == v60) {
    int v100 = v61;
  }
  else {
    int v100 = Edge.Set.init(rawValue:)();
  }
  unsigned __int8 v125 = 0;
  unsigned __int8 v124 = 0;
  EdgeInsets.init(_all:)();
  uint64_t v117 = v63;
  uint64_t v118 = v62;
  uint64_t v115 = v65;
  uint64_t v116 = v64;
  unsigned __int8 v66 = v125;
  unsigned __int8 v67 = v124;
  int v98 = v125;
  int v99 = v124;
  unsigned __int8 v126 = 0;
  uint64_t v68 = v121;
  sub_1005FD208((uint64_t)v120, v121, (uint64_t (*)(void))type metadata accessor for MirrorPlatterView);
  uint64_t v69 = v122;
  sub_1000AEF2C(v123, v122, &qword_100964FE0);
  int v97 = v126;
  uint64_t v70 = v112;
  sub_1005FD208(v68, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for MirrorPlatterView);
  uint64_t v71 = sub_1000AFA94(&qword_100964FE8);
  sub_1000AEF2C(v69, (uint64_t)&v70[*(int *)(v71 + 48)], &qword_100964FE0);
  NSString v72 = &v70[*(int *)(v71 + 64)];
  uint64_t v73 = (void *)v113;
  *(void *)&long long v127 = v49;
  *((void *)&v127 + 1) = v114;
  uint64_t v112 = v49;
  *(void *)&long long v128 = v119;
  *((void *)&v128 + 1) = sub_1005FD118;
  *(void *)&long long v129 = v113;
  *((void *)&v129 + 1) = sub_1005FD198;
  double v74 = (void *)v111;
  *(void *)&long long v130 = v111;
  LOBYTE(v69) = v110;
  BYTE8(v130) = v110;
  uint64_t v76 = v108;
  uint64_t v75 = v109;
  *(void *)&long long v131 = v109;
  *((void *)&v131 + 1) = v108;
  uint64_t v78 = v106;
  uint64_t v77 = v107;
  *(void *)&long long v132 = v107;
  *((void *)&v132 + 1) = v106;
  LOBYTE(v133) = v66;
  char v79 = v105;
  BYTE8(v133) = v105;
  uint64_t v81 = v103;
  uint64_t v80 = v104;
  *(void *)&long long v134 = v104;
  *((void *)&v134 + 1) = v103;
  uint64_t v83 = v101;
  uint64_t v82 = v102;
  *(void *)&long long v135 = v102;
  *((void *)&v135 + 1) = v101;
  LOBYTE(v136) = v67;
  LOBYTE(v68) = v100;
  BYTE8(v136) = v100;
  *(void *)&long long v137 = v118;
  *((void *)&v137 + 1) = v117;
  *(void *)&long long v138 = v116;
  *((void *)&v138 + 1) = v115;
  char v84 = v97;
  char v139 = v97;
  long long v85 = v134;
  long long v86 = v135;
  *((_OWORD *)v72 + 6) = v133;
  *((_OWORD *)v72 + 7) = v85;
  long long v87 = v136;
  long long v88 = v137;
  long long v89 = v138;
  v72[192] = v84;
  char v90 = v84;
  *((_OWORD *)v72 + 10) = v88;
  *((_OWORD *)v72 + 11) = v89;
  *((_OWORD *)v72 + 8) = v86;
  *((_OWORD *)v72 + 9) = v87;
  long long v91 = v127;
  long long v92 = v128;
  long long v93 = v132;
  *((_OWORD *)v72 + 4) = v131;
  *((_OWORD *)v72 + 5) = v93;
  long long v94 = v130;
  *((_OWORD *)v72 + 2) = v129;
  *((_OWORD *)v72 + 3) = v94;
  *(_OWORD *)NSString v72 = v91;
  *((_OWORD *)v72 + 1) = v92;
  sub_1005FD270((id *)&v127);
  sub_10008DB18(v123, &qword_100964FE0);
  sub_1005FD2C8((uint64_t)v120, (uint64_t (*)(void))type metadata accessor for MirrorPlatterView);
  v140[0] = v112;
  v140[1] = v114;
  v140[2] = v119;
  v140[3] = sub_1005FD118;
  v140[4] = v73;
  v140[5] = sub_1005FD198;
  v140[6] = v74;
  char v141 = v69;
  uint64_t v142 = v75;
  uint64_t v143 = v76;
  uint64_t v144 = v77;
  uint64_t v145 = v78;
  char v146 = v98;
  char v147 = v79;
  uint64_t v148 = v80;
  uint64_t v149 = v81;
  uint64_t v150 = v82;
  uint64_t v151 = v83;
  char v152 = v99;
  char v153 = v68;
  uint64_t v154 = v118;
  uint64_t v155 = v117;
  uint64_t v156 = v116;
  uint64_t v157 = v115;
  char v158 = v90;
  sub_1005FD328(v140);
  sub_10008DB18(v122, &qword_100964FE0);
  return sub_1005FD2C8(v121, (uint64_t (*)(void))type metadata accessor for MirrorPlatterView);
}

uint64_t sub_1005FB398()
{
  type metadata accessor for MirrorView();
  sub_1000AFA94(&qword_100964E08);
  Bindable.wrappedValue.getter();
  swift_getKeyPath();
  sub_1005FCE84(&qword_100964E00, (void (*)(uint64_t))type metadata accessor for MirrorControlsState);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  *(unsigned char *)(v1 + 16) = (*(unsigned char *)(v1 + 16) & 1) == 0;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1005FB4DC()
{
  return swift_release();
}

uint64_t sub_1005FB574()
{
  return swift_release();
}

uint64_t sub_1005FB720()
{
  return swift_release();
}

uint64_t sub_1005FB780()
{
  return swift_release();
}

uint64_t sub_1005FB930()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for MirrorView();
  uint64_t v40 = *((void *)v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v41 = v3;
  uint64_t v42 = (uint64_t)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - v9;
  static WOLog.dataLink.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Resetting timer", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v10, v4);
  uint64_t v15 = (long long *)(v1 + v2[16]);
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *((void *)v15 + 1);
  uint64_t v39 = v15;
  *(void *)&long long aBlock = v16;
  *((void *)&aBlock + 1) = v17;
  sub_1000AFA94(&qword_1009637B8);
  State.wrappedValue.getter();
  id v18 = v48;
  [v48 invalidate];

  *(void *)&long long aBlock = v16;
  *((void *)&aBlock + 1) = v17;
  id v48 = 0;
  State.wrappedValue.setter();
  uint64_t v19 = v1 + v2[10];
  char v20 = *(unsigned char *)v19;
  uint64_t v21 = *(void *)(v19 + 8);
  LOBYTE(aBlock) = v20;
  *((void *)&aBlock + 1) = v21;
  LOBYTE(v48) = 0;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.setter();
  uint64_t v22 = v1 + v2[17];
  uint64_t v23 = *(void *)v22;
  char v24 = *(unsigned char *)(v22 + 8);
  unsigned __int8 v25 = *(void (**)(uint64_t, void *))(v22 + 16);
  *(void *)&long long aBlock = v23;
  BYTE8(aBlock) = v24;
  uint64_t v44 = v25;
  sub_1000AFA94(&qword_100964F60);
  State.wrappedValue.getter();
  if ((v49 & 1) == 0)
  {
    double v26 = *(double *)&v48;
    static WOLog.dataLink.getter();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134217984;
      *(double *)&long long aBlock = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Bringing screen back to %f", v29, 0xCu);
      swift_slowDealloc();
    }

    v14(v7, v4);
    id v30 = [self mainScreen];
    [v30 setBrightness:v26];
  }
  swift_retain();
  char v31 = dispatch thunk of LowPowerModeMonitor.lowPowerModeEnabled.getter();
  uint64_t result = swift_release();
  if (v31)
  {
    uint64_t v33 = self;
    uint64_t v34 = v42;
    sub_1005FD208(v1, v42, (uint64_t (*)(void))type metadata accessor for MirrorView);
    unint64_t v35 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v36 = swift_allocObject();
    sub_1005FCAA8(v34, v36 + v35);
    uint64_t v46 = sub_1005FCDDC;
    uint64_t v47 = v36;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v44 = sub_100066A00;
    uint64_t v45 = &unk_1008D1940;
    uint64_t v37 = _Block_copy(&aBlock);
    swift_release();
    id v38 = [v33 scheduledTimerWithTimeInterval:0 repeats:v37 block:8.0];
    _Block_release(v37);
    long long aBlock = *v39;
    id v48 = v38;
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_1005FBE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin(v58);
  uint64_t v55 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DragGesture();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  __chkstk_darwin(v5);
  unsigned __int8 v60 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_10095C808);
  uint64_t v64 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v63 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for PlainButtonStyle();
  uint64_t v51 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MirrorView();
  uint64_t v12 = v11 - 8;
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v49 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000AFA94(&qword_100964F10);
  uint64_t v50 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100964F18);
  uint64_t v56 = *(void *)(v17 - 8);
  uint64_t v57 = v17;
  __chkstk_darwin(v17);
  uint64_t v54 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000AFA94(&qword_100964F20);
  uint64_t v19 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v52 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1 + *(int *)(v12 + 48);
  char v22 = *(unsigned char *)v21;
  uint64_t v23 = *(void *)(v21 + 8);
  LOBYTE(v66) = v22;
  uint64_t v67 = v23;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  if (v70 == 1)
  {
    uint64_t v47 = type metadata accessor for MirrorView;
    uint64_t v46 = a1;
    sub_1005FD208(a1, (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MirrorView);
    uint64_t v24 = *(unsigned __int8 *)(v49 + 80);
    uint64_t v49 = a2;
    uint64_t v25 = (v24 + 16) & ~v24;
    uint64_t v45 = v25 + v13;
    uint64_t v48 = v7;
    uint64_t v44 = v24 | 7;
    uint64_t v26 = swift_allocObject();
    sub_1005FCAA8((uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
    sub_1000AFA94(&qword_100964F28);
    sub_1005FCBBC();
    Button.init(action:label:)();
    PlainButtonStyle.init()();
    uint64_t v43 = sub_1000A132C(&qword_100964F58, &qword_100964F10);
    uint64_t v42 = sub_1005FCE84(&qword_100961858, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    uint64_t v28 = v53;
    uint64_t v27 = v54;
    uint64_t v29 = v59;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v29);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v28);
    static CoordinateSpaceProtocol<>.local.getter();
    id v30 = v60;
    DragGesture.init<A>(minimumDistance:coordinateSpace:)();
    sub_1005FD208(v46, (uint64_t)v14, (uint64_t (*)(void))v47);
    uint64_t v31 = swift_allocObject() + v25;
    uint64_t v32 = v49;
    sub_1005FCAA8((uint64_t)v14, v31);
    sub_1005FCE84(&qword_10095C850, (void (*)(uint64_t))&type metadata accessor for DragGesture);
    sub_1005FCE84(&qword_10095C858, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
    uint64_t v34 = v62;
    uint64_t v33 = v63;
    Gesture<>.onChanged(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v30, v34);
    static GestureMask.all.getter();
    uint64_t v66 = v28;
    uint64_t v67 = v29;
    uint64_t v68 = v43;
    uint64_t v69 = v42;
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_10095C860, &qword_10095C808);
    unint64_t v35 = v52;
    uint64_t v36 = v57;
    uint64_t v37 = v48;
    View.simultaneousGesture<A>(_:including:)();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v33, v37);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v27, v36);
    a2 = v32;
    uint64_t v38 = v65;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v32, v35, v65);
    uint64_t v39 = 0;
    uint64_t v40 = v38;
  }
  else
  {
    uint64_t v39 = 1;
    uint64_t v40 = v65;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(a2, v39, 1, v40);
}

uint64_t sub_1005FC680@<X0>(uint64_t a1@<X8>)
{
  static Alignment.center.getter();
  sub_1004DE734(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v17, 0.0, 1, INFINITY, 0);
  char v2 = BYTE8(v17);
  uint64_t v15 = v18;
  uint64_t v16 = v17;
  char v3 = v19;
  uint64_t v4 = v20;
  char v5 = v21;
  uint64_t v6 = v22;
  char v7 = v23;
  uint64_t v8 = v24;
  char v9 = v25;
  char v10 = v27;
  uint64_t v13 = v28;
  uint64_t v14 = v26;
  uint64_t v12 = v29;
  uint64_t result = static Color.clear.getter();
  *(void *)a1 = v16;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v15;
  *(unsigned char *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = result;
  *(unsigned char *)(a1 + 120) = 0;
  return result;
}

void sub_1005FC7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static WOLog.dataLink.getter();
  char v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    char v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Dimming the screen", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __chkstk_darwin(v10);
  *(&v20 - 2) = a2;
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  swift_release();
  uint64_t v11 = self;
  id v12 = [v11 mainScreen];
  [v12 brightness];
  uint64_t v14 = v13;

  uint64_t v15 = (uint64_t *)(a2 + *(int *)(type metadata accessor for MirrorView() + 68));
  uint64_t v16 = *v15;
  char v17 = *((unsigned char *)v15 + 8);
  uint64_t v18 = v15[2];
  uint64_t v22 = v16;
  char v23 = v17;
  uint64_t v24 = v18;
  uint64_t v20 = v14;
  char v21 = 0;
  sub_1000AFA94(&qword_100964F60);
  State.wrappedValue.setter();
  id v19 = [v11 mainScreen];
  [v19 setBrightness:0.1];
}

uint64_t sub_1005FCA2C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1005FCAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005FCB0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MirrorView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1005F9D8C(a1, v6, a2);
}

uint64_t sub_1005FCB8C()
{
  return EnvironmentValues.legibilityWeight.getter();
}

unint64_t sub_1005FCBBC()
{
  unint64_t result = qword_100964F30;
  if (!qword_100964F30)
  {
    sub_1000A1370(&qword_100964F28);
    sub_1005FCC5C();
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964F30);
  }
  return result;
}

unint64_t sub_1005FCC5C()
{
  unint64_t result = qword_100964F38;
  if (!qword_100964F38)
  {
    sub_1000A1370(&qword_100964F40);
    sub_1005FCCFC();
    sub_1000A132C(&qword_10094E300, &qword_10094E308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964F38);
  }
  return result;
}

unint64_t sub_1005FCCFC()
{
  unint64_t result = qword_100964F48;
  if (!qword_100964F48)
  {
    sub_1000A1370(&qword_100964F50);
    sub_1003B3388();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964F48);
  }
  return result;
}

uint64_t sub_1005FCD7C()
{
  return sub_1005FB930();
}

void sub_1005FCDDC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MirrorView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_1005FC7C0(a1, v4);
}

uint64_t sub_1005FCE4C()
{
  return sub_1005FCA2C();
}

uint64_t sub_1005FCE6C()
{
  return sub_1005FD130();
}

uint64_t sub_1005FCE84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005FCED4()
{
  unint64_t result = qword_100964FB0;
  if (!qword_100964FB0)
  {
    sub_1000A1370(&qword_100964F88);
    sub_1005FCF74();
    sub_1000A132C(&qword_100964FC8, &qword_100964FD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964FB0);
  }
  return result;
}

unint64_t sub_1005FCF74()
{
  unint64_t result = qword_100964FB8;
  if (!qword_100964FB8)
  {
    sub_1000A1370(&qword_100964F80);
    sub_1000A132C(&qword_100964FC0, &qword_100964F78);
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964FB8);
  }
  return result;
}

uint64_t sub_1005FD040(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005FD078(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005FD0B0()
{
  return sub_1005FB780();
}

uint64_t sub_1005FD0D4()
{
  return sub_1006E9E18(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1005FD0F4()
{
  return sub_1006E9BF8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1005FD118()
{
  return sub_1005FD130();
}

uint64_t sub_1005FD130()
{
  return sub_1005FB720();
}

uint64_t sub_1005FD198()
{
  type metadata accessor for MirrorView();

  return sub_1005FB4DC();
}

uint64_t sub_1005FD208(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id *sub_1005FD270(id *a1)
{
  id v2 = *a1;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1005FD2C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void **sub_1005FD328(void **a1)
{
  id v2 = *a1;
  swift_release();
  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_1005FD37C()
{
  return sub_1005FB574();
}

uint64_t sub_1005FD398()
{
  return sub_1005FB398();
}

unint64_t sub_1005FD3B8()
{
  unint64_t result = qword_100964FF0;
  if (!qword_100964FF0)
  {
    sub_1000A1370(&qword_100964F08);
    sub_1000A1370(&qword_100964EE0);
    sub_1000A132C(&qword_100964F00, &qword_100964EE0);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100964FF8, &qword_10095BB88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100964FF0);
  }
  return result;
}

uint64_t sub_1005FD4B8()
{
  return sub_1005FD0F4();
}

uint64_t sub_1005FD4D0()
{
  return sub_1005FD0D4();
}

void sub_1005FD4E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (qword_10094A718 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)UILabel.withFont(_:)();
  char v7 = self;
  id v8 = [v7 secondaryLabelColor];
  char v9 = (void *)UILabel.withTextColor(_:)();

  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setText:v10];

  uint64_t v11 = (void *)UILabel.withFont(_:)();
  id v12 = [v7 secondaryLabelColor];
  uint64_t v13 = (void *)UILabel.withTextColor(_:)();

  uint64_t v14 = self;
  id v15 = [v14 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v18 = String._bridgeToObjectiveC()();
  [v13 setText:v18];

  swift_bridgeObjectRelease();
  if ([a3 supportsDistanceForWorkout:a1 workoutActivity:0])
  {
    id v19 = (void *)UILabel.withFont(_:)();
    id v20 = [v7 secondaryLabelColor];
    char v21 = (void *)UILabel.withTextColor(_:)();

    id v22 = [v14 mainBundle];
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [v22 localizedStringForKey:v23 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v25 = String._bridgeToObjectiveC()();
    [v21 setText:v25];

    swift_bridgeObjectRelease();
    uint64_t v26 = (void *)UILabel.withFont(_:)();
    id v27 = [v7 secondaryLabelColor];
    uint64_t v28 = (void *)UILabel.withTextColor(_:)();

    id v29 = [v14 mainBundle];
    NSString v30 = String._bridgeToObjectiveC()();
    id v31 = [v29 localizedStringForKey:v30 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v32 = String._bridgeToObjectiveC()();
    [v28 setText:v32];

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = a3;
    uint64_t v34 = (void *)UILabel.withFont(_:)();
    id v35 = [v7 secondaryLabelColor];
    uint64_t v36 = (void *)UILabel.withTextColor(_:)();

    if (a2 == 1)
    {
      id v37 = [v33 fitnessUIFormattingManager];
      NSString v38 = String._bridgeToObjectiveC()();
      id v39 = [v37 localizationKeyForEnergyBaseKey:v38];

      if (!v39)
      {
        __break(1u);
        return;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v40 = [v14 mainBundle];
      NSString v41 = String._bridgeToObjectiveC()();
      id v42 = [v40 localizedStringForKey:v41 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRelease();

      NSString v43 = String._bridgeToObjectiveC()();
      [v36 setText:v43];

      swift_bridgeObjectRelease();
      uint64_t v44 = (void *)UILabel.withFont(_:)();
      id v45 = [v7 secondaryLabelColor];
      uint64_t v46 = (void *)UILabel.withTextColor(_:)();

      NSString v32 = String._bridgeToObjectiveC()();
      [v46 setText:v32];
    }
    else
    {
      NSString v47 = String._bridgeToObjectiveC()();
      [v36 setText:v47];

      uint64_t v48 = (void *)UILabel.withFont(_:)();
      id v49 = [v7 secondaryLabelColor];
      uint64_t v46 = (void *)UILabel.withTextColor(_:)();

      NSString v32 = String._bridgeToObjectiveC()();
      [v46 setText:v32];
    }
  }
  [*(id *)(v4 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_separatorView) setHidden:1];

  sub_10026B10C();
}

id sub_1005FDDF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailFourColumnTrackLapTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailFourColumnTrackLapTableViewCell()
{
  return self;
}

void sub_1005FDE48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  uint64_t v8 = v7;
  if (a1)
  {
    id v14 = a1;
    id v55 = [a7 fitnessUIFormattingManager];
    sub_10032004C(a6 & 1);
    id v15 = self;
    id v16 = [objc_allocWithZone((Class)NSNumber) initWithInteger:[v14 lapIndex]];
    id v17 = [v15 localizedStringFromNumber:v16 numberStyle:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v18 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnOneLabel);
    NSString v19 = String._bridgeToObjectiveC()();
    [v18 setText:v19];
    swift_bridgeObjectRelease();

    NSString v20 = [v14 formattedDurationValueWithFormattingManager:v55];
    if (v20)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      char v21 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
      NSString v20 = String._bridgeToObjectiveC()();
    }
    else
    {
      char v21 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnThreeLabel);
    }
    [v21 setText:v20];
    swift_bridgeObjectRelease();

    if ([a7 supportsDistanceForWorkout:a2 workoutActivity:0])
    {
      id v22 = [v14 distance];
      if (v22)
      {
        NSString v23 = v22;
        id v24 = [self meterUnit];
        [v23 doubleValueForUnit:v24];
        double v26 = v25;
      }
      else
      {
        double v26 = 0.0;
      }
      id v34 = [v55 localizedStringWithDistanceInMeters:a3 distanceUnit:0 unitStyle:0 decimalPrecision:[self defaultPrecisionForDistanceUnit:0] roundingMode:2 decimalTrimmingMode:v26];
      if (!v34)
      {
LABEL_21:
        uint64_t v45 = FIUIPaceFormatForWorkoutActivityType();
        NSString v46 = [v14 formattedPaceUsingFormatType:v45 formattingManager:v55 distanceType:FIUIDistanceTypeForActivityType()];
        if (v46)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          NSString v47 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel);
          NSString v46 = String._bridgeToObjectiveC()();
        }
        else
        {
          NSString v47 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnFourLabel);
        }
        [v47 setText:v46];
        swift_bridgeObjectRelease();

        return;
      }
      id v35 = v34;
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v38 = v37;

      id v39 = [v55 localizedShortUnitStringForDistanceUnit:a3];
      if (v39)
      {
        id v40 = v39;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1000A06D0();
        uint64_t v41 = StringProtocol.localizedUppercase.getter();
        uint64_t v43 = v42;
        swift_bridgeObjectRelease();
        if (qword_10094A728 != -1) {
          swift_once();
        }
        id v44 = sub_10052463C(v36, v38, v41, v43, (void *)qword_1009978F8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        [*(id *)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel) setAttributedText:v44];

        goto LABEL_21;
      }
      __break(1u);
      goto LABEL_35;
    }
    if (a5 == 1)
    {
      id v27 = [v55 unitManager];
      if (!v27)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return;
      }
      uint64_t v28 = v27;
      id v29 = [v27 userActiveEnergyBurnedUnit];

      id v30 = [v14 formattedActiveEnergyValueForUnit:v29];
      if (v30)
      {
        id v31 = v30;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v33 = v32;
      }
      else
      {
        uint64_t v33 = 0;
      }
      uint64_t v48 = *(void **)(v8 + OBJC_IVAR___CHWorkoutDetailFourColumnTableViewCell_columnTwoLabel);
      id v49 = [self energyColors];
      if (!v49) {
        goto LABEL_36;
      }
      uint64_t v50 = v49;
      id v51 = [v49 nonGradientTextColor];

      [v48 setTextColor:v51];
      id v52 = v48;

      if (v33) {
        NSString v53 = String._bridgeToObjectiveC()();
      }
      else {
        NSString v53 = 0;
      }
      [v52 setText:v53];

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1005FD4E8(a2, a5, a7);
  }
}

uint64_t sub_1005FE484@<X0>(void *a1@<X1>, void *a2@<X2>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v417 = a4;
  id v472 = a3;
  id v473 = a2;
  id v474 = a1;
  uint64_t v479 = a5;
  uint64_t v5 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  v401 = (char *)&v396 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v442 = sub_1000AFA94(&qword_100965028);
  __chkstk_darwin(v442);
  v444 = (uint64_t *)((char *)&v396 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v439 = sub_1000AFA94(&qword_100965030);
  __chkstk_darwin(v439);
  v440 = (uint64_t *)((char *)&v396 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v443 = sub_1000AFA94(&qword_100952CD8);
  __chkstk_darwin(v443);
  v441 = (char *)&v396 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v462 = sub_1000AFA94(&qword_100952CC8);
  __chkstk_darwin(v462);
  v445 = (char *)&v396 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v434 = type metadata accessor for MirrorRaceMetricPlatterView();
  __chkstk_darwin(v434);
  v436 = (uint64_t *)((char *)&v396 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v438 = sub_1000AFA94(&qword_100952CE8);
  uint64_t v12 = __chkstk_darwin(v438);
  uint64_t v435 = (uint64_t)&v396 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v437 = (uint64_t)&v396 - v14;
  uint64_t v414 = type metadata accessor for MirrorPowerZonesMetricsPlatter();
  __chkstk_darwin(v414);
  v404 = (char *)&v396 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v410 = sub_1000AFA94(&qword_100952C70);
  uint64_t v16 = __chkstk_darwin(v410);
  uint64_t v403 = (uint64_t)&v396 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v405 = (uint64_t)&v396 - v18;
  uint64_t v459 = sub_1000AFA94(&qword_100965038);
  __chkstk_darwin(v459);
  uint64_t v461 = (uint64_t)&v396 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v455 = sub_1000AFA94(&qword_100965040);
  __chkstk_darwin(v455);
  v457 = (_OWORD *)((char *)&v396 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v407 = sub_1000AFA94(&qword_100965048);
  __chkstk_darwin(v407);
  uint64_t v408 = (uint64_t)&v396 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v456 = sub_1000AFA94(&qword_100952C48);
  __chkstk_darwin(v456);
  v409 = (char *)&v396 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v460 = sub_1000AFA94(&qword_100952C38);
  __chkstk_darwin(v460);
  v458 = (char *)&v396 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v478 = sub_1000AFA94(&qword_100952C28);
  __chkstk_darwin(v478);
  v463 = (char *)&v396 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v397 = type metadata accessor for MirrorSpeedometerPlatterView();
  __chkstk_darwin(v397);
  v399 = (uint64_t *)((char *)&v396 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v406 = sub_1000AFA94(&qword_100952C58);
  uint64_t v26 = __chkstk_darwin(v406);
  uint64_t v398 = (uint64_t)&v396 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v400 = (uint64_t)&v396 - v28;
  uint64_t v421 = type metadata accessor for MirrorHeartRateZonesMetricsPlatter();
  __chkstk_darwin(v421);
  v419 = (char *)&v396 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v448 = sub_1000AFA94(&qword_100952C10);
  uint64_t v30 = __chkstk_darwin(v448);
  uint64_t v418 = (uint64_t)&v396 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v420 = (uint64_t)&v396 - v32;
  uint64_t v446 = sub_1000AFA94(&qword_100965050);
  __chkstk_darwin(v446);
  v447 = (uint64_t *)((char *)&v396 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v453 = sub_1000AFA94(&qword_100952BD8);
  __chkstk_darwin(v453);
  v449 = (char *)&v396 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v425 = type metadata accessor for MirrorActivityRingsPlatterView();
  __chkstk_darwin(v425);
  v427 = (uint64_t *)((char *)&v396 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v432 = sub_1000AFA94(&qword_100952BC0);
  uint64_t v36 = __chkstk_darwin(v432);
  uint64_t v426 = (uint64_t)&v396 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v428 = (uint64_t)&v396 - v38;
  uint64_t v450 = sub_1000AFA94(&qword_100965058);
  __chkstk_darwin(v450);
  uint64_t v452 = (uint64_t)&v396 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v429 = sub_1000AFA94(&qword_100965060);
  __chkstk_darwin(v429);
  uint64_t v430 = (uint64_t)&v396 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v451 = sub_1000AFA94(&qword_100952BB0);
  __chkstk_darwin(v451);
  v431 = (char *)&v396 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v470 = sub_1000AFA94(&qword_100952BA0);
  __chkstk_darwin(v470);
  v454 = (char *)&v396 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v415 = type metadata accessor for MirrorGraphicsMetricsView();
  uint64_t v43 = __chkstk_darwin(v415);
  v412 = (uint64_t *)((char *)&v396 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v43);
  NSString v46 = (uint64_t *)((char *)&v396 - v45);
  uint64_t v433 = sub_1000AFA94(&qword_100952B88);
  uint64_t v47 = __chkstk_darwin(v433);
  uint64_t v411 = (uint64_t)&v396 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v413 = (uint64_t)&v396 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  NSString v53 = (char *)&v396 - v52;
  __chkstk_darwin(v51);
  uint64_t v402 = (uint64_t)&v396 - v54;
  uint64_t v422 = sub_1000AFA94(&qword_100965068);
  __chkstk_darwin(v422);
  v423 = (uint64_t *)((char *)&v396 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v465 = sub_1000AFA94(&qword_100952B78);
  __chkstk_darwin(v465);
  v424 = (char *)&v396 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v475 = sub_1000AFA94(&qword_100965070);
  __chkstk_darwin(v475);
  uint64_t v477 = (uint64_t)&v396 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v467 = sub_1000AFA94(&qword_100965078);
  __chkstk_darwin(v467);
  uint64_t v469 = (uint64_t)&v396 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v464 = sub_1000AFA94(&qword_100965080);
  __chkstk_darwin(v464);
  unsigned __int8 v60 = (char *)&v396 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v468 = sub_1000AFA94(&qword_100952B40);
  __chkstk_darwin(v468);
  v466 = (uint64_t *)((char *)&v396 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v476 = sub_1000AFA94(&qword_100952B30);
  __chkstk_darwin(v476);
  v471 = (uint64_t *)((char *)&v396 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = type metadata accessor for MetricPlatterType();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v67 = (char *)&v396 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __chkstk_darwin(v65);
  char v70 = (char *)&v396 - v69;
  __chkstk_darwin(v68);
  NSString v72 = (char *)&v396 - v71;
  MetricPlatter.type.getter();
  uint64_t v416 = v64;
  int v73 = (*(uint64_t (**)(char *, uint64_t))(v64 + 88))(v72, v63);
  if (v73 == enum case for MetricPlatterType.standard(_:) || v73 == enum case for MetricPlatterType.standardSecond(_:))
  {
    uint64_t v88 = MetricPlatter.metrics.getter();
    if (v88) {
      long long v89 = (void *)v88;
    }
    else {
      long long v89 = _swiftEmptyArrayStorage;
    }
    type metadata accessor for MetricsPublisher();
    sub_100602D04((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    id v90 = v472;
    id v91 = v473;
    swift_retain();
    uint64_t v92 = ObservedObject.init(wrappedValue:)();
    uint64_t v94 = v93;
    unsigned __int8 v95 = static Edge.Set.top.getter();
    if (qword_10094AFD8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v483 = v92;
    uint64_t v484 = v94;
    id v485 = v91;
    v486 = v89;
    id v487 = v90;
    unint64_t v488 = v95;
    id v489 = v96;
    uint64_t v490 = v97;
    uint64_t v491 = v98;
    uint64_t v492 = v99;
    LOWORD(v493) = 0;
    goto LABEL_13;
  }
  if (v73 == enum case for MetricPlatterType.interval(_:))
  {
    id v74 = v472;
    id v75 = v473;
    uint64_t v76 = (uint64_t)v474;
    swift_retain();
    MetricsPublisher.intervalsMetricsPublisher.getter();
    type metadata accessor for IntervalsMetricsPublisher();
    sub_100602D04(&qword_10095C408, (void (*)(uint64_t))&type metadata accessor for IntervalsMetricsPublisher);
    uint64_t v77 = ObservedObject.init(wrappedValue:)();
    char v79 = v78;
    MetricsPublisher.workoutStatePublisher.getter();
    type metadata accessor for WorkoutStatePublisher();
    sub_100602D04(&qword_10095C410, (void (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher);
    uint64_t v80 = ObservedObject.init(wrappedValue:)();
    uint64_t v82 = v81;
    unsigned __int8 v83 = static Edge.Set.top.getter();
    if (qword_10094AFE0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v483 = v76;
    uint64_t v484 = v77;
    id v485 = v79;
    v486 = (void *)v80;
    id v487 = v82;
    unint64_t v488 = (unint64_t)v75;
    id v489 = v74;
    uint64_t v490 = v83;
    uint64_t v491 = v84;
    uint64_t v492 = v85;
    uint64_t v493 = v86;
    uint64_t v494 = v87;
    uint64_t v495 = 0;
    __int16 v496 = 0;
LABEL_19:
    swift_retain();
    swift_retain();
    swift_retain();
    id v122 = v75;
    id v123 = v74;
    sub_1000AFA94(&qword_100952C98);
    sub_1000AFA94(&qword_100952CB0);
    sub_10027B30C();
    sub_10027B388();
    _ConditionalContent<>.init(storage:)();
    uint64_t v124 = v503;
    char v125 = v504;
    char v126 = v505;
    long long v127 = v498;
    long long v128 = v457;
    _OWORD *v457 = v497;
    v128[1] = v127;
    long long v129 = v500;
    v128[2] = v499;
    v128[3] = v129;
    long long v130 = v502;
    v128[4] = v501;
    v128[5] = v130;
    *((void *)v128 + 12) = v124;
    *((unsigned char *)v128 + 104) = v125;
    *((unsigned char *)v128 + 105) = v126;
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100952C88);
    sub_10027B0B4();
    sub_10027B248();
    uint64_t v131 = (uint64_t)v458;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v131, v461, &qword_100952C38);
    swift_storeEnumTagMultiPayload();
    sub_10027B078();
    sub_10027B404();
    uint64_t v132 = (uint64_t)v463;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v131, &qword_100952C38);
    sub_1000AEF2C(v132, v477, &qword_100952C28);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
    sub_1006029D8(&qword_100952C20, &qword_100952C28, (void (*)(void))sub_10027B078, (void (*)(void))sub_10027B404);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v132, &qword_100952C28);

    swift_release();
    swift_release();
    return swift_release();
  }
  if (v73 == enum case for MetricPlatterType.intervalSecond(_:))
  {
    sub_10040D768();
    id v75 = v473;
    uint64_t v108 = (uint64_t)v474;
    swift_retain();
    id v74 = (id)static FIUIWorkoutActivityType.outdoorCycle.getter();
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    uint64_t v110 = v109;
    swift_retain();
    MetricsPublisher.intervalsMetricsPublisher.getter();
    type metadata accessor for IntervalsMetricsPublisher();
    sub_100602D04(&qword_10095C408, (void (*)(uint64_t))&type metadata accessor for IntervalsMetricsPublisher);
    uint64_t v111 = ObservedObject.init(wrappedValue:)();
    uint64_t v113 = v112;
    MetricsPublisher.workoutStatePublisher.getter();
    type metadata accessor for WorkoutStatePublisher();
    sub_100602D04(&qword_10095C410, (void (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher);
    uint64_t v114 = ObservedObject.init(wrappedValue:)();
    uint64_t v116 = v115;
    swift_release();
    unsigned __int8 v117 = static Edge.Set.top.getter();
    if (qword_10094AFE0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v483 = v108;
    uint64_t v484 = v111;
    id v485 = v113;
    v486 = (void *)v114;
    id v487 = v116;
    unint64_t v488 = (unint64_t)v75;
    id v489 = v74;
    uint64_t v490 = v110;
    uint64_t v491 = v117;
    uint64_t v492 = v118;
    uint64_t v493 = v119;
    uint64_t v494 = v120;
    uint64_t v495 = v121;
    __int16 v496 = 256;
    goto LABEL_19;
  }
  if (v73 == enum case for MetricPlatterType.pacer(_:))
  {
    type metadata accessor for MetricsPublisher();
    sub_100602D04((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    id v134 = v472;
    id v135 = v473;
    swift_retain();
    uint64_t v136 = ObservedObject.init(wrappedValue:)();
    uint64_t v138 = v137;
    char v139 = static Edge.Set.top.getter();
    if (qword_10094AFE8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v141 = v140;
    uint64_t v143 = v142;
    uint64_t v145 = v144;
    uint64_t v147 = v146;
    char v148 = static Edge.Set.bottom.getter();
    if (qword_10094AFF0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    char v482 = 0;
    char v480 = 0;
    uint64_t v149 = v447;
    uint64_t *v447 = v136;
    v149[1] = v138;
    v149[2] = (uint64_t)v135;
    v149[3] = (uint64_t)v134;
    *((_OWORD *)v149 + 2) = xmmword_10076F690;
    *((_OWORD *)v149 + 3) = xmmword_10076F6A0;
    *((unsigned char *)v149 + 64) = v139;
    *(_DWORD *)((char *)v149 + 65) = v497;
    *((_DWORD *)v149 + 17) = *(_DWORD *)((char *)&v497 + 3);
    v149[9] = v141;
    v149[10] = v143;
    v149[11] = v145;
    v149[12] = v147;
    *((unsigned char *)v149 + 104) = 0;
    *((_DWORD *)v149 + 27) = *(_DWORD *)((char *)&v483 + 3);
    *(_DWORD *)((char *)v149 + 105) = v483;
    *((unsigned char *)v149 + 112) = v148;
    *((_DWORD *)v149 + 29) = *(_DWORD *)&v481[3];
    *(_DWORD *)((char *)v149 + 113) = *(_DWORD *)v481;
    v149[15] = v150;
    v149[16] = v151;
    v149[17] = v152;
    v149[18] = v153;
    *((unsigned char *)v149 + 152) = v480;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    id v154 = v135;
    id v155 = v134;
    sub_1000AFA94(&qword_100952BE8);
    sub_10027AEEC();
    sub_10027AF90();
    uint64_t v156 = (uint64_t)v449;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v156, v452, &qword_100952BD8);
    swift_storeEnumTagMultiPayload();
    sub_10027ADC8();
    sub_10027AEB0();
    uint64_t v157 = (uint64_t)v454;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v156, &qword_100952BD8);
    sub_1000AEF2C(v157, v469, &qword_100952BA0);
    swift_storeEnumTagMultiPayload();
    sub_10027AAF8();
    sub_10027AD8C();
    char v158 = v471;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v157, &qword_100952BA0);
    sub_1000AEF2C((uint64_t)v158, v477, &qword_100952B30);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
    sub_1006029D8(&qword_100952C20, &qword_100952C28, (void (*)(void))sub_10027B078, (void (*)(void))sub_10027B404);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v158, &qword_100952B30);

    return swift_release();
  }
  if (v73 == enum case for MetricPlatterType.race(_:))
  {
    type metadata accessor for MetricsPublisher();
    sub_100602D04((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    id v159 = v472;
    id v160 = v473;
    swift_retain();
    uint64_t v161 = ObservedObject.init(wrappedValue:)();
    uint64_t v162 = v436;
    uint64_t *v436 = v161;
    v162[1] = v163;
    v162[2] = (uint64_t)v160;
    v162[3] = (uint64_t)v159;
    MetricPlatterConstants.init()();
    char v164 = static Edge.Set.top.getter();
    if (qword_10094AFE8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v166 = v165;
    uint64_t v168 = v167;
    uint64_t v170 = v169;
    uint64_t v172 = v171;
    uint64_t v173 = v435;
    sub_100602D4C((uint64_t)v162, v435, (uint64_t (*)(void))type metadata accessor for MirrorRaceMetricPlatterView);
    uint64_t v174 = v173 + *(int *)(v438 + 36);
    *(unsigned char *)uint64_t v174 = v164;
    *(void *)(v174 + 8) = v166;
    *(void *)(v174 + 16) = v168;
    *(void *)(v174 + 24) = v170;
    *(void *)(v174 + 32) = v172;
    *(unsigned char *)(v174 + 40) = 0;
    sub_100602DB4((uint64_t)v162, (uint64_t (*)(void))type metadata accessor for MirrorRaceMetricPlatterView);
    uint64_t v175 = &qword_100952CE8;
    uint64_t v176 = v437;
    sub_1000AEEC8(v173, v437, &qword_100952CE8);
    sub_1000AEF2C(v176, (uint64_t)v440, &qword_100952CE8);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100952D00);
    sub_10027B4B8();
    sub_10027B564();
    uint64_t v177 = (uint64_t)v441;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v177, (uint64_t)v444, &qword_100952CD8);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952CD0, &qword_100952CD8, (void (*)(void))sub_10027B4B8, (void (*)(void))sub_10027B564);
    uint64_t v178 = (uint64_t)v445;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v177, &qword_100952CD8);
    sub_1000AEF2C(v178, v461, &qword_100952CC8);
    swift_storeEnumTagMultiPayload();
    sub_10027B078();
    sub_10027B404();
    uint64_t v179 = v463;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v178, &qword_100952CC8);
    int64_t v180 = &qword_100952C28;
    sub_1000AEF2C((uint64_t)v179, v477, &qword_100952C28);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
    goto LABEL_44;
  }
  if (v73 == enum case for MetricPlatterType.segment(_:))
  {
    uint64_t v181 = MetricPlatter.metrics.getter();
    if (v181) {
      uint64_t v182 = (void *)v181;
    }
    else {
      uint64_t v182 = _swiftEmptyArrayStorage;
    }
    type metadata accessor for MetricsPublisher();
    sub_100602D04((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    id v90 = v472;
    id v91 = v473;
    swift_retain();
    uint64_t v183 = ObservedObject.init(wrappedValue:)();
    uint64_t v185 = v184;
    unsigned __int8 v186 = static Edge.Set.top.getter();
    if (qword_10094AFD8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v483 = v183;
    uint64_t v484 = v185;
    id v485 = v91;
    v486 = v182;
    id v487 = v90;
    unint64_t v488 = v186;
    id v489 = v187;
    uint64_t v490 = v188;
    uint64_t v491 = v189;
    uint64_t v492 = v190;
    LOWORD(v493) = 256;
LABEL_13:
    id v100 = v90;
    id v101 = v91;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000AFA94(&qword_100952B60);
    sub_10027ABA8();
    _ConditionalContent<>.init(storage:)();
    char v102 = v502;
    char v103 = BYTE1(v502);
    long long v104 = v498;
    *(_OWORD *)unsigned __int8 v60 = v497;
    *((_OWORD *)v60 + 1) = v104;
    long long v105 = v500;
    *((_OWORD *)v60 + 2) = v499;
    *((_OWORD *)v60 + 3) = v105;
    *((_OWORD *)v60 + 4) = v501;
    v60[80] = v102;
    v60[81] = v103;
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100952B50);
    sub_10027AB34();
    sub_10027ACA4();
    uint64_t v106 = v466;
    _ConditionalContent<>.init(storage:)();
LABEL_14:
    sub_1000AEF2C((uint64_t)v106, v469, &qword_100952B40);
    swift_storeEnumTagMultiPayload();
    sub_10027AAF8();
    sub_10027AD8C();
    uint64_t v107 = v471;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v106, &qword_100952B40);
    sub_1000AEF2C((uint64_t)v107, v477, &qword_100952B30);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
    sub_1006029D8(&qword_100952C20, &qword_100952C28, (void (*)(void))sub_10027B078, (void (*)(void))sub_10027B404);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v107, &qword_100952B30);

    swift_bridgeObjectRelease();
    return swift_release();
  }
  if (v73 == enum case for MetricPlatterType.activityRings(_:))
  {
    MetricsPublisher.activitySummaryMetricsPublisher.getter();
    uint64_t v191 = v425;
    v192 = v427;
    id v193 = v473;
    MetricPlatter.type.getter();
    type metadata accessor for ActivitySummaryMetricsPublisher();
    sub_100602D04(&qword_10095E010, (void (*)(uint64_t))&type metadata accessor for ActivitySummaryMetricsPublisher);
    id v194 = v472;
    uint64_t *v192 = ObservedObject.init(wrappedValue:)();
    v192[1] = v195;
    v192[2] = (uint64_t)v193;
    *(uint64_t *)((char *)v192 + *(int *)(v191 + 28)) = (uint64_t)v194;
    uint64_t v196 = *(int *)(v191 + 32);
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    *(uint64_t *)((char *)v192 + v196) = v197;
    char v198 = static Edge.Set.top.getter();
    if (qword_10094AFE0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v200 = v199;
    uint64_t v202 = v201;
    uint64_t v204 = v203;
    uint64_t v206 = v205;
    uint64_t v207 = v426;
    sub_100602D4C((uint64_t)v192, v426, (uint64_t (*)(void))type metadata accessor for MirrorActivityRingsPlatterView);
    uint64_t v208 = v207 + *(int *)(v432 + 36);
    *(unsigned char *)uint64_t v208 = v198;
    *(void *)(v208 + 8) = v200;
    *(void *)(v208 + 16) = v202;
    *(void *)(v208 + 24) = v204;
    *(void *)(v208 + 32) = v206;
    *(unsigned char *)(v208 + 40) = 0;
    sub_100602DB4((uint64_t)v192, (uint64_t (*)(void))type metadata accessor for MirrorActivityRingsPlatterView);
    uint64_t v175 = &qword_100952BC0;
    uint64_t v176 = v428;
    sub_1000AEEC8(v207, v428, &qword_100952BC0);
    sub_1000AEF2C(v176, v430, &qword_100952BC0);
    swift_storeEnumTagMultiPayload();
    sub_10027ACE0();
    sub_10027AE04();
    uint64_t v209 = (uint64_t)v431;
LABEL_42:
    _ConditionalContent<>.init(storage:)();
    v210 = &qword_100952BB0;
    sub_1000AEF2C(v209, v452, &qword_100952BB0);
LABEL_43:
    swift_storeEnumTagMultiPayload();
    sub_10027ADC8();
    sub_10027AEB0();
    uint64_t v211 = (uint64_t)v454;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v209, v210);
    sub_1000AEF2C(v211, v469, &qword_100952BA0);
    swift_storeEnumTagMultiPayload();
    sub_10027AAF8();
    sub_10027AD8C();
    uint64_t v179 = v471;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v211, &qword_100952BA0);
    int64_t v180 = &qword_100952B30;
    sub_1000AEF2C((uint64_t)v179, v477, &qword_100952B30);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
LABEL_44:
    sub_1006029D8(&qword_100952C20, &qword_100952C28, (void (*)(void))sub_10027B078, (void (*)(void))sub_10027B404);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v179, v180);
    uint64_t v212 = v176;
    return sub_10008DB18(v212, v175);
  }
  if (v73 == enum case for MetricPlatterType.split(_:))
  {
    uint64_t v213 = MetricPlatter.metrics.getter();
    if (v213) {
      uint64_t v214 = (void *)v213;
    }
    else {
      uint64_t v214 = _swiftEmptyArrayStorage;
    }
    type metadata accessor for MetricsPublisher();
    sub_100602D04((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    id v215 = v472;
    id v216 = v473;
    swift_retain();
    uint64_t v217 = ObservedObject.init(wrappedValue:)();
    uint64_t v219 = v218;
    char v220 = static Edge.Set.top.getter();
    if (qword_10094AFD8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v221 = v423;
    uint64_t *v423 = v217;
    v221[1] = v219;
    v221[2] = (uint64_t)v216;
    v221[3] = (uint64_t)v214;
    v221[4] = (uint64_t)v215;
    *((unsigned char *)v221 + 40) = v220;
    v221[6] = v222;
    v221[7] = v223;
    v221[8] = v224;
    v221[9] = v225;
    *((unsigned char *)v221 + 80) = 0;
    swift_storeEnumTagMultiPayload();
    id v100 = v215;
    id v101 = v216;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000AFA94(&qword_100952B60);
    sub_10027ABA8();
    sub_10027ACE0();
    uint64_t v226 = (uint64_t)v424;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v226, (uint64_t)v60, &qword_100952B78);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100952B50);
    sub_10027AB34();
    sub_10027ACA4();
    uint64_t v106 = v466;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v226, &qword_100952B78);
    goto LABEL_14;
  }
  if (v73 == enum case for MetricPlatterType.heartRateZones(_:))
  {
    uint64_t v227 = MetricPlatter.metrics.getter();
    uint64_t v228 = _swiftEmptyArrayStorage;
    if (v227) {
      uint64_t v228 = (void *)v227;
    }
    v466 = v228;
    uint64_t v229 = v421;
    uint64_t v230 = v419;
    id v472 = v472;
    id v473 = v473;
    id v231 = v474;
    swift_retain();
    MetricPlatterConstants.init()();
    uint64_t v465 = *(int *)(v229 + 40);
    sub_1000AFA94(qword_1009650A0);
    uint64_t v232 = type metadata accessor for WorkoutViewStyle();
    uint64_t v233 = *(void *)(v232 - 8);
    uint64_t v234 = *(void *)(v233 + 72);
    unint64_t v235 = (*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80);
    uint64_t v236 = swift_allocObject();
    *(_OWORD *)(v236 + 16) = xmmword_1007526C0;
    unint64_t v237 = v236 + v235;
    uint64_t v238 = *(void (**)(unint64_t, uint64_t, uint64_t))(v233 + 104);
    v238(v237, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v232);
    v238(v237 + v234, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v232);
    uint64_t v239 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
    v238(v237 + 2 * v234, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v232);
    unint64_t v240 = v237 + 3 * v234;
    uint64_t v241 = (uint64_t)v230;
    v238(v240, v239, v232);
    *(void *)((char *)v230 + v465) = v236;
    *uint64_t v230 = v231;
    swift_retain();
    MetricsPublisher.heartRateMetricsPublisher.getter();
    type metadata accessor for HeartRateMetricsPublisher();
    sub_100602D04(&qword_1009535A0, (void (*)(uint64_t))&type metadata accessor for HeartRateMetricsPublisher);
    v230[1] = ObservedObject.init(wrappedValue:)();
    v230[2] = v242;
    id v243 = v473;
    id v244 = v472;
    v230[3] = v473;
    v230[4] = v244;
    id v245 = v244;
    id v246 = v243;
    uint64_t v247 = sub_1005641C8(v466);
    swift_bridgeObjectRelease();
    swift_release();

    *(void *)(v241 + *(int *)(v421 + 36)) = v247;
    char v248 = static Edge.Set.top.getter();
    if (qword_10094AFE8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v250 = v249;
    uint64_t v252 = v251;
    uint64_t v254 = v253;
    uint64_t v256 = v255;
    uint64_t v257 = v418;
    sub_100602D4C(v241, v418, (uint64_t (*)(void))type metadata accessor for MirrorHeartRateZonesMetricsPlatter);
    uint64_t v258 = v257 + *(int *)(v448 + 36);
    *(unsigned char *)uint64_t v258 = v248;
    *(void *)(v258 + 8) = v250;
    *(void *)(v258 + 16) = v252;
    *(void *)(v258 + 24) = v254;
    *(void *)(v258 + 32) = v256;
    *(unsigned char *)(v258 + 40) = 0;
    sub_100602DB4(v241, (uint64_t (*)(void))type metadata accessor for MirrorHeartRateZonesMetricsPlatter);
    uint64_t v175 = &qword_100952C10;
    uint64_t v176 = v420;
    sub_1000AEEC8(v257, v420, &qword_100952C10);
    sub_1000AEF2C(v176, (uint64_t)v447, &qword_100952C10);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100952BE8);
    sub_10027AEEC();
    sub_10027AF90();
    uint64_t v209 = (uint64_t)v449;
    _ConditionalContent<>.init(storage:)();
    v210 = &qword_100952BD8;
    sub_1000AEF2C(v209, v452, &qword_100952BD8);
    goto LABEL_43;
  }
  if (v73 == enum case for MetricPlatterType.multisport(_:))
  {
    type metadata accessor for MetricsPublisher();
    sub_100602D04((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    id v259 = v473;
    swift_retain();
    uint64_t v470 = ObservedObject.init(wrappedValue:)();
    id v472 = v260;
    id v261 = v259;
    MetricsPublisher.multisportMetricsPublisher.getter();
    type metadata accessor for MultisportMetricsPublisher();
    sub_100602D04(&qword_100965088, (void (*)(uint64_t))&type metadata accessor for MultisportMetricsPublisher);
    uint64_t v262 = ObservedObject.init(wrappedValue:)();
    id v473 = v263;
    MetricsPublisher.energyMetricsPublisher.getter();
    type metadata accessor for EnergyMetricsPublisher();
    sub_100602D04(&qword_100965090, (void (*)(uint64_t))&type metadata accessor for EnergyMetricsPublisher);
    uint64_t v469 = ObservedObject.init(wrappedValue:)();
    v471 = v264;
    MetricsPublisher.heartRateMetricsPublisher.getter();
    type metadata accessor for HeartRateMetricsPublisher();
    sub_100602D04(&qword_1009535A0, (void (*)(uint64_t))&type metadata accessor for HeartRateMetricsPublisher);
    uint64_t v468 = ObservedObject.init(wrappedValue:)();
    uint64_t v266 = v265;
    MetricsPublisher.lapsMetricsPublisher.getter();
    type metadata accessor for LapsMetricsPublisher();
    sub_100602D04(&qword_100965098, (void (*)(uint64_t))&type metadata accessor for LapsMetricsPublisher);
    uint64_t v267 = ObservedObject.init(wrappedValue:)();
    uint64_t v269 = v268;
    MetricsPublisher.workoutStatePublisher.getter();
    type metadata accessor for WorkoutStatePublisher();
    sub_100602D04(&qword_10095C410, (void (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher);
    uint64_t v270 = ObservedObject.init(wrappedValue:)();
    uint64_t v272 = v271;
    v273 = v261;

    char v274 = static Edge.Set.top.getter();
    if (qword_10094AFE0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    LOBYTE(v483) = 0;
    v275 = v440;
    uint64_t *v440 = v262;
    uint64_t v276 = v469;
    v275[1] = (uint64_t)v473;
    _DWORD v275[2] = v276;
    uint64_t v277 = v468;
    v275[3] = (uint64_t)v471;
    v275[4] = v277;
    v275[5] = v266;
    v275[6] = v267;
    v275[7] = v269;
    v275[8] = v270;
    uint64_t v278 = v470;
    v275[9] = v272;
    v275[10] = v278;
    v275[11] = (uint64_t)v472;
    v275[12] = (uint64_t)v273;
    v275[13] = v417;
    *((unsigned char *)v275 + 112) = v274;
    *((_DWORD *)v275 + 29) = *(_DWORD *)((char *)&v497 + 3);
    *(_DWORD *)((char *)v275 + 113) = v497;
    v275[15] = v279;
    v275[16] = v280;
    v275[17] = v281;
    v275[18] = v282;
    *((unsigned char *)v275 + 152) = v483;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v474 = v273;
    sub_1000AFA94(&qword_100952D00);
    sub_10027B4B8();
    sub_10027B564();
    uint64_t v283 = (uint64_t)v441;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v283, (uint64_t)v444, &qword_100952CD8);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952CD0, &qword_100952CD8, (void (*)(void))sub_10027B4B8, (void (*)(void))sub_10027B564);
    uint64_t v284 = (uint64_t)v445;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v283, &qword_100952CD8);
    sub_1000AEF2C(v284, v461, &qword_100952CC8);
    swift_storeEnumTagMultiPayload();
    sub_10027B078();
    sub_10027B404();
    uint64_t v285 = (uint64_t)v463;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v284, &qword_100952CC8);
    sub_1000AEF2C(v285, v477, &qword_100952C28);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
    sub_1006029D8(&qword_100952C20, &qword_100952C28, (void (*)(void))sub_10027B078, (void (*)(void))sub_10027B404);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v285, &qword_100952C28);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (v73 == enum case for MetricPlatterType.power(_:))
  {
    MetricPlatter.type.getter();
    uint64_t v286 = MetricPlatter.metrics.getter();
    if (v286) {
      v287 = (void *)v286;
    }
    else {
      v287 = _swiftEmptyArrayStorage;
    }
    id v288 = [self wattUnit];
    v289 = (int *)v415;
    v290 = v412;
    static WorkoutChartProperties.power(unit:)();

    type metadata accessor for MetricsPublisher();
    sub_100602D04((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    id v291 = v472;
    id v292 = v473;
    swift_retain();
    uint64_t *v290 = ObservedObject.init(wrappedValue:)();
    v290[1] = v293;
    v290[2] = (uint64_t)v292;
    (*(void (**)(char *, char *, uint64_t))(v416 + 32))((char *)v290 + v289[6], v70, v63);
    *(uint64_t *)((char *)v290 + v289[7]) = (uint64_t)v287;
    *(uint64_t *)((char *)v290 + v289[9]) = (uint64_t)v291;
    char v294 = static Edge.Set.top.getter();
    if (qword_10094AFE8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v296 = v295;
    uint64_t v298 = v297;
    uint64_t v300 = v299;
    uint64_t v302 = v301;
    uint64_t v303 = v411;
    sub_100602D4C((uint64_t)v290, v411, (uint64_t (*)(void))type metadata accessor for MirrorGraphicsMetricsView);
    uint64_t v304 = v303 + *(int *)(v433 + 36);
    *(unsigned char *)uint64_t v304 = v294;
    *(void *)(v304 + 8) = v296;
    *(void *)(v304 + 16) = v298;
    *(void *)(v304 + 24) = v300;
    *(void *)(v304 + 32) = v302;
    *(unsigned char *)(v304 + 40) = 0;
    sub_100602DB4((uint64_t)v290, (uint64_t (*)(void))type metadata accessor for MirrorGraphicsMetricsView);
    uint64_t v175 = &qword_100952B88;
    uint64_t v176 = v413;
    sub_1000AEEC8(v303, v413, &qword_100952B88);
    sub_1000AEF2C(v176, v430, &qword_100952B88);
    swift_storeEnumTagMultiPayload();
    sub_10027ACE0();
    sub_10027AE04();
    uint64_t v209 = (uint64_t)v431;
    goto LABEL_42;
  }
  if (v73 == enum case for MetricPlatterType.powerZones(_:))
  {
    uint64_t v305 = MetricPlatter.metrics.getter();
    v306 = _swiftEmptyArrayStorage;
    if (v305) {
      v306 = (void *)v305;
    }
    v471 = v306;
    uint64_t v307 = v414;
    v308 = v404;
    id v472 = v472;
    id v473 = v473;
    id v309 = v474;
    swift_retain();
    MetricPlatterConstants.init()();
    uint64_t v470 = *(int *)(v307 + 40);
    sub_1000AFA94(qword_1009650A0);
    uint64_t v310 = type metadata accessor for WorkoutViewStyle();
    uint64_t v311 = *(void *)(v310 - 8);
    uint64_t v312 = *(void *)(v311 + 72);
    unint64_t v313 = (*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80);
    uint64_t v314 = swift_allocObject();
    *(_OWORD *)(v314 + 16) = xmmword_1007526C0;
    unint64_t v315 = v314 + v313;
    v316 = *(void (**)(unint64_t, uint64_t, uint64_t))(v311 + 104);
    v316(v315, enum case for WorkoutViewStyle.iOSHeroMetric(_:), v310);
    v316(v315 + v312, enum case for WorkoutViewStyle.iOSNormalMetric(_:), v310);
    uint64_t v317 = enum case for WorkoutViewStyle.iOSSmallMetric(_:);
    v316(v315 + 2 * v312, enum case for WorkoutViewStyle.iOSSmallMetric(_:), v310);
    unint64_t v318 = v315 + 3 * v312;
    uint64_t v319 = (uint64_t)v308;
    v316(v318, v317, v310);
    *(void *)((char *)v308 + v470) = v314;
    void *v308 = v309;
    swift_retain();
    MetricsPublisher.powerMetricsPublisher.getter();
    type metadata accessor for PowerMetricsPublisher();
    sub_100602D04(&qword_100953598, (void (*)(uint64_t))&type metadata accessor for PowerMetricsPublisher);
    v308[1] = ObservedObject.init(wrappedValue:)();
    v308[2] = v320;
    id v321 = v473;
    id v322 = v472;
    v308[3] = v473;
    v308[4] = v322;
    id v323 = v322;
    id v324 = v321;
    v325 = sub_10060D2FC(v471);
    swift_bridgeObjectRelease();
    swift_release();

    *(void *)(v319 + *(int *)(v414 + 36)) = v325;
    char v326 = static Edge.Set.top.getter();
    if (qword_10094AFE8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v328 = v327;
    uint64_t v330 = v329;
    uint64_t v332 = v331;
    uint64_t v334 = v333;
    uint64_t v335 = v403;
    sub_100602D4C(v319, v403, (uint64_t (*)(void))type metadata accessor for MirrorPowerZonesMetricsPlatter);
    uint64_t v336 = v335 + *(int *)(v410 + 36);
    *(unsigned char *)uint64_t v336 = v326;
    *(void *)(v336 + 8) = v328;
    *(void *)(v336 + 16) = v330;
    *(void *)(v336 + 24) = v332;
    *(void *)(v336 + 32) = v334;
    *(unsigned char *)(v336 + 40) = 0;
    sub_100602DB4(v319, (uint64_t (*)(void))type metadata accessor for MirrorPowerZonesMetricsPlatter);
    uint64_t v175 = &qword_100952C70;
    uint64_t v337 = v405;
    sub_1000AEEC8(v335, v405, &qword_100952C70);
    sub_1000AEF2C(v337, v408, &qword_100952C70);
    swift_storeEnumTagMultiPayload();
    sub_10027B0F0();
    sub_10027B19C();
    uint64_t v338 = (uint64_t)v409;
LABEL_84:
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v338, (uint64_t)v457, &qword_100952C48);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100952C88);
    sub_10027B0B4();
    sub_10027B248();
    uint64_t v379 = (uint64_t)v458;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v338, &qword_100952C48);
    sub_1000AEF2C(v379, v461, &qword_100952C38);
    swift_storeEnumTagMultiPayload();
    sub_10027B078();
    sub_10027B404();
    v356 = v463;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v379, &qword_100952C38);
    v357 = &qword_100952C28;
    sub_1000AEF2C((uint64_t)v356, v477, &qword_100952C28);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
LABEL_85:
    sub_1006029D8(&qword_100952C20, &qword_100952C28, (void (*)(void))sub_10027B078, (void (*)(void))sub_10027B404);
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v356, v357);
    uint64_t v212 = v337;
    return sub_10008DB18(v212, v175);
  }
  if (v73 == enum case for MetricPlatterType.elevation(_:))
  {
    uint64_t v339 = v415;
    id v340 = v473;
    swift_retain();
    MetricPlatter.type.getter();
    v341 = (void *)MetricsPublisher.elevationChartUnit.getter();
    static WorkoutChartProperties.elevation(unit:)();

    type metadata accessor for MetricsPublisher();
    sub_100602D04((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    id v342 = v472;
    *NSString v46 = ObservedObject.init(wrappedValue:)();
    v46[1] = v343;
    v46[2] = (uint64_t)v340;
    *(uint64_t *)((char *)v46 + *(int *)(v339 + 28)) = (uint64_t)&off_1008B36F8;
    *(uint64_t *)((char *)v46 + *(int *)(v339 + 36)) = (uint64_t)v342;
    char v344 = static Edge.Set.top.getter();
    if (qword_10094AFE8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v346 = v345;
    uint64_t v348 = v347;
    uint64_t v350 = v349;
    uint64_t v352 = v351;
    sub_100602D4C((uint64_t)v46, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for MirrorGraphicsMetricsView);
    v353 = &v53[*(int *)(v433 + 36)];
    char *v353 = v344;
    *((void *)v353 + 1) = v346;
    *((void *)v353 + 2) = v348;
    *((void *)v353 + 3) = v350;
    *((void *)v353 + 4) = v352;
    v353[40] = 0;
    sub_100602DB4((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for MirrorGraphicsMetricsView);
    uint64_t v175 = &qword_100952B88;
    uint64_t v337 = v402;
    sub_1000AEEC8((uint64_t)v53, v402, &qword_100952B88);
    sub_1000AEF2C(v337, (uint64_t)v423, &qword_100952B88);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100952B60);
    sub_10027ABA8();
    sub_10027ACE0();
    uint64_t v354 = (uint64_t)v424;
    _ConditionalContent<>.init(storage:)();
    sub_1000AEF2C(v354, (uint64_t)v60, &qword_100952B78);
    swift_storeEnumTagMultiPayload();
    sub_1000AFA94(&qword_100952B50);
    sub_10027AB34();
    sub_10027ACA4();
    v355 = v466;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18(v354, &qword_100952B78);
    sub_1000AEF2C((uint64_t)v355, v469, &qword_100952B40);
    swift_storeEnumTagMultiPayload();
    sub_10027AAF8();
    sub_10027AD8C();
    v356 = v471;
    _ConditionalContent<>.init(storage:)();
    sub_10008DB18((uint64_t)v355, &qword_100952B40);
    v357 = &qword_100952B30;
    sub_1000AEF2C((uint64_t)v356, v477, &qword_100952B30);
    swift_storeEnumTagMultiPayload();
    sub_1006029D8(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
    goto LABEL_85;
  }
  if (v73 == enum case for MetricPlatterType.speedometer(_:))
  {
    v358 = (int *)v397;
    v359 = v399;
    id v360 = v473;
    swift_retain();
    MetricPlatter.type.getter();
    *(uint64_t *)((char *)v359 + v358[9]) = 0x402BC71C72268E09;
    *(uint64_t *)((char *)v359 + v358[10]) = 0x402AD288CE703AFBLL;
    uint64_t v361 = v358[11];
    id v362 = v472;
    static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
    *(uint64_t *)((char *)v359 + v361) = v363;
    type metadata accessor for MetricsPublisher();
    sub_100602D04((unint64_t *)&qword_100953590, (void (*)(uint64_t))&type metadata accessor for MetricsPublisher);
    swift_retain();
    uint64_t *v359 = ObservedObject.init(wrappedValue:)();
    v359[1] = v364;
    MetricsPublisher.workoutStatePublisher.getter();
    type metadata accessor for WorkoutStatePublisher();
    sub_100602D04(&qword_10095C410, (void (*)(uint64_t))&type metadata accessor for WorkoutStatePublisher);
    uint64_t v365 = ObservedObject.init(wrappedValue:)();
    uint64_t v367 = v366;
    swift_release();
    v359[2] = v365;
    v359[3] = v367;
    v359[4] = (uint64_t)v360;
    *(uint64_t *)((char *)v359 + v358[8]) = (uint64_t)v362;
    char v368 = static Edge.Set.top.getter();
    if (qword_10094AFE0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v370 = v369;
    uint64_t v372 = v371;
    uint64_t v374 = v373;
    uint64_t v376 = v375;
    uint64_t v377 = v398;
    sub_100602D4C((uint64_t)v359, v398, (uint64_t (*)(void))type metadata accessor for MirrorSpeedometerPlatterView);
    uint64_t v378 = v377 + *(int *)(v406 + 36);
    *(unsigned char *)uint64_t v378 = v368;
    *(void *)(v378 + 8) = v370;
    *(void *)(v378 + 16) = v372;
    *(void *)(v378 + 24) = v374;
    *(void *)(v378 + 32) = v376;
    *(unsigned char *)(v378 + 40) = 0;
    sub_100602DB4((uint64_t)v359, (uint64_t (*)(void))type metadata accessor for MirrorSpeedometerPlatterView);
    uint64_t v175 = &qword_100952C58;
    uint64_t v337 = v400;
    sub_1000AEEC8(v377, v400, &qword_100952C58);
    sub_1000AEF2C(v337, v408, &qword_100952C58);
    swift_storeEnumTagMultiPayload();
    sub_10027B0F0();
    sub_10027B19C();
    uint64_t v338 = (uint64_t)v409;
    goto LABEL_84;
  }
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v380._countAndFlagsBits = 0x2072657474616C50;
  v380._object = (void *)0xE800000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v380);
  MetricPlatter.type.getter();
  uint64_t v381 = MetricPlatterType.rawValue.getter();
  v383 = v382;
  v384 = *(void **)(v416 + 8);
  v416 += 8;
  id v474 = v384;
  ((void (*)(char *, uint64_t))v384)(v67, v63);
  v385._countAndFlagsBits = v381;
  v385._object = v383;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v385);
  swift_bridgeObjectRelease();
  v386._object = (void *)0x80000001007D13A0;
  v386._countAndFlagsBits = 0xD000000000000010;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v386);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v387 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v389 = v388;
  v390 = v444;
  uint64_t *v444 = v387;
  v390[1] = v388;
  char v392 = v391 & 1;
  *((unsigned char *)v390 + 16) = v391 & 1;
  v390[3] = (uint64_t)v393;
  id v473 = v393;
  swift_storeEnumTagMultiPayload();
  sub_1000A1750(v387, v389, v392);
  sub_1006029D8(&qword_100952CD0, &qword_100952CD8, (void (*)(void))sub_10027B4B8, (void (*)(void))sub_10027B564);
  swift_bridgeObjectRetain();
  uint64_t v394 = (uint64_t)v445;
  _ConditionalContent<>.init(storage:)();
  sub_1000AEF2C(v394, v461, &qword_100952CC8);
  swift_storeEnumTagMultiPayload();
  sub_10027B078();
  sub_10027B404();
  uint64_t v395 = (uint64_t)v463;
  _ConditionalContent<>.init(storage:)();
  sub_10008DB18(v394, &qword_100952CC8);
  sub_1000AEF2C(v395, v477, &qword_100952C28);
  swift_storeEnumTagMultiPayload();
  sub_1006029D8(&qword_100952B28, &qword_100952B30, (void (*)(void))sub_10027AAF8, (void (*)(void))sub_10027AD8C);
  sub_1006029D8(&qword_100952C20, &qword_100952C28, (void (*)(void))sub_10027B078, (void (*)(void))sub_10027B404);
  _ConditionalContent<>.init(storage:)();
  sub_10008DB18(v395, &qword_100952C28);
  sub_1000A06C0(v387, v389, v392);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v474)(v72, v63);
}

uint64_t sub_100602958(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006029D8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100602A60()
{
  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_100998630 = v1;
  return result;
}

uint64_t sub_100602AA4()
{
  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_100998638 = v1;
  return result;
}

uint64_t sub_100602AE8()
{
  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_100998640 = v1;
  return result;
}

uint64_t sub_100602B34()
{
  uint64_t v0 = self;
  id v1 = [v0 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v2 = [v0 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v3 = [v0 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v4 = [v0 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v5 = [v0 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  id v6 = [v0 currentDevice];
  UIDevice.isLargeDisplayZoomEnabled.getter();

  uint64_t result = static LayoutUtilities.layoutMetric(compact38:regular42:junior40:senior44:aloeSmall41:aloeBig45:agave49:)();
  qword_100998648 = v8;
  return result;
}

uint64_t sub_100602D04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100602D4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100602DB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100602E14()
{
  sub_1005B8590();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_100602ED0(uint64_t *a1, uint64_t *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    id v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for LayoutDirection();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *id v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[9];
    uint64_t v10 = a3[10];
    uint64_t v11 = (uint64_t *)((char *)v4 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    *(uint64_t *)((char *)v4 + v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v14 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    uint64_t v15 = a3[13];
    uint64_t v16 = a3[14];
    uint64_t v17 = (char *)v4 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(void *)uint64_t v17 = *(void *)v18;
    uint64_t v19 = *((void *)v18 + 3);
    *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
    *((void *)v17 + 3) = v19;
    uint64_t v20 = (uint64_t *)((char *)v4 + v16);
    uint64_t v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10060306C(uint64_t a1)
{
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100603140(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[9];
  uint64_t v8 = a3[10];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
  uint64_t v12 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[13];
  uint64_t v14 = a3[14];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = *((void *)v16 + 3);
  *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
  *((void *)v15 + 3) = v17;
  uint64_t v18 = (void *)((char *)a1 + v14);
  uint64_t v19 = (void *)((char *)a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100603290(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_100968CD0);
    sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v10 = a3[13];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *(void *)((char *)a2 + v10);
  v11[1] = *(void *)((char *)a2 + v10 + 8);
  swift_retain();
  swift_release();
  uint64_t v13 = *((void *)v12 + 3);
  v11[2] = *((void *)v12 + 2);
  v11[3] = v13;
  swift_retain();
  swift_release();
  uint64_t v14 = a3[14];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100603430(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[13];
  uint64_t v11 = a3[14];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  return a1;
}

char *sub_10060353C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_100968CD0);
    uint64_t v6 = sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[9];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;
  swift_unknownObjectRelease();
  uint64_t v13 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v14 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)&a2[v14];
  *((void *)v15 + 1) = *(void *)&a2[v14 + 8];
  swift_release();
  *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
  swift_release();
  uint64_t v17 = a3[14];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_release();
  return a1;
}

uint64_t sub_1006036B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006036C8);
}

uint64_t sub_1006036C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_100961500);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100603790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006037A4);
}

uint64_t sub_1006037A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_100961500);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutDetailColumnMetricView()
{
  return sub_100049E84();
}

uint64_t sub_100603880()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1006038C4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24);
  swift_unknownObjectRetain();
  uint64_t v5 = v4(v3, v2);
  swift_unknownObjectRelease();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    double v6 = 0.0;
    if (v5)
    {
      uint64_t v7 = 0;
      uint64_t v8 = *(double (**)(uint64_t, uint64_t, uint64_t))(v2 + 56);
      double v9 = *(double *)(v12 + *(int *)(a1 + 48));
      do
      {
        swift_unknownObjectRetain();
        double v10 = v8(v7, v3, v2);
        swift_unknownObjectRelease();
        double v6 = v6 + v9 + v10;
        ++v7;
      }
      while (v5 != v7);
    }
    id v11 = [self mainScreen];
    [v11 bounds];
  }
}

double sub_100603A34(uint64_t a1)
{
  sub_1000AFA94(&qword_100965138);
  GestureState.wrappedValue.getter();
  sub_1000AFA94(&qword_10095C7F0);
  State.wrappedValue.getter();
  double v2 = v8 + v8;
  sub_1006038C4(a1);
  if (v8 + v8 >= v3)
  {
    if (v2 > 0.0) {
      return pow(v2, 0.7);
    }
  }
  else
  {
    sub_1006038C4(a1);
    double v5 = v4;
    sub_1006038C4(a1);
    return v5 - pow(v6 - v2, 0.7);
  }
  return v2;
}

uint64_t sub_100603B50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  NSString v53 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  uint64_t v6 = type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin(v6);
  uint64_t v49 = type metadata accessor for DragGesture();
  uint64_t v7 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000AFA94(&qword_100965128);
  __chkstk_darwin(v54);
  double v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100965130);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  __chkstk_darwin(v11);
  uint64_t v50 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  uint64_t v13 = *(int *)(a1 + 52);
  uint64_t v46 = v2;
  uint64_t v14 = (uint64_t *)(v2 + v13);
  uint64_t v15 = v14[1];
  uint64_t v55 = *v14;
  uint64_t v56 = v15;
  long long v57 = *((_OWORD *)v14 + 1);
  sub_1000AFA94(&qword_100965138);
  GestureState.projectedValue.getter();
  uint64_t v16 = v58;
  uint64_t v41 = v59;
  long long v40 = v60;
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47(v39, v2, a1);
  uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v18 = (v17 + 32) & ~v17;
  uint64_t v44 = v17 | 7;
  uint64_t v45 = v18 + v5;
  uint64_t v19 = swift_allocObject();
  uint64_t v42 = *(void *)(a1 + 16);
  uint64_t v43 = *(void *)(a1 + 24);
  uint64_t v20 = v43;
  *(void *)(v19 + 16) = v42;
  *(void *)(v19 + 24) = v20;
  uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v21(v19 + v18, (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v22 = v48;
  uint64_t v23 = v49;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v48, v49);
  uint64_t v24 = v54;
  uint64_t v25 = &v10[*(int *)(v54 + 44)];
  *(void *)uint64_t v25 = v16;
  *((void *)v25 + 1) = v41;
  *((_OWORD *)v25 + 1) = v40;
  uint64_t v26 = (uint64_t (**)(uint64_t, double *))&v10[*(int *)(v24 + 48)];
  *uint64_t v26 = sub_100607B10;
  v26[1] = (uint64_t (*)(uint64_t, double *))v19;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v23);
  uint64_t v27 = v39;
  uint64_t v28 = v46;
  v47(v39, v46, a1);
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v42;
  uint64_t v31 = v43;
  *(void *)(v29 + 16) = v42;
  *(void *)(v29 + 24) = v31;
  v21(v29 + v18, v27, a1);
  sub_1000A132C(&qword_100965140, &qword_100965128);
  uint64_t v32 = (uint64_t)v50;
  Gesture.onEnded(_:)();
  swift_release();
  sub_10008DB18((uint64_t)v10, &qword_100965128);
  uint64_t v33 = static HorizontalAlignment.leading.getter();
  uint64_t v34 = v53;
  *NSString v53 = v33;
  v34[1] = 0;
  *((unsigned char *)v34 + 16) = 1;
  uint64_t v35 = v34;
  uint64_t v36 = sub_1000AFA94(&qword_100965148);
  sub_1006043C0(v28, v32, v30, v31, (uint64_t)v35 + *(int *)(v36 + 44));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v32, v52);
}

uint64_t sub_10060405C(uint64_t a1, double *a2)
{
  uint64_t v3 = type metadata accessor for LayoutDirection();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1004E7AB8((uint64_t)&v14 - v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for LayoutDirection.leftToRight(_:), v3);
  char v10 = static LayoutDirection.== infix(_:_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  uint64_t result = DragGesture.Value.translation.getter();
  if ((v10 & 1) == 0) {
    double v13 = -v13;
  }
  *a2 = v13;
  return result;
}

uint64_t sub_1006041BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LayoutDirection();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  sub_1004E7AB8((uint64_t)&v22 - v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for LayoutDirection.leftToRight(_:), v3);
  char v10 = static LayoutDirection.== infix(_:_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  uint64_t v12 = type metadata accessor for WorkoutDetailColumnMetricView();
  double v13 = (uint64_t *)(a2 + *(int *)(v12 + 56));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v23 = *v13;
  uint64_t v24 = v15;
  sub_1000AFA94(&qword_10095C7F0);
  State.wrappedValue.getter();
  double v16 = v25;
  DragGesture.Value.translation.getter();
  if ((v10 & 1) == 0) {
    double v17 = -v17;
  }
  double v18 = v16 + v17;
  if (v18 <= 0.0) {
    double v19 = v18;
  }
  else {
    double v19 = 0.0;
  }
  sub_1006038C4(v12);
  uint64_t v23 = v14;
  if (v19 > v20) {
    double v20 = v19;
  }
  uint64_t v24 = v15;
  double v25 = v20;
  return State.wrappedValue.setter();
}

uint64_t sub_1006043C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = a2;
  uint64_t v7 = type metadata accessor for PlainListStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100965150);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_100965158);
  uint64_t v15 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  double v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a3;
  uint64_t v26 = v21;
  uint64_t v27 = a1;
  sub_1000AFA94(&qword_100965160);
  sub_100607F34(&qword_100965168, &qword_100965160, (void (*)(void))sub_100607C50);
  List<>.init(content:)();
  PlainListStyle.init()();
  uint64_t v18 = sub_1000A132C(&qword_100965220, &qword_100965150);
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  static GestureMask.all.getter();
  sub_1000AFA94(&qword_100965130);
  uint64_t v28 = v11;
  uint64_t v29 = v7;
  uint64_t v30 = v18;
  uint64_t v31 = &protocol witness table for PlainListStyle;
  swift_getOpaqueTypeConformance2();
  sub_1000A132C(&qword_100965228, &qword_100965130);
  uint64_t v19 = v22;
  View.gesture<A>(_:including:)();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v19);
}

uint64_t sub_100604720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  char v10 = (char *)v14 - v9;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a3 + 16))(a2, a3, v8);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v14[0] = 0;
    v14[1] = result;
    swift_getKeyPath();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
    unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, v10, v6);
    sub_1000AFA94(&qword_10094E360);
    sub_1000AFA94(&qword_100965178);
    sub_1001C5704();
    sub_100607C50();
    return ForEach<>.init(_:id:content:)();
  }
  return result;
}

uint64_t sub_100604904@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v50 = a5;
  uint64_t v41 = sub_1000AFA94(&qword_1009651A8);
  __chkstk_darwin(v41);
  uint64_t v40 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100965198);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  __chkstk_darwin(v10);
  uint64_t v43 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1000AFA94(&qword_100965180);
  __chkstk_darwin(v45);
  uint64_t v44 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100965230);
  uint64_t v48 = *(void *)(v13 - 8);
  uint64_t v49 = v13;
  __chkstk_darwin(v13);
  uint64_t v42 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = *a1;
  double v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32);
  swift_unknownObjectRetain();
  uint64_t v21 = v20(v19, a3, a4);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a2, v15);
  if (v21 < 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    goto LABEL_5;
  }
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 24);
  swift_unknownObjectRetain();
  uint64_t v23 = v22(a3, a4);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v23 <= 0)
  {
LABEL_5:
    uint64_t v37 = 1;
    uint64_t v34 = v49;
    uint64_t v36 = v50;
    uint64_t v35 = v48;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v36, v37, 1, v34);
  }
  uint64_t v24 = sub_100604E5C(v19, v15, v40);
  __chkstk_darwin(v24);
  *(&v39 - 4) = a3;
  *(&v39 - 3) = a4;
  *(&v39 - 2) = a2;
  *(&v39 - 1) = v19;
  sub_1000AFA94(&qword_1009651D8);
  sub_10060808C(&qword_1009651A0, &qword_1009651A8, (void (*)(void))sub_100607E70);
  sub_100607F34(&qword_1009651D0, &qword_1009651D8, (void (*)(void))sub_100607FAC);
  uint64_t v25 = v43;
  Section<>.init(header:content:)();
  id v26 = [self systemBackgroundColor];
  uint64_t v27 = Color.init(_:)();
  char v28 = static Edge.Set.all.getter();
  uint64_t v30 = v46;
  uint64_t v29 = v47;
  uint64_t v31 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v44, v25, v47);
  uint64_t v32 = v31 + *(int *)(v45 + 36);
  *(void *)uint64_t v32 = v27;
  *(unsigned char *)(v32 + 8) = v28;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v29);
  static VerticalEdge.Set.all.getter();
  sub_100607CF8();
  uint64_t v33 = v42;
  View.listSectionSeparator(_:edges:)();
  sub_10008DB18(v31, &qword_100965180);
  uint64_t v35 = v48;
  uint64_t v34 = v49;
  uint64_t v36 = v50;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v50, v33, v49);
  uint64_t v37 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v36, v37, 1, v34);
}

uint64_t sub_100604E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1000AFA94(&qword_1009651C8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_1009651B8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = static HorizontalAlignment.leading.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v14 = sub_1000AFA94(&qword_100965288);
  sub_10060592C(v3, a1, *(void *)(a2 + 16), *(void *)(a2 + 24), &v9[*(int *)(v14 + 44)]);
  sub_1000AEF2C((uint64_t)v9, (uint64_t)v13, &qword_1009651C8);
  uint64_t v15 = &v13[*(int *)(v11 + 44)];
  v15[32] = 0;
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  sub_10008DB18((uint64_t)v9, &qword_1009651C8);
  char v16 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_1000AEF2C((uint64_t)v13, a3, &qword_1009651B8);
  uint64_t v25 = a3 + *(int *)(sub_1000AFA94(&qword_1009651A8) + 36);
  *(unsigned char *)uint64_t v25 = v16;
  *(void *)(v25 + 8) = v18;
  *(void *)(v25 + 16) = v20;
  *(void *)(v25 + 24) = v22;
  *(void *)(v25 + 32) = v24;
  *(unsigned char *)(v25 + 40) = 0;
  return sub_10008DB18((uint64_t)v13, &qword_1009651B8);
}

uint64_t sub_10060501C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v9 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v20 = a1;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32);
  swift_unknownObjectRetain();
  uint64_t v21 = a2;
  uint64_t v15 = v14(a2, a3, a4);
  uint64_t result = swift_unknownObjectRelease();
  if (v15 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v24 = v15;
    swift_getKeyPath();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v20, v9);
    unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a3;
    *(void *)(v18 + 24) = a4;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, v13, v9);
    *(void *)(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
    sub_1000AFA94(&qword_10094E360);
    sub_1000AFA94(&qword_1009651E8);
    sub_1001C5704();
    sub_100607FAC();
    return ForEach<>.init(_:id:content:)();
  }
  return result;
}

uint64_t sub_100605244@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v49 = a5;
  uint64_t v46 = sub_1000AFA94(&qword_100965238);
  __chkstk_darwin(v46);
  uint64_t v48 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100965208);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000AFA94(&qword_1009651F0);
  __chkstk_darwin(v47);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v44 = (uint64_t)&v39 - v15;
  uint64_t v45 = sub_1000AFA94(&qword_100965240);
  uint64_t v42 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v40 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v41 = (char *)&v39 - v18;
  uint64_t v19 = *a1;
  uint64_t v20 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 72);
  swift_unknownObjectRetain();
  LOBYTE(a3) = v21(a3, a4);
  swift_unknownObjectRelease();
  if ((a3 & 1) == 0 || v19)
  {
    sub_100605824(v19, v43, v20, (uint64_t)v11);
    id v33 = [self mainScreen];
    [v33 bounds];

    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_1000AEF2C((uint64_t)v11, (uint64_t)v13, &qword_100965208);
    uint64_t v34 = v47;
    uint64_t v35 = &v13[*(int *)(v47 + 36)];
    long long v36 = v53;
    *(_OWORD *)uint64_t v35 = v52;
    *((_OWORD *)v35 + 1) = v36;
    *((_OWORD *)v35 + 2) = v54;
    sub_10008DB18((uint64_t)v11, &qword_100965208);
    uint64_t v37 = v44;
    sub_1000AEEC8((uint64_t)v13, v44, &qword_1009651F0);
    sub_1000AEF2C(v37, v48, &qword_1009651F0);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = sub_10060808C(&qword_1009651F8, &qword_1009651F0, (void (*)(void))sub_100608108);
    uint64_t v50 = v34;
    uint64_t v51 = v38;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18(v37, &qword_1009651F0);
  }
  else
  {
    sub_100605824(0, v43, v20, (uint64_t)v11);
    id v22 = [self mainScreen];
    [v22 bounds];

    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v23 = v44;
    sub_1000AEF2C((uint64_t)v11, v44, &qword_100965208);
    uint64_t v24 = v47;
    uint64_t v25 = (_OWORD *)(v23 + *(int *)(v47 + 36));
    long long v26 = v53;
    *uint64_t v25 = v52;
    v25[1] = v26;
    v25[2] = v54;
    sub_10008DB18((uint64_t)v11, &qword_100965208);
    static Color.gray.getter();
    static VerticalEdge.Set.all.getter();
    uint64_t v27 = sub_10060808C(&qword_1009651F8, &qword_1009651F0, (void (*)(void))sub_100608108);
    char v28 = v40;
    View.listRowSeparatorTint(_:edges:)();
    swift_release();
    sub_10008DB18(v23, &qword_1009651F0);
    uint64_t v30 = v41;
    uint64_t v29 = v42;
    uint64_t v31 = v45;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v28, v45);
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v48, v30, v31);
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = v24;
    uint64_t v51 = v27;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  }
}

uint64_t sub_100605824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1000AFA94(&qword_100965218);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v13 = sub_1000AFA94(&qword_100965248);
  sub_10060724C(v5, a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), &v12[*(int *)(v13 + 44)]);
  sub_1000AEF2C((uint64_t)v12, a4, &qword_100965218);
  uint64_t v14 = a4 + *(int *)(sub_1000AFA94(&qword_100965208) + 36);
  *(unsigned char *)(v14 + 32) = 0;
  *(_OWORD *)uint64_t v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  return sub_10008DB18((uint64_t)v12, &qword_100965218);
}

uint64_t sub_10060592C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v7 = a2;
  uint64_t v65 = a2;
  uint64_t v68 = a1;
  id v75 = a5;
  uint64_t v8 = sub_1000AFA94(&qword_100965290);
  __chkstk_darwin(v8 - 8);
  uint64_t v71 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000AFA94(&qword_100965298) - 8;
  __chkstk_darwin(v74);
  uint64_t v72 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v73 = (uint64_t)&v62 - v12;
  uint64_t v66 = type metadata accessor for DynamicTypeSize();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000AFA94(&qword_1009652A0);
  uint64_t v70 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v63 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v69 = (char *)&v62 - v17;
  uint64_t v67 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 40);
  swift_unknownObjectRetain();
  uint64_t v19 = v18(v7, a3, a4);
  uint64_t v21 = v20;
  swift_unknownObjectRelease();
  *(void *)&long long v77 = v19;
  *((void *)&v77 + 1) = v21;
  sub_1000A06D0();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  static Font.headline.getter();
  uint64_t v27 = Text.font(_:)();
  uint64_t v29 = v28;
  char v31 = v30;
  swift_release();
  LOBYTE(v7) = v31 & 1;
  sub_1000A06C0(v22, v24, v26);
  swift_bridgeObjectRelease();
  static Color.white.getter();
  uint64_t v32 = Text.foregroundColor(_:)();
  uint64_t v34 = v33;
  char v36 = v35;
  uint64_t v38 = v37;
  swift_release();
  sub_1000A06C0(v27, v29, v7);
  swift_bridgeObjectRelease();
  LOBYTE(v27) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  *(void *)&long long v77 = v32;
  *((void *)&v77 + 1) = v34;
  LOBYTE(v78) = v36 & 1;
  *((void *)&v78 + 1) = v38;
  LOBYTE(v79) = v27;
  *((void *)&v79 + 1) = v39;
  uint64_t v80 = v40;
  uint64_t v81 = v41;
  uint64_t v82 = v42;
  char v83 = 0;
  uint64_t v43 = v64;
  uint64_t v44 = v66;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v14, enum case for DynamicTypeSize.large(_:), v66);
  sub_1000AFA94(&qword_1009510D0);
  sub_1002190D0((unint64_t *)&qword_1009510C8, &qword_1009510D0);
  uint64_t v45 = v63;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v44);
  sub_1000A06C0(v77, *((uint64_t *)&v77 + 1), v78);
  swift_bridgeObjectRelease();
  uint64_t v46 = v70;
  uint64_t v47 = v69;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v69, v45, v76);
  uint64_t v48 = v71;
  sub_100605F7C(v67, v71);
  id v49 = [self mainScreen];
  [v49 bounds];

  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v50 = v72;
  sub_1000AEF2C(v48, v72, &qword_100965290);
  uint64_t v51 = (_OWORD *)(v50 + *(int *)(v74 + 44));
  long long v52 = v78;
  *uint64_t v51 = v77;
  v51[1] = v52;
  v51[2] = v79;
  sub_10008DB18(v48, &qword_100965290);
  uint64_t v53 = v73;
  sub_1000AEEC8(v50, v73, &qword_100965298);
  long long v54 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  uint64_t v55 = v47;
  uint64_t v56 = v47;
  uint64_t v57 = v76;
  v54(v45, v55, v76);
  sub_1000AEF2C(v53, v50, &qword_100965298);
  uint64_t v58 = v75;
  v54(v75, v45, v57);
  uint64_t v59 = sub_1000AFA94(&qword_1009652A8);
  sub_1000AEF2C(v50, (uint64_t)&v58[*(int *)(v59 + 48)], &qword_100965298);
  sub_10008DB18(v53, &qword_100965298);
  long long v60 = *(void (**)(char *, uint64_t))(v46 + 8);
  v60(v56, v57);
  sub_10008DB18(v50, &qword_100965298);
  return ((uint64_t (*)(char *, uint64_t))v60)(v45, v57);
}

uint64_t sub_100605F7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AFA94(&qword_1009652B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static VerticalAlignment.bottom.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v9 = sub_1000AFA94(&qword_1009652B8);
  sub_10060606C(v3, *(void *)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v8[*(int *)(v9 + 44)]);
  sub_1000AEF2C((uint64_t)v8, a2, &qword_1009652B0);
  uint64_t v10 = a2 + *(int *)(sub_1000AFA94(&qword_100965290) + 36);
  *(unsigned char *)(v10 + 32) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  return sub_10008DB18((uint64_t)v8, &qword_1009652B0);
}

uint64_t sub_10060606C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v67 = a4;
  uint64_t v7 = sub_1000AFA94(&qword_1009652C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v64 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AFA94(&qword_1009652C8) - 8;
  __chkstk_darwin(v66);
  uint64_t v63 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v65 = (uint64_t)&v51 - v11;
  uint64_t v54 = type metadata accessor for AttributedString();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_1009652D0);
  __chkstk_darwin(v14 - 8);
  uint64_t v51 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000AFA94(&qword_1009652D8) - 8;
  __chkstk_darwin(v56);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000AFA94(&qword_1009652E0) - 8;
  __chkstk_darwin(v57);
  uint64_t v55 = (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000AFA94(&qword_1009652E8) - 8;
  __chkstk_darwin(v62);
  uint64_t v59 = (uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000AFA94(&qword_1009652F0) - 8;
  __chkstk_darwin(v61);
  uint64_t v58 = (uint64_t)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v60 = (uint64_t)&v51 - v22;
  uint64_t v23 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v24 = *(void (**)(void, uint64_t, uint64_t))(a3 + 48);
  swift_unknownObjectRetain();
  uint64_t v52 = a2;
  uint64_t v25 = a3;
  v24(0, a2, a3);
  swift_unknownObjectRelease();
  uint64_t v26 = v51;
  sub_100606734((uint64_t)v13, v23, v51);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v54);
  uint64_t v27 = a1;
  uint64_t v28 = *(void (**)(void, uint64_t, uint64_t))(a3 + 56);
  swift_unknownObjectRetain();
  uint64_t v29 = v25;
  v28(0, a2, v25);
  swift_unknownObjectRelease();
  static Alignment.bottomLeading.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000AEF2C(v26, (uint64_t)v17, &qword_1009652D0);
  char v30 = &v17[*(int *)(v56 + 44)];
  long long v31 = v69;
  *(_OWORD *)char v30 = v68;
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v70;
  sub_10008DB18(v26, &qword_1009652D0);
  uint64_t v32 = *(void *)(v27 + *(int *)(v23 + 40));
  uint64_t v33 = *(void *)(v27 + *(int *)(v23 + 48));
  char v34 = static Edge.Set.all.getter();
  uint64_t v35 = v55;
  sub_1000AEF2C((uint64_t)v17, v55, &qword_1009652D8);
  uint64_t v36 = v35 + *(int *)(v57 + 44);
  *(unsigned char *)uint64_t v36 = v34;
  *(void *)(v36 + 8) = 0;
  *(void *)(v36 + 16) = v32;
  *(void *)(v36 + 24) = 0;
  *(void *)(v36 + 32) = v33;
  *(unsigned char *)(v36 + 40) = 0;
  sub_10008DB18((uint64_t)v17, &qword_1009652D8);
  id v37 = [self systemBackgroundColor];
  uint64_t v38 = Color.init(_:)();
  LOBYTE(v32) = static Edge.Set.all.getter();
  uint64_t v39 = v59;
  sub_1000AEF2C(v35, v59, &qword_1009652E0);
  uint64_t v40 = v39 + *(int *)(v62 + 44);
  *(void *)uint64_t v40 = v38;
  *(unsigned char *)(v40 + 8) = v32;
  sub_10008DB18(v35, &qword_1009652E0);
  uint64_t v41 = v58;
  sub_1000AEF2C(v39, v58, &qword_1009652E8);
  *(void *)(v41 + *(int *)(v61 + 44)) = 0x3FF0000000000000;
  sub_10008DB18(v39, &qword_1009652E8);
  uint64_t v42 = v60;
  sub_1000AEEC8(v41, v60, &qword_1009652F0);
  uint64_t v43 = v64;
  sub_100606798(v27, v52, v29, v64);
  double v44 = sub_100603A34(v23);
  uint64_t v45 = v63;
  sub_1000AEF2C(v43, v63, &qword_1009652C0);
  uint64_t v46 = (double *)(v45 + *(int *)(v66 + 44));
  *uint64_t v46 = v44;
  v46[1] = 0.0;
  sub_10008DB18(v43, &qword_1009652C0);
  uint64_t v47 = v65;
  sub_1000AEEC8(v45, v65, &qword_1009652C8);
  sub_1000AEF2C(v42, v41, &qword_1009652F0);
  sub_1000AEF2C(v47, v45, &qword_1009652C8);
  uint64_t v48 = v67;
  sub_1000AEF2C(v41, v67, &qword_1009652F0);
  uint64_t v49 = sub_1000AFA94(&qword_1009652F8);
  sub_1000AEF2C(v45, v48 + *(int *)(v49 + 48), &qword_1009652C8);
  sub_10008DB18(v47, &qword_1009652C8);
  sub_10008DB18(v42, &qword_1009652F0);
  sub_10008DB18(v45, &qword_1009652C8);
  return sub_10008DB18(v41, &qword_1009652F0);
}

uint64_t sub_100606734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = static HorizontalAlignment.center.getter();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t v7 = sub_1000AFA94(&qword_100965318);
  return sub_100606CEC(a1, v3, *(void *)(a2 + 16), *(void *)(a2 + 24), (void *)(a3 + *(int *)(v7 + 44)));
}

uint64_t sub_100606798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v16[1] = a4;
  uint64_t v7 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v16 - v9;
  v16[0] = a1;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  swift_unknownObjectRetain();
  uint64_t v12 = v11(a2, a3);
  uint64_t result = swift_unknownObjectRelease();
  if (v12 < 1)
  {
    __break(1u);
  }
  else
  {
    v16[2] = 1;
    v16[3] = v12;
    swift_getKeyPath();
    (*(void (**)(char *, void, uint64_t))(v8 + 16))(v10, v16[0], v7);
    unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v10, v7);
    sub_1000AFA94(&qword_10094E360);
    sub_1000AFA94(&qword_1009652E0);
    sub_1001C5704();
    sub_10060808C(&qword_100965300, &qword_1009652E0, (void (*)(void))sub_100608828);
    return ForEach<>.init(_:id:content:)();
  }
  return result;
}

uint64_t sub_1006069CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v39 = a4;
  uint64_t v7 = type metadata accessor for AttributedString();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_1009652D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_1009652D8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v36 = (uint64_t)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v34 = a2;
  uint64_t v16 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 48);
  swift_unknownObjectRetain();
  v17(v15, a2, a3);
  swift_unknownObjectRelease();
  uint64_t v18 = v35;
  sub_100606734((uint64_t)v9, v16, v35);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 56);
  swift_unknownObjectRetain();
  v19(v15, v34, a3);
  swift_unknownObjectRelease();
  static Alignment.bottomLeading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v20 = v36;
  sub_1000AEF2C(v18, v36, &qword_1009652D0);
  uint64_t v21 = (_OWORD *)(v20 + *(int *)(v13 + 44));
  long long v22 = v41;
  _OWORD *v21 = v40;
  v21[1] = v22;
  v21[2] = v42;
  sub_10008DB18(v18, &qword_1009652D0);
  LOBYTE(v9) = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = v39;
  sub_1000AEF2C(v20, v39, &qword_1009652D8);
  uint64_t v32 = v31 + *(int *)(sub_1000AFA94(&qword_1009652E0) + 36);
  *(unsigned char *)uint64_t v32 = (_BYTE)v9;
  *(void *)(v32 + 8) = v24;
  *(void *)(v32 + 16) = v26;
  *(void *)(v32 + 24) = v28;
  *(void *)(v32 + 32) = v30;
  *(unsigned char *)(v32 + 40) = 0;
  return sub_10008DB18(v20, &qword_1009652D8);
}

uint64_t sub_100606CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v74 = a2;
  id v75 = a5;
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000AFA94(&qword_10095EBE8);
  uint64_t v66 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v64 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000AFA94(&qword_10095EBF0);
  __chkstk_darwin(v63);
  long long v69 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000AFA94(&qword_10095EBF8);
  __chkstk_darwin(v65);
  uint64_t v70 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AFA94(&qword_100965320);
  __chkstk_darwin(v67);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v71 = (uint64_t)&v62 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a1, v6, v16);
  uint64_t v18 = Text.init(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  if (qword_10094A718 != -1) {
    swift_once();
  }
  id v23 = (id)qword_1009978E8;
  Font.init(_:)();
  uint64_t v24 = Text.font(_:)();
  uint64_t v26 = v25;
  char v28 = v27;
  uint64_t v30 = v29;
  swift_release();
  v28 &= 1u;
  sub_1000A06C0(v18, v20, v22 & 1);
  swift_bridgeObjectRelease();
  uint64_t v76 = v24;
  uint64_t v77 = v26;
  char v78 = v28;
  uint64_t v79 = v30;
  uint64_t v31 = v64;
  View.hyphenationFactor(_:)();
  sub_1000A06C0(v24, v26, v28);
  swift_bridgeObjectRelease();
  id v32 = [self secondaryLabelColor];
  uint64_t v33 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = v66;
  uint64_t v36 = v68;
  uint64_t v37 = (uint64_t)v69;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v69, v31, v68);
  uint64_t v38 = (uint64_t *)(v37 + *(int *)(v63 + 36));
  *uint64_t v38 = KeyPath;
  v38[1] = v33;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v36);
  LOBYTE(v33) = static Edge.Set.bottom.getter();
  type metadata accessor for WorkoutDetailColumnMetricView();
  EdgeInsets.init(_all:)();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v47 = v70;
  sub_1000AEF2C(v37, v70, &qword_10095EBF0);
  uint64_t v48 = v47 + *(int *)(v65 + 36);
  *(unsigned char *)uint64_t v48 = v33;
  *(void *)(v48 + 8) = v40;
  *(void *)(v48 + 16) = v42;
  *(void *)(v48 + 24) = v44;
  *(void *)(v48 + 32) = v46;
  *(unsigned char *)(v48 + 40) = 0;
  sub_10008DB18(v37, &qword_10095EBF0);
  LOBYTE(v33) = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  sub_1000AEF2C(v47, (uint64_t)v14, &qword_10095EBF8);
  uint64_t v57 = &v14[*(int *)(v67 + 36)];
  char *v57 = v33;
  *((void *)v57 + 1) = v50;
  *((void *)v57 + 2) = v52;
  *((void *)v57 + 3) = v54;
  *((void *)v57 + 4) = v56;
  v57[40] = 0;
  sub_10008DB18(v47, &qword_10095EBF8);
  uint64_t v58 = v71;
  sub_1000AEEC8((uint64_t)v14, v71, &qword_100965320);
  sub_1000AEF2C(v58, (uint64_t)v14, &qword_100965320);
  uint64_t v59 = v75;
  *id v75 = 0;
  *((unsigned char *)v59 + 8) = 1;
  uint64_t v60 = sub_1000AFA94(&qword_100965328);
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v59 + *(int *)(v60 + 48), &qword_100965320);
  sub_10008DB18(v58, &qword_100965320);
  return sub_10008DB18((uint64_t)v14, &qword_100965320);
}

uint64_t sub_10060724C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v60 = a2;
  uint64_t v11 = sub_1000AFA94(&qword_100965250);
  __chkstk_darwin(v11 - 8);
  uint64_t v54 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000AFA94(&qword_100965258) - 8;
  __chkstk_darwin(v55);
  uint64_t v53 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v57 = (uint64_t)&v44 - v15;
  uint64_t v16 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v17 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(a5 + 64);
  swift_unknownObjectRetain();
  uint64_t v44 = a4;
  uint64_t v52 = v17(v60, 0, a3, a4, a5);
  swift_unknownObjectRelease();
  uint64_t v18 = *(void (**)(void, uint64_t, uint64_t))(a5 + 56);
  swift_unknownObjectRetain();
  v18(0, a4, a5);
  swift_unknownObjectRelease();
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v19 = v61;
  uint64_t v45 = v61;
  unsigned __int8 v20 = v62;
  LOBYTE(v17) = v64;
  uint64_t v47 = v63;
  uint64_t v48 = v65;
  uint64_t v56 = v66;
  uint64_t v21 = *(void *)(a1 + *(int *)(v16 + 40));
  uint64_t v50 = *(void *)(a1 + *(int *)(v16 + 48));
  uint64_t v51 = v21;
  int v46 = static Edge.Set.all.getter();
  id v22 = [self systemBackgroundColor];
  uint64_t v59 = Color.init(_:)();
  int v58 = static Edge.Set.all.getter();
  unsigned __int8 v74 = v20;
  unsigned __int8 v72 = v17;
  unsigned __int8 v69 = 0;
  uint64_t v23 = v54;
  sub_100607754(a1, v60, v49, v44, a5, v54);
  double v24 = sub_100603A34(v16);
  uint64_t v25 = v23;
  uint64_t v26 = v23;
  uint64_t v27 = v53;
  sub_1000AEF2C(v25, v53, &qword_100965250);
  char v28 = (double *)(v27 + *(int *)(v55 + 44));
  *char v28 = v24;
  v28[1] = 0.0;
  sub_10008DB18(v26, &qword_100965250);
  uint64_t v29 = v57;
  sub_1000AEEC8(v27, v57, &qword_100965258);
  LOBYTE(v26) = v74;
  LODWORD(v54) = v74;
  LOBYTE(v16) = v72;
  LODWORD(v55) = v72;
  unsigned __int8 v30 = v69;
  LODWORD(v60) = v69;
  sub_1000AEF2C(v29, v27, &qword_100965258);
  uint64_t v31 = v52;
  *(void *)&long long v75 = v52;
  *((void *)&v75 + 1) = v19;
  LOBYTE(v76) = v26;
  *(_DWORD *)((char *)&v76 + 1) = *(_DWORD *)v73;
  DWORD1(v76) = *(_DWORD *)&v73[3];
  uint64_t v32 = v47;
  uint64_t v33 = v48;
  *((void *)&v76 + 1) = v47;
  LOBYTE(v77) = v16;
  *(_DWORD *)((char *)&v77 + 1) = *(_DWORD *)v71;
  DWORD1(v77) = *(_DWORD *)&v71[3];
  *((void *)&v77 + 1) = v48;
  *(void *)&long long v78 = v56;
  LOBYTE(v16) = v46;
  BYTE8(v78) = v46;
  HIDWORD(v78) = *(_DWORD *)&v70[3];
  *(_DWORD *)((char *)&v78 + 9) = *(_DWORD *)v70;
  uint64_t v35 = v50;
  uint64_t v34 = v51;
  *(void *)&long long v79 = 0;
  *((void *)&v79 + 1) = v51;
  *(void *)&long long v80 = 0;
  *((void *)&v80 + 1) = v50;
  LOBYTE(v81) = v30;
  *(_DWORD *)((char *)&v81 + 1) = *(_DWORD *)v68;
  DWORD1(v81) = *(_DWORD *)&v68[3];
  *((void *)&v81 + 1) = v59;
  LOBYTE(v82) = v58;
  DWORD1(v82) = *(_DWORD *)&v67[3];
  *(_DWORD *)((char *)&v82 + 1) = *(_DWORD *)v67;
  *((void *)&v82 + 1) = 0x3FF0000000000000;
  long long v36 = v75;
  long long v37 = v76;
  long long v38 = v78;
  a6[2] = v77;
  a6[3] = v38;
  *a6 = v36;
  a6[1] = v37;
  long long v39 = v79;
  long long v40 = v80;
  long long v41 = v82;
  a6[6] = v81;
  a6[7] = v41;
  a6[4] = v39;
  a6[5] = v40;
  uint64_t v42 = sub_1000AFA94(&qword_100965260);
  sub_1000AEF2C(v27, (uint64_t)a6 + *(int *)(v42 + 48), &qword_100965258);
  sub_100608418((uint64_t)&v75);
  sub_10008DB18(v57, &qword_100965258);
  sub_10008DB18(v27, &qword_100965258);
  v83[0] = v31;
  v83[1] = v45;
  char v84 = v54;
  *(_DWORD *)uint64_t v85 = *(_DWORD *)v73;
  *(_DWORD *)&v85[3] = *(_DWORD *)&v73[3];
  uint64_t v86 = v32;
  char v87 = v55;
  *(_DWORD *)uint64_t v88 = *(_DWORD *)v71;
  *(_DWORD *)&v88[3] = *(_DWORD *)&v71[3];
  uint64_t v89 = v33;
  uint64_t v90 = v56;
  char v91 = v16;
  *(_DWORD *)&v92[3] = *(_DWORD *)&v70[3];
  *(_DWORD *)uint64_t v92 = *(_DWORD *)v70;
  uint64_t v93 = 0;
  uint64_t v94 = v34;
  uint64_t v95 = 0;
  uint64_t v96 = v35;
  char v97 = v60;
  *(_DWORD *)uint64_t v98 = *(_DWORD *)v68;
  *(_DWORD *)&v98[3] = *(_DWORD *)&v68[3];
  uint64_t v99 = v59;
  char v100 = v58;
  *(_DWORD *)&v101[3] = *(_DWORD *)&v67[3];
  *(_DWORD *)id v101 = *(_DWORD *)v67;
  uint64_t v102 = 0x3FF0000000000000;
  return sub_100608450((uint64_t)v83);
}

uint64_t sub_100607754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a6;
  uint64_t v9 = type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
  swift_unknownObjectRetain();
  uint64_t v15 = v14(a4, a5);
  uint64_t result = swift_unknownObjectRelease();
  if (v15 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = 1;
    uint64_t v25 = v15;
    swift_getKeyPath();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
    unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a4;
    *(void *)(v19 + 24) = a5;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v17, v13, v9);
    *(void *)(v19 + v18) = v21;
    *(void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
    sub_1000AFA94(&qword_10094E360);
    sub_1000AFA94(&qword_100965268);
    sub_1001C5704();
    sub_1006086C0();
    return ForEach<>.init(_:id:content:)();
  }
  return result;
}

uint64_t sub_100607984@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10 = *a1;
  type metadata accessor for WorkoutDetailColumnMetricView();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 64);
  swift_unknownObjectRetain();
  uint64_t v19 = v11(a2, v10, a3, a4, a5);
  swift_unknownObjectRelease();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 56);
  swift_unknownObjectRetain();
  v12(v10, a4, a5);
  swift_unknownObjectRelease();
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  LOBYTE(a2) = static Edge.Set.trailing.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  *(void *)a6 = v19;
  *(void *)(a6 + 8) = v20;
  *(unsigned char *)(a6 + 16) = v21;
  *(void *)(a6 + 24) = v22;
  *(unsigned char *)(a6 + 32) = v23;
  *(void *)(a6 + 40) = v24;
  *(void *)(a6 + 48) = v25;
  *(unsigned char *)(a6 + 56) = a2;
  *(void *)(a6 + 64) = v14;
  *(void *)(a6 + 72) = v15;
  *(void *)(a6 + 80) = v16;
  *(void *)(a6 + 88) = v17;
  *(unsigned char *)(a6 + 96) = 0;
  return result;
}

uint64_t sub_100607B10(uint64_t a1, double *a2)
{
  type metadata accessor for WorkoutDetailColumnMetricView();

  return sub_10060405C(a1, a2);
}

uint64_t sub_100607BB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for WorkoutDetailColumnMetricView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1006041BC(a1, v4);
}

uint64_t sub_100607C44()
{
  return sub_100604720(v0[4], v0[2], v0[3]);
}

unint64_t sub_100607C50()
{
  unint64_t result = qword_100965170;
  if (!qword_100965170)
  {
    sub_1000A1370(&qword_100965178);
    sub_1000A1370(&qword_100965180);
    sub_100607CF8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965170);
  }
  return result;
}

unint64_t sub_100607CF8()
{
  unint64_t result = qword_100965188;
  if (!qword_100965188)
  {
    sub_1000A1370(&qword_100965180);
    sub_100607D98();
    sub_1000A132C(&qword_1009509D8, &qword_1009509E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965188);
  }
  return result;
}

unint64_t sub_100607D98()
{
  unint64_t result = qword_100965190;
  if (!qword_100965190)
  {
    sub_1000A1370(&qword_100965198);
    sub_10060808C(&qword_1009651A0, &qword_1009651A8, (void (*)(void))sub_100607E70);
    sub_100607F34(&qword_1009651D0, &qword_1009651D8, (void (*)(void))sub_100607FAC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965190);
  }
  return result;
}

unint64_t sub_100607E70()
{
  unint64_t result = qword_1009651B0;
  if (!qword_1009651B0)
  {
    sub_1000A1370(&qword_1009651B8);
    sub_1000A132C(&qword_1009651C0, &qword_1009651C8);
    sub_1000A132C(&qword_10094D7A8, &qword_10094D7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009651B0);
  }
  return result;
}

uint64_t sub_100607F34(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100607FAC()
{
  unint64_t result = qword_1009651E0;
  if (!qword_1009651E0)
  {
    sub_1000A1370(&qword_1009651E8);
    sub_1000A1370(&qword_1009651F0);
    sub_10060808C(&qword_1009651F8, &qword_1009651F0, (void (*)(void))sub_100608108);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009651E0);
  }
  return result;
}

uint64_t sub_10060808C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100608108()
{
  unint64_t result = qword_100965200;
  if (!qword_100965200)
  {
    sub_1000A1370(&qword_100965208);
    sub_1000A132C(&qword_100965210, &qword_100965218);
    sub_1000A132C(&qword_10094D7A8, &qword_10094D7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965200);
  }
  return result;
}

uint64_t sub_1006081D0(uint64_t a1)
{
  return sub_100608778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100604904);
}

uint64_t sub_1006081E8@<X0>(uint64_t a1@<X8>)
{
  return sub_10060501C(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_1006081F4()
{
  uint64_t v1 = *(void *)(type metadata accessor for WorkoutDetailColumnMetricView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for LayoutDirection();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100608350@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for WorkoutDetailColumnMetricView() - 8);
  uint64_t v8 = *(void *)(v2
                 + ((*(void *)(v7 + 64)
                   + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100605244(a1, v8, v5, v6, a2);
}

uint64_t sub_100608418(uint64_t a1)
{
  return a1;
}

uint64_t sub_100608450(uint64_t a1)
{
  return a1;
}

uint64_t sub_100608488()
{
  uint64_t v1 = *(void *)(type metadata accessor for WorkoutDetailColumnMetricView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for LayoutDirection();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006085EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for WorkoutDetailColumnMetricView() - 8);
  unint64_t v8 = (*(void *)(v7 + 64)
      + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + v8);
  uint64_t v10 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100607984(a1, v9, v10, v5, v6, a2);
}

unint64_t sub_1006086C0()
{
  unint64_t result = qword_100965270;
  if (!qword_100965270)
  {
    sub_1000A1370(&qword_100965268);
    sub_1002190D0(&qword_100965278, &qword_100965280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965270);
  }
  return result;
}

uint64_t sub_100608760(uint64_t a1)
{
  return sub_100608778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1006069CC);
}

uint64_t sub_100608778(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(type metadata accessor for WorkoutDetailColumnMetricView() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a2(a1, v7, v4, v5);
}

unint64_t sub_100608828()
{
  unint64_t result = qword_100965308;
  if (!qword_100965308)
  {
    sub_1000A1370(&qword_1009652D8);
    sub_1000A132C(&qword_100965310, &qword_1009652D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965308);
  }
  return result;
}

uint64_t sub_1006088D0()
{
  return sub_1000A132C(&qword_100965330, &qword_100965338);
}

ValueMetadata *type metadata accessor for ActivitySharingFriendListCompetitionItem()
{
  return &type metadata for ActivitySharingFriendListCompetitionItem;
}

Swift::Int sub_10060891C(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - v10;
  Hasher.init()();
  id v12 = [a1 UUID];
  if (v12)
  {
    uint64_t v13 = v12;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
  }
  sub_1000CD344((uint64_t)v11, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    sub_100181C98();
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1000CD2E4((uint64_t)v11);
  id v14 = [a1 currentCompetition];
  if (v14)
  {
    uint64_t v15 = v14;
    Hasher._combine(_:)((Swift::UInt64)[v14 currentCacheIndex]);
    id v16 = [v15 scores];
    if (v16)
    {
      uint64_t v17 = v16;
      sub_1003B1708();
      uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      sub_1000A8EA0(v24, v18);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    id v19 = [v15 opponentScores];
    if (v19)
    {
      uint64_t v20 = v19;
      sub_1003B1708();
      uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      sub_1000A8EA0(v24, v21);

      swift_bridgeObjectRelease_n();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  long long v28 = v24[2];
  long long v29 = v24[3];
  uint64_t v30 = v25;
  long long v26 = v24[0];
  long long v27 = v24[1];
  return Hasher.finalize()();
}

Swift::Int sub_100608C94@<X0>(Swift::Int *a1@<X8>)
{
  Swift::Int result = sub_10060891C(*v1);
  *a1 = result;
  return result;
}

id sub_100608CC0()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection;
  uint64_t v2 = (void *)*(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView)
                                  + OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection);
  if (v2 != 1)
  {
    sub_10057A828(v2);
    uint64_t v1 = OBJC_IVAR____TtC10FitnessApp19TrendListMetricView_arrowDirection;
  }
  id result = (id)*(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView)
                                  + v1);
  if (result != 1) {
    return sub_10057A828(result);
  }
  return result;
}

uint64_t sub_100608D44()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  id v3 = v1;
  sub_1001FAB90((uint64_t)sub_1002AF094, v2);
  swift_release();
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  id v6 = v4;
  sub_1001FAB90((uint64_t)sub_1002D5BC4, v5);

  return swift_release();
}

char *sub_100608E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView;
  type metadata accessor for TrendListMetricView();
  uint64_t v7 = v3;
  *(void *)&v3[v6] = sub_1006D13E4();
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView;
  *(void *)&v7[v8] = sub_1006D13E4();
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  *(void *)&v7[v9] = sub_1006D13E4();
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton;
  uint64_t v11 = self;
  id v12 = [v11 buttonWithType:0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v10] = v12;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton;
  id v14 = [v11 buttonWithType:0];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v13] = v14;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView;
  sub_10007E2D8(0, &qword_100957898);
  *(void *)&v7[v15] = sub_1006D13E4();
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView;
  *(void *)&v7[v16] = sub_1006D13E4();
  uint64_t v17 = &v7[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction];
  *(void *)uint64_t v17 = ASFriendListDisplayMode.id.getter;
  *((void *)v17 + 1) = 0;
  uint64_t v18 = &v7[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric];
  uint64_t v19 = type metadata accessor for TrendListMetric();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v20(&v7[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric], 1, 1, v19);

  if (a3)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v21 = 0;
  }
  v42.receiver = v7;
  v42.super_class = (Class)type metadata accessor for TrendPairTableViewCell(0);
  uint64_t v22 = (char *)[v42 initWithStyle:a1 reuseIdentifier:v21];

  uint64_t v23 = *(void **)&v22[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView];
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView;
  uint64_t v41 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView;
  uint64_t v25 = v22;
  id v26 = v23;
  id v27 = sub_10049E184();
  [v26 setBackgroundColor:v27];

  id v28 = [*(id *)&v22[v24] layer];
  [v28 setCornerRadius:sub_10049E1B0()];

  uint64_t v29 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView;
  id v30 = *(id *)&v25[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView];
  id v31 = sub_10049E184();
  [v30 setBackgroundColor:v31];

  id v32 = [*(id *)&v25[v29] layer];
  [v32 setCornerRadius:sub_10049E1B0()];

  uint64_t v33 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton;
  [*(id *)&v25[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton] addTarget:v25 action:"selectionButtonTappedWithSender:" forControlEvents:64];
  [*(id *)&v25[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton] addTarget:v25 action:"selectionButtonTappedWithSender:" forControlEvents:64];
  id v34 = [v25 contentView];
  uint64_t v35 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView;
  [v34 addSubview:*(void *)&v25[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView]];

  long long v36 = *(void **)&v25[v35];
  [v36 setAlignment:0];
  [v36 setDistribution:1];
  [v36 setSpacing:0.0];
  [v36 setAxis:0];
  [v36 addArrangedSubview:*(void *)&v25[v33]];
  id v37 = [v25 contentView];
  uint64_t v38 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView;
  [v37 addSubview:*(void *)&v25[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView]];

  long long v39 = *(void **)&v25[v38];
  [v39 setAlignment:0];
  [v39 setDistribution:1];
  [v39 setSpacing:8.0];
  [v39 setAxis:0];
  [v39 setUserInteractionEnabled:0];
  [v39 addArrangedSubview:*(void *)&v22[v41]];
  sub_100609738();

  return v25;
}

uint64_t sub_1006093C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10095BFB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = type metadata accessor for TrendListMetric();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v14 = (char *)&v21 - v13;
  sub_10007E2D8(0, (unint64_t *)&qword_10094B780);
  if (static NSObject.== infix(_:_:)())
  {
    uint64_t v15 = v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric;
    swift_beginAccess();
    sub_1002AF2AC(v15, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
      return sub_10008DB18((uint64_t)v7, &qword_10095BFB0);
    }
    sub_1000AB590((uint64_t)v7, (uint64_t)v14);
    uint64_t v18 = *(void (**)(char *))(v1 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction);
    swift_retain();
    v18(v14);
    swift_release();
    uint64_t v19 = (uint64_t)v14;
  }
  else
  {
    uint64_t result = static NSObject.== infix(_:_:)();
    if ((result & 1) == 0) {
      return result;
    }
    uint64_t v17 = v0 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric;
    swift_beginAccess();
    sub_1002AF2AC(v17, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1) {
      return sub_10008DB18((uint64_t)v4, &qword_10095BFB0);
    }
    sub_1000AB590((uint64_t)v4, (uint64_t)v11);
    uint64_t v20 = *(void (**)(char *))(v1 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction);
    swift_retain();
    v20(v11);
    swift_release();
    uint64_t v19 = (uint64_t)v11;
  }
  return sub_100420B44(v19, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
}

void sub_100609738()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView];
  id v3 = [v2 leadingAnchor];
  id v4 = [v0 contentView];
  id v5 = [v4 leadingAnchor];

  id v46 = [v3 constraintEqualToAnchor:v5 constant:16.0];
  id v6 = [v2 trailingAnchor];
  id v7 = [v0 contentView];
  id v8 = [v7 trailingAnchor];

  id v44 = [v6 constraintEqualToAnchor:v8 constant:-16.0];
  id v9 = [v2 topAnchor];
  id v10 = [v0 contentView];
  id v11 = [v10 topAnchor];

  id v43 = [v9 constraintEqualToAnchor:v11 constant:sub_10049E1C0()];
  id v12 = [v2 bottomAnchor];
  id v13 = [v0 contentView];
  id v14 = [v13 bottomAnchor];

  sub_10049E1C0();
  id v41 = [v12 constraintEqualToAnchor:v14 constant:-v15];

  uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView];
  id v17 = [v16 leadingAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 leadingAnchor];

  id v42 = [v17 constraintEqualToAnchor:v19];
  id v20 = [v16 trailingAnchor];
  id v21 = [v1 contentView];
  id v22 = [v21 trailingAnchor];

  id v23 = [v20 constraintEqualToAnchor:v22];
  id v24 = [v16 topAnchor];
  id v25 = [v1 contentView];
  id v26 = [v25 topAnchor];

  id v27 = [v24 constraintEqualToAnchor:v26];
  id v28 = [v16 bottomAnchor];
  id v29 = [v1 contentView];
  id v30 = [v29 bottomAnchor];

  id v31 = [v28 constraintEqualToAnchor:v30];
  id v40 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100752640;
  *(void *)(v32 + 32) = v46;
  *(void *)(v32 + 40) = v44;
  *(void *)(v32 + 48) = v43;
  *(void *)(v32 + 56) = v41;
  *(void *)(v32 + 64) = v42;
  *(void *)(v32 + 72) = v23;
  *(void *)(v32 + 80) = v27;
  *(void *)(v32 + 88) = v31;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v39 = v46;
  id v45 = v44;
  id v33 = v43;
  id v34 = v41;
  id v35 = v42;
  id v36 = v23;
  id v37 = v27;
  id v38 = v31;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v40 activateConstraints:isa];
}

uint64_t sub_100609C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = type metadata accessor for TrendListMetric();
  uint64_t v6 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v32 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TrendPairTableViewCell.TrailingMetricType(0);
  __chkstk_darwin(v8 - 8);
  id v34 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_10095BFB0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94((uint64_t *)&unk_10095BFA0);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v19 = (char *)&v32 - v18;
  id v20 = (char *)&v32 + *(int *)(v14 + 56) - v18;
  sub_100420ADC(a1, (uint64_t)&v32 - v18, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  sub_100420ADC(a2, (uint64_t)v20, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
  sub_1005AEB10(v19);
  uint64_t v21 = (uint64_t)&v17[*(int *)(v14 + 56)];
  id v36 = v19;
  uint64_t v22 = (uint64_t)v19;
  uint64_t v23 = v33;
  sub_100420ADC(v22, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  sub_100420ADC((uint64_t)v20, v21, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
  sub_1000AB590((uint64_t)v17, (uint64_t)v12);
  id v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v35(v12, 0, 1, v23);
  uint64_t v24 = v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric;
  swift_beginAccess();
  sub_100420BA4((uint64_t)v12, v24);
  swift_endAccess();
  uint64_t v25 = v21;
  uint64_t v26 = (uint64_t)v34;
  sub_100420B44(v25, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
  sub_100420ADC((uint64_t)v20, v26, type metadata accessor for TrendPairTableViewCell.TrailingMetricType);
  int v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v26, 2, v23);
  if (v27)
  {
    if (v27 == 1) {
      [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView) insertArrangedSubview:*(void *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView) atIndex:1];
    }
    v35(v12, 1, 1, v23);
    uint64_t v28 = v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric;
    swift_beginAccess();
    sub_100420BA4((uint64_t)v12, v28);
    swift_endAccess();
  }
  else
  {
    id v29 = v32;
    sub_1000AB590(v26, (uint64_t)v32);
    [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView) insertArrangedSubview:*(void *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView) atIndex:1];
    [*(id *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView) insertArrangedSubview:*(void *)(v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton) atIndex:1];
    sub_1005AEB10(v29);
    sub_100420ADC((uint64_t)v29, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
    v35(v12, 0, 1, v23);
    uint64_t v30 = v3 + OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric;
    swift_beginAccess();
    sub_100420BA4((uint64_t)v12, v30);
    swift_endAccess();
    sub_100420B44((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
  }
  return sub_10008DB18((uint64_t)v36, (uint64_t *)&unk_10095BFA0);
}

id sub_10060A144()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for TrendPairTableViewCell(0);
  [super prepareForReuse];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView];
  [v1 removeArrangedSubview:v2];
  [v2 removeFromSuperview];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView];
  [v1 removeArrangedSubview:v3];
  [v3 removeFromSuperview];
  id v4 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView] removeArrangedSubview:v4];
  return [v4 removeFromSuperview];
}

uint64_t sub_10060A270(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingView;
  type metadata accessor for TrendListMetricView();
  id v4 = v1;
  *(void *)&v1[v3] = sub_1006D13E4();
  uint64_t v5 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView;
  uint64_t v23 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingView;
  *(void *)&v4[v5] = sub_1006D13E4();
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView;
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_paddingView;
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  *(void *)&v4[v6] = sub_1006D13E4();
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton;
  uint64_t v21 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingButton;
  uint64_t v8 = self;
  id v9 = [v8 buttonWithType:0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v7] = v9;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingButton;
  id v11 = [v8 buttonWithType:0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v10] = v11;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_stackView;
  sub_10007E2D8(0, &qword_100957898);
  *(void *)&v4[v12] = sub_1006D13E4();
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionStackView;
  id v14 = sub_1006D13E4();

  *(void *)&v4[v13] = v14;
  uint64_t v15 = &v4[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_selectionFunction];
  *(void *)uint64_t v15 = ASFriendListDisplayMode.id.getter;
  *((void *)v15 + 1) = 0;
  uint64_t v16 = (uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_leadingMetric];
  uint64_t v17 = type metadata accessor for TrendListMetric();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v16, 1, 1, v17);
  uint64_t v19 = (uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric];
  v18((uint64_t)&v4[OBJC_IVAR____TtC10FitnessApp22TrendPairTableViewCell_trailingMetric], 1, 1, v17);

  swift_release();
  sub_10008DB18(v16, &qword_10095BFB0);
  sub_10008DB18(v19, &qword_10095BFB0);

  type metadata accessor for TrendPairTableViewCell(0);
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_10060A578()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendPairTableViewCell(0);
  return [super dealloc];
}

uint64_t sub_10060A684()
{
  return type metadata accessor for TrendPairTableViewCell(0);
}

uint64_t type metadata accessor for TrendPairTableViewCell(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_1009653A8);
}

void sub_10060A6AC()
{
  sub_1002AEF0C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

id sub_10060A764()
{
  return sub_100608CC0();
}

uint64_t sub_10060A788()
{
  return sub_100608D44();
}

uint64_t sub_10060A7AC()
{
  return swift_deallocObject();
}

uint64_t sub_10060A7E4()
{
  return 0x676E69646E657254;
}

uint64_t type metadata accessor for TrendPairTableViewCell.TrailingMetricType(uint64_t a1)
{
  return sub_10009CFF8(a1, (uint64_t *)&unk_100965428);
}

uint64_t *sub_10060A820(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for TrendListMetric();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      uint64_t v11 = *(int *)(v7 + 28);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for AttributedString();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      uint64_t v16 = *(int *)(v7 + 32);
      uint64_t v17 = (uint64_t *)((char *)a1 + v16);
      uint64_t v18 = (uint64_t *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      id v20 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v20(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_10060A9D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrendListMetric();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 28);
    uint64_t v5 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10060AAB8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(v6 + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for AttributedString();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(v6 + 32);
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v18(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_10060AC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(v6 + 28);
      uint64_t v22 = a1 + v21;
      uint64_t v23 = a2 + v21;
      uint64_t v24 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
      uint64_t v25 = *(int *)(v6 + 32);
      uint64_t v26 = (void *)(a1 + v25);
      int v27 = (void *)(a2 + v25);
      *uint64_t v26 = *v27;
      v26[1] = v27[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_100420B44(a1, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v11 = *(int *)(v6 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for AttributedString();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = *(int *)(v6 + 32);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  uint64_t v19 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v19(a1, 0, 2, v6);
  return a1;
}

_WORD *sub_10060AEB0(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
    uint64_t v8 = *(int *)(v6 + 28);
    int v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 32));
    (*(void (**)(_WORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_10060B004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v16 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(int *)(v6 + 28);
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
      uint64_t v21 = *(int *)(v6 + 32);
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (uint64_t *)(a2 + v21);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      *uint64_t v22 = v25;
      v22[1] = v24;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_100420B44(a1, (uint64_t (*)(void))type metadata accessor for TrendListMetric);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v11 = *(int *)(v6 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)(a1 + *(int *)(v6 + 32)) = *(_OWORD *)(a2 + *(int *)(v6 + 32));
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_10060B220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10060B234);
}

uint64_t sub_10060B234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendListMetric();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_10060B2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10060B2B4);
}

uint64_t sub_10060B2B4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for TrendListMetric();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_10060B338(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrendListMetric();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_10060B3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendListMetric();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t sub_10060B410()
{
  uint64_t result = type metadata accessor for TrendListMetric();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_10060B48C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill;
  id v10 = objc_allocWithZone((Class)CAShapeLayer);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack;
  sub_10007E2D8(0, &qword_100957898);
  *(void *)&v11[v12] = sub_1006D13E4();
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1;
  sub_10007E2D8(0, &qword_100953458);
  *(void *)&v11[v13] = sub_1005CA0D4();
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2;
  *(void *)&v11[v14] = sub_1005CA0D4();
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint] = 0;

  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for TrendAveragePlatterView();
  uint64_t v15 = (char *)[v27 initWithFrame:a1, a2, a3, a4];
  id v16 = [v15 layer];
  uint64_t v17 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill;
  [v16 addSublayer:*(void *)&v15[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill]];

  uint64_t v18 = *(void **)&v15[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack];
  [v15 addSubview:v18];
  [v18 addArrangedSubview:*(void *)&v15[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1]];
  sub_10060B8D0();
  id v19 = [self defaultCenter];
  [v19 addObserver:v15 selector:"setupFontsAndConstants" name:UIContentSizeCategoryDidChangeNotification object:0];

  uint64_t v20 = *(void **)&v15[v17];
  [v20 setShadowRadius:1.0];
  LODWORD(v21) = 1.0;
  [v20 setShadowOpacity:v21];
  [v20 setShadowOffset:0.0, 0.0];
  uint64_t v22 = self;
  id v23 = v20;
  id v24 = [v22 blackColor];
  id v25 = [v24 CGColor];

  [v23 setShadowColor:v25];
  return v15;
}

uint64_t sub_10060B75C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill;
  id v5 = objc_allocWithZone((Class)CAShapeLayer);
  uint64_t v6 = v2;
  *(void *)&v2[v4] = [v5 init];
  uint64_t v7 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack;
  sub_10007E2D8(0, &qword_100957898);
  *(void *)&v6[v7] = sub_1006D13E4();
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1;
  sub_10007E2D8(0, &qword_100953458);
  *(void *)&v6[v8] = sub_1005CA0D4();
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2;
  id v10 = sub_1005CA0D4();

  *(void *)&v6[v9] = v10;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint] = 0;
  uint64_t v12 = OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint] = 0;

  uint64_t v13 = *(void **)&v6[v12];
  type metadata accessor for TrendAveragePlatterView();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_10060B8D0()
{
  unint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack];
  [v2 setAxis:1];
  [v2 setDistribution:0];
  [v2 setAlignment:3];
  [v2 setSpacing:0.0];
  uint64_t v3 = self;
  id v4 = [v3 clearColor];
  [v2 setBackgroundColor:v4];

  id v5 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1];
  id v6 = [v3 blackColor];
  [v5 setTextColor:v6];

  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2];
  id v8 = [v3 blackColor];
  [v7 setTextColor:v8];

  id v9 = [v2 leadingAnchor];
  id v10 = [v1 leadingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10 constant:4.0];

  id v12 = [v2 trailingAnchor];
  id v13 = [v1 trailingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13 constant:-4.0];

  id v15 = [v2 topAnchor];
  id v16 = [v1 topAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  id v18 = [v2 bottomAnchor];
  id v19 = [v1 bottomAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  double v21 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100751160;
  *(void *)(v22 + 32) = v11;
  *(void *)(v22 + 40) = v14;
  *(void *)(v22 + 48) = v17;
  *(void *)(v22 + 56) = v20;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v23 = v11;
  id v24 = v14;
  id v25 = v17;
  id v31 = v20;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 activateConstraints:isa];

  objc_super v27 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint] = v23;
  id v28 = v23;

  id v29 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint];
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint] = v24;
  id v30 = v24;

  sub_10060BCB4();
}

id sub_10060BCB4()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1];
  uint64_t v2 = self;
  id result = [v2 _preferredFontForTextStyle:UIFontTextStyleFootnote variant:1280 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
    __break(1u);
    goto LABEL_24;
  }
  id v4 = result;
  [v1 setFont:result];

  id v5 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2];
  id result = [v2 _preferredFontForTextStyle:UIFontTextStyleCaption2 variant:1280 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v6 = result;
  [v5 setFont:result];

  id v7 = [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack] arrangedSubviews];
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v10 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackLeadingConstraint];
  if (v9 != 1)
  {
    if (v10)
    {
      id v20 = v10;
      id result = [v5 font];
      if (!result)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      double v21 = result;
      [result _scaledValueForValue:4.0];
      double v23 = v22;

      [v20 setConstant:v23];
    }
    id v24 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint];
    if (v24)
    {
      id v16 = v24;
      id result = [v5 font];
      if (result)
      {
        id v25 = result;
        [result _scaledValueForValue:-4.0];
        double v27 = v26;

        [v16 setConstant:v27];
        goto LABEL_18;
      }
LABEL_28:
      __break(1u);
      return result;
    }
    goto LABEL_19;
  }
  if (v10)
  {
    id v11 = v10;
    id result = [v1 font];
    if (result)
    {
      id v12 = result;
      [result _scaledValueForValue:5.0];
      double v14 = v13;

      [v11 setConstant:v14];
      goto LABEL_9;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_9:
  id v15 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_stackTrailingConstraint];
  if (v15)
  {
    id v16 = v15;
    id result = [v1 font];
    if (result)
    {
      id v17 = result;
      [result _scaledValueForValue:-5.0];
      double v19 = v18;

      [v16 setConstant:v19];
LABEL_18:

      goto LABEL_19;
    }
    goto LABEL_26;
  }
LABEL_19:

  return [v0 setNeedsLayout];
}

void sub_10060C048(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2);
  [*(id *)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack) removeArrangedSubview:v3];
  [v3 removeFromSuperview];
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1);
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setText:v5];

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill);
  id v7 = [*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp12MetricColors_text) CGColor];
  [v6 setFillColor:v7];
}

void sub_10060C150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v10 = [objc_allocWithZone((Class)FIUIWorkoutActivityType) initWithActivityTypeIdentifier:52 isIndoor:0];
  id v11 = [a6 localizedSpeedUnitStringForActivityType:v10];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;
  }
  else
  {
    unint64_t v15 = 0xE400000000000000;
    uint64_t v13 = 1414090325;
  }
  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10074E640;
  *(void *)(v19 + 56) = &type metadata for String;
  unint64_t v20 = sub_1000AA64C();
  *(void *)(v19 + 32) = a4;
  *(void *)(v19 + 40) = a5;
  *(void *)(v19 + 96) = &type metadata for String;
  *(void *)(v19 + 104) = v20;
  *(void *)(v19 + 64) = v20;
  *(void *)(v19 + 72) = v13;
  *(void *)(v19 + 80) = v15;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v21 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label2);
  [*(id *)(v6 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack) addArrangedSubview:v21];
  double v22 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_label1);
  NSString v23 = String._bridgeToObjectiveC()();
  [v22 setText:v23];

  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v21 setText:v24];

  id v25 = *(void **)(v6 + OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill);
  id v27 = [*(id *)(a1 + OBJC_IVAR____TtC10FitnessApp12MetricColors_text) CGColor];
  [v25 setFillColor:v27];
}

void sub_10060C3F8(char *a1)
{
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_pill];
  [a1 bounds];
  [v2 setFrame:];
  id v3 = [*(id *)&a1[OBJC_IVAR____TtC10FitnessApp23TrendAveragePlatterView_labelStack] arrangedSubviews];
  sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  [v2 bounds];
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v14 = 8.0;
  if (v5 == 1)
  {
    [v2 bounds];
    double v14 = CGRectGetHeight(v18) * 0.5;
  }
  id v16 = [self bezierPathWithRoundedRect:v7 cornerRadius:v9 v11, v13, v14];
  id v15 = [v16 CGPath];
  [v2 setPath:v15];
}

id sub_10060C650()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TrendAveragePlatterView();
  return [super dealloc];
}

uint64_t type metadata accessor for TrendAveragePlatterView()
{
  return self;
}

uint64_t sub_10060C734()
{
  uint64_t v1 = type metadata accessor for MirrorPowerZonesMetricsPlatter();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1 - 8);
  uint64_t v5 = *(void *)(*(void *)(v0 + *(int *)(v4 + 48)) + 16);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1004F8FD0(v6, v5);
  swift_bridgeObjectRelease();
  v14[3] = v7;
  swift_getKeyPath();
  sub_10060D62C(v0, (uint64_t)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  sub_10060D7B4((uint64_t)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_10060D818;
  *(void *)(v10 + 24) = v9;
  sub_1000AFA94(&qword_10094C0C8);
  sub_1000AFA94(&qword_100965538);
  sub_1000A132C(&qword_10094C0D8, &qword_10094C0C8);
  uint64_t v11 = sub_1000A1370(&qword_1009622E8);
  unint64_t v12 = sub_100564D38();
  v14[1] = v11;
  void v14[2] = v12;
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

int *sub_10060C958@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v26 = a1;
  uint64_t v24 = a4;
  uint64_t v23 = type metadata accessor for WorkoutViewStyle();
  uint64_t v6 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100962300);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AFA94(&qword_1009622E8);
  __chkstk_darwin(v21);
  double v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_100965538);
  uint64_t v14 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a3;
  sub_10060CC7C(a2, (uint64_t)v11);
  id result = (int *)(id)HKWorkoutMetricTypeDescription();
  if (result)
  {
    CGRect v18 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100564DE4();
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    sub_10008DB18((uint64_t)v11, &qword_100962300);
    id result = (int *)type metadata accessor for MirrorPowerZonesMetricsPlatter();
    if ((v26 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v19 = *(void *)(v25 + result[10]);
      if (*(void *)(v19 + 16) > v26)
      {
        uint64_t v20 = v23;
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v19+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v26, v23);
        sub_100564D38();
        View.workoutViewStyle(_:)();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
        sub_10008DB18((uint64_t)v13, &qword_1009622E8);
        return (int *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v24, v16, v22);
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10060CC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094C100);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000AFA94(&qword_10094C108);
  uint64_t v6 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  unint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v29 = sub_1000AFA94(&qword_100962320);
  __chkstk_darwin(v29);
  id v28 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ZoneViewType();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for ZoneMetricView();
  uint64_t v27 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  unint64_t v26 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 47 && (sub_10060D1D8() & 1) == 0)
  {
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for ZoneViewType.powerZone(_:), v13);
    type metadata accessor for LivePowerZone();
    static LivePowerZone.minCanonicalPowerZones()();
    uint64_t v21 = sub_1000AFA94(&qword_100965540);
    swift_allocObject();
    uint64_t v22 = LiveZones.init(zones:currentZoneIndex:isStale:)();
    uint64_t v34 = v21;
    uint64_t v35 = sub_1000A132C(&qword_100965548, &qword_100965540);
    uint64_t v33 = v22;
    uint64_t v23 = v26;
    ZoneMetricView.init(zoneViewType:liveZones:value:isStale:)();
    uint64_t v24 = v27;
    uint64_t v25 = v30;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v28, v23, v30);
    swift_storeEnumTagMultiPayload();
    sub_100564F1C(&qword_100962318, (void (*)(uint64_t))&type metadata accessor for ZoneMetricView);
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v25);
  }
  else
  {
    uint64_t v18 = type metadata accessor for MetricPlatterType();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 1, 1, v18);
    static MetricViewBuilder.view(metricType:metricPlatterType:formattingManager:activityType:metricsPublisher:)();
    sub_10008DB18((uint64_t)v5, &qword_10094C100);
    uint64_t v19 = v31;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v8, v31);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v28, v11, v19);
    swift_storeEnumTagMultiPayload();
    sub_100564F1C(&qword_100962318, (void (*)(uint64_t))&type metadata accessor for ZoneMetricView);
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v19);
  }
}

uint64_t sub_10060D1D8()
{
  swift_retain();
  uint64_t v0 = PowerMetricsPublisher.livePowerZones.getter();
  swift_release();
  if (!v0) {
    goto LABEL_9;
  }
  unint64_t v1 = dispatch thunk of LiveZones.zones.getter();
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4)
    {
      type metadata accessor for Zone();
      swift_bridgeObjectRetain();
      _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    goto LABEL_8;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_9:
    char v3 = 0;
    return v3 & 1;
  }
  swift_bridgeObjectRetain();
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  type metadata accessor for Zone();
LABEL_5:
  swift_bridgeObjectRelease();
  type metadata accessor for CyclingPowerZonesConfigurationEditor();
  char v2 = static CyclingPowerZonesConfigurationEditor.hasAllEmptyZones(_:)();
  swift_bridgeObjectRelease();
  char v3 = v2 ^ 1;
  return v3 & 1;
}

void *sub_10060D2FC(void *a1)
{
  unint64_t v1 = a1;
  if (a1[2] >= 3uLL && a1[4] == 47)
  {
    uint64_t v2 = a1[5];
    swift_bridgeObjectRetain();
    if (v2 == 11)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v1 = sub_1005EC210(v1);
      }
      *((_OWORD *)v1 + 2) = xmmword_10076F900;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_10060D380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10060D394);
}

uint64_t sub_10060D394(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MetricPlatterConstants();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10060D444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10060D458);
}

void *sub_10060D458(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *id result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MetricPlatterConstants();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MirrorPowerZonesMetricsPlatter()
{
  uint64_t result = qword_1009654E8;
  if (!qword_1009654E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10060D54C()
{
  uint64_t result = type metadata accessor for MetricPlatterConstants();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10060D610()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10060D62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorPowerZonesMetricsPlatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10060D690()
{
  unint64_t v1 = (int *)(type metadata accessor for MirrorPowerZonesMetricsPlatter() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();

  uint64_t v3 = v2 + v1[10];
  uint64_t v4 = type metadata accessor for MetricPlatterConstants();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10060D7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MirrorPowerZonesMetricsPlatter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

int *sub_10060D818@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for MirrorPowerZonesMetricsPlatter() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10060C958(a1, a2, v8, a3);
}

uint64_t sub_10060D8A0()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_10060D8DC()
{
  unint64_t result = qword_100965550;
  if (!qword_100965550)
  {
    sub_1000A1370(&qword_100965558);
    sub_1000A132C(&qword_100962348, &qword_100962350);
    sub_10060D97C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965550);
  }
  return result;
}

unint64_t sub_10060D97C()
{
  unint64_t result = qword_100965560;
  if (!qword_100965560)
  {
    sub_1000A1370(&qword_100965568);
    sub_1000A1370(&qword_1009622E8);
    sub_100564D38();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965560);
  }
  return result;
}

void *sub_10060DA24(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000ABAB8(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for InvitationDestination() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = InvitationDestination.serviceIdentifier.getter();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1000ABAB8(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

Swift::Int sub_10060DB5C()
{
  return Hasher._finalize()();
}

uint64_t sub_10060DBC0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10060FB7C();

  return _BridgedNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10060DC0C()
{
  return Hasher._finalize()();
}

void *sub_10060DC6C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_10060DC9C(uint64_t a1)
{
  unint64_t v2 = sub_10060FB7C();

  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_10060DCD8(uint64_t a1)
{
  unint64_t v2 = sub_10060FB7C();

  return _BridgedNSError._code.getter(a1, v2);
}

unint64_t sub_10060DD14()
{
  return 0xD000000000000027;
}

uint64_t sub_10060DD30(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10060FB7C();

  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

id sub_10060DD9C()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

id sub_10060DE84(uint64_t a1)
{
  return sub_10060F4E0(a1, type metadata accessor for ReachableDestination);
}

uint64_t type metadata accessor for ReachableDestination()
{
  return self;
}

uint64_t sub_10060DF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v6 = (void *)swift_task_alloc();
  v4[8] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_10060DFD0;
  return InvitationDestinationService.fetchInvitationDestinationGroups(for:)(a1);
}

uint64_t sub_10060DFD0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10060E104, 0, 0);
  }
}

uint64_t sub_10060E104()
{
  uint64_t v35 = v0;
  uint64_t v1 = v0[4];
  uint64_t v32 = *(void *)(v1 + 16);
  if (v32)
  {
    uint64_t v2 = v0[9];
    uint64_t v33 = v1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = *(void *)(v2 + 16);
      if (!v4) {
        break;
      }
      uint64_t v5 = (uint64_t *)(v33 + 16 * v3);
      uint64_t v7 = *v5;
      uint64_t v6 = v5[1];
      ++v3;
      uint64_t v8 = v0[9];
      uint64_t v9 = *(void *)(type metadata accessor for InvitationDestinationGroup() - 8);
      uint64_t v10 = v8 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      uint64_t v11 = *(void *)(v9 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      while (InvitationDestinationGroup.destination.getter() != v7 || v12 != v6)
      {
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v13) {
          goto LABEL_11;
        }
        v10 += v11;
        if (!--v4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v3 == v32)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    uint64_t v22 = (void *)HKLogActivity;
    os_log_type_t v23 = v21;
    if (os_log_type_enabled(HKLogActivity, v21))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v24 = v22;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v26 = Array.description.getter();
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      v0[2] = sub_10008F1F4(v26, v28, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, v23, "Not all destinations reachable to send invite %s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    sub_10060F5D4();
    swift_allocError();
    void *v29 = 0;
    swift_willThrow();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
  else
  {
LABEL_13:
    uint64_t v15 = v0[6];
    uint64_t v14 = v0[7];
    uint64_t v16 = v0[5];
    v0[3] = v0[9];
    uint64_t v17 = (void *)swift_task_alloc();
    v0[10] = v17;
    v17[2] = v14;
    v17[3] = v16;
    v17[4] = v15;
    uint64_t v18 = (void *)swift_task_alloc();
    v0[11] = v18;
    uint64_t v19 = sub_1000AFA94(&qword_100965610);
    unint64_t v20 = sub_10060F6D8();
    *uint64_t v18 = v0;
    v18[1] = sub_10060E518;
    return Collection.asyncForEach(_:)(&unk_100965608, v17, v19, v20);
  }
}

uint64_t sub_10060E518()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10060E660, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10060E660()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10060E6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for InvitationDestination();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_10060E790, 0, 0);
}

uint64_t sub_10060E790()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v15 = InvitationDestinationGroup.destination.getter();
  uint64_t v5 = v4;
  v0[10] = v4;
  InvitationDestinationGroup.preferredDestination.getter();
  uint64_t v6 = InvitationDestination.serviceIdentifier.getter();
  uint64_t v8 = v7;
  v0[11] = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v9 = InvitationDestinationGroup.additionalDestinations.getter();
  uint64_t v10 = sub_10060DA24(v9);
  v0[12] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[13] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_10060E8E8;
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[6];
  return SecureCloudClient.sendInvitation(destination:callerIdentifier:serviceIdentifier:additionalServiceIdentifiers:)(v15, v5, v12, v13, v6, v8, v10);
}

uint64_t sub_10060E8E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_10060EAAC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10060EAAC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10060EB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a8;
  long long v8[3] = v15;
  uint64_t v12 = (void *)swift_task_alloc();
  v8[4] = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_10060EBD0;
  return sub_10060DF24(a5, a6, a7);
}

uint64_t sub_10060EBD0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10060EDA0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    type metadata accessor for MainActor();
    *(void *)(v2 + 48) = static MainActor.shared.getter();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    uint64_t v3 = sub_10060ED2C;
    uint64_t v4 = v6;
    uint64_t v5 = v8;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10060ED2C()
{
  uint64_t v1 = *(void (**)(uint64_t, void))(v0 + 16);
  swift_release();
  v1(1, 0);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10060EDA0()
{
  *(void *)(v0 + 56) = _convertErrorToNSError(_:)();
  type metadata accessor for MainActor();
  *(void *)(v0 + 64) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10060EE40, v2, v1);
}

uint64_t sub_10060EE40()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void (**)(void, void *))(v0 + 16);
  swift_release();
  v2(0, v1);

  return _swift_task_switch(sub_10060EEC8, 0, 0);
}

uint64_t sub_10060EEC8()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10060F0E8()
{
  *(void *)(v0 + 192) = *(void *)(v0 + 168);
  *(void *)(v0 + 200) = _convertErrorToNSError(_:)();
  type metadata accessor for MainActor();
  *(void *)(v0 + 208) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10060F194, v2, v1);
}

uint64_t sub_10060F194()
{
  uint64_t v1 = *(void **)(v0 + 200);
  uint64_t v2 = *(void (**)(void *, void *))(v0 + 72);
  swift_release();
  v2(_swiftEmptyArrayStorage, v1);

  return _swift_task_switch(sub_10060F220, 0, 0);
}

uint64_t sub_10060F220()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10060F44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ReachableDestination();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *, uint64_t))(a3 + 16))(a3, isa, a2);
}

id sub_10060F4C4()
{
  return sub_10060F4E0(0, type metadata accessor for InvitationDestinationCoordinator);
}

id sub_10060F4E0(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_10060F5CC()
{
  return type metadata accessor for InvitationDestinationCoordinator();
}

unint64_t sub_10060F5D4()
{
  unint64_t result = qword_1009655F8;
  if (!qword_1009655F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1009655F8);
  }
  return result;
}

uint64_t sub_10060F628(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005DB5C;
  return sub_10060E6CC(a1, v4, v5, v6);
}

unint64_t sub_10060F6D8()
{
  unint64_t result = qword_100965618;
  if (!qword_100965618)
  {
    sub_1000A1370(&qword_100965610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100965618);
  }
  return result;
}

uint64_t sub_10060F734()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_10060F76C(uint64_t a1, uint64_t a2)
{
  sub_10060F44C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10060F774()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10060F7AC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10060F7FC(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(v2 + 16) + 16))(*(void *)(v2 + 16), a1 & 1, a2);
}

uint64_t sub_10060F818()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10060F870()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_10005DB5C;
  *(_OWORD *)(v5 + 16) = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 32) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10060EBD0;
  return sub_10060DF24(v2, v3, v4);
}

uint64_t sub_10060F970()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for CHInvitationDestinationError()
{
  return &type metadata for CHInvitationDestinationError;
}

unint64_t sub_10060F9C8()
{
  unint64_t result = qword_100965648;
  if (!qword_100965648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965648);
  }
  return result;
}

unint64_t sub_10060FA20()
{
  unint64_t result = qword_100965650;
  if (!qword_100965650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965650);
  }
  return result;
}

unint64_t sub_10060FA78()
{
  unint64_t result = qword_100965658;
  if (!qword_100965658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965658);
  }
  return result;
}

unint64_t sub_10060FAD0()
{
  unint64_t result = qword_100965660;
  if (!qword_100965660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965660);
  }
  return result;
}

unint64_t sub_10060FB28()
{
  unint64_t result = qword_100965668;
  if (!qword_100965668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965668);
  }
  return result;
}

unint64_t sub_10060FB7C()
{
  unint64_t result = qword_100965670;
  if (!qword_100965670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965670);
  }
  return result;
}

uint64_t sub_10060FBD4(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 16))(a2, a1 & 1);
}

id sub_10060FD90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailSectionHeader();
  [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailSectionHeader()
{
  return self;
}

uint64_t sub_10060FDE8()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_10060FE20(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

id sub_10060FE38()
{
  v59.receiver = v0;
  v59.super_class = (Class)type metadata accessor for WorkoutDetailAppleWeatherFooterView();
  id v1 = [super initWithFrame:0.0 textContainer:0.0];
  [v1 setScrollEnabled:0];
  [v1 setEditable:0];
  [v1 _setInteractiveTextSelectionDisabled:1];
  objc_super v2 = self;
  id v3 = [v2 tertiaryLabelColor];
  [v1 setTintColor:v3];

  [v1 textContainerInset];
  double v5 = v4;
  [v1 textContainerInset];
  [v1 setTextContainerInset:v5, 10.0, v6, 10.0];
  uint64_t v7 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v58 = [v7 defaultFontForTextStyle:v8];

  id v57 = self;
  id v9 = [v57 mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  sub_10007E2D8(0, &qword_10094B778);
  id v15 = [v57 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1007509E0;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_1000AA64C();
  *(void *)(v19 + 32) = v12;
  *(void *)(v19 + 40) = v14;
  swift_bridgeObjectRetain();
  uint64_t v20 = NSString.init(format:_:)();

  sub_1000AFA94((uint64_t *)&unk_10095BF70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10074E640;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v22 = NSForegroundColorAttributeName;
  id v23 = [v2 tertiaryLabelColor];
  uint64_t v24 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  *(void *)(inited + 40) = v23;
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v25 = sub_1000AFA94((uint64_t *)&unk_10095BFE0);
  *(void *)(inited + 104) = v25;
  *(void *)(inited + 80) = v58;
  uint64_t v52 = NSFontAttributeName;
  id v55 = v58;
  sub_1000DFC2C(inited);
  uint64_t v26 = (void *)v20;
  uint64_t v56 = (void *)v20;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v27 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1001DCBD0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v30 = [v27 initWithString:v28 attributes:isa];

  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v26 rangeOfString:v31];
  uint64_t v53 = v33;
  id v54 = v32;

  id v34 = [v57 mainBundle];
  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = [v34 localizedStringForKey:v35 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v37 = objc_allocWithZone((Class)NSURL);
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v39 = [v37 initWithString:v38];

  uint64_t v40 = swift_initStackObject();
  *(_OWORD *)(v40 + 16) = xmmword_100752410;
  *(void *)(v40 + 32) = v52;
  *(void *)(v40 + 40) = v58;
  *(void *)(v40 + 64) = v25;
  *(void *)(v40 + 72) = NSLinkAttributeName;
  uint64_t v41 = sub_1000AFA94(&qword_1009656C8);
  *(void *)(v40 + 80) = v39;
  *(void *)(v40 + 104) = v41;
  *(void *)(v40 + 112) = NSUnderlineStyleAttributeName;
  *(void *)(v40 + 144) = &type metadata for Int;
  *(void *)(v40 + 120) = 1;
  id v42 = v55;
  id v43 = v52;
  id v44 = NSLinkAttributeName;
  id v45 = v39;
  id v46 = NSUnderlineStyleAttributeName;
  sub_1000DFC2C(v40);
  id v47 = objc_allocWithZone((Class)NSAttributedString);
  NSString v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v49 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v50 = [v47 initWithString:v48 attributes:v49];

  [v30 replaceCharactersInRange:v54 withAttributedString:v53];
  [v1 setAttributedText:v30];

  return v1;
}

id sub_100610640()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailAppleWeatherFooterView();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailAppleWeatherFooterView()
{
  return self;
}

id sub_100610698()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair);
  id v3 = [self mainBundle];
  if (v1 == 1)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    id v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText);
    *id v9 = v6;
    v9[1] = v8;
    swift_bridgeObjectRelease();
    NSString v10 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel);
    if (v9[1])
    {
      swift_bridgeObjectRetain();
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v11 = 0;
    }
    [v10 setText:v11];
    double v19 = 0.0;
  }
  else
  {
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v3 localizedStringForKey:v12 value:0 table:0];

    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    id v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText);
    *id v17 = v14;
    v17[1] = v16;
    swift_bridgeObjectRelease();
    NSString v18 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel);
    if (v17[1])
    {
      swift_bridgeObjectRetain();
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v11 = 0;
    }
    [v18 setText:v11];
    double v19 = 1.0;
  }

  uint64_t v20 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair);

  return [v20 setAlpha:v19];
}

char *sub_1006108FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair] = 0;
  NSString v4 = (objc_class *)type metadata accessor for DayViewTitleAndValueLabelPair();
  id v5 = objc_allocWithZone(v4);
  id v57 = v3;
  uint64_t v6 = (char *)[v5 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v55 = self;
  id v7 = [v55 labelColor];
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  id v9 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v7;
  id v10 = v7;

  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  [*(id *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel] setTextColor:*(void *)&v6[v8]];

  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  v12.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  uint64_t v14 = *(void **)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v12;
  uint64_t v15 = v12.super.isa;

  [*(id *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel] setTextColor:*(void *)&v6[v13]];
  uint64_t v16 = self;
  id v17 = [v16 mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 localizedStringForKey:v18 value:0 table:0];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  id v23 = (uint64_t *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  uint64_t *v23 = v20;
  v23[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void **)&v6[v11];
  if (v23[1])
  {
    swift_bridgeObjectRetain();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v25 = 0;
  }
  uint64_t v26 = OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair;
  [v24 setText:v25];
  swift_bridgeObjectRelease();

  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v57[v26] = v6;
  id v27 = [objc_allocWithZone(v4) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v28 = [v55 labelColor];
  uint64_t v29 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  id v30 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(void *)&v27[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v28;
  id v31 = v28;

  uint64_t v32 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  [*(id *)&v27[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel] setTextColor:*(void *)&v27[v29]];

  v33.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  uint64_t v34 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  NSString v35 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v27[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v33;
  id v36 = v33.super.isa;

  [*(id *)&v27[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel] setTextColor:*(void *)&v27[v34]];
  id v37 = [v16 mainBundle];
  NSString v38 = String._bridgeToObjectiveC()();
  id v39 = [v37 localizedStringForKey:v38 value:0 table:0];

  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;

  id v43 = (uint64_t *)&v27[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  *id v43 = v40;
  v43[1] = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v44 = *(void **)&v27[v32];
  if (v43[1])
  {
    swift_bridgeObjectRetain();
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v45 = 0;
  }
  uint64_t v46 = OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair;
  [v44 setText:v45];
  swift_bridgeObjectRelease();

  [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v57[v46] = v27;

  if (a3)
  {
    NSString v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v47 = 0;
  }
  v58.receiver = v57;
  v58.super_class = (Class)type metadata accessor for DayViewStepsAndDistanceTableViewCell();
  [super initWithStyle:a1 reuseIdentifier:v47];

  Class v49 = (char *)v48;
  id v50 = [v55 systemBackgroundColor];
  [v49 setBackgroundColor:v50];

  id v51 = [v49 contentView];
  [v51 addSubview:*(void *)&v49[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair]];

  id v52 = [v49 contentView];
  [v52 addSubview:*(void *)&v49[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair]];

  sub_100610F48();
  return v49;
}

void sub_100610F48()
{
  id v1 = [self mainScreen];
  [v1 bounds];
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;

  v57.origin.x = v3;
  v57.origin.y = v5;
  v57.size.width = v7;
  v57.size.height = v9;
  CGRectGetWidth(v57);
  if (qword_10094AE00 != -1) {
    swift_once();
  }
  UIRoundToScale();
  double v11 = v10;
  UIColor v12 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair];
  id v13 = [v12 leadingAnchor];
  id v14 = [v0 contentView];
  id v15 = [v14 leadingAnchor];

  id v54 = [v13 constraintEqualToAnchor:v15 constant:v11];
  id v16 = [v12 trailingAnchor];
  id v17 = [v0 contentView];
  id v18 = [v17 trailingAnchor];

  id v52 = [v16 constraintEqualToAnchor:v18 constant:0.0];
  id v19 = [v12 topAnchor];
  id v20 = [v0 contentView];
  id v21 = [v20 topAnchor];

  id v51 = [v19 constraintEqualToAnchor:v21];
  id v22 = [v12 bottomAnchor];
  id v23 = [v0 contentView];
  id v24 = [v23 bottomAnchor];

  id v49 = [v22 constraintEqualToAnchor:v24];
  NSString v25 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair];
  id v26 = [v25 leadingAnchor];
  id v27 = [v0 contentView];
  id v28 = [v27 leadingAnchor];

  id v50 = [v26 constraintEqualToAnchor:v28 constant:16.0];
  id v29 = [v25 trailingAnchor];
  id v30 = [v12 leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:-8.0];

  id v32 = [v25 topAnchor];
  id v33 = [v0 contentView];
  id v34 = [v33 topAnchor];

  id v35 = [v32 constraintEqualToAnchor:v34];
  id v36 = [v25 bottomAnchor];
  id v37 = [v0 contentView];
  id v38 = [v37 bottomAnchor];

  id v46 = [v36 constraintEqualToAnchor:v38];
  id v48 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_100752640;
  *(void *)(v39 + 32) = v54;
  *(void *)(v39 + 40) = v52;
  *(void *)(v39 + 48) = v51;
  *(void *)(v39 + 56) = v49;
  *(void *)(v39 + 64) = v50;
  *(void *)(v39 + 72) = v31;
  *(void *)(v39 + 80) = v35;
  *(void *)(v39 + 88) = v46;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v47 = v54;
  id v53 = v52;
  id v40 = v51;
  id v41 = v49;
  id v42 = v50;
  id v43 = v31;
  id v44 = v35;
  id v45 = v46;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v48 activateConstraints:isa];
}

void sub_100611530(void *a1, void *a2, void *a3, void *a4)
{
  char v9 = *(unsigned char *)(v4 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair);
  uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair);
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel;
  id v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v10
                                                              + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel), "font"));
  id v13 = v12;
  if (v9)
  {
    if (!v12)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    id v14 = a2;
  }
  else
  {
    if (!v12)
    {
LABEL_15:
      __break(1u);
      return;
    }
    id v14 = a1;
  }
  uint64_t v15 = sub_10026618C(v14);
  uint64_t v17 = v16;

  id v18 = (uint64_t *)(v10 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelText);
  *id v18 = v15;
  v18[1] = v17;
  swift_bridgeObjectRelease();
  id v19 = *(void **)(v10 + v11);
  [v19 setAttributedText:0];
  if (v18[1])
  {
    swift_bridgeObjectRetain();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = 0;
  }
  [v19 setText:v20];

  uint64_t v21 = *(void *)(v4 + OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair);
  uint64_t v22 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel;
  id v23 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v21
                                                              + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel), "font"));
  if (!v23)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v24 = v23;
  id v25 = sub_100266284(a3, a4, v23);

  uint64_t v26 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText;
  id v27 = *(void **)(v21 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText);
  *(void *)(v21 + OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueAttributedText) = v25;
  id v29 = v25;

  id v28 = *(void **)(v21 + v22);
  [v28 setText:0];
  [v28 setAttributedText:*(void *)(v21 + v26)];
}

uint64_t sub_100611720(void *a1)
{
  v1[OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_isWheelchair] = 0;
  id v49 = (objc_class *)type metadata accessor for DayViewTitleAndValueLabelPair();
  id v2 = objc_allocWithZone(v49);
  CGFloat v3 = v1;
  uint64_t v4 = (char *)[v2 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v48 = self;
  id v5 = [v48 labelColor];
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  CGFloat v7 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(void *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v5;
  id v8 = v5;

  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  [*(id *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel] setTextColor:*(void *)&v4[v6]];

  sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
  v10.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  id v12 = *(void **)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v10;
  id v13 = v10.super.isa;

  [*(id *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel] setTextColor:*(void *)&v4[v11]];
  id v14 = self;
  id v15 = [v14 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 localizedStringForKey:v16 value:0 table:0];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  uint64_t v21 = (uint64_t *)&v4[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  uint64_t *v21 = v18;
  v21[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void **)&v4[v9];
  if (v21[1])
  {
    swift_bridgeObjectRetain();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v23 = 0;
  }
  uint64_t v24 = OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_stepsLabelPair;
  [v22 setText:v23];
  swift_bridgeObjectRelease();

  uint64_t v25 = v24;
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v24] = v4;
  uint64_t v26 = (char *)[objc_allocWithZone(v49) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v27 = [v48 labelColor];
  uint64_t v28 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor;
  id v29 = *(void **)&v26[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor];
  *(void *)&v26[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabelTextColor] = v27;
  id v30 = v27;

  uint64_t v31 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel;
  [*(id *)&v26[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleLabel] setTextColor:*(void *)&v26[v28]];

  v32.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.67843, 0.70588, 0.74902, 1.0).super.isa;
  uint64_t v33 = OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor;
  id v34 = *(void **)&v26[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor];
  *(UIColor *)&v26[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabelTextColor] = v32;
  id v35 = v32.super.isa;

  [*(id *)&v26[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_valueLabel] setTextColor:*(void *)&v26[v33]];
  id v36 = [v14 mainBundle];
  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = [v36 localizedStringForKey:v37 value:0 table:0];

  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  id v42 = (uint64_t *)&v26[OBJC_IVAR____TtC10FitnessApp29DayViewTitleAndValueLabelPair_titleText];
  uint64_t *v42 = v39;
  v42[1] = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v43 = *(void **)&v26[v31];
  if (v42[1])
  {
    swift_bridgeObjectRetain();
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v44 = 0;
  }
  uint64_t v45 = OBJC_IVAR____TtC10FitnessApp36DayViewStepsAndDistanceTableViewCell_distanceLabelPair;
  [v43 setText:v44];
  swift_bridgeObjectRelease();

  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v3[v45] = v26;

  id v46 = *(void **)&v3[v45];
  type metadata accessor for DayViewStepsAndDistanceTableViewCell();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_100611C70()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewStepsAndDistanceTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for DayViewStepsAndDistanceTableViewCell()
{
  return self;
}

void sub_100611D14(uint64_t a1, uint64_t a2)
{
}

void sub_100611D34(uint64_t a1, uint64_t a2)
{
}

id sub_100611D54()
{
  return [*v0 duration];
}

void sub_100611D64(uint64_t a1, uint64_t a2)
{
}

void sub_100611D84(uint64_t a1, uint64_t a2, SEL *a3, void (*a4)(void))
{
  id v6 = [*v4 *a3];
  a4();
}

uint64_t sub_100611DF0(uint64_t a1)
{
  uint64_t result = sub_100611F0C(&qword_100965710, (void (*)(uint64_t))sub_1002DDB04);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100611E48()
{
  return MindfulnessSessionViewModel.startDate.getter();
}

uint64_t sub_100611E6C()
{
  return MindfulnessSessionViewModel.endDate.getter();
}

uint64_t sub_100611E90()
{
  return MindfulnessSessionViewModel.duration.getter();
}

uint64_t sub_100611EB4(uint64_t a1)
{
  uint64_t result = sub_100611F0C(&qword_100965718, (void (*)(uint64_t))&type metadata accessor for MindfulnessSessionViewModel);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100611F0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10061205C()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider);
  }
  else
  {
    uint64_t v4 = v0;
    sub_10007E2D8(0, (unint64_t *)&qword_10094E530);
    id v5 = sub_1006D134C();
    id v6 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    objc_super v2 = 0;
  }
  id v7 = v2;
  return v3;
}

char *sub_1006120DC(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t v10 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_label;
  id v11 = objc_allocWithZone((Class)UILabel);
  id v12 = v5;
  id v13 = [v11 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v13 setAdjustsFontForContentSizeCategory:1];
  id v14 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  id v15 = (void *)UILabel.withFont(_:)();

  NSString v16 = self;
  id v17 = [v16 labelColor];
  uint64_t v18 = (void *)UILabel.withTextColor(_:)();

  LODWORD(v19) = 1148846080;
  [v18 setContentHuggingPriority:1 forAxis:v19];
  LODWORD(v20) = 1148846080;
  [v18 setContentCompressionResistancePriority:1 forAxis:v20];
  *(void *)&v5[v10] = v18;
  *(void *)&v12[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider] = 0;
  *(void *)&v12[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline] = 0;

  v27.receiver = v12;
  v27.super_class = (Class)type metadata accessor for DayViewTableViewSectionHeader();
  uint64_t v21 = (char *)[super initWithFrame:a1, a2, a3, a4];
  id v22 = [v16 systemBackgroundColor];
  [v21 setBackgroundColor:v22];

  [v21 addSubview:*(void *)&v21[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_label]];
  NSString v23 = v21;
  id v24 = sub_10061205C();
  [v23 addSubview:v24];

  sub_1006124D8();
  id v25 = [self defaultCenter];
  [v25 addObserver:v23 selector:"updateFonts" name:UIContentSizeCategoryDidChangeNotification object:0];

  return v23;
}

id sub_1006123B0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline];
  if (v1)
  {
    objc_super v2 = self;
    id v3 = v1;
    id v4 = [v2 preferredFontForTextStyle:UIFontTextStyleBody];
    [v4 _scaledValueForValue:42.0];
    double v6 = v5;

    [v3 setConstant:v6];
  }
  [v0 invalidateIntrinsicContentSize];

  return [v0 setNeedsLayout];
}

void sub_1006124D8()
{
  uint64_t v1 = v0;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_label];
  id v3 = [v2 leadingAnchor];
  id v4 = [v1 leadingAnchor];
  id v5 = [v3 constraintEqualToAnchor:v4 constant:16.0];

  id v6 = [v2 trailingAnchor];
  id v7 = [v1 trailingAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7 constant:-16.0];

  id v9 = [v2 firstBaselineAnchor];
  id v10 = [v1 topAnchor];
  id v11 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v11 _scaledValueForValue:42.0];
  double v13 = v12;

  id v14 = [v9 constraintEqualToAnchor:v10 constant:v13];
  id v15 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline];
  uint64_t v42 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline] = v14;

  id v16 = sub_10061205C();
  id v17 = [v16 leadingAnchor];

  id v18 = [v1 leadingAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:16.0];

  id v20 = sub_10061205C();
  id v21 = [v20 trailingAnchor];

  id v22 = [v1 trailingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  id v24 = sub_10061205C();
  id v25 = [v24 topAnchor];

  id v26 = [v1 topAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  id v28 = sub_10061205C();
  id v29 = [v28 heightAnchor];

  if (qword_10094AE08 != -1) {
    swift_once();
  }
  id v30 = [v29 constraintEqualToConstant:*(double *)&qword_100998308];

  id v40 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1007590E0;
  *(void *)(v31 + 32) = v5;
  *(void *)(v31 + 40) = v8;
  *(void *)(v31 + 48) = v19;
  *(void *)(v31 + 56) = v23;
  *(void *)(v31 + 64) = v27;
  *(void *)(v31 + 72) = v30;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  id v41 = v5;
  id v32 = v8;
  id v33 = v19;
  id v34 = v23;
  id v35 = v27;
  id v36 = v30;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v40 activateConstraints:isa];

  id v38 = *(void **)&v1[v42];
  if (v38)
  {
    id v39 = v38;
    [v39 setActive:1];
  }
}

uint64_t sub_100612978(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_label;
  id v5 = objc_allocWithZone((Class)UILabel);
  id v6 = v2;
  id v7 = [v5 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setAdjustsFontForContentSizeCategory:1];
  id v8 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  id v9 = (void *)UILabel.withFont(_:)();

  id v10 = [self labelColor];
  id v11 = (void *)UILabel.withTextColor(_:)();

  LODWORD(v12) = 1148846080;
  [v11 setContentHuggingPriority:1 forAxis:v12];
  LODWORD(v13) = 1148846080;
  [v11 setContentCompressionResistancePriority:1 forAxis:v13];

  *(void *)&v2[v4] = v11;
  uint64_t v14 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader____lazy_storage___divider] = 0;
  uint64_t v15 = OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline;
  *(void *)&v6[OBJC_IVAR____TtC10FitnessApp29DayViewTableViewSectionHeader_labelBaseline] = 0;

  id v16 = *(void **)&v6[v15];
  type metadata accessor for DayViewTableViewSectionHeader();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_100612B54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayViewTableViewSectionHeader();
  return [super dealloc];
}

uint64_t type metadata accessor for DayViewTableViewSectionHeader()
{
  return self;
}

void sub_100612C08(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  id v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  id v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_10060FE20, v8);
  swift_release();
  swift_release();
}

uint64_t sub_100612CDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  objc_super v2 = (char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Calendar();
  uint64_t v3 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v6 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100752410;
  unint64_t v11 = v10 + v9;
  double v12 = *(void (**)(unint64_t, void, uint64_t))(v7 + 104);
  v12(v11, enum case for Calendar.Component.month(_:), v6);
  v12(v11 + v8, enum case for Calendar.Component.year(_:), v6);
  v12(v11 + 2 * v8, enum case for Calendar.Component.era(_:), v6);
  sub_1000C6A18(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v13 = [v15[1] endDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v2, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v16);
}

void sub_100612FC8(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataSource] = 0;
  id v21 = &v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
  *(void *)id v21 = 0;
  *((_WORD *)v21 + 4) = 512;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = _swiftEmptyArrayStorage;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = _swiftEmptyDictionarySingleton;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController] = 0;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_observers] = _swiftEmptyArrayStorage;
  id v22 = &v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter];
  *(void *)id v22 = 0;
  *((_WORD *)v22 + 4) = 1792;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider] = a1;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext] = a2;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager] = a3;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager] = a4;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_healthStore] = a5;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_model] = a6;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_friendListManager] = a8;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_badgeImageFactory] = a7;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementLocalizationProvider] = a9;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_pauseRingsCoordinator] = a10;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementResourceProvider] = a11;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awardsDataProvider] = a12;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_mindfulnessSessionFormattingManager] = a13;
  *(void *)&v14[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_stackFormattingManager] = a14;
  v113.receiver = v14;
  v113.super_class = (Class)type metadata accessor for HistoryListViewController();
  id v23 = a1;
  id v105 = a2;
  id v104 = a3;
  id v103 = a4;
  id v102 = a5;
  id v101 = a6;
  id v107 = a8;
  id v109 = a7;
  id v110 = a9;
  id v24 = a10;
  id v25 = a11;
  id v26 = a12;
  id v111 = a13;
  id v112 = a14;
  id v27 = [super initWithNibName:0 bundle:0];
  id v28 = *(void **)&v27[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
  __int16 v29 = *(_WORD *)&v27[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 8];
  id v30 = v27;
  uint64_t v31 = sub_1004B8464(v28, v29);
  uint64_t v33 = v32;
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = v31;
  swift_bridgeObjectRelease();
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v35 = objc_allocWithZone((Class)type metadata accessor for HistoryFilterUIViewController());
  id v36 = sub_1002AB448((uint64_t)sub_1006199E0, v34);
  uint64_t v37 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController;
  id v38 = *(void **)&v30[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController];
  *(void *)&v30[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController] = v36;

  id v39 = *(char **)&v30[v37];
  if (!v39)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v100 = v26;
  uint64_t v40 = *(void *)&v23[OBJC_IVAR___CHHistoryDataProvider_historyFilterValues];
  if (*(void *)(v40 + 16))
  {
    *(void *)&v39[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_historyTypes] = v40;
    swift_bridgeObjectRetain_n();
    id v41 = v39;
    swift_bridgeObjectRelease();
    sub_1002AB5F0();

    swift_bridgeObjectRelease();
  }
  uint64_t v42 = self;
  id v43 = v30;
  id v44 = [v42 mainBundle];
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = [v44 localizedStringForKey:v45 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v43 setTitle:v47];

  id v48 = [v43 tableView];
  if (!v48) {
    goto LABEL_25;
  }
  id v49 = v48;
  [v48 setSectionHeaderTopPadding:0.0];

  id v50 = [v43 tableView];
  if (!v50)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v51 = v50;
  [v50 setSeparatorStyle:0];

  id v52 = [v43 tableView];
  if (!v52)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v53 = v52;
  id v54 = *(void **)&v30[v37];
  if (!v54)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v55 = [v54 view];
  if (!v55)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v56 = v55;
  [v55 frame];
  double v58 = v57;
  double v60 = v59;
  double v62 = v61;
  double v64 = v63;

  id v65 = [objc_allocWithZone((Class)UIView) initWithFrame:v58, v60, v62, v64];
  [v53 setTableHeaderView:v65];

  id v66 = [v43 tableView];
  if (!v66)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v67 = v66;
  id v68 = [v66 tableHeaderView];

  if (v68)
  {
    unsigned __int8 v69 = *(void **)&v30[v37];
    if (!v69)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    id v70 = [v69 view];
    if (!v70)
    {
LABEL_37:
      __break(1u);
      return;
    }
    uint64_t v71 = v70;
    [v68 addSubview:v70];
  }
  id v72 = [v43 tableView];
  if (!v72) {
    goto LABEL_31;
  }
  uint64_t v73 = v72;
  sub_10007E2D8(0, &qword_10094EA80);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v75 = String._bridgeToObjectiveC()();
  [v73 registerClass:ObjCClassFromMetadata forHeaderFooterViewReuseIdentifier:v75];

  id v76 = [v43 tableView];
  if (!v76)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  long long v77 = v76;
  sub_10007E2D8(0, &qword_10094EA88);
  uint64_t v78 = swift_getObjCClassFromMetadata();
  NSString v79 = String._bridgeToObjectiveC()();
  [v77 registerClass:v78 forCellReuseIdentifier:v79];

  id v80 = [v43 tableView];
  if (!v80)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  long long v81 = v80;
  type metadata accessor for MindfulnessSessionListTableViewCell();
  uint64_t v82 = swift_getObjCClassFromMetadata();
  NSString v83 = String._bridgeToObjectiveC()();
  [v81 registerClass:v82 forCellReuseIdentifier:v83];

  id v84 = [v43 tableView];
  if (!v84)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v85 = v84;
  type metadata accessor for WorkoutsListTableViewCell();
  uint64_t v86 = swift_getObjCClassFromMetadata();
  NSString v87 = String._bridgeToObjectiveC()();
  [v85 registerClass:v86 forCellReuseIdentifier:v87];

  id v88 = [v43 tableView];
  if (!v88)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v89 = v88;
  type metadata accessor for StackListTableViewCell();
  uint64_t v90 = swift_getObjCClassFromMetadata();
  NSString v91 = String._bridgeToObjectiveC()();
  [v89 registerClass:v90 forCellReuseIdentifier:v91];

  sub_1006146FC();
  uint64_t v92 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = sub_1006199E8;
  *(void *)(v93 + 24) = v92;
  uint64_t v94 = &v23[OBJC_IVAR___CHHistoryDataProvider_onChangeHandlers];
  swift_beginAccess();
  uint64_t v95 = *(void **)v94;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v94 = v95;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v95 = sub_10001E94C(0, v95[2] + 1, 1, v95);
    *(void *)uint64_t v94 = v95;
  }
  unint64_t v98 = v95[2];
  unint64_t v97 = v95[3];
  if (v98 >= v97 >> 1)
  {
    uint64_t v95 = sub_10001E94C((void *)(v97 > 1), v98 + 1, 1, v95);
    *(void *)uint64_t v94 = v95;
  }
  v95[2] = v98 + 1;
  uint64_t v99 = &v95[2 * v98];
  v99[4] = sub_100020A64;
  v99[5] = v93;
  swift_endAccess();
  swift_release_n();
  sub_100613DF4();
}

void sub_100613990(void *a1, __int16 a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (char *)Strong;
    uint64_t v6 = Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue;
    *(void *)uint64_t v6 = a1;
    *(_WORD *)(v6 + 8) = a2;
    id v7 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider);
    uint64_t v8 = sub_1004B8464(a1, a2);
    uint64_t v10 = v9;

    *(void *)&v5[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = v8;
    swift_bridgeObjectRelease();
    *(void *)&v5[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = v10;
    swift_bridgeObjectRelease();
    id v11 = [v5 tableView];
    if (v11)
    {
      double v12 = v11;
      [v11 reloadData];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100613A90()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    objc_super v2 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue);
    __int16 v3 = *(_WORD *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 8);
    id v4 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider);
    id v5 = sub_1004B8464(v2, v3);
    uint64_t v7 = v6;

    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = v5;
    swift_bridgeObjectRelease();
    *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = v7;
    swift_bridgeObjectRelease();
    sub_1006146FC();
  }
}

id sub_100613B5C()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_observers];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    __int16 v3 = self;
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_10008F484(v4, (uint64_t)v8);
      id v5 = [v3 defaultCenter];
      sub_10007E4EC(v8, v8[3]);
      [v5 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
      _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v8);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for HistoryListViewController();
  return [super dealloc];
}

uint64_t sub_100613DF4()
{
  id v1 = [self defaultCenter];
  id v2 = [self mainQueue];
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v8[4] = sub_100618A0C;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000711BC;
  long long v8[3] = &unk_1008D2050;
  uint64_t v4 = _Block_copy(v8);
  swift_release();
  id v5 = [v1 addObserverForName:UIApplicationSignificantTimeChangeNotification object:0 queue:v2 usingBlock:v4];
  _Block_release(v4);

  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1007509E0;
  *(void *)(v6 + 56) = swift_getObjectType();
  *(void *)(v6 + 32) = v5;
  *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_observers) = v6;
  return swift_bridgeObjectRelease();
}

void sub_100613F94()
{
  static os_log_type_t.default.getter();
  id v0 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = Strong;
    id v3 = [Strong tableView];

    if (v3)
    {
      [v3 reloadData];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10061406C(uint64_t a1, __int16 a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  objc_super v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a1;
  *(_WORD *)(v13 + 32) = a2;
  aBlock[4] = sub_100618A00;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D2028;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100618980((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

void sub_100614360(uint64_t a1, void *a2, int a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (char *)Strong;
    uint64_t v7 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider;
    char v8 = sub_1003B09BC((uint64_t)a2, a3, *(void *)(*(void *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider)+ OBJC_IVAR___CHHistoryDataProvider_historyFilterValues));
    os_log_type_t v9 = static os_log_type_t.default.getter();
    uint64_t v10 = (void *)HKLogActivity;
    BOOL v11 = os_log_type_enabled(HKLogActivity, v9);
    if ((v8 & 1) == 0)
    {
      if (v11)
      {
        id v27 = v10;
        id v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)id v28 = 136315138;
        uint64_t v29 = String.init<A>(describing:)();
        sub_10008F1F4(v29, v30, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v27, v9, "DEEPLINK: unable to filter to %s", v28, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      uint64_t v31 = &v6[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter];
      *(void *)uint64_t v31 = a2;
      *((_WORD *)v31 + 4) = a3;
      goto LABEL_12;
    }
    if (v11)
    {
      log = v10;
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v13 = String.init<A>(describing:)();
      sub_10008F1F4(v13, v14, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v9, "DEEPLINK: filtering history to %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v15 = &v6[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
    *(void *)uint64_t v15 = a2;
    *((_WORD *)v15 + 4) = a3;
    uint64_t v16 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController;
    uint64_t v17 = *(void *)&v6[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController];
    if (v17)
    {
      uint64_t v18 = v17 + OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_selectedHistoryType;
      *(void *)uint64_t v18 = a2;
      *(_WORD *)(v18 + 8) = a3;
      uint64_t v19 = *(void **)&v6[v16];
      if (v19)
      {
        id v20 = v19;
        sub_1002AB5F0();

        id v21 = *(id *)&v6[v7];
        id v22 = sub_1004B8464(a2, a3);
        uint64_t v24 = v23;

        *(void *)&v6[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = v22;
        swift_bridgeObjectRelease();
        *(void *)&v6[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = v24;
        swift_bridgeObjectRelease();
        id v25 = [v6 tableView];
        if (v25)
        {
          id v26 = v25;
          [v25 reloadData];

LABEL_12:
          return;
        }
LABEL_16:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
}

uint64_t sub_1006146FC()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  char v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = ObjectType;
  aBlock[4] = sub_100618978;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070394;
  aBlock[3] = &unk_1008D1FD8;
  BOOL v11 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100618980((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AFA94((uint64_t *)&unk_1009555E0);
  sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

void sub_1006149F0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    os_log_type_t v2 = static os_log_type_t.default.getter();
    uint64_t v3 = (void *)HKLogActivity;
    os_log_type_t v4 = v2;
    if (os_log_type_enabled(HKLogActivity, v2))
    {
      uint64_t v5 = v3;
      uint64_t v6 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315394;
      uint64_t v7 = _typeName(_:qualified:)();
      sub_10008F1F4(v7, v8, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2080;
      sub_10008F1F4(0xD000000000000012, 0x80000001007B7F90, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v5, v4, "%s::%s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v9 = *(char **)&v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController];
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider]
                      + OBJC_IVAR___CHHistoryDataProvider_historyFilterValues);
      if (*(void *)(v10 + 16))
      {
        *(void *)&v9[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_historyTypes] = v10;
        swift_bridgeObjectRetain_n();
        BOOL v11 = v9;
        swift_bridgeObjectRelease();
        sub_1002AB5F0();

        swift_bridgeObjectRelease();
      }
      uint64_t v12 = &v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter];
      __int16 v13 = *(_WORD *)&v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter + 8];
      if ((v13 & 0xFF00) != 0x700)
      {
        uint64_t v14 = *(void *)v12;
        *(void *)uint64_t v12 = 0;
        *((_WORD *)v12 + 4) = 1792;
        sub_10061406C(v14, v13);
      }
      id v15 = [v1 tableView];
      if (v15)
      {
        uint64_t v16 = v15;
        [v15 reloadData];

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_100614C80(uint64_t a1)
{
  uint64_t v3 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v100 = v6;
  uint64_t v101 = v7;
  __chkstk_darwin(v6);
  uint64_t v99 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v97);
  unint64_t v98 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v95 = *(void *)(v10 - 8);
  uint64_t v96 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DateComponents();
  uint64_t v93 = *(void *)(v13 - 8);
  uint64_t v94 = v13;
  __chkstk_darwin(v13);
  id v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v102 = v1;
  id v20 = &v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
  if (v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 9] << 8 == 512
    || IndexPath.row.getter())
  {
    id v21 = v102;
    sub_1006175D4((uint64_t)v119);
    sub_1006188D8((uint64_t)v119, (uint64_t)&v120);
    if (*((void *)&v121 + 1))
    {
      sub_1000AFA94((uint64_t *)&unk_100955630);
      sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
      if (swift_dynamicCast())
      {

        id result = [v21 tableView];
        if (result)
        {
          uint64_t v23 = result;
          NSString v24 = String._bridgeToObjectiveC()();
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          id v26 = [v23 dequeueReusableCellWithIdentifier:v24 forIndexPath:isa];

          sub_1006188D8((uint64_t)v119, (uint64_t)&v120);
          if (*((void *)&v121 + 1))
          {
            id v27 = v26;
            id v26 = v26;
            if (swift_dynamicCast())
            {
              uint64_t v29 = v102;
              id v28 = (void *)v103;
              unint64_t v30 = *(void **)&v102[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awardsDataProvider];
              id v31 = [(id)v103 UUID];
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              UUID.uuidString.getter();
              (*(void (**)(char *, uint64_t))(v95 + 8))(v12, v96);
              NSString v32 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v33 = [v30 achievementsForWorkoutIdentifier:v32];

              sub_10007E2D8(0, (unint64_t *)&qword_1009556B0);
              unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              type metadata accessor for WorkoutsListTableViewCell();
              if (swift_dynamicCastClass())
              {
                id v35 = *(void **)&v29[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
                id v36 = *(void **)&v29[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager];
                if (v34 >> 62)
                {
                  id v92 = v26;
                  swift_bridgeObjectRetain();
                  uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v37 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  id v38 = v26;
                }
                swift_bridgeObjectRelease();
                sub_1001B430C(v28, v35, v36, v37, 1, 0, 0);
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              id v88 = *(void **)&v102[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager];
              id v89 = v28;
              sub_10020F97C(v89, v88, &v120);
              *(void *)&long long v103 = _swiftEmptyArrayStorage;
              sub_1001B5A54((uint64_t)&v120);
              sub_100618980((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
              sub_1000AFA94((uint64_t *)&unk_10096AA80);
              sub_1002D54D8((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
              dispatch thunk of SetAlgebra.init<A>(_:)();
              long long v115 = v132;
              long long v116 = v133;
              long long v117 = v134;
              long long v118 = v135;
              long long v111 = v128;
              long long v112 = v129;
              long long v113 = v130;
              long long v114 = v131;
              long long v107 = v124;
              long long v108 = v125;
              long long v109 = v126;
              long long v110 = v127;
              long long v103 = v120;
              long long v104 = v121;
              long long v105 = v122;
              long long v106 = v123;
              id v90 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
              sub_1001B5C6C();
              NSString v91 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
              UIView.annotate(with:)();

              sub_1001B5CC0((uint64_t)&v120);
              goto LABEL_54;
            }
            goto LABEL_39;
          }
          goto LABEL_36;
        }
        goto LABEL_66;
      }
    }
    else
    {
      sub_10008DB18((uint64_t)&v120, &qword_10095EAA8);
    }
    sub_1006188D8((uint64_t)v119, (uint64_t)&v120);
    if (*((void *)&v121 + 1))
    {
      sub_1000AFA94((uint64_t *)&unk_100955630);
      type metadata accessor for MindfulnessSessionViewModel();
      if (swift_dynamicCast())
      {

        id result = [v21 tableView];
        if (!result)
        {
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        id v39 = result;
        NSString v40 = String._bridgeToObjectiveC()();
        Class v41 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v26 = [v39 dequeueReusableCellWithIdentifier:v40 forIndexPath:v41];

        sub_1006188D8((uint64_t)v119, (uint64_t)&v120);
        if (!*((void *)&v121 + 1))
        {
LABEL_36:
          sub_10008DB18((uint64_t)&v120, &qword_10095EAA8);
          goto LABEL_54;
        }
        id v27 = v26;
        id v26 = v26;
        if ((swift_dynamicCast() & 1) == 0)
        {
LABEL_39:

          id v26 = v27;
          goto LABEL_54;
        }
        uint64_t v42 = (void *)v103;
        type metadata accessor for MindfulnessSessionListTableViewCell();
        if (swift_dynamicCastClass())
        {
          id v43 = *(char **)&v21[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
          id v44 = *(void **)&v21[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_mindfulnessSessionFormattingManager];
          uint64_t v45 = swift_allocObject();
          swift_unknownObjectWeakInit();
          id v46 = v26;
          swift_retain();
          sub_100536384(v42, v43, v44, (uint64_t)sub_1001D7D10, v45);

          swift_release_n();
        }
        unint64_t v47 = MindfulnessSessionViewModel.mindfulnessSessions.getter();
        unint64_t v48 = v47;
        if (v47 >> 62)
        {
          id result = (id)_CocoaArrayWrapper.endIndex.getter();
          if (result) {
            goto LABEL_22;
          }
        }
        else
        {
          id result = *(id *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (result)
          {
LABEL_22:
            if ((v48 & 0xC000000000000001) != 0)
            {
              id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              goto LABEL_25;
            }
            if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v49 = *(id *)(v48 + 32);
LABEL_25:
              id v50 = v49;
              swift_bridgeObjectRelease();
              id v51 = v50;
              id v52 = (void *)sub_1002DEC18(v51);
              *(void *)&long long v120 = _swiftEmptyArrayStorage;
              sub_100618980((unint64_t *)&qword_10094C758, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
              id v53 = v52;
              sub_1000AFA94((uint64_t *)&unk_10096AA80);
              sub_1002D54D8((unint64_t *)&qword_10094C760, (uint64_t *)&unk_10096AA80);
              dispatch thunk of SetAlgebra.init<A>(_:)();
              *(void *)&long long v120 = v53;
              id v54 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
              sub_1002DE698();
              id v55 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
              UIView.annotate(with:)();

LABEL_54:
              long long v77 = &qword_10095EAA8;
              uint64_t v78 = v119;
              goto LABEL_55;
            }
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
        }
        swift_bridgeObjectRelease();
        sub_10008DB18((uint64_t)v119, &qword_10095EAA8);

        goto LABEL_56;
      }
    }
    else
    {
      sub_10008DB18((uint64_t)&v120, &qword_10095EAA8);
    }
    id result = [v21 tableView];
    if (result)
    {
      uint64_t v56 = result;
      NSString v57 = String._bridgeToObjectiveC()();
      Class v58 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v59 = [v56 dequeueReusableCellWithIdentifier:v57 forIndexPath:v58];

      sub_1006188D8((uint64_t)v119, (uint64_t)&v120);
      uint64_t v60 = *((void *)&v121 + 1);
      id v26 = v59;
      uint64_t v61 = v101;
      double v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
      if (v60)
      {
        sub_1000AFA94((uint64_t *)&unk_100955630);
        uint64_t v63 = v100;
        int v64 = swift_dynamicCast();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v5, v64 ^ 1u, 1, v63);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v5, 1, v63) != 1)
        {
          uint64_t v65 = v99;
          sub_100350DA4((uint64_t)v5, v99);
          type metadata accessor for StackListTableViewCell();
          if (swift_dynamicCastClass())
          {
            id v66 = *(void **)&v21[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
            uint64_t v67 = swift_allocObject();
            swift_unknownObjectWeakInit();
            swift_retain();
            sub_10038EDD4(v65, v66, (uint64_t)sub_1002D5818, v67);

            swift_release_n();
          }
          else
          {
          }
          sub_1001F0FE0(v65);
          goto LABEL_54;
        }
      }
      else
      {
        sub_10008DB18((uint64_t)&v120, &qword_10095EAA8);
        (*v62)(v5, 1, 1, v100);
      }

      sub_10008DB18((uint64_t)v119, &qword_10095EAA8);
      long long v77 = &qword_100950DA8;
      uint64_t v78 = v5;
LABEL_55:
      sub_10008DB18((uint64_t)v78, v77);
      goto LABEL_56;
    }
    goto LABEL_65;
  }
  uint64_t v68 = a1;
  id result = [v102 tableView];
  if (result)
  {
    unsigned __int8 v69 = result;
    NSString v70 = String._bridgeToObjectiveC()();
    uint64_t v101 = v68;
    Class v71 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v72 = [v69 dequeueReusableCellWithIdentifier:v70 forIndexPath:v71];

    if (v20[9] << 8 == 1280)
    {
      id v26 = v72;
      unint64_t v73 = IndexPath.section.getter();
      unsigned __int8 v74 = v102;
      id v75 = (id)sub_100615C7C(v73);
      self;
      id v76 = (void *)swift_dynamicCastObjCClass();
      if (v76)
      {
        [v76 setMindfulnessSessionsStatistics:v75 formattingManager:*(void *)&v74[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager]];
LABEL_59:

        goto LABEL_56;
      }

      goto LABEL_50;
    }
    id v79 = v72;
    IndexPath.section.getter();
    IndexPath.init(row:section:)();
    sub_1006175D4((uint64_t)&v120);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    if (!*((void *)&v121 + 1))
    {

      sub_10008DB18((uint64_t)&v120, &qword_10095EAA8);
      id v26 = v79;
      goto LABEL_56;
    }
    id v26 = v79;
    sub_1000AFA94((uint64_t *)&unk_100955630);
    sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    if (swift_dynamicCast())
    {
      id v75 = (id)v103;
      sub_100612CDC((uint64_t)v15);

      uint64_t v80 = *(void *)&v102[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics];
      if (*(void *)(v80 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v81 = sub_100529888((uint64_t)v15);
        if (v82)
        {
          id v83 = *(id *)(*(void *)(v80 + 56) + 8 * v81);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v93 + 8))(v15, v94);
          self;
          uint64_t v84 = swift_dynamicCastObjCClass();
          if (v84)
          {
            uint64_t v85 = (void *)v84;
            uint64_t v86 = self;
            id v83 = v83;
            id v87 = [v86 initForWorkout:v75];
            [v85 setWorkoutStatistics:v83 activityTypeKey:v87 formattingManager:*(void *)&v102[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager]];

            [v85 setIsForAllWorkouts:v20[9] << 8 == 768];
          }

          goto LABEL_50;
        }
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v93 + 8))(v15, v94);
      goto LABEL_59;
    }
LABEL_50:

LABEL_56:
    [v26 setSelectionStyle:0];
    return v26;
  }
LABEL_68:
  __break(1u);
  return result;
}

unint64_t sub_100615C7C(unint64_t result)
{
  unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems);
    if (*(void *)(v2 + 16) > result)
    {
      uint64_t v3 = *(void *)(v2 + 8 * result + 32);
      uint64_t v4 = *(void *)(v3 + 16);
      if (v4)
      {
        uint64_t v5 = v3 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_10008E75C(v5, (uint64_t)v24);
          sub_10008E75C((uint64_t)v24, (uint64_t)v23);
          sub_1000AFA94((uint64_t *)&unk_100955630);
          type metadata accessor for MindfulnessSessionViewModel();
          if (swift_dynamicCast())
          {

            sub_10008E75C((uint64_t)v24, (uint64_t)v23);
            if (swift_dynamicCast())
            {
              id v6 = v22;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
          }
          _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v24);
          v5 += 40;
          --v4;
        }
        while (v4);
        swift_bridgeObjectRelease();
        unint64_t v7 = v25;
        if (!(v25 >> 62)) {
          goto LABEL_12;
        }
      }
      else
      {
        unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
        if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        {
LABEL_12:
          uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_13:
      unint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_1001D0944(v9);
      swift_bridgeObjectRelease();
      uint64_t v11 = v10[2];
      if (v11)
      {
        if (v11 == 1)
        {
          uint64_t v12 = 0;
          double v13 = 0.0;
        }
        else
        {
          uint64_t v12 = v11 & 0x7FFFFFFFFFFFFFFELL;
          uint64_t v14 = (double *)(v10 + 5);
          double v13 = 0.0;
          uint64_t v15 = v11 & 0x7FFFFFFFFFFFFFFELL;
          do
          {
            double v13 = v13 + *(v14 - 1) + *v14;
            v14 += 2;
            v15 -= 2;
          }
          while (v15);
          if (v11 == v12) {
            goto LABEL_24;
          }
        }
        uint64_t v16 = v11 - v12;
        uint64_t v17 = (double *)&v10[v12 + 4];
        do
        {
          double v18 = *v17++;
          double v13 = v13 + v18;
          --v16;
        }
        while (v16);
      }
      else
      {
        double v13 = 0.0;
      }
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = (objc_class *)type metadata accessor for MindfulnessSessionsStatistics();
      id v20 = (char *)objc_allocWithZone(v19);
      *(void *)&v20[OBJC_IVAR___CHMindfulnessSessionsStatistics_sessionCount] = v8;
      *(double *)&v20[OBJC_IVAR___CHMindfulnessSessionsStatistics_totalDuration] = v13;
      v21.receiver = v20;
      v21.super_class = v19;
      return (unint64_t)[super init];
    }
  }
  __break(1u);
  return result;
}

void sub_100615FC8(void *a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems;
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems);
  if (*(void *)(v10 + 16) <= a2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!*(void *)(*(void *)(v10 + 8 * a2 + 32) + 16)) {
    return;
  }
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [a1 dequeueReusableHeaderFooterViewWithIdentifier:v11];

  uint64_t v13 = *(void *)(v2 + v9);
  if (*(void *)(v13 + 16) <= a2)
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v14 = *(void *)(v13 + 8 * a2 + 32);
  if (*(void *)(v14 + 16))
  {
    sub_10008E75C(v14 + 32, (uint64_t)v22);
    if (v12)
    {
      self;
      uint64_t v15 = swift_dynamicCastObjCClass();
      if (v15)
      {
        uint64_t v16 = (void *)v15;
        uint64_t v17 = v23;
        uint64_t v18 = v24;
        sub_10007E4EC(v22, v23);
        uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 32);
        id v21 = v12;
        v19(v17, v18);
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        [v16 setDate:isa];
      }
    }
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v22);
  }
}

Class sub_100616504(uint64_t a1, void *a2)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    uint64_t v4 = v3;
    sub_10007E2D8(0, &qword_100950E80);
    uint64_t v5 = self;
    id v6 = a2;
    id v7 = [v5 mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self smm_systemImageNamed:v10];

    *(void *)(swift_allocObject() + 16) = v4;
    id v12 = v6;
    uint64_t v13 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    sub_10007E2D8(0, (unint64_t *)&unk_10095C0A0);
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100751040;
    *(void *)(v14 + 32) = v13;
    UIMenuElementSize preferredElementSize = v14;
    specialized Array._endMutation()();
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v21.value.super.Class isa = 0;
    v21.is_nil = 0;
    v16.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v15, (Swift::String_optional)0, v21, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
  }
  else
  {
    sub_10007E2D8(0, (unint64_t *)&unk_10095C0A0);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v22.value.super.Class isa = 0;
    v22.is_nil = 0;
    return (Class)UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v22, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v19);
  }
  return v16.super.super.isa;
}

void sub_1006168BC(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = sub_10007E4EC(a1, v1);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_100616D7C((uint64_t)v2, v1);
  }
}

uint64_t sub_1006169D0(void *a1)
{
  sub_1006175D4((uint64_t)&v6);
  if (!v7) {
    return sub_10008DB18((uint64_t)&v6, &qword_10095EAA8);
  }
  sub_100093E60(&v6, (uint64_t)v8);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a1 deselectRowAtIndexPath:isa animated:1];

  uint64_t v3 = v9;
  uint64_t v4 = sub_10007E4EC(v8, v9);
  sub_100616D7C((uint64_t)v4, v3);
  return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v8);
}

uint64_t sub_100616B88(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    sub_100617758(a6);
  }
  return a3(1);
}

void sub_100616D7C(uint64_t a1, uint64_t a2)
{
  id v5 = [v2 navigationController];
  if (v5)
  {
    long long v6 = v5;
    uint64_t v7 = sub_100616E24(a1, a2);
    [v6 pushViewController:v7 animated:1];
  }
}

char *sub_100616E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v4 - 8);
  id v83 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = (void *)type metadata accessor for FitnessPlusStackViewModel();
  char v82 = (void *)*(v86 - 1);
  __chkstk_darwin(v86);
  uint64_t v84 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v85 = (uint64_t)&v77 - v8;
  __chkstk_darwin(v9);
  id v11 = (char *)&v77 - v10;
  uint64_t v12 = *(void *)(a2 - 8);
  __chkstk_darwin(v13);
  unint64_t v81 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  Swift::String v17 = (char *)&v77 - v16;
  __chkstk_darwin(v18);
  id v20 = (char *)&v77 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v77 - v22;
  __n128 v25 = __chkstk_darwin(v24);
  id v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v26((char *)&v77 - v27, a1, a2, v25);
  type metadata accessor for MindfulnessSessionViewModel();
  if (swift_dynamicCast())
  {

    ((void (*)(char *, uint64_t, uint64_t))v26)(v23, a1, a2);
    if (swift_dynamicCast())
    {
      id v28 = v88;
      uint64_t v29 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
      unint64_t v30 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_mindfulnessSessionFormattingManager];
      id v31 = objc_allocWithZone((Class)type metadata accessor for MindfulnessSessionDetailViewController());
      return sub_10039EDA8(v28, v29, v30);
    }
    return (char *)[objc_allocWithZone((Class)UIViewController) initWithNibName:0 bundle:0];
  }
  ((void (*)(char *, uint64_t, uint64_t))v26)(v20, a1, a2);
  id v33 = v86;
  if (swift_dynamicCast())
  {
    sub_1001F0FE0((uint64_t)v11);
    ((void (*)(char *, uint64_t, uint64_t))v26)(v17, a1, a2);
    uint64_t v34 = (uint64_t)v83;
    int v35 = swift_dynamicCast();
    id v36 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v82[7];
    if (!v35)
    {
      v36(v34, 1, 1, v33);
      sub_10008DB18(v34, &qword_100950DA8);
      return (char *)[objc_allocWithZone((Class)UIViewController) initWithNibName:0 bundle:0];
    }
    v36(v34, 0, 1, v33);
    uint64_t v37 = v34;
    uint64_t v38 = v85;
    sub_100350DA4(v37, v85);
    sub_1001F0F7C(v38, v84);
    id v39 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider];
    NSString v40 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager];
    Class v41 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
    uint64_t v42 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_healthStore];
    id v43 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_model];
    id v44 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_badgeImageFactory];
    uint64_t v45 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_friendListManager];
    id v46 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementLocalizationProvider];
    unint64_t v47 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_pauseRingsCoordinator];
    unint64_t v48 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementResourceProvider];
    id v49 = *(char **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_stackFormattingManager];
    id v80 = *(id *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awardsDataProvider];
    unint64_t v81 = v49;
    id v83 = *(char **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager];
    uint64_t v86 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_mindfulnessSessionFormattingManager];
    id v87 = (char *)objc_allocWithZone((Class)type metadata accessor for StackDetailViewController());
    char v82 = v39;
    id v79 = v40;
    id v78 = v41;
    id v50 = v42;
    id v51 = v43;
    id v52 = v44;
    id v53 = v45;
    id v54 = v46;
    id v55 = v47;
    id v56 = v48;
    id v57 = v80;
    Class v58 = v81;
    id v59 = v83;
    uint64_t v60 = v86;
    uint64_t v61 = sub_1002F5640(v84, v82, v79, v78, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60);
    sub_1001F0FE0(v85);
    return v61;
  }
  ((void (*)(char *, uint64_t, uint64_t))v26)(v81, a1, a2);
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  if (swift_dynamicCast())
  {
    id v62 = v88;
    uint64_t v63 = *(void **)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_healthStore];
    uint64_t v85 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_model];
    uint64_t v86 = v63;
    uint64_t v84 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fitnessAppContext];
    uint64_t v64 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutFormattingManager];
    uint64_t v65 = *(void *)(*(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider]
                    + OBJC_IVAR___CHHistoryDataProvider_workoutDataProvider);
    uint64_t v66 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_badgeImageFactory];
    uint64_t v67 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_friendListManager];
    uint64_t v68 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementLocalizationProvider];
    uint64_t v69 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_pauseRingsCoordinator];
    uint64_t v70 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_achievementResourceProvider];
    uint64_t v71 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_fiuiFormattingManager];
    uint64_t v72 = *(void *)&v87[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awardsDataProvider];
    id v73 = objc_allocWithZone((Class)CHWorkoutDetailViewController);
    LOBYTE(v76) = 1;
    unsigned __int8 v74 = (char *)[v73 initWithWorkout:v62 workoutActivity:0 healthStore:v86 model:v85 fitnessAppContext:v84 workoutFormattingManager:v64 workoutDataProvider:v65 badgeImageFactory:v66 friendListManager:v67 achievementLocalizationProvider:v68 pauseRingsCoordinator:v69 achievementResourceProvider:v70 formattingManager:v71 awardsDataProvider:v72 shouldExposeDeepLinkToTrainingLoadFromEffort:v76];
    if (v74)
    {
      uint64_t v61 = v74;

      return v61;
    }
  }
  id result = (char *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1006175D4(uint64_t a1@<X8>)
{
  uint64_t v3 = IndexPath.row.getter();
  BOOL v4 = v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 9] << 8 != 512;
  uint64_t v5 = v3 - v4;
  if (__OFSUB__(v3, v4))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = IndexPath.section.getter();
  id v7 = [v1 tableView];
  if (!v7)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v7;
  id v9 = [v7 numberOfSections];

  if (v6 >= (uint64_t)v9 || v5 < 0) {
    goto LABEL_13;
  }
  id v10 = [v1 tableView];
  if (!v10)
  {
LABEL_19:
    __break(1u);
    return;
  }
  id v11 = v10;
  id v12 = [v10 numberOfRowsInSection:IndexPath.section.getter()];

  if (v5 >= (uint64_t)v12)
  {
LABEL_13:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
  unint64_t v13 = IndexPath.section.getter();
  if ((v13 & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
  uint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems];
  if (v13 >= *(void *)(v14 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v15 = *(void *)(v14 + 8 * v13 + 32);
  if ((unint64_t)v5 >= *(void *)(v15 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  sub_10008E75C(v15 + 40 * v5 + 32, a1);
}

id sub_100617758(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000AFA94(&qword_100950DA8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1006175D4((uint64_t)&v25);
  if (!v26) {
    return (id)sub_10008DB18((uint64_t)&v25, &qword_10095EAA8);
  }
  sub_100093E60(&v25, (uint64_t)v27);
  id result = [v1 tableView];
  if (!result)
  {
    __break(1u);
    return result;
  }
  unint64_t v8 = (unint64_t)result;
  id v9 = (char *)[result numberOfRowsInSection:IndexPath.section.getter()];

  BOOL v10 = v2[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 9] << 8 != 512;
  BOOL v11 = __OFSUB__(v9, v10);
  id v12 = &v9[-v10];
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  BOOL v13 = v12 == (char *)1;
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  a1 = swift_allocObject();
  *(void *)(a1 + 16) = v14;
  *(unsigned char *)(a1 + 24) = v13;
  sub_10008E75C((uint64_t)v27, (uint64_t)&v25);
  sub_1000AFA94((uint64_t *)&unk_100955630);
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  if (!swift_dynamicCast())
  {
    sub_10008E75C((uint64_t)v27, (uint64_t)&v25);
    uint64_t v19 = type metadata accessor for FitnessPlusStackViewModel();
    int v20 = swift_dynamicCast();
    uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    if (!v20)
    {
      v21(v6, 1, 1, v19);
      sub_10008DB18((uint64_t)v6, &qword_100950DA8);
LABEL_15:
      swift_retain();
      sub_1004B93A8((uint64_t)v27, 0, (uint64_t)sub_1006188CC, a1);
      goto LABEL_16;
    }
    v21(v6, 0, 1, v19);
    unint64_t v8 = (unint64_t)sub_1003D5A60();
    sub_1001F0FE0((uint64_t)v6);
    if (!(v8 >> 62))
    {
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_10:
        swift_retain();
        sub_100617BDC(v8, (uint64_t)v27, (uint64_t)sub_1006188CC, a1);
        swift_bridgeObjectRelease();
LABEL_16:
        swift_release_n();
        return (id)_s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
      }
      goto LABEL_14;
    }
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_10;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v15 = v24;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100751040;
  *(void *)(inited + 32) = v15;
  *(void *)&long long v25 = inited;
  specialized Array._endMutation()();
  unint64_t v17 = v25;
  id v18 = v15;
  swift_retain();
  sub_100617BDC(v17, (uint64_t)v27, (uint64_t)sub_1006188CC, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return (id)_s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
}

void sub_100617B2C(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    if (a2)
    {
      uint64_t v5 = Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue;
      *(void *)uint64_t v5 = 0;
      *(_WORD *)(v5 + 8) = 512;
      uint64_t v6 = *(void **)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController);
      if (!v6)
      {
        __break(1u);
        return;
      }
      id v7 = v6;

      unint64_t v8 = &v7[OBJC_IVAR____TtC10FitnessApp29HistoryFilterUIViewController_selectedHistoryType];
      *(void *)unint64_t v8 = 0;
      *((_WORD *)v8 + 4) = 512;
      uint64_t v4 = v7;
    }
  }
}

void sub_100617BDC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    id v58 = v4;
    if (!v6) {
      break;
    }
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v7);
      id v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v11 = [v8 _activityMoveMode];

      if (v11 == (id)2)
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = self;
        id v24 = [v23 mainBundle];
        NSString v25 = String._bridgeToObjectiveC()();
        NSString v26 = String._bridgeToObjectiveC()();
        id v27 = [v24 localizedStringForKey:v25 value:0 table:v26];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v28 = [v23 mainBundle];
        NSString v29 = String._bridgeToObjectiveC()();
        NSString v30 = String._bridgeToObjectiveC()();
        id v31 = [v28 localizedStringForKey:v29 value:0 table:v30];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v19 = [v23 mainBundle];
        NSString v32 = String._bridgeToObjectiveC()();
        NSString v20 = String._bridgeToObjectiveC()();
        id v21 = [v19 localizedStringForKey:v32 value:0 table:v20];

        char v22 = 1;
        goto LABEL_13;
      }
      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  id v12 = self;
  id v13 = [v12 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v16 = [v12 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v19 = [v12 mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v19 localizedStringForKey:v20 value:0 table:0];
  char v22 = 0;
LABEL_13:

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v35 = [self alertControllerWithTitle:v33 message:v34 preferredStyle:1];

  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10008E75C(a2, (uint64_t)v65);
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v36;
  sub_100093E60(v65, (uint64_t)(v37 + 3));
  v37[8] = a3;
  v37[9] = a4;
  swift_retain();
  sub_10008A670(a3);
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v63 = sub_100618814;
  uint64_t v64 = v37;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v60 = 1107296256;
  uint64_t v61 = sub_100066A00;
  id v62 = &unk_1008D1E70;
  id v39 = _Block_copy(&aBlock);
  swift_release();
  NSString v40 = self;
  id v41 = [v40 actionWithTitle:v38 style:0 handler:v39];
  _Block_release(v39);
  swift_release();

  [v35 addAction:v41];
  if ((v22 & 1) == 0)
  {
    id v42 = [self mainBundle];
    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = [v42 localizedStringForKey:v43 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10008E75C(a2, (uint64_t)v65);
    id v46 = (void *)swift_allocObject();
    v46[2] = v45;
    sub_100093E60(v65, (uint64_t)(v46 + 3));
    v46[8] = a3;
    v46[9] = a4;
    sub_10008A670(a3);
    swift_retain();
    NSString v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_100618878;
    uint64_t v64 = v46;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v60 = 1107296256;
    uint64_t v61 = sub_100066A00;
    id v62 = &unk_1008D1EC0;
    unint64_t v48 = _Block_copy(&aBlock);
    swift_release();
    id v49 = [v40 actionWithTitle:v47 style:0 handler:v48];
    _Block_release(v48);
    swift_release();

    [v35 addAction:v49];
  }
  id v50 = [self mainBundle];
  NSString v51 = String._bridgeToObjectiveC()();
  id v52 = [v50 localizedStringForKey:v51 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v54 = [v40 actionWithTitle:v53 style:0 handler:0];

  [v35 addAction:v54];
  [v58 presentViewController:v35 animated:1 completion:0];
}

uint64_t sub_1006184E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v9 = (void *)result;
    id v10 = *(id *)(result + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider);

    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a4;
    *(void *)(v11 + 24) = a5;
    sub_10008A670(a4);
    sub_1004B93A8(a3, 1, (uint64_t)sub_10061888C, v11);

    return swift_release();
  }
  return result;
}

void sub_1006185BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v9 = (void *)Strong;
    id v10 = *(id *)(Strong + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataProvider);

    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a4;
    *(void *)(v11 + 24) = a5;
    sub_10008A670(a4);
    sub_1004B93A8(a3, 0, (uint64_t)sub_10061888C, v11);
    swift_release();
  }
}

uint64_t type metadata accessor for HistoryListViewController()
{
  return self;
}

id sub_100618748(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_10007E2D8(0, &qword_10095B268);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1006187D8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100618814(uint64_t a1)
{
  return sub_1006184E0(a1, v1[2], (uint64_t)(v1 + 3), v1[8], v1[9]);
}

uint64_t sub_100618828()
{
  swift_release();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 24);
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_100618878(uint64_t a1)
{
  sub_1006185BC(a1, v1[2], (uint64_t)(v1 + 3), v1[8], v1[9]);
}

uint64_t sub_100618894()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1006188CC()
{
  sub_100617B2C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1006188D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10095EAA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100618940()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100618978()
{
}

uint64_t sub_100618980(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006189C8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100618A00()
{
  sub_100614360(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int16 *)(v0 + 32));
}

void sub_100618A0C()
{
}

void sub_100618A14()
{
  uint64_t v1 = type metadata accessor for DateComponents();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v5 = IndexPath.section.getter();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems);
  if (v5 >= *(void *)(v7 + 16))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!*(void *)(*(void *)(v7 + 8 * v5 + 32) + 16)) {
    return;
  }
  if (IndexPath.row.getter()) {
    return;
  }
  int v8 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue + 9);
  switch(v8)
  {
    case 2:
      return;
    case 3:
      id v9 = self;
      id v10 = "heightForAllWorkoutSummary";
      goto LABEL_12;
    case 5:
      id v9 = self;
      id v10 = "heightForMindfulnessSessions";
LABEL_12:
      [v9 v10];
      return;
  }
  unint64_t v11 = IndexPath.section.getter();
  if ((v11 & 0x8000000000000000) != 0) {
    goto LABEL_26;
  }
  uint64_t v12 = *(void *)(v0 + v6);
  if (v11 >= *(void *)(v12 + 16))
  {
LABEL_27:
    __break(1u);
    return;
  }
  uint64_t v13 = *(void *)(v12 + 8 * v11 + 32);
  if (*(void *)(v13 + 16))
  {
    sub_10008E75C(v13 + 32, (uint64_t)v22);
    sub_1000AFA94((uint64_t *)&unk_100955630);
    sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    if (swift_dynamicCast())
    {
      id v14 = v21;
      sub_100612CDC((uint64_t)v4);

      uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics);
      if (*(void *)(v15 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v16 = sub_100529888((uint64_t)v4);
        if (v17)
        {
          id v18 = *(id *)(*(void *)(v15 + 56) + 8 * v16);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
          id v19 = self;
          id v20 = [self initForWorkout:v14];
          [v19 heightForWorkoutActivityTypeKey:v20 statistics:v18];

          return;
        }
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
}

id sub_100618D2C()
{
  sub_1006175D4((uint64_t)&aBlock);
  if (v15)
  {
    sub_100093E60(&aBlock, (uint64_t)v18);
    uint64_t v0 = v19;
    uint64_t v1 = sub_10007E4EC(v18, v19);
    uint64_t v2 = sub_100616E24((uint64_t)v1, v0);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    uint64_t v4 = v2;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    uint64_t v7 = self;
    unint64_t v16 = sub_1001D7D00;
    uint64_t v17 = v3;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    id v14 = sub_1005BEB8C;
    uint64_t v15 = &unk_1008D2190;
    int v8 = _Block_copy(&aBlock);
    swift_retain_n();
    id v9 = v4;
    swift_release();
    unint64_t v16 = sub_10061998C;
    uint64_t v17 = v6;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    id v14 = sub_100618748;
    uint64_t v15 = &unk_1008D21B8;
    id v10 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v11 = [v7 configurationWithIdentifier:isa previewProvider:v8 actionProvider:v10];

    swift_release();
    swift_release();
    _Block_release(v10);
    _Block_release(v8);

    swift_release();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v18);
  }
  else
  {
    sub_10008DB18((uint64_t)&aBlock, &qword_10095EAA8);
    return 0;
  }
  return v11;
}

uint64_t sub_100618F78(void *a1, void *a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009556D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = __chkstk_darwin(v7).n128_u64[0];
  id v11 = (char *)&aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long aBlock = [a1 identifier];
  sub_1000AFA94(&qword_10094EA78);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (!v12)
  {
    v13(v6, 1, 1, v7);
    goto LABEL_6;
  }
  v13(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_6:
    id v18 = &qword_1009556D0;
    p_long long aBlock = (long long *)v6;
    return sub_10008DB18((uint64_t)p_aBlock, v18);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  sub_1006175D4((uint64_t)&aBlock);
  if (v22)
  {
    sub_100093E60(&aBlock, (uint64_t)v26);
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10008E75C((uint64_t)v26, (uint64_t)v25);
    uint64_t v15 = swift_allocObject();
    sub_100093E60(v25, v15 + 16);
    *(void *)(v15 + 56) = v14;
    uint64_t v23 = sub_100619980;
    uint64_t v24 = v15;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    id v21 = sub_100070394;
    char v22 = &unk_1008D2118;
    unint64_t v16 = _Block_copy(&aBlock);
    swift_release();
    [a2 addCompletion:v16];
    _Block_release(v16);
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v26);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  id v18 = &qword_10095EAA8;
  p_long long aBlock = &aBlock;
  return sub_10008DB18((uint64_t)p_aBlock, v18);
}

id sub_1006192A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  sub_1006175D4((uint64_t)&aBlock);
  if (v23)
  {
    uint64_t v20 = a1;
    sub_100093E60(&aBlock, (uint64_t)v27);
    sub_10008E75C((uint64_t)v27, (uint64_t)&aBlock);
    sub_1000AFA94((uint64_t *)&unk_100955630);
    sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    if (swift_dynamicCast()) {

    }
    id v6 = [self mainBundle];
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 localizedStringForKey:v7 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v2);
    unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v11 + v10, (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    swift_retain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_10061986C;
    uint64_t v25 = v11;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    char v22 = sub_100612C08;
    uint64_t v23 = &unk_1008D20A0;
    uint64_t v13 = _Block_copy(&aBlock);
    id v14 = [self contextualActionWithStyle:1 title:v12 handler:v13];

    _Block_release(v13);
    swift_release();
    swift_release();
    sub_1000AFA94((uint64_t *)&unk_10095B850);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_100751040;
    *(void *)(v15 + 32) = v14;
    *(void *)&long long aBlock = v15;
    specialized Array._endMutation()();
    sub_10007E2D8(0, &qword_10094EA70);
    id v16 = v14;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v5 = [self configurationWithActions:isa];

    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v27);
  }
  else
  {
    sub_10008DB18((uint64_t)&aBlock, &qword_10095EAA8);
    return 0;
  }
  return v5;
}

void sub_1006196C4()
{
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_dataSource] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterValue];
  *(void *)uint64_t v1 = 0;
  *((_WORD *)v1 + 4) = 512;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_allHistoryItems] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_workoutStatistics] = _swiftEmptyDictionarySingleton;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_filterViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_observers] = _swiftEmptyArrayStorage;
  uint64_t v2 = &v0[OBJC_IVAR____TtC10FitnessApp25HistoryListViewController_awaitingDataLoadFilter];
  *(void *)uint64_t v2 = 0;
  *((_WORD *)v2 + 4) = 1792;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1006197A0()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10061986C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_100616B88(a1, a2, a3, a4, v10, v11);
}

uint64_t sub_100619908()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_100619940()
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 16);
  swift_release();

  return swift_deallocObject();
}

void sub_100619980()
{
  sub_1006168BC((void *)(v0 + 16));
}

Class sub_10061998C(uint64_t a1)
{
  return sub_100616504(a1, *(void **)(v1 + 16));
}

uint64_t sub_100619994()
{
  return swift_deallocObject();
}

id sub_1006199CC()
{
  return [*(id *)(v0 + 16) shareTapped:0];
}

void sub_1006199E0(void *a1, __int16 a2)
{
}

void sub_1006199E8()
{
}

uint64_t sub_1006199F0()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_100619A70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v4, a2, v6);
    NSString v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
    *((unsigned char *)v4 + v7[5]) = *((unsigned char *)a2 + v7[5]);
    uint64_t v8 = v7[6];
    uint64_t v9 = (void *)((char *)v4 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = v7[7];
    uint64_t v13 = *(void **)((char *)a2 + v12);
    *(void *)((char *)v4 + v12) = v13;
    *(void *)((char *)v4 + v7[8]) = *(void *)((char *)a2 + v7[8]);
    *((unsigned char *)v4 + v7[9]) = *((unsigned char *)a2 + v7[9]);
    uint64_t v14 = v7[10];
    id v27 = (char *)v4 + v14;
    uint64_t v15 = (char *)a2 + v14;
    uint64_t v16 = type metadata accessor for Date();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    id v18 = v13;
    swift_bridgeObjectRetain();
    v17(v27, v15, v16);
    v17((char *)v4 + v7[11], (char *)a2 + v7[11], v16);
    *(void *)((char *)v4 + v7[12]) = *(void *)((char *)a2 + v7[12]);
    *(void *)((char *)v4 + v7[13]) = *(void *)((char *)a2 + v7[13]);
    *(void *)((char *)v4 + v7[14]) = *(void *)((char *)a2 + v7[14]);
    *(void *)((char *)v4 + v7[15]) = *(void *)((char *)a2 + v7[15]);
    *(void *)((char *)v4 + v7[16]) = *(void *)((char *)a2 + v7[16]);
    *(_OWORD *)((char *)v4 + v7[17]) = *(_OWORD *)((char *)a2 + v7[17]);
    *(void *)((char *)v4 + v7[18]) = *(void *)((char *)a2 + v7[18]);
    uint64_t v19 = v7[19];
    uint64_t v20 = *(void **)((char *)a2 + v19);
    *(void *)((char *)v4 + v19) = v20;
    uint64_t v21 = v7[20];
    char v22 = *(void **)((char *)a2 + v21);
    *(void *)((char *)v4 + v21) = v22;
    *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v23 = v20;
    id v24 = v22;
  }
  swift_retain();
  return v4;
}

uint64_t sub_100619CBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  unint64_t v3 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + v3[10];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + v3[11], v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100619E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(unsigned char *)(a1 + v6[5]) = *(unsigned char *)(a2 + v6[5]);
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = v6[7];
  uint64_t v12 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v12;
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  uint64_t v13 = v6[10];
  uint64_t v25 = a1 + v13;
  uint64_t v14 = a2 + v13;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  id v17 = v12;
  swift_bridgeObjectRetain();
  v16(v25, v14, v15);
  v16(a1 + v6[11], a2 + v6[11], v15);
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  *(void *)(a1 + v6[13]) = *(void *)(a2 + v6[13]);
  *(void *)(a1 + v6[14]) = *(void *)(a2 + v6[14]);
  *(void *)(a1 + v6[15]) = *(void *)(a2 + v6[15]);
  *(void *)(a1 + v6[16]) = *(void *)(a2 + v6[16]);
  *(_OWORD *)(a1 + v6[17]) = *(_OWORD *)(a2 + v6[17]);
  *(void *)(a1 + v6[18]) = *(void *)(a2 + v6[18]);
  uint64_t v18 = v6[19];
  uint64_t v19 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v19;
  uint64_t v20 = v6[20];
  uint64_t v21 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v21;
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v22 = v19;
  id v23 = v21;
  swift_retain();
  return a1;
}

uint64_t sub_10061A014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[7];
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v15 = v7[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(a1 + v7[11], a2 + v7[11], v18);
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
  swift_retain();
  swift_release();
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  swift_retain();
  swift_release();
  *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
  *(void *)(a1 + v7[16]) = *(void *)(a2 + v7[16]);
  uint64_t v20 = v7[17];
  uint64_t v21 = (void *)(a1 + v20);
  id v22 = (void *)(a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
  uint64_t v23 = v7[19];
  id v24 = *(void **)(a2 + v23);
  uint64_t v25 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = v24;
  id v26 = v24;

  uint64_t v27 = v7[20];
  id v28 = *(void **)(a2 + v27);
  NSString v29 = *(void **)(a1 + v27);
  *(void *)(a1 + v27) = v28;
  id v30 = v28;

  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10061A268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v8 = v7[10];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + v7[11], a2 + v7[11], v11);
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
  *(void *)(a1 + v7[16]) = *(void *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  *(void *)(a1 + v7[20]) = *(void *)(a2 + v7[20]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10061A418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for WorkoutChartViewModel(0);
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[7];
  id v14 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);

  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v15 = v7[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40);
  v19(v16, v17, v18);
  v19(a1 + v7[11], a2 + v7[11], v18);
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
  swift_release();
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  swift_release();
  *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
  *(void *)(a1 + v7[16]) = *(void *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
  uint64_t v20 = v7[19];
  uint64_t v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  uint64_t v22 = v7[20];
  uint64_t v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_10061A618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10061A62C);
}

uint64_t sub_10061A62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10061A6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10061A700);
}

uint64_t sub_10061A700(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutDetailChartView()
{
  uint64_t result = qword_100965888;
  if (!qword_100965888) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10061A808()
{
  uint64_t result = type metadata accessor for WorkoutChartViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10061A8A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10061A8BC()
{
  static Color.gray.getter();
  uint64_t v0 = Color.opacity(_:)();
  uint64_t result = swift_release();
  qword_100998670 = v0;
  return result;
}

uint64_t sub_10061A8FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009658D8);
  __chkstk_darwin(v4 - 8);
  uint64_t v38 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 24);
  uint64_t v37 = a1;
  unint64_t v10 = (uint64_t *)(a1 + v9);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v39 = *v10;
  uint64_t v40 = v12;
  sub_1000A06D0();
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  if ((StringProtocol.isEmptyOrWhiteSpace.getter() & 1) == 0)
  {
    uint64_t v39 = v11;
    uint64_t v40 = v12;
    swift_bridgeObjectRetain();
    uint64_t v17 = Text.init<A>(_:)();
    uint64_t v19 = v18;
    char v21 = v20 & 1;
    static Color.white.getter();
    uint64_t v34 = Text.foregroundColor(_:)();
    uint64_t v23 = v22;
    char v25 = v24;
    uint64_t v36 = v26;
    swift_release();
    int v35 = v25 & 1;
    sub_1000A06C0(v17, v19, v21);
    swift_bridgeObjectRelease();
    static Font.headline.getter();
    uint64_t v13 = Text.font(_:)();
    uint64_t v14 = v27;
    LOBYTE(v19) = v28;
    uint64_t v16 = v29;
    swift_release();
    uint64_t v15 = v19 & 1;
    sub_1000A06C0(v34, v23, v35);
    swift_bridgeObjectRelease();
  }
  sub_10061AB6C((uint64_t)v8);
  uint64_t v30 = v38;
  sub_1000AEF2C((uint64_t)v8, v38, &qword_1009658D8);
  *a2 = v13;
  a2[1] = v14;
  a2[2] = v15;
  a2[3] = v16;
  uint64_t v31 = sub_1000AFA94(&qword_1009658E0);
  sub_1000AEF2C(v30, (uint64_t)a2 + *(int *)(v31 + 48), &qword_1009658D8);
  sub_1000A17A4(v13, v14, v15, v16);
  sub_10008DB18((uint64_t)v8, &qword_1009658D8);
  sub_10008DB18(v30, &qword_1009658D8);
  return sub_1000A1760(v13, v14, v15, v16);
}

uint64_t sub_10061AB6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v51 = a1;
  uint64_t v3 = type metadata accessor for WorkoutChart();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009658E8);
  uint64_t v47 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000AFA94(&qword_1009658F0);
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  id v44 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1000AFA94(&qword_1009658F8) - 8;
  __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000AFA94(&qword_100965900) - 8;
  __chkstk_darwin(v49);
  uint64_t v46 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BB760(v2, (uint64_t)v5, type metadata accessor for WorkoutChartViewModel);
  type metadata accessor for WorkoutDetailChartView();
  uint64_t v13 = (uint64_t *)&v5[*(int *)(v3 + 20)];
  type metadata accessor for WorkoutChartProperties();
  sub_10061E0D8(&qword_100968D00, (void (*)(uint64_t))type metadata accessor for WorkoutChartProperties);
  swift_retain();
  *uint64_t v13 = ObservedObject.init(wrappedValue:)();
  v13[1] = v14;
  uint64_t v53 = v2;
  uint64_t v15 = sub_1000AFA94(&qword_100965908);
  uint64_t v16 = sub_10061E0D8(&qword_10095E948, (void (*)(uint64_t))type metadata accessor for WorkoutChart);
  unint64_t v17 = sub_10061E120();
  View.chartXAxis<A>(content:)();
  sub_10061E59C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WorkoutChart);
  uint64_t v52 = v2;
  sub_1000AFA94(&qword_100965938);
  *(void *)&long long v54 = v3;
  *((void *)&v54 + 1) = v15;
  *(void *)&long long v55 = v16;
  *((void *)&v55 + 1) = v17;
  swift_getOpaqueTypeConformance2();
  sub_1000A132C(&qword_100965940, &qword_100965938);
  uint64_t v18 = v44;
  View.chartYAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v6);
  uint64_t v19 = static Alignment.topTrailing.getter();
  uint64_t v21 = v20;
  sub_10061B938(v2, (uint64_t)&v54);
  long long v22 = v54;
  LOBYTE(v8) = v55;
  uint64_t v23 = *((void *)&v55 + 1);
  long long v24 = v56;
  uint64_t v25 = v48;
  uint64_t v26 = v18;
  uint64_t v27 = v18;
  uint64_t v28 = v50;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v11, v26, v50);
  uint64_t v29 = &v11[*(int *)(v45 + 44)];
  *(_OWORD *)uint64_t v29 = v22;
  v29[16] = (char)v8;
  *((void *)v29 + 3) = v23;
  *((_OWORD *)v29 + 2) = v24;
  *((void *)v29 + 6) = v19;
  *((void *)v29 + 7) = v21;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v28);
  LOBYTE(v27) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = v46;
  sub_1000AEF2C((uint64_t)v11, v46, &qword_1009658F8);
  uint64_t v39 = v38 + *(int *)(v49 + 44);
  *(unsigned char *)uint64_t v39 = (_BYTE)v27;
  *(void *)(v39 + 8) = v31;
  *(void *)(v39 + 16) = v33;
  *(void *)(v39 + 24) = v35;
  *(void *)(v39 + 32) = v37;
  *(unsigned char *)(v39 + 40) = 0;
  sub_10008DB18((uint64_t)v11, &qword_1009658F8);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v40 = v51;
  sub_1000AEF2C(v38, v51, &qword_100965900);
  id v41 = (_OWORD *)(v40 + *(int *)(sub_1000AFA94(&qword_1009658D8) + 36));
  long long v42 = v55;
  *id v41 = v54;
  v41[1] = v42;
  v41[2] = v56;
  return sub_10008DB18(v38, &qword_100965900);
}

uint64_t sub_10061B128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v33 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100965930);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v5 - 8);
  uint64_t v32 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for WorkoutDetailChartView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = sub_1000AFA94(&qword_100965920);
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + *(int *)(type metadata accessor for WorkoutChartViewModel(0)
                                                                       + 28)), "string"));
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  uint64_t v34 = v15;
  uint64_t v35 = v17;
  sub_1000A06D0();
  LOBYTE(v15) = StringProtocol.isEmptyOrWhiteSpace.getter();
  swift_bridgeObjectRelease();
  sub_1003393D0();
  sub_1001BB760(v2, (uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = swift_allocObject();
  sub_10061E534((uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, (uint64_t (*)(void))type metadata accessor for WorkoutDetailChartView);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  if (v15)
  {
    sub_1000AFA94(&qword_100965988);
    type metadata accessor for Date();
    sub_10061E374();
    AxisMarks.init<A>(preset:position:values:content:)();
    uint64_t v21 = v27;
    uint64_t v20 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v33, v13, v28);
    sub_1000AFA94(&qword_100965980);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v20);
  }
  else
  {
    sub_1000AFA94(&qword_100965950);
    type metadata accessor for Date();
    sub_10061E204();
    uint64_t v23 = v29;
    AxisMarks.init<A>(preset:position:values:content:)();
    uint64_t v25 = v30;
    uint64_t v24 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v33, v23, v31);
    sub_1000AFA94(&qword_100965980);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v23, v24);
  }
}

uint64_t sub_10061B618(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v3 - 8);
  sub_1000AFA94(&qword_10094E7C8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1007509E0;
  *(void *)(v4 + 32) = *(void *)(a1 + *(int *)(type metadata accessor for WorkoutChartViewModel(0) + 68));
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000AFA94(&qword_100965948);
  type metadata accessor for AxisGridLine();
  swift_getOpaqueTypeConformance2();
  return AxisMarks.init<A>(preset:position:values:content:)();
}

uint64_t sub_10061B7CC()
{
  uint64_t v0 = type metadata accessor for AxisGridLine();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  long long v9 = v6;
  long long v10 = v7;
  uint64_t v11 = v8;
  AxisGridLine.init(centered:stroke:)();
  if (qword_10094AFF8 != -1) {
    swift_once();
  }
  v5[1] = qword_100998670;
  AxisMark.foregroundStyle<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10061B938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v5);
  uint64_t result = type metadata accessor for WorkoutChartViewModel(0);
  double v7 = *(double *)(a1 + *(int *)(result + 64));
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18)
  {
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v8);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v9 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v11 = v10;
    char v13 = v12 & 1;
    static Font.footnote.getter();
    uint64_t v14 = Text.font(_:)();
    uint64_t v16 = v15;
    char v18 = v17;
    swift_release();
    char v19 = v18 & 1;
    sub_1000A06C0(v9, v11, v13);
    swift_bridgeObjectRelease();
    static Color.secondary.getter();
    uint64_t v20 = Text.foregroundStyle<A>(_:)();
    uint64_t v22 = v21;
    char v24 = v23;
    uint64_t v26 = v25;
    sub_1000A06C0(v14, v16, v19);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v20;
    *(void *)(a2 + 8) = v22;
    *(unsigned char *)(a2 + 16) = v24 & 1;
    *(void *)(a2 + 24) = v26;
    *(_OWORD *)(a2 + 32) = xmmword_10076FD30;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10061BB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v65 = a3;
  uint64_t v57 = sub_1000AFA94(&qword_1009659D8);
  __chkstk_darwin(v57);
  long long v56 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100965968);
  __chkstk_darwin(v5 - 8);
  uint64_t v60 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100965978);
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  __chkstk_darwin(v7);
  long long v54 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v64 = (char *)v50 - v10;
  uint64_t v11 = type metadata accessor for AxisGridLine();
  uint64_t v52 = *(void (***)(char *, uint64_t))(v11 - 8);
  __chkstk_darwin(v11);
  char v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000AFA94(&qword_100965948);
  uint64_t v63 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v61 = (char *)v50 - v17;
  uint64_t v18 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = sub_1000AFA94(&qword_10095E9B8);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  char v23 = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = AxisValue.index.getter();
  uint64_t v53 = a1;
  uint64_t v25 = AxisValue.count.getter();
  if (__OFSUB__(v25, 1))
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_5;
  }
  if (v24 == v25 - 1)
  {
    __chkstk_darwin(v25);
    static AxisValueLabelCollisionResolution.automatic.getter();
    static AxisValueLabelOrientation.automatic.getter();
    uint64_t v48 = sub_1000AFA94(&qword_1009575A0);
    unint64_t v49 = sub_10033074C();
    uint64_t v46 = (double (*)@<D0>(uint64_t@<X8>))sub_10061E684;
    uint64_t v47 = &v46;
    AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v65, v23, v20);
    sub_1000AFA94(&qword_1009659F0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  long long v70 = v67;
  long long v71 = v68;
  uint64_t v72 = v69;
  AxisGridLine.init(centered:stroke:)();
  if (qword_10094AFF8 != -1) {
    goto LABEL_7;
  }
LABEL_5:
  uint64_t v66 = qword_100998670;
  uint64_t v51 = v15;
  AxisMark.foregroundStyle<A>(_:)();
  v52[1](v13, v11);
  uint64_t v27 = v63;
  uint64_t v28 = *(void (***)(char *, uint64_t))(v63 + 32);
  v50[1] = v63 + 32;
  uint64_t v52 = v28;
  uint64_t v29 = v61;
  uint64_t v30 = v15;
  uint64_t v31 = v55;
  uint64_t v32 = ((uint64_t (*)(char *, char *, uint64_t))v28)(v61, v30, v55);
  __chkstk_darwin(v32);
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  uint64_t v48 = sub_1000AFA94(&qword_1009659E0);
  unint64_t v49 = sub_1000A132C(&qword_1009659E8, &qword_1009659E0);
  uint64_t v46 = sub_10061E5FC;
  uint64_t v47 = &v46;
  uint64_t v33 = v64;
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v35 = v51;
  v34(v51, v29, v31);
  uint64_t v37 = v58;
  uint64_t v36 = v59;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v39 = v54;
  v38(v54, v33, v59);
  uint64_t v40 = v56;
  v34(v56, v35, v31);
  sub_1000A132C(&qword_100965970, &qword_100965978);
  uint64_t v41 = v57;
  long long v42 = &v40[*(int *)(v57 + 48)];
  v38(v42, v39, v36);
  uint64_t v43 = (uint64_t)v60;
  ((void (*)(char *, char *, uint64_t))v52)(v60, v40, v31);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v43 + *(int *)(v41 + 48), v42, v36);
  id v44 = *(void (**)(char *, uint64_t))(v37 + 8);
  v44(v39, v36);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v63 + 8);
  v45(v51, v31);
  sub_1000AEF2C(v43, v65, &qword_100965968);
  sub_1000AFA94(&qword_1009659F0);
  swift_storeEnumTagMultiPayload();
  sub_10008DB18(v43, &qword_100965968);
  v44(v64, v36);
  return ((uint64_t (*)(char *, uint64_t))v45)(v61, v31);
}

__n128 sub_10061C428@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.leading.getter();
  sub_10061C4A4(a1, (uint64_t)&v10);
  char v5 = v11;
  uint64_t v6 = v12;
  __n128 result = v10;
  long long v8 = v13;
  long long v9 = v14;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(__n128 *)(a2 + 24) = result;
  *(unsigned char *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(_OWORD *)(a2 + 56) = v8;
  *(_OWORD *)(a2 + 72) = v9;
  return result;
}

uint64_t sub_10061C4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributedString();
  __chkstk_darwin(v4 - 8);
  unint64_t v5 = AxisValue.index.getter();
  uint64_t v6 = a1;
  sub_10061C6DC(v5, (uint64_t)v35);
  uint64_t v7 = v35[0];
  uint64_t v8 = v35[1];
  char v9 = v36;
  uint64_t v34 = v37;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if (!AxisValue.index.getter())
  {
    uint64_t v33 = type metadata accessor for WorkoutChartViewModel(0);
    id v14 = *(id *)(v6 + *(int *)(v33 + 28));
    AttributedString.init(_:)();
    uint64_t v15 = Text.init(_:)();
    uint64_t v17 = v16;
    char v19 = v18 & 1;
    static Font.footnote.getter();
    uint64_t v31 = Text.font(_:)();
    uint64_t v32 = v7;
    uint64_t v21 = v20;
    char v23 = v22;
    swift_release();
    char v30 = v23 & 1;
    sub_1000A06C0(v15, v17, v19);
    swift_bridgeObjectRelease();
    sub_100651620(*(unsigned char *)(v6 + *(int *)(v33 + 20)));
    Color.init(_:)();
    uint64_t v10 = Text.foregroundColor(_:)();
    uint64_t v11 = v24;
    char v26 = v25;
    uint64_t v13 = v27;
    swift_release();
    uint64_t v12 = v26 & 1;
    uint64_t v28 = v21;
    uint64_t v7 = v32;
    sub_1000A06C0(v31, v28, v30);
    swift_bridgeObjectRelease();
  }
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v34;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = v13;
  sub_1000A1750(v7, v8, v9);
  swift_bridgeObjectRetain();
  sub_1000A17A4(v10, v11, v12, v13);
  sub_1000A1760(v10, v11, v12, v13);
  sub_1000A06C0(v7, v8, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10061C6DC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WorkoutDetailChartView();
  uint64_t v8 = sub_1003393D0();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v8 + 16) > a1)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * a1, v4);
    swift_bridgeObjectRelease();
    if (qword_10094B0F8 == -1) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  __break(1u);
LABEL_12:
  swift_once();
LABEL_4:
  char v9 = (void *)qword_100969980;
  sub_1006DDD24();
  if (v10)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  [v9 setDateFormat:v11];

  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v13 = [v9 stringFromDate:isa];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v36 = v14;
  uint64_t v37 = v16;
  sub_1000A06D0();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  static Font.footnote.getter();
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  char v26 = v25;
  swift_release();
  sub_1000A06C0(v17, v19, v21);
  swift_bridgeObjectRelease();
  if (qword_10094AFF8 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_100998670;
  swift_retain();
  uint64_t v27 = Text.foregroundStyle<A>(_:)();
  uint64_t v29 = v28;
  char v31 = v30;
  uint64_t v33 = v32;
  sub_1000A06C0(v22, v24, v26 & 1);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v27;
  *(void *)(a2 + 8) = v29;
  *(unsigned char *)(a2 + 16) = v31 & 1;
  *(void *)(a2 + 24) = v33;
  return result;
}

uint64_t sub_10061CA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v65 = a3;
  uint64_t v57 = sub_1000AFA94(&qword_1009659B8);
  __chkstk_darwin(v57);
  long long v56 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_1009659A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v60 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_1009659B0);
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  __chkstk_darwin(v7);
  long long v54 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v64 = (char *)v50 - v10;
  uint64_t v11 = type metadata accessor for AxisGridLine();
  uint64_t v52 = *(void (***)(char *, uint64_t))(v11 - 8);
  __chkstk_darwin(v11);
  id v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000AFA94(&qword_100965948);
  uint64_t v63 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v61 = (char *)v50 - v17;
  uint64_t v18 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = sub_1000AFA94(&qword_10095E9B8);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = AxisValue.index.getter();
  uint64_t v53 = a1;
  uint64_t v25 = AxisValue.count.getter();
  if (__OFSUB__(v25, 1))
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_5;
  }
  if (v24 == v25 - 1)
  {
    __chkstk_darwin(v25);
    static AxisValueLabelCollisionResolution.automatic.getter();
    static AxisValueLabelOrientation.automatic.getter();
    uint64_t v48 = sub_1000AFA94(&qword_1009575A0);
    unint64_t v49 = sub_10033074C();
    uint64_t v46 = sub_10061E52C;
    uint64_t v47 = &v46;
    AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v65, v23, v20);
    sub_1000AFA94(&qword_1009659D0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  long long v70 = v67;
  long long v71 = v68;
  uint64_t v72 = v69;
  AxisGridLine.init(centered:stroke:)();
  if (qword_10094AFF8 != -1) {
    goto LABEL_7;
  }
LABEL_5:
  uint64_t v66 = qword_100998670;
  uint64_t v51 = v15;
  AxisMark.foregroundStyle<A>(_:)();
  v52[1](v13, v11);
  uint64_t v27 = v63;
  uint64_t v28 = *(void (***)(char *, uint64_t))(v63 + 32);
  v50[1] = v63 + 32;
  uint64_t v52 = v28;
  uint64_t v29 = v61;
  char v30 = v15;
  uint64_t v31 = v55;
  uint64_t v32 = ((uint64_t (*)(char *, char *, uint64_t))v28)(v61, v30, v55);
  __chkstk_darwin(v32);
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  uint64_t v48 = sub_1000AFA94(&qword_1009659C0);
  unint64_t v49 = sub_1000A132C(&qword_1009659C8, &qword_1009659C0);
  uint64_t v46 = sub_10061E524;
  uint64_t v47 = &v46;
  uint64_t v33 = v64;
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v35 = v51;
  v34(v51, v29, v31);
  uint64_t v37 = v58;
  uint64_t v36 = v59;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v39 = v54;
  v38(v54, v33, v59);
  uint64_t v40 = v56;
  v34(v56, v35, v31);
  sub_1000A132C(&qword_1009659A8, &qword_1009659B0);
  uint64_t v41 = v57;
  long long v42 = &v40[*(int *)(v57 + 48)];
  v38(v42, v39, v36);
  uint64_t v43 = (uint64_t)v60;
  ((void (*)(char *, char *, uint64_t))v52)(v60, v40, v31);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v43 + *(int *)(v41 + 48), v42, v36);
  id v44 = *(void (**)(char *, uint64_t))(v37 + 8);
  v44(v39, v36);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v63 + 8);
  v45(v51, v31);
  sub_1000AEF2C(v43, v65, &qword_1009659A0);
  sub_1000AFA94(&qword_1009659D0);
  swift_storeEnumTagMultiPayload();
  sub_10008DB18(v43, &qword_1009659A0);
  v44(v64, v36);
  return ((uint64_t (*)(char *, uint64_t))v45)(v61, v31);
}

__n128 sub_10061D2AC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static HorizontalAlignment.leading.getter();
  sub_10061D324((uint64_t)v8);
  char v3 = v9;
  __n128 result = (__n128)v8[0];
  long long v5 = v8[1];
  long long v6 = v10;
  long long v7 = v11;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 56) = v3;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  return result;
}

uint64_t sub_10061D324@<X0>(uint64_t a1@<X8>)
{
  if (AxisValue.index.getter())
  {
    uint64_t v2 = AxisValue.index.getter();
    sub_10061D490(v2, (uint64_t)&v13);
  }
  else
  {
    unint64_t v3 = AxisValue.index.getter();
    sub_10061C6DC(v3, (uint64_t)&v13);
  }
  _ConditionalContent<>.init(storage:)();
  long long v4 = v13;
  uint64_t v5 = v14;
  uint64_t v6 = v15;
  char v7 = v16;
  unint64_t v8 = AxisValue.index.getter();
  sub_10061D6CC(v8, (uint64_t *)&v13);
  long long v9 = v13;
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  sub_1001BB600(v4, *((uint64_t *)&v4 + 1), v5);
  sub_1000A17A4(v9, *((uint64_t *)&v9 + 1), v10, v11);
  sub_1000A1760(v9, *((uint64_t *)&v9 + 1), v10, v11);
  return sub_1001BB654(v4, *((uint64_t *)&v4 + 1), v5);
}

uint64_t sub_10061D490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 localizedStringForKey:v5 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1007509E0;
  *(void *)(v7 + 56) = &type metadata for Int;
  *(void *)(v7 + 64) = &protocol witness table for Int;
  *(void *)(v7 + 32) = a1;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000A06D0();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  static Font.footnote.getter();
  uint64_t v13 = Text.font(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  swift_release();
  sub_1000A06C0(v8, v10, v12);
  swift_bridgeObjectRelease();
  if (qword_10094AFF8 != -1) {
    swift_once();
  }
  uint64_t v18 = Text.foregroundColor(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  sub_1000A06C0(v13, v15, v17 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 16) = v22 & 1;
  *(void *)(a2 + 24) = v24;
  return result;
}

uint64_t sub_10061D6CC@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AttributedString();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = (int *)type metadata accessor for WorkoutChartDataElement(0);
  uint64_t v8 = *((void *)v61 - 1);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v59 = (uint64_t)&v53 - v11;
  uint64_t v12 = sub_1000AFA94(&qword_100959218);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v64 = (uint64_t)&v53 - v16;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v63 = (char *)&v53 - v22;
  type metadata accessor for WorkoutDetailChartView();
  uint64_t v62 = v2;
  uint64_t result = sub_1003393D0();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a1)
  {
    uint64_t v60 = a2;
    unint64_t v24 = result
        + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))
        + *(void *)(v18 + 72) * a1;
    uint64_t v25 = v17;
    long long v56 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
    id v57 = v7;
    v56(v20, v24, v17);
    swift_bridgeObjectRelease();
    char v26 = v63;
    sub_100339D64();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v18 + 8);
    v27(v20, v25);
    uint64_t v28 = v64;
    sub_100378068(v64);
    sub_1000AEF2C(v28, (uint64_t)v14, &qword_100959218);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v14, 1, v61) == 1)
    {
      sub_10008DB18(v28, &qword_100959218);
      v27(v26, v25);
      uint64_t result = sub_10008DB18((uint64_t)v14, &qword_100959218);
    }
    else
    {
      uint64_t v55 = (uint64_t (*)(char *, uint64_t))v27;
      uint64_t v29 = v59;
      sub_10061E534((uint64_t)v14, v59, type metadata accessor for WorkoutChartDataElement);
      id v30 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
      id v31 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
      id v32 = [v30 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v31];

      if (v32)
      {
        uint64_t v33 = (uint64_t)v58;
        uint64_t v54 = v25;
        v56(v58, v29, v25);
        uint64_t v34 = v61;
        uint64_t v35 = *(void *)(v29 + v61[6]);
        *(void *)(v33 + v61[5]) = v35;
        *(void *)(v33 + v34[6]) = v35;
        *(void *)(v33 + v34[7]) = v35;
        uint64_t v36 = type metadata accessor for WorkoutChartViewModel(0);
        uint64_t v37 = v62;
        uint64_t v61 = (int *)sub_1001DB328(v33, v32);
        AttributedString.init(_:)();
        uint64_t v38 = Text.init(_:)();
        long long v56 = v39;
        id v57 = v32;
        uint64_t v40 = v38;
        uint64_t v42 = v41;
        char v44 = v43 & 1;
        sub_100651620(*(unsigned char *)(v37 + *(int *)(v36 + 20)));
        uint64_t v65 = Color.init(_:)();
        uint64_t v45 = Text.foregroundStyle<A>(_:)();
        uint64_t v47 = v46;
        uint64_t v49 = v48;
        uint64_t v51 = v50 & 1;
        sub_1000A06C0(v40, v42, v44);
        swift_release();

        swift_bridgeObjectRelease();
        sub_10061E59C(v33, type metadata accessor for WorkoutChartDataElement);
        sub_10061E59C(v59, type metadata accessor for WorkoutChartDataElement);
        sub_10008DB18(v64, &qword_100959218);
        uint64_t result = v55(v63, v54);
LABEL_9:
        uint64_t v52 = v60;
        uint64_t *v60 = v45;
        v52[1] = v47;
        v52[2] = v51;
        v52[3] = v49;
        return result;
      }
      sub_10061E59C(v29, type metadata accessor for WorkoutChartDataElement);
      sub_10008DB18(v64, &qword_100959218);
      uint64_t result = v55(v63, v25);
    }
    uint64_t v45 = 0;
    uint64_t v47 = 0;
    uint64_t v51 = 0;
    uint64_t v49 = 0;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_10061DCB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v5);
  uint64_t result = type metadata accessor for WorkoutChartViewModel(0);
  double v7 = *(double *)(a1 + *(int *)(result + 60));
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18)
  {
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v8);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v9 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v11 = v10;
    char v13 = v12 & 1;
    static Font.footnote.getter();
    uint64_t v14 = Text.font(_:)();
    uint64_t v16 = v15;
    char v18 = v17;
    swift_release();
    char v19 = v18 & 1;
    sub_1000A06C0(v9, v11, v13);
    swift_bridgeObjectRelease();
    static Color.secondary.getter();
    uint64_t v20 = Text.foregroundStyle<A>(_:)();
    uint64_t v22 = v21;
    char v24 = v23;
    uint64_t v26 = v25;
    sub_1000A06C0(v14, v16, v19);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v20;
    *(void *)(a2 + 8) = v22;
    *(unsigned char *)(a2 + 16) = v24 & 1;
    *(void *)(a2 + 24) = v26;
    *(_OWORD *)(a2 + 32) = xmmword_100756700;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10061DEF8()
{
  uint64_t v1 = type metadata accessor for DynamicTypeSize();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_1009658C0);
  __chkstk_darwin(v5);
  double v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)double v7 = static HorizontalAlignment.leading.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v8 = sub_1000AFA94(&qword_1009658C8);
  sub_10061A8FC(v0, (uint64_t *)&v7[*(int *)(v8 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for DynamicTypeSize.large(_:), v1);
  sub_1000A132C(&qword_1009658D0, &qword_1009658C0);
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10008DB18((uint64_t)v7, &qword_1009658C0);
}

uint64_t sub_10061E0B4@<X0>(uint64_t a1@<X8>)
{
  return sub_10061B128(a1);
}

uint64_t sub_10061E0D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10061E120()
{
  unint64_t result = qword_100965910;
  if (!qword_100965910)
  {
    sub_1000A1370(&qword_100965908);
    sub_1000A132C(&qword_100965918, &qword_100965920);
    sub_1000A132C(&qword_100965928, &qword_100965930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965910);
  }
  return result;
}

uint64_t sub_10061E1E0()
{
  return sub_10061B618(*(void *)(v0 + 16));
}

uint64_t sub_10061E1EC(uint64_t a1)
{
  return sub_10061E2E0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10061BB80);
}

unint64_t sub_10061E204()
{
  unint64_t result = qword_100965958;
  if (!qword_100965958)
  {
    sub_1000A1370(&qword_100965950);
    sub_1000A132C(&qword_10095E9B0, &qword_10095E9B8);
    sub_10061E434(&qword_100965960, &qword_100965968, &qword_100965970, &qword_100965978);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965958);
  }
  return result;
}

uint64_t sub_10061E2C8(uint64_t a1)
{
  return sub_10061E2E0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10061CA04);
}

uint64_t sub_10061E2E0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for WorkoutDetailChartView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_10061E374()
{
  unint64_t result = qword_100965990;
  if (!qword_100965990)
  {
    sub_1000A1370(&qword_100965988);
    sub_1000A132C(&qword_10095E9B0, &qword_10095E9B8);
    sub_10061E434(&qword_100965998, &qword_1009659A0, &qword_1009659A8, &qword_1009659B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965990);
  }
  return result;
}

uint64_t sub_10061E434(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_10061E524@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_10061D2AC(a1).n128_u64[0];
  return result;
}

uint64_t sub_10061E52C@<X0>(uint64_t a1@<X8>)
{
  return sub_10061DCB0(*(void *)(v1 + 16), a1);
}

uint64_t sub_10061E534(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10061E59C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_10061E5FC@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_10061C428(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_10061E604()
{
  return swift_getOpaqueTypeConformance2();
}

char *sub_10061E688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_dayLabel;
  id v7 = objc_allocWithZone((Class)UILabel);
  uint64_t v8 = v3;
  *(void *)&v3[v6] = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_goalView] = 0;
  *(void *)&v8[OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  if (a3)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v32.receiver = v8;
  v32.super_class = (Class)type metadata accessor for ActivityGoalDayCell();
  uint64_t v10 = (char *)objc_msgSendSuper2(&v32, "initWithStyle:reuseIdentifier:", a1, v9);

  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_dayLabel;
  char v12 = *(void **)&v10[OBJC_IVAR____TtC10FitnessApp19ActivityGoalDayCell_dayLabel];
  char v13 = v10;
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v14 = [v13 contentView];
  [v14 addSubview:v12];

  id v15 = [*(id *)&v10[v11] topAnchor];
  id v16 = [v13 contentView];
  id v17 = [v16 topAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17];
  [v18 setActive:1];

  id v19 = [*(id *)&v10[v11] leadingAnchor];
  id v20 = [v13 contentView];
  id v21 = [v20 leadingAnchor];

  id v22 = [v19 constraintEqualToAnchor:v21];
  [v22 setActive:1];

  id v23 = [*(id *)&v10[v11] bottomAnchor];
  id v24 = [v13 contentView];
  id v25 = [v24 bottomAnchor];

  id v26 = [v23 constraintEqualToAnchor:v25];
  [v26 setActive:1];

  uint64_t v27 = *(void **)&v10[v11];
  uint64_t v28 = self;
  id v29 = v27;
  id v30 = [v28 preferredFontForTextStyle:UIFontTextStyleBody];
  [v29 setFont:v30];

  return v13;
}

id sub_10061EB04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityGoalDayCell();
  return [super dealloc];
}

uint64_t type metadata accessor for ActivityGoalDayCell()
{
  return self;
}

unint64_t sub_10061EC90()
{
  return 0xD000000000000011;
}

uint64_t sub_10061ECAC(double a1)
{
  uint64_t v2 = Color.cgColor.getter();
  if (!v2) {
    goto LABEL_33;
  }
  uint64_t v3 = (void *)v2;
  uint64_t v4 = Color.cgColor.getter();
  if (!v4)
  {

    goto LABEL_33;
  }
  uint64_t v5 = (CGColor *)v4;
  size_t NumberOfComponents = CGColorGetNumberOfComponents((CGColorRef)v3);
  if (NumberOfComponents != CGColorGetNumberOfComponents(v5)) {
    goto LABEL_27;
  }
  id v7 = CGColorGetColorSpace((CGColorRef)v3);
  uint64_t v8 = CGColorGetColorSpace(v5);
  NSString v9 = v8;
  if (v7)
  {
    if (!v8)
    {

      goto LABEL_33;
    }
    type metadata accessor for CGColorSpace(0);
    sub_10061EFFC();
    uint64_t v10 = v7;
    char v11 = static _CFObject.== infix(_:_:)();

    if ((v11 & 1) == 0) {
      goto LABEL_27;
    }
  }
  else if (v8)
  {
    goto LABEL_28;
  }
  char v12 = CGColorGetColorSpace((CGColorRef)v3);
  if (!v12)
  {
LABEL_27:

    goto LABEL_33;
  }
  NSString v9 = v12;
  uint64_t v13 = CGColorRef.components.getter();
  if (!v13)
  {
LABEL_28:

    goto LABEL_33;
  }
  uint64_t v14 = v13;
  uint64_t v15 = CGColorRef.components.getter();
  if (!v15)
  {

    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  uint64_t v16 = v15;
  size_t v17 = CGColorGetNumberOfComponents((CGColorRef)v3);
  if ((v17 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  size_t v18 = v17;
  if (!v17)
  {
    id v19 = (CGFloat *)_swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  if (v17 - 1 >= *(void *)(v14 + 16)) {
    goto LABEL_25;
  }
  if (v17 - 1 >= *(void *)(v16 + 16))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v19 = (CGFloat *)sub_1001E7BB4(0, 1, 1, _swiftEmptyArrayStorage);
  id v20 = (double *)(v14 + 32);
  id v21 = (double *)(v16 + 32);
  unint64_t v22 = *((void *)v19 + 2);
  do
  {
    double v23 = *v20;
    double v24 = *v21;
    unint64_t v25 = *((void *)v19 + 3);
    if (v22 >= v25 >> 1) {
      id v19 = (CGFloat *)sub_1001E7BB4((void *)(v25 > 1), v22 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v22 + 1;
    v19[v22 + 4] = (1.0 - a1) * v23 + v24 * a1;
    ++v21;
    ++v20;
    ++v22;
    --v18;
  }
  while (v18);
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (CGColorCreate(v9, v19 + 4))
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = Color.init(_:)();

    return v26;
  }
LABEL_33:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10061EFFC()
{
  unint64_t result = qword_100965A98;
  if (!qword_100965A98)
  {
    type metadata accessor for CGColorSpace(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965A98);
  }
  return result;
}

Swift::Int sub_10061F054()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

void sub_10061F0A4()
{
  id v1 = *v0;
  NSObject.hash(into:)();
}

ValueMetadata *type metadata accessor for WorkoutDetailWeatherChannelView()
{
  return &type metadata for WorkoutDetailWeatherChannelView;
}

ValueMetadata *type metadata accessor for WorkoutDetailWeatherChannelView.ViewModel()
{
  return &type metadata for WorkoutDetailWeatherChannelView.ViewModel;
}

Swift::Int sub_10061F11C()
{
  id v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

uint64_t sub_10061F168()
{
  return static NSObject.== infix(_:_:)() & 1;
}

unint64_t sub_10061F1B0()
{
  unint64_t result = qword_100965AA0;
  if (!qword_100965AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965AA0);
  }
  return result;
}

uint64_t sub_10061F204()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10061F220(void *a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10061F438(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10008DB18((uint64_t)v4, (uint64_t *)&unk_10094B790);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  id v10 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v11);
  uint64_t v13 = v12;
  sub_100522C1C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_10061FFE8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 openURL:v13 options:isa completionHandler:0];

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10061F438@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v95 = a1;
  uint64_t v3 = sub_1000AFA94(&qword_100965AB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v86 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale.Language();
  uint64_t v88 = *(void *)(v5 - 8);
  uint64_t v89 = v5;
  __chkstk_darwin(v5);
  id v87 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v90 = *(void *)(v7 - 8);
  uint64_t v91 = v7;
  __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v78 - v10;
  uint64_t v12 = sub_1000AFA94(&qword_100952F38);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for URLQueryItem();
  uint64_t v15 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  id v92 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v84 = (char *)&v78 - v18;
  __chkstk_darwin(v19);
  id v21 = (char *)&v78 - v20;
  __chkstk_darwin(v22);
  double v24 = (char *)&v78 - v23;
  uint64_t v25 = sub_1000AFA94(&qword_10094DD20);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for URLComponents();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  id v31 = (char *)&v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_10008DB18((uint64_t)v27, &qword_10094DD20);
    uint64_t v32 = type metadata accessor for URL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 1, 1, v32);
  }
  uint64_t v80 = v29;
  uint64_t v81 = v28;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
  id v79 = v31;
  uint64_t v34 = URLComponents.queryItems.getter();
  if (v34) {
    uint64_t v35 = (void *)v34;
  }
  else {
    uint64_t v35 = _swiftEmptyArrayStorage;
  }
  uint64_t v83 = sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v36 = swift_allocObject();
  long long v78 = xmmword_1007509E0;
  *(_OWORD *)(v36 + 16) = xmmword_1007509E0;
  id v37 = v95;
  [v95 coordinate];
  *(void *)(v36 + 56) = &type metadata for Double;
  *(void *)(v36 + 64) = &protocol witness table for Double;
  *(void *)(v36 + 32) = v38;
  String.init(format:_:)();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v82 = a2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v35 = (void *)sub_1001E8954(0, v35[2] + 1, 1, (unint64_t)v35);
  }
  unint64_t v41 = v35[2];
  unint64_t v40 = v35[3];
  if (v41 >= v40 >> 1) {
    uint64_t v35 = (void *)sub_1001E8954(v40 > 1, v41 + 1, 1, (unint64_t)v35);
  }
  void v35[2] = v41 + 1;
  char v43 = *(void **)(v15 + 32);
  uint64_t v42 = (char *)(v15 + 32);
  unint64_t v94 = (v42[48] + 32) & ~(unint64_t)v42[48];
  id v95 = v43;
  uint64_t v93 = *((void *)v42 + 5);
  char v44 = v24;
  uint64_t v45 = v96;
  ((void (*)(char *, char *, uint64_t))v43)((char *)v35 + v94 + v93 * v41, v44, v96);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v78;
  [v37 coordinate];
  *(void *)(v46 + 56) = &type metadata for Double;
  *(void *)(v46 + 64) = &protocol witness table for Double;
  *(void *)(v46 + 32) = v47;
  String.init(format:_:)();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  unint64_t v49 = v35[2];
  unint64_t v48 = v35[3];
  if (v49 >= v48 >> 1) {
    uint64_t v35 = (void *)sub_1001E8954(v48 > 1, v49 + 1, 1, (unint64_t)v35);
  }
  char v50 = v79;
  void v35[2] = v49 + 1;
  id v79 = v42;
  ((void (*)(char *, char *, uint64_t))v95)((char *)v35 + v94 + v49 * v93, v21, v45);
  static Locale.current.getter();
  uint64_t v51 = v87;
  Locale.language.getter();
  uint64_t v52 = v91;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v90 + 8);
  v53(v11, v91);
  Locale.Language.languageCode.getter();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v51, v89);
  uint64_t v54 = type metadata accessor for Locale.LanguageCode();
  uint64_t v55 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v14, 1, v54) == 1)
  {
    long long v56 = &qword_100952F38;
    uint64_t v57 = (uint64_t)v14;
  }
  else
  {
    Locale.LanguageCode.identifier.getter();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v54);
    Swift::String v58 = String.uppercased()();
    swift_bridgeObjectRelease();
    uint64_t v59 = v85;
    static Locale.current.getter();
    uint64_t v60 = v52;
    uint64_t v61 = v86;
    Locale.region.getter();
    v53(v59, v60);
    uint64_t v62 = type metadata accessor for Locale.Region();
    uint64_t v63 = *(void *)(v62 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62) != 1)
    {
      Locale.Region.identifier.getter();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v62);
      Swift::String v66 = String.uppercased()();
      swift_bridgeObjectRelease();
      uint64_t v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_10074E640;
      *(void *)(v67 + 56) = &type metadata for String;
      unint64_t v68 = sub_1000AA64C();
      *(Swift::String *)(v67 + 32) = v58;
      *(void *)(v67 + 96) = &type metadata for String;
      *(void *)(v67 + 104) = v68;
      *(void *)(v67 + 64) = v68;
      *(Swift::String *)(v67 + 72) = v66;
      String.init(format:_:)();
      uint64_t v69 = v84;
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      unint64_t v71 = v35[2];
      unint64_t v70 = v35[3];
      if (v71 >= v70 >> 1) {
        uint64_t v35 = (void *)sub_1001E8954(v70 > 1, v71 + 1, 1, (unint64_t)v35);
      }
      uint64_t v64 = v96;
      uint64_t v65 = v92;
      uint64_t v72 = v93;
      void v35[2] = v71 + 1;
      ((void (*)(char *, char *, uint64_t))v95)((char *)v35 + v94 + v71 * v72, v69, v64);
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    long long v56 = &qword_100965AB0;
    uint64_t v57 = (uint64_t)v61;
  }
  sub_10008DB18(v57, v56);
  uint64_t v64 = v96;
  uint64_t v65 = v92;
LABEL_20:
  id v73 = [self processInfo];
  id v74 = [v73 processName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  unint64_t v76 = v35[2];
  unint64_t v75 = v35[3];
  if (v76 >= v75 >> 1) {
    uint64_t v35 = (void *)sub_1001E8954(v75 > 1, v76 + 1, 1, (unint64_t)v35);
  }
  uint64_t v77 = v80;
  void v35[2] = v76 + 1;
  ((void (*)(char *, char *, uint64_t))v95)((char *)v35 + v94 + v76 * v93, v65, v64);
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v50, v81);
}

uint64_t sub_10061FEB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(_:bundle:)();
  *a1 = result;
  return result;
}

uint64_t sub_10061FEF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_1000AFA94(&qword_100965AA8);
  *(void *)(swift_allocObject() + 16) = v3;
  id v4 = v3;
  return Button.init(action:label:)();
}

uint64_t sub_10061FFA8()
{
  return swift_deallocObject();
}

uint64_t sub_10061FFE0()
{
  return sub_10061F220(*(void **)(v0 + 16));
}

unint64_t sub_10061FFE8()
{
  unint64_t result = qword_10094B970;
  if (!qword_10094B970)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10094B970);
  }
  return result;
}

unint64_t sub_100620044()
{
  unint64_t result = qword_100965AB8;
  if (!qword_100965AB8)
  {
    sub_1000A1370(&qword_100965AC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965AB8);
  }
  return result;
}

uint64_t sub_1006200A0@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v23 = a5;
  int v22 = a3;
  uint64_t v10 = sub_1000AFA94((uint64_t *)&unk_1009555F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Card = (int *)type metadata accessor for LoadCard();
  uint64_t v18 = a6 + Card[5];
  *(_OWORD *)uint64_t v18 = xmmword_100750CF0;
  *(unsigned char *)(v18 + 16) = 3;
  sub_1000CD344(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    UUID.init()();
    sub_1000CD2E4(a1);
    sub_1000CD2E4((uint64_t)v12);
    uint64_t v19 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v14 + 32);
  }
  else
  {
    sub_1000CD2E4(a1);
    uint64_t v19 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v14 + 32);
    v19((uint64_t)v16, v12, v13);
  }
  uint64_t result = v19(a6, v16, v13);
  *(unsigned char *)(a6 + Card[6]) = a2 & 1;
  *(unsigned char *)(a6 + Card[7]) = v22 & 1;
  *(unsigned char *)(a6 + Card[8]) = a4 & 1;
  *(void *)(a6 + Card[9]) = v23;
  return result;
}

Swift::Int sub_1006202B0()
{
  uint64_t v1 = v0;
  Hasher.init()();
  Card = (int *)type metadata accessor for LoadCard();
  uint64_t v3 = v0 + Card[5];
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  int v6 = *(unsigned __int8 *)(v3 + 16);
  sub_100091494(*(void *)v3, (uint64_t)v5, *(unsigned char *)(v3 + 16));
  v12._countAndFlagsBits = v4;
  v12._object = v5;
  sub_1000932C0(v12, v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!v6 || v6 == 2)
  {
    Hasher._combine(_:)(v4);
  }
  else
  {
    if (v6 == 1)
    {
      String.hash(into:)();
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = 1;
    }
    else
    {
      uint64_t v7 = v4;
      uint64_t v8 = (uint64_t)v5;
      char v9 = v6;
    }
    sub_1000917F8(v7, v8, v9);
  }
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + Card[6]));
  Hasher._combine(_:)(*(unsigned char *)(v1 + Card[7]));
  id v10 = *(id *)(v1 + Card[9]);
  NSObject.hash(into:)();

  return Hasher.finalize()();
}

uint64_t sub_100620404()
{
  Card = (int *)type metadata accessor for LoadCard();
  uint64_t v2 = (long long *)(v0 + Card[5]);
  long long v14 = *v2;
  LOBYTE(v15) = *((unsigned char *)v2 + 16);
  _print_unlocked<A, B>(_:_:)();
  v3._countAndFlagsBits = 58;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  LOBYTE(v14) = *(unsigned char *)(v0 + Card[6]);
  _print_unlocked<A, B>(_:_:)();
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  type metadata accessor for UUID();
  sub_100095A68();
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 540945696;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  id v7 = *(id *)(v0 + Card[9]);
  id v8 = [v7 description:v14, v15];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);

  swift_bridgeObjectRelease();
  return 0;
}

void *sub_100620584(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_100091494(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v16 = *(void **)((char *)a2 + v15);
    *(void *)((char *)a1 + v15) = v16;
    id v17 = v16;
  }
  return a1;
}

void sub_1006206AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1000917F8(*(void *)(a1 + *(int *)(a2 + 20)), *(void *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 16));
  int v5 = *(void **)(a1 + *(int *)(a2 + 36));
}

uint64_t sub_100620734(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  id v16 = v15;
  return a1;
}

uint64_t sub_10062080C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  char v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_1000917F8(v13, v14, v15);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a3[9];
  id v17 = *(void **)(a2 + v16);
  uint64_t v18 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = v17;
  id v19 = v17;

  return a1;
}

uint64_t sub_100620900(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1006209B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  char v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_1000917F8(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);

  return a1;
}

uint64_t sub_100620A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100620A90);
}

uint64_t sub_100620A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100620B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100620B64);
}

uint64_t sub_100620B64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

id sub_100620CA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiscoverySheetConstants();
  return [super dealloc];
}

uint64_t type metadata accessor for DiscoverySheetConstants()
{
  return self;
}

void destroy for MirrorDistanceRemainingView(uint64_t a1)
{
  swift_release();
  objc_super v2 = *(void **)(a1 + 16);
}

void *initializeWithCopy for MirrorDistanceRemainingView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  int v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  swift_retain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for MirrorDistanceRemainingView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  uint64_t v4 = (void *)a2[2];
  int v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  return a1;
}

void *assignWithTake for MirrorDistanceRemainingView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  uint64_t v4 = (void *)a1[2];
  a1[2] = a2[2];

  a1[3] = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for MirrorDistanceRemainingView()
{
  return &type metadata for MirrorDistanceRemainingView;
}

uint64_t sub_100620E48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100620E64(double a1, uint64_t a2, void *a3)
{
  int v5 = (void *)WorkoutStep.goal.getter();
  id v6 = [v5 value];

  if (v6)
  {
    id v7 = [self meterUnit];
    [v6 doubleValueForUnit:v7];
    double v9 = v8;

    double v10 = v9 - a1 > 0.0 ? v9 - a1 : 0.0;
    uint64_t v11 = (void *)WorkoutStep.goal.getter();
    id v12 = [v11 value];

    if (v12)
    {
      id v13 = [v12 _unit];
      uint64_t v14 = FIUIDistanceUnitForHKUnit();

      uint64_t v15 = (void *)WorkoutStep.goal.getter();
      id v16 = [v15 value];

      if (v16)
      {
        id v17 = self;
        id v18 = [v16 _unit];
        uint64_t v19 = FIUIDistanceUnitForHKUnit();

        id v20 = [a3 localizedStringWithDistanceInMeters:v14 distanceUnit:0 unitStyle:[v17 defaultPrecisionForDistanceUnit:v19] decimalPrecision:3 roundingMode:1 decimalTrimmingMode:v10];
        if (v20)
        {
          id v21 = v20;
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();

          return v22;
        }
        __break(1u);
      }
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10062109C(double a1, uint64_t a2, id a3)
{
  if (qword_10094B000 != -1) {
    swift_once();
  }
  int v5 = byte_100965B90;
  id v6 = (void *)WorkoutStep.goal.getter();
  id v7 = [v6 value];

  if (v5 == 1)
  {
    if (!v7) {
      goto LABEL_11;
    }
    id v8 = [v7 _unit];
    uint64_t v9 = FIUIDistanceUnitForHKUnit();

    sub_100621604(a1);
    a3 = [a3 localizedLongUnitStringForDistanceUnit:v9];
    if (a3)
    {
LABEL_9:
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v12;
    }
    __break(1u);
  }
  if (v7)
  {
    id v10 = [v7 _unit];
    uint64_t v11 = FIUIDistanceUnitForHKUnit();

    a3 = [a3 localizedShortUnitStringForDistanceUnit:v11];
    if (a3) {
      goto LABEL_9;
    }
    __break(1u);
  }
LABEL_11:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10062126C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  v19[1] = a3;
  uint64_t v7 = type metadata accessor for LocalizationFeature();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100620E64(a4, a1, a2);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LocalizationFeature.workout(_:), v7);
  static Localization.workoutUILocalizedString(_:feature:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1007509E0;
  uint64_t v12 = sub_10062109C(a4, a1, a2);
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = sub_1000AA64C();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  uint64_t v15 = String.init(format:_:)();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  v19[2] = v15;
  v19[3] = v17;
  sub_1000A06D0();
  StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  return MetricText.init(value:unit:description:stale:includesSlashes:)();
}

uint64_t sub_100621494@<X0>(uint64_t a1@<X8>)
{
  return sub_10062126C(*(void *)v1, *(void **)(v1 + 16), a1, *(double *)(v1 + 8));
}

uint64_t sub_1006214A4()
{
  uint64_t v0 = type metadata accessor for LocalizationFeature();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for LocalizationFeature.workout(_:), v0, v2);
  uint64_t v5 = static Localization.workoutUILocalizedString(_:feature:)();
  uint64_t v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  if (v5 == 49 && v7 == 0xE100000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v9 = 1;
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
  }
  byte_100965B90 = v9 & 1;
  return result;
}

void sub_100621604(double a1)
{
  __n128 v2 = (void *)WorkoutStep.goal.getter();
  id v3 = [v2 value];

  if (v3)
  {
    id v4 = [self meterUnit];
    id v5 = [self quantityWithUnit:v4 doubleValue:a1];

    id v6 = [v3 _unit];
    [v5 doubleValueForUnit:v6];
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

double sub_10062174C()
{
  double result = 222.0;
  xmmword_100965B98 = xmmword_100770020;
  return result;
}

void sub_100621764(uint64_t a1)
{
}

void sub_100621774(uint64_t a1)
{
}

void sub_100621784(double a1, uint64_t a2, void *a3)
{
  id v5 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v5 defaultFontForTextStyle:v6];

  if (v7)
  {
    id v8 = [v7 fu_fontWithSize:a1];

    *a3 = v8;
  }
  else
  {
    __break(1u);
  }
}

char *sub_100621840(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_insetContentView;
  id v10 = objc_allocWithZone((Class)UIView);
  uint64_t v11 = v4;
  id v12 = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v9] = v12;
  uint64_t v13 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView;
  id v14 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = (void *)UIView.withContentMode(_:)();

  id v16 = [v15 layer];
  [v16 setCornerRadius:3.0];

  [v15 setClipsToBounds:1];
  id v17 = [self secondarySystemBackgroundColor];
  [v15 setBackgroundColor:v17];

  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v13] = v15;
  uint64_t v18 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v19 setLineBreakMode:0];
  [v19 setNumberOfLines:1];
  if (qword_10094B010 != -1) {
    swift_once();
  }
  [v19 setFont:qword_100965BA8];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v18] = v19;
  uint64_t v20 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel;
  id v21 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v21 setLineBreakMode:0];
  [v21 setNumberOfLines:1];
  if (qword_10094B018 != -1) {
    swift_once();
  }
  [v21 setFont:qword_100965BB0];
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v11[v20] = v21;
  *(void *)&v11[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask] = 0;
  uint64_t v22 = &v11[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v23 = &v11[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation];
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;

  v28.receiver = v11;
  v28.super_class = (Class)type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
  double v24 = (char *)objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView];
  uint64_t v26 = v24;
  [v26 addSubview:v25];
  [v26 addSubview:*(void *)&v26[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel]];
  [v26 addSubview:*(void *)&v26[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel]];
  sub_100621BF8();

  return v26;
}

void sub_100621BF8()
{
  uint64_t v1 = v0;
  uint64_t v35 = self;
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10075C8A0;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView];
  id v4 = [v3 topAnchor];
  id v5 = [v1 contentView];
  id v6 = [v5 topAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6];
  *(void *)(v2 + 32) = v7;
  id v8 = [v3 centerXAnchor];
  id v9 = [v1 centerXAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v2 + 40) = v10;
  id v11 = [v3 widthAnchor];
  if (qword_10094B008 != -1) {
    swift_once();
  }
  id v12 = [v11 constraintEqualToConstant:*(double *)&xmmword_100965B98];

  *(void *)(v2 + 48) = v12;
  id v13 = [v3 heightAnchor];
  id v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(v13, "constraintEqualToConstant:", *((double *)&xmmword_100965B98
                                                                                           + 1)));

  *(void *)(v2 + 56) = v14;
  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel];
  id v16 = [v15 topAnchor];
  id v17 = [v3 bottomAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:10.0];

  *(void *)(v2 + 64) = v18;
  id v19 = [v15 leadingAnchor];
  id v20 = [v1 leadingAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v2 + 72) = v21;
  id v22 = [v15 trailingAnchor];
  id v23 = [v1 trailingAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v2 + 80) = v24;
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel];
  id v26 = [v25 topAnchor];
  id v27 = [v15 bottomAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v2 + 88) = v28;
  id v29 = [v25 leadingAnchor];
  id v30 = [v1 leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v2 + 96) = v31;
  id v32 = [v25 trailingAnchor];
  id v33 = [v1 trailingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v2 + 104) = v34;
  specialized Array._endMutation()();
  sub_1001ABF94();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 activateConstraints:isa];
}

uint64_t sub_1006220A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  uint64_t v9 = sub_1000AFA94(&qword_10094F3C8);
  v8[23] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[24] = v10;
  v8[25] = *(void *)(v10 + 64);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  uint64_t v11 = sub_1000AFA94(&qword_10095DD90);
  v8[28] = v11;
  v8[29] = *(void *)(v11 - 8);
  v8[30] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[31] = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[32] = v13;
  v8[33] = v12;
  return _swift_task_switch(sub_100622220, v13, v12);
}

uint64_t sub_100622220()
{
  sub_10007E4EC(*(void **)(v0 + 144), *(void *)(*(void *)(v0 + 144) + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v1;
  void *v1 = v0;
  v1[1] = sub_1006222C4;
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  return sub_1001AEF38(v3, v2);
}

uint64_t sub_1006222C4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 280) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v4 = *(void *)(v3 + 256);
    uint64_t v5 = *(void *)(v3 + 264);
    id v6 = sub_1006227A8;
  }
  else
  {
    uint64_t v4 = *(void *)(v3 + 256);
    uint64_t v5 = *(void *)(v3 + 264);
    id v6 = sub_1006223EC;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_1006223EC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (char *)Strong;
    id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(v0 + 280)
                                                               + OBJC_IVAR___CHCatalogItemViewModel_title), "string"));
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    id v7 = (uint64_t *)&v2[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title];
    *id v7 = v4;
    v7[1] = v6;

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v8 = swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = *(void *)(v0 + 280);
    id v11 = objc_retain(*(id *)(v8
                            + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel));

    NSString v12 = [*(id *)(v10 + OBJC_IVAR___CHCatalogItemViewModel_title) string];
    if (!v12)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v11 setText:v12];
  }
  swift_beginAccess();
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    id v14 = (void *)v13;
    uint64_t v15 = *(void *)(v0 + 280);
    id v16 = objc_retain(*(id *)(v13
                            + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel));

    NSString v17 = [*(id *)(v15 + OBJC_IVAR___CHCatalogItemViewModel_subtitle) string];
    if (!v17)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v16 setText:v17];
  }
  sub_10007E4EC(*(void **)(v0 + 176), *(void *)(*(void *)(v0 + 176) + 24));
  if (qword_10094B008 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)(v0 + 208);
  uint64_t v18 = *(void *)(v0 + 216);
  uint64_t v20 = *(void *)(v0 + 192);
  uint64_t v21 = *(void *)(v0 + 200);
  uint64_t v22 = *(void *)(v0 + 184);
  dispatch thunk of ArtworkImageLoading.fetchFallbackArtwork(for:)();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_100622F88;
  *(void *)(v23 + 24) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v18, v22);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32))(v25 + v24, v19, v22);
  id v26 = (uint64_t (**)(void **))(v25 + ((v21 + v24 + 7) & 0xFFFFFFFFFFFFFFF8));
  *id v26 = sub_10062363C;
  v26[1] = (uint64_t (*)(void **))v23;
  *(void *)(v0 + 288) = sub_1000AFA94(&qword_1009547D8);
  Promise.init(asyncOperation:)();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v22);
  return _swift_task_switch(sub_100622828, 0, 0);
}

uint64_t sub_1006227A8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100622828()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = swift_task_alloc();
  v0[37] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/App Recommendation/Cells/SeymourW"
                         "orkoutRecommendationCollectionViewCell.swift";
  *(void *)(v2 + 24) = 139;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 92;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[38] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10062293C;
  uint64_t v4 = v0[36];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 17, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_1006237A4, v2, v4);
}

uint64_t sub_10062293C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100622BC0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v7 = v2[29];
    uint64_t v6 = v2[30];
    uint64_t v8 = v2[28];
    v2[40] = v2[17];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v4 = v2[32];
    uint64_t v5 = v2[33];
    uint64_t v3 = sub_100622A90;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100622A90()
{
  uint64_t v1 = *(void **)(v0 + 320);
  if (v1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = (void *)Strong;
      id v4 = objc_retain(*(id *)(Strong
                             + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView));

      [v4 setImage:v1];
    }
  }
  sub_10007E4EC(*(void **)(v0 + 144), *(void *)(*(void *)(v0 + 144) + 24));
  long long v5 = xmmword_100965B98;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100622CDC;
  uint64_t v7 = *(void *)(v0 + 280);
  return sub_1001AF60C(v7, *(double *)&v5, *((double *)&v5 + 1));
}

uint64_t sub_100622BC0()
{
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[28];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[32];
  uint64_t v5 = v0[33];
  return _swift_task_switch(sub_100622C4C, v4, v5);
}

uint64_t sub_100622C4C()
{
  uint64_t v1 = *(void **)(v0 + 280);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100622CDC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 336) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v4 = *(void *)(v3 + 256);
    uint64_t v5 = *(void *)(v3 + 264);
    uint64_t v6 = sub_100622F00;
  }
  else
  {
    uint64_t v4 = *(void *)(v3 + 256);
    uint64_t v5 = *(void *)(v3 + 264);
    uint64_t v6 = sub_100622E04;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100622E04()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = (void *)v0[42];
  uint64_t v3 = (void *)v0[35];
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView));

    [v5 setImage:v2];
    uint64_t v3 = v5;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100622F00()
{
  uint64_t v1 = *(void **)(v0 + 280);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_100622F88@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

uint64_t sub_100622FB8()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
  [super prepareForReuse];
  [*(id *)&v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView] setImage:0];
  uint64_t v1 = &v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  swift_bridgeObjectRelease();
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask] = 0;
  swift_release();
  uint64_t v2 = &v0[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  return swift_bridgeObjectRelease();
}

id sub_1006230BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for SeymourWorkoutRecommendationCollectionViewCell()
{
  return self;
}

uint64_t sub_1006231B8(void **a1, uint64_t a2, uint64_t a3)
{
  id v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  id v7 = v5;
  swift_retain();
  sub_1000AFA94(&qword_1009547D8);

  return Promise.init(asyncOperation:)();
}

void sub_10062325C(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *a5;
  a3(&v8, &v7);
  uint64_t v6 = v8;
  char v9 = 0;
  a1(&v8);

  sub_100495AE8(v6, 0);
}

void sub_1006232F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_insetContentView;
  id v3 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v2] = v3;
  uint64_t v4 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_iconImageView;
  id v5 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v6 = (void *)UIView.withContentMode(_:)();

  id v7 = [v6 layer];
  [v7 setCornerRadius:3.0];

  [v6 setClipsToBounds:1];
  id v8 = [self secondarySystemBackgroundColor];
  [v6 setBackgroundColor:v8];

  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v4] = v6;
  uint64_t v9 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_titleLabel;
  id v10 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v10 setLineBreakMode:0];
  [v10 setNumberOfLines:1];
  if (qword_10094B010 != -1) {
    swift_once();
  }
  [v10 setFont:qword_100965BA8];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v9] = v10;
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_subtitleLabel;
  id v12 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setLineBreakMode:0];
  [v12 setNumberOfLines:1];
  if (qword_10094B018 != -1) {
    swift_once();
  }
  [v12 setFont:qword_100965BB0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v1[v11] = v12;
  *(void *)&v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_configurationTask] = 0;
  uint64_t v13 = &v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_title];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  id v14 = &v1[OBJC_IVAR____TtC10FitnessApp46SeymourWorkoutRecommendationCollectionViewCell_recommendation];
  *(void *)id v14 = 0;
  *((void *)v14 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100623604()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10062363C(void **a1)
{
  return sub_1006231B8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100623644()
{
  uint64_t v1 = sub_1000AFA94(&qword_10094F3C8);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006236F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000AFA94(&qword_10094F3C8) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  id v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_10048B9E8(a1, a2, v7, v9, v10);
}

uint64_t sub_1006237A4(uint64_t a1)
{
  return sub_1004F7B34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1006237B4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1006237F4(void (*a1)(void **), uint64_t a2)
{
  sub_10062325C(a1, a2, *(void (**)(void **__return_ptr, uint64_t *))(v2 + 16), *(void *)(v2 + 24), (uint64_t *)(v2 + 32));
}

void destroy for AwardsCardFactory(uint64_t a1)
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);

  uint64_t v2 = *(void **)(a1 + 56);
}

uint64_t *assignWithCopy for AwardsCardFactory(uint64_t *a1, uint64_t *a2)
{
  sub_10009EDF0(a1, a2);
  uint64_t v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = (uint64_t)v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[6];
  id v8 = (void *)a1[6];
  a1[6] = (uint64_t)v7;
  id v9 = v7;

  uint64_t v10 = (void *)a2[7];
  uint64_t v11 = (void *)a1[7];
  a1[7] = (uint64_t)v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for AwardsCardFactory(uint64_t a1, uint64_t a2)
{
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  uint64_t v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  id v8 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for AwardsCardFactory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardsCardFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardsCardFactory()
{
  return &type metadata for AwardsCardFactory;
}

void *sub_1006239C4(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  return sub_100623C10(a1, a2, a3);
}

uint64_t sub_1006239DC(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v5 = _swiftEmptyArrayStorage;
  id v29 = _swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    id v8 = (uint64_t (*)(long long *))result;
    unint64_t v9 = 0;
    uint64_t v10 = a3 + 32;
    uint64_t v23 = (uint64_t (*)(long long *))result;
    uint64_t v24 = a3;
    uint64_t v22 = v6;
    while (v9 < *(void *)(v4 + 16))
    {
      sub_10008E75C(v10, (uint64_t)v28);
      uint64_t v5 = a2;
      char v11 = v8(v28);
      if (v3)
      {
        _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v28);
        swift_bridgeObjectRelease();
        swift_release();
        return (uint64_t)v5;
      }
      if (v11)
      {
        sub_100093E60(v28, (uint64_t)v25);
        id v12 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001C9084(0, v12[2] + 1, 1);
          id v12 = v29;
        }
        unint64_t v14 = v12[2];
        unint64_t v13 = v12[3];
        if (v14 >= v13 >> 1) {
          sub_1001C9084(v13 > 1, v14 + 1, 1);
        }
        uint64_t v15 = v26;
        uint64_t v16 = v27;
        uint64_t v17 = sub_1000DDC00((uint64_t)v25, v26);
        __chkstk_darwin(v17);
        uint64_t v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v20 + 16))(v19);
        sub_1004BDD70(v14, (uint64_t)v19, (uint64_t *)&v29, v15, v16);
        double result = _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v25);
        id v8 = v23;
        uint64_t v4 = v24;
        uint64_t v6 = v22;
      }
      else
      {
        double result = _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v28);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        uint64_t v5 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  return result;
}

void *sub_100623C10(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = _swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        id v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v4 = v15;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          id v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  id v12 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100623DBC()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_100623DF0()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_100623E24()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_1000258C4(v0, qword_100998678);
  sub_1000876DC(v0, (uint64_t)qword_100998678);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100623E88()
{
  uint64_t v0 = sub_1000AFA94(&qword_100965D68);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_100965D70);
  __chkstk_darwin(v1);
  sub_1003CF380();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x746F7420776F6853;
  v2._object = (void *)0xEB00000000206C61;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100965D78);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x636E617473696420;
  v3._object = (void *)0xEE0020726F662065;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100965D80);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 32;
  v4._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1000AFA94(&qword_100965D88);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1006240BC(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  v2[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for IntentDialog();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v4 = sub_1000AFA94(&qword_10094F070);
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_100624208, 0, 0);
}

uint64_t sub_100624208()
{
  *(void *)(v0 + 112) = **(void **)(v0 + 48);
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  Swift::String v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v2;
  *Swift::String v2 = v0;
  v2[1] = sub_1006242BC;
  uint64_t v3 = *(void *)(v0 + 104);
  return sub_10062467C(v3, v1);
}

uint64_t sub_1006242BC()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    Swift::String v2 = sub_100624600;
  }
  else {
    Swift::String v2 = sub_1006243D0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006243D0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v14 = v0[11];
  uint64_t v15 = v0[9];
  uint64_t v16 = v0[8];
  uint64_t v17 = v0[12];
  IntentParameter.wrappedValue.getter();
  uint64_t v3 = sub_100629004(v1, v0[3]);
  uint64_t v5 = v4;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x746F742072756F59;
  v6._object = (void *)0xEB00000000206C61;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v6);
  IntentParameter.wrappedValue.getter();
  sub_1006290F4();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:)();
  v7._countAndFlagsBits = 0x636E617473696420;
  v7._object = (void *)0xED00002073692065;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v7);
  v8._countAndFlagsBits = v3;
  v8._object = v5;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x20726F6620;
  v9._object = (void *)0xE500000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  sub_100625208();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 46;
  v11._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  IntentDialog.init(stringInterpolation:)();
  sub_1000A132C(&qword_100965D60, &qword_10094F070);
  static IntentResult.result<A>(value:dialog:)();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100624600()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10062467C(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_1000AFA94(&qword_100951AE0);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DateInterval();
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  return _swift_task_switch(sub_1006247FC, 0, 0);
}

uint64_t sub_1006247FC()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);
  IntentParameter.wrappedValue.getter();
  int v5 = *(unsigned __int8 *)(v0 + 160);
  IntentParameter.wrappedValue.getter();
  sub_100625998(v5, *(unsigned char *)(v0 + 161), v1);
  uint64_t v6 = self;
  DateInterval.start.getter();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v3, v4);
  DateInterval.end.getter();
  Class v9 = Date._bridgeToObjectiveC()().super.isa;
  v8(v3, v4);
  id v10 = [v6 predicateForSamplesWithStartDate:isa endDate:v9 options:1];
  *(void *)(v0 + 120) = v10;

  sub_1000AFA94(&qword_100951AF0);
  sub_1000AFA94(&qword_100951AE8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  id v11 = v10;
  static HKSamplePredicate.workout(_:)();

  sub_1000AFA94(&qword_100951AF8);
  sub_1000AFA94(&qword_100951B00);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
  swift_getKeyPath();
  SortDescriptor.init<A>(_:order:)();
  HKSampleQueryDescriptor.init(predicates:sortDescriptors:limit:)();
  AppDependency.wrappedValue.getter();
  uint64_t v12 = *(void *)(v0 + 16);
  *(void *)(v0 + 128) = v12;
  char v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v13;
  *char v13 = v0;
  v13[1] = sub_100624B3C;
  uint64_t v14 = *(void *)(v0 + 48);
  return HKSampleQueryDescriptor.result(for:)(v12, v14);
}

uint64_t sub_100624B3C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void **)(*v2 + 128);
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v1;
  swift_task_dealloc();

  if (v1) {
    int v5 = sub_100625134;
  }
  else {
    int v5 = sub_100624C6C;
  }
  return _swift_task_switch(v5, 0, 0);
}

id sub_100624C6C()
{
  id result = (id)_HKWorkoutDistanceTypeForActivityType();
  uint64_t v47 = result;
  if (result)
  {
    unint64_t v2 = v0[18];
    if (v2 >> 62) {
      goto LABEL_37;
    }
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = v0[18];
    while (v3)
    {
      unint64_t v5 = 0;
      unint64_t v6 = v2 & 0xC000000000000001;
      uint64_t v7 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v43 = v3;
      uint64_t v44 = v4 + 32;
      double v8 = 0.0;
      Class v9 = &selRef_unavailable;
      uint64_t v41 = v2 & 0xFFFFFFFFFFFFFF8;
      unint64_t v42 = v2 & 0xC000000000000001;
      while (1)
      {
        if (v6)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_35;
          }
          id v10 = *(id *)(v44 + 8 * v5);
        }
        id v11 = v10;
        if (__OFADD__(v5++, 1)) {
          break;
        }
        id v13 = (id)v0[4];
        if ([v10 v9[89]] == v13)
        {
          id v14 = [v11 statisticsForType:v47];
          if (v14)
          {
            uint64_t v15 = v14;
            unint64_t v2 = (unint64_t)[v14 sumQuantity];

            if (v2)
            {
              id v16 = [self meterUnit];
              [(id)v2 doubleValueForUnit:v16];
              double v18 = v17;

              double v8 = v8 + v18;
              goto LABEL_6;
            }
          }
LABEL_5:

          goto LABEL_6;
        }
        if ([v11 v9[89]] != (id)82) {
          goto LABEL_5;
        }
        uint64_t v46 = v11;
        id v19 = [v11 workoutActivities];
        sub_10007E2D8(0, (unint64_t *)&qword_100955600);
        unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v20 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v21)
          {
LABEL_32:
            swift_bridgeObjectRelease();

            Class v9 = &selRef_unavailable;
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v21) {
            goto LABEL_32;
          }
        }
        if (v21 < 1) {
          goto LABEL_36;
        }
        for (uint64_t i = 0; i != v21; ++i)
        {
          if ((v20 & 0xC000000000000001) != 0) {
            id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v23 = *(id *)(v20 + 8 * i + 32);
          }
          unint64_t v2 = (unint64_t)v23;
          id v24 = (id)v0[4];
          id v25 = [v23 workoutConfiguration];
          id v26 = [v25 activityType];

          if (v26 == v24
            && (id v27 = [(id)v2 statisticsForType:v47]) != 0
            && (uint64_t v28 = v27,
                id v29 = [v27 sumQuantity],
                v28,
                v29))
          {
            id v30 = [self meterUnit];
            [v29 doubleValueForUnit:v30];
            double v32 = v31;

            double v8 = v8 + v32;
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();

        unint64_t v6 = v42;
        uint64_t v3 = v43;
        uint64_t v7 = v41;
        Class v9 = &selRef_unavailable;
LABEL_6:
        if (v5 == v3) {
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v4 = v0[18];
    }
LABEL_38:
    uint64_t v33 = v0[14];
    id v34 = (void *)v0[15];
    uint64_t v35 = v0[13];
    uint64_t v45 = v0[12];
    uint64_t v37 = v0[7];
    uint64_t v36 = v0[8];
    uint64_t v38 = v0[6];
    swift_bridgeObjectRelease();
    id v39 = [self meters];
    sub_10007E2D8(0, &qword_10094F128);
    Measurement.init(value:unit:)();

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v45);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v40 = (uint64_t (*)(void))v0[1];
    return (id)v40();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100625134()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_100625208()
{
  uint64_t v0 = 1936287860;
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v47 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  uint64_t v44 = v8;
  __chkstk_darwin(v7);
  id v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v42 = (char *)&v42 - v12;
  uint64_t v13 = type metadata accessor for DateInterval();
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v51 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v51 setDateStyle:3];
  IntentParameter.wrappedValue.getter();
  uint64_t v48 = v1;
  if (v52)
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      uint64_t v0 = 1953718636;
    }
  }
  else
  {
    uint64_t v0 = 1936287860;
    swift_bridgeObjectRelease();
  }
  IntentParameter.wrappedValue.getter();
  int v17 = v52;
  IntentParameter.wrappedValue.getter();
  sub_100625998(v17, v52, (uint64_t)v15);
  IntentParameter.wrappedValue.getter();
  if (!(_BYTE)v52)
  {
    uint64_t v52 = v0;
    unint64_t v53 = 0xE400000000000000;
    v31._countAndFlagsBits = 0x6B65657720;
    v31._object = (void *)0xE500000000000000;
    String.append(_:)(v31);

LABEL_21:
    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v50);
    return;
  }
  if (v52 != 1)
  {
    static Calendar.current.getter();
    sub_1000AFA94((uint64_t *)&unk_1009559B0);
    uint64_t v32 = type metadata accessor for Calendar.Component();
    uint64_t v33 = *(void *)(v32 - 8);
    unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1007509E0;
    (*(void (**)(unint64_t, void, uint64_t))(v33 + 104))(v35 + v34, enum case for Calendar.Component.year(_:), v32);
    sub_1000C6A18(v35);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    DateInterval.start.getter();
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v3, v48);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v46);
    uint64_t v36 = DateComponents.year.getter();
    uint64_t v37 = (void (**)(char *, uint64_t))(v44 + 8);
    if (v38)
    {
      uint64_t v52 = v0;
      unint64_t v53 = 0xE400000000000000;
      v41._countAndFlagsBits = 0x7261657920;
      v41._object = (void *)0xE500000000000000;
      String.append(_:)(v41);
    }
    else
    {
      uint64_t v39 = v36;
      swift_bridgeObjectRelease();
      uint64_t v52 = v39;
      dispatch thunk of CustomStringConvertible.description.getter();
    }

    (*v37)(v10, v43);
    goto LABEL_21;
  }
  static Calendar.current.getter();
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v18 = type metadata accessor for Calendar.Component();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1007509E0;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, enum case for Calendar.Component.month(_:), v18);
  sub_1000C6A18(v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  DateInterval.start.getter();
  uint64_t v22 = v42;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v3, v48);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v46);
  uint64_t v23 = DateComponents.month.getter();
  if (v24)
  {
    uint64_t v52 = v0;
    unint64_t v53 = 0xE400000000000000;
    v40._countAndFlagsBits = 0x68746E6F6D20;
    v40._object = (void *)0xE600000000000000;
    String.append(_:)(v40);

    goto LABEL_18;
  }
  uint64_t v25 = v23;
  swift_bridgeObjectRelease();
  unint64_t v26 = v25 - 1;
  id v27 = v51;
  if (__OFSUB__(v25, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  id v28 = [v51 monthSymbols];
  if (v28)
  {
    id v29 = v28;
    uint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v26 & 0x8000000000000000) == 0)
    {
      if (v26 < *(void *)(v30 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();

LABEL_18:
        (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v43);
        goto LABEL_21;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100625998@<X0>(int a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int v98 = a1;
  uint64_t v97 = a3;
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v95 = *(void *)(v4 - 8);
  uint64_t v96 = v4;
  __chkstk_darwin(v4);
  unint64_t v94 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v6 - 8);
  uint64_t v88 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v87 = (char *)&v81 - v9;
  __chkstk_darwin(v10);
  uint64_t v86 = (char *)&v81 - v11;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v85 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v91 = (char *)&v81 - v16;
  __chkstk_darwin(v17);
  uint64_t v93 = (uint64_t)&v81 - v18;
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)&v81 - v20;
  __chkstk_darwin(v21);
  uint64_t v90 = (char *)&v81 - v22;
  __chkstk_darwin(v23);
  uint64_t v92 = (uint64_t)&v81 - v24;
  __chkstk_darwin(v25);
  id v27 = (char *)&v81 - v26;
  __chkstk_darwin(v28);
  uint64_t v89 = (char *)&v81 - v29;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v81 - v31;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v81 - v34;
  __chkstk_darwin(v36);
  char v38 = (char *)&v81 - v37;
  __chkstk_darwin(v39);
  Swift::String v41 = (char *)&v81 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v81 - v43;
  uint64_t v45 = type metadata accessor for Calendar();
  uint64_t v99 = *(void *)(v45 - 8);
  uint64_t v100 = v45;
  __chkstk_darwin(v45);
  uint64_t v101 = (char *)&v81 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  Date.init()();
  if ((a2 & 1) == 0)
  {
    sub_100626328(v98, (uint64_t)v44, (uint64_t)v41);
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v47(v38, v41, v12);
    v47(v35, v44, v12);
    DateInterval.init(start:end:)();
    uint64_t v48 = *(void (**)(char *, uint64_t))(v13 + 8);
    v48(v41, v12);
LABEL_15:
    v48(v44, v12);
    unint64_t v53 = v101;
    return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v53, v100);
  }
  uint64_t v82 = v41;
  uint64_t v83 = v38;
  if (!(_BYTE)v98)
  {
    sub_100626328(0, (uint64_t)v44, (uint64_t)v32);
    uint64_t v60 = v94;
    uint64_t v61 = v95;
    uint64_t v62 = v96;
    (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, enum case for Calendar.Component.weekOfYear(_:), v96);
    uint64_t v63 = v86;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    uint64_t v64 = v60;
    uint64_t v65 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v62);
    Swift::String v66 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v66(v27, v44, v12);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v65, 1, v12) == 1)
    {
      uint64_t v67 = v89;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v89, v27, v12);
      sub_10023636C(v65);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v12);
      uint64_t v67 = v89;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v89, v65, v12);
    }
    v66(v82, v67, v12);
    v66(v83, v32, v12);
    DateInterval.init(start:end:)();
    uint64_t v48 = *(void (**)(char *, uint64_t))(v13 + 8);
    v48(v67, v12);
    v48(v32, v12);
    goto LABEL_15;
  }
  if (v98 == 1)
  {
    sub_100626328(1, (uint64_t)v44, v92);
    uint64_t v50 = v94;
    uint64_t v49 = v95;
    uint64_t v51 = v96;
    (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, enum case for Calendar.Component.month(_:), v96);
    uint64_t v52 = v87;
    unint64_t v53 = v101;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    uint64_t v54 = (uint64_t)v52;
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    long long v56 = v84;
    v55(v84, v44, v12);
    int v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v54, 1, v12);
    Swift::String v58 = v82;
    if (v57 == 1)
    {
      uint64_t v59 = v90;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v90, v56, v12);
      sub_10023636C(v54);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
      uint64_t v59 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v90, v54, v12);
    }
    v55(v58, v59, v12);
    unint64_t v76 = v83;
    uint64_t v77 = v92;
  }
  else
  {
    sub_100626328(2, (uint64_t)v44, v93);
    uint64_t v69 = v94;
    uint64_t v68 = v95;
    uint64_t v70 = v96;
    (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, enum case for Calendar.Component.year(_:), v96);
    unint64_t v71 = v88;
    unint64_t v53 = v101;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    uint64_t v72 = (uint64_t)v71;
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    id v73 = v85;
    v55(v85, v44, v12);
    int v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v72, 1, v12);
    unint64_t v75 = v82;
    if (v74 == 1)
    {
      uint64_t v59 = v91;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v91, v73, v12);
      sub_10023636C(v72);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v73, v12);
      uint64_t v59 = v91;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v91, v72, v12);
    }
    long long v78 = v83;
    v55(v75, v59, v12);
    unint64_t v76 = v78;
    uint64_t v77 = v93;
  }
  v55(v76, (char *)v77, v12);
  DateInterval.init(start:end:)();
  id v79 = *(void (**)(char *, uint64_t))(v13 + 8);
  v79(v59, v12);
  v79((char *)v77, v12);
  v79(v44, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v53, v100);
}

uint64_t sub_100626328@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a2;
  LODWORD(v79) = a1;
  uint64_t v86 = a3;
  uint64_t v3 = type metadata accessor for DateComponents();
  uint64_t v82 = *(void *)(v3 - 8);
  uint64_t v83 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v75 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v75 - v10;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v12 - 8);
  long long v78 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v75 - v15;
  __chkstk_darwin(v17);
  uint64_t v77 = (char *)&v75 - v18;
  uint64_t v85 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  unint64_t v76 = (char *)&v75 - v23;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v75 - v25;
  __chkstk_darwin(v27);
  unint64_t v75 = (char *)&v75 - v28;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v75 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v75 - v33;
  uint64_t v35 = type metadata accessor for Calendar();
  uint64_t v80 = *(void *)(v35 - 8);
  uint64_t v81 = v35;
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v75 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  if (!(_BYTE)v79)
  {
    id v79 = v34;
    sub_1000AFA94((uint64_t *)&unk_1009559B0);
    uint64_t v51 = type metadata accessor for Calendar.Component();
    uint64_t v52 = *(void *)(v51 - 8);
    uint64_t v53 = *(void *)(v52 + 72);
    unint64_t v54 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_10074E640;
    unint64_t v56 = v55 + v54;
    int v57 = *(void (**)(unint64_t, void, uint64_t))(v52 + 104);
    v57(v56, enum case for Calendar.Component.yearForWeekOfYear(_:), v51);
    v57(v56 + v53, enum case for Calendar.Component.weekOfYear(_:), v51);
    sub_1000C6A18(v55);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v58 = v84;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v59 = (uint64_t)v77;
    Calendar.date(from:)();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v11, v83);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v37, v81);
    uint64_t v48 = v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v31, v58, v85);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v59, 1, v48) == 1)
    {
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      uint64_t v60 = v79;
      v49(v79, v31, v48);
      sub_10023636C(v59);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v31, v48);
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      uint64_t v60 = v79;
      v49(v79, (char *)v59, v48);
    }
    uint64_t v71 = v86;
    uint64_t v72 = v60;
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v49)(v71, v72, v48);
  }
  if (v79 == 1)
  {
    sub_1000AFA94((uint64_t *)&unk_1009559B0);
    uint64_t v38 = type metadata accessor for Calendar.Component();
    id v79 = v16;
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)(v38 - 8);
    uint64_t v41 = *(void *)(v40 + 72);
    unint64_t v42 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_10074E640;
    unint64_t v44 = v43 + v42;
    uint64_t v45 = *(void (**)(unint64_t, void, uint64_t))(v40 + 104);
    v45(v44, enum case for Calendar.Component.year(_:), v39);
    v45(v44 + v41, enum case for Calendar.Component.month(_:), v39);
    sub_1000C6A18(v43);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v46 = v84;
    Calendar.dateComponents(_:from:)();
    uint64_t v47 = (uint64_t)v79;
    swift_bridgeObjectRelease();
    Calendar.date(from:)();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v8, v83);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v37, v81);
    uint64_t v48 = v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v26, v46, v85);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v47, 1, v48) == 1)
    {
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      uint64_t v50 = v75;
      v49(v75, v26, v48);
      sub_10023636C(v47);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v48);
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      uint64_t v50 = v75;
      v49(v75, (char *)v47, v48);
    }
    uint64_t v71 = v86;
    uint64_t v72 = v50;
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v49)(v71, v72, v48);
  }
  sub_1000AFA94((uint64_t *)&unk_1009559B0);
  uint64_t v61 = type metadata accessor for Calendar.Component();
  uint64_t v62 = *(void *)(v61 - 8);
  unint64_t v63 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1007509E0;
  (*(void (**)(unint64_t, void, uint64_t))(v62 + 104))(v64 + v63, enum case for Calendar.Component.year(_:), v61);
  sub_1000C6A18(v64);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v65 = v84;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v66 = (uint64_t)v78;
  Calendar.date(from:)();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v5, v83);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v37, v81);
  uint64_t v67 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v65, v85);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v66, 1, v67) == 1)
  {
    uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v69 = v76;
    v68(v76, v21, v67);
    sub_10023636C(v66);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v68)(v86, v69, v67);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v67);
    id v73 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    int v74 = v76;
    v73(v76, v66, v67);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v73)(v86, v74, v67);
  }
}

uint64_t sub_100626CF4(uint64_t a1)
{
  return sub_100627810(a1, qword_100998690);
}

unint64_t sub_100626D14()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_1000AFA94(&qword_100965D98);
  uint64_t v5 = *(void *)(sub_1000AFA94(&qword_100960AB0) - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = 2 * v6;
  uint64_t v8 = swift_allocObject();
  uint64_t v16 = v8;
  *(_OWORD *)(v8 + 16) = xmmword_100752410;
  unint64_t v9 = v8 + v7;
  *(unsigned char *)(v8 + v7) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v11 = v14;
  v10(v3, 1, 1, v14);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v9 + v6) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v10(v3, 1, 1, v11);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v9 + v15) = 2;
  LocalizedStringResource.init(stringLiteral:)();
  v10(v3, 1, 1, v11);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100524454(v16);
  qword_1009986A8 = result;
  return result;
}

uint64_t sub_1006270A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10047E718(*a1, *a2);
}

unint64_t sub_1006270B4()
{
  unint64_t result = qword_100965C20;
  if (!qword_100965C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C20);
  }
  return result;
}

Swift::Int sub_100627108()
{
  return Hasher._finalize()();
}

uint64_t sub_100627198()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100627214()
{
  return Hasher._finalize()();
}

unint64_t sub_1006272A0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1006291D0(*a1);
  *a2 = result;
  return result;
}

void sub_1006272D0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x68746E6F6DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1918985593;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1801807223;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_100627320()
{
  unint64_t result = qword_100965C28;
  if (!qword_100965C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C28);
  }
  return result;
}

unint64_t sub_100627378()
{
  unint64_t result = qword_100965C30;
  if (!qword_100965C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C30);
  }
  return result;
}

unint64_t sub_1006273D0()
{
  unint64_t result = qword_100965C38;
  if (!qword_100965C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C38);
  }
  return result;
}

unint64_t sub_100627428()
{
  unint64_t result = qword_100965C40;
  if (!qword_100965C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C40);
  }
  return result;
}

unint64_t sub_100627480()
{
  unint64_t result = qword_100965C48;
  if (!qword_100965C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C48);
  }
  return result;
}

unint64_t sub_1006274DC()
{
  unint64_t result = qword_100965C50;
  if (!qword_100965C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C50);
  }
  return result;
}

uint64_t sub_100627530@<X0>(uint64_t a1@<X8>)
{
  return sub_100628568(&qword_10094B028, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100998690, a1);
}

uint64_t sub_100627568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100628128(a1, a2, a3, (void (*)(void))sub_100627580);
}

unint64_t sub_100627580()
{
  unint64_t result = qword_100965C58;
  if (!qword_100965C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C58);
  }
  return result;
}

uint64_t sub_1006275D4(uint64_t a1)
{
  unint64_t v2 = sub_100627580();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100627624()
{
  unint64_t result = qword_100965C60;
  if (!qword_100965C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C60);
  }
  return result;
}

unint64_t sub_10062767C()
{
  unint64_t result = qword_100965C68;
  if (!qword_100965C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C68);
  }
  return result;
}

unint64_t sub_1006276D4()
{
  unint64_t result = qword_100965C70;
  if (!qword_100965C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C70);
  }
  return result;
}

uint64_t sub_100627728(uint64_t a1, uint64_t a2)
{
  return sub_100628348(a1, a2, &qword_10094B030);
}

uint64_t sub_10062774C(uint64_t a1)
{
  unint64_t v2 = sub_1006274DC();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100627798()
{
  return sub_1000A132C(&qword_100965C78, &qword_100965C80);
}

void sub_1006277D4(void *a1@<X8>)
{
  *a1 = &off_1008B6EA8;
}

uint64_t sub_1006277E4(uint64_t a1)
{
  return sub_100627810(a1, qword_1009986B0);
}

uint64_t sub_100627810(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v8, a2);
  sub_1000876DC(v8, (uint64_t)a2);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_100627978()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  v13[1] = (char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1000AFA94(&qword_100965D90);
  uint64_t v7 = (int *)(sub_1000AFA94(&qword_100960AA0) - 8);
  uint64_t v8 = *(void *)(*(void *)v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10074E640;
  v13[0] = v10 + v9 + v7[14];
  *(unsigned char *)(v10 + v9) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v11(v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v10 + v9 + v8) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v11(v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_10052447C(v10);
  qword_1009986C8 = result;
  return result;
}

uint64_t sub_100627C6C(char *a1, char *a2)
{
  return sub_10047E80C(*a1, *a2);
}

unint64_t sub_100627C7C()
{
  unint64_t result = qword_100965C88;
  if (!qword_100965C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C88);
  }
  return result;
}

Swift::Int sub_100627CD0()
{
  return Hasher._finalize()();
}

uint64_t sub_100627D4C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100627DB4()
{
  return Hasher._finalize()();
}

uint64_t sub_100627E2C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B6F88, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100627E8C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1953718636;
  if (!*v1) {
    uint64_t v2 = 0x746E6572727563;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_100627EC8()
{
  unint64_t result = qword_100965C90;
  if (!qword_100965C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C90);
  }
  return result;
}

unint64_t sub_100627F20()
{
  unint64_t result = qword_100965C98;
  if (!qword_100965C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965C98);
  }
  return result;
}

unint64_t sub_100627F78()
{
  unint64_t result = qword_100965CA0;
  if (!qword_100965CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CA0);
  }
  return result;
}

unint64_t sub_100627FD0()
{
  unint64_t result = qword_100965CA8;
  if (!qword_100965CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CA8);
  }
  return result;
}

unint64_t sub_100628028()
{
  unint64_t result = qword_100965CB0;
  if (!qword_100965CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CB0);
  }
  return result;
}

unint64_t sub_100628084()
{
  unint64_t result = qword_100965CB8;
  if (!qword_100965CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CB8);
  }
  return result;
}

uint64_t sub_1006280D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100628568(&qword_10094B038, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1009986B0, a1);
}

uint64_t sub_100628110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100628128(a1, a2, a3, (void (*)(void))sub_10062817C);
}

uint64_t sub_100628128(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10062817C()
{
  unint64_t result = qword_100965CC0;
  if (!qword_100965CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CC0);
  }
  return result;
}

uint64_t sub_1006281D0(uint64_t a1)
{
  unint64_t v2 = sub_10062817C();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100628220()
{
  unint64_t result = qword_100965CC8;
  if (!qword_100965CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CC8);
  }
  return result;
}

unint64_t sub_100628278()
{
  unint64_t result = qword_100965CD0;
  if (!qword_100965CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CD0);
  }
  return result;
}

unint64_t sub_1006282D0()
{
  unint64_t result = qword_100965CD8;
  if (!qword_100965CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CD8);
  }
  return result;
}

uint64_t sub_100628324(uint64_t a1, uint64_t a2)
{
  return sub_100628348(a1, a2, &qword_10094B040);
}

uint64_t sub_100628348(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100628398(uint64_t a1)
{
  unint64_t v2 = sub_100628084();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1006283E4()
{
  return sub_1000A132C(&qword_100965CE0, &qword_100965CE8);
}

void sub_100628420(void *a1@<X8>)
{
  *a1 = &off_1008B6E80;
}

unint64_t sub_100628434()
{
  unint64_t result = qword_100965CF0;
  if (!qword_100965CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CF0);
  }
  return result;
}

unint64_t sub_10062848C()
{
  unint64_t result = qword_100965CF8;
  if (!qword_100965CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965CF8);
  }
  return result;
}

uint64_t sub_1006284E0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100628514()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100628530@<X0>(uint64_t a1@<X8>)
{
  return sub_100628568(&qword_10094B020, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100998678, a1);
}

uint64_t sub_100628568@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_1000876DC(v7, a3);
  unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_100628610(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = *(void *)(v1 + 32);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v5;
  *char v5 = v2;
  v5[1] = sub_1002FD30C;
  return sub_1006240BC(a1);
}

double sub_1006286C8@<D0>(uint64_t a1@<X8>)
{
  sub_100628A14((uint64_t *)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10062870C(uint64_t a1)
{
  unint64_t v2 = sub_1003CF380();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unsigned char *storeEnumTagSinglePayload for WorkoutTotalDistanceIntent.RelativeTime(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100628814);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutTotalDistanceIntent.RelativeTime()
{
  return &type metadata for WorkoutTotalDistanceIntent.RelativeTime;
}

ValueMetadata *type metadata accessor for WorkoutTotalDistanceIntent()
{
  return &type metadata for WorkoutTotalDistanceIntent;
}

unsigned char *storeEnumTagSinglePayload for WorkoutTotalDistanceIntent.Duration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100628928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutTotalDistanceIntent.Duration()
{
  return &type metadata for WorkoutTotalDistanceIntent.Duration;
}

uint64_t sub_100628960()
{
  return sub_1000A132C(&qword_100965D08, &qword_100965D10);
}

uint64_t sub_10062899C()
{
  return sub_1000A132C(&qword_100965D18, &qword_100965D20);
}

uint64_t sub_1006289D8()
{
  return sub_1000A132C(&qword_100965D28, &qword_100965D20);
}

uint64_t sub_100628A14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v36 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D320);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v38 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v32 = sub_1000AFA94(&qword_100965D30);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  uint64_t v37 = v13 + 56;
  uint64_t v39 = v14;
  v14(v11, 0, 1, v12);
  *(void *)&long long v40 = 0;
  BYTE8(v40) = 1;
  uint64_t v15 = type metadata accessor for IntentDialog();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v8;
  v16(v8, 1, 1, v15);
  uint64_t v28 = v5;
  v16(v5, 1, 1, v15);
  unsigned int v34 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v29 = *(void (**)(char *))(v1 + 104);
  uint64_t v18 = v36;
  v29(v35);
  uint64_t v30 = v1 + 104;
  sub_10024C020();
  uint64_t v32 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v31 = sub_1000AFA94(&qword_100965D38);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v39(v11, 0, 1, v38);
  LOBYTE(v40) = 3;
  v16(v17, 1, 1, v15);
  uint64_t v19 = v28;
  v16(v28, 1, 1, v15);
  uint64_t v20 = v35;
  uint64_t v21 = v18;
  uint64_t v22 = v29;
  ((void (*)(char *, void, uint64_t))v29)(v35, v34, v21);
  sub_100627580();
  uint64_t v31 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_1000AFA94(&qword_100965D40);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v39(v11, 0, 1, v38);
  LOBYTE(v40) = 2;
  v16(v17, 1, 1, v15);
  v16(v19, 1, 1, v15);
  ((void (*)(char *, void, uint64_t))v22)(v20, v34, v36);
  sub_10062817C();
  uint64_t v23 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_1000AFA94(&qword_10094D338);
  type metadata accessor for AppDependencyManager();
  long long v40 = 0u;
  long long v41 = 0u;
  uint64_t v42 = 0;
  static AppDependencyManager.shared.getter();
  uint64_t v24 = AppDependency.__allocating_init(key:manager:)();
  sub_1000AFA94(&qword_10094D340);
  uint64_t v42 = 0;
  long long v40 = 0u;
  long long v41 = 0u;
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  uint64_t v26 = v33;
  uint64_t v27 = v31;
  *uint64_t v33 = v32;
  v26[1] = v27;
  v26[2] = v23;
  v26[3] = v24;
  v26[4] = result;
  return result;
}

uint64_t sub_100629004(uint64_t a1, uint64_t a2)
{
  id v2 = [objc_allocWithZone((Class)FIUIWorkoutActivityType) initWithActivityTypeIdentifier:a2 isIndoor:0];
  uint64_t v3 = FIUIDistanceTypeForActivityType();
  AppDependency.wrappedValue.getter();
  sub_1000AFA94(&qword_10094F070);
  Measurement.value.getter();
  id v4 = [v7 localizedNaturalScaleStringWithDistanceInMeters:v3 distanceType:3 unitStyle:0 usedUnit:2 decimalTrimmingMode:];

  if (v4)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {

    return 0;
  }
  return v5;
}

unint64_t sub_1006290F4()
{
  unint64_t result = qword_100965D58;
  if (!qword_100965D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965D58);
  }
  return result;
}

uint64_t sub_10062914C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100629178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006291A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1006291D0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B6F20, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unsigned char *storeEnumTagSinglePayload for CardSize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006292E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_100629314()
{
  unint64_t result = qword_100965DA0;
  if (!qword_100965DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965DA0);
  }
  return result;
}

uint64_t sub_100629368(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_10007E4EC(a1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_10007E4EC(a1, v4);
  unint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v9 = v6;
  if (v8 != 3 || v6 > 7)
  {
LABEL_6:
    sub_1000917F8(v9, v7, v8);
    return 0;
  }
  uint64_t result = 0x4062C00000000000;
  switch(v9)
  {
    case 1:
    case 7:
      uint64_t result = 0x4059000000000000;
      break;
    case 2:
    case 4:
      uint64_t result = 0x4069000000000000;
      break;
    case 5:
      goto LABEL_6;
    case 6:
      uint64_t result = 0x4049000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *sub_10062949C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for LayoutDirection();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = (uint64_t)v11;
    uint64_t v12 = (uint64_t *)((char *)v4 + v10);
    uint64_t v13 = (uint64_t *)((char *)a2 + v10);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (char *)v4 + v16;
    uint64_t v21 = (char *)a2 + v16;
    *uint64_t v20 = *v21;
    *((void *)v20 + 1) = *((void *)v21 + 1);
    uint64_t v22 = a3[9];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    char *v23 = *v24;
    *((void *)v23 + 1) = *((void *)v24 + 1);
    id v25 = v11;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100629638(uint64_t a1, uint64_t a2)
{
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100629718(void *a1, void *a2, int *a3)
{
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v9;
  uint64_t v10 = (void *)((char *)a1 + v8);
  uint64_t v11 = (void *)((char *)a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (char *)a1 + v14;
  uint64_t v19 = (char *)a2 + v14;
  *uint64_t v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  char *v21 = *v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  id v23 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100629868(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_100968CD0);
    sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)((char *)a2 + v7);
  uint64_t v9 = *(void **)((char *)a1 + v7);
  *(void *)((char *)a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_retain();
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_retain();
  swift_release();
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *uint64_t v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_release();
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  char *v21 = *v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100629A08(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  uint64_t v9 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  return a1;
}

char *sub_100629B04(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_100968CD0);
    uint64_t v6 = sub_1000AFA94(&qword_100968CD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = *(void **)&a1[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];

  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v14 = *(void *)v12;
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = v14;
  *((void *)v11 + 1) = v13;
  swift_release();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_release();
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  char *v21 = *v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_release();
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  id v25 = &a2[v23];
  *uint64_t v24 = *v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_release();
  return a1;
}

uint64_t sub_100629C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100629C8C);
}

uint64_t sub_100629C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_100961500);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100629D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100629D64);
}

uint64_t sub_100629D64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000AFA94(&qword_100961500);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for WorkoutChartGroupView()
{
  uint64_t result = qword_100965E08;
  if (!qword_100965E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100629E70()
{
  sub_1005B8590();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100629F20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100629F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v32 = a3;
  uint64_t v33 = type metadata accessor for TaskPriority();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for GeometryProxy();
  uint64_t v5 = *(void *)(v27 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v27);
  uint64_t v7 = type metadata accessor for WorkoutChartGroupView();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v26 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000AFA94(&qword_100965E50);
  uint64_t v10 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a2;
  static Axis.Set.vertical.getter();
  sub_1000AFA94(&qword_100965E58);
  sub_10062F884();
  ScrollView.init(_:showsIndicators:content:)();
  sub_100630830(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  uint64_t v13 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v27);
  unint64_t v14 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v5 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  sub_100630780((uint64_t)v9, v16 + v14, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  uint64_t v17 = v30;
  static TaskPriority.userInitiated.getter();
  uint64_t v18 = sub_1000AFA94(&qword_100965E88);
  uint64_t v19 = v32;
  uint64_t v20 = (char *)(v32 + *(int *)(v18 + 36));
  uint64_t v21 = type metadata accessor for _TaskModifier();
  uint64_t v22 = v31;
  uint64_t v23 = v33;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(&v20[*(int *)(v21 + 20)], v17, v33);
  *(void *)uint64_t v20 = &unk_100965E80;
  *((void *)v20 + 1) = v16;
  uint64_t v24 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v19, v12, v29);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v24);
}

uint64_t sub_10062A338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000AFA94(&qword_100965E70);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = a1;
  static HorizontalAlignment.center.getter();
  int v14 = 0;
  sub_1006307E8(&qword_100965E98, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  sub_1000AFA94(&qword_100965EA0);
  sub_1000A132C(&qword_100965EA8, &qword_100965EA0);
  LazyVStack.init(alignment:spacing:pinnedViews:content:)();
  char v9 = static Edge.Set.all.getter();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 16))(a2, v8, v5);
  uint64_t v10 = a2 + *(int *)(sub_1000AFA94(&qword_100965E58) + 36);
  *(unsigned char *)uint64_t v10 = v9;
  *(_OWORD *)(v10 + 8) = xmmword_100752B90;
  *(_OWORD *)(v10 + 24) = xmmword_100752B90;
  *(unsigned char *)(v10 + 40) = 0;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10062A578@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100965EB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v73 = (uint64_t)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v66 = (char *)&v64 - v6;
  uint64_t v7 = sub_1000AFA94(&qword_100965EB8);
  __chkstk_darwin(v7 - 8);
  uint64_t v71 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v75 = (uint64_t)&v64 - v10;
  uint64_t v11 = sub_1000AFA94(&qword_100965EC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v70 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v74 = (uint64_t)&v64 - v14;
  uint64_t v77 = sub_1000AFA94(&qword_100965EC8);
  __chkstk_darwin(v77);
  uint64_t v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for WorkoutChartGroupView();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  uint64_t v65 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v64 - v21;
  uint64_t v69 = sub_1000AFA94(&qword_100965ED0);
  __chkstk_darwin(v69);
  uint64_t v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000AFA94(&qword_100965ED8);
  uint64_t v68 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  long long v78 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v64 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v64 - v30;
  uint64_t v64 = v17;
  uint64_t v67 = a1 + *(int *)(v17 + 28);
  uint64_t v32 = *(void *)(v67 + 8);
  swift_beginAccess();
  uint64_t v79 = *(void *)(v32 + 16);
  sub_100630830(a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  unint64_t v33 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v34 = swift_allocObject();
  sub_100630780((uint64_t)v22, v34 + v33, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  swift_bridgeObjectRetain();
  sub_1000AFA94(&qword_100962CF0);
  sub_1000AFA94(&qword_100965EE0);
  sub_1000A132C(&qword_100962CF8, &qword_100962CF0);
  sub_10062FD7C();
  sub_100588F80();
  uint64_t v35 = a1;
  ForEach<>.init(_:content:)();
  sub_10062B5DC((uint64_t)v16);
  static GestureMask.all.getter();
  sub_10062FE14(&qword_100965F00, &qword_100965ED0, (void (*)(void))sub_10062FE80);
  sub_1000A132C(&qword_100965F18, &qword_100965EC8);
  uint64_t v36 = v67;
  View.gesture<A>(_:including:)();
  sub_10008DB18((uint64_t)v16, &qword_100965EC8);
  sub_10008DB18((uint64_t)v24, &qword_100965ED0);
  uint64_t v37 = v68;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
  uint64_t v77 = (uint64_t)v31;
  v38(v31, v28, v76);
  uint64_t v39 = *(void *)(v36 + 8);
  swift_beginAccess();
  if (*(void *)(*(void *)(v39 + 16) + 16) < 2uLL)
  {
    uint64_t v42 = sub_1000AFA94(&qword_100965F20);
    uint64_t v40 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v74, 1, 1, v42);
  }
  else
  {
    uint64_t v40 = v74;
    sub_10062BFDC(v74);
    uint64_t v41 = sub_1000AFA94(&qword_100965F20);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
  uint64_t v43 = (uint64_t)v65;
  uint64_t v44 = (uint64_t)v66;
  uint64_t v45 = v75;
  id v46 = [*(id *)(v39 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType) effectiveTypeIdentifier];
  sub_100630830(v35, v43, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  if (v46 == (id)37)
  {
    unsigned __int8 v47 = [*(id *)(*(void *)(v43 + *(int *)(v64 + 28) + 8)+ OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_activityType) isIndoor];
    sub_100630898(v43, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
    if ((v47 & 1) == 0)
    {
      sub_10062CB88(v45);
      uint64_t v48 = sub_1000AFA94(&qword_100965F28);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v45, 0, 1, v48);
      goto LABEL_9;
    }
  }
  else
  {
    sub_100630898(v43, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  }
  uint64_t v49 = sub_1000AFA94(&qword_100965F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v45, 1, 1, v49);
LABEL_9:
  if ((uint64_t)[*(id *)(*(void *)(v36 + 8) + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_locationReadings) count] < 2)
  {
    uint64_t v51 = sub_1000AFA94(&qword_100965F30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v44, 1, 1, v51);
  }
  else
  {
    sub_10062D72C(v44);
    uint64_t v50 = sub_1000AFA94(&qword_100965F30);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v44, 0, 1, v50);
  }
  uint64_t v52 = v44;
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  unint64_t v54 = v78;
  uint64_t v55 = v76;
  v53(v78, v77, v76);
  uint64_t v56 = v70;
  sub_1000AEF2C(v40, v70, &qword_100965EC0);
  uint64_t v57 = v45;
  uint64_t v58 = v71;
  sub_1000AEF2C(v57, v71, &qword_100965EB8);
  uint64_t v59 = v73;
  sub_1000AEF2C(v52, v73, &qword_100965EB0);
  uint64_t v60 = v72;
  v53(v72, (uint64_t)v54, v55);
  uint64_t v61 = (int *)sub_1000AFA94(&qword_100965F38);
  sub_1000AEF2C(v56, (uint64_t)&v60[v61[12]], &qword_100965EC0);
  sub_1000AEF2C(v58, (uint64_t)&v60[v61[16]], &qword_100965EB8);
  sub_1000AEF2C(v59, (uint64_t)&v60[v61[20]], &qword_100965EB0);
  sub_10008DB18(v52, &qword_100965EB0);
  sub_10008DB18(v75, &qword_100965EB8);
  sub_10008DB18(v74, &qword_100965EC0);
  uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v62(v77, v55);
  sub_10008DB18(v59, &qword_100965EB0);
  sub_10008DB18(v58, &qword_100965EB8);
  sub_10008DB18(v56, &qword_100965EC0);
  return ((uint64_t (*)(char *, uint64_t))v62)(v78, v55);
}

uint64_t sub_10062AF40@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v5 = sub_1000AFA94(&qword_100965EE0);
  __chkstk_darwin(v5 - 8);
  uint64_t v54 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Divider();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin(v7);
  uint64_t v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000AFA94(&qword_10094E398);
  __chkstk_darwin(v48);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v52 = (uint64_t)&v45 - v12;
  uint64_t v45 = type metadata accessor for WorkoutChartView();
  __chkstk_darwin(v45);
  uint64_t v53 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = sub_1000AFA94(&qword_10094D448);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for WorkoutChartViewModel(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v46 = (uint64_t)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a1;
  type metadata accessor for WorkoutChartGroupView();
  uint64_t v47 = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v24 = v56;
  if (*(void *)(v56 + 16) && (uint64_t v25 = sub_10052A09C(v23), (v26 & 1) != 0))
  {
    sub_100630830(*(void *)(v24 + 56) + *(void *)(v21 + 72) * v25, (uint64_t)v19, type metadata accessor for WorkoutChartViewModel);
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, v27, 1, v20);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_10008DB18((uint64_t)v19, &qword_10094D448);
    uint64_t v28 = sub_1000AFA94(&qword_100965EF8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v55, 1, 1, v28);
  }
  else
  {
    uint64_t v30 = (uint64_t)v19;
    uint64_t v31 = v46;
    sub_100630780(v30, v46, type metadata accessor for WorkoutChartViewModel);
    sub_100630830(v31, (uint64_t)v16, type metadata accessor for WorkoutChartViewModel);
    uint64_t v32 = v45;
    unint64_t v33 = (uint64_t *)&v16[*(int *)(v45 + 20)];
    type metadata accessor for WorkoutChartProperties();
    sub_1006307E8(&qword_100968D00, (void (*)(uint64_t))type metadata accessor for WorkoutChartProperties);
    swift_retain();
    *unint64_t v33 = ObservedObject.init(wrappedValue:)();
    v33[1] = v34;
    v16[*(int *)(v32 + 24)] = 0;
    uint64_t v35 = v49;
    Divider.init()();
    char v36 = static Edge.Set.all.getter();
    uint64_t v38 = v50;
    uint64_t v37 = v51;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v10, v35, v51);
    uint64_t v39 = &v10[*(int *)(v48 + 36)];
    *uint64_t v39 = v36;
    *(_OWORD *)(v39 + 8) = xmmword_10076E480;
    *(_OWORD *)(v39 + 24) = xmmword_1007708A0;
    v39[40] = 0;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    uint64_t v40 = v52;
    sub_1000AEEC8((uint64_t)v10, v52, &qword_10094E398);
    uint64_t v41 = v53;
    sub_100630830((uint64_t)v16, v53, (uint64_t (*)(void))type metadata accessor for WorkoutChartView);
    sub_1000AEF2C(v40, (uint64_t)v10, &qword_10094E398);
    uint64_t v42 = v54;
    sub_100630830(v41, v54, (uint64_t (*)(void))type metadata accessor for WorkoutChartView);
    uint64_t v43 = sub_1000AFA94(&qword_100966038);
    sub_1000AEF2C((uint64_t)v10, v42 + *(int *)(v43 + 48), &qword_10094E398);
    sub_10008DB18(v40, &qword_10094E398);
    sub_100630898((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WorkoutChartView);
    sub_100630898(v31, type metadata accessor for WorkoutChartViewModel);
    sub_10008DB18((uint64_t)v10, &qword_10094E398);
    sub_100630898(v41, (uint64_t (*)(void))type metadata accessor for WorkoutChartView);
    uint64_t v44 = sub_1000AFA94(&qword_100965EF8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v42, 0, 1, v44);
    return sub_1000AEEC8(v42, v55, &qword_100965EE0);
  }
}

uint64_t sub_10062B5DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v75 = a1;
  uint64_t v3 = type metadata accessor for DelayedLongPressGesture();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  uint64_t v74 = v4;
  __chkstk_darwin(v3);
  uint64_t v69 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_100961968);
  uint64_t v71 = *(void *)(v6 - 8);
  uint64_t v72 = v6;
  __chkstk_darwin(v6);
  uint64_t v70 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000AFA94(&qword_100966030) - 8;
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SpatialTapGesture();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v65 = v9;
  uint64_t v66 = v10;
  __chkstk_darwin(v9);
  uint64_t v62 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100961978);
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v64 = v12;
  __chkstk_darwin(v12);
  uint64_t v80 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WorkoutChartGroupView();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin(v58);
  uint64_t v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DragGesture();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000AFA94(&qword_10095C808);
  uint64_t v60 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  v54[0] = (char *)v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000AFA94(&qword_10095C810);
  uint64_t v81 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v79 = (char *)v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v19;
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  long long v78 = type metadata accessor for WorkoutChartGroupView;
  uint64_t v26 = v2;
  sub_100630830(v2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  uint64_t v27 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v28 = (v27 + 16) & ~v27;
  uint64_t v76 = v28;
  uint64_t v77 = v27 | 7;
  v54[1] = v28 + v16;
  uint64_t v29 = swift_allocObject();
  sub_100630780((uint64_t)v17, v29 + v28, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  sub_1006307E8(&qword_10095C850, (void (*)(uint64_t))&type metadata accessor for DragGesture);
  sub_1006307E8(&qword_10095C858, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
  Gesture<>.onChanged(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  uint64_t v30 = v26;
  uint64_t v56 = v26;
  uint64_t v31 = v78;
  sub_100630830(v26, (uint64_t)v17, (uint64_t (*)(void))v78);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v76;
  uint64_t v55 = type metadata accessor for WorkoutChartGroupView;
  sub_100630780((uint64_t)v17, v32 + v76, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  sub_1000A132C(&qword_10095C860, &qword_10095C808);
  uint64_t v34 = v79;
  uint64_t v35 = v59;
  uint64_t v36 = v54[0];
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v36, v35);
  static CoordinateSpaceProtocol<>.local.getter();
  uint64_t v37 = v62;
  SpatialTapGesture.init<A>(count:coordinateSpace:)();
  sub_100630830(v30, (uint64_t)v17, (uint64_t (*)(void))v31);
  uint64_t v38 = swift_allocObject();
  sub_100630780((uint64_t)v17, v38 + v33, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  sub_1006307E8(&qword_100961980, (void (*)(uint64_t))&type metadata accessor for SpatialTapGesture);
  uint64_t v39 = v80;
  uint64_t v40 = v65;
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v40);
  uint64_t v42 = v63;
  uint64_t v41 = v64;
  uint64_t v43 = (uint64_t)v67;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v67, v39, v64);
  uint64_t v44 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 16))(v43 + *(int *)(v68 + 60), v34, v61);
  uint64_t v45 = v69;
  DelayedLongPressGesture.init(minimumDuration:maximumDistance:)();
  sub_100630830(v56, (uint64_t)v17, (uint64_t (*)(void))v78);
  uint64_t v46 = swift_allocObject();
  sub_100630780((uint64_t)v17, v46 + v76, (uint64_t (*)(void))v55);
  sub_1006307E8(&qword_100961988, (void (*)(uint64_t))&type metadata accessor for DelayedLongPressGesture);
  uint64_t v47 = v70;
  uint64_t v48 = v73;
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v45, v48);
  uint64_t v50 = v71;
  uint64_t v49 = v72;
  uint64_t v51 = v75;
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v75, v47, v72);
  uint64_t v52 = sub_1000AFA94(&qword_100965EC8);
  sub_1000AEF2C(v43, v51 + *(int *)(v52 + 52), &qword_100966030);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v49);
  sub_10008DB18(v43, &qword_100966030);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v80, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v79, v44);
}

uint64_t sub_10062BFDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v97 = a1;
  uint64_t v1 = type metadata accessor for WorkoutChartGroupView();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v95 = v1 - 8;
  uint64_t v93 = v2;
  unint64_t v92 = *(void *)(v2 + 64);
  __chkstk_darwin(v1 - 8);
  uint64_t v96 = (uint64_t)v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v90 = (uint64_t)v68 - v5;
  uint64_t v88 = type metadata accessor for Divider();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v85 = (char *)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000AFA94(&qword_10094E398) - 8;
  __chkstk_darwin(v86);
  uint64_t v84 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for DynamicTypeSize();
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v73 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000AFA94(&qword_100965F40);
  uint64_t v80 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v69 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_100965F48);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v70 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000AFA94(&qword_100965F50) - 8;
  __chkstk_darwin(v74);
  uint64_t v71 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000AFA94(&qword_100965F58) - 8;
  __chkstk_darwin(v75);
  uint64_t v72 = (uint64_t)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000AFA94(&qword_100965F60);
  __chkstk_darwin(v83);
  uint64_t v82 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000AFA94(&qword_100965F68);
  uint64_t v91 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  int v98 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = static VerticalAlignment.center.getter();
  sub_100553B40((uint64_t)&v101);
  uint64_t v16 = v101;
  uint64_t v17 = v102;
  char v18 = v103;
  uint64_t v20 = v104;
  uint64_t v19 = v105;
  v68[1] = v104;
  char v21 = v106;
  uint64_t v22 = v107;
  uint64_t v23 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v101 = v15;
  uint64_t v102 = 0;
  unsigned __int8 v103 = 1;
  uint64_t v104 = v16;
  uint64_t v105 = v17;
  char v106 = v18;
  uint64_t v107 = v20;
  uint64_t v108 = v19;
  char v109 = v21;
  uint64_t v110 = v22;
  char v111 = 0;
  uint64_t v112 = KeyPath;
  uint64_t v113 = v23;
  uint64_t v25 = sub_1000AFA94(&qword_100961C28);
  uint64_t v26 = sub_10063042C((unint64_t *)&qword_100961C30, &qword_100961C28, (void (*)(void))sub_100555A1C);
  uint64_t v27 = v69;
  View.bold(_:)();
  sub_1000A06C0(v16, v17, v18);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = v76;
  uint64_t v29 = v73;
  uint64_t v30 = v78;
  (*(void (**)(char *, void, uint64_t))(v76 + 104))(v73, enum case for DynamicTypeSize.large(_:), v78);
  uint64_t v101 = v25;
  uint64_t v102 = v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = v70;
  uint64_t v32 = v77;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v27, v32);
  uint64_t v33 = static Color.secondary.getter();
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = v79;
  uint64_t v36 = (uint64_t)v71;
  uint64_t v37 = v81;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v71, v31, v81);
  uint64_t v38 = (uint64_t *)(v36 + *(int *)(v74 + 44));
  *uint64_t v38 = v34;
  v38[1] = v33;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v37);
  LOBYTE(v33) = static Edge.Set.all.getter();
  uint64_t v39 = v72;
  sub_1000AEF2C(v36, v72, &qword_100965F50);
  uint64_t v40 = v39 + *(int *)(v75 + 44);
  *(unsigned char *)uint64_t v40 = v33;
  *(_OWORD *)(v40 + 8) = xmmword_1007708B0;
  *(_OWORD *)(v40 + 24) = xmmword_1007708C0;
  *(unsigned char *)(v40 + 40) = 0;
  sub_10008DB18(v36, &qword_100965F50);
  uint64_t v41 = v85;
  Divider.init()();
  LOBYTE(v33) = static Edge.Set.all.getter();
  uint64_t v42 = v87;
  uint64_t v43 = (uint64_t)v84;
  uint64_t v44 = v88;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v41, v88);
  uint64_t v45 = v43 + *(int *)(v86 + 44);
  *(unsigned char *)uint64_t v45 = v33;
  *(_OWORD *)(v45 + 8) = xmmword_10076E480;
  *(_OWORD *)(v45 + 24) = xmmword_10076E480;
  *(unsigned char *)(v45 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v44);
  uint64_t v46 = static Alignment.bottom.getter();
  uint64_t v48 = v47;
  uint64_t v49 = v83;
  uint64_t v50 = (uint64_t)v82;
  uint64_t v51 = (uint64_t)&v82[*(int *)(v83 + 36)];
  sub_1000AEF2C(v43, v51, &qword_10094E398);
  uint64_t v52 = (uint64_t *)(v51 + *(int *)(sub_1000AFA94(&qword_100965F70) + 36));
  uint64_t *v52 = v46;
  v52[1] = v48;
  uint64_t v53 = v50;
  sub_1000AEF2C(v39, v50, &qword_100965F58);
  sub_10008DB18(v43, &qword_10094E398);
  sub_10008DB18(v39, &qword_100965F58);
  uint64_t v54 = v94;
  uint64_t v55 = v90;
  sub_100630830(v94, v90, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  unint64_t v56 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  uint64_t v57 = swift_allocObject();
  sub_100630780(v55, v57 + v56, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  unint64_t v92 = sub_100630148();
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_10008DB18(v53, &qword_100965F60);
  uint64_t v58 = v54 + *(int *)(v95 + 44);
  char v59 = *(unsigned char *)v58;
  uint64_t v60 = *(void *)(v58 + 8);
  char v99 = v59;
  uint64_t v100 = v60;
  sub_1000AFA94(&qword_10094DEE0);
  State.projectedValue.getter();
  uint64_t v93 = v102;
  LODWORD(v95) = v103;
  sub_100630830(v54, v55, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  uint64_t v61 = swift_allocObject();
  sub_100630780(v55, v61 + v56, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  uint64_t v62 = v54;
  uint64_t v63 = v96;
  sub_100630830(v62, v96, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  uint64_t v64 = swift_allocObject();
  sub_100630780(v63, v64 + v56, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  type metadata accessor for WorkoutChartableMetricsView();
  uint64_t v101 = v49;
  uint64_t v102 = v92;
  swift_getOpaqueTypeConformance2();
  sub_1006307E8(&qword_100965F98, (void (*)(uint64_t))type metadata accessor for WorkoutChartableMetricsView);
  uint64_t v65 = v89;
  uint64_t v66 = v98;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v66, v65);
}

uint64_t sub_10062CB88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v105 = a1;
  uint64_t v2 = type metadata accessor for Divider();
  uint64_t v99 = *(void *)(v2 - 8);
  uint64_t v100 = v2;
  __chkstk_darwin(v2);
  int v98 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000AFA94(&qword_10094E398);
  __chkstk_darwin(v97);
  uint64_t v101 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v95 = *(void *)(v5 - 8);
  uint64_t v96 = v5;
  __chkstk_darwin(v5);
  uint64_t v94 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_100965FA8);
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000AFA94(&qword_100965FB0);
  __chkstk_darwin(v78);
  uint64_t v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000AFA94(&qword_100965FB8);
  __chkstk_darwin(v85);
  uint64_t v76 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000AFA94(&qword_100965FC0);
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v84 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100965FC8);
  uint64_t v90 = *(void *)(v12 - 8);
  uint64_t v91 = v12;
  __chkstk_darwin(v12);
  uint64_t v86 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000AFA94(&qword_100965FD0);
  __chkstk_darwin(v82);
  uint64_t v89 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000AFA94(&qword_100965FD8);
  __chkstk_darwin(v83);
  uint64_t v93 = (uint64_t)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_100965FE0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v103 = v16;
  uint64_t v104 = v17;
  __chkstk_darwin(v16);
  unint64_t v92 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v19 - 8);
  char v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v102 = (char *)&v76 - v27;
  uint64_t v28 = *(void *)(v1 + *(int *)(type metadata accessor for WorkoutChartGroupView() + 28) + 8);
  swift_beginAccess();
  unint64_t v77 = *(void *)(*(void *)(v28 + 16) + 16);
  id v29 = [self mainBundle];
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = [v29 localizedStringForKey:v30 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_10008DB18((uint64_t)v21, (uint64_t *)&unk_10094B790);
    uint64_t v32 = 1;
    uint64_t v33 = v105;
    uint64_t v34 = v103;
  }
  else
  {
    uint64_t v35 = v102;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v102, v21, v22);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v35, v22);
    sub_1000AFA94(&qword_100965FE8);
    sub_1000A132C(&qword_100965FF0, &qword_100965FE8);
    uint64_t v36 = v79;
    Link.init(destination:label:)();
    uint64_t v37 = v80;
    uint64_t v38 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v9, v36, v81);
    v9[*(int *)(v78 + 36)] = 0;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
    uint64_t v39 = static Font.subheadline.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v41 = v76;
    sub_1000AEF2C((uint64_t)v9, v76, &qword_100965FB0);
    uint64_t v42 = v85;
    uint64_t v43 = (uint64_t *)(v41 + *(int *)(v85 + 36));
    *uint64_t v43 = KeyPath;
    v43[1] = v39;
    sub_10008DB18((uint64_t)v9, &qword_100965FB0);
    uint64_t v44 = sub_10063042C(&qword_100965FF8, &qword_100965FB8, (void (*)(void))sub_1006304D0);
    uint64_t v45 = v84;
    View.bold(_:)();
    sub_10008DB18(v41, &qword_100965FB8);
    uint64_t v47 = v94;
    uint64_t v46 = v95;
    uint64_t v48 = v96;
    (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, enum case for DynamicTypeSize.large(_:), v96);
    uint64_t v106 = v42;
    uint64_t v107 = v44;
    swift_getOpaqueTypeConformance2();
    uint64_t v49 = v86;
    uint64_t v50 = v88;
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v45, v50);
    uint64_t v51 = static Color.secondary.getter();
    uint64_t v52 = swift_getKeyPath();
    uint64_t v54 = v90;
    uint64_t v53 = v91;
    uint64_t v55 = (uint64_t)v89;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v89, v49, v91);
    unint64_t v56 = (uint64_t *)(v55 + *(int *)(v82 + 36));
    uint64_t *v56 = v52;
    v56[1] = v51;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v53);
    if (v77 <= 1) {
      uint64_t v57 = 0x401C000000000000;
    }
    else {
      uint64_t v57 = 0x4028000000000000;
    }
    char v58 = static Edge.Set.all.getter();
    uint64_t v59 = v93;
    sub_1000AEF2C(v55, v93, &qword_100965FD0);
    uint64_t v60 = v59 + *(int *)(v83 + 36);
    *(unsigned char *)uint64_t v60 = v58;
    *(void *)(v60 + 8) = v57;
    *(_OWORD *)(v60 + 16) = xmmword_1007708D0;
    *(void *)(v60 + 32) = 0x4008000000000000;
    *(unsigned char *)(v60 + 40) = 0;
    sub_10008DB18(v55, &qword_100965FD0);
    uint64_t v61 = v98;
    Divider.init()();
    char v62 = static Edge.Set.all.getter();
    uint64_t v64 = v99;
    uint64_t v63 = v100;
    uint64_t v65 = (uint64_t)v101;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v101, v61, v100);
    uint64_t v66 = v65 + *(int *)(v97 + 36);
    *(unsigned char *)uint64_t v66 = v62;
    *(_OWORD *)(v66 + 8) = xmmword_10076E480;
    *(_OWORD *)(v66 + 24) = xmmword_10076E480;
    *(unsigned char *)(v66 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    uint64_t v67 = static Alignment.bottom.getter();
    uint64_t v69 = v68;
    uint64_t v70 = v103;
    uint64_t v71 = (uint64_t)v92;
    uint64_t v72 = (uint64_t)&v92[*(int *)(v103 + 36)];
    sub_1000AEF2C(v65, v72, &qword_10094E398);
    uint64_t v73 = (uint64_t *)(v72 + *(int *)(sub_1000AFA94(&qword_100965F70) + 36));
    *uint64_t v73 = v67;
    v73[1] = v69;
    sub_1000AEF2C(v59, v71, &qword_100965FD8);
    sub_10008DB18(v65, &qword_10094E398);
    sub_10008DB18(v59, &qword_100965FD8);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v102, v22);
    uint64_t v74 = v105;
    sub_1000AEEC8(v71, v105, &qword_100965FE0);
    uint64_t v32 = 0;
    uint64_t v33 = v74;
    uint64_t v34 = v70;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v33, v32, 1, v34);
}

void sub_10062D72C(uint64_t a1@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v1 = sub_1000AFA94(&qword_100966010);
  __chkstk_darwin(v1 - 8);
  uint64_t v64 = (uint64_t *)((char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v3 = [self preferredFontForTextStyle:UIFontTextStyleCaption2];
  id v4 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
  id v5 = [v3 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v4];

  if (v5)
  {
    id v62 = [self tertiaryLabelColor];
    uint64_t v6 = self;
    id v7 = [v6 mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v61 = v10;
    uint64_t v12 = v11;

    id v13 = [v6 mainBundle];
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v13 localizedStringForKey:v14 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1007509E0;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_1000AA64C();
    *(void *)(v16 + 32) = v10;
    *(void *)(v16 + 40) = v12;
    uint64_t v59 = v12;
    swift_bridgeObjectRetain();
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    id v60 = (id)sub_1000AFA94((uint64_t *)&unk_10095BF70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10074E640;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v18 = sub_10007E2D8(0, (unint64_t *)&qword_1009587A0);
    uint64_t v57 = v18;
    *(void *)(inited + 40) = v5;
    *(void *)(inited + 64) = v18;
    *(void *)(inited + 72) = NSForegroundColorAttributeName;
    uint64_t v58 = sub_10007E2D8(0, (unint64_t *)&qword_10095BF80);
    *(void *)(inited + 104) = v58;
    id v19 = v62;
    *(void *)(inited + 80) = v62;
    unint64_t v56 = NSFontAttributeName;
    id v20 = v5;
    uint64_t v54 = NSForegroundColorAttributeName;
    id v53 = v19;
    sub_1000DFC2C(inited);
    id v21 = objc_allocWithZone((Class)NSMutableAttributedString);
    swift_bridgeObjectRetain();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    uint64_t v55 = v23;
    sub_1006307E8((unint64_t *)&qword_10094B9A0, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v62 = [v21 initWithString:v22 attributes:isa];

    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = [v25 rangeOfString:v26];
    uint64_t v51 = v28;
    id v52 = v27;

    uint64_t v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_100752410;
    id v31 = v56;
    uint64_t v30 = v57;
    *(void *)(v29 + 32) = v56;
    *(void *)(v29 + 40) = v20;
    uint64_t v32 = v20;
    uint64_t v33 = v53;
    uint64_t v34 = v54;
    *(void *)(v29 + 64) = v30;
    *(void *)(v29 + 72) = v34;
    *(void *)(v29 + 80) = v33;
    *(void *)(v29 + 104) = v58;
    *(void *)(v29 + 112) = NSUnderlineStyleAttributeName;
    *(void *)(v29 + 144) = &type metadata for Int;
    *(void *)(v29 + 120) = 1;
    id v60 = v32;
    id v35 = v33;
    uint64_t v36 = v31;
    uint64_t v37 = v34;
    uint64_t v38 = NSUnderlineStyleAttributeName;
    sub_1000DFC2C(v29);
    id v39 = objc_allocWithZone((Class)NSAttributedString);
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v41 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v42 = [v39 initWithString:v40 attributes:v41];

    id v43 = v62;
    [v62 replaceCharactersInRange:v52 withAttributedString:v51];
    uint64_t v44 = static VerticalAlignment.center.getter();
    uint64_t v45 = (uint64_t)v64;
    uint64_t *v64 = v44;
    *(void *)(v45 + 8) = 0;
    *(unsigned char *)(v45 + 16) = 1;
    uint64_t v46 = sub_1000AFA94(&qword_100966018);
    uint64_t v47 = v43;
    sub_10062E440(v43, v63, v45 + *(int *)(v46 + 44));
    LOBYTE(v43) = static Edge.Set.all.getter();
    uint64_t v48 = v65;
    sub_1000AEF2C(v45, v65, &qword_100966010);

    uint64_t v49 = v48 + *(int *)(sub_1000AFA94(&qword_100965F30) + 36);
    *(unsigned char *)uint64_t v49 = (_BYTE)v43;
    *(_OWORD *)(v49 + 8) = xmmword_100755AF0;
    *(_OWORD *)(v49 + 24) = xmmword_100755AF0;
    *(unsigned char *)(v49 + 40) = 0;
    sub_10008DB18(v45, &qword_100966010);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10062DD84(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_10062DE1C, v4, v3);
}

uint64_t sub_10062DE1C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for WorkoutChartGroupView();
  uint64_t v3 = *(void *)(v1 + *(int *)(v2 + 24) + 8);
  swift_retain();
  GeometryProxy.size.getter();
  uint64_t v5 = v3 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth;
  *(double *)uint64_t v5 = v4 + -32.0;
  *(unsigned char *)(v5 + 8) = 0;
  swift_release();
  *(void *)(v0 + 56) = *(void *)(v1 + *(int *)(v2 + 28) + 8);
  swift_retain();
  return _swift_task_switch(sub_10062DEF0, 0, 0);
}

uint64_t sub_10062DEF0()
{
  sub_1005D01EC();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_10062DFC4;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10062DFC4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10062E0C0, 0, 0);
}

uint64_t sub_10062E0C0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_1000E4598, v1, v2);
}

uint64_t sub_10062E124()
{
  return swift_release();
}

id sub_10062E1C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for WorkoutChartGroupView() + 28) + 8);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workoutActivity);
  if (v2)
  {
    swift_retain();
    id v3 = [v2 fiui_activityType];
LABEL_4:
    swift_beginAccess();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_10065CBC0(v6, v3);
    swift_bridgeObjectRelease();
    type metadata accessor for WorkoutChartDataStore();
    sub_1006307E8(&qword_100965FA0, (void (*)(uint64_t))type metadata accessor for WorkoutChartDataStore);
    ObservableObject<>.objectWillChange.getter();
    ObservableObjectPublisher.send()();
    swift_release();

    return (id)swift_release();
  }
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC10FitnessApp21WorkoutChartDataStore_workout);
  swift_retain();
  id result = [v4 fiui_activityType];
  id v3 = result;
  if (result) {
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_10062E320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WorkoutChartableMetricsView();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(a1 + *(int *)(type metadata accessor for WorkoutChartGroupView() + 28) + 8);
  *uint64_t v7 = swift_getKeyPath();
  sub_1000AFA94(&qword_10094DFC8);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v7 + *(int *)(v5 + 28)) = v8;
  sub_100630780((uint64_t)v7, a2, (uint64_t (*)(void))type metadata accessor for WorkoutChartableMetricsView);
  return swift_retain();
}

uint64_t sub_10062E408@<X0>(uint64_t a1@<X8>)
{
  return sub_100553B40(a1);
}

uint64_t sub_10062E440@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v5 = type metadata accessor for WorkoutChartGroupView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = type metadata accessor for AttributedString();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000AFA94(&qword_100966020);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v27 - v14;
  id v16 = a1;
  AttributedString.init(_:)();
  uint64_t v29 = Text.init(_:)();
  uint64_t v30 = v17;
  char v31 = v18 & 1;
  uint64_t v32 = v19;
  sub_100630830(v28, (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = swift_allocObject();
  sub_100630780((uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_1000A06C0(v29, v30, v31);
  swift_bridgeObjectRelease();
  NSString v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v22(v12, v15, v9);
  *(void *)a3 = 0;
  *(unsigned char *)(a3 + 8) = 1;
  uint64_t v23 = sub_1000AFA94(&qword_100966028);
  v22((char *)(a3 + *(int *)(v23 + 48)), v12, v9);
  uint64_t v24 = a3 + *(int *)(v23 + 64);
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  NSString v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25(v15, v9);
  return ((uint64_t (*)(char *, uint64_t))v25)(v12, v9);
}

uint64_t sub_10062E750()
{
  type metadata accessor for WorkoutChartGroupView();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1006B52B8();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10062E7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutChartGroupView();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LayoutDirection();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = a2 + *(int *)(v4 + 24);
  uint64_t v15 = *(void *)(v14 + 8) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth;
  if ((*(unsigned char *)(v15 + 8) & 1) == 0)
  {
    double v16 = *(double *)v15;
    uint64_t v28 = a1;
    sub_1004E7AB8((uint64_t)&v28 - v12);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LayoutDirection.leftToRight(_:), v7);
    char v17 = static LayoutDirection.== infix(_:_:)();
    char v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18(v10, v7);
    v18(v13, v7);
    DragGesture.Value.location.getter();
    if (v17) {
      double v20 = v19;
    }
    else {
      double v20 = v16 - v19;
    }
    uint64_t v21 = *(void *)(v14 + 8);
    double v22 = *(double *)(v21 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_workoutDuration);
    double v23 = *(double *)(v21 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_onScreenBuckets)
        * *(double *)(v21 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_bucketDuration);
    sub_100630830(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
    if (v22 < v23 || v22 - v23 < 0.01)
    {
      sub_100630898((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
    }
    else
    {
      uint64_t v24 = &v6[*(int *)(v4 + 32)];
      char v25 = *v24;
      uint64_t v26 = *((void *)v24 + 1);
      LOBYTE(v29) = v25;
      uint64_t v30 = v26;
      sub_1000AFA94(&qword_10094DEE0);
      State.wrappedValue.getter();
      int v27 = v31;
      sub_100630898((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
      if (v27 != 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        double v29 = 0.0;
        LOBYTE(v30) = 1;
        swift_retain_n();
        static Published.subscript.setter();
        sub_1003396D8();
        swift_release();
        swift_retain();
        sub_10033A2C8(*(uint64_t *)&v20, 0);
LABEL_11:
        swift_release();
        return;
      }
    }
    swift_getKeyPath();
    swift_getKeyPath();
    double v29 = v20;
    LOBYTE(v30) = 0;
    swift_retain_n();
    static Published.subscript.setter();
    sub_1003396D8();
    goto LABEL_11;
  }
}

uint64_t sub_10062EB68()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10062EC04(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = a1;
  uint64_t v57 = sub_1000AFA94(&qword_100957BC0);
  __chkstk_darwin(v57);
  uint64_t v58 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v4 - 8);
  uint64_t v56 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v59 = (uint64_t)&v51 - v7;
  __chkstk_darwin(v8);
  uint64_t v60 = (uint64_t)&v51 - v9;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v55 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v18 = (char *)&v51 - v17;
  uint64_t v19 = type metadata accessor for LayoutDirection();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  double v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  char v25 = (char *)&v51 - v24;
  uint64_t result = type metadata accessor for WorkoutChartGroupView();
  uint64_t v27 = a2 + *(int *)(result + 24);
  uint64_t v28 = *(void *)(v27 + 8) + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_viewWidth;
  if ((*(unsigned char *)(v28 + 8) & 1) == 0)
  {
    uint64_t v54 = v18;
    double v29 = *(double *)v28;
    sub_1004E7AB8((uint64_t)v25);
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for LayoutDirection.leftToRight(_:), v19);
    char v30 = static LayoutDirection.== infix(_:_:)();
    unsigned __int8 v31 = *(void (**)(char *, uint64_t))(v20 + 8);
    v31(v22, v19);
    v31(v25, v19);
    SpatialTapGesture.Value.location.getter();
    if ((v30 & 1) == 0) {
      double v32 = v29 - v32;
    }
    uint64_t v33 = *(void *)(v27 + 8);
    double v34 = v32;
    swift_retain();
    sub_100339B2C(0, (uint64_t)v12);
    swift_release();
    id v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v35(v12, 1, v13) == 1) {
      return sub_10008DB18((uint64_t)v12, (uint64_t *)&unk_10095B890);
    }
    uint64_t v36 = v54;
    id v52 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    double v53 = v34;
    v52(v54, v12, v13);
    uint64_t v37 = v33 + OBJC_IVAR____TtC10FitnessApp22WorkoutChartProperties_selectedDate;
    swift_beginAccess();
    uint64_t v38 = v60;
    sub_1000AEF2C(v37, v60, (uint64_t *)&unk_10095B890);
    uint64_t v39 = v59;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v59, v36, v13);
    uint64_t v61 = v14;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v39, 0, 1, v13);
    uint64_t v40 = v58;
    uint64_t v41 = v58 + *(int *)(v57 + 48);
    sub_1000AEF2C(v38, v58, (uint64_t *)&unk_10095B890);
    sub_1000AEF2C(v39, v41, (uint64_t *)&unk_10095B890);
    if (v35((char *)v40, 1, v13) == 1)
    {
      swift_retain();
      sub_10008DB18(v39, (uint64_t *)&unk_10095B890);
      sub_10008DB18(v38, (uint64_t *)&unk_10095B890);
      unsigned int v42 = v35((char *)v41, 1, v13);
      uint64_t v43 = v61;
      if (v42 == 1)
      {
        sub_10008DB18(v40, (uint64_t *)&unk_10095B890);
LABEL_13:
        double v49 = 0.0;
        char v50 = 1;
LABEL_15:
        swift_getKeyPath();
        swift_getKeyPath();
        double v62 = v49;
        char v63 = v50;
        swift_retain();
        static Published.subscript.setter();
        sub_1003396D8();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v54, v13);
      }
    }
    else
    {
      uint64_t v44 = v56;
      sub_1000AEF2C(v40, v56, (uint64_t *)&unk_10095B890);
      if (v35((char *)v41, 1, v13) != 1)
      {
        uint64_t v45 = v55;
        v52(v55, (char *)v41, v13);
        sub_1006307E8((unint64_t *)&qword_100951FE0, (void (*)(uint64_t))&type metadata accessor for Date);
        swift_retain();
        char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v43 = v61;
        uint64_t v47 = v44;
        uint64_t v48 = *(void (**)(char *, uint64_t))(v61 + 8);
        v48(v45, v13);
        sub_10008DB18(v59, (uint64_t *)&unk_10095B890);
        sub_10008DB18(v60, (uint64_t *)&unk_10095B890);
        v48((char *)v47, v13);
        sub_10008DB18(v40, (uint64_t *)&unk_10095B890);
        if (v46) {
          goto LABEL_13;
        }
LABEL_14:
        char v50 = 0;
        double v49 = v53;
        goto LABEL_15;
      }
      swift_retain();
      sub_10008DB18(v59, (uint64_t *)&unk_10095B890);
      sub_10008DB18(v60, (uint64_t *)&unk_10095B890);
      uint64_t v43 = v61;
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v44, v13);
    }
    sub_10008DB18(v40, &qword_100957BC0);
    goto LABEL_14;
  }
  return result;
}

id sub_10062F308(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for WorkoutChartGroupView();
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.setter();
  return [*(id *)(a2 + *(int *)(v3 + 20)) selectionChanged];
}

uint64_t sub_10062F394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_10062F42C, v6, v5);
}

uint64_t sub_10062F42C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 48) = *(void *)(v1 + *(int *)(type metadata accessor for WorkoutChartGroupView() + 28) + 8);
  swift_retain();
  return _swift_task_switch(sub_10062F4B0, 0, 0);
}

uint64_t sub_10062F4B0()
{
  sub_1005D01EC();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_10062F584;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10062F584()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10062F680, 0, 0);
}

uint64_t sub_10062F680()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  return _swift_task_switch(sub_1000E837C, v1, v2);
}

uint64_t sub_10062F6E4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_100630830(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_100630780((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for WorkoutChartGroupView);
  *a2 = sub_10062F7FC;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_10062F7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for WorkoutChartGroupView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100629F3C(a1, v6, a2);
}

uint64_t sub_10062F87C@<X0>(uint64_t a1@<X8>)
{
  return sub_10062A338(*(void *)(v1 + 16), a1);
}

unint64_t sub_10062F884()
{
  unint64_t result = qword_100965E60;
  if (!qword_100965E60)
  {
    sub_1000A1370(&qword_100965E58);
    sub_1000A132C(&qword_100965E68, &qword_100965E70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965E60);
  }
  return result;
}

uint64_t sub_10062F924()
{
  uint64_t v1 = type metadata accessor for WorkoutChartGroupView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = type metadata accessor for GeometryProxy();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  sub_1000AFA94(&qword_100968CD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v2, v7);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t sub_10062FB10()
{
  uint64_t v2 = *(void *)(type metadata accessor for WorkoutChartGroupView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for GeometryProxy() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = v0 + (v6 & ~v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_1000DBD6C;
  return sub_10062DD84(v7, v8);
}

uint64_t sub_10062FC44(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_1000DBD6C;
  return sub_1005D0A88(a1, a2, v2);
}

uint64_t sub_10062FCF0@<X0>(char *a1@<X8>)
{
  return sub_10062A578(*(void *)(v1 + 16), a1);
}

uint64_t sub_10062FCFC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for WorkoutChartGroupView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10062AF40(a1, v6, a2);
}

unint64_t sub_10062FD7C()
{
  unint64_t result = qword_100965EE8;
  if (!qword_100965EE8)
  {
    sub_1000A1370(&qword_100965EE0);
    sub_1000A132C(&qword_100965EF0, &qword_100965EF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965EE8);
  }
  return result;
}

uint64_t sub_10062FE14(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10062FE80()
{
  return sub_10062FE14(&qword_100965F08, &qword_100965F10, (void (*)(void))sub_10062FD7C);
}

uint64_t sub_10062FEBC@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10062FF44()
{
  return sub_1003396D8();
}

uint64_t sub_10062FFCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10062FFF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100630024()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100630050()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_10063007C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006300A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006300D4()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_100630100()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_100630130()
{
  return sub_1006305B0((uint64_t (*)(uint64_t))sub_10062E124);
}

unint64_t sub_100630148()
{
  unint64_t result = qword_100965F78;
  if (!qword_100965F78)
  {
    sub_1000A1370(&qword_100965F60);
    sub_1006301E8();
    sub_1000A132C(&qword_100965F90, &qword_100965F70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965F78);
  }
  return result;
}

unint64_t sub_1006301E8()
{
  unint64_t result = qword_100965F80;
  if (!qword_100965F80)
  {
    sub_1000A1370(&qword_100965F58);
    sub_100630264();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965F80);
  }
  return result;
}

unint64_t sub_100630264()
{
  unint64_t result = qword_100965F88;
  if (!qword_100965F88)
  {
    sub_1000A1370(&qword_100965F50);
    sub_1000A1370(&qword_100965F40);
    sub_1000A1370(&qword_100961C28);
    sub_10063042C((unint64_t *)&qword_100961C30, &qword_100961C28, (void (*)(void))sub_100555A1C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100965F88);
  }
  return result;
}

uint64_t sub_10063039C()
{
  return sub_1006305B0((uint64_t (*)(uint64_t))sub_10062E1C8);
}

uint64_t sub_1006303B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for WorkoutChartGroupView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10062E320(v4, a1);
}

uint64_t sub_10063042C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006304D0()
{
  unint64_t result = qword_100966000;
  if (!qword_100966000)
  {
    sub_1000A1370(&qword_100965FB0);
    sub_1000A132C(&qword_100966008, &qword_100965FA8);
    sub_1000A132C(&qword_10094C7A0, &qword_10094C7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966000);
  }
  return result;
}

uint64_t sub_100630598()
{
  return sub_1006305B0((uint64_t (*)(uint64_t))sub_10062E750);
}

uint64_t sub_1006305B0(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for WorkoutChartGroupView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100630628(uint64_t a1)
{
  return sub_100630678(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10062E7C4);
}

uint64_t sub_100630644(uint64_t a1)
{
  return sub_100630678(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10062EB68);
}

uint64_t sub_100630660(uint64_t a1)
{
  return sub_100630678(a1, sub_10062EC04);
}

uint64_t sub_100630678(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for WorkoutChartGroupView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

id sub_100630700(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for WorkoutChartGroupView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10062F308(a1, v4);
}

uint64_t sub_100630780(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006307E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100630830(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100630898(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006308F8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10005DB5C;
  return sub_1005D0A88(a1, a2, v2);
}

uint64_t sub_1006309A4()
{
  return sub_1000A132C(&qword_100966050, &qword_100966058);
}

unint64_t sub_1006309E4()
{
  unint64_t result = qword_100966060;
  if (!qword_100966060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966060);
  }
  return result;
}

unint64_t sub_100630A3C()
{
  unint64_t result = qword_100966068[0];
  if (!qword_100966068[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100966068);
  }
  return result;
}

uint64_t sub_100630A90(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1009660C0 + dword_1009660C0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024C1D0;
  return v5(a1);
}

uint64_t sub_100630B38(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1009660B8 + dword_1009660B8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10024D1DC;
  return v4();
}

unint64_t sub_100630BE0()
{
  unint64_t result = qword_100966080;
  if (!qword_100966080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966080);
  }
  return result;
}

unint64_t sub_100630C38()
{
  unint64_t result = qword_100966088;
  if (!qword_100966088)
  {
    sub_1000A1370(qword_100966090);
    sub_1003D0224();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966088);
  }
  return result;
}

uint64_t sub_100630CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10051ED64();
  *uint64_t v5 = v2;
  v5[1] = sub_10005DB5C;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100630D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1009660B0 + dword_1009660B0);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_1001A0E60;
  return v8(a2, a3);
}

ValueMetadata *type metadata accessor for SummaryCardEntityQuery()
{
  return &type metadata for SummaryCardEntityQuery;
}

void *sub_100630E28(uint64_t a1)
{
  unint64_t v1 = 0;
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v19 = _swiftEmptyArrayStorage;
  uint64_t v20 = a1 + 32;
LABEL_2:
  if (v1 <= v2) {
    unint64_t v3 = v2;
  }
  else {
    unint64_t v3 = v1;
  }
  while (v2 != v1)
  {
    if (v3 == v1)
    {
      __break(1u);
      JUMPOUT(0x100631238);
    }
    uint64_t v12 = *(unsigned __int8 *)(v20 + v1);
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    unint64_t v5 = 0xE500000000000000;
    uint64_t v6 = 0x53474E4952;
    switch(v12)
    {
      case 1:
        unint64_t v5 = 0xED00005343495254;
        uint64_t v6 = 0x454D5F5350455453;
        break;
      case 2:
        uint64_t v13 = 0x534548535550;
        goto LABEL_25;
      case 3:
        unint64_t v5 = 0xE700000000000000;
        uint64_t v6 = 0x59524F54534948;
        break;
      case 4:
        unint64_t v5 = 0xE400000000000000;
        uint64_t v6 = 1397770580;
        break;
      case 5:
        unint64_t v5 = 0xEB0000000053554CLL;
        uint64_t v6 = 0x505353454E544946;
        break;
      case 6:
        unint64_t v5 = 0xE400000000000000;
        uint64_t v6 = 1145130828;
        break;
      case 7:
        unint64_t v5 = 0xE600000000000000;
        uint64_t v6 = 0x53444E455254;
        break;
      case 8:
        unint64_t v5 = 0xE700000000000000;
        uint64_t v6 = 0x53444E45495246;
        break;
      case 9:
        unint64_t v5 = 0xE600000000000000;
        uint64_t v6 = 0x534452415741;
        break;
      case 10:
        uint64_t v4 = "activity.rings.open";
        goto LABEL_6;
      case 11:
        uint64_t v4 = "WHEELCHAIR_RUNNING_PACE_METRICS";
LABEL_6:
        unint64_t v5 = (unint64_t)v4 | 0x8000000000000000;
        uint64_t v6 = 0xD00000000000001FLL;
        break;
      case 12:
        unsigned int v14 = 1313756498;
        goto LABEL_27;
      case 13:
        unsigned int v14 = 1279482179;
        goto LABEL_27;
      case 14:
        uint64_t v6 = 0xD000000000000010;
        unint64_t v5 = 0x80000001007B78C0;
        break;
      case 15:
        uint64_t v13 = 0x474E494B4948;
LABEL_25:
        uint64_t v6 = v13 & 0xFFFFFFFFFFFFLL | 0x4D5F000000000000;
        unint64_t v5 = 0xEE00534349525445;
        break;
      case 16:
        unsigned int v14 = 1263288663;
LABEL_27:
        uint64_t v6 = v14 | 0x5F474E4900000000;
        goto LABEL_29;
      case 17:
        uint64_t v6 = 0x5F4C5546444E494DLL;
LABEL_29:
        unint64_t v5 = 0xEF5343495254454DLL;
        break;
      default:
        break;
    }
    unint64_t v7 = v5;
    String.append(_:)(*(Swift::String *)&v6);
    swift_bridgeObjectRelease();
    v8._countAndFlagsBits = 0x454D414E5FLL;
    v8._object = (void *)0xE500000000000000;
    String.append(_:)(v8);
    id v9 = [self mainBundle];
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    sub_1000A06D0();
    LOBYTE(v1sub_10033A2C8(0, 1) = StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
    swift_bridgeObjectRelease();
    ++v1;
    if (v11)
    {
      uint64_t v15 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001C8FC4(0, v19[2] + 1, 1);
        uint64_t v15 = v19;
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1)
      {
        sub_1001C8FC4(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v19;
      }
      id v15[2] = v17 + 1;
      uint64_t v19 = v15;
      *((unsigned char *)v15 + v17 + 32) = v12;
      goto LABEL_2;
    }
  }
  return v19;
}

uint64_t sub_100631280(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1006312A0, 0, 0);
}

uint64_t sub_1006312A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = (unint64_t *)(v1 + 32);
    swift_bridgeObjectRetain();
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v6 = *v3++;
      char v5 = v6;
      if (v6 <= 0x11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1001E8988(0, v4[2] + 1, 1, v4);
        }
        unint64_t v8 = v4[2];
        unint64_t v7 = v4[3];
        if (v8 >= v7 >> 1) {
          uint64_t v4 = sub_1001E8988((void *)(v7 > 1), v8 + 1, 1, v4);
        }
        _OWORD v4[2] = v8 + 1;
        *((unsigned char *)v4 + v8 + 32) = v5;
      }
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  id v9 = *(uint64_t (**)(void *))(v0 + 8);
  return v9(v4);
}

uint64_t sub_1006313C0()
{
  return _swift_task_switch(sub_1006313DC, 0, 0);
}

uint64_t sub_1006313DC()
{
  uint64_t v1 = 18;
  sub_1001C9688(0, 18, 0);
  uint64_t v2 = _swiftEmptyArrayStorage;
  unint64_t v3 = _swiftEmptyArrayStorage[2];
  uint64_t v4 = &byte_1008B2FF8;
  do
  {
    char v6 = *v4++;
    char v5 = v6;
    NSString v10 = v2;
    unint64_t v7 = v2[3];
    if (v3 >= v7 >> 1)
    {
      sub_1001C9688(v7 > 1, v3 + 1, 1);
      uint64_t v2 = v10;
    }
    v2[2] = v3 + 1;
    *((unsigned char *)v2 + v3++ + 32) = v5;
    --v1;
  }
  while (v1);
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1006314E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return _swift_task_switch(sub_100631500, 0, 0);
}

uint64_t sub_100631500()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_100630E28((uint64_t)&off_1008B2FD8);
  swift_bridgeObjectRelease();
  uint64_t v31 = v1[2];
  if (v31)
  {
    swift_bridgeObjectRetain();
    id v30 = self;
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *((unsigned __int8 *)v1 + v2++ + 32);
      _StringGuts.grow(_:)(19);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xE500000000000000;
      uint64_t v5 = 0x53474E4952;
      char v6 = v1;
      char v29 = v3;
      switch(v3)
      {
        case 1:
          unint64_t v4 = 0xED00005343495254;
          uint64_t v5 = 0x454D5F5350455453;
          break;
        case 2:
          uint64_t v7 = 0x534548535550;
          goto LABEL_20;
        case 3:
          unint64_t v4 = 0xE700000000000000;
          uint64_t v5 = 0x59524F54534948;
          break;
        case 4:
          unint64_t v4 = 0xE400000000000000;
          uint64_t v5 = 1397770580;
          break;
        case 5:
          unint64_t v4 = 0xEB0000000053554CLL;
          uint64_t v5 = 0x505353454E544946;
          break;
        case 6:
          unint64_t v4 = 0xE400000000000000;
          uint64_t v5 = 1145130828;
          break;
        case 7:
          unint64_t v4 = 0xE600000000000000;
          uint64_t v5 = 0x53444E455254;
          break;
        case 8:
          unint64_t v4 = 0xE700000000000000;
          uint64_t v5 = 0x53444E45495246;
          break;
        case 9:
          unint64_t v4 = 0xE600000000000000;
          uint64_t v5 = 0x534452415741;
          break;
        case 10:
          unint64_t v8 = "activity.rings.open";
          goto LABEL_15;
        case 11:
          unint64_t v8 = "WHEELCHAIR_RUNNING_PACE_METRICS";
LABEL_15:
          unint64_t v4 = (unint64_t)v8 | 0x8000000000000000;
          uint64_t v5 = 0xD00000000000001FLL;
          break;
        case 12:
          unsigned int v9 = 1313756498;
          goto LABEL_22;
        case 13:
          unsigned int v9 = 1279482179;
          goto LABEL_22;
        case 14:
          uint64_t v5 = 0xD000000000000010;
          unint64_t v4 = 0x80000001007B78C0;
          break;
        case 15:
          uint64_t v7 = 0x474E494B4948;
LABEL_20:
          uint64_t v5 = v7 & 0xFFFFFFFFFFFFLL | 0x4D5F000000000000;
          unint64_t v4 = 0xEE00534349525445;
          break;
        case 16:
          unsigned int v9 = 1263288663;
LABEL_22:
          uint64_t v5 = v9 | 0x5F474E4900000000;
          goto LABEL_24;
        case 17:
          uint64_t v5 = 0x5F4C5546444E494DLL;
LABEL_24:
          unint64_t v4 = 0xEF5343495254454DLL;
          break;
        default:
          break;
      }
      uint64_t v10 = v0[6];
      uint64_t v11 = v0[7];
      unint64_t v12 = v4;
      String.append(_:)(*(Swift::String *)&v5);
      swift_bridgeObjectRelease();
      v13._countAndFlagsBits = 0x454D414E5FLL;
      v13._object = (void *)0xE500000000000000;
      String.append(_:)(v13);
      id v14 = [v30 mainBundle];
      NSString v15 = String._bridgeToObjectiveC()();
      id v16 = [v14 localizedStringForKey:v15 value:0 table:0];

      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      swift_bridgeObjectRelease();
      v0[2] = v17;
      v0[3] = v19;
      v0[4] = v10;
      v0[5] = v11;
      sub_1000A06D0();
      uint64_t v20 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
      swift_bridgeObjectRelease();
      if (!v20)
      {
        swift_bridgeObjectRelease_n();
        sub_1000AFA94(&qword_10094E8F8);
        uint64_t v23 = (void *)swift_allocObject();
        *((_OWORD *)v23 + sub_10033A2C8(0, 1) = xmmword_1007509E0;
        *((unsigned char *)v23 + 32) = v29;
        goto LABEL_35;
      }
      uint64_t v1 = v6;
    }
    while (v31 != v2);
    swift_bridgeObjectRelease();
    int64_t v21 = v6[2];
    if (!v21) {
      goto LABEL_33;
    }
    sub_1001C9688(0, v21, 0);
    uint64_t v22 = 0;
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t v24 = _swiftEmptyArrayStorage[2];
    do
    {
      char v25 = *((unsigned char *)v1 + v22 + 32);
      unint64_t v26 = _swiftEmptyArrayStorage[3];
      if (v24 + v22 >= v26 >> 1) {
        sub_1001C9688(v26 > 1, v24 + v22 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v24 + v22 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v24 + v22++) = v25;
    }
    while (v21 != v22);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_33:
    swift_bridgeObjectRelease();
    uint64_t v23 = _swiftEmptyArrayStorage;
  }
LABEL_35:
  uint64_t v27 = (uint64_t (*)(void *))v0[1];
  return v27(v23);
}

uint64_t sub_100631A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v90 = a1;
  uint64_t v80 = type metadata accessor for PlainButtonStyle();
  uint64_t v81 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v79 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for ButtonMenuStyle();
  uint64_t v74 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_1009660D8);
  uint64_t v71 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000AFA94(&qword_1009660E0);
  uint64_t v78 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v69 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000AFA94(&qword_1009660E8);
  uint64_t v75 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000AFA94(&qword_1009660F0);
  __chkstk_darwin(v72);
  uint64_t v70 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000AFA94(&qword_1009660F8);
  uint64_t v84 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v91 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94(&qword_100966100);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v86 = v14;
  uint64_t v87 = v15;
  __chkstk_darwin(v14);
  uint64_t v82 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AFA94(&qword_100966108);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v88 = v17;
  uint64_t v89 = v18;
  __chkstk_darwin(v17);
  uint64_t v85 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  long long v21 = *(_OWORD *)(v2 + 48);
  v20[3] = *(_OWORD *)(v2 + 32);
  void v20[4] = v21;
  long long v22 = *(_OWORD *)(v2 + 80);
  v20[5] = *(_OWORD *)(v2 + 64);
  v20[6] = v22;
  long long v23 = *(_OWORD *)(v2 + 16);
  v20[1] = *(_OWORD *)v2;
  v20[2] = v23;
  uint64_t v92 = v2;
  sub_10063453C(v2);
  sub_1000AFA94(&qword_100966110);
  sub_1000AFA94(&qword_100966118);
  sub_1006345C4();
  sub_1000A132C(&qword_100966140, &qword_100966118);
  Menu.init(onPresentationChanged:content:label:)();
  ButtonMenuStyle.init()();
  uint64_t v24 = sub_1000A132C(&qword_100966148, &qword_1009660D8);
  uint64_t v25 = sub_1006349E4(&qword_100966150, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
  unint64_t v26 = v69;
  uint64_t v27 = v73;
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v5, v27);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v8, v6);
  uint64_t v28 = v79;
  PlainButtonStyle.init()();
  *(void *)&long long v93 = v6;
  *((void *)&v93 + sub_10033A2C8(0, 1) = v27;
  *(void *)&unsigned long long v94 = v24;
  *((void *)&v94 + sub_10033A2C8(0, 1) = v25;
  swift_getOpaqueTypeConformance2();
  sub_1006349E4(&qword_100961858, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v29 = v76;
  uint64_t v30 = v80;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v28, v30);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v26, v29);
  uint64_t v31 = v75;
  uint64_t v32 = (uint64_t)v70;
  uint64_t v33 = v77;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v70, v11, v77);
  uint64_t v34 = v72;
  *(unsigned char *)(v32 + *(int *)(v72 + 36)) = 0;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v33);
  long long v97 = *(_OWORD *)(v2 + 56);
  uint64_t v98 = *(void *)(v2 + 72);
  uint64_t v81 = sub_1000AFA94(&qword_100966158);
  State.projectedValue.getter();
  id v35 = (_OWORD *)swift_allocObject();
  long long v36 = *(_OWORD *)(v2 + 48);
  v35[3] = *(_OWORD *)(v2 + 32);
  v35[4] = v36;
  long long v37 = *(_OWORD *)(v2 + 80);
  v35[5] = *(_OWORD *)(v2 + 64);
  v35[6] = v37;
  long long v38 = *(_OWORD *)(v2 + 16);
  v35[1] = *(_OWORD *)v2;
  void v35[2] = v38;
  sub_10063453C(v2);
  uint64_t v39 = type metadata accessor for ActivitySharingReplyMessageComposerView();
  unint64_t v40 = sub_1006347B8();
  unint64_t v41 = sub_100634984();
  uint64_t v42 = sub_1006349E4(&qword_10094F6E0, (void (*)(uint64_t))type metadata accessor for ActivitySharingReplyMessageComposerView);
  View.sheet<A, B>(item:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10008DB18(v32, &qword_1009660F0);
  long long v97 = *(_OWORD *)(v2 + 40);
  sub_1000AFA94(&qword_10094DEE0);
  State.projectedValue.getter();
  LODWORD(v80) = v94;
  uint64_t v43 = (_OWORD *)swift_allocObject();
  long long v44 = *(_OWORD *)(v2 + 48);
  v43[3] = *(_OWORD *)(v2 + 32);
  v43[4] = v44;
  long long v45 = *(_OWORD *)(v2 + 80);
  v43[5] = *(_OWORD *)(v2 + 64);
  v43[6] = v45;
  long long v46 = *(_OWORD *)(v2 + 16);
  v43[1] = *(_OWORD *)v2;
  void v43[2] = v46;
  sub_10063453C(v2);
  uint64_t v47 = sub_1000AFA94(&qword_100966180);
  *(void *)&long long v93 = v34;
  *((void *)&v93 + sub_10033A2C8(0, 1) = &type metadata for ActivitySharingIdentifiableReply;
  *(void *)&unsigned long long v94 = v39;
  *((void *)&v94 + sub_10033A2C8(0, 1) = v40;
  unint64_t v95 = v41;
  uint64_t v96 = v42;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v49 = type metadata accessor for ActivitySharingReplyEditView(255);
  uint64_t v50 = type metadata accessor for Material();
  uint64_t v51 = sub_1006349E4(&qword_100966188, (void (*)(uint64_t))type metadata accessor for ActivitySharingReplyEditView);
  *(void *)&long long v93 = v49;
  *((void *)&v93 + sub_10033A2C8(0, 1) = v50;
  *(void *)&unsigned long long v94 = v51;
  *((void *)&v94 + sub_10033A2C8(0, 1) = &protocol witness table for Material;
  uint64_t v67 = swift_getOpaqueTypeConformance2();
  uint64_t v52 = v47;
  double v53 = v82;
  uint64_t v54 = v83;
  uint64_t v55 = v91;
  View.fullScreenCover<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v55, v54);
  long long v93 = *(_OWORD *)(v2 + 16);
  *(void *)&unsigned long long v94 = *(void *)(v2 + 32);
  State.wrappedValue.getter();
  uint64_t v56 = (_OWORD *)swift_allocObject();
  long long v57 = *(_OWORD *)(v2 + 48);
  v56[3] = *(_OWORD *)(v2 + 32);
  v56[4] = v57;
  long long v58 = *(_OWORD *)(v2 + 80);
  v56[5] = *(_OWORD *)(v2 + 64);
  v56[6] = v58;
  long long v59 = *(_OWORD *)(v2 + 16);
  v56[1] = *(_OWORD *)v2;
  v56[2] = v59;
  sub_10063453C(v2);
  uint64_t v60 = sub_1000AFA94(&qword_1009660C8);
  *(void *)&long long v93 = v54;
  *((void *)&v93 + sub_10033A2C8(0, 1) = v52;
  unsigned long long v94 = __PAIR128__(v67, OpaqueTypeConformance2);
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  unint64_t v62 = sub_100634A38();
  uint64_t v64 = v85;
  uint64_t v63 = v86;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v53, v63);
  *(void *)&long long v93 = v63;
  *((void *)&v93 + sub_10033A2C8(0, 1) = v60;
  *(void *)&unsigned long long v94 = v61;
  *((void *)&v94 + sub_10033A2C8(0, 1) = v62;
  swift_getOpaqueTypeConformance2();
  uint64_t v65 = v88;
  View.onTapGesture(count:perform:)();
  return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v64, v65);
}

uint64_t sub_1006326A0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = type metadata accessor for PlainButtonStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000AFA94(&qword_1009661A8);
  uint64_t v40 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  unint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000AFA94(&qword_1009661B0);
  uint64_t v46 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  id v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v36 = (char *)&v33 - v11;
  uint64_t v38 = sub_1000AFA94(&qword_1009661B8);
  uint64_t v34 = *(void *)(v38 - 8);
  uint64_t v12 = v34;
  __chkstk_darwin(v38);
  long long v45 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v44 = (char *)&v33 - v15;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v48 = a1;
  sub_1000AFA94(&qword_1009661C0);
  sub_100634C44();
  Section<>.init(_:content:)();
  uint64_t v47 = a1;
  sub_1000AFA94(&qword_1009661D0);
  sub_1000A132C(&qword_1009661D8, &qword_1009661D0);
  Section<>.init(content:)();
  PlainButtonStyle.init()();
  sub_100634CE4();
  sub_1006349E4(&qword_100961858, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v16 = v35;
  uint64_t v17 = v37;
  uint64_t v18 = v41;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v18);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v17);
  uint64_t v19 = v46;
  uint64_t v20 = v36;
  long long v21 = v16;
  long long v22 = v16;
  uint64_t v23 = v39;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v36, v21, v39);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v25 = v45;
  uint64_t v26 = v38;
  v24(v45, v44, v38);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v27(v22, v20, v23);
  uint64_t v28 = v43;
  v24(v43, v25, v26);
  uint64_t v29 = sub_1000AFA94(&qword_1009661E8);
  v27(&v28[*(int *)(v29 + 48)], v22, v23);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v46 + 8);
  v30(v20, v23);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v34 + 8);
  v31(v44, v26);
  v30(v22, v23);
  return ((uint64_t (*)(char *, uint64_t))v31)(v45, v26);
}

uint64_t sub_100632BC4(_OWORD *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = a1[3];
  v2[3] = a1[2];
  v2[4] = v3;
  long long v4 = a1[5];
  v2[5] = a1[4];
  v2[6] = v4;
  long long v5 = a1[1];
  v2[1] = *a1;
  v2[2] = v5;
  sub_10063453C((uint64_t)a1);
  sub_1000AFA94((uint64_t *)&unk_10094B1F0);
  sub_1000AFA94(&qword_10094E150);
  sub_1000A132C(&qword_1009661F0, (uint64_t *)&unk_10094B1F0);
  sub_1000A132C(&qword_10094E158, &qword_10094E150);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100632D54(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  long long v6 = a2[3];
  *(_OWORD *)(v5 + 48) = a2[2];
  *(_OWORD *)(v5 + 64) = v6;
  long long v7 = a2[5];
  *(_OWORD *)(v5 + 80) = a2[4];
  *(_OWORD *)(v5 + 96) = v7;
  long long v8 = a2[1];
  *(_OWORD *)(v5 + 16) = *a2;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 112) = v4;
  *(void *)(v5 + 120) = v3;
  swift_bridgeObjectRetain_n();
  sub_10063453C((uint64_t)a2);
  sub_1000A06D0();
  return Button<>.init<A>(_:action:)();
}

uint64_t sub_100632E14()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100632E70(_OWORD *a1)
{
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = a1[3];
  v2[3] = a1[2];
  v2[4] = v3;
  long long v4 = a1[5];
  v2[5] = a1[4];
  v2[6] = v4;
  long long v5 = a1[1];
  v2[1] = *a1;
  v2[2] = v5;
  sub_10063453C((uint64_t)a1);
  sub_1000AFA94(&qword_100961C50);
  sub_1000A132C(&qword_100961C48, &qword_100961C50);

  return Button.init(action:label:)();
}

__n128 sub_100632F58@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static VerticalAlignment.center.getter();
  sub_100632FC4((uint64_t)&v9);
  char v3 = v10;
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  char v6 = v13;
  uint64_t v7 = v14;
  __n128 result = v9;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  return result;
}

uint64_t sub_100632FC4@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = Image.init(systemName:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  sub_1000A1750(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1000A06C0(v2, v4, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006330B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_1009540A8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94(&qword_1009661A0);
  uint64_t v8 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  char v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_100966130);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  IconOnlyLabelStyle.init()();
  sub_1000A132C(&qword_1009540E0, &qword_1009540A8);
  sub_1006349E4(&qword_100966138, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = v22;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v22);
  uint64_t v18 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  *uint64_t v18 = KeyPath;
  v18[1] = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  LODWORD(v15) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v19 = v24;
  sub_1000AEF2C((uint64_t)v14, v24, &qword_100966130);
  *(_DWORD *)(v19 + *(int *)(sub_1000AFA94(&qword_100966110) + 36)) = v15;
  return sub_10008DB18((uint64_t)v14, &qword_100966130);
}

id sub_100633454@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ActivitySharingReplyMessageComposerView();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = *(void *)(a2 + 8);
  sub_10017C5DC(v15, v16, (uint64_t)v28 - v13);
  sub_1000AEF2C((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_10094B790);
  id result = [*(id *)(v17+ OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_activitySharingHighlight+ *(int *)(type metadata accessor for ActivitySharingHighlight() + 28)) contact];
  if (result)
  {
    uint64_t v19 = result;
    id v20 = [result primaryDestinationForMessaging];

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    v28[1] = *(_OWORD *)(a2 + 56);
    uint64_t v29 = *(void *)(a2 + 72);
    sub_1000AFA94(&qword_100966158);
    State.projectedValue.getter();
    v28[0] = v30;
    uint64_t v24 = v31;
    uint64_t v25 = v32;
    sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10094B790);
    sub_100634B68((uint64_t)v11, (uint64_t)v8);
    uint64_t v26 = (uint64_t *)&v8[*(int *)(v6 + 20)];
    *uint64_t v26 = v21;
    v26[1] = v23;
    uint64_t v27 = &v8[*(int *)(v6 + 24)];
    *(_OWORD *)uint64_t v27 = v28[0];
    *((void *)v27 + 2) = v24;
    *((void *)v27 + 3) = v25;
    return (id)sub_100634BD0((uint64_t)v8, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100633664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for Material();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  uint64_t v28 = v4;
  __chkstk_darwin(v3);
  uint64_t v26 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Reply();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = type metadata accessor for ActivitySharingReplyEditView(0);
  __chkstk_darwin(v25);
  uint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v30 = *(_OWORD *)(a1 + 40);
  sub_1000AFA94(&qword_10094DEE0);
  State.projectedValue.getter();
  uint64_t v14 = v32;
  uint64_t v24 = v33;
  int v23 = v34;
  long long v30 = *(_OWORD *)(a1 + 16);
  uint64_t v31 = *(void *)(a1 + 32);
  sub_1000AFA94(&qword_100966158);
  State.projectedValue.getter();
  uint64_t v16 = v32;
  uint64_t v15 = v33;
  uint64_t v17 = v34;
  uint64_t v18 = v35;
  sub_10017C5DC(0, 0xE000000000000000, (uint64_t)v11);
  sub_10017CFAC();
  sub_1002B1D50(v14, v24, v23, v16, v15, v17, v18, (uint64_t)v11, (uint64_t)v13, (uint64_t)v8);
  uint64_t v19 = v26;
  static Material.thin.getter();
  sub_1006349E4(&qword_100966188, (void (*)(uint64_t))type metadata accessor for ActivitySharingReplyEditView);
  uint64_t v20 = v27;
  View.presentationBackground<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v19, v20);
  return sub_100634B0C((uint64_t)v13);
}

void sub_100633934(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void (**)(id))(a3 + 80);
  if (v8)
  {
    uint64_t v9 = a2[1];
    if (v9)
    {
      uint64_t v10 = *a2;
      uint64_t v11 = *(void *)(a3 + 8);
      swift_retain();
      sub_10017C5DC(v10, v9, (uint64_t)v7);
      uint64_t v12 = (void (*)(uint64_t))swift_allocObject();
      long long v13 = *(_OWORD *)(a3 + 48);
      *((_OWORD *)v12 + 3) = *(_OWORD *)(a3 + 32);
      *((_OWORD *)v12 + 4) = v13;
      long long v14 = *(_OWORD *)(a3 + 80);
      *((_OWORD *)v12 + 5) = *(_OWORD *)(a3 + 64);
      *((_OWORD *)v12 + 6) = v14;
      long long v15 = *(_OWORD *)(a3 + 16);
      *((_OWORD *)v12 + sub_10033A2C8(0, 1) = *(_OWORD *)a3;
      *((_OWORD *)v12 + 2) = v15;
      uint64_t v16 = (objc_class *)type metadata accessor for ActivitySharingReplyCoordinator.MessageComposerDelegate();
      uint64_t v17 = (char *)objc_allocWithZone(v16);
      uint64_t v18 = (void (**)(uint64_t))&v17[OBJC_IVAR____TtCC10FitnessApp31ActivitySharingReplyCoordinator23MessageComposerDelegate_completion];
      *uint64_t v18 = sub_100634B04;
      v18[1] = v12;
      sub_10063453C(a3);
      v30.receiver = v17;
      v30.super_class = v16;
      id v19 = [super init];
      uint64_t v20 = *(void **)(v11 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_messageComposerDelegate);
      *(void *)(v11 + OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_messageComposerDelegate) = v19;
      id v21 = v19;

      id v22 = [*(id *)(v11+ OBJC_IVAR____TtC10FitnessApp31ActivitySharingReplyCoordinator_activitySharingHighlight+ *(int *)(type metadata accessor for ActivitySharingHighlight() + 28)) contact];
      if (v22)
      {
        int v23 = v22;
        id v24 = [v22 primaryDestinationForMessaging];

        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v27 = v26;

        id v28 = v21;
        id v29 = sub_100633C6C((uint64_t)v7, v25, v27, (uint64_t)v28);
        swift_bridgeObjectRelease();

        v8(v29);
        sub_10005E5F8((uint64_t)v8);

        sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_10094B790);
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    long long v31 = *(_OWORD *)(a3 + 16);
    uint64_t v32 = *(void *)(a3 + 32);
    sub_1000AFA94(&qword_100966158);
    State.wrappedValue.getter();
    long long v31 = *(_OWORD *)(a3 + 56);
    uint64_t v32 = *(void *)(a3 + 72);
    State.wrappedValue.setter();
  }
}

void sub_100633BB4(uint64_t a1)
{
  if (a1) {
    sub_10017D240();
  }
}

uint64_t sub_100633C24@<X0>(uint64_t a1@<X8>)
{
  return sub_100631A40(a1);
}

id sub_100633C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v13 = (char *)&v31 - v12;
  id v14 = [objc_allocWithZone((Class)MFMessageComposeViewController) init];
  [v14 _setCanEditRecipients:0];
  [v14 setMessageComposeDelegate:a4];
  sub_1000AFA94(&qword_10094D178);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1007509E0;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v14 setRecipients:isa];

  id v17 = [objc_allocWithZone((Class)MSMessage) init];
  sub_1000AEF2C(a1, (uint64_t)v13, (uint64_t *)&unk_10094B790);
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  id v22 = 0;
  if (v20(v13, 1, v18) != 1)
  {
    URL._bridgeToObjectiveC()(v21);
    id v22 = v23;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v18);
  }
  [v17 setURL:v22];

  id v24 = [objc_allocWithZone((Class)MSMessageTemplateLayout) init];
  id v25 = [objc_allocWithZone((Class)MSMessageLiveLayout) initWithAlternateLayout:v24];

  [v17 setLayout:v25];
  sub_1000AEF2C(a1, (uint64_t)v10, (uint64_t *)&unk_10094B790);
  if (v20(v10, 1, v18) == 1)
  {
    uint64_t v27 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v26);
    uint64_t v27 = v28;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
  }
  id v29 = (id)ASMessageFromRichMessagePayload();

  [v17 setSummaryText:v29];
  [v14 setMessage:v17];

  return v14;
}

__n128 sub_100633F9C@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1000AFA94(&qword_1009660C8);
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  type metadata accessor for ActivitySharingReplyCoordinator();
  sub_1006349E4(&qword_1009660D0, (void (*)(uint64_t))type metadata accessor for ActivitySharingReplyCoordinator);
  *(void *)a3 = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 8) = v6;
  *(__n128 *)(a3 + 16) = v8;
  *(void *)(a3 + 32) = v9;
  *(unsigned char *)(a3 + 40) = v8.n128_u8[0];
  *(void *)(a3 + 48) = v8.n128_u64[1];
  __n128 result = v8;
  *(__n128 *)(a3 + 56) = v8;
  *(void *)(a3 + 72) = v9;
  *(void *)(a3 + 80) = a1;
  *(void *)(a3 + 88) = a2;
  return result;
}

uint64_t destroy for ActivitySharingReplyMenu(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 80))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ActivitySharingReplyMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v9 = (_OWORD *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v8;
    *(void *)(a1 + 88) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *v9;
  }
  return a1;
}

uint64_t assignWithCopy for ActivitySharingReplyMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v4;
      *(void *)(a1 + 88) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v4;
  *(void *)(a1 + 88) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ActivitySharingReplyMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v5;
      *(void *)(a1 + 88) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 88) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingReplyMenu(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingReplyMenu(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingReplyMenu()
{
  return &type metadata for ActivitySharingReplyMenu;
}

uint64_t sub_1006344E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100634508(uint64_t result)
{
  if ((result & 1) == 0) {
    return sub_10017C150();
  }
  return result;
}

uint64_t sub_100634534@<X0>(char *a1@<X8>)
{
  return sub_1006326A0(*(void *)(v1 + 16), a1);
}

uint64_t sub_10063453C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10008A670(v2);
  return a1;
}

unint64_t sub_1006345C4()
{
  unint64_t result = qword_100966120;
  if (!qword_100966120)
  {
    sub_1000A1370(&qword_100966110);
    sub_100634664();
    sub_1000A132C(&qword_10094D9C8, &qword_10094D9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966120);
  }
  return result;
}

unint64_t sub_100634664()
{
  unint64_t result = qword_100966128;
  if (!qword_100966128)
  {
    sub_1000A1370(&qword_100966130);
    sub_1000A1370(&qword_1009540A8);
    type metadata accessor for IconOnlyLabelStyle();
    sub_1000A132C(&qword_1009540E0, &qword_1009540A8);
    sub_1006349E4(&qword_100966138, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100950A38, &qword_100950A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966128);
  }
  return result;
}

id sub_1006347B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100633454(a1, v2 + 16, a2);
}

unint64_t sub_1006347B8()
{
  unint64_t result = qword_100966160;
  if (!qword_100966160)
  {
    sub_1000A1370(&qword_1009660F0);
    sub_1000A1370(&qword_1009660E0);
    type metadata accessor for PlainButtonStyle();
    sub_1000A1370(&qword_1009660D8);
    type metadata accessor for ButtonMenuStyle();
    sub_1000A132C(&qword_100966148, &qword_1009660D8);
    sub_1006349E4(&qword_100966150, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
    swift_getOpaqueTypeConformance2();
    sub_1006349E4(&qword_100961858, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100966168, &qword_100966170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966160);
  }
  return result;
}

unint64_t sub_100634984()
{
  unint64_t result = qword_100966178;
  if (!qword_100966178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966178);
  }
  return result;
}

uint64_t sub_1006349DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100633664(v1 + 16, a1);
}

uint64_t sub_1006349E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100634A30(uint64_t a1, uint64_t *a2)
{
  sub_100633934(a1, a2, v2 + 16);
}

unint64_t sub_100634A38()
{
  unint64_t result = qword_100966190;
  if (!qword_100966190)
  {
    sub_1000A1370(&qword_1009660C8);
    sub_100634AAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966190);
  }
  return result;
}

unint64_t sub_100634AAC()
{
  unint64_t result = qword_100966198;
  if (!qword_100966198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966198);
  }
  return result;
}

void sub_100634B04(uint64_t a1)
{
}

uint64_t sub_100634B0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivitySharingReplyEditView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100634B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100634BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySharingReplyMessageComposerView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100634C3C()
{
  return sub_100632BC4(*(_OWORD **)(v0 + 16));
}

unint64_t sub_100634C44()
{
  unint64_t result = qword_1009661C8;
  if (!qword_1009661C8)
  {
    sub_1000A1370(&qword_1009661C0);
    sub_1000A132C(&qword_10094E158, &qword_10094E150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009661C8);
  }
  return result;
}

uint64_t sub_100634CDC()
{
  return sub_100632E70(*(_OWORD **)(v0 + 16));
}

unint64_t sub_100634CE4()
{
  unint64_t result = qword_1009661E0;
  if (!qword_1009661E0)
  {
    sub_1000A1370(&qword_1009661A8);
    sub_1000A132C(&qword_1009661D8, &qword_1009661D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009661E0);
  }
  return result;
}

uint64_t sub_100634D8C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100634DE8(uint64_t *a1)
{
  return sub_100632D54(a1, (_OWORD *)(v1 + 16));
}

uint64_t sub_100634DF0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 96)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100634E68()
{
  return sub_100632E14();
}

uint64_t sub_100634E78(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for MessageComposerPresentationHandlingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

unint64_t *assignWithTake for MessageComposerPresentationHandlingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageComposerPresentationHandlingMode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MessageComposerPresentationHandlingMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void *sub_10063507C(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MessageComposerPresentationHandlingMode()
{
  return &type metadata for MessageComposerPresentationHandlingMode;
}

uint64_t sub_1006350AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006352D0()
{
  uint64_t v1 = v0;
  id v2 = [v0 metadata];
  if (v2)
  {
    uint64_t v3 = v2;
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for WorkoutConfiguration();
  type metadata accessor for WorkoutConfigurationValidator();
  static WorkoutConfigurationValidator.shared.getter();
  unint64_t v4 = (void *)static WorkoutConfiguration.deserialize(from:validator:)();
  swift_release();
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v5 = [v4 analyticsKey];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v6;
  }
  else
  {
    id v8 = [v1 _goalType];
    return _HKWorkoutGoalType.analyticsKey.getter(v8);
  }
}

uint64_t sub_100635404()
{
  uint64_t v1 = v0;
  id v2 = [v0 metadata];
  if (v2)
  {
    uint64_t v3 = v2;
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for WorkoutConfiguration();
  type metadata accessor for WorkoutConfigurationValidator();
  static WorkoutConfigurationValidator.shared.getter();
  unint64_t v4 = (void *)static WorkoutConfiguration.deserialize(from:validator:)();
  swift_release();
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v5 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter();
    [v5 effectiveTypeIdentifier];

    uint64_t v6 = HKWorkoutActivityType.shortenedAnalyticsKey.getter();
    return v6;
  }
  else
  {
    [v1 workoutActivityType];
    return HKWorkoutActivityType.shortenedAnalyticsKey.getter();
  }
}

uint64_t sub_100635538()
{
  uint64_t v1 = v0;
  id v2 = [v0 metadata];
  if (v2)
  {
    uint64_t v3 = v2;
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for WorkoutConfiguration();
  type metadata accessor for WorkoutConfigurationValidator();
  static WorkoutConfigurationValidator.shared.getter();
  unint64_t v4 = (void *)static WorkoutConfiguration.deserialize(from:validator:)();
  swift_release();
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v5 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter();
    unsigned int v6 = [v5 isIndoor];
  }
  else
  {
    unsigned int v6 = sub_1006357AC(v1);
  }
  if (v6) {
    return 0x726F6F646E69;
  }
  else {
    return 0x726F6F6474756FLL;
  }
}

id sub_100635660()
{
  id v1 = [v0 metadata];
  if (v1)
  {
    id v2 = v1;
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for WorkoutConfiguration();
  type metadata accessor for WorkoutConfigurationValidator();
  static WorkoutConfigurationValidator.shared.getter();
  uint64_t v3 = (void *)static WorkoutConfiguration.deserialize(from:validator:)();
  swift_release();
  swift_bridgeObjectRelease();
  if (v3)
  {
    unint64_t v4 = (void *)dispatch thunk of WorkoutConfiguration.activityType.getter();
    [v4 swimmingLocationType];

    id result = (id)_HKWorkoutSwimmingLocationTypeName();
    if (result)
    {
      unsigned int v6 = result;
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_8:
      return (id)v7;
    }
    __break(1u);
  }
  else
  {
    sub_10045E204();
    id result = (id)_HKWorkoutSwimmingLocationTypeName();
    if (result)
    {
      unsigned int v6 = result;
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

id sub_1006357AC(void *a1)
{
  id v1 = a1;
  id v2 = [v1 metadata];
  uint64_t v3 = [v2 objectForKeyedSubscript:HKMetadataKeyIndoorWorkout];
  id v4 = [v3 BOOLValue];

  return v4;
}

uint64_t destroy for PauseRingsContainerView(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PauseRingsContainerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  id v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v6 = v3;
  swift_retain();
  id v7 = v5;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PauseRingsContainerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  id v8 = *(void **)(a2 + 32);
  uint64_t v9 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v8;
  id v10 = v8;

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PauseRingsContainerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  id v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PauseRingsContainerView()
{
  return &type metadata for PauseRingsContainerView;
}

uint64_t sub_100635A1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100635A38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_1009661F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000AFA94(&qword_100966200);
  __chkstk_darwin(v27);
  id v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v25 - v10;
  uint64_t v26 = sub_1000AFA94(&qword_100966208);
  __chkstk_darwin(v26);
  id v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 8))
  {
    uint64_t v19 = *(void **)v1;
    char v20 = *(unsigned char *)(v1 + 9);
    uint64_t v22 = *(void *)(v1 + 16);
    uint64_t v21 = *(void *)(v1 + 24);
    uint64_t v28 = 1;
    id v23 = v19;
    swift_retain();
    State.init(wrappedValue:)();
    long long v24 = v29;
    *(void *)id v14 = v23;
    v14[8] = v20;
    v14[9] = 1;
    *((void *)v14 + 2) = v22;
    *((void *)v14 + 3) = v21;
    *((_OWORD *)v14 + 2) = v24;
    swift_storeEnumTagMultiPayload();
    sub_100638BAC();
    sub_100638C00();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    v25[1] = v25;
    __chkstk_darwin(v12);
    long long v25[2] = a1;
    v25[-2] = v1;
    sub_1000AFA94(&qword_100966210);
    sub_1000A132C(&qword_100966218, &qword_100966210);
    NavigationStack.init<>(root:)();
    uint64_t v15 = swift_allocObject();
    long long v16 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v15 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v15 + 32) = v16;
    *(_OWORD *)(v15 + 48) = *(_OWORD *)(v1 + 32);
    *(void *)(v15 + 64) = *(void *)(v1 + 48);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v3);
    id v17 = (uint64_t (**)())&v8[*(int *)(v27 + 36)];
    *id v17 = sub_100638B58;
    v17[1] = (uint64_t (*)())v15;
    v17[2] = 0;
    v17[3] = 0;
    sub_100638B60(v1);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1000AEEC8((uint64_t)v8, (uint64_t)v11, &qword_100966200);
    sub_1000AEF2C((uint64_t)v11, (uint64_t)v14, &qword_100966200);
    swift_storeEnumTagMultiPayload();
    sub_100638BAC();
    sub_100638C00();
    _ConditionalContent<>.init(storage:)();
    return sub_10008DB18((uint64_t)v11, &qword_100966200);
  }
}

uint64_t sub_100635DF0(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  sub_100638B60(a1);
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = &protocol witness table for MainActor;
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 48) = v8;
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a1 + 32);
  *(void *)(v7 + 80) = *(void *)(a1 + 48);
  sub_1000713D0((uint64_t)v4, (uint64_t)&unk_100966240, v7);
  return swift_release();
}

uint64_t sub_100635F1C()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10000DFA8;
  return sub_100635FC8();
}

uint64_t sub_100635FC8()
{
  v1[4] = v0;
  type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_100636060, v3, v2);
}

uint64_t sub_100636060()
{
  uint64_t v1 = *(void **)(v0[4] + 32);
  v0[8] = v1;
  if ([v1 paused])
  {
    swift_release();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[9] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10063614C;
    return static Task<>.sleep(nanoseconds:)(250000000);
  }
}

uint64_t sub_10063614C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_100639664;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_100636270;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100636270()
{
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_release();
  [v1 setDeprecatedPauseForInternalSwiftClient:1];
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + 40);
  *(unsigned char *)(v0 + 80) = 1;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.setter();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100636320()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t sub_100636458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100966270);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000AFA94(&qword_100966258);
  __chkstk_darwin(v6);
  long long v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_1000AFA94(&qword_100966250);
  uint64_t v9 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + sub_10033A2C8(0, 1) = 0;
  v5[16] = 1;
  uint64_t v12 = sub_1000AFA94(&qword_100966278);
  sub_1006367EC(a1, (uint64_t)&v5[*(int *)(v12 + 44)]);
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v8, &qword_100966270);
  uint64_t v13 = &v8[*(int *)(v6 + 36)];
  long long v14 = v31;
  v13[4] = v30;
  v13[5] = v14;
  v13[6] = v32;
  long long v15 = v27;
  *uint64_t v13 = v26;
  v13[1] = v15;
  long long v16 = v29;
  void v13[2] = v28;
  v13[3] = v16;
  uint64_t v17 = sub_10008DB18((uint64_t)v5, &qword_100966270);
  __chkstk_darwin(v17);
  sub_1000AFA94(&qword_100956C40);
  sub_100638DC0();
  uint64_t v18 = sub_1000A1370(&qword_10094E148);
  uint64_t v19 = sub_1000A132C(&qword_10094E160, &qword_10094E148);
  uint64_t v24 = v18;
  uint64_t v25 = v19;
  swift_getOpaqueTypeConformance2();
  View.toolbar<A>(content:)();
  sub_10008DB18((uint64_t)v8, &qword_100966258);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v9 + 32))(v23, v11, v22);
}

uint64_t sub_1006367EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100966280);
  __chkstk_darwin(v3 - 8);
  uint64_t v131 = (uint64_t)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v117 = (uint64_t *)((char *)&v106 - v6);
  uint64_t v7 = type metadata accessor for AccessibilityTraits();
  long long v127 = *(void (***)(uint64_t, uint64_t))(v7 - 8);
  uint64_t v128 = v7;
  __chkstk_darwin(v7);
  uint64_t v125 = (uint64_t)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100966288);
  __chkstk_darwin(v9 - 8);
  uint64_t v130 = (uint64_t)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v126 = (char *)&v106 - v12;
  __chkstk_darwin(v13);
  uint64_t v129 = (uint64_t)&v106 - v14;
  uint64_t v116 = a1;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v15 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  static Font.largeTitle.getter();
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  swift_release();
  sub_1000A06C0(v15, v17, v19);
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  uint64_t v25 = Text.fontWeight(_:)();
  uint64_t v27 = v26;
  char v29 = v28;
  uint64_t v31 = v30;
  sub_1000A06C0(v20, v22, v24 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  char v33 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  LOBYTE(v22) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  char v154 = v29 & 1;
  char v153 = 0;
  char v152 = 0;
  *(void *)&long long v144 = v25;
  *((void *)&v144 + sub_10033A2C8(0, 1) = v27;
  LOBYTE(v145) = v29 & 1;
  *((void *)&v145 + sub_10033A2C8(0, 1) = v31;
  *(void *)&long long v146 = KeyPath;
  BYTE8(v146) = 1;
  LOBYTE(v147) = v33;
  *((void *)&v147 + sub_10033A2C8(0, 1) = v35;
  *(void *)&long long v148 = v37;
  *((void *)&v148 + sub_10033A2C8(0, 1) = v39;
  *(void *)&long long v149 = v41;
  BYTE8(v149) = 0;
  LOBYTE(v150) = v22;
  *((void *)&v150 + sub_10033A2C8(0, 1) = v42;
  *(void *)&v151[0] = v43;
  *((void *)&v151[0] + sub_10033A2C8(0, 1) = v44;
  *(void *)&v151[1] = v45;
  BYTE8(v151[1]) = 0;
  uint64_t v46 = v125;
  static AccessibilityTraits.isHeader.getter();
  sub_1000AFA94(&qword_100966290);
  sub_100638ECC(&qword_100966298, &qword_100966290, (void (*)(void))sub_1001C549C);
  uint64_t v47 = (uint64_t)v126;
  View.accessibilityAddTraits(_:)();
  v127[1](v46, v128);
  v155[6] = v150;
  v156[0] = v151[0];
  *(_OWORD *)((char *)v156 + 9) = *(_OWORD *)((char *)v151 + 9);
  v155[2] = v146;
  v155[3] = v147;
  v155[4] = v148;
  v155[5] = v149;
  v155[0] = v144;
  v155[1] = v145;
  sub_1002943CC((uint64_t)v155);
  uint64_t v48 = v129;
  sub_1000AEEC8(v47, v129, &qword_100966288);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v49 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v51 = v50;
  LOBYTE(v27) = v52 & 1;
  static Font.body.getter();
  uint64_t v125 = Text.font(_:)();
  uint64_t v114 = v53;
  uint64_t v115 = v54;
  LOBYTE(v3sub_10033A2C8(0, 1) = v55;
  swift_release();
  int v113 = v31 & 1;
  sub_1000A06C0(v49, v51, v27);
  swift_bridgeObjectRelease();
  uint64_t v112 = swift_getKeyPath();
  int v111 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v109 = v57;
  uint64_t v110 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v62 = v116;
  if (*(unsigned char *)(v116 + 10)) {
    int v63 = 2;
  }
  else {
    int v63 = 1;
  }
  int v119 = v63;
  uint64_t v64 = *(void **)(v116 + 32);
  long long v144 = *(_OWORD *)(v116 + 40);
  uint64_t v65 = v64;
  long long v127 = v65;
  sub_1000AFA94(&qword_10094DEE0);
  State.wrappedValue.getter();
  LODWORD(v128) = v135;
  uint64_t v66 = self;
  [v66 preferredActivityRingThicknessForDiameter:208.0];
  double v68 = v67;
  [v66 preferredActivityRingInterspacingForDiameter:208.0];
  double v70 = v69;
  LODWORD(v126) = [v65 paused];
  *(float *)&unsigned int v71 = v68;
  *(float *)&unsigned int v72 = v70;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  LOBYTE(v66) = v158;
  uint64_t v123 = v159;
  uint64_t v124 = v157;
  LOBYTE(v65) = v160;
  uint64_t v121 = v162;
  uint64_t v122 = v161;
  int v120 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  unsigned __int8 v134 = v66;
  unsigned __int8 v133 = v65;
  unsigned __int8 v132 = 0;
  uint64_t v81 = static HorizontalAlignment.center.getter();
  uint64_t v82 = (uint64_t)v117;
  uint64_t *v117 = v81;
  *(void *)(v82 + 8) = 0;
  *(unsigned char *)(v82 + 16) = 0;
  uint64_t v83 = sub_1000AFA94(&qword_1009662A0);
  sub_10063712C(v62, v82 + *(int *)(v83 + 44));
  uint64_t v84 = v130;
  sub_1000AEF2C(v48, v130, &qword_100966288);
  unsigned __int8 v85 = v134;
  unsigned __int8 v86 = v133;
  LODWORD(v116) = v133;
  LOBYTE(v65) = v132;
  int v107 = v132;
  int v108 = v134;
  sub_1000AEF2C(v82, v131, &qword_100966280);
  uint64_t v87 = v118;
  sub_1000AEF2C(v84, v118, &qword_100966288);
  uint64_t v88 = (int *)sub_1000AFA94(&qword_1009662A8);
  uint64_t v89 = v87 + v88[12];
  uint64_t v91 = v114;
  uint64_t v90 = v115;
  *(void *)uint64_t v89 = v125;
  *(void *)(v89 + 8) = v91;
  char v92 = v113;
  *(unsigned char *)(v89 + 16) = v113;
  uint64_t v93 = v112;
  *(void *)(v89 + 24) = v90;
  *(void *)(v89 + 32) = v93;
  *(unsigned char *)(v89 + 40) = 1;
  *(unsigned char *)(v89 + 48) = v111;
  uint64_t v94 = v109;
  *(void *)(v89 + 56) = v110;
  *(void *)(v89 + 64) = v94;
  *(void *)(v89 + 72) = v59;
  *(void *)(v89 + 80) = v61;
  *(unsigned char *)(v89 + 88) = 0;
  unint64_t v95 = (_OWORD *)(v87 + v88[16]);
  *(void *)&long long v135 = v127;
  BYTE8(v135) = (_BYTE)v126;
  HIDWORD(v135) = 1129316352;
  *(void *)&long long v136 = __PAIR64__(v72, v71);
  WORD4(v136) = 2;
  BYTE10(v136) = v128;
  *(_WORD *)((char *)&v136 + 1sub_10033A2C8(0, 1) = v119;
  uint64_t v137 = 0;
  uint64_t v138 = 0;
  *(void *)&long long v139 = v124;
  BYTE8(v139) = v85;
  *(void *)&long long v140 = v123;
  BYTE8(v140) = v86;
  *(void *)&long long v141 = v122;
  *((void *)&v141 + sub_10033A2C8(0, 1) = v121;
  LOBYTE(v142) = v120;
  *((void *)&v142 + sub_10033A2C8(0, 1) = v74;
  *(void *)&v143[0] = v76;
  *((void *)&v143[0] + sub_10033A2C8(0, 1) = v78;
  *(void *)&v143[1] = v80;
  BYTE8(v143[1]) = (_BYTE)v65;
  long long v96 = v139;
  v95[2] = 0u;
  v95[3] = v96;
  long long v97 = v136;
  *unint64_t v95 = v135;
  v95[1] = v97;
  long long v98 = v140;
  long long v99 = v141;
  long long v100 = v142;
  *(_OWORD *)((char *)v95 + 12sub_10033A2C8(0, 1) = *(_OWORD *)((char *)v143 + 9);
  long long v101 = v143[0];
  v95[6] = v100;
  v95[7] = v101;
  v95[4] = v98;
  v95[5] = v99;
  uint64_t v102 = v87 + v88[20];
  *(void *)uint64_t v102 = 0;
  *(unsigned char *)(v102 + 8) = 1;
  uint64_t v103 = v131;
  sub_1000AEF2C(v131, v87 + v88[24], &qword_100966280);
  uint64_t v104 = v125;
  sub_1000A1750(v125, v91, v92);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100007C60((uint64_t)&v135);
  sub_10008DB18(v82, &qword_100966280);
  sub_10008DB18(v129, &qword_100966288);
  sub_10008DB18(v103, &qword_100966280);
  *(void *)&long long v144 = v127;
  BYTE8(v144) = (_BYTE)v126;
  HIDWORD(v144) = 1129316352;
  *(void *)&long long v145 = __PAIR64__(v72, v71);
  WORD4(v145) = 2;
  BYTE10(v145) = v128;
  *(_WORD *)((char *)&v145 + 1sub_10033A2C8(0, 1) = v119;
  long long v146 = 0uLL;
  *(void *)&long long v147 = v124;
  BYTE8(v147) = v108;
  *(void *)&long long v148 = v123;
  BYTE8(v148) = v116;
  *(void *)&long long v149 = v122;
  *((void *)&v149 + sub_10033A2C8(0, 1) = v121;
  LOBYTE(v150) = v120;
  *((void *)&v150 + sub_10033A2C8(0, 1) = v74;
  *(void *)&v151[0] = v76;
  *((void *)&v151[0] + sub_10033A2C8(0, 1) = v78;
  *(void *)&v151[1] = v80;
  BYTE8(v151[1]) = v107;
  sub_10000ABA0((uint64_t)&v144);
  sub_1000A06C0(v104, v91, v92);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10008DB18(v130, &qword_100966288);
}

uint64_t sub_10063712C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v3 = type metadata accessor for ButtonBorderShape();
  uint64_t v86 = *(void *)(v3 - 8);
  uint64_t v87 = v3;
  __chkstk_darwin(v3);
  unsigned __int8 v85 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for ControlSize();
  uint64_t v70 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v76 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v74 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94(&qword_1009662B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_1009662B8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000AFA94(&qword_1009662C0);
  uint64_t v14 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000AFA94(&qword_1009662C8);
  __chkstk_darwin(v69);
  char v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000AFA94(&qword_1009662D0);
  uint64_t v78 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  unsigned int v71 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000AFA94(&qword_1009662D8) - 8;
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000AFA94(&qword_1009662E0) - 8;
  __chkstk_darwin(v82);
  uint64_t v79 = (uint64_t)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000AFA94(&qword_1009662E8) - 8;
  __chkstk_darwin(v84);
  uint64_t v83 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100637ACC(a1, v10);
  uint64_t v23 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000AEF2C((uint64_t)v10, (uint64_t)v13, &qword_1009662B0);
  uint64_t v25 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *uint64_t v25 = KeyPath;
  v25[1] = v23;
  sub_10008DB18((uint64_t)v10, &qword_1009662B0);
  BorderedProminentButtonStyle.init()();
  sub_100638F54();
  sub_1006393AC((unint64_t *)&qword_10094C438, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v26 = v73;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v7, v26);
  sub_10008DB18((uint64_t)v13, &qword_1009662B8);
  uint64_t v27 = v70;
  char v28 = v76;
  uint64_t v29 = v80;
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v76, enum case for ControlSize.large(_:), v80);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = (uint64_t *)&v18[*(int *)(v69 + 36)];
  uint64_t v32 = sub_1000AFA94(&qword_10094C440);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v31 + *(int *)(v32 + 28), v28, v29);
  *uint64_t v31 = v30;
  uint64_t v33 = v72;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v72);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v33);
  static Font.Weight.semibold.getter();
  sub_1006390F0();
  uint64_t v34 = v71;
  View.fontWeight(_:)();
  sub_10008DB18((uint64_t)v18, &qword_1009662C8);
  id v35 = [self tertiarySystemBackgroundColor];
  uint64_t v36 = Color.init(uiColor:)();
  uint64_t v37 = swift_getKeyPath();
  *(void *)&long long v89 = v36;
  swift_retain();
  uint64_t v38 = AnyShapeStyle.init<A>(_:)();
  uint64_t v39 = v78;
  uint64_t v40 = (uint64_t)v75;
  uint64_t v41 = v34;
  uint64_t v42 = v34;
  uint64_t v43 = v81;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v41, v81);
  swift_release();
  uint64_t v44 = (uint64_t *)(v40 + *(int *)(v77 + 44));
  uint64_t *v44 = v37;
  v44[1] = v38;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v43);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v45 = v79;
  sub_1000AEF2C(v40, v79, &qword_1009662D8);
  uint64_t v46 = (_OWORD *)(v45 + *(int *)(v82 + 44));
  long long v47 = v94;
  v46[4] = v93;
  v46[5] = v47;
  v46[6] = v95;
  long long v48 = v90;
  *uint64_t v46 = v89;
  v46[1] = v48;
  long long v49 = v92;
  v46[2] = v91;
  v46[3] = v49;
  sub_10008DB18(v40, &qword_1009662D8);
  uint64_t v50 = v85;
  static ButtonBorderShape.roundedRectangle(radius:)();
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = (uint64_t)v83;
  uint64_t v53 = (uint64_t *)&v83[*(int *)(v84 + 44)];
  uint64_t v54 = sub_1000AFA94(&qword_100966318);
  uint64_t v56 = v86;
  uint64_t v55 = v87;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))((char *)v53 + *(int *)(v54 + 28), v50, v87);
  *uint64_t v53 = v51;
  sub_1000AEF2C(v45, v52, &qword_1009662E0);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v50, v55);
  sub_10008DB18(v45, &qword_1009662E0);
  LOBYTE(v5sub_10033A2C8(0, 1) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v65 = v88;
  sub_1000AEF2C(v52, v88, &qword_1009662E8);
  uint64_t v66 = v65 + *(int *)(sub_1000AFA94(&qword_100966320) + 36);
  *(unsigned char *)uint64_t v66 = v51;
  *(void *)(v66 + 8) = v58;
  *(void *)(v66 + 16) = v60;
  *(void *)(v66 + 24) = v62;
  *(void *)(v66 + 32) = v64;
  *(unsigned char *)(v66 + 40) = 0;
  return sub_10008DB18(v52, &qword_1009662E8);
}

uint64_t sub_100637ACC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_100966328);
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  __chkstk_darwin(v3);
  uint64_t v51 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000AFA94(&qword_100966330) - 8;
  __chkstk_darwin(v53);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v54 = (uint64_t)&v48 - v8;
  uint64_t v55 = sub_1000AFA94(&qword_100966338);
  uint64_t v50 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v52 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v49 = (char *)&v48 - v11;
  sub_1000AFA94(&qword_100966340);
  uint64_t v12 = type metadata accessor for PauseRingsPeriod();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100752410;
  unint64_t v17 = v16 + v15;
  char v18 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
  v18(v17, enum case for PauseRingsPeriod.endOfDay(_:), v12);
  v18(v17 + v14, enum case for PauseRingsPeriod.endOfWeek(_:), v12);
  v18(v17 + 2 * v14, enum case for PauseRingsPeriod.endOfMonth(_:), v12);
  *(void *)&long long v60 = v16;
  swift_getKeyPath();
  uint64_t v19 = swift_allocObject();
  long long v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 32) = v20;
  *(_OWORD *)(v19 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v19 + 64) = *(void *)(a1 + 48);
  sub_100638B60(a1);
  sub_1000AFA94(&qword_100966348);
  sub_1000AFA94(&qword_100966350);
  sub_1000A132C(&qword_100966358, &qword_100966348);
  sub_1006393AC(&qword_100966360, (void (*)(uint64_t))&type metadata accessor for PauseRingsPeriod);
  sub_1006393F4();
  ForEach<>.init(_:id:content:)();
  uint64_t v21 = *(void **)a1;
  LOBYTE(v18) = *(unsigned char *)(a1 + 9);
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v59 = 1;
  id v24 = v21;
  swift_retain();
  State.init(wrappedValue:)();
  long long v25 = v60;
  *(void *)&long long v60 = v24;
  WORD4(v60) = v18;
  uint64_t v61 = v23;
  uint64_t v62 = v22;
  long long v63 = v25;
  sub_1000AFA94(&qword_10094C420);
  sub_1000E20A4();
  sub_100638BAC();
  uint64_t v26 = v51;
  NavigationLink.init(destination:label:)();
  LOBYTE(v22) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v56;
  uint64_t v35 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v6, v26, v57);
  uint64_t v37 = &v6[*(int *)(v53 + 44)];
  *uint64_t v37 = v22;
  *((void *)v37 + sub_10033A2C8(0, 1) = v28;
  *((void *)v37 + 2) = v30;
  *((void *)v37 + 3) = v32;
  *((void *)v37 + 4) = v34;
  v37[40] = 0;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v35);
  uint64_t v38 = v54;
  sub_1000AEEC8((uint64_t)v6, v54, &qword_100966330);
  uint64_t v39 = v50;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v41 = v52;
  uint64_t v42 = v49;
  uint64_t v43 = v55;
  v40(v52, v49, v55);
  sub_1000AEF2C(v38, (uint64_t)v6, &qword_100966330);
  uint64_t v44 = v58;
  v40(v58, v41, v43);
  uint64_t v45 = sub_1000AFA94(&qword_100966370);
  sub_1000AEF2C((uint64_t)v6, (uint64_t)&v44[*(int *)(v45 + 48)], &qword_100966330);
  sub_10008DB18(v38, &qword_100966330);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  v46(v42, v43);
  sub_10008DB18((uint64_t)v6, &qword_100966330);
  return ((uint64_t (*)(char *, uint64_t))v46)(v41, v43);
}

uint64_t sub_1006380D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v5 = type metadata accessor for PauseRingsPeriod();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = sub_1000AFA94(&qword_10094C408);
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a2 + 32);
  *(void *)(v14 + 64) = *(void *)(a2 + 48);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v13, (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v29 = a1;
  sub_100638B60(a2);
  sub_1000AFA94(&qword_10094C420);
  sub_1000E20A4();
  Button.init(action:label:)();
  LOBYTE(a2) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v24 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v28, v12, v8);
  uint64_t v25 = v24 + *(int *)(sub_1000AFA94(&qword_100966350) + 36);
  *(unsigned char *)uint64_t v25 = a2;
  *(void *)(v25 + 8) = v17;
  *(void *)(v25 + 16) = v19;
  *(void *)(v25 + 24) = v21;
  *(void *)(v25 + 32) = v23;
  *(unsigned char *)(v25 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_100638380()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  PauseRingsPeriod.date()();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    uint64_t v9 = sub_10008DB18((uint64_t)v4, (uint64_t *)&unk_10095B890);
    return (*(uint64_t (**)(uint64_t))(v0 + 16))(v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v11 = *(void **)v0;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    [v11 pauseRingsUntilDate:isa completionHandler:0];

    (*(void (**)(void))(v1 + 16))();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

__n128 sub_100638538@<Q0>(uint64_t a1@<X8>)
{
  *(void *)&v16[0] = PauseRingsPeriod.localizedTitleForCurrentDate.getter();
  *((void *)&v16[0] + sub_10033A2C8(0, 1) = v2;
  sub_1000A06D0();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = static Alignment.center.getter();
  sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v10, v11, v3, v5, v9, v7);
  sub_1000A06C0(v3, v5, v9);
  swift_bridgeObjectRelease();
  long long v12 = v16[7];
  *(_OWORD *)(a1 + 96) = v16[6];
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 128) = v16[8];
  long long v13 = v16[3];
  *(_OWORD *)(a1 + 32) = v16[2];
  *(_OWORD *)(a1 + 48) = v13;
  long long v14 = v16[5];
  *(_OWORD *)(a1 + 64) = v16[4];
  *(_OWORD *)(a1 + 80) = v14;
  __n128 result = (__n128)v16[1];
  *(_OWORD *)a1 = v16[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

__n128 sub_100638634@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PauseRingsPeriod();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for PauseRingsPeriod.custom(_:), v2);
  uint64_t v6 = PauseRingsPeriod.localizedTitleForCurrentDate.getter();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)&v22[0] = v6;
  *((void *)&v22[0] + sub_10033A2C8(0, 1) = v8;
  sub_1000A06D0();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  LOBYTE(v8) = v14 & 1;
  uint64_t v15 = static Alignment.center.getter();
  sub_1000177EC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v22, 0.0, 1, 0.0, 1, v15, v16, v9, v11, v8, v13);
  sub_1000A06C0(v9, v11, v8);
  swift_bridgeObjectRelease();
  long long v17 = v22[7];
  *(_OWORD *)(a1 + 96) = v22[6];
  *(_OWORD *)(a1 + 112) = v17;
  *(_OWORD *)(a1 + 128) = v22[8];
  long long v18 = v22[3];
  *(_OWORD *)(a1 + 32) = v22[2];
  *(_OWORD *)(a1 + 48) = v18;
  long long v19 = v22[5];
  *(_OWORD *)(a1 + 64) = v22[4];
  *(_OWORD *)(a1 + 80) = v19;
  __n128 result = (__n128)v22[1];
  *(_OWORD *)a1 = v22[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1006387FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000AFA94(&qword_10094E148);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarLeading.getter();
  uint64_t v9 = a1;
  sub_1000AFA94(&qword_10094E150);
  sub_1000A132C(&qword_10094E158, &qword_10094E150);
  ToolbarItem<>.init(placement:content:)();
  sub_1000A132C(&qword_10094E160, &qword_10094E148);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1006389C4(uint64_t a1)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v2 + 64) = *(void *)(a1 + 48);
  sub_100638B60(a1);

  return Button<>.init(_:action:)();
}

uint64_t sub_100638A98@<X0>(uint64_t a1@<X8>)
{
  return sub_100635A38(a1);
}

uint64_t sub_100638ADC@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v5 = *(_OWORD *)(v3 + 32);
  long long v7 = *(_OWORD *)v3;
  *(void *)(v4 + 64) = *(void *)(v3 + 48);
  *(_OWORD *)(v4 + 16) = v7;
  *(_OWORD *)(v4 + 32) = v6;
  *(_OWORD *)(v4 + 48) = v5;
  *a1 = sub_100638DB0;
  a1[1] = (uint64_t (*)())v4;

  return sub_100638B60(v3);
}

uint64_t sub_100638B58()
{
  return sub_100635DF0(v0 + 16);
}

uint64_t sub_100638B60(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 32);
  swift_retain();
  id v4 = v2;
  swift_retain();
  id v5 = v3;
  return a1;
}

unint64_t sub_100638BAC()
{
  unint64_t result = qword_100966220;
  if (!qword_100966220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966220);
  }
  return result;
}

unint64_t sub_100638C00()
{
  unint64_t result = qword_100966228;
  if (!qword_100966228)
  {
    sub_1000A1370(&qword_100966200);
    sub_1000A132C(&qword_100966230, &qword_1009661F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966228);
  }
  return result;
}

uint64_t sub_100638CA0()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100638CF8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10005DB5C;
  return sub_100635F1C();
}

uint64_t sub_100638DB0()
{
  return sub_100636320();
}

uint64_t sub_100638DB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100636458(*(void *)(v1 + 16), a1);
}

unint64_t sub_100638DC0()
{
  unint64_t result = qword_100966260;
  if (!qword_100966260)
  {
    sub_1000A1370(&qword_100966258);
    sub_1000A132C(&qword_100966268, &qword_100966270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966260);
  }
  return result;
}

uint64_t sub_100638E60()
{
  return sub_1006387FC(*(void *)(v0 + 16));
}

uint64_t sub_100638E68()
{
  return sub_1006389C4(*(void *)(v0 + 16));
}

uint64_t sub_100638E74()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100638E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100639290(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_100638ECC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100638F54()
{
  unint64_t result = qword_1009662F0;
  if (!qword_1009662F0)
  {
    sub_1000A1370(&qword_1009662B8);
    sub_100638FF4();
    sub_1000A132C(&qword_100954C68, &qword_100954C70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009662F0);
  }
  return result;
}

unint64_t sub_100638FF4()
{
  unint64_t result = qword_1009662F8;
  if (!qword_1009662F8)
  {
    sub_1000A1370(&qword_1009662B0);
    sub_1000A132C(&qword_100966300, &qword_100966308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009662F8);
  }
  return result;
}

uint64_t sub_10063908C()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1006390B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100639290(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

unint64_t sub_1006390F0()
{
  unint64_t result = qword_100966310;
  if (!qword_100966310)
  {
    sub_1000A1370(&qword_1009662C8);
    sub_1000A1370(&qword_1009662B8);
    type metadata accessor for BorderedProminentButtonStyle();
    sub_100638F54();
    sub_1006393AC((unint64_t *)&qword_10094C438, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_1000A132C(&qword_100956590, &qword_10094C440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966310);
  }
  return result;
}

uint64_t sub_10063921C()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_100639240()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_100639264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100639290(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_100639290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_100639360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100639290(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_1006393A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006380D4(a1, v2 + 16, a2);
}

uint64_t sub_1006393AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006393F4()
{
  unint64_t result = qword_100966368;
  if (!qword_100966368)
  {
    sub_1000A1370(&qword_100966350);
    sub_1000A132C(&qword_10094C430, &qword_10094C408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966368);
  }
  return result;
}

uint64_t sub_100639494()
{
  uint64_t v1 = type metadata accessor for PauseRingsPeriod();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100639578()
{
  return sub_100638380();
}

double sub_1006395DC@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_100638538(a1).n128_u64[0];
  return result;
}

unint64_t sub_1006395E8()
{
  unint64_t result = qword_100966378;
  if (!qword_100966378)
  {
    sub_1000A1370(&qword_100966380);
    sub_100638BAC();
    sub_100638C00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966378);
  }
  return result;
}

uint64_t sub_100639668()
{
  uint64_t v1 = type metadata accessor for WalkSuggestionClient();
  v0[4] = v1;
  v0[5] = *(void *)(v1 - 8);
  v0[6] = swift_task_alloc();
  return _swift_task_switch(sub_100639724, 0, 0);
}

uint64_t sub_100639724()
{
  WalkSuggestionClient.init()();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_1006397C0;
  return WalkSuggestionClient.activate()();
}

uint64_t sub_1006397C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100639904;
  return WalkSuggestionClient.requestWalkSuggestion()();
}

uint64_t sub_100639904(uint64_t a1, char a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 72) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return _swift_task_switch(sub_100639C24, 0, 0);
  }
  else
  {
    *(unsigned char *)(v6 + 104) = a2;
    *(void *)(v6 + 80) = a1;
    long long v7 = (void *)swift_task_alloc();
    *(void *)(v6 + 88) = v7;
    *long long v7 = v6;
    v7[1] = sub_100639A90;
    return WalkSuggestionClient.invalidate()();
  }
}

uint64_t sub_100639A90()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100639B8C, 0, 0);
}

uint64_t sub_100639B8C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  char v2 = *(unsigned char *)(v0 + 104);
  (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
  if (v2) {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(unsigned char *)(v0 + 104) & 1;
  swift_task_dealloc();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v4(v1, v3);
}

uint64_t sub_100639C24()
{
  uint64_t v13 = v0;
  os_log_type_t v1 = static os_log_type_t.error.getter();
  char v2 = (void *)HKLogActivity;
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(HKLogActivity, v1))
  {
    uint64_t v4 = v0[9];
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v5 = v2;
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v12 = v7;
    v0[2] = v4;
    swift_errorRetain();
    sub_1000AFA94(&qword_10095C080);
    uint64_t v8 = String.init<A>(describing:)();
    v0[3] = sub_10008F1F4(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v3, "Failed to get walk suggestion %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v10 = (void *)swift_task_alloc();
  v0[12] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100639E1C;
  return WalkSuggestionClient.invalidate()();
}

uint64_t sub_100639E1C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100639F18, 0, 0);
}

uint64_t sub_100639F18()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void, uint64_t))v0[1];
  return v4(0, 1);
}

ValueMetadata *type metadata accessor for WalkSuggestionDataProvider()
{
  return &type metadata for WalkSuggestionDataProvider;
}

uint64_t sub_100639FC0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10063A0A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64);
  unint64_t v12 = ((((v11 + ((v6 + v9) & ~v9) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)v4 + v10) & v17;
    unint64_t v19 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v18, v19, v7);
    unint64_t v20 = (v18 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v21 = (v19 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v20 = *(void *)v21;
    *(void *)(v20 + 8) = *(void *)(v21 + 8);
    *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
    uint64_t v22 = (void *)((v18 + v11 + 31) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)((v19 + v11 + 31) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v22 = *v23;
    *(void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10063A290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((*(void *)(v4 + 56)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  swift_release();

  return swift_release();
}

uint64_t sub_10063A358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48);
  uint64_t v15 = v14 + v12;
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  unint64_t v19 = (void *)((v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (void *)((v16 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v19 = *v20;
  *(void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10063A470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40);
  uint64_t v15 = v14 + v12;
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v14 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v17 = *(void *)v18;
  swift_retain();
  swift_release();
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  unint64_t v19 = (void *)((v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (void *)((v16 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v19 = *v20;
  *(void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10063A5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = v14 + v12;
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v19 = *(unsigned char *)(v18 + 16);
  *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
  *(unsigned char *)(v17 + 16) = v19;
  unint64_t v20 = (void *)((v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (void *)((v16 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v20 = *v21;
  *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10063A6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v15 = v14 + v12;
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v17 = *(void *)v18;
  swift_release();
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_release();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  char v19 = (void *)((v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (void *)((v16 + 31) & 0xFFFFFFFFFFFFFFF8);
  *char v19 = *v20;
  *(void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10063A7CC(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v7 + 64);
  if (v8 <= v6) {
    unsigned int v11 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  if (v11 < a2)
  {
    unint64_t v13 = ((((v10 + (v12 & ~v9) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v14 = a2 - v11;
    uint64_t v15 = v13 & 0xFFFFFFF8;
    if ((v13 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = v14 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v13);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v13);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10063A9B0);
      case 4:
        int v19 = *(int *)((char *)a1 + v13);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v11 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v11) {
    return (*(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v23 = ((unint64_t)a1 + v12) & ~v9;
  if (v8 == v11) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
  }
  unint64_t v24 = *(void *)(((v10 + v23 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void sub_10063A9C4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v8 + 64);
  if (v9 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v10;
  unint64_t v14 = ((((v11 + (v13 & ~v10) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v12 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      switch(v18)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_48;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v12)
            {
              int v22 = *(void (**)(void))(v6 + 56);
              v22();
            }
            else
            {
              unint64_t v23 = (unint64_t)&a1[v13] & ~v10;
              if (v9 == v12)
              {
                unint64_t v24 = *(void (**)(unint64_t))(v8 + 56);
                v24(v23);
              }
              else
              {
                unint64_t v25 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
                if ((a2 & 0x80000000) != 0)
                {
                  *(unsigned char *)(v25 + 16) = 0;
                  *(void *)unint64_t v25 = a2 ^ 0x80000000;
                  *(void *)(v25 + 8) = 0;
                }
                else
                {
                  *(void *)(v25 + 8) = a2 - 1;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v15 = a3 - v12;
    if (((((v11 + (v13 & ~v10) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v16 = v15 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((((v11 + (v13 & ~v10) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v20 = v19;
  }
  else {
    int v20 = 1;
  }
  if (((((v11 + (v13 & ~v10) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v21 = ~v12 + a2;
    bzero(a1, ((((v11 + (v13 & ~v10) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v21;
  }
  switch(v18)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x10063AC6CLL);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for TwoPaneView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10063ACAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10063ACF0(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - sub_10033A2C8(0, 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        unsigned int v16 = &v8[8 * v9];
        int v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)unsigned int v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  int v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    int v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return TupleView.init(_:)();
}

uint64_t sub_10063AEB4()
{
  sub_1000AFA94(&qword_10094E168);
  Binding.wrappedValue.getter();
  return v1;
}

uint64_t sub_10063AF0C()
{
  return Namespace.wrappedValue.getter();
}

uint64_t sub_10063AF18()
{
  return Namespace.wrappedValue.getter();
}

uint64_t sub_10063AF24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(a1 - 1);
  uint64_t v5 = *(void *)(v4 + 64);
  __n128 v6 = __chkstk_darwin(a1);
  (*(void (**)(char *, __n128))(v4 + 16))((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = (char *)swift_allocObject();
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  *((void *)v8 + 2) = v9;
  *((void *)v8 + 3) = v10;
  uint64_t v11 = a1[4];
  uint64_t v12 = a1[5];
  *((void *)v8 + 4) = v11;
  *((void *)v8 + 5) = v12;
  (*(void (**)(char *, char *, void *))(v4 + 32))(&v8[v7], (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  unint64_t v13 = sub_10063CF6C();
  uint64_t v27 = v9;
  uint64_t v28 = &type metadata for Namespace.ID;
  uint64_t v29 = v11;
  uint64_t v30 = (void *)v13;
  type metadata accessor for IDView();
  type metadata accessor for ModifiedContent();
  uint64_t v27 = v10;
  uint64_t v28 = &type metadata for Namespace.ID;
  uint64_t v29 = v12;
  uint64_t v30 = (void *)v13;
  type metadata accessor for IDView();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  swift_getWitnessTable();
  uint64_t v14 = type metadata accessor for ScrollView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = v14;
  uint64_t v28 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v27 = v14;
  uint64_t v28 = (void *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = OpaqueTypeMetadata2;
  uint64_t v28 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeMetadata2();
  uint64_t v18 = type metadata accessor for ModifiedContent();
  uint64_t v27 = OpaqueTypeMetadata2;
  uint64_t v28 = (void *)OpaqueTypeConformance2;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = &protocol witness table for _FlexFrameLayout;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v27 = v18;
  uint64_t v28 = &type metadata for Bool;
  uint64_t v29 = v19;
  uint64_t v30 = &protocol witness table for Bool;
  swift_getOpaqueTypeMetadata2();
  uint64_t v27 = v18;
  uint64_t v28 = &type metadata for Bool;
  uint64_t v29 = v19;
  uint64_t v30 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  type metadata accessor for ScrollViewReader();
  swift_getWitnessTable();
  uint64_t v23 = GeometryReader.init(content:)();
  uint64_t v24 = v20;
  uint64_t v21 = type metadata accessor for GeometryReader();
  swift_getWitnessTable();
  sub_10004C704((uint64_t)&v23, v21, (uint64_t)&v27);
  swift_release();
  uint64_t v23 = v27;
  uint64_t v24 = v28;
  sub_10004C704((uint64_t)&v23, v21, a2);
  return swift_release();
}

uint64_t sub_10063B360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v44 = (uint64_t)a4;
  uint64_t v45 = (uint64_t)a6;
  uint64_t v42 = a2;
  uint64_t v43 = a5;
  uint64_t v46 = a1;
  uint64_t v47 = a7;
  uint64_t v11 = type metadata accessor for GeometryProxy();
  uint64_t v40 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v41 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v14 = a3;
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  uint64_t v15 = type metadata accessor for TwoPaneView();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __n128 v18 = __chkstk_darwin(v15);
  int v20 = (char *)&v40 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)&v40 - v19, v42, v15, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v11);
  unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v22 = (v17 + *(unsigned __int8 *)(v12 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v14;
  uint64_t v24 = v14;
  uint64_t v26 = v43;
  uint64_t v25 = v44;
  v23[3] = v44;
  v23[4] = v26;
  uint64_t v27 = v45;
  v23[5] = v45;
  uint64_t v28 = (char *)v23 + v21;
  uint64_t v29 = v23;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v28, v20, v15);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))((unint64_t)v29 + v22, v41, v40);
  unint64_t v30 = sub_10063CF6C();
  uint64_t v52 = v24;
  uint64_t v53 = &type metadata for Namespace.ID;
  uint64_t v54 = v26;
  uint64_t v55 = (void *)v30;
  type metadata accessor for IDView();
  type metadata accessor for ModifiedContent();
  uint64_t v52 = v25;
  uint64_t v53 = &type metadata for Namespace.ID;
  uint64_t v54 = v27;
  uint64_t v55 = (void *)v30;
  type metadata accessor for IDView();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  swift_getWitnessTable();
  uint64_t v31 = type metadata accessor for ScrollView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v52 = v31;
  uint64_t v53 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v52 = v31;
  uint64_t v53 = (void *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v52 = OpaqueTypeMetadata2;
  uint64_t v53 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeMetadata2();
  uint64_t v35 = type metadata accessor for ModifiedContent();
  uint64_t v52 = OpaqueTypeMetadata2;
  uint64_t v53 = (void *)OpaqueTypeConformance2;
  uint64_t v50 = swift_getOpaqueTypeConformance2();
  uint64_t v51 = &protocol witness table for _FlexFrameLayout;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v52 = v35;
  uint64_t v53 = &type metadata for Bool;
  uint64_t v54 = v36;
  uint64_t v55 = &protocol witness table for Bool;
  swift_getOpaqueTypeMetadata2();
  uint64_t v52 = v35;
  uint64_t v53 = &type metadata for Bool;
  uint64_t v54 = v36;
  uint64_t v55 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  uint64_t v48 = ScrollViewReader.init(content:)();
  long long v49 = v37;
  uint64_t v38 = type metadata accessor for ScrollViewReader();
  swift_getWitnessTable();
  sub_10004C704((uint64_t)&v48, v38, (uint64_t)&v52);
  swift_release();
  uint64_t v48 = v52;
  long long v49 = v53;
  sub_10004C704((uint64_t)&v48, v38, v47);
  return swift_release();
}

uint64_t sub_10063B878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v86 = a2;
  uint64_t v80 = a1;
  uint64_t v85 = a8;
  uint64_t v84 = type metadata accessor for ScrollViewProxy();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v79 = v12;
  uint64_t v82 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = a4;
  long long v100 = a5;
  uint64_t v13 = a4;
  uint64_t v87 = a4;
  uint64_t v88 = a5;
  uint64_t v101 = a6;
  uint64_t v102 = a7;
  uint64_t v89 = a6;
  long long v90 = a7;
  uint64_t v14 = (uint64_t)a7;
  uint64_t v81 = type metadata accessor for TwoPaneView();
  uint64_t v78 = *(void *)(v81 - 8);
  uint64_t v76 = *(void *)(v78 + 64);
  __chkstk_darwin(v81);
  uint64_t v77 = (char *)v60 - v15;
  uint64_t v75 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v64 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = sub_10063CF6C();
  uint64_t v99 = v13;
  long long v100 = &type metadata for Namespace.ID;
  uint64_t v101 = a6;
  uint64_t v102 = (void *)v17;
  type metadata accessor for IDView();
  type metadata accessor for ModifiedContent();
  uint64_t v99 = (uint64_t)a5;
  long long v100 = &type metadata for Namespace.ID;
  uint64_t v101 = v14;
  uint64_t v102 = (void *)v17;
  type metadata accessor for IDView();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  v60[2] = type metadata accessor for VStack();
  v60[1] = swift_getWitnessTable();
  uint64_t v18 = type metadata accessor for ScrollView();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)v60 - v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v99 = v18;
  long long v100 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v62 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v25 = (char *)v60 - v24;
  uint64_t v99 = v18;
  long long v100 = (void *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v99 = OpaqueTypeMetadata2;
  long long v100 = (void *)OpaqueTypeConformance2;
  uint64_t v27 = swift_getOpaqueTypeMetadata2();
  uint64_t v61 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)v60 - v28;
  uint64_t v63 = v30;
  uint64_t v31 = type metadata accessor for ModifiedContent();
  uint64_t v73 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  unsigned int v71 = (char *)v60 - v32;
  uint64_t v99 = OpaqueTypeMetadata2;
  long long v100 = (void *)OpaqueTypeConformance2;
  v60[3] = OpaqueTypeConformance2;
  uint64_t v97 = swift_getOpaqueTypeConformance2();
  long long v98 = &protocol witness table for _FlexFrameLayout;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v70 = v31;
  uint64_t v99 = v31;
  long long v100 = &type metadata for Bool;
  uint64_t v67 = v33;
  uint64_t v101 = v33;
  uint64_t v102 = &protocol witness table for Bool;
  uint64_t v69 = swift_getOpaqueTypeMetadata2();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v65 = (char *)v60 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v66 = (uint64_t)v60 - v36;
  uint64_t v91 = v87;
  long long v92 = v88;
  uint64_t v93 = v89;
  long long v94 = v90;
  uint64_t v95 = v86;
  uint64_t v96 = v72;
  static Axis.Set.vertical.getter();
  sub_100364E90();
  uint64_t v37 = v64;
  View.scrollDisabled(_:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  static ScrollIndicatorVisibility.never.getter();
  LOBYTE(v18) = static Axis.Set.vertical.getter();
  unsigned __int8 v38 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v18) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v38) {
    Axis.Set.init(rawValue:)();
  }
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v75);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v25, OpaqueTypeMetadata2);
  static Alignment.center.getter();
  uint64_t v39 = v63;
  uint64_t v40 = v71;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v29, v39);
  uint64_t v41 = v81;
  uint64_t v42 = v86;
  LOBYTE(v99) = sub_10063AEB4() & 1;
  uint64_t v43 = v78;
  uint64_t v44 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v42, v41);
  uint64_t v45 = v83;
  uint64_t v46 = v82;
  uint64_t v47 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v80, v84);
  unint64_t v48 = (*(unsigned __int8 *)(v43 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v49 = (v76 + *(unsigned __int8 *)(v45 + 80) + v48) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v50 = (char *)swift_allocObject();
  uint64_t v51 = v88;
  *((void *)v50 + 2) = v87;
  *((void *)v50 + 3) = v51;
  uint64_t v52 = v90;
  *((void *)v50 + 4) = v89;
  *((void *)v50 + 5) = v52;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v50[v48], v44, v41);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v50[v49], v46, v47);
  uint64_t v53 = (uint64_t)v65;
  uint64_t v54 = v70;
  uint64_t v55 = v67;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v40, v54);
  uint64_t v99 = v54;
  long long v100 = &type metadata for Bool;
  uint64_t v101 = v55;
  uint64_t v102 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  uint64_t v56 = v66;
  uint64_t v57 = v69;
  sub_10004C704(v53, v69, v66);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
  v58(v53, v57);
  sub_10004C704(v56, v57, v85);
  return ((uint64_t (*)(uint64_t, uint64_t))v58)(v56, v57);
}

uint64_t sub_10063C388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v24 = a7;
  unint64_t v11 = sub_10063CF6C();
  type metadata accessor for IDView();
  type metadata accessor for ModifiedContent();
  uint64_t v31 = a4;
  uint64_t v32 = &type metadata for Namespace.ID;
  uint64_t v33 = a6;
  unint64_t v34 = v11;
  type metadata accessor for IDView();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v12 = type metadata accessor for VStack();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v21 - v17;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = v22;
  uint64_t v30 = v23;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  swift_getWitnessTable();
  sub_10004C704((uint64_t)v15, v12, (uint64_t)v18);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v15, v12);
  sub_10004C704((uint64_t)v18, v12, v24);
  return ((uint64_t (*)(char *, uint64_t))v19)(v18, v12);
}

uint64_t sub_10063C5F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, void *a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v49 = a2;
  uint64_t v57 = a7;
  uint64_t v58 = a1;
  uint64_t v64 = (uint64_t)a4;
  uint64_t v65 = &type metadata for Namespace.ID;
  unint64_t v48 = a4;
  unint64_t v66 = a6;
  unint64_t v67 = sub_10063CF6C();
  unint64_t v47 = v66;
  unint64_t v11 = v67;
  uint64_t v52 = type metadata accessor for IDView();
  uint64_t v56 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v51 = (char *)&v42 - v12;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v13 = type metadata accessor for ModifiedContent();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v54 = v13;
  uint64_t v55 = v14;
  __chkstk_darwin(v13);
  uint64_t v50 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v53 = (uint64_t)&v42 - v17;
  uint64_t v64 = a3;
  uint64_t v65 = &type metadata for Namespace.ID;
  unint64_t v66 = a5;
  unint64_t v67 = v11;
  unint64_t v44 = v11;
  uint64_t v18 = type metadata accessor for IDView();
  uint64_t v46 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v42 - v19;
  uint64_t v21 = type metadata accessor for ModifiedContent();
  uint64_t v60 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v59 = (uint64_t)&v42 - v25;
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  unint64_t v66 = a5;
  unint64_t v67 = a6;
  type metadata accessor for TwoPaneView();
  uint64_t v64 = Namespace.wrappedValue.getter();
  View.id<A>(_:)();
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  uint64_t WitnessTable = swift_getWitnessTable();
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v18);
  v63[4] = WitnessTable;
  v63[5] = &protocol witness table for _FlexFrameLayout;
  uint64_t v43 = v21;
  uint64_t v46 = swift_getWitnessTable();
  sub_10004C704((uint64_t)v23, v21, v59);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v60 + 8);
  uint64_t v45 = v60 + 8;
  unint64_t v49 = v26;
  v26(v23, v21);
  uint64_t v64 = Namespace.wrappedValue.getter();
  uint64_t v27 = v51;
  View.id<A>(_:)();
  sub_10063AEB4();
  uint64_t v28 = v52;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = (uint64_t)v50;
  View.accessibilityHidden(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v27, v28);
  unint64_t v31 = sub_10034B8E4();
  v63[2] = v29;
  v63[3] = v31;
  uint64_t v32 = v54;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = v53;
  sub_10004C704(v30, v32, v53);
  uint64_t v35 = v55;
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v36(v30, v32);
  uint64_t v37 = v59;
  uint64_t v38 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v23, v59, v43);
  uint64_t v64 = (uint64_t)v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v30, v34, v32);
  uint64_t v65 = (void *)v30;
  v63[0] = v38;
  v63[1] = v32;
  uint64_t v61 = v46;
  uint64_t v62 = v33;
  sub_10063ACF0((uint64_t)&v64, 2uLL, (uint64_t)v63);
  v36(v34, v32);
  uint64_t v39 = v49;
  v49((char *)v37, v38);
  v36(v30, v32);
  return v39(v23, v38);
}

uint64_t sub_10063CC54()
{
  return swift_release();
}

uint64_t sub_10063CCC8()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t sub_10063CD68()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  unint64_t v2 = (int *)(type metadata accessor for TwoPaneView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v3 + v2[15]);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10063CEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  __n128 v6 = (void *)v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (void *)v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for TwoPaneView() - 8);
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_10063B360(a1, v10, v5, v6, v7, v8, a2);
}

unint64_t sub_10063CF6C()
{
  unint64_t result = qword_100966410;
  if (!qword_100966410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100966410);
  }
  return result;
}

uint64_t sub_10063CFC0()
{
  return sub_1000DD7A4((uint64_t (*)(void))&type metadata accessor for GeometryProxy);
}

uint64_t sub_10063CFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  __n128 v6 = (void *)v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (void *)v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for TwoPaneView() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  uint64_t v13 = (uint64_t)v2 + ((v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));

  return sub_10063B878(a1, (uint64_t)v2 + v10, v13, v5, v6, v7, v8, a2);
}

uint64_t sub_10063D0F8()
{
  return sub_10063D26C((uint64_t (*)(void, void, void, void, void, void))sub_10063C388);
}

uint64_t sub_10063D110()
{
  return sub_1000DD7A4((uint64_t (*)(void))&type metadata accessor for ScrollViewProxy);
}

uint64_t sub_10063D128()
{
  type metadata accessor for TwoPaneView();
  type metadata accessor for ScrollViewProxy();

  return sub_10063CC54();
}

uint64_t sub_10063D230()
{
  return sub_10063CCC8();
}

uint64_t sub_10063D254()
{
  return sub_10063D26C((uint64_t (*)(void, void, void, void, void, void))sub_10063C5F4);
}

uint64_t sub_10063D26C(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10063D284()
{
  return swift_getWitnessTable();
}

uint64_t sub_10063D55C(uint64_t a1)
{
  v1[20] = a1;
  uint64_t v2 = type metadata accessor for DateInterval();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  return _swift_task_switch(sub_10063D6CC, 0, 0);
}

uint64_t sub_10063D6CC()
{
  long long v117 = v0;
  uint64_t v1 = v0 + 20;
  int v113 = (void *)v0[20];
  uint64_t v3 = v0[28];
  uint64_t v2 = v0[29];
  uint64_t v5 = v0[26];
  uint64_t v4 = v0[27];
  uint64_t v7 = v0[24];
  uint64_t v6 = v0[25];
  static os_log_type_t.default.getter();
  id v8 = HKLogActivity;
  os_log(_:dso:log:_:_:)();

  Date.init()();
  Date.addingTimeInterval(_:)();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v9(v4, v3, v7);
  v9(v5, v2, v7);
  DateInterval.init(start:end:)();
  Class isa = DateInterval._bridgeToObjectiveC()().super.isa;
  id v11 = [v113 workoutsEndingInDateInterval:isa];

  sub_1002DDB04();
  uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 < 0 || (v12 & 0x4000000000000000) != 0) {
    goto LABEL_60;
  }
  uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
LABEL_4:
  v116[0] = v13;
  sub_10063E644(v116);
  uint64_t v14 = v115;
  uint64_t v15 = v1 - 2;
  swift_bridgeObjectRelease();
  uint64_t v16 = v116[0];
  os_log_type_t v17 = static os_log_type_t.default.getter();
  uint64_t v18 = (void *)HKLogActivity;
  uint64_t v109 = (char *)(v1 - 2);
  if (os_log_type_enabled(HKLogActivity, v17))
  {
    swift_retain_n();
    uint64_t v19 = v18;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 134217984;
    uint64_t v21 = v16 & 0x4000000000000000;
    if (v16 < 0 || v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
    }
    else
    {
      uint64_t v22 = *(void *)(v16 + 16);
    }
    swift_release();
    *(v1 - sub_10033A2C8(0, 1) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v19, v17, "[RecentWorkoutAppQuery] Found %ld recent workouts", v20, 0xCu);
    swift_slowDealloc();

    uint64_t v14 = v115;
    uint64_t v15 = v1 - 2;
  }
  else
  {
    uint64_t v21 = v16 & 0x4000000000000000;
  }
  *uint64_t v15 = _swiftEmptyArrayStorage;
  id v23 = [self hiddenAppBundleIdentifiers];
  uint64_t v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if (v16 < 0 || v21)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (v25) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v25 = *(void *)(v16 + 16);
    if (v25)
    {
LABEL_13:
      uint64_t v101 = v1 - 4;
      uint64_t v102 = v1 - 5;
      int v108 = (void **)(v1 - 3);
      unint64_t v26 = v16 & 0xC000000000000001;
      swift_beginAccess();
      unint64_t v27 = 0;
      uint64_t v110 = v16 + 32;
      uint64_t v28 = &selRef_setModalPresentationStyle_;
      *(void *)&long long v29 = 136315394;
      long long v100 = v29;
      uint64_t v107 = v24;
      unint64_t v112 = v16 & 0xC000000000000001;
      uint64_t v114 = v25;
      uint64_t v111 = v16;
      do
      {
        if (v26)
        {
          uint64_t v30 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v27 >= *(void *)(v16 + 16)) {
            goto LABEL_59;
          }
          uint64_t v30 = *(id *)(v110 + 8 * v27);
        }
        uint64_t v1 = v30;
        if (__OFADD__(v27++, 1))
        {
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          unint64_t v87 = swift_bridgeObjectRetain();
          uint64_t v13 = (uint64_t)sub_100369068(v87);
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        id v32 = [v30 v28[344]];
        id v33 = [v32 source];

        LOBYTE(v32) = [v33 _hasFirstPartyBundleID];
        if (v32)
        {

          continue;
        }
        uint64_t v34 = v28;
        id v35 = [v1 v28[344]];
        id v36 = [v35 productType];

        if (!v36) {
          goto LABEL_25;
        }
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v39 = v38;

        v14[13] = v37;
        v14[14] = v39;
        v14[11] = 0x6863746157;
        v14[12] = 0xE500000000000000;
        sub_1000A06D0();
        char v40 = StringProtocol.contains<A>(_:)();
        swift_bridgeObjectRelease();
        if ((v40 & 1) == 0) {
          goto LABEL_25;
        }
        id v41 = [v1 v28[344]];
        id v42 = [v41 source];

        id v43 = [v42 bundleIdentifier];
        uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v46 = v45;

        uint64_t v47 = sub_10063F790(v44, v46);
        unint64_t v49 = v48;
        swift_bridgeObjectRelease();
        if (!v49)
        {
LABEL_25:
          id v50 = [v1 v34[344] v100];
          id v51 = [v50 source];

          id v52 = [v51 bundleIdentifier];
          uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v49 = v53;
        }
        swift_bridgeObjectRetain();
        char v54 = sub_1003B0DF0(v47, v49, v24);
        swift_bridgeObjectRelease();
        if (v54)
        {
          swift_bridgeObjectRelease();
          static os_log_type_t.debug.getter();
          id v55 = HKLogActivity;
          os_log(_:dso:log:_:_:)();

LABEL_37:
          unint64_t v26 = v112;
          uint64_t v25 = v114;
          uint64_t v28 = v34;
          uint64_t v16 = v111;
          continue;
        }
        id v56 = objc_allocWithZone((Class)LSApplicationRecord);
        swift_bridgeObjectRetain();
        NSString v57 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        void *v108 = 0;
        id v58 = [v56 initWithBundleIdentifier:v57 allowPlaceholder:0 error:v108];

        uint64_t v59 = *v108;
        if (!v58)
        {
          id v69 = v59;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          swift_errorRelease();
          goto LABEL_34;
        }
        id v60 = v59;
        id v61 = [v58 applicationState];
        unsigned __int8 v62 = [v61 isInstalled];

        if ((v62 & 1) == 0)
        {

LABEL_34:
          os_log_type_t v70 = static os_log_type_t.error.getter();
          unsigned int v71 = (void *)HKLogActivity;
          os_log_type_t v72 = v70;
          uint64_t v24 = v107;
          if (os_log_type_enabled(HKLogActivity, v70))
          {
            swift_bridgeObjectRetain();
            uint64_t v73 = v71;
            uint64_t v74 = swift_slowAlloc();
            v116[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v74 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v74 + 4) = sub_10008F1F4(v47, v49, v116);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v73, v72, "[RecentWorkoutAppQuery] Found workout with %s but app is not installed on device, skipping.", (uint8_t *)v74, 0xCu);
            swift_arrayDestroy();
            uint64_t v14 = v115;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          goto LABEL_37;
        }
        id v63 = [v58 localizedName];
        uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        os_log_t log = v64;

        id v65 = [v58 teamIdentifier];
        if (v65)
        {
          unint64_t v66 = v65;
          uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v68 = v67;
        }
        else
        {
          uint64_t v103 = 0;
          unint64_t v68 = 0xE000000000000000;
        }
        uint64_t v75 = *(void **)v109;
        uint64_t v76 = *(void *)(*(void *)v109 + 16);
        if (v76)
        {
          uint64_t v77 = v75 + 7;
          while (1)
          {
            BOOL v78 = *(v77 - 1) == v47 && *v77 == v49;
            if (v78 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              break;
            }
            v77 += 8;
            if (!--v76) {
              goto LABEL_47;
            }
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_47:
          swift_beginAccess();
          uint64_t v75 = *(void **)v109;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v75 = sub_1001E8844(0, v75[2] + 1, 1, v75);
          }
          unint64_t v80 = v75[2];
          unint64_t v79 = v75[3];
          if (v80 >= v79 >> 1) {
            uint64_t v75 = sub_1001E8844((void *)(v79 > 1), v80 + 1, 1, v75);
          }
          v75[2] = v80 + 1;
          uint64_t v81 = &v75[8 * v80];
          v81[4] = v104;
          v81[5] = log;
          v81[6] = v47;
          v81[7] = v49;
          v81[8] = v103;
          v81[9] = v68;
          v81[10] = 0;
          *((unsigned char *)v81 + 88) = 1;
          *(void *)uint64_t v109 = v75;
          swift_endAccess();
          os_log_type_t v82 = static os_log_type_t.debug.getter();
          uint64_t v83 = (void *)HKLogActivity;
          os_log_type_t v84 = v82;
          if (os_log_type_enabled(HKLogActivity, v82))
          {
            swift_bridgeObjectRetain();
            loga = v83;
            uint64_t v85 = swift_slowAlloc();
            v116[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v85 = v100;
            swift_bridgeObjectRetain();
            *uint64_t v102 = sub_10008F1F4(v47, v49, v116);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v85 + 12) = 2048;
            uint64_t v75 = *(void **)v109;
            *uint64_t v101 = *(void *)(*(void *)v109 + 16);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, loga, v84, "[RecentWorkoutAppQuery] Added %s to list of recommended workout apps [%ld/4].", (uint8_t *)v85, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            goto LABEL_56;
          }
        }
        swift_bridgeObjectRelease();
LABEL_56:
        unint64_t v86 = v75[2];
        uint64_t v25 = v114;
        uint64_t v14 = v115;
        uint64_t v24 = v107;
        uint64_t v28 = v34;
        uint64_t v16 = v111;
        unint64_t v26 = v112;
        if (v86 > 3) {
          break;
        }
      }
      while (v27 != v25);
    }
  }
  uint64_t v88 = v115[29];
  uint64_t v89 = v115[28];
  uint64_t v90 = v115[25];
  uint64_t v91 = v115[24];
  uint64_t v92 = v115[23];
  uint64_t v93 = v115[22];
  uint64_t v94 = v115[21];
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v95 = swift_bridgeObjectRetain();
  uint64_t v96 = sub_1001E59B4(v95);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v92, v94);
  uint64_t v97 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
  v97(v89, v91);
  v97(v88, v91);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v98 = (uint64_t (*)(void *))v115[1];
  return v98(v96);
}

void sub_10063E3BC(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  id v8 = [a1 counterpartIdentifiers];
  if (v8)
  {
    uint64_t v9 = v8;
    unint64_t v10 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v9) = sub_1003B0608(a2, a3, v10);
    swift_bridgeObjectRelease();
    if (v9)
    {
      id v11 = [a1 bundleIdentifier];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        swift_beginAccess();
        *(void *)(a4 + 16) = v13;
        *(void *)(a4 + 24) = v15;
        swift_bridgeObjectRelease();
        os_log_type_t v16 = static os_log_type_t.debug.getter();
        os_log_type_t v17 = (void *)HKLogActivity;
        os_log_type_t v18 = v16;
        if (os_log_type_enabled(HKLogActivity, v16))
        {
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          uint64_t v19 = v17;
          uint64_t v20 = swift_slowAlloc();
          uint64_t v23 = swift_slowAlloc();
          *(_DWORD *)uint64_t v20 = 136315394;
          swift_bridgeObjectRetain();
          sub_10008F1F4(a2, a3, &v23);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v20 + 12) = 2080;
          swift_beginAccess();
          sub_1000AFA94((uint64_t *)&unk_100958790);
          uint64_t v21 = Optional.description.getter();
          sub_10008F1F4(v21, v22, &v23);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v19, v18, "[RecentWorkoutAppQuery] Found companion bundle ID for %s => %s.", (uint8_t *)v20, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
      }
    }
  }
}

uint64_t sub_10063E644(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1001F11C4(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10063E6C0(v6);
  return specialized ContiguousArray._endMutation()();
}

void sub_10063E6C0(uint64_t *a1)
{
  uint64_t v136 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  long long v135 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unsigned __int8 v134 = (char *)&v121 - v5;
  Swift::Int v6 = a1[1];
  Swift::Int v7 = _minimumMergeRunLength(_:)(v6);
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      sub_10063F048(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_142;
  }
  Swift::Int v126 = v7;
  if (v6 < 2)
  {
    id v11 = (char *)_swiftEmptyArrayStorage;
    uint64_t v139 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v131 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = _swiftEmptyArrayStorage[2];
LABEL_100:
      uint64_t v112 = v132;
      if (v14 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_129;
          }
          if (!v113) {
            goto LABEL_141;
          }
          uint64_t v115 = v11;
          uint64_t v116 = v11 + 32;
          uint64_t v117 = *(void *)&v11[16 * v114 + 32];
          uint64_t v118 = *(void *)&v11[16 * v14 + 24];
          sub_10063F280(v113 + 8 * v117, (id *)(v113 + 8 * *(void *)&v116[16 * v14 - 16]), (id *)(v113 + 8 * v118), v131);
          if (v112) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v115 = sub_1001EEF68((uint64_t)v115);
          }
          if (v114 >= *((void *)v115 + 2)) {
            goto LABEL_131;
          }
          int v119 = &v115[16 * v114 + 32];
          *(void *)int v119 = v117;
          *((void *)v119 + sub_10033A2C8(0, 1) = v118;
          unint64_t v120 = *((void *)v115 + 2);
          if (v14 > v120) {
            goto LABEL_132;
          }
          id v11 = v115;
          memmove(&v115[16 * v14 + 16], &v115[16 * v14 + 32], 16 * (v120 - v14));
          *((void *)v115 + 2) = v120 - 1;
          unint64_t v14 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1002DDB04();
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v131 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v139 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  unsigned __int8 v133 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v124 = v13 + 16;
  uint64_t v122 = a1;
  uint64_t v123 = v13 - 8;
  id v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v129 = v6;
  uint64_t v137 = v13;
  while (1)
  {
    uint64_t v15 = v12;
    Swift::Int v16 = v12 + 1;
    uint64_t v128 = v12;
    if (v12 + 1 < v6)
    {
      os_log_type_t v17 = *(void **)(v13 + 8 * v12);
      id v18 = *(id *)(v13 + 8 * v16);
      id v19 = v17;
      id v20 = [v18 startDate];
      uint64_t v21 = v134;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v22 = [v19 startDate];
      uint64_t v23 = v135;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LODWORD(v138) = static Date.> infix(_:_:)();
      uint64_t v24 = *v133;
      uint64_t v25 = v23;
      uint64_t v26 = v136;
      (*v133)(v25, v136);
      v24(v21, v26);

      Swift::Int v6 = v129;
      Swift::Int v16 = v15 + 2;
      if (v15 + 2 < v6)
      {
        uint64_t v125 = v11;
        unint64_t v27 = (id *)(v124 + 8 * v15);
        while (1)
        {
          uint64_t v28 = *(v27 - 1);
          id v29 = *v27;
          id v30 = v28;
          id v31 = [v29 startDate];
          id v32 = v134;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          id v33 = [v30 startDate];
          uint64_t v34 = v135;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          LODWORD(v33) = static Date.> infix(_:_:)();
          id v35 = v34;
          uint64_t v36 = v136;
          v24(v35, v136);
          v24(v32, v36);

          if ((v138 ^ v33)) {
            break;
          }
          ++v27;
          Swift::Int v6 = v129;
          if (v129 == ++v16)
          {
            Swift::Int v16 = v129;
            id v11 = v125;
            goto LABEL_22;
          }
        }
        id v11 = v125;
        Swift::Int v6 = v129;
LABEL_22:
        uint64_t v15 = v128;
      }
      uint64_t v13 = v137;
      if (v138)
      {
        if (v16 < v15) {
          goto LABEL_135;
        }
        if (v15 < v16)
        {
          uint64_t v37 = (uint64_t *)(v123 + 8 * v16);
          Swift::Int v38 = v16;
          uint64_t v39 = v15;
          char v40 = (uint64_t *)(v137 + 8 * v15);
          do
          {
            if (v39 != --v38)
            {
              if (!v13) {
                goto LABEL_140;
              }
              uint64_t v41 = *v40;
              *char v40 = *v37;
              *uint64_t v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 >= v6) {
      goto LABEL_50;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_133;
    }
    if (v16 - v15 >= v126) {
      goto LABEL_50;
    }
    if (__OFADD__(v15, v126)) {
      goto LABEL_136;
    }
    Swift::Int v42 = v15 + v126 >= v6 ? v6 : v15 + v126;
    if (v42 < v15) {
      break;
    }
    if (v16 != v42)
    {
      uint64_t v125 = v11;
      uint64_t v43 = v123 + 8 * v16;
      Swift::Int v127 = v42;
      do
      {
        uint64_t v44 = *(void **)(v13 + 8 * v16);
        uint64_t v45 = v15;
        uint64_t v130 = v43;
        while (1)
        {
          Swift::Int v46 = v16;
          uint64_t v47 = *(void **)v43;
          id v48 = v44;
          id v138 = v48;
          id v49 = v47;
          id v50 = [v48 startDate];
          id v51 = v134;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          id v52 = [v49 startDate];
          unint64_t v53 = v135;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v52) = static Date.> infix(_:_:)();
          char v54 = *v133;
          id v55 = v53;
          uint64_t v56 = v136;
          (*v133)(v55, v136);
          v54(v51, v56);

          if ((v52 & 1) == 0) {
            break;
          }
          uint64_t v13 = v137;
          if (!v137) {
            goto LABEL_138;
          }
          Swift::Int v16 = v46;
          NSString v57 = *(void **)v43;
          uint64_t v44 = *(void **)(v43 + 8);
          *(void *)uint64_t v43 = v44;
          *(void *)(v43 + 8) = v57;
          v43 -= 8;
          if (v46 == ++v45) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v137;
        Swift::Int v16 = v46;
LABEL_43:
        ++v16;
        uint64_t v43 = v130 + 8;
        uint64_t v15 = v128;
      }
      while (v16 != v127);
      Swift::Int v16 = v127;
      id v11 = v125;
    }
LABEL_50:
    if (v16 < v15) {
      goto LABEL_128;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v138 = (id)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      id v11 = sub_1001EE868(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v60 = *((void *)v11 + 2);
    unint64_t v59 = *((void *)v11 + 3);
    unint64_t v14 = v60 + 1;
    uint64_t v13 = v137;
    if (v60 >= v59 >> 1)
    {
      uint64_t v111 = sub_1001EE868((char *)(v59 > 1), v60 + 1, 1, v11);
      uint64_t v13 = v137;
      id v11 = v111;
    }
    *((void *)v11 + 2) = v14;
    id v61 = v11 + 32;
    unsigned __int8 v62 = &v11[16 * v60 + 32];
    id v63 = v138;
    *(void *)unsigned __int8 v62 = v15;
    *((void *)v62 + sub_10033A2C8(0, 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v14 - 1;
        if (v14 >= 4)
        {
          id v69 = &v61[16 * v14];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_117;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_118;
          }
          unint64_t v76 = v14 - 2;
          uint64_t v77 = &v61[16 * v14 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_120;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_123;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_127;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v93 = *((void *)v11 + 4);
            uint64_t v94 = *((void *)v11 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_81;
          }
          uint64_t v66 = *((void *)v11 + 4);
          uint64_t v65 = *((void *)v11 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_119;
        }
        unint64_t v76 = v14 - 2;
        os_log_type_t v82 = &v61[16 * v14 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_122;
        }
        uint64_t v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_125;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_126;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_87:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v87) {
          goto LABEL_121;
        }
        uint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_124;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v14)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13) {
          goto LABEL_139;
        }
        uint64_t v104 = v11;
        uint64_t v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        uint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        uint64_t v109 = v132;
        sub_10063F280(v13 + 8 * *(void *)v105, (id *)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * v108), v131);
        uint64_t v132 = v109;
        if (v109) {
          goto LABEL_111;
        }
        if (v108 < v106) {
          goto LABEL_114;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_115;
        }
        *(void *)uint64_t v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        unint64_t v110 = *((void *)v104 + 2);
        if (v64 >= v110) {
          goto LABEL_116;
        }
        id v11 = v104;
        unint64_t v14 = v110 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v110 - 1 - v64));
        *((void *)v104 + 2) = v110 - 1;
        uint64_t v13 = v137;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    Swift::Int v6 = v129;
    uint64_t v12 = (uint64_t)v138;
    if ((uint64_t)v138 >= v129)
    {
      a1 = v122;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10063F048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v30 = a1;
  uint64_t v35 = type metadata accessor for Date();
  __chkstk_darwin(v35);
  uint64_t v34 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v33 = (char *)&v28 - v10;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v32 = v9 + 8;
    uint64_t v36 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
    uint64_t v13 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    unint64_t v14 = *(void **)(v36 + 8 * a3);
    uint64_t v15 = v30;
    uint64_t v31 = v12;
    while (1)
    {
      Swift::Int v16 = *(void **)v12;
      id v17 = v14;
      id v37 = v17;
      id v18 = v16;
      id v19 = [v17 startDate];
      id v20 = v33;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v21 = [v18 startDate];
      id v22 = v34;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v2sub_10033A2C8(0, 1) = static Date.> infix(_:_:)();
      uint64_t v23 = a3;
      uint64_t v24 = *v13;
      uint64_t v25 = v22;
      uint64_t v26 = v35;
      (*v13)(v25, v35);
      v24(v20, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        uint64_t v12 = v31 + 8;
        if (v23 + 1 == v29) {
          return;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      unint64_t v27 = *(void **)v12;
      unint64_t v14 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v14;
      *(void *)(v12 + 8) = v27;
      v12 -= 8;
      if (v23 == ++v15) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_10063F280(uint64_t a1, id *a2, id *a3, void **a4)
{
  uint64_t v57 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v54 = a3;
  id v55 = (char *)&v48 - v12;
  uint64_t v13 = (uint64_t)a2 - a1;
  uint64_t v14 = v13 / 8;
  uint64_t v15 = a2;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 8;
  id v61 = v11;
  unint64_t v60 = a4;
  id v58 = v11;
  if (v13 / 8 >= v16 / 8)
  {
    if (v16 < -7) {
      goto LABEL_41;
    }
    if (a4 != v15 || &v15[v17] <= a4)
    {
      memmove(a4, v15, 8 * v17);
      uint64_t v11 = v58;
    }
    uint64_t v31 = &a4[v17];
    unint64_t v59 = v31;
    id v61 = v15;
    if (v16 < 8 || v11 >= v15) {
      goto LABEL_40;
    }
    id v49 = (void (**)(char *, uint64_t))(v8 + 8);
    id v50 = a4;
    uint64_t v32 = v54 - 1;
    id v33 = v15;
    while (1)
    {
      char v54 = v15;
      id v52 = v31;
      unint64_t v53 = v32 + 1;
      uint64_t v35 = v31 - 1;
      uint64_t v36 = *--v33;
      id v37 = *(v31 - 1);
      id v51 = v37;
      id v38 = v36;
      id v39 = [v37 startDate];
      char v40 = v55;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v41 = [v38 startDate];
      Swift::Int v42 = v56;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v4sub_10033A2C8(0, 1) = static Date.> infix(_:_:)();
      uint64_t v43 = *v49;
      uint64_t v44 = v42;
      uint64_t v45 = v57;
      (*v49)(v44, v57);
      v43(v40, v45);

      if (v41) {
        break;
      }
      unint64_t v59 = v35;
      if (v53 < v52 || v32 >= v52)
      {
        id *v32 = *v35;
        id v33 = v54;
        uint64_t v31 = v35;
        goto LABEL_28;
      }
      unint64_t v46 = (unint64_t)v50;
      uint64_t v34 = v58;
      id v33 = v54;
      if (v53 != v52) {
        id *v32 = *v35;
      }
      uint64_t v31 = v35;
      if ((unint64_t)v35 <= v46) {
        goto LABEL_40;
      }
LABEL_29:
      --v32;
      uint64_t v15 = v33;
      if (v33 <= v34) {
        goto LABEL_40;
      }
    }
    uint64_t v31 = v52;
    if (v53 != v54 || v32 >= v54) {
      id *v32 = *v33;
    }
    id v61 = v33;
LABEL_28:
    uint64_t v34 = v58;
    if (v31 <= v50) {
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  if (v13 >= -7)
  {
    if (a4 != v11 || &v11[v14] <= a4)
    {
      memmove(a4, v58, 8 * v14);
      uint64_t v11 = v58;
    }
    unint64_t v53 = &a4[v14];
    unint64_t v59 = v53;
    if (v13 >= 8 && v15 < v54)
    {
      id v52 = (void **)(v8 + 8);
      id v18 = v55;
      do
      {
        id v58 = v11;
        id v19 = *a4;
        id v20 = *v15;
        id v21 = v19;
        id v22 = a4;
        id v23 = [v20 startDate];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        id v24 = [v21 startDate];
        uint64_t v25 = v56;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v24) = static Date.> infix(_:_:)();
        uint64_t v26 = (void (*)(char *, uint64_t))*v52;
        unint64_t v27 = v25;
        uint64_t v28 = v57;
        ((void (*)(char *, uint64_t))*v52)(v27, v57);
        v26(v18, v28);

        if (v24)
        {
          a4 = v22;
          unint64_t v29 = (unint64_t)(v15 + 1);
          uint64_t v30 = v58;
          if (v58 < v15 || (unint64_t)v58 >= v29 || v58 != v15) {
            *id v58 = *v15;
          }
        }
        else
        {
          uint64_t v30 = v58;
          if (v58 != v22) {
            *id v58 = *v22;
          }
          a4 = v22 + 1;
          unint64_t v60 = v22 + 1;
          unint64_t v29 = (unint64_t)v15;
        }
        uint64_t v11 = v30 + 1;
        id v61 = v11;
        if (a4 >= v53) {
          break;
        }
        uint64_t v15 = (id *)v29;
      }
      while (v29 < (unint64_t)v54);
    }
LABEL_40:
    sub_1001EE998(&v61, &v60, &v59);
    return 1;
  }
LABEL_41:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10063F790(uint64_t a1, unint64_t a2)
{
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  uint64_t v5 = (void *)HKLogActivity;
  os_log_type_t v6 = v4;
  if (os_log_type_enabled(HKLogActivity, v4))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v7 = v5;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_10008F1F4(a1, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v6, "[RecentWorkoutAppQuery] Looking for companion bundle ID for %s.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  id v10 = [self enumeratorWithOptions:0];
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_10063FB0C;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = (uint64_t)sub_1003498DC;
  aBlock[5] = v12;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100346D60;
  aBlock[3] = (uint64_t)&unk_1008D2E80;
  uint64_t v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  [v10 swift_forEach:v13];

  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    uint64_t v16 = *(void *)(v9 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    return v16;
  }
  return result;
}

uint64_t sub_10063FA94()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10063FACC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_10063FB0C(void *a1)
{
  sub_10063E3BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10063FB18()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for RecentWorkoutAppQuery()
{
  return &type metadata for RecentWorkoutAppQuery;
}

void sub_10063FB38()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController);
  id v2 = [v1 view];
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 bounds];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    v23.origin.x = v5;
    v23.origin.y = v7;
    v23.size.width = v9;
    v23.size.height = v11;
    CGRectGetWidth(v23);
    uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView);
    [v12 adjustedContentInset];
    [v12 adjustedContentInset];
    id v13 = [v1 view];
    if (v13)
    {
      uint64_t v14 = v13;
      [v13 bounds];
      CGFloat v16 = v15;
      CGFloat v18 = v17;
      CGFloat v20 = v19;
      CGFloat v22 = v21;

      v24.origin.x = v16;
      v24.origin.y = v18;
      v24.size.width = v20;
      v24.size.height = v22;
      CGRectGetHeight(v24);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

char *sub_10063FC7C(void *a1, char *a2, uint64_t a3)
{
  id v34 = a1;
  uint64_t v35 = a3;
  uint64_t v5 = type metadata accessor for SeymourArtworkSizingBehavior();
  __chkstk_darwin(v5);
  CGFloat v7 = (id *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController;
  id v9 = objc_allocWithZone((Class)UIViewController);
  double v10 = v3;
  *(void *)&v3[v8] = [v9 init];
  uint64_t v11 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView;
  id v12 = [objc_allocWithZone((Class)UIScrollView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setPagingEnabled:1];
  [v12 setShowsHorizontalScrollIndicator:0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v10[v11] = v12;
  *(void *)&v10[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageCount] = 0;

  uint64_t v13 = *(void *)&v3[v8];
  uint64_t v14 = (objc_class *)type metadata accessor for WorkoutDetailGuidedRunMMGalleryViewController();
  v36.receiver = v10;
  v36.super_class = v14;
  double v15 = [v36 initWithRootViewController:v13];
  uint64_t v16 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController;
  double v17 = *(void **)&v15[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController];
  CGFloat v18 = v15;
  uint64_t result = (char *)[v17 view];
  if (result)
  {
    CGFloat v20 = result;
    id v21 = [self systemBackgroundColor];
    [v20 setBackgroundColor:v21];

    id v22 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v18 action:"doneButtonTapped"];
    id v23 = [*(id *)&v15[v16] navigationItem];
    [v23 setRightBarButtonItem:v22];

    CGRect v24 = *(void **)&v18[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView];
    [v24 setDelegate:v18];
    uint64_t result = (char *)[*(id *)&v15[v16] view];
    if (result)
    {
      uint64_t v25 = result;
      [result addSubview:v24];

      sub_100640008();
      uint64_t v26 = (char *)v7 + *(int *)(sub_1000AFA94((uint64_t *)&unk_100966460) + 48);
      sub_10063FB38();
      *CGFloat v7 = v27;
      v7[1] = v28;
      uint64_t v29 = enum case for ArtworkDimension.width(_:);
      uint64_t v30 = type metadata accessor for ArtworkDimension();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v26, v29, v30);
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = *(void *)&a2[OBJC_IVAR___CHFitnessAppContext_seymourCatalogItemDataProvider];
      uint64_t v32 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v33 = v34;
      sub_100494A88(v33, (uint64_t)v7, v31, v33, v32, v35);

      sub_100388CE4((uint64_t)v7);
      swift_release();
      return v18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100640008()
{
  sub_1000AFA94((uint64_t *)&unk_10095B850);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100751160;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView);
  id v3 = [v2 topAnchor];
  double v4 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController);
  id v5 = [v4 view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = v5;
  id v7 = [v5 layoutMarginsGuide];

  id v8 = [v7 topAnchor];
  id v9 = [v3 constraintEqualToAnchor:v8];

  *(void *)(v1 + 32) = v9;
  id v10 = [v2 leadingAnchor];
  id v11 = [v4 view];
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v12 = v11;
  id v13 = [v11 leadingAnchor];

  id v14 = [v10 constraintEqualToAnchor:v13];
  *(void *)(v1 + 40) = v14;
  id v15 = [v2 trailingAnchor];
  id v16 = [v4 view];
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v17 = v16;
  id v18 = [v16 trailingAnchor];

  id v19 = [v15 constraintEqualToAnchor:v18];
  *(void *)(v1 + 48) = v19;
  id v20 = [v2 bottomAnchor];
  id v21 = [v4 view];
  if (!v21)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v22 = v21;
  id v23 = self;
  id v24 = [v22 layoutMarginsGuide];

  id v25 = [v24 bottomAnchor];
  id v26 = [v20 constraintEqualToAnchor:v25];

  *(void *)(v1 + 56) = v26;
  specialized Array._endMutation()();
  sub_10007E2D8(0, (unint64_t *)&qword_10094C810);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 activateConstraints:isa];
}

void sub_10064033C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v7 = (char *)Strong;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      *(void *)&v7[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageCount] = v8;
    }
    swift_beginAccess();
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    if (v9)
    {
      id v10 = (void *)v9;
      sub_100640520(a1, a4);
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    id v12 = (void *)HKLogActivity;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10074E640;
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_1000AA64C();
    *(void *)(v13 + 32) = 0xD000000000000039;
    *(void *)(v13 + 40) = 0x80000001007CA600;
    *(void *)(v13 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
    *(void *)(v13 + 104) = sub_1002320AC();
    *(void *)(v13 + 72) = a2;
    id v14 = v12;
    id v15 = a2;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
  }
}

id sub_100640520(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  sub_100640A34(a2);
  id v5 = *(void **)((char *)v2
                + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController);
  id result = [v5 view];
  if (result)
  {
    id v7 = result;
    id v55 = v5;
    [result frame];
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    CGFloat v15 = v14;

    v58.origin.x = v9;
    v58.origin.y = v11;
    v58.size.width = v13;
    v58.size.height = v15;
    double Width = CGRectGetWidth(v58);
    if (a1 >> 62) {
      goto LABEL_27;
    }
    uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      id v18 = *(void **)((char *)v2
                     + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView);
      [v18 bounds];
      [v18 setContentSize:Width * (double)v17, CGRectGetHeight(v59)];
      id v56 = v18;
      [v18 setContentOffset:CGPointMake(0, Width * (double)v3) animated:0.0];
      id v2 = _swiftEmptyArrayStorage;
      if (v17)
      {
        id result = (id)specialized ContiguousArray.reserveCapacity(_:)();
        if (v17 < 0)
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          break;
        }
        id v19 = self;
        uint64_t v20 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v21 = *(id *)(a1 + 8 * v20 + 32);
          }
          id v22 = v21;
          ++v20;
          id v23 = [objc_allocWithZone((Class)UIImageView) initWithImage:v21];
          id v24 = (void *)UIView.withContentMode(_:)();

          id v25 = [v24 layer];
          [v25 setCornerRadius:6.0];

          [v24 setClipsToBounds:1];
          id v26 = [v19 redColor];
          [v24 setBackgroundColor:v26];

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        while (v17 != v20);
        id v2 = _swiftEmptyArrayStorage;
      }
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        a1 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!a1)
        {
LABEL_23:
          return (id)swift_bridgeObjectRelease();
        }
      }
      else
      {
        a1 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!a1) {
          goto LABEL_23;
        }
      }
      uint64_t v27 = 4;
      while (1)
      {
        uint64_t v3 = v27 - 4;
        id v28 = ((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : (id)_swiftEmptyArrayStorage[v27];
        uint64_t v29 = v28;
        uint64_t v30 = v27 - 3;
        if (__OFADD__(v3, 1)) {
          break;
        }
        id result = [v55 view];
        if (!result) {
          goto LABEL_31;
        }
        uint64_t v31 = result;
        [result bounds];
        CGFloat v33 = v32;
        CGFloat v35 = v34;
        CGFloat v37 = v36;
        CGFloat v39 = v38;

        v60.origin.x = v33;
        v60.origin.y = v35;
        v60.size.width = v37;
        v60.size.height = v39;
        double v40 = CGRectGetWidth(v60);
        [v56 adjustedContentInset];
        [v56 adjustedContentInset];
        id result = [v55 view];
        if (!result) {
          goto LABEL_32;
        }
        id v41 = result;
        [result bounds];
        CGFloat v43 = v42;
        CGFloat v45 = v44;
        CGFloat v47 = v46;
        CGFloat v49 = v48;

        v61.origin.x = v43;
        v61.origin.y = v45;
        v61.size.width = v47;
        v61.size.height = v49;
        id result = [v55 view:CGRectGetHeight(v61)];
        if (!result) {
          goto LABEL_33;
        }
        id v50 = result;
        [result center];
        double v52 = v51;

        [v29 intrinsicContentSize];
        double v54 = v53;
        [v56 bounds];
        [v29 setFrame:CGRectMake(Width * (double)v3 + v52 - (v40 + -50.0) * 0.5, CGRectGetHeight(v62) * 0.5 - v54 * 0.5, v40 + -50.0, v54)];
        [v56 addSubview:v29];

        ++v27;
        id v2 = _swiftEmptyArrayStorage;
        if (v30 == a1) {
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

void sub_100640A34(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    double v4 = self;
    id v5 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v3];
    id v6 = [v4 stringWithNumber:v5 decimalPrecision:1];

    if (v6)
    {
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v9 = v10;
    }
    id v11 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)(v2 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageCount)];
    id v12 = [v4 stringWithNumber:v11 decimalPrecision:1];

    if (v12)
    {
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v15 = v16;
    }
    uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController);
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10074E640;
    *(void *)(v18 + 56) = &type metadata for String;
    unint64_t v19 = sub_1000AA64C();
    *(void *)(v18 + 32) = v7;
    *(void *)(v18 + 40) = v9;
    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v19;
    *(void *)(v18 + 64) = v19;
    *(void *)(v18 + 72) = v13;
    *(void *)(v18 + 80) = v15;
    String.init(format:_:)();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v17 setTitle:v20];
  }
}

void sub_100640C84(void *a1)
{
  [a1 contentOffset];
  double v3 = v2;
  [a1 frame];
  double v5 = v3 / v4;
  if ((~COERCE__INT64(v3 / v4) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return;
  }

  sub_100640A34((uint64_t)v5);
}

id sub_100640E24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutDetailGuidedRunMMGalleryViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutDetailGuidedRunMMGalleryViewController()
{
  return self;
}

void sub_100640EC8()
{
  uint64_t v1 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_rootViewController;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIViewController) init];
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageScrollView;
  id v3 = [objc_allocWithZone((Class)UIScrollView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v3 setPagingEnabled:1];
  [v3 setShowsHorizontalScrollIndicator:0];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v2] = v3;
  *(void *)&v0[OBJC_IVAR____TtC10FitnessApp45WorkoutDetailGuidedRunMMGalleryViewController_imageCount] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100640FD0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100641008()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer);
  uint64_t v2 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors;
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors), "gradientLightColor"));
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v4 = v3;
  id v5 = [v3 CGColor];

  [v1 setStrokeColor:v5];
  id v6 = *(void **)(v0 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer);
  sub_1000AFA94((uint64_t *)&unk_1009556C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10074E640;
  id v8 = [*(id *)(v0 + v2) gradientDarkColor];
  if (!v8)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  id v10 = [v8 CGColor];

  type metadata accessor for CGColor(0);
  uint64_t v12 = v11;
  *(void *)(v7 + 56) = v11;
  *(void *)(v7 + 32) = v10;
  id v13 = [self clearColor];
  id v14 = [v13 CGColor];

  *(void *)(v7 + 88) = v12;
  *(void *)(v7 + 64) = v14;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 setColors:isa];
}

void sub_1006411B8()
{
  uint64_t v1 = v0;
  [v0 bounds];
  if (!CGRectIsEmpty(v48))
  {
    id v2 = [objc_allocWithZone((Class)UIBezierPath) init];
    [v1 bounds];
    [v2 moveToPoint:0.0, CGRectGetMaxY(v49)];
    [v1 bounds];
    double MaxX = CGRectGetMaxX(v50);
    [v1 bounds];
    double v40 = v2;
    [v2 addLineToPoint:MaxX, CGRectGetMaxY(v51)];
    id v4 = [objc_allocWithZone((Class)UIBezierPath) init];
    [v1 bounds];
    [v4 moveToPoint:0.0, CGRectGetMaxY(v52)];
    [v1 bounds];
    double v5 = CGRectGetMaxX(v53);
    [v1 bounds];
    CGFloat v39 = v4;
    [v4 addLineToPoint:v5, CGRectGetMaxY(v54)];
    id v41 = [objc_allocWithZone((Class)UIBezierPath) init];
    id v6 = [objc_allocWithZone((Class)UIBezierPath) init];
    [v1 bounds];
    id v43 = v6;
    [v6 moveToPoint:0.0, CGRectGetMaxY(v55)];
    uint64_t v7 = (double *)&v1[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram];
    unint64_t v8 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram] + 16);
    uint64_t v9 = v1;
    [v1 bounds];
    double Width = CGRectGetWidth(v56);
    if (v8 >= 2) {
      double Width = Width / (double)(*(void *)(*(void *)v7 + 16) - 1);
    }
    [v1 bounds];
    double MaxY = CGRectGetMaxY(v57);
    uint64_t v12 = *(void *)(*(void *)v7 + 16);
    if (v12)
    {
      double v13 = MaxY;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = (float64x2_t *)_swiftEmptyArrayStorage;
      while (1)
      {
        double MaxY = v7[3];
        double v20 = 0.0;
        if (MaxY < 2.22044605e-16) {
          goto LABEL_11;
        }
        if ((unint64_t)v15 < *(void *)(*(void *)v7 + 16))
        {
          uint64_t v24 = *(void *)v7 + v14;
          if ((*(unsigned char *)(v24 + 48) & 1) == 0) {
            break;
          }
        }
LABEL_9:
        ++v15;
        v14 += 24;
        if (v12 == v15) {
          goto LABEL_19;
        }
      }
      double v20 = *(double *)(v24 + 32) / MaxY;
LABEL_11:
      [v9 bounds];
      double Height = CGRectGetHeight(v58);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = (float64x2_t *)sub_1001E8A84(0, *(void *)&v16[1].f64[0] + 1, 1, v16);
      }
      unint64_t v23 = *(void *)&v16[1].f64[0];
      unint64_t v22 = *(void *)&v16[1].f64[1];
      if (v23 >= v22 >> 1) {
        uint64_t v16 = (float64x2_t *)sub_1001E8A84((void *)(v22 > 1), v23 + 1, 1, v16);
      }
      double v17 = v13 - v20 * Height;
      *(void *)&v16[1].f64[0] = v23 + 1;
      f64 = v16[v23].f64;
      f64[4] = Width * (double)v15;
      f64[5] = v17;
      unint64_t v19 = &selRef_moveToPoint_;
      if (v15) {
        unint64_t v19 = &selRef_addLineToPoint_;
      }
      [v41 *v19:Width * (double)v15, v17];
      [v43 addLineToPoint:Width * (double)v15, v17];
      goto LABEL_9;
    }
    uint64_t v16 = (float64x2_t *)_swiftEmptyArrayStorage;
LABEL_19:
    [v9 bounds:MaxY];
    double v25 = CGRectGetMaxX(v59);
    [v9 bounds];
    [v43 addLineToPoint:v25, CGRectGetMaxY(v60)];
    [v9 bounds];
    [v43 addLineToPoint:0.0, CGRectGetMaxY(v61)];
    id v26 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath];
    *(void *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath] = v40;
    id v27 = v40;

    id v28 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath];
    *(void *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath] = v39;
    id v29 = v39;

    if (v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_interpolatesCurvedPath] == 1)
    {
      sub_10053DC68(v16, (uint64_t)v45);
      id v30 = v45[0];
      swift_bridgeObjectRelease();
      sub_10064227C((uint64_t)v45, (uint64_t)&v46);
      uint64_t v31 = v46;
      if (v46)
      {
        double v32 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath];
        *(void *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath] = v46;
        id v33 = v30;

        [v31 copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_1006422E4();
        if (swift_dynamicCast())
        {
          [v9 bounds];
          double v34 = CGRectGetMaxX(v62);
          [v9 bounds];
          [v44 addLineToPoint:v34, CGRectGetMaxY(v63)];
          [v9 bounds];
          [v44 addLineToPoint:0.0, CGRectGetMaxY(v64)];
          [v44 closePath];
          CGFloat v35 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath];
          *(void *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath] = v44;
          id v36 = v44;

          sub_100642324(v45);
        }
        else
        {

          sub_100642324(v45);
        }
      }
      else
      {
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      CGFloat v37 = *(void **)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath];
      *(void *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath] = v41;
      id v38 = v41;

      id v42 = *(id *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath];
      *(void *)&v9[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath] = v43;
    }
  }
}

char *sub_1006417F4(uint64_t a1)
{
  id v3 = self;
  id v4 = v1;
  id result = (char *)[v3 keyColors];
  if (result)
  {
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors] = result;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath] = 0;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath] = 0;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath] = 0;
    *(void *)&v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath] = 0;
    uint64_t v6 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer;
    id v7 = [objc_allocWithZone((Class)CAShapeLayer) init];
    [v7 setLineWidth:1.0];
    [v7 setFillColor:0];
    [v7 setLineJoin:kCALineJoinRound];
    *(void *)&v4[v6] = v7;
    uint64_t v8 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer;
    id v9 = [objc_allocWithZone((Class)CAGradientLayer) init];
    [v9 setStartPoint:0.5, 0.0];
    [v9 setEndPoint:0.5, 1.0];
    *(void *)&v4[v8] = v9;
    uint64_t v10 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask;
    id v11 = [objc_allocWithZone((Class)CAShapeLayer) init];
    if (qword_10094AE08 != -1) {
      swift_once();
    }
    [v11 setLineWidth:*(double *)&qword_100998308];
    id v12 = [self blackColor];
    id v13 = [v12 CGColor];

    [v11 setFillColor:v13];
    *(void *)&v4[v10] = v11;
    v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_interpolatesCurvedPath] = 1;
    uint64_t v14 = &v4[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram];
    long long v15 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)a1;
    *((_OWORD *)v14 + sub_10033A2C8(0, 1) = v15;
    *((_OWORD *)v14 + 2) = *(_OWORD *)(a1 + 32);
    *((void *)v14 + 6) = *(void *)(a1 + 48);

    v19.receiver = v4;
    v19.super_class = (Class)type metadata accessor for LineSeriesLayer();
    uint64_t v16 = (char *)[super init];
    double v17 = *(void **)&v16[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer];
    uint64_t v18 = v16;
    [v18 addSublayer:v17];
    [v17 setMask:*(void *)&v18[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask]];
    [v18 addSublayer:*(void *)&v18[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer]];
    sub_100641008();

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_100641AC8(uint64_t a1)
{
  sub_10008F484(a1, (uint64_t)v16);
  id v3 = (objc_class *)type metadata accessor for LineSeriesLayer();
  id v4 = v1;
  if (swift_dynamicCast())
  {
    id v6 = *(id *)((char *)v15[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram);
    id v5 = *(id *)((char *)v15[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 8);
    id v8 = *(id *)((char *)v15[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 16);
    id v7 = *(id *)((char *)v15[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 24);
    id v10 = *(id *)((char *)v15[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 32);
    id v9 = *(id *)((char *)v15[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 40);
    id v11 = *(id *)((char *)v15[0] + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_histogram + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_100087AC8(1, (uint64_t)v15, 0.0, 1.0);

    id v9 = v15[5];
    id v11 = v15[6];
    id v7 = v15[3];
    id v10 = v15[4];
    id v8 = v15[2];
    id v6 = v15[0];
    id v5 = v15[1];
  }
  v16[0] = v6;
  v16[1] = v5;
  v16[2] = v8;
  v16[3] = v7;
  void v16[4] = v10;
  v16[5] = v9;
  v16[6] = v11;
  id v12 = objc_allocWithZone(v3);
  id v13 = sub_1006417F4((uint64_t)v16);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(a1);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v13;
}

id sub_100641C58(void *a1)
{
  id v2 = self;
  id v3 = v1;
  id result = [v2 keyColors];
  if (result)
  {
    uint64_t v5 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors;
    *(void *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_metricColors] = result;
    uint64_t v6 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath;
    *(void *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyLineLayerPath] = 0;
    uint64_t v7 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath;
    *(void *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_emptyGradientLayerPath] = 0;
    uint64_t v8 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath;
    *(void *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath] = 0;
    uint64_t v18 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath;
    *(void *)&v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath] = 0;
    uint64_t v9 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer;
    id v10 = [objc_allocWithZone((Class)CAShapeLayer) init];
    [v10 setLineWidth:1.0];
    [v10 setFillColor:0];
    [v10 setLineJoin:kCALineJoinRound];
    uint64_t v19 = v9;
    *(void *)&v3[v9] = v10;
    uint64_t v11 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer;
    id v12 = [objc_allocWithZone((Class)CAGradientLayer) init];
    [v12 setStartPoint:0.5, 0.0];
    [v12 setEndPoint:0.5, 1.0];
    *(void *)&v3[v11] = v12;
    uint64_t v13 = OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask;
    id v14 = [objc_allocWithZone((Class)CAShapeLayer) init];
    if (qword_10094AE08 != -1) {
      swift_once();
    }
    [v14 setLineWidth:*(double *)&qword_100998308];
    id v15 = [self blackColor];
    id v16 = [v15 CGColor];

    [v14 setFillColor:v16];
    *(void *)&v3[v13] = v14;
    v3[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_interpolatesCurvedPath] = 1;

    double v17 = *(void **)&v3[v13];
    type metadata accessor for LineSeriesLayer();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100641F40()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for LineSeriesLayer();
  [super layoutSublayers];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer];
  [v0 bounds];
  [v1 setFrame:];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientLayer];
  [v0 bounds];
  [v2 setFrame:];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask];
  [v0 bounds];
  [v3 setFrame:];
  sub_1006411B8();
}

void sub_100642044(uint64_t a1)
{
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_lineLayer);
  id v3 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledLineLayerPath);
  if (v3) {
    id v4 = [v3 CGPath];
  }
  else {
    id v4 = 0;
  }
  [v2 setPath:v4];

  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_gradientMask);
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC10FitnessApp15LineSeriesLayer_filledGradientLayerPath);
  if (v6) {
    id v7 = [v6 CGPath];
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;
  [v5 setPath:];
}

id sub_10064215C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LineSeriesLayer();
  return [super dealloc];
}

uint64_t type metadata accessor for LineSeriesLayer()
{
  return self;
}

uint64_t sub_10064227C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_1009664F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1006422E4()
{
  unint64_t result = qword_100966500;
  if (!qword_100966500)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100966500);
  }
  return result;
}

id *sub_100642324(id *a1)
{
  return a1;
}

void sub_100642350(double a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    double v4 = *(double *)(v2 + 32);
    if (v4 > a1) {
      return;
    }
    double v5 = *(double *)(v1 + 16);
    double v6 = v4 + v5 * (double)v3;
    if (v6 <= a1) {
      return;
    }
  }
  else
  {
    if (a1 < 0.0) {
      return;
    }
    double v5 = *(double *)(v1 + 16);
    double v4 = 0.0;
    double v6 = v5 * 0.0 + 0.0;
    if (v6 <= a1) {
      return;
    }
  }
  if (v5 == 0.0)
  {
LABEL_19:
    __break(1u);
  }
  else
  {
    uint64_t v7 = -1;
    double v8 = v4;
    do
    {
      if (v5 <= 0.0 ? v8 <= v6 : v6 <= v8) {
        break;
      }
      if (__OFADD__(v7 + 1, 1))
      {
        __break(1u);
        goto LABEL_19;
      }
      BOOL v10 = v8 < a1;
      double v8 = v4 + (double)(v7 + 2) * v5;
      ++v7;
    }
    while (v10);
  }
}

uint64_t sub_100642410()
{
  uint64_t v25 = *v0;
  uint64_t v1 = *(void *)(v25 + 16);
  if (v1)
  {
    uint64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 48);
    uint64_t v3 = _swiftEmptyArrayStorage;
    do
    {
      if ((*v2 & 1) == 0)
      {
        long long v24 = *((_OWORD *)v2 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1001E70FC(0, v3[2] + 1, 1, v3);
        }
        unint64_t v5 = v3[2];
        unint64_t v4 = v3[3];
        if (v5 >= v4 >> 1) {
          uint64_t v3 = sub_1001E70FC((void *)(v4 > 1), v5 + 1, 1, v3);
        }
        v3[2] = v5 + 1;
        *(_OWORD *)&v3[2 * v5 + 4] = v24;
      }
      v2 += 24;
      --v1;
    }
    while (v1);
    sub_1000B1AE0((uint64_t)&v25);
    unint64_t v6 = v3[2];
    if (!v6) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    unint64_t v6 = _swiftEmptyArrayStorage[2];
    if (!v6) {
      return swift_bridgeObjectRelease();
    }
  }
  if (v6 >= 4)
  {
    uint64_t v7 = v6 & 0x7FFFFFFFFFFFFFFCLL;
    uint64_t v9 = (const double *)(v3 + 8);
    double v8 = 0.0;
    uint64_t v10 = v6 & 0x7FFFFFFFFFFFFFFCLL;
    do
    {
      uint64_t v11 = v9 - 4;
      float64x2x2_t v26 = vld2q_f64(v11);
      float64x2x2_t v27 = vld2q_f64(v9);
      v26.val[0] = vmulq_f64(v26.val[0], v26.val[1]);
      v27.val[0] = vmulq_f64(v27.val[0], v27.val[1]);
      double v8 = v8 + v26.val[0].f64[0] + v26.val[0].f64[1] + v27.val[0].f64[0] + v27.val[0].f64[1];
      v9 += 8;
      v10 -= 4;
    }
    while (v10);
    if (v6 == v7) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v7 = 0;
    double v8 = 0.0;
  }
  unint64_t v12 = v6 - v7;
  uint64_t v13 = (double *)&v3[2 * v7 + 5];
  do
  {
    double v8 = v8 + *(v13 - 1) * *v13;
    v13 += 2;
    --v12;
  }
  while (v12);
LABEL_20:
  if (v6 < 2)
  {
    uint64_t v14 = 0;
    double v15 = 0.0;
LABEL_25:
    unint64_t v20 = v6 - v14;
    id v21 = (double *)&v3[2 * v14 + 5];
    do
    {
      double v22 = *v21;
      v21 += 2;
      double v15 = v15 + v22;
      --v20;
    }
    while (v20);
    return swift_bridgeObjectRelease();
  }
  uint64_t v14 = v6 & 0x7FFFFFFFFFFFFFFELL;
  id v16 = (double *)(v3 + 7);
  double v15 = 0.0;
  uint64_t v17 = v6 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v18 = *(v16 - 2);
    double v19 = *v16;
    v16 += 4;
    double v15 = v15 + v18 + v19;
    v17 -= 2;
  }
  while (v17);
  if (v6 != v14) {
    goto LABEL_25;
  }
  return swift_bridgeObjectRelease();
}

void *sub_100642624(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v89 = a1;
    uint64_t v90 = a3;
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v91 = a2;
    unint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = (int *)type metadata accessor for MetricCard();
    uint64_t v15 = v14[5];
    id v16 = &v11[v15];
    uint64_t v17 = &v12[v15];
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *((void *)v17 + 1);
    char v20 = v17[16];
    sub_100091494(*(void *)v17, v19, v20);
    *(void *)id v16 = v18;
    *((void *)v16 + sub_10033A2C8(0, 1) = v19;
    v16[16] = v20;
    v11[v14[6]] = v12[v14[6]];
    v11[v14[7]] = v12[v14[7]];
    v11[v14[8]] = v12[v14[8]];
    uint64_t v21 = v14[9];
    char v87 = v12;
    uint64_t v88 = v11;
    double v22 = &v11[v21];
    unint64_t v23 = &v12[v21];
    uint64_t v25 = *(void **)&v12[v21];
    long long v24 = *(void **)&v12[v21 + 8];
    *(void *)double v22 = v25;
    *((void *)v22 + sub_10033A2C8(0, 1) = v24;
    uint64_t v27 = *(void *)&v12[v21 + 16];
    uint64_t v26 = *(void *)&v12[v21 + 24];
    *((void *)v22 + 2) = v27;
    *((void *)v22 + 3) = v26;
    *((void *)v22 + 4) = *((void *)v23 + 4);
    unsigned char v22[40] = v23[40];
    uint64_t v28 = type metadata accessor for MetricDetailViewModel();
    uint64_t v29 = *(int *)(v28 + 36);
    __dst = &v22[v29];
    uint64_t v86 = v28;
    uint64_t v84 = &v23[v29];
    uint64_t v30 = type metadata accessor for DateInterval();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    id v32 = v25;
    id v33 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v83(v84, 1, v30))
    {
      uint64_t v34 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
      memcpy(__dst, v84, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v84, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
    v22[*(int *)(v86 + 40)] = v23[*(int *)(v86 + 40)];
    uint64_t v35 = *(int *)(v86 + 44);
    id v36 = &v22[v35];
    CGFloat v37 = &v23[v35];
    uint64_t v38 = type metadata accessor for Date();
    CGFloat v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
    v39(v36, v37, v38);
    v88[v14[10]] = v87[v14[10]];
    uint64_t v40 = v14[11];
    id v41 = *(void **)&v87[v40];
    *(void *)&v88[v40] = v41;
    id v43 = v90;
    id v42 = v91;
    uint64_t v44 = v90[7];
    uint64_t v9 = v89;
    *((unsigned char *)v89 + v90[6]) = *((unsigned char *)v91 + v90[6]);
    CGFloat v45 = (char *)v89 + v44;
    double v46 = (char *)v91 + v44;
    uint64_t v47 = *(void *)((char *)v91 + v44 + 24);
    id v48 = v41;
    if (v47)
    {
      uint64_t v49 = *((void *)v46 + 4);
      *((void *)v45 + 3) = v47;
      *((void *)v45 + 4) = v49;
      (**(void (***)(char *, char *, uint64_t))(v47 - 8))(v45, v46, v47);
    }
    else
    {
      long long v50 = *((_OWORD *)v46 + 1);
      *(_OWORD *)CGFloat v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + sub_10033A2C8(0, 1) = v50;
      *((void *)v45 + 4) = *((void *)v46 + 4);
    }
    uint64_t v51 = v90[8];
    CGRect v52 = (void **)((char *)v89 + v51);
    CGRect v53 = (void **)((char *)v91 + v51);
    uint64_t v54 = type metadata accessor for MetricChartData();
    uint64_t v55 = *(void *)(v54 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      uint64_t v56 = sub_1000AFA94(&qword_10094C1E8);
      memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      CGRect v57 = *v53;
      void *v52 = *v53;
      uint64_t v58 = *(int *)(v54 + 20);
      CGRect v59 = (char *)v52 + v58;
      CGRect v60 = (char *)v53 + v58;
      id v61 = v57;
      CGRect v62 = v59;
      CGRect v63 = v60;
      id v43 = v90;
      id v42 = v91;
      v39(v62, v63, v38);
      uint64_t v64 = *(int *)(v54 + 24);
      uint64_t v65 = *(void **)((char *)v53 + v64);
      *(void **)((char *)v52 + v64) = v65;
      uint64_t v66 = *(void (**)(void **, void, uint64_t, uint64_t))(v55 + 56);
      id v67 = v65;
      v66(v52, 0, 1, v54);
    }
    uint64_t v68 = v43[9];
    id v69 = (char *)v89 + v68;
    uint64_t v70 = (uint64_t)v42 + v68;
    uint64_t v71 = *(void **)((char *)v42 + v68);
    *(void *)((char *)v89 + v68) = v71;
    uint64_t v72 = type metadata accessor for MetricFormattingHelper();
    uint64_t v73 = *(int *)(v72 + 20);
    uint64_t v74 = &v69[v73];
    uint64_t v75 = v70 + v73;
    uint64_t v76 = type metadata accessor for AttributedString();
    uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16);
    id v78 = v71;
    v77(v74, v75, v76);
    uint64_t v79 = *(int *)(v72 + 24);
    uint64_t v80 = *(void **)(v70 + v79);
    *(void *)&v69[v79] = v80;
    id v81 = v80;
  }
  return v9;
}

char *sub_100642BC0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C578);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v51 = a3;
  CGRect v52 = a2;
  uint64_t v8 = a3[5];
  CGRect v53 = a1;
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  unint64_t v12 = (int *)type metadata accessor for MetricCard();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  uint64_t v16 = v12[9];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  long long v19 = *(_OWORD *)&v10[v16 + 16];
  *(_OWORD *)uint64_t v17 = *(_OWORD *)&v10[v16];
  *((_OWORD *)v17 + sub_10033A2C8(0, 1) = v19;
  v17[40] = v10[v16 + 40];
  *((void *)v17 + 4) = *(void *)&v10[v16 + 32];
  char v20 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v21 = v20[9];
  double v22 = &v17[v21];
  unint64_t v23 = &v18[v21];
  uint64_t v24 = type metadata accessor for DateInterval();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v17[v20[10]] = v18[v20[10]];
  uint64_t v27 = v20[11];
  uint64_t v28 = &v17[v27];
  uint64_t v29 = &v18[v27];
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32);
  v31(v28, v29, v30);
  v9[v12[10]] = v10[v12[10]];
  *(void *)&v9[v12[11]] = *(void *)&v10[v12[11]];
  uint64_t v32 = v51[7];
  v53[v51[6]] = v52[v51[6]];
  id v33 = &v53[v32];
  uint64_t v34 = &v52[v32];
  *((void *)v33 + 4) = *((void *)v34 + 4);
  long long v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)id v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + sub_10033A2C8(0, 1) = v35;
  uint64_t v36 = v51[8];
  CGFloat v37 = &v53[v36];
  uint64_t v38 = &v52[v36];
  uint64_t v39 = type metadata accessor for MetricChartData();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    *(void *)CGFloat v37 = *(void *)v38;
    v31(&v37[*(int *)(v39 + 20)], &v38[*(int *)(v39 + 20)], v30);
    *(void *)&v37[*(int *)(v39 + 24)] = *(void *)&v38[*(int *)(v39 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  uint64_t v42 = v51[9];
  id v43 = &v53[v42];
  uint64_t v44 = &v52[v42];
  *(void *)&v53[v42] = *(void *)&v52[v42];
  uint64_t v45 = type metadata accessor for MetricFormattingHelper();
  uint64_t v46 = *(int *)(v45 + 20);
  uint64_t v47 = &v43[v46];
  id v48 = &v44[v46];
  uint64_t v49 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  *(void *)&v43[*(int *)(v45 + 24)] = *(void *)&v44[*(int *)(v45 + 24)];
  return v53;
}

char *sub_100643044(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094C578);
    uint64_t v6 = sub_1000AFA94(&qword_10094C578);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v73 = a3;
  uint64_t v74 = a2;
  uint64_t v8 = a3[5];
  uint64_t v75 = a1;
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  unint64_t v12 = (int *)type metadata accessor for MetricCard();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  char v16 = v15[16];
  uint64_t v17 = *(void *)v14;
  uint64_t v18 = *((void *)v14 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  char v19 = v14[16];
  v14[16] = v16;
  sub_1000917F8(v17, v18, v19);
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  id v69 = v12;
  uint64_t v20 = v12[9];
  uint64_t v21 = &v9[v20];
  double v22 = &v10[v20];
  unint64_t v23 = *(void **)&v9[v20];
  *(void *)&v9[v20] = *(void *)&v10[v20];

  uint64_t v24 = (void *)*((void *)v21 + 1);
  *((void *)v21 + sub_10033A2C8(0, 1) = *((void *)v22 + 1);

  *((void *)v21 + 2) = *((void *)v22 + 2);
  swift_bridgeObjectRelease();
  *((void *)v21 + 3) = *((void *)v22 + 3);
  swift_bridgeObjectRelease();
  *((void *)v21 + 4) = *((void *)v22 + 4);
  v21[40] = v22[40];
  uint64_t v71 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v25 = v71[9];
  uint64_t v26 = &v21[v25];
  uint64_t v27 = &v22[v25];
  uint64_t v28 = type metadata accessor for DateInterval();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  uint64_t v70 = v26;
  LODWORD(v26) = v30(v26, 1, v28);
  int v31 = v30(v27, 1, v28);
  if (v26)
  {
    if (v31)
    {
      size_t v32 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
      id v33 = v70;
LABEL_10:
      memcpy(v33, v27, v32);
      goto LABEL_13;
    }
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v70, v27, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v70, 0, 1, v28);
  }
  else
  {
    if (v31)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v70, v28);
      size_t v32 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
      id v33 = v70;
      goto LABEL_10;
    }
    (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v70, v27, v28);
  }
LABEL_13:
  v21[v71[10]] = v22[v71[10]];
  uint64_t v34 = v71[11];
  long long v35 = &v21[v34];
  uint64_t v36 = &v22[v34];
  uint64_t v37 = type metadata accessor for Date();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v38 + 40);
  v72(v35, v36, v37);
  v9[v69[10]] = v10[v69[10]];
  uint64_t v39 = v69[11];
  uint64_t v40 = *(void **)&v9[v39];
  *(void *)&v9[v39] = *(void *)&v10[v39];

  uint64_t v41 = v73[7];
  v75[v73[6]] = v74[v73[6]];
  uint64_t v42 = &v75[v41];
  id v43 = &v74[v41];
  if (*(void *)&v75[v41 + 24]) {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v75[v41]);
  }
  long long v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + sub_10033A2C8(0, 1) = v44;
  *((void *)v42 + 4) = *((void *)v43 + 4);
  uint64_t v45 = v73[8];
  uint64_t v46 = (void **)&v75[v45];
  uint64_t v47 = (void **)&v74[v45];
  uint64_t v48 = type metadata accessor for MetricChartData();
  uint64_t v49 = *(void *)(v48 - 8);
  long long v50 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v49 + 48);
  int v51 = v50(v46, 1, v48);
  int v52 = v50(v47, 1, v48);
  if (!v51)
  {
    if (!v52)
    {
      uint64_t v66 = *v46;
      *uint64_t v46 = *v47;

      v72((char *)v46 + *(int *)(v48 + 20), (char *)v47 + *(int *)(v48 + 20), v37);
      uint64_t v67 = *(int *)(v48 + 24);
      uint64_t v68 = *(void **)((char *)v46 + v67);
      *(void **)((char *)v46 + v67) = *(void **)((char *)v47 + v67);

      goto LABEL_21;
    }
    sub_10009D28C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for MetricChartData);
    goto LABEL_20;
  }
  if (v52)
  {
LABEL_20:
    uint64_t v53 = sub_1000AFA94(&qword_10094C1E8);
    memcpy(v46, v47, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_21;
  }
  *uint64_t v46 = *v47;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))((char *)v46 + *(int *)(v48 + 20), (char *)v47 + *(int *)(v48 + 20), v37);
  *(void **)((char *)v46 + *(int *)(v48 + 24)) = *(void **)((char *)v47 + *(int *)(v48 + 24));
  (*(void (**)(void **, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
LABEL_21:
  uint64_t v54 = v73[9];
  uint64_t v55 = &v75[v54];
  uint64_t v56 = &v74[v54];
  CGRect v57 = *(void **)&v75[v54];
  *(void *)&v75[v54] = *(void *)&v74[v54];

  uint64_t v58 = type metadata accessor for MetricFormattingHelper();
  uint64_t v59 = *(int *)(v58 + 20);
  CGRect v60 = &v55[v59];
  id v61 = &v56[v59];
  uint64_t v62 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  uint64_t v63 = *(int *)(v58 + 24);
  uint64_t v64 = *(void **)&v55[v63];
  *(void *)&v55[v63] = *(void *)&v56[v63];

  return v75;
}

uint64_t sub_100643694(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000AFA94(&qword_10094C590);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for MetricCard();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  if (a2 == 2147483646)
  {
    unint64_t v14 = *(void *)(a1 + a3[7] + 24);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    int v15 = v14 - 1;
    if (v15 < 0) {
      int v15 = -1;
    }
    return (v15 + 1);
  }
  else
  {
    uint64_t v17 = sub_1000AFA94(&qword_10094C1E8);
    if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = *(void *)(v17 - 8);
      uint64_t v13 = a3[8];
      goto LABEL_13;
    }
    uint64_t v18 = type metadata accessor for MetricFormattingHelper();
    char v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    uint64_t v20 = v18;
    uint64_t v21 = a1 + a3[9];
    return v19(v21, a2, v20);
  }
}

uint64_t sub_100643878(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000AFA94(&qword_10094C590);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for MetricCard();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[7] + 24) = a2;
    return result;
  }
  uint64_t v16 = sub_1000AFA94(&qword_10094C1E8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_9;
  }
  uint64_t v17 = type metadata accessor for MetricFormattingHelper();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[9];

  return v18(v20, a2, a2, v19);
}

uint64_t sub_100643A50(uint64_t a1)
{
  return sub_100007F48(a1, (unsigned int *)&enum case for Font.TextStyle.footnote(_:), (void (*)(uint64_t))&static Font.Weight.medium.getter, &qword_100966510);
}

uint64_t sub_100643A78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094C1E8);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MetricFormattingHelper();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for MetricCardView();
  sub_1000A3708(v1 + v9[9], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
  sub_1000AEF2C(v1 + v9[8], (uint64_t)v5, &qword_10094C1E8);
  uint64_t v10 = type metadata accessor for MetricChartData();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_10008DB18((uint64_t)v5, &qword_10094C1E8);
    id v11 = 0;
  }
  else
  {
    id v11 = *(id *)&v5[*(int *)(v10 + 24)];
    sub_10009D28C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MetricChartData);
  }
  uint64_t v12 = *(unsigned __int8 *)(v1 + v9[6]);
  if (qword_10094B050 != -1) {
    swift_once();
  }
  sub_1000A18EC(v11, v12, qword_100966510, 1, 0, 1, 0, a1);

  return sub_10009D28C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MetricFormattingHelper);
}

uint64_t sub_100643C98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100643CF4(char *a1, char *a2)
{
  return sub_10047E548(*a1, *a2);
}

Swift::Int sub_100643D00()
{
  return Hasher._finalize()();
}

uint64_t sub_100643D80()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100643DEC()
{
  return Hasher._finalize()();
}

uint64_t sub_100643E68@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B6FD8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100643EC8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6F72746E49;
  if (*v1) {
    uint64_t v2 = 0x77654E7374616857;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_100643F04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094C820);
  __chkstk_darwin(v2 - 8);
  uint64_t v38 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v39 = (char *)&v37 - v5;
  uint64_t v6 = type metadata accessor for PrivacyIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (objc_class *)type metadata accessor for DiscoverySheetViewController();
  v41.receiver = v1;
  v41.super_class = v10;
  [super viewDidLoad];
  id v11 = [v1 buttonTray];
  sub_1000AFA94(&qword_10094D178);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1007509E0;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for PrivacyIdentifier.fitnessPlus(_:), v6);
  uint64_t v13 = PrivacyIdentifier.rawValue.getter();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 setPrivacyLinkForBundles:isa];

  uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_dataModel + 24];
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    id v40 = self;
    swift_bridgeObjectRetain();
    uint64_t v37 = v17;
    uint64_t v19 = v17 + 72;
    do
    {
      uint64_t v20 = v1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSString v21 = String._bridgeToObjectiveC()();
      id v22 = [v40 smm_systemImageNamed:v21, v37];

      uint64_t v1 = v20;
      NSString v23 = String._bridgeToObjectiveC()();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      [v20 addBulletedListItemWithTitle:v23 description:v24 image:v22];

      v19 += 48;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  id v25 = [self boldButton];
  [v25 addTarget:v1 action:"didTapContinueButton" forControlEvents:64];
  id v26 = [self mainBundle];
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v26 localizedStringForKey:v27 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 setTitle:v29 forState:0];

  id v30 = v25;
  uint64_t v31 = (uint64_t)v39;
  UIButton.configuration.getter();
  uint64_t v32 = type metadata accessor for UIButton.Configuration();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32))
  {
    sub_10019B930(v31, v38);
    UIButton.configuration.setter();

    sub_10008DB18(v31, &qword_10094C820);
  }
  else
  {
    id v33 = [self blackColor];
    UIButton.Configuration.baseForegroundColor.setter();
    UIButton.configuration.setter();
  }
  id v34 = [v1 buttonTray];
  [v34 addButton:v30];

  id v35 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v1 action:"didTapXButton"];
  id v36 = [v1 navigationItem];
  [v36 setRightBarButtonItem:v35 animated:0];
}

uint64_t sub_100644668()
{
  uint64_t v0 = type metadata accessor for MetricClickStreamOccurred();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v47 = v0;
  uint64_t v48 = v1;
  __chkstk_darwin(v0);
  uint64_t v46 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MetricIdentifier();
  __chkstk_darwin(v3 - 8);
  uint64_t v45 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100959FD0);
  __chkstk_darwin(v5 - 8);
  long long v44 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AFA94(&qword_100959FD8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AFA94(&qword_100959FE0);
  __chkstk_darwin(v10 - 8);
  uint64_t v42 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AFA94(&qword_100959FE8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AFA94(&qword_100959FF0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MetricClickStreamType();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  NSString v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for MetricClickStream();
  uint64_t v22 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  NSString v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  NSString v27 = (char *)&v42 - v26;
  uint64_t v28 = enum case for MetricNavigationDirection.none(_:);
  uint64_t v29 = type metadata accessor for MetricNavigationDirection();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v21, v28, v29);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for MetricClickStreamType.page(_:), v18);
  uint64_t v30 = v49 + OBJC_IVAR____TtC10FitnessApp28DiscoverySheetViewController_metricPage;
  uint64_t v31 = type metadata accessor for MetricPage();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v17, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v17, 0, 1, v31);
  uint64_t v33 = type metadata accessor for MetricBadgingCounts();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v14, 1, 1, v33);
  uint64_t v34 = type metadata accessor for MetricGroupActivity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v42, 1, 1, v34);
  static MetricEnvironment.current()();
  uint64_t v35 = type metadata accessor for MetricEnvironment();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v9, 0, 1, v35);
  uint64_t v36 = sub_1000AFA94(&qword_10095A010);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v44, 1, 1, v36);
  uint64_t v37 = type metadata accessor for MetricRemoteIdentifier();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v45, 1, 1, v37);
  MetricClickStream.init(type:page:identifier:badgingCounts:groupActivity:environment:remoteParticipantDeviceType:topicRoutingBehavior:metadata:)();
  uint64_t v38 = v43;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v27, v43);
  uint64_t v39 = v46;
  MetricClickStreamOccurred.init(_:)();
  swift_getObjectType();
  sub_100645448((unint64_t *)&qword_10095DE00, (void (*)(uint64_t))&type metadata accessor for MetricClickStreamOccurred);
  uint64_t v40 = v47;
  dispatch thunk of EventHubProtocol.publish<A>(_:)();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v27, v38);
}

uint64_t sub_100644D4C()
{
  return sub_100644D88(&enum case for MetricClickAction.gdprConsent(_:), 0x65756E69746E6F43, 0xE800000000000000);
}

uint64_t sub_100644D6C()
{
  return sub_100644D88(&enum case for MetricClickAction.dismiss(_:), 0x65736F6C43, 0xE500000000000000);
}

uint64_t sub_100644D88(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  v19[1] = a2;
  v19[2] = a3;
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_10095B7B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MetricClickElement();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MetricClickAction();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v3;
  (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))(v16, *a1, v12, v14);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for MetricClickElement.button(_:), v8);
  uint64_t v17 = type metadata accessor for MetricClickDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  type metadata accessor for DiscoverySheetViewController();
  sub_100645448(&qword_100966690, (void (*)(uint64_t))type metadata accessor for DiscoverySheetViewController);
  MetricClickPublishing.publishClick(actionType:targetType:targetIdentifier:targetIdentifierType:metricPage:locations:impressions:topicRoutingBehavior:)();
  sub_10008DB18((uint64_t)v7, (uint64_t *)&unk_10095B7B0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

id sub_1006450C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiscoverySheetViewController();
  return [super dealloc];
}

uint64_t sub_1006451A8()
{
  return type metadata accessor for DiscoverySheetViewController();
}

uint64_t type metadata accessor for DiscoverySheetViewController()
{
  uint64_t result = qword_100966678;
  if (!qword_100966678) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006451FC()
{
  uint64_t result = type metadata accessor for MetricPage();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DiscoverySheetViewController.PageIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10033A2C8(0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100645380);
      case 4:
        *(_DWORD *)(result + sub_10033A2C8(0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10033A2C8(0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10033A2C8(0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoverySheetViewController.PageIdentifier()
{
  return &type metadata for DiscoverySheetViewController.PageIdentifier;
}

unint64_t sub_1006453BC()
{
  unint64_t result = qword_100966688;
  if (!qword_100966688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966688);
  }
  return result;
}

uint64_t sub_100645410()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100645448(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100645494@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v8 = (unsigned int *)&enum case for AAUIAwardsDataProviderSection.goForIt(_:);
      goto LABEL_10;
    case 2:
      uint64_t v8 = (unsigned int *)&enum case for AAUIAwardsDataProviderSection.activity(_:);
      goto LABEL_10;
    case 3:
      uint64_t v8 = (unsigned int *)&enum case for AAUIAwardsDataProviderSection.workouts(_:);
      goto LABEL_10;
    case 4:
      uint64_t v8 = (unsigned int *)&enum case for AAUIAwardsDataProviderSection.fitnessPlus(_:);
      goto LABEL_10;
    case 5:
      uint64_t v8 = (unsigned int *)&enum case for AAUIAwardsDataProviderSection.limitedEdtion(_:);
      goto LABEL_10;
    case 6:
      uint64_t v8 = (unsigned int *)&enum case for AAUIAwardsDataProviderSection.monthlyChallenge(_:);
      goto LABEL_10;
    case 7:
      uint64_t v8 = (unsigned int *)&enum case for AAUIAwardsDataProviderSection.competitions(_:);
LABEL_10:
      uint64_t v9 = *v8;
      uint64_t v10 = type metadata accessor for AAUIAwardsDataProviderSection();
      uint64_t v12 = *(void *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(a2, v9, v10);
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      uint64_t v6 = a2;
      uint64_t v7 = 0;
      uint64_t v5 = v10;
      break;
    default:
      uint64_t v3 = type metadata accessor for AAUIAwardsDataProviderSection();
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
      uint64_t v5 = v3;
      uint64_t v6 = a2;
      uint64_t v7 = 1;
      break;
  }

  return v4(v6, v7, 1, v5);
}

uint64_t sub_100645630(uint64_t a1)
{
  return sub_100645FD0(a1, qword_1009986D0);
}

uint64_t sub_10064564C()
{
  uint64_t v0 = sub_1000AFA94(&qword_100966780);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100966788);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000AFA94(&qword_100966778);
  sub_1000258C4(v5, qword_1009986E8);
  sub_1000876DC(v5, (uint64_t)qword_1009986E8);
  sub_1000818CC();
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._object = (void *)0x80000001007CC680;
  v6._countAndFlagsBits = 0xD000000000000014;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v7);
  return EntityURLRepresentation.init(stringInterpolation:)();
}

unint64_t sub_100645838(char a1)
{
  unint64_t result = 7105633;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7449726F466F67;
      break;
    case 2:
      unint64_t result = 0x7974697669746361;
      break;
    case 3:
      unint64_t result = 0x7374756F6B726F77;
      break;
    case 4:
      unint64_t result = 0x507373656E746966;
      break;
    case 5:
      unint64_t result = 0x45646574696D696CLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x74697465706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100645954(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
  id v12 = [v11 titleForAchievement:a2];

  if (v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    sub_100059FF4(a2);
  }
  LocalizedStringResource.init(stringLiteral:)();
  sub_100647084(a2);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t v13 = type metadata accessor for DisplayRepresentation.Image();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

unint64_t sub_100645BA8()
{
  unint64_t result = qword_1009666A8;
  if (!qword_1009666A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009666A8);
  }
  return result;
}

uint64_t sub_100645BFC@<X0>(uint64_t a1@<X8>)
{
  return sub_10046E758(&qword_10094B060, &qword_100966778, (uint64_t)qword_1009986E8, a1);
}

uint64_t sub_100645C28()
{
  sub_10021B6BC();
  uint64_t v2 = URLRepresentableEntity.urlRepresentationParameter.getter();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1001B8FDC(v3, v0, v2, v1);
}

uint64_t sub_100645CBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BD684(&qword_10094B058, (uint64_t)qword_1009986D0, a1);
}

uint64_t sub_100645CE0()
{
  return sub_1000A132C(&qword_1009666D0, &qword_1009666D8);
}

uint64_t sub_100645D1C(uint64_t a1)
{
  unint64_t v2 = sub_1000818CC();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100645D68(uint64_t a1)
{
  return sub_100645954(a1, *(void **)(v1 + 8));
}

uint64_t sub_100645D70(uint64_t a1)
{
  unint64_t v2 = sub_1000EA2CC();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100645DBC()
{
  uint64_t v0 = sub_1000AFA94(&qword_100966768);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AFA94(&qword_100966770);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000AFA94(&qword_100966760);
  sub_1000258C4(v5, qword_100998700);
  sub_1000876DC(v5, (uint64_t)qword_100998700);
  sub_1004DC71C();
  EnumURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._object = (void *)0x80000001007CC680;
  v6._countAndFlagsBits = 0xD000000000000014;
  EnumURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for EnumURLRepresentation.StringInterpolation.Token.rawValue<A>(_:), v0);
  EnumURLRepresentation.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  EnumURLRepresentation.StringInterpolation.appendLiteral(_:)(v7);
  return EnumURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_100645FA8(uint64_t a1)
{
  return sub_100645FD0(a1, qword_100998718);
}

uint64_t sub_100645FD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000258C4(v8, a2);
  sub_1000876DC(v8, (uint64_t)a2);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_100646138()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094DE78);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94(&qword_10094D328);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v52 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_1000AFA94(&qword_100966758);
  uint64_t v8 = sub_1000AFA94(&qword_100960A90);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  uint64_t v11 = v8 - 8;
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v44 = 8 * v10;
  uint64_t v13 = v10;
  uint64_t v53 = v10;
  uint64_t v14 = swift_allocObject();
  uint64_t v45 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_100750560;
  uint64_t v15 = *(int *)(v11 + 56);
  uint64_t v49 = v11;
  uint64_t v43 = v14 + v12 + v15;
  *(unsigned char *)(v14 + v12) = 0;
  unint64_t v16 = v14 + v12;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v54 = v7 + 56;
  uint64_t v48 = v17;
  uint64_t v18 = v5;
  v17(v5, 1, 1, v6);
  uint64_t v19 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v20 = *(void *)(v19 - 8);
  long long v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v51 = v19;
  uint64_t v21 = v20 + 56;
  v50(v2, 1, 1, v19);
  uint64_t v46 = v21;
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v16 + v13) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v22 = v52;
  uint64_t v23 = v48;
  v48(v18, 1, 1, v52);
  uint64_t v24 = v19;
  uint64_t v25 = v50;
  v50(v2, 1, 1, v24);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v26 = v53;
  NSString v27 = (unsigned char *)(v16 + 2 * v53);
  uint64_t v43 = (uint64_t)&v27[*(int *)(v49 + 56)];
  *NSString v27 = 2;
  LocalizedStringResource.init(stringLiteral:)();
  v23(v18, 1, 1, v22);
  v25(v2, 1, 1, v51);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t v47 = v16;
  uint64_t v28 = (unsigned char *)(v16 + 3 * v26);
  uint64_t v29 = v49;
  uint64_t v43 = (uint64_t)&v28[*(int *)(v49 + 56)];
  *uint64_t v28 = 3;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v30 = v52;
  v48(v18, 1, 1, v52);
  uint64_t v31 = v51;
  v50(v2, 1, 1, v51);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v43 = 4 * v53;
  uint64_t v32 = (unsigned char *)(v16 + 4 * v53);
  v42[1] = &v32[*(int *)(v29 + 56)];
  unsigned char *v32 = 4;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v33 = v30;
  uint64_t v34 = v48;
  v48(v18, 1, 1, v33);
  uint64_t v35 = v31;
  uint64_t v36 = v50;
  v50(v2, 1, 1, v31);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v37 = v53;
  unint64_t v38 = v47;
  *(unsigned char *)(v47 + v43 + v53) = 5;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v39 = v52;
  v34(v18, 1, 1, v52);
  v36(v2, 1, 1, v35);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v38 + 6 * v37) = 6;
  LocalizedStringResource.init(stringLiteral:)();
  v34(v18, 1, 1, v39);
  uint64_t v40 = v51;
  v36(v2, 1, 1, v51);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v47 + v44 - v53) = 7;
  LocalizedStringResource.init(stringLiteral:)();
  v34(v18, 1, 1, v52);
  v36(v2, 1, 1, v40);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_1005244A4(v45);
  qword_100998730 = result;
  return result;
}

uint64_t sub_100646838(unsigned __int8 *a1, char *a2)
{
  return sub_10047EDAC(*a1, *a2);
}

unint64_t sub_100646848()
{
  unint64_t result = qword_1009666E8;
  if (!qword_1009666E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009666E8);
  }
  return result;
}

Swift::Int sub_10064689C()
{
  return sub_100480D38();
}

uint64_t sub_1006468A8()
{
  return sub_100480624();
}

Swift::Int sub_1006468B0()
{
  return sub_100480D38();
}

uint64_t sub_1006468B8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10005A234(*a1, a1[1]);
  *a2 = result;
  return result;
}

unint64_t sub_1006468E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100645838(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100646918()
{
  unint64_t result = qword_1009666F0;
  if (!qword_1009666F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009666F0);
  }
  return result;
}

unint64_t sub_100646970()
{
  unint64_t result = qword_1009666F8;
  if (!qword_1009666F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009666F8);
  }
  return result;
}

unint64_t sub_1006469C8()
{
  unint64_t result = qword_100966700;
  if (!qword_100966700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966700);
  }
  return result;
}

unint64_t sub_100646A24()
{
  unint64_t result = qword_100966708;
  if (!qword_100966708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966708);
  }
  return result;
}

uint64_t sub_100646A78@<X0>(uint64_t a1@<X8>)
{
  return sub_10046E758(&qword_10094B068, &qword_100966760, (uint64_t)qword_100998700, a1);
}

unint64_t sub_100646AA8()
{
  unint64_t result = qword_100966710;
  if (!qword_100966710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966710);
  }
  return result;
}

unint64_t sub_100646B00()
{
  unint64_t result = qword_100966718;
  if (!qword_100966718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966718);
  }
  return result;
}

unint64_t sub_100646B5C()
{
  unint64_t result = qword_100966720;
  if (!qword_100966720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966720);
  }
  return result;
}

uint64_t sub_100646BB0()
{
  sub_1004DBAB8();
  uint64_t v2 = URLRepresentableEnum.urlRepresentationParameter.getter();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1001B8FDC(v3, v0, v2, v1);
}

uint64_t sub_100646C44@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BD684(&qword_10094B070, (uint64_t)qword_100998718, a1);
}

uint64_t sub_100646C68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100646CB8(uint64_t a1)
{
  unint64_t v2 = sub_1004DC71C();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100646D08()
{
  unint64_t result = qword_100966730;
  if (!qword_100966730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966730);
  }
  return result;
}

unint64_t sub_100646D60()
{
  unint64_t result = qword_100966738;
  if (!qword_100966738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966738);
  }
  return result;
}

unint64_t sub_100646DB8()
{
  unint64_t result = qword_100966740;
  if (!qword_100966740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966740);
  }
  return result;
}

uint64_t sub_100646E0C()
{
  if (qword_10094B078 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100646E68(uint64_t a1)
{
  unint64_t v2 = sub_100646B5C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100646EB4()
{
  return sub_1000A132C(&qword_100966748, &qword_100966750);
}

void sub_100646EF0(void *a1@<X8>)
{
  *a1 = &off_1008B6240;
}

unsigned char *storeEnumTagSinglePayload for TrophyCaseSectionEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10033A2C8(0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100646FCCLL);
      case 4:
        *(_DWORD *)(result + sub_10033A2C8(0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10033A2C8(0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10033A2C8(0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrophyCaseSectionEnum()
{
  return &type metadata for TrophyCaseSectionEnum;
}

void *assignWithCopy for AwardEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  unsigned int v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t sub_100647084(void *a1)
{
  unsigned int v2 = [a1 unearned];
  id v3 = [objc_allocWithZone((Class)ACHAchievementLocalizationProvider) init];
  unsigned int v4 = v3;
  if (v2) {
    id v5 = [v3 unachievedShortDescriptionForAchievement:a1];
  }
  else {
    id v5 = [v3 achievedShortDescriptionForAchievement:a1];
  }
  id v6 = v5;

  if (!v6) {
    return 0;
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (v7 == 0xD000000000000028 && v9 == 0x80000001007B6350
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v7 == 0xD000000000000026 && v9 == 0x80000001007B6380
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

uint64_t sub_1006471D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_100091494(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  char v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_1000917F8(v13, v14, v15);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v46 = a3;
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void **)(a2 + v16);
  uint64_t v20 = *(void **)v17;
  *(void *)uint64_t v17 = v19;
  id v21 = v19;

  uint64_t v22 = *(void **)(v18 + 8);
  uint64_t v23 = *(void **)(v17 + 8);
  *(void *)(v17 + 8) = v22;
  id v24 = v22;

  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v18 + 32);
  *(unsigned char *)(v17 + 40) = *(unsigned char *)(v18 + 40);
  *(void *)(v17 + 32) = v25;
  uint64_t v45 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v26 = v45[9];
  NSString v27 = (void *)(v17 + v26);
  uint64_t v28 = (void *)(v18 + v26);
  uint64_t v29 = type metadata accessor for DateInterval();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  uint64_t v44 = v27;
  LODWORD(v27) = v31(v27, 1, v29);
  int v32 = v31(v28, 1, v29);
  if (v27)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v44, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v44, 0, 1, v29);
      goto LABEL_9;
    }
    size_t v33 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
    uint64_t v34 = v44;
  }
  else
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 24))(v44, v28, v29);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v30 + 8))(v44, v29);
    size_t v33 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
    uint64_t v34 = v44;
  }
  memcpy(v34, v28, v33);
LABEL_9:
  *(unsigned char *)(v17 + v45[10]) = *(unsigned char *)(v18 + v45[10]);
  uint64_t v35 = v45[11];
  uint64_t v36 = v17 + v35;
  uint64_t v37 = v18 + v35;
  uint64_t v38 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  *(unsigned char *)(a1 + v46[10]) = *(unsigned char *)(a2 + v46[10]);
  uint64_t v39 = v46[11];
  uint64_t v40 = *(void **)(a2 + v39);
  objc_super v41 = *(void **)(a1 + v39);
  *(void *)(a1 + v39) = v40;
  id v42 = v40;

  return a1;
}

uint64_t sub_10064752C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v1sub_10033A2C8(0, 1) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(a2 + v12 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(a2 + v12 + 32);
  *(unsigned char *)(v13 + 40) = *(unsigned char *)(a2 + v12 + 40);
  uint64_t v16 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v17 = v16[9];
  uint64_t v18 = (void *)(v13 + v17);
  uint64_t v19 = (const void *)(v14 + v17);
  uint64_t v20 = type metadata accessor for DateInterval();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_1000AFA94((uint64_t *)&unk_1009546B0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(unsigned char *)(v13 + v16[10]) = *(unsigned char *)(v14 + v16[10]);
  uint64_t v23 = v16[11];
  uint64_t v24 = v13 + v23;
  uint64_t v25 = v14 + v23;
  uint64_t v26 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  return a1;
}

uint64_t sub_10064775C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  char v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_1000917F8(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[9];
  uint64_t v37 = a3;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15);
  uint64_t v19 = *(void **)(a1 + v15);
  *(void *)uint64_t v16 = v18;

  uint64_t v20 = *(void **)(v16 + 8);
  *(void *)(v16 + 8) = *(void *)(v17 + 8);

  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v16 + 24) = *(void *)(v17 + 24);
  swift_bridgeObjectRelease();
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(unsigned char *)(v16 + 40) = *(unsigned char *)(v17 + 40);
  uint64_t v39 = (int *)type metadata accessor for MetricDetailViewModel();
  uint64_t v21 = v39[9];
  uint64_t v22 = (void *)(v16 + v21);
  uint64_t v23 = (void *)(v17 + v21);
  uint64_t v24 = type metadata accessor for DateInterval();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v38 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26(v23, 1, v24);
  if (v22)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v38, v23, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v38, 0, 1, v24);
      goto LABEL_9;
    }
    size_t v28 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
    uint64_t v29 = v38;
  }
  else
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v38, v23, v24);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v38, v24);
    size_t v28 = *(void *)(*(void *)(sub_1000AFA94((uint64_t *)&unk_1009546B0) - 8) + 64);
    uint64_t v29 = v38;
  }
  memcpy(v29, v23, v28);
LABEL_9:
  *(unsigned char *)(v16 + v39[10]) = *(unsigned char *)(v17 + v39[10]);
  uint64_t v30 = v39[11];
  uint64_t v31 = v16 + v30;
  uint64_t v32 = v17 + v30;
  uint64_t v33 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = v37[11];
  *(unsigned char *)(a1 + v37[10]) = *(unsigned char *)(a2 + v37[10]);
  uint64_t v35 = *(void **)(a1 + v34);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);

  return a1;
}

uint64_t sub_100647A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for MetricDetailViewModel();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 36);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 44));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100647B8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for MetricDetailViewModel();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 36);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_100647C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v38 = a2;
  uint64_t v6 = type metadata accessor for Playlist();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v31 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v34 = v7 + 16;
  uint64_t v36 = v7 + 32;
  uint64_t v37 = a1;
  int64_t v32 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v33 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t j = 0;
  uint64_t v35 = a3;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (j << 6); ; unint64_t i = __clz(__rbit64(v22)) + (j << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(void *)(v37 + 48) + *(void *)(v7 + 72) * i, v6);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v24(v9, v12, v6);
    if (Playlist.identifier.getter() == v38 && v25 == a3)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_27:
      int v27 = v30;
      v24(v30, v9, v6);
      uint64_t v28 = 0;
LABEL_29:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v27, v28, 1, v6);
      return swift_bridgeObjectRelease();
    }
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v26)
    {
      swift_release();
      goto LABEL_27;
    }
    uint64_t result = (*v33)(v9, v6);
    a3 = v35;
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = j + 1;
    if (__OFADD__(j, 1)) {
      break;
    }
    if (v21 >= v32) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v31 + 8 * v21);
    ++j;
    if (v22) {
      goto LABEL_19;
    }
    int64_t j = v21 + 1;
    if (v21 + 1 >= v32) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v31 + 8 * j);
    if (v22) {
      goto LABEL_19;
    }
    int64_t j = v21 + 2;
    if (v21 + 2 >= v32) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v31 + 8 * j);
    if (v22) {
      goto LABEL_19;
    }
    int64_t j = v21 + 3;
    if (v21 + 3 >= v32) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v31 + 8 * j);
    if (v22) {
      goto LABEL_19;
    }
    int64_t v23 = v21 + 4;
    if (v23 >= v32)
    {
LABEL_28:
      swift_release();
      uint64_t v28 = 1;
      int v27 = v30;
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v31 + 8 * v23);
    for (int64_t j = v23; !v22; ++v23)
    {
      int64_t j = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_31;
      }
      if (j >= v32) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v31 + 8 * j);
    }
LABEL_19:
    unint64_t v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_10064800C(uint64_t a1)
{
  return sub_10064804C(a1, "Navigating to create plan");
}

uint64_t sub_10064802C(uint64_t a1)
{
  return sub_10064804C(a1, "Navigating to plan detail");
}

uint64_t sub_10064804C(uint64_t a1, const char *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t *sub_100648190@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

void sub_100648268()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10064EB3C();
  }
}

void sub_1006482BC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100025B50();
  }
}

uint64_t sub_10064847C()
{
  sub_1000656A0(*(void **)(v0 + 88), *(void *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006484F4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100648564(void *a1)
{
  int64_t v21 = a1;
  uint64_t v1 = type metadata accessor for NavigationAnnotation();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v5 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v12._countAndFlagsBits = 0xD000000000000059;
  v12._object = (void *)0x80000001007BEBD0;
  v13._object = (void *)0x80000001007D2B40;
  v13._countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v12, v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1000AFA94((uint64_t *)&unk_100966E30);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1007509E0;
  static NavigationAnnotation.external.getter();
  uint64_t v22 = v14;
  sub_1000E280C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
  sub_1000AFA94(&qword_1009633E0);
  sub_1000A132C((unint64_t *)&qword_1009668F0, &qword_1009633E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10065E8C8(v21, (uint64_t)v4, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v15 = v20;
  unint64_t v16 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  v16(sub_10006D36C, v17);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
}

uint64_t sub_10064897C(void *a1)
{
  v18[0] = a1;
  uint64_t v1 = type metadata accessor for NavigationAnnotation();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v13._countAndFlagsBits = 0xD000000000000059;
  v13._object = (void *)0x80000001007BEBD0;
  v14._object = (void *)0x80000001007D2B20;
  v14._countAndFlagsBits = 0xD000000000000012;
  Logger.trace(file:function:)(v13, v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18[1] = _swiftEmptyArrayStorage;
  sub_1000E280C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
  sub_1000AFA94(&qword_1009633E0);
  sub_1000A132C((unint64_t *)&qword_1009668F0, &qword_1009633E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10065F8CC(v18[0], (uint64_t)v4, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v15 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  v15(sub_10006D36C, v16);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100648D40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  sub_10008E75C(a1, (uint64_t)v18);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v15 = v2;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    v14[1] = v8 + 4;
    uint64_t v10 = v19;
    uint64_t v9 = v20;
    sub_10007E4EC(v18, v19);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v10, v9);
    uint64_t v16 = sub_10008F1F4(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v18);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Navigating to Seymour catalog item %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  }
  else
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v18);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_100648F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  sub_10008E75C(a2, (uint64_t)v21);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v19 = v2;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v24 = v17;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v16 = v10 + 4;
    uint64_t v18 = v4;
    uint64_t v12 = v22;
    uint64_t v11 = v23;
    sub_10007E4EC(v21, v22);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    uint64_t v20 = sub_10008F1F4(v13, v14, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v21);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to navigate to Seymour catalog item %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  }
  else
  {
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v21);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1006491C4(uint64_t a1)
{
  v23[1] = a1;
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (void *)((char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
  *uint64_t v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    static Log.default.getter();
    v15._object = (void *)0x80000001007BEBD0;
    v15._countAndFlagsBits = 0xD000000000000059;
    v16._countAndFlagsBits = 0x657461676976616ELL;
    v16._object = (void *)0xEF293A6874697728;
    Logger.trace(file:function:)(v15, v16);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = (void **)sub_10007E4EC((void *)(*(void *)(v23[0] + OBJC_IVAR___CHFitnessAppContext_navigator) + 48), *(void *)(*(void *)(v23[0] + OBJC_IVAR___CHFitnessAppContext_navigator) + 72));
    uint64_t v18 = *v17;
    uint64_t v19 = (uint64_t)v17[1];
    if (v19 < 0)
    {
      swift_retain();
      AppCoordinator.navigateToRequest(_:)();
      sub_1000656A0(v18, v19);
    }
    else
    {
      id v20 = v18;
      BrowsingViewController.navigateToRequest(_:)();
    }
    int64_t v21 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = 0;
    *(void *)(v22 + 24) = 0;
    v21(sub_10006D36C, v22);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100649528(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v4 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v4);
  uint64_t v53 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NavigationPriority();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  __chkstk_darwin(v6);
  uint64_t v52 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v59 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NavigationSource();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  __chkstk_darwin(v9);
  uint64_t v58 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for NavigationIntent();
  uint64_t v40 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  CGRect v57 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NavigationRequest();
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  __chkstk_darwin(v12);
  uint64_t v46 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for NavigationResource();
  uint64_t v44 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v55 = (void *)((char *)v38 - v16);
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v39 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_10095BCB8);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Playlist();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  char v26 = (char *)v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v28 = (void *)result;
    v38[1] = v4;
    v38[2] = v2;
    swift_bridgeObjectRetain();
    uint64_t v29 = swift_bridgeObjectRetain();
    sub_100647C9C(v29, v60, a2, v22);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
    {
      swift_unknownObjectRelease();
      return sub_10008DB18((uint64_t)v22, &qword_10095BCB8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
      if ([v28 navigateToSeymourTab])
      {
        static Log.default.getter();
        v30._countAndFlagsBits = 0xD000000000000059;
        v30._object = (void *)0x80000001007BEBD0;
        v31._object = (void *)0x80000001007D2B00;
        v31._countAndFlagsBits = 0xD000000000000016;
        Logger.trace(file:function:)(v30, v31);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v17);
        uint64_t v32 = Playlist.identifier.getter();
        uint64_t v34 = v55;
        uint64_t v33 = v56;
        *uint64_t v55 = v32;
        v34[1] = v35;
        uint64_t v36 = v44;
        (*(void (**)(uint64_t *, void, uint64_t))(v44 + 104))(v34, enum case for NavigationResource.playlist(_:), v33);
        (*(void (**)(char *, uint64_t *, uint64_t))(v36 + 16))(v54, v34, v33);
        unsigned char *v57 = 1;
        (*(void (**)(void))(v40 + 104))();
        (*(void (**)(char *, void, uint64_t))(v42 + 104))(v58, enum case for NavigationSource.default(_:), v43);
        (*(void (**)(char *, void, uint64_t))(v45 + 104))(v59, enum case for NavigationRoutingBehavior.default(_:), v47);
        (*(void (**)(char *, void, uint64_t))(v50 + 104))(v52, enum case for NavigationPriority.default(_:), v51);
        id v61 = _swiftEmptyArrayStorage;
        sub_1000E280C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
        sub_1000AFA94(&qword_1009633E0);
        sub_1000A132C((unint64_t *)&qword_1009668F0, &qword_1009633E0);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v37 = (uint64_t)v46;
        NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
        sub_1006491C4(v37);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v37, v49);
        (*(void (**)(uint64_t *, uint64_t))(v36 + 8))(v55, v56);
        return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void *sub_100649D90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v3 = type metadata accessor for FitnessPlusStackViewModel();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v43 = sub_1000AFA94((uint64_t *)&unk_100966910);
  uint64_t v41 = *(void *)(v43 - 8);
  uint64_t v6 = *(void *)(v41 + 64);
  __chkstk_darwin(v43);
  uint64_t v40 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v37 - v8;
  uint64_t v9 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  __chkstk_darwin(v9);
  uint64_t v44 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t CatalogWorkoutsRequest = type metadata accessor for FetchCatalogWorkoutsRequest();
  uint64_t v42 = *(void *)(CatalogWorkoutsRequest - 8);
  __chkstk_darwin(CatalogWorkoutsRequest);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if ([result navigateToSeymourTab])
    {
      static Log.default.getter();
      v18._countAndFlagsBits = 0xD000000000000059;
      v18._object = (void *)0x80000001007BEBD0;
      v19._object = (void *)0x80000001007D2AD0;
      v19._countAndFlagsBits = 0xD00000000000002ALL;
      Logger.trace(file:function:)(v18, v19);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      uint64_t v37 = v4;
      uint64_t v20 = v39;
      uint64_t v21 = sub_1003D585C();
      sub_1001EF044((uint64_t)v21);
      swift_bridgeObjectRelease();
      uint64_t v38 = v12;
      FetchCatalogWorkoutsRequest.init(identifiers:)();
      sub_10007E4EC((void *)(v2 + OBJC_IVAR___CHFitnessAppContext_catalogClient), *(void *)(v2 + OBJC_IVAR___CHFitnessAppContext_catalogClient + 24));
      dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkouts(_:)();
      uint64_t v22 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1001F0F7C(v20, (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v23 = (*(unsigned __int8 *)(v37 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v22;
      sub_100350DA4((uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = sub_1006512E0;
      *(void *)(v25 + 24) = v24;
      char v26 = v40;
      uint64_t v27 = v41;
      uint64_t v28 = v48;
      uint64_t v29 = v43;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v40, v48, v43);
      unint64_t v30 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v31 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v31 + v30, v26, v29);
      uint64_t v32 = (uint64_t (**)(uint64_t *))(v31 + ((v6 + v30 + 7) & 0xFFFFFFFFFFFFFFF8));
      unsigned char *v32 = sub_100651360;
      v32[1] = (uint64_t (*)(uint64_t *))v25;
      uint64_t v33 = v44;
      Promise.init(asyncOperation:)();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
      uint64_t v34 = v47;
      uint64_t v35 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = 0;
      *(void *)(v36 + 24) = 0;
      v35(sub_10006D36C, v36);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v34);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v38, CatalogWorkoutsRequest);
    }
    else
    {
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10064A38C(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t v41 = a3;
  uint64_t v54 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v54);
  uint64_t v52 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for NavigationPriority();
  uint64_t v47 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v43 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for NavigationSource();
  uint64_t v39 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for NavigationIntent();
  uint64_t v37 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for NavigationRequest();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v48 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)type metadata accessor for NavigationResource();
  uint64_t v57 = *((void *)v10 - 1);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = type metadata accessor for Playlist();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  Swift::String v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v32 - v20;
  uint64_t v22 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v24 = (void *)result;
    sub_10064AAF8(v22, v41, (uint64_t)v18);

    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v18, v15);
    uint64_t v34 = v16;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v33 = v21;
    uint64_t v36 = v15;
    v25(v14, v21, v15);
    uint64_t v26 = v57;
    (*(void (**)(char *, void, char *))(v57 + 104))(v14, enum case for NavigationResource.unsavedPlaylist(_:), v10);
    uint64_t v27 = *(void (**)(char *, char *, char *))(v26 + 16);
    uint64_t v35 = v14;
    uint64_t v41 = v10;
    v27(v55, v14, v10);
    uint64_t v28 = v42;
    unsigned char *v42 = 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v37 + 104))(v28, enum case for NavigationIntent.push(_:), v38);
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v44, enum case for NavigationSource.default(_:), v40);
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v45, enum case for NavigationRoutingBehavior.default(_:), v46);
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v49, enum case for NavigationPriority.default(_:), v50);
    uint64_t v56 = _swiftEmptyArrayStorage;
    sub_1000E280C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
    sub_1000AFA94(&qword_1009633E0);
    sub_1000A132C((unint64_t *)&qword_1009668F0, &qword_1009633E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v29 = (uint64_t)v48;
    NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v31 = (void *)Strong;
      sub_1006491C4(v29);
    }
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v29, v53);
    (*(void (**)(char *, char *))(v57 + 8))(v35, v41);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v33, v36);
  }
  return result;
}

uint64_t sub_10064AAF8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  v75[3] = a3;
  uint64_t v5 = type metadata accessor for CatalogWorkout();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v89 = (void (*)(char *, unint64_t, uint64_t))((char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v86 = (char *)v75 - v9;
  uint64_t v10 = type metadata accessor for Date();
  __chkstk_darwin(v10 - 8);
  v75[2] = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for CatalogModality();
  uint64_t v12 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v83 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_100966900);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v90 = (void *)((char *)v75 - v18);
  unint64_t v19 = sub_100523EB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v20 = *(void *)(a1 + 16);
  char v87 = a2;
  uint64_t v76 = v14;
  uint64_t v77 = v6;
  BOOL v85 = v16;
  if (!v20)
  {
LABEL_17:
    uint64_t v45 = sub_1003D585C();
    swift_bridgeObjectRetain();
    uint64_t v46 = (char *)sub_100650E04((uint64_t)v45, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    BOOL v92 = &_swiftEmptySetSingleton;
    uint64_t v47 = *((void *)v46 + 2);
    uint64_t v86 = v46;
    if (v47)
    {
      uint64_t v89 = (void (*)(char *, unint64_t, uint64_t))v5;
      uint64_t v48 = &v46[(*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)];
      uint64_t v49 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v50 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain();
      uint64_t v51 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v52 = v83;
        CatalogWorkout.modality.getter();
        uint64_t v53 = CatalogModality.name.getter();
        uint64_t v55 = v54;
        (*v49)(v52, v84);
        uint64_t v56 = (uint64_t)v92;
        swift_bridgeObjectRetain();
        LOBYTE(v52) = sub_1003B0DF0(v53, v55, v56);
        swift_bridgeObjectRelease();
        if (v52)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1001E9330((Swift::Int *)&v91, v53, v55);
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v51 = sub_100084014(0, v51[2] + 1, 1, v51);
          }
          unint64_t v58 = v51[2];
          unint64_t v57 = v51[3];
          if (v58 >= v57 >> 1) {
            uint64_t v51 = sub_100084014((void *)(v57 > 1), v58 + 1, 1, v51);
          }
          v51[2] = v58 + 1;
          uint64_t v59 = &v51[2 * v58];
          v59[4] = v53;
          v59[5] = v55;
        }
        v48 += v50;
        --v47;
      }
      while (v47);
      uint64_t v60 = v86;
      swift_bridgeObjectRelease();
      uint64_t v5 = (uint64_t)v89;
      uint64_t v14 = v76;
      uint64_t v6 = v77;
    }
    else
    {
      uint64_t v51 = _swiftEmptyArrayStorage;
      uint64_t v60 = v46;
    }
    uint64_t v91 = v51;
    sub_1000AFA94((uint64_t *)&unk_10094B1F0);
    sub_1000A132C((unint64_t *)&qword_100958E70, (uint64_t *)&unk_10094B1F0);
    uint64_t v61 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v83 = v62;
    uint64_t v84 = v61;
    swift_bridgeObjectRelease();
    uint64_t v91 = _swiftEmptyArrayStorage;
    uint64_t v63 = *((void *)v60 + 2);
    uint64_t v64 = swift_bridgeObjectRetain();
    if (v63)
    {
      unint64_t v65 = 0;
      uint64_t v67 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v66 = v6 + 16;
      unint64_t v68 = v64 + ((*(unsigned __int8 *)(v66 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 64));
      uint64_t v69 = v5;
      uint64_t v88 = *(void *)(v66 + 56);
      uint64_t v89 = v67;
      uint64_t v70 = (void (**)(unint64_t, char *, uint64_t))(v66 + 16);
      do
      {
        uint64_t v71 = &v85[*(int *)(v14 + 48)];
        v89(v71, v68, v69);
        unint64_t v72 = (unint64_t)v90 + *(int *)(v14 + 48);
        unint64_t *v90 = v65;
        (*v70)(v72, v71, v69);
        sub_10064B2D0(v65, v72, v87, (unint64_t *)&v91);
        sub_10008DB18((uint64_t)v90, (uint64_t *)&unk_100966900);
        v68 += v88;
        ++v65;
      }
      while (v63 != v65);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v73 = swift_bridgeObjectRetain();
    sub_1001F0010(v73);
    swift_bridgeObjectRelease();
    static Date.now.getter();
    static String.random()();
    Playlist.init(identifier:name:items:dateCreated:)();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v88 = v20;
  v75[0] = v12;
  id v81 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v82 = v6 + 16;
  uint64_t v21 = (char *)(a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
  uint64_t v22 = *(void *)(v6 + 72);
  id v78 = (void (**)(unint64_t, char *, uint64_t))(v6 + 40);
  uint64_t v79 = (void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v80 = (void (**)(char *, uint64_t))(v6 + 8);
  v75[1] = a1;
  swift_bridgeObjectRetain();
  unint64_t v23 = v86;
  while (1)
  {
    uint64_t v25 = v81;
    v81(v23, v21, v5);
    uint64_t v26 = CatalogWorkout.identifier.getter();
    uint64_t v28 = v27;
    uint64_t v29 = v5;
    v25((char *)v89, v23, v5);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v91 = (void *)v19;
    unint64_t v32 = sub_1000DA1C0(v26, v28);
    uint64_t v33 = *(void *)(v19 + 16);
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      break;
    }
    char v36 = v31;
    if (*(void *)(v19 + 24) >= v35)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v39 = v91;
        if (v31) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1004F5040();
        uint64_t v39 = v91;
        if (v36) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1004ECBEC(v35, isUniquelyReferenced_nonNull_native);
      unint64_t v37 = sub_1000DA1C0(v26, v28);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_35;
      }
      unint64_t v32 = v37;
      uint64_t v39 = v91;
      if (v36)
      {
LABEL_3:
        unint64_t v24 = v39[7] + v32 * v22;
        uint64_t v5 = v29;
        (*v78)(v24, (char *)v89, v29);
        goto LABEL_4;
      }
    }
    v39[(v32 >> 6) + 8] |= 1 << v32;
    uint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
    *uint64_t v40 = v26;
    v40[1] = v28;
    unint64_t v41 = v39[7] + v32 * v22;
    uint64_t v5 = v29;
    (*v79)(v41, (char *)v89, v29);
    uint64_t v42 = v39[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_34;
    }
    v39[2] = v44;
    swift_bridgeObjectRetain();
LABEL_4:
    unint64_t v19 = (unint64_t)v91;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v23 = v86;
    (*v80)(v86, v5);
    v21 += v22;
    if (!--v88)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = v76;
      uint64_t v6 = v77;
      uint64_t v12 = v75[0];
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10064B2D0(unint64_t a1, unint64_t a2, char *a3, unint64_t *a4)
{
  uint64_t v9 = type metadata accessor for PlaylistItem();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (unint64_t *)((char *)&v26 - v14);
  uint64_t v16 = type metadata accessor for FitnessPlusStackViewModel();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v17 = *(int *)(v16 + 20);
  uint64_t v18 = *(void *)&a3[v17];
  if (*(void *)(v18 + 16) <= a1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v29 = v15;
  sub_10008E75C(v18 + 40 * a1 + 32, (uint64_t)v31);
  sub_1000AFA94((uint64_t *)&unk_100955630);
  sub_10007E2D8(0, (unint64_t *)&qword_10095E770);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v20 = v12;
    uint64_t v27 = v9;
    uint64_t v28 = a4;
    id v21 = v30;
    [v30 workoutActivityType];

    goto LABEL_8;
  }
  uint64_t v22 = *(void *)&a3[v17];
  if (*(void *)(v22 + 16) <= a1)
  {
    __break(1u);
    return result;
  }
  sub_10008E75C(v22 + 40 * a1 + 32, (uint64_t)v31);
  type metadata accessor for MindfulnessSessionViewModel();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v20 = v12;
    uint64_t v27 = v9;
    uint64_t v28 = a4;

LABEL_8:
    CatalogWorkout.identifier.getter();
    CatalogWorkout.mediaType.getter();
    CatalogWorkout.duration.getter();
    uint64_t v4 = v29;
    PlaylistItem.init(identifier:index:healthKitActivityType:mediaType:duration:)();
    a3 = v20;
    uint64_t v9 = v27;
    (*(void (**)(char *, unint64_t *, uint64_t))(v10 + 16))(v20, v4, v27);
    uint64_t v15 = v28;
    a2 = *v28;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v15 = a2;
    if (isUniquelyReferenced_nonNull_native)
    {
LABEL_9:
      unint64_t v25 = *(void *)(a2 + 16);
      unint64_t v24 = *(void *)(a2 + 24);
      if (v25 >= v24 >> 1)
      {
        a2 = sub_1001E8B94(v24 > 1, v25 + 1, 1, a2);
        *uint64_t v15 = a2;
      }
      *(void *)(a2 + 16) = v25 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(a2+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v25, a3, v9);
      return (*(uint64_t (**)(unint64_t *, uint64_t))(v10 + 8))(v4, v9);
    }
LABEL_15:
    a2 = sub_1001E8B94(0, *(void *)(a2 + 16) + 1, 1, a2);
    *uint64_t v15 = a2;
    goto LABEL_9;
  }
  return result;
}

void *sub_10064B5F8()
{
  uint64_t v1 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v56 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v39 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  __chkstk_darwin(v3);
  uint64_t v53 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NavigationSource();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  __chkstk_darwin(v5);
  uint64_t v49 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v7 - 8);
  uint64_t v46 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NavigationPriority();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NavigationIntent();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NavigationResource();
  uint64_t v40 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for NavigationRequest();
  uint64_t v51 = *(void *)(v17 - 8);
  uint64_t v52 = v17;
  __chkstk_darwin(v17);
  uint64_t v50 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if ([result navigateToSeymourTab])
    {
      uint64_t v38 = v1;
      static Log.default.getter();
      v24._countAndFlagsBits = 0xD000000000000059;
      v24._object = (void *)0x80000001007BEBD0;
      v25._object = (void *)0x80000001007D2AB0;
      v25._countAndFlagsBits = 0xD000000000000017;
      Logger.trace(file:function:)(v24, v25);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      uint64_t v26 = *(void **)(v0 + OBJC_IVAR___CHFitnessAppContext_navigator);
      sub_10007E4EC(v26 + 11, v26[14]);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
      uint64_t v27 = enum case for NavigationRootResourceState.automatic(_:);
      uint64_t v28 = type metadata accessor for NavigationRootResourceState();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v16, v27, v28);
      (*(void (**)(char *, void, uint64_t))(v40 + 104))(v16, enum case for NavigationResource.root(_:), v14);
      *uint64_t v13 = 0;
      (*(void (**)(unsigned char *, void, uint64_t))(v41 + 104))(v13, enum case for NavigationIntent.reset(_:), v42);
      (*(void (**)(char *, void, uint64_t))(v43 + 104))(v45, enum case for NavigationPriority.takeover(_:), v44);
      static NavigationAnnotation.tabSwitch.getter();
      (*(void (**)(char *, void, uint64_t))(v47 + 104))(v49, enum case for NavigationSource.default(_:), v48);
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, enum case for NavigationRoutingBehavior.default(_:), v55);
      uint64_t v29 = v50;
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
      id v30 = (void **)sub_10007E4EC(v26 + 6, v26[9]);
      unint64_t v32 = *v30;
      uint64_t v31 = (uint64_t)v30[1];
      if (v31 < 0)
      {
        swift_retain();
        BOOL v34 = v39;
        AppCoordinator.navigateToRequest(_:)();
        sub_1000656A0(v32, v31);
      }
      else
      {
        id v33 = v32;
        BOOL v34 = v39;
        BrowsingViewController.navigateToRequest(_:)();
      }
      uint64_t v35 = v38;
      char v36 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = 0;
      *(void *)(v37 + 24) = 0;
      v36(sub_10006D36C, v37);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v35);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v29, v52);
    }
    else
    {
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10064BD6C()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v67 = *(void *)(v0 - 8);
  uint64_t v68 = v0;
  __chkstk_darwin(v0);
  uint64_t v64 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v70 = (char *)&v53 - v3;
  __chkstk_darwin(v4);
  unint64_t v65 = (char *)&v53 - v5;
  unint64_t v63 = v6;
  __chkstk_darwin(v7);
  uint64_t v66 = (char *)&v53 - v8;
  uint64_t v69 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v69);
  uint64_t v59 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NavigationPriority();
  unint64_t v57 = *(void *)(v10 - 8);
  unint64_t v58 = (void (*)(uint64_t, char *, uint64_t))v10;
  __chkstk_darwin(v10);
  uint64_t v56 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v12 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NavigationSource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v53 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for NavigationIntent();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for NavigationResource();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  Swift::String v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for NavigationRequest();
  uint64_t v61 = *(void *)(v25 - 8);
  uint64_t v62 = v25;
  __n128 v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v22 + 104))(v24, enum case for NavigationResource.workoutPlanCreation(_:), v21, v26);
  *uint64_t v20 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v18 + 104))(v20, enum case for NavigationIntent.presentModal(_:), v17);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v53, enum case for NavigationSource.default(_:), v14);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v54, enum case for NavigationRoutingBehavior.default(_:), v55);
  (*(void (**)(char *, void, void))(v57 + 104))(v56, enum case for NavigationPriority.default(_:), v58);
  uint64_t v71 = _swiftEmptyArrayStorage;
  sub_1000E280C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
  sub_1000AFA94(&qword_1009633E0);
  sub_1000A132C((unint64_t *)&qword_1009668F0, &qword_1009633E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v69 = (uint64_t)v28;
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
  uint64_t v29 = (void **)sub_10007E4EC((void *)(*(void *)((char *)v60 + OBJC_IVAR___CHFitnessAppContext_navigator) + 48), *(void *)(*(void *)((char *)v60 + OBJC_IVAR___CHFitnessAppContext_navigator) + 72));
  id v30 = *v29;
  uint64_t v31 = (uint64_t)v29[1];
  if (v31 < 0)
  {
    swift_retain();
    AppCoordinator.navigateToRequest(_:)();
    sub_1000656A0(v30, v31);
  }
  else
  {
    id v32 = v30;
    BrowsingViewController.navigateToRequest(_:)();
  }
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_10064800C;
  *(void *)(v33 + 24) = 0;
  uint64_t v35 = v67;
  uint64_t v34 = v68;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  char v36 = v64;
  uint64_t v37 = v70;
  v60(v64, v70, v68);
  uint64_t v38 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v39 = (v38 + 16) & ~v38;
  uint64_t v59 = (char *)(v38 | 7);
  unint64_t v40 = (v63 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v63 = v40 + 16;
  unint64_t v41 = v40;
  unint64_t v57 = v40;
  uint64_t v42 = swift_allocObject();
  unint64_t v58 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 32);
  v58(v42 + v39, v36, v34);
  uint64_t v43 = (void *)(v42 + v41);
  *uint64_t v43 = sub_1000E2B90;
  v43[1] = v33;
  uint64_t v44 = v65;
  Promise.init(asyncOperation:)();
  uint64_t v67 = *(void *)(v35 + 8);
  ((void (*)(char *, uint64_t))v67)(v37, v34);
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_10064C634;
  *(void *)(v45 + 24) = 0;
  v60(v36, v44, v34);
  uint64_t v46 = swift_allocObject();
  v58(v46 + v39, v36, v34);
  uint64_t v47 = (void *)(v46 + v57);
  *uint64_t v47 = sub_1001B3D88;
  v47[1] = v45;
  uint64_t v48 = v66;
  Promise.init(asyncOperation:)();
  uint64_t v49 = (void (*)(char *, uint64_t))v67;
  ((void (*)(char *, uint64_t))v67)(v44, v34);
  uint64_t v50 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0;
  *(void *)(v51 + 24) = 0;
  v50(sub_10006D36C, v51);
  swift_release();
  swift_release();
  v49(v48, v34);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v69, v62);
}

uint64_t sub_10064C634(uint64_t a1)
{
  return sub_10064CF84(a1, "Failed to navigate to create plan: %@");
}

uint64_t sub_10064C69C()
{
  uint64_t v0 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v67 = *(void *)(v0 - 8);
  uint64_t v68 = v0;
  __chkstk_darwin(v0);
  uint64_t v64 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v70 = (char *)&v53 - v3;
  __chkstk_darwin(v4);
  unint64_t v65 = (char *)&v53 - v5;
  unint64_t v63 = v6;
  __chkstk_darwin(v7);
  uint64_t v66 = (char *)&v53 - v8;
  uint64_t v69 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v69);
  uint64_t v59 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NavigationPriority();
  unint64_t v57 = *(void *)(v10 - 8);
  unint64_t v58 = (void (*)(uint64_t, char *, uint64_t))v10;
  __chkstk_darwin(v10);
  uint64_t v56 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v12 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NavigationSource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v53 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for NavigationIntent();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for NavigationResource();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  Swift::String v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for NavigationRequest();
  uint64_t v61 = *(void *)(v25 - 8);
  uint64_t v62 = v25;
  __n128 v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v22 + 104))(v24, enum case for NavigationResource.workoutPlanDetail(_:), v21, v26);
  *uint64_t v20 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v18 + 104))(v20, enum case for NavigationIntent.push(_:), v17);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v53, enum case for NavigationSource.default(_:), v14);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v54, enum case for NavigationRoutingBehavior.default(_:), v55);
  (*(void (**)(char *, void, void))(v57 + 104))(v56, enum case for NavigationPriority.default(_:), v58);
  uint64_t v71 = _swiftEmptyArrayStorage;
  sub_1000E280C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
  sub_1000AFA94(&qword_1009633E0);
  sub_1000A132C((unint64_t *)&qword_1009668F0, &qword_1009633E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v69 = (uint64_t)v28;
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
  uint64_t v29 = (void **)sub_10007E4EC((void *)(*(void *)((char *)v60 + OBJC_IVAR___CHFitnessAppContext_navigator) + 48), *(void *)(*(void *)((char *)v60 + OBJC_IVAR___CHFitnessAppContext_navigator) + 72));
  id v30 = *v29;
  uint64_t v31 = (uint64_t)v29[1];
  if (v31 < 0)
  {
    swift_retain();
    AppCoordinator.navigateToRequest(_:)();
    sub_1000656A0(v30, v31);
  }
  else
  {
    id v32 = v30;
    BrowsingViewController.navigateToRequest(_:)();
  }
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_10064802C;
  *(void *)(v33 + 24) = 0;
  uint64_t v35 = v67;
  uint64_t v34 = v68;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  char v36 = v64;
  uint64_t v37 = v70;
  v60(v64, v70, v68);
  uint64_t v38 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v39 = (v38 + 16) & ~v38;
  uint64_t v59 = (char *)(v38 | 7);
  unint64_t v40 = (v63 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v63 = v40 + 16;
  unint64_t v41 = v40;
  unint64_t v57 = v40;
  uint64_t v42 = swift_allocObject();
  unint64_t v58 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 32);
  v58(v42 + v39, v36, v34);
  uint64_t v43 = (uint64_t (**)(uint64_t))(v42 + v41);
  *uint64_t v43 = sub_10003936C;
  v43[1] = (uint64_t (*)(uint64_t))v33;
  uint64_t v44 = v65;
  Promise.init(asyncOperation:)();
  uint64_t v67 = *(void *)(v35 + 8);
  ((void (*)(char *, uint64_t))v67)(v37, v34);
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_10064CF64;
  *(void *)(v45 + 24) = 0;
  v60(v36, v44, v34);
  uint64_t v46 = swift_allocObject();
  v58(v46 + v39, v36, v34);
  uint64_t v47 = (void *)(v46 + v57);
  *uint64_t v47 = sub_1001B3D88;
  v47[1] = v45;
  uint64_t v48 = v66;
  Promise.init(asyncOperation:)();
  uint64_t v49 = (void (*)(char *, uint64_t))v67;
  ((void (*)(char *, uint64_t))v67)(v44, v34);
  uint64_t v50 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0;
  *(void *)(v51 + 24) = 0;
  v50(sub_10006D36C, v51);
  swift_release();
  swift_release();
  v49(v48, v34);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v69, v62);
}

uint64_t sub_10064CF64(uint64_t a1)
{
  return sub_10064CF84(a1, "Failed to navigate to plan detail: %@");
}

uint64_t sub_10064CF84(uint64_t a1, const char *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v16 = v4;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v15 = a2;
    *(_DWORD *)uint64_t v11 = 138412290;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v18 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v14 = v12;
    uint64_t v4 = v16;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, v15, v11, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *sub_10064D1F4(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  uint64_t v31 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NavigationAnnotation();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NavigationRequest();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  uint64_t v36 = (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TrainerTipsGalleryNavigationBegan();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  TrainerTipsGalleryNavigationBegan.init()();
  sub_1000E280C(qword_100963730, (void (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan);
  dispatch thunk of EventHubProtocol.publish<A>(_:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if ([result navigateToSeymourTab])
    {
      static Log.default.getter();
      v17._countAndFlagsBits = 0xD000000000000059;
      v17._object = (void *)0x80000001007BEBD0;
      v18._object = (void *)0x80000001007D2A80;
      v18._countAndFlagsBits = 0xD000000000000029;
      Logger.trace(file:function:)(v17, v18);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
      uint64_t v19 = *(void **)(v1 + OBJC_IVAR___CHFitnessAppContext_navigator);
      sub_10007E4EC(v19 + 11, v19[14]);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
      uint64_t v20 = *(void **)(v35 + 16);
      uint64_t v21 = *(void **)(v35 + 24);
      static NavigationAnnotation.tabSwitch.getter();
      uint64_t v22 = v36;
      sub_1005B5134(v20, v21, (uint64_t)v6, v36);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
      uint64_t v23 = (void **)sub_10007E4EC(v19 + 6, v19[9]);
      Swift::String v24 = *v23;
      uint64_t v25 = (uint64_t)v23[1];
      if (v25 < 0)
      {
        swift_retain();
        uint64_t v27 = v31;
        AppCoordinator.navigateToRequest(_:)();
        sub_1000656A0(v24, v25);
      }
      else
      {
        id v26 = v24;
        uint64_t v27 = v31;
        BrowsingViewController.navigateToRequest(_:)();
      }
      uint64_t v28 = v40;
      uint64_t v29 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = 0;
      *(void *)(v30 + 24) = 0;
      v29(sub_10006D36C, v30);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v28);
      return (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v22, v38);
    }
    else
    {
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10064D718()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URLComponents();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v27 + 64);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = sub_1000AFA94(&qword_10094DD20);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)();
  Swift::String v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v17(v16, 1, v5))
  {
    sub_1000AFA94(&qword_10095B800);
    uint64_t v24 = v6;
    type metadata accessor for URLQueryItem();
    uint64_t v25 = v13;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007509E0;
    uint64_t v13 = v25;
    URLQueryItem.init(name:value:)();
    URLComponents.queryItems.setter();
    uint64_t v6 = v24;
  }
  if (v17(v16, 1, v5))
  {
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 1, 1, v18);
  }
  else
  {
    uint64_t v19 = v26;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v26, v16, v5);
    URLComponents.url.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  sub_10007E4EC((void *)(*(void *)(v1 + OBJC_IVAR___CHFitnessAppContext_navigator) + 88), *(void *)(*(void *)(v1 + OBJC_IVAR___CHFitnessAppContext_navigator) + 112));
  dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
  uint64_t v20 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
  sub_100650A4C((uint64_t)v13, (uint64_t)v11);
  unint64_t v21 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  sub_100634B68((uint64_t)v11, v22 + v21);
  sub_1000713D0((uint64_t)v4, (uint64_t)&unk_1009668D0, v22);
  swift_release();
  sub_10008DB18((uint64_t)v13, (uint64_t *)&unk_10094B790);
  return sub_10008DB18((uint64_t)v16, &qword_10094DD20);
}

uint64_t sub_10064DBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a4;
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v4[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  return _swift_task_switch(sub_10064DCBC, 0, 0);
}

uint64_t sub_10064DCBC()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  static Log.default.getter();
  v4._countAndFlagsBits = 0xD000000000000059;
  v4._object = (void *)0x80000001007BEBD0;
  v5._object = (void *)0x80000001007D2A60;
  v5._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[20] = self;
  type metadata accessor for MainActor();
  v0[21] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10064DDC8, v7, v6);
}

uint64_t sub_10064DDC8()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_release();
  *(void *)(v0 + 176) = [v1 sharedApplication];
  return _swift_task_switch(sub_10064DE4C, 0, 0);
}

uint64_t sub_10064DE4C()
{
  uint64_t v1 = v0[16];
  sub_100650A4C(v0[15], v1);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = 0;
  if (v4 != 1)
  {
    uint64_t v7 = v0[16];
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
  }
  v0[23] = v6;
  uint64_t v9 = (void *)v0[22];
  v0[2] = v0;
  v0[7] = v0 + 24;
  v0[3] = sub_10064DFE8;
  uint64_t v10 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1003F7064;
  v0[13] = &unk_1008D3468;
  v0[14] = v10;
  [v9 openURL:v6 withCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10064DFE8()
{
  return _swift_task_switch(sub_10064E0C8, 0, 0);
}

uint64_t sub_10064E0C8()
{
  uint64_t v1 = *(void **)(v0 + 184);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10064E14C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v4 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URLComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v32 + 64);
  uint64_t v13 = __chkstk_darwin(v11 - 8);
  uint64_t v33 = (uint64_t)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = sub_1000AFA94(&qword_10094DD20);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)();
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (!v19(v18, 1, v7))
  {
    sub_1000AFA94(&qword_10095B800);
    id v26 = v10;
    type metadata accessor for URLQueryItem();
    uint64_t v29 = v6;
    uint64_t v27 = v8;
    uint64_t v28 = v3;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100752410;
    URLQueryItem.init(name:value:)();
    uint64_t v6 = v29;
    URLQueryItem.init(name:value:)();
    uint64_t v8 = v27;
    uint64_t v3 = v28;
    URLQueryItem.init(name:value:)();
    URLComponents.queryItems.setter();
    uint64_t v10 = v26;
  }
  if (v19(v18, 1, v7))
  {
    uint64_t v20 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 1, 1, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v18, v7);
    URLComponents.url.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_10007E4EC((void *)(*(void *)(v3 + OBJC_IVAR___CHFitnessAppContext_navigator) + 88), *(void *)(*(void *)(v3 + OBJC_IVAR___CHFitnessAppContext_navigator) + 112));
  dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
  uint64_t v22 = v33;
  sub_100650A4C((uint64_t)v15, v33);
  unint64_t v23 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  *(void *)(v24 + 24) = 0;
  sub_100634B68(v22, v24 + v23);
  sub_1000713D0((uint64_t)v6, (uint64_t)&unk_1009668B8, v24);
  swift_release();
  sub_10008DB18((uint64_t)v15, (uint64_t *)&unk_10094B790);
  return sub_10008DB18((uint64_t)v18, &qword_10094DD20);
}

uint64_t sub_10064E640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a4;
  sub_1000AFA94((uint64_t *)&unk_10094B790);
  v4[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  return _swift_task_switch(sub_10064E730, 0, 0);
}

uint64_t sub_10064E730()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  static Log.default.getter();
  v4._countAndFlagsBits = 0xD000000000000059;
  v4._object = (void *)0x80000001007BEBD0;
  v5._object = (void *)0x80000001007D2A30;
  v5._countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[20] = self;
  type metadata accessor for MainActor();
  v0[21] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10064E83C, v7, v6);
}

uint64_t sub_10064E83C()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_release();
  *(void *)(v0 + 176) = [v1 sharedApplication];
  return _swift_task_switch(sub_10064E8C0, 0, 0);
}

uint64_t sub_10064E8C0()
{
  uint64_t v1 = v0[16];
  sub_100650A4C(v0[15], v1);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = 0;
  if (v4 != 1)
  {
    uint64_t v7 = v0[16];
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
  }
  v0[23] = v6;
  uint64_t v9 = (void *)v0[22];
  v0[2] = v0;
  v0[7] = v0 + 24;
  v0[3] = sub_10064EA5C;
  uint64_t v10 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1003F7064;
  v0[13] = &unk_1008D3428;
  v0[14] = v10;
  [v9 openURL:v6 withCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10064EA5C()
{
  return _swift_task_switch(sub_100651518, 0, 0);
}

uint64_t sub_10064EB3C()
{
  swift_getObjectType();
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  int v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong && (unsigned int v8 = [Strong navigateToSeymourTab], swift_unknownObjectRelease(), v8))
  {
    static Log.default.getter();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v12 = _typeName(_:qualified:)();
      uint64_t v20 = sub_10008F1F4(v12, v13, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s received MultiUserBeginActivityRequested; navigating to Seymour tab",
        v11,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  }
  else
  {
    static Log.default.getter();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v18 = _typeName(_:qualified:)();
      uint64_t v20 = sub_10008F1F4(v18, v19, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s received MultiUserBeginActivityRequested but failed navigating to Seymour tab", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
}

uint64_t sub_10064EE84(uint64_t a1)
{
  uint64_t v100 = a1;
  uint64_t v85 = type metadata accessor for BadgingCountsUpdated();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v102 = *(void *)(v3 - 8);
  uint64_t v103 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v101 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v77 = (char *)&v75 - v7;
  __chkstk_darwin(v6);
  id v78 = (char *)&v75 - v8;
  uint64_t v9 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v95 = *(void *)(v9 - 8);
  uint64_t v96 = v9;
  __chkstk_darwin(v9);
  uint64_t v97 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NavigationSource();
  uint64_t v91 = *(void *)(v11 - 8);
  uint64_t v92 = v11;
  __chkstk_darwin(v11);
  uint64_t v94 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NavigationAnnotation();
  __chkstk_darwin(v13 - 8);
  uint64_t v93 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NavigationPriority();
  uint64_t v88 = *(void *)(v15 - 8);
  uint64_t v89 = v15;
  __chkstk_darwin(v15);
  uint64_t v90 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for NavigationIntent();
  uint64_t v17 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  unint64_t v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for NavigationResource();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  unint64_t v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for NavigationRequest();
  uint64_t v98 = *(void *)(v24 - 8);
  uint64_t v99 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  char v87 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v76 = (char *)&v75 - v27;
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v32._countAndFlagsBits = 0xD00000000000001ELL;
  v33._countAndFlagsBits = 0xD000000000000059;
  v33._object = (void *)0x80000001007BEBD0;
  v32._object = (void *)0x80000001007D29F0;
  Logger.trace(file:function:)(v33, v32);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  uint64_t v82 = v28;
  uint64_t v81 = v29 + 8;
  uint64_t v80 = v34;
  v34(v31, v28);
  uint64_t v104 = v1;
  uint64_t v35 = v1 + OBJC_IVAR___CHFitnessAppContext_appBadgeAggregator;
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR___CHFitnessAppBadgeAggregator_isBrowsingSeymour] = 1;
  }
  if (v100)
  {
    uint64_t v79 = v35;
    if (v100 == 2)
    {
      uint64_t v37 = enum case for NavigationRootResourceState.automatic(_:);
      uint64_t v38 = type metadata accessor for NavigationRootResourceState();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v23, v37, v38);
      (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for NavigationResource.root(_:), v20);
      *unint64_t v19 = 0;
      (*(void (**)(unsigned char *, void, uint64_t))(v17 + 104))(v19, enum case for NavigationIntent.reset(_:), v86);
      (*(void (**)(char *, void, uint64_t))(v88 + 104))(v90, enum case for NavigationPriority.default(_:), v89);
      static NavigationAnnotation.tabReselection.getter();
      (*(void (**)(char *, void, uint64_t))(v91 + 104))(v94, enum case for NavigationSource.default(_:), v92);
      (*(void (**)(char *, void, uint64_t))(v95 + 104))(v97, enum case for NavigationRoutingBehavior.default(_:), v96);
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
      uint64_t v39 = v104;
      uint64_t v40 = (void **)sub_10007E4EC((void *)(*(void *)(v104 + OBJC_IVAR___CHFitnessAppContext_navigator) + 48), *(void *)(*(void *)(v104 + OBJC_IVAR___CHFitnessAppContext_navigator) + 72));
      uint64_t v42 = *v40;
      uint64_t v41 = (uint64_t)v40[1];
      if (v41 < 0)
      {
        swift_retain();
        uint64_t v44 = v77;
        AppCoordinator.navigateToRequest(_:)();
        sub_1000656A0(v42, v41);
      }
      else
      {
        id v43 = v42;
        uint64_t v44 = v77;
        BrowsingViewController.navigateToRequest(_:)();
      }
      uint64_t v46 = v102;
      uint64_t v45 = v103;
      uint64_t v47 = v101;
      uint64_t v57 = v98;
      unint64_t v58 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = 0;
      *(void *)(v59 + 24) = 0;
      v58(sub_10006D36C, v59);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v87, v99);
    }
    else
    {
      if (v100 != 1)
      {
        uint64_t v105 = v100;
        uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        return result;
      }
      uint64_t v48 = *(void **)(v104 + OBJC_IVAR___CHFitnessAppContext_navigator);
      sub_10007E4EC(v48 + 11, v48[14]);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
      uint64_t v49 = enum case for NavigationRootResourceState.automatic(_:);
      uint64_t v50 = type metadata accessor for NavigationRootResourceState();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v23, v49, v50);
      (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for NavigationResource.root(_:), v20);
      *unint64_t v19 = 0;
      (*(void (**)(unsigned char *, void, uint64_t))(v17 + 104))(v19, enum case for NavigationIntent.reset(_:), v86);
      (*(void (**)(char *, void, uint64_t))(v88 + 104))(v90, enum case for NavigationPriority.default(_:), v89);
      static NavigationAnnotation.tabSwitch.getter();
      (*(void (**)(char *, void, uint64_t))(v91 + 104))(v94, enum case for NavigationSource.default(_:), v92);
      (*(void (**)(char *, void, uint64_t))(v95 + 104))(v97, enum case for NavigationRoutingBehavior.default(_:), v96);
      uint64_t v51 = v76;
      NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
      uint64_t v52 = (void **)sub_10007E4EC(v48 + 6, v48[9]);
      uint64_t v54 = *v52;
      uint64_t v53 = (uint64_t)v52[1];
      if (v53 < 0)
      {
        swift_retain();
        uint64_t v56 = v78;
        AppCoordinator.navigateToRequest(_:)();
        sub_1000656A0(v54, v53);
      }
      else
      {
        id v55 = v54;
        uint64_t v56 = v78;
        BrowsingViewController.navigateToRequest(_:)();
      }
      uint64_t v46 = v102;
      uint64_t v45 = v103;
      uint64_t v47 = v101;
      uint64_t v60 = v51;
      uint64_t v61 = v98;
      uint64_t v62 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = 0;
      *(void *)(v63 + 24) = 0;
      v62(sub_10006D36C, v63);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v56, v45);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v99);
      uint64_t v39 = v104;
    }
  }
  else
  {
    uint64_t v39 = v104;
    sub_10007E4EC((void *)(*(void *)(v104 + OBJC_IVAR___CHFitnessAppContext_navigator) + 88), *(void *)(*(void *)(v104 + OBJC_IVAR___CHFitnessAppContext_navigator) + 112));
    dispatch thunk of MetricSceneLifecycleReporting.reportDidBecomeActive()();
    uint64_t v46 = v102;
    uint64_t v45 = v103;
    uint64_t v47 = v101;
  }
  if ((*(void *)(v39 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator + 8) & 0x8000000000000000) == 0)
  {
    id v64 = *(id *)(v39 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator);
    dispatch thunk of BrowsingViewController.reportTabSelectedEvent()();
  }
  uint64_t v65 = swift_unknownObjectWeakLoadStrong();
  if (v65)
  {
    uint64_t v66 = (void *)v65;
    static Log.default.getter();
    v67._countAndFlagsBits = 0xD000000000000065;
    v67._object = (void *)0x80000001007B9E10;
    v68._object = (void *)0x80000001007B9E80;
    v68._countAndFlagsBits = 0xD000000000000013;
    Logger.trace(file:function:)(v67, v68);
    v80(v31, v82);
    uint64_t v69 = swift_bridgeObjectRetain();
    sub_1000DE218(v69);
    swift_bridgeObjectRelease();
    uint64_t v70 = v83;
    BadgingCountsUpdated.init(appBadgeCount:seymourTabBadges:)();
    swift_getObjectType();
    uint64_t v71 = v85;
    dispatch thunk of EventHubProtocol.publish<A>(_:)();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v70, v71);
  }
  sub_10007E4EC((void *)(*(void *)(v39 + OBJC_IVAR___CHFitnessAppContext_engagementAppBadgeProvider) + 16), *(void *)(*(void *)(v39 + OBJC_IVAR___CHFitnessAppContext_engagementAppBadgeProvider) + 40));
  dispatch thunk of EngagementClientProtocol.deleteAllEngagementBadges()();
  unint64_t v72 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = 0;
  *(void *)(v73 + 24) = 0;
  v72(sub_10006D36C, v73);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v45);
}

uint64_t sub_10064FC18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  v6._countAndFlagsBits = 0xD000000000000059;
  v6._object = (void *)0x80000001007BEBD0;
  v7._object = (void *)0x80000001007D29D0;
  v7._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v6, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR___CHFitnessAppBadgeAggregator_isBrowsingSeymour] = 0;
  }
  sub_10007E4EC((void *)(*(void *)(v1 + OBJC_IVAR___CHFitnessAppContext_navigator) + 88), *(void *)(*(void *)(v1 + OBJC_IVAR___CHFitnessAppContext_navigator) + 112));
  return dispatch thunk of MetricSceneLifecycleReporting.reportDidDeselectTab()();
}

void sub_10064FE10(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1;
  static Log.default.getter();
  v14._object = (void *)0x80000001007BEBD0;
  v14._countAndFlagsBits = 0xD000000000000059;
  v15._countAndFlagsBits = a3;
  v15._object = a4;
  Logger.trace(file:function:)(v14, v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = *(void **)&v13[OBJC_IVAR___CHFitnessAppContext_navigator];
  uint64_t v17 = v16[14];
  uint64_t v18 = v16[15];
  sub_10007E4EC(v16 + 11, v17);
  a5(v17, v18);
}

uint64_t sub_10064FF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a3;
  v38[1] = a1;
  uint64_t v39 = a2;
  uint64_t v5 = sub_1000AFA94((uint64_t *)&unk_100966880);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v42 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v12 = *(void *)(v42 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v40 = (char *)v38 - v15;
  __chkstk_darwin(v16);
  id v43 = (char *)v38 - v17;
  CompletedWorkoutShareItemProvider.activityItems(workout:)();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1006508D0;
  *(void *)(v19 + 24) = v18;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v21 = (v7 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v22 + v20, v8, v5);
  unint64_t v23 = (uint64_t (**)(uint64_t *))(v22 + v21);
  char *v23 = sub_1006509AC;
  v23[1] = (uint64_t (*)(uint64_t *))v19;
  uint64_t v24 = v44;
  swift_retain();
  uint64_t v25 = v40;
  Promise.init(asyncOperation:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v39;
  *(void *)(v26 + 24) = v24;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_1006509E0;
  *(void *)(v27 + 24) = v26;
  uint64_t v29 = v41;
  uint64_t v28 = v42;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v41, v25, v42);
  unint64_t v30 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v31 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v31 + v30, v29, v28);
  Swift::String v32 = (uint64_t (**)(uint64_t))(v31 + ((v13 + v30 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v32 = sub_1001B36B8;
  v32[1] = (uint64_t (*)(uint64_t))v27;
  swift_retain();
  Swift::String v33 = v43;
  Promise.init(asyncOperation:)();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  v34(v25, v28);
  uint64_t v35 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = 0;
  *(void *)(v36 + 24) = 0;
  v35(sub_10006D8B4, v36);
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v34)(v33, v28);
}

void sub_100650484(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    sub_10007E2D8(0, &qword_100966920);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  if (a2) {
    uint64_t v6 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);
}

BOOL sub_100650530()
{
  uint64_t v1 = v0 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CHFitnessAppContext_browsingCoordinator);
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3 < 0)
  {
    swift_retain();
    id v4 = (id)AppCoordinator.rootViewController.getter();
    sub_1000656A0(v2, v3);
  }
  else
  {
    id v4 = v2;
  }
  id v5 = [v4 presentedViewController];

  if (!v5) {
    goto LABEL_7;
  }
  type metadata accessor for SessionViewController();
  uint64_t v6 = (void *)swift_dynamicCastClass();
  if (!v6)
  {

LABEL_7:
    uint64_t v6 = 0;
  }
  BOOL v7 = v6 != 0;

  return v7;
}

id sub_100650648()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessAppContext();
  return [super dealloc];
}

uint64_t sub_100650898()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006508D0(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, 0);
}

uint64_t sub_100650908(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();

  return Promise.init(asyncOperation:)();
}

uint64_t sub_1006509AC(uint64_t *a1)
{
  return sub_100650908(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1006509B4()
{
  return sub_10001EC00((uint64_t *)&unk_100966880);
}

uint64_t sub_1006509C0(uint64_t a1, uint64_t a2)
{
  return sub_1000E30E8(a1, a2, (uint64_t *)&unk_100966880, sub_10048BA10);
}

uint64_t sub_1006509E0(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_100650A18()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100650A38()
{
  return sub_10001EC00((uint64_t *)&unk_100966890);
}

uint64_t sub_100650A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100650AB8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000AFA94((uint64_t *)&unk_10094B790) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000DBD6C;
  return sub_10064E640(a1, v5, v6, v7);
}

uint64_t sub_100650BAC()
{
  uint64_t v1 = *(void *)(sub_1000AFA94((uint64_t *)&unk_10094B790) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

uint64_t sub_100650CD4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000AFA94((uint64_t *)&unk_10094B790) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10005DB5C;
  return sub_10064DBCC(a1, v5, v6, v7);
}

uint64_t sub_100650DC8()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100650DD4()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100650DE4()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100650DF0()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

void *sub_100650E04(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000AFA94(&qword_10095DD00);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CatalogWorkout();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v34 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v31 = (char *)v29 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v29[1] = v2;
    v29[2] = v9 + 16;
    Swift::String v32 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    Swift::String v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    v29[0] = a1;
    uint64_t v15 = (uint64_t *)(a1 + 40);
    uint64_t v35 = _swiftEmptyArrayStorage;
    uint64_t v30 = v9;
    while (1)
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v16 = *(v15 - 1);
        uint64_t v17 = *v15;
        swift_bridgeObjectRetain();
        unint64_t v18 = sub_1000DA1C0(v16, v17);
        if (v19)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, *(void *)(a2 + 56) + *(void *)(v9 + 72) * v18, v8);
          uint64_t v20 = 0;
        }
        else
        {
          uint64_t v20 = 1;
        }
        (*v14)(v7, v20, 1, v8);
        swift_bridgeObjectRelease();
        if ((*v33)(v7, 1, v8) != 1)
        {
          unint64_t v21 = v31;
          uint64_t v22 = *v32;
          (*v32)(v31, v7, v8);
          v22(v34, v21, v8);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v23 = (unint64_t)v35;
          }
          else {
            unint64_t v23 = sub_1001E81E4(0, v35[2] + 1, 1, (unint64_t)v35);
          }
          unint64_t v25 = *(void *)(v23 + 16);
          unint64_t v24 = *(void *)(v23 + 24);
          if (v25 >= v24 >> 1) {
            unint64_t v23 = sub_1001E81E4(v24 > 1, v25 + 1, 1, v23);
          }
          *(void *)(v23 + 16) = v25 + 1;
          unint64_t v26 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v35 = (void *)v23;
          unint64_t v27 = v23 + v26 + *(void *)(v30 + 72) * v25;
          uint64_t v9 = v30;
          v22((char *)v27, v34, v8);
          goto LABEL_5;
        }
      }
      else
      {
        (*v14)(v7, 1, 1, v8);
      }
      sub_10008DB18((uint64_t)v7, &qword_10095DD00);
LABEL_5:
      v15 += 2;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        return v35;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100651164()
{
  uint64_t v1 = (int *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(v3 + v1[10], v4);
  uint64_t v6 = v3 + v1[11];
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_deallocObject();
}

uint64_t sub_1006512E0(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FitnessPlusStackViewModel() - 8);
  return sub_10064A38C(a1, *(void *)(v1 + 16), (char *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))));
}

uint64_t sub_100651360(uint64_t *a1)
{
  return sub_10048CB40(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100651368()
{
  return sub_10001EC00((uint64_t *)&unk_100966910);
}

uint64_t sub_100651374(uint64_t a1, uint64_t a2)
{
  return sub_1000E30E8(a1, a2, (uint64_t *)&unk_100966910, sub_10048B920);
}

uint64_t sub_1006513A4()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_1006513DC(objc_class *a1, uint64_t a2)
{
  sub_100650484(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1006513E4()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_100651438()
{
}

void sub_100651440()
{
}

uint64_t sub_100651448()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100651480()
{
}

ValueMetadata *type metadata accessor for TabSelection()
{
  return &type metadata for TabSelection;
}

unint64_t sub_10065149C()
{
  unint64_t result = qword_1009669C0;
  if (!qword_1009669C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009669C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChartableMetric(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10033A2C8(0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006515E8);
      case 4:
        *(_DWORD *)(result + sub_10033A2C8(0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10033A2C8(0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10033A2C8(0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChartableMetric()
{
  return &type metadata for ChartableMetric;
}

id sub_100651620(char a1)
{
  switch(a1)
  {
    case 1:
    case 8:
    case 9:
      id v1 = [self paceColors];
      if (!v1)
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      uint64_t v2 = v1;
      id v3 = [v1 nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_5:
      id v4 = [self paceColors];
      if (!v4) {
        goto LABEL_25;
      }
      uint64_t v5 = v4;
      id v3 = [v4 nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_8:
      id v6 = [self elevationColors];
      id v3 = [v6 nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_10:
      id v7 = [self powerColors];
      id v3 = [v7 nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_12:
      id v8 = [self elapsedTimeColors];
      if (!v8) {
        goto LABEL_26;
      }
      uint64_t v9 = v8;
      id v3 = [v8 nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_15:
      id v10 = [self distanceColors];
      if (!v10) {
        goto LABEL_27;
      }
      uint64_t v11 = v10;
      id v3 = [v10 nonGradientTextColor];

      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_18:
      id v12 = [self distanceColors];
      if (!v12)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12;
      id v3 = [v12 nonGradientTextColor];

      if (!v3)
      {
        __break(1u);
LABEL_21:
        id v14 = [self heartRateColors];
        if (v14)
        {
          uint64_t v15 = v14;
          id v3 = [v14 nonGradientTextColor];

          if (v3) {
            return v3;
          }
LABEL_30:
          __break(1u);
          JUMPOUT(0x1006518D4);
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      return v3;
    case 2:
      goto LABEL_8;
    case 3:
    case 10:
      goto LABEL_5;
    case 4:
      goto LABEL_10;
    case 5:
      goto LABEL_12;
    case 6:
      goto LABEL_15;
    case 7:
      goto LABEL_18;
    default:
      goto LABEL_21;
  }
}

uint64_t sub_100651900()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 localizedStringForKey:v1 value:0 table:0];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

void *sub_100651C40()
{
  NSString v1 = (char *)[v0 effectiveTypeIdentifier] - 13;
  unint64_t result = _swiftEmptyArrayStorage;
  switch((unint64_t)v1)
  {
    case 0uLL:
      unsigned int v3 = [v0 isIndoor];
      id v4 = &off_1008B6400;
      uint64_t v5 = &off_1008B63D8;
      goto LABEL_11;
    case 0xBuLL:
      return &off_1008B6478;
    case 0x12uLL:
      return &off_1008B65E0;
    case 0x16uLL:
      unsigned int v3 = [v0 isIndoor];
      id v4 = &off_1008B6540;
      uint64_t v5 = &off_1008B6518;
      goto LABEL_11;
    case 0x18uLL:
      unsigned int v3 = [v0 isIndoor];
      id v4 = &off_1008B63B0;
      uint64_t v5 = &off_1008B6388;
      goto LABEL_11;
    case 0x1AuLL:
      unsigned int v3 = [v0 isIndoor];
      id v4 = &off_1008B6590;
      uint64_t v5 = &off_1008B6568;
      goto LABEL_11;
    case 0x21uLL:
    case 0x45uLL:
      return result;
    case 0x27uLL:
      unsigned int v3 = [v0 isIndoor];
      id v4 = &off_1008B6450;
      uint64_t v5 = &off_1008B6428;
LABEL_11:
      if (v3) {
        unint64_t result = v5;
      }
      else {
        unint64_t result = v4;
      }
      break;
    case 0x2FuLL:
      unint64_t result = &off_1008B64F0;
      break;
    case 0x30uLL:
    case 0x36uLL:
      unint64_t result = &off_1008B65B8;
      break;
    case 0x39uLL:
      unint64_t result = &off_1008B64A0;
      break;
    case 0x3AuLL:
      unint64_t result = &off_1008B64C8;
      break;
    default:
      unint64_t result = &off_1008B6608;
      break;
  }
  return result;
}

unint64_t sub_100651ED8(char a1)
{
  unint64_t result = 0x7461527472616568;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701011824;
      break;
    case 2:
      unint64_t result = 0x6F69746176656C65;
      break;
    case 3:
      unint64_t result = 0x65636E65646163;
      break;
    case 4:
      unint64_t result = 0x7265776F70;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x654C656469727473;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x6465657073;
      break;
    case 9:
      unint64_t result = 0x53676E696C637963;
      break;
    case 10:
      unint64_t result = 0x43676E696C637963;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10065204C(char a1)
{
  unint64_t result = 0x7461527472616568;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701011824;
      break;
    case 2:
      unint64_t result = 0x6F69746176656C65;
      break;
    case 3:
      unint64_t result = 0x65636E65646163;
      break;
    case 4:
      unint64_t result = 0x7265776F70;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x654C656469727473;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x6465657073;
      break;
    case 9:
      unint64_t result = 0x53676E696C637963;
      break;
    case 10:
      unint64_t result = 0x43676E696C637963;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006521C0(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_10065204C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10065204C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10065224C()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10065204C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1006522B0()
{
  sub_10065204C(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100652304()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10065204C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_100652364@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1006524F4(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100652394@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10065204C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1006523C0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100652420()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100652470@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100651ED8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1006524A0()
{
  unint64_t result = qword_1009669D0;
  if (!qword_1009669D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009669D0);
  }
  return result;
}

unint64_t sub_1006524F4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B7028, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xB) {
    return 11;
  }
  else {
    return v3;
  }
}

unint64_t sub_100652540()
{
  unint64_t result = qword_1009669D8;
  if (!qword_1009669D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009669D8);
  }
  return result;
}

uint64_t sub_100652594(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t sub_100652728(void *a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v46 = a12;
  uint64_t v47 = a13;
  uint64_t v23 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DispatchQoS();
  uint64_t v48 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v43 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v31 = (void *)result;
    id v32 = [self polylineWithPoints:a11 + 32 count:*(void *)(a11 + 16)];
    id v44 = v32;
    sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
    uint64_t v45 = static OS_dispatch_queue.main.getter();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = a2;
    *(void *)(v33 + 24) = v31;
    *(void *)(v33 + 32) = v32;
    *(double *)(v33 + 40) = a3;
    *(double *)(v33 + 48) = a4;
    *(double *)(v33 + 56) = a5;
    *(double *)(v33 + 64) = a6;
    *(double *)(v33 + 72) = a7;
    *(double *)(v33 + 80) = a8;
    *(double *)(v33 + 88) = a9;
    uint64_t v34 = v46;
    *(void *)(v33 + 96) = a1;
    *(void *)(v33 + 104) = v34;
    uint64_t v35 = v29;
    uint64_t v36 = v23;
    *(void *)(v33 + 112) = v47;
    aBlock[4] = sub_100654E30;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100070394;
    aBlock[3] = &unk_1008D3990;
    uint64_t v37 = _Block_copy(aBlock);
    uint64_t v46 = v27;
    uint64_t v38 = v37;
    swift_errorRetain();
    id v39 = a1;
    swift_retain();
    id v40 = v31;
    id v41 = v44;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100075B54();
    sub_1000AFA94((uint64_t *)&unk_1009555E0);
    sub_100075AF8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v42 = (void *)v45;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v36);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v35, v46);
  }
  return result;
}

void sub_100652ACC(uint64_t a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, uint64_t a9, void *a10, void *a11, void (*a12)(void))
{
  if (a1)
  {
    swift_errorRetain();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    uint64_t v22 = (void *)HKLogWorkouts;
    os_log_type_t v23 = v21;
    if (os_log_type_enabled(HKLogWorkouts, v21))
    {
      swift_errorRetain();
      swift_errorRetain();
      os_log_t log = v22;
      id v39 = a12;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      swift_getErrorValue();
      uint64_t v25 = Error.errorDescription.getter();
      sub_10008F1F4(v25, v26, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v23, "[routes] Error generating snapshot: %s. Rendering polyline without map.", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a12 = v39;
      swift_slowDealloc();
    }
    uint64_t v27 = sub_100653928(a10, a2, a3, a4, a5, a6, a7, a8);
    swift_errorRelease();
  }
  else if (a11)
  {
    id v29 = a11;
    os_log_type_t v30 = static os_log_type_t.info.getter();
    uint64_t v31 = (void *)HKLogWorkouts;
    os_log_type_t v32 = v30;
    if (os_log_type_enabled(HKLogWorkouts, v30))
    {
      id v40 = a12;
      id v33 = v29;
      uint64_t v37 = v31;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138412290;
      uint64_t v41 = (uint64_t)v33;
      id v36 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v35 = a11;

      a12 = v40;
      _os_log_impl((void *)&_mh_execute_header, v37, v32, "[routes] Received snapshot back from MKMapSnapshotter: %@", v34, 0xCu);
      sub_1000AFA94((uint64_t *)&unk_100955620);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    uint64_t v27 = sub_1006532FC(a10, v29, a2, a3, a4, a5, a6);
  }
  else
  {
    uint64_t v27 = 0;
  }
  a12(v27);
}

double sub_100652F54(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v13 = *(void *)(a1 + 16);
  id v14 = (double *)(a1 + 32);
  id v15 = [self polylineWithPoints:a1 + 32 count:v13];
  [v15 boundingMapRect];
  if (v18 == 0.0 || v19 == 0.0)
  {
    if (v13)
    {
      double v39 = *(double *)(a1 + 32);
      if (*(unsigned char *)(v7 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive))
      {
        uint64_t v40 = 0x41024F8000000000;
LABEL_43:
        double v45 = *(double *)&v40;
        goto LABEL_44;
      }
    }
    else
    {
      double v39 = 0.0;
      if (*(unsigned char *)(v7 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive))
      {
        double v45 = 150000.0;
LABEL_44:

        return v39 - v45 * 0.5 + -15.0;
      }
    }
    uint64_t v40 = 0x4097700000000000;
    goto LABEL_43;
  }
  double v20 = 0.0;
  double v21 = 0.0;
  if (v13)
  {
    double v21 = *(double *)(a1 + 40);
    uint64_t v22 = &v14[2 * v13];
    if (*(v22 - 1) < v21) {
      double v21 = *(v22 - 1);
    }
  }
  double v23 = 15.0 / a3 * v19 - (v21 - v17);
  if (v23 < 0.0) {
    double v24 = 0.0;
  }
  else {
    double v24 = v23 * 1.5;
  }
  double v25 = 7.5 / a2 * v18;
  double v26 = 0.0;
  if (v13)
  {
    double v26 = *v14;
    uint64_t v27 = &v14[2 * v13];
    double v28 = *(v27 - 2);
    double v20 = v28 >= *v14 ? *v14 : *(v27 - 2);
    if (v26 <= v28) {
      double v26 = *(v27 - 2);
    }
  }
  double v29 = v17 - v24;
  double v30 = v19 + v24;
  double v31 = v25 - (v20 - v16);
  double v32 = v31 * 1.5;
  double v33 = v25 + v26 - (v16 + v18);
  BOOL v34 = v31 < 0.0;
  double v35 = 0.0;
  if (v34) {
    double v32 = 0.0;
  }
  if (v33 >= 0.0) {
    double v35 = v33 * 1.5;
  }
  if (v20 + -15.0 < v16) {
    double v32 = v32 * 1.5;
  }
  double v36 = v16 - v32;
  if (v18 + v16 - v32 >= v26 + 15.0) {
    double v37 = v35;
  }
  else {
    double v37 = v35 * 1.5;
  }
  double v38 = v18 + v32 + v37;
  if (UIEdgeInsetsZero.top == a4
    && UIEdgeInsetsZero.left == a5
    && UIEdgeInsetsZero.bottom == a6
    && UIEdgeInsetsZero.right == a7)
  {
    v50.origin.x = v36;
    v50.origin.y = v29;
    v50.size.width = v38;
    v50.size.height = v30;
    *(void *)&double v36 = (unint64_t)MKMapRectInset(v50, v38 * -0.05, v30 * -0.05);
LABEL_41:

    return v36;
  }
  double v41 = a2 - a5 - a7;
  if (v41 <= 0.0 || (double v42 = a3 - a4 - a6, v42 <= 0.0))
  {
    static os_log_type_t.error.getter();
    id v46 = HKLogWorkouts;
    os_log(_:dso:log:_:_:)();

    goto LABEL_41;
  }

  double v43 = v38 * (v41 / v42 / (v38 / v30));
  double v44 = v36 + (v43 - v38) * -0.5;
  if (v38 / v30 >= v41 / v42)
  {
    double v43 = v38;
    double v44 = v36;
  }
  return v44 - v43 / v41 * a5;
}

UIImage *sub_1006532FC(void *a1, void *a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v11 = *(void **)(v7 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = v7;
  id v20 = v11;
  id v21 = [v20 allValidLocations];
  unint64_t v22 = sub_10007E2D8(0, (unint64_t *)&qword_100957EE0);
  unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v68) {
      goto LABEL_30;
    }
  }
  else if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_30;
  }
  if ((v23 & 0xC000000000000001) != 0)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_29;
    }
    id v24 = *(id *)(v23 + 32);
  }
  double v25 = v24;
  swift_bridgeObjectRelease();
  char v8 = &selRef_setPercentMinimized_;
  [v25 coordinate];
  double v9 = v26;
  double v10 = v27;

  id v28 = [v20 allValidLocations];
  unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v22 >> 62))
  {
    uint64_t v29 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v29) {
      goto LABEL_9;
    }
LABEL_30:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_29:
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v29) {
    goto LABEL_30;
  }
LABEL_9:
  uint64_t result = (UIImage *)(v29 - 1);
  if (__OFSUB__(v29, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  double v71 = v10;
  double v72 = v9;
  if ((v22 & 0xC000000000000001) != 0)
  {
LABEL_34:
    id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_14;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)result < *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v31 = *(id *)(v22 + 8 * (void)result + 32);
LABEL_14:
    double v32 = v31;
    swift_bridgeObjectRelease();
    [v32 v8[455]];
    double v69 = v34;
    double v70 = v33;

    id v35 = [a2 image];
    [v35 size];
    CGFloat v37 = v36;
    CGFloat v39 = v38;

    id v40 = [self mainScreen];
    [v40 scale];
    CGFloat v42 = v41;

    v73.width = v37;
    v73.height = v39;
    UIGraphicsBeginImageContextWithOptions(v73, 0, v42);
    id v43 = [a2 image];
    [v43 size];
    double v45 = v44;

    id v46 = [a2 image];
    [v46 size];
    double v48 = v47;

    id v49 = [a2 image];
    [v49 drawInRect:0.0, 0.0, v45, v48];

    MKMapRect v50 = UIGraphicsGetCurrentContext();
    if (v50)
    {
      uint64_t v51 = v50;
      uint64_t v52 = &selRef_configurePlayer;
      uint64_t v53 = &selRef_setCenterCoordinate_;
      if ((uint64_t)[v20 count] >= 2)
      {
        uint64_t v52 = &selRef_configurePlayer;
        uint64_t v54 = (void *)(*(uint64_t (**)(void *, id))(*(void *)(v7
                                                                        + OBJC_IVAR___CHWorkoutRouteMapGenerator_pathRendererClass)
                                                            + 88))(a1, v20);
        __chkstk_darwin(v54);
        (*(void (**)(CGContext *, id (*)(double, double), double, double, double, double, double))((swift_isaMask & *v55) + 0x78))(v51, sub_100654D20, a4, a5, a6, a7, a3);

        CGContextStrokePath(v51);
        uint64_t v56 = (objc_class *)type metadata accessor for WorkoutEndLocationAnnotation();
        id v57 = [objc_allocWithZone(v56) init];
        if (*(unsigned char *)(v12 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) == 1)
        {
          id v58 = [objc_allocWithZone(v56) init];
          id v59 = [objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()) initWithAnnotation:v58 reuseIdentifier:0];

          id v57 = v58;
        }
        else
        {
          id v59 = [objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()) initWithAnnotation:v57 reuseIdentifier:0];
        }

        uint64_t v53 = &selRef_setCenterCoordinate_;
        [a2 pointForCoordinate:v70, v69];
        sub_100654C04(v59, v51, v60, v61);
      }
      id v62 = [objc_allocWithZone((Class)type metadata accessor for WorkoutStartLocationAnnotation()) v52[510]];
      if (*(unsigned char *)(v12 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) == 1)
      {
        id v63 = [objc_allocWithZone((Class)type metadata accessor for WorkoutEndLocationAnnotation()) v52[510]];
        id v64 = [objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()) initWithAnnotation:v63 reuseIdentifier:0];

        id v62 = v63;
      }
      else
      {
        id v64 = [objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()) initWithAnnotation:v62 reuseIdentifier:0];
      }

      [a2 v53[368] v72 v71];
      sub_100654C04(v64, v51, v65, v66);
      Swift::String v67 = UIGraphicsGetImageFromCurrentImageContext();
      UIGraphicsEndImageContext();

      return v67;
    }

    return 0;
  }
  __break(1u);
  return result;
}

UIImage *sub_100653928(void *a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8)
{
  uint64_t v11 = *(void **)(v8 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = v8;
  id v20 = v11;
  id v21 = [v20 allValidLocations];
  unint64_t v22 = sub_10007E2D8(0, (unint64_t *)&qword_100957EE0);
  unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v59) {
      goto LABEL_33;
    }
  }
  else if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_33;
  }
  if ((v23 & 0xC000000000000001) != 0)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    id v24 = *(id *)(v23 + 32);
  }
  double v25 = v24;
  swift_bridgeObjectRelease();
  double v9 = &selRef_setPercentMinimized_;
  [v25 coordinate];
  CLLocationDegrees v10 = v26;
  v64.longitude = v27;

  id v28 = [v20 allValidLocations];
  unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v22 >> 62))
  {
    uint64_t v29 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v29) {
      goto LABEL_9;
    }
LABEL_33:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v29) {
    goto LABEL_33;
  }
LABEL_9:
  uint64_t result = (UIImage *)(v29 - 1);
  if (__OFSUB__(v29, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  v64.latitude = v10;
  if ((v22 & 0xC000000000000001) != 0)
  {
LABEL_37:
    id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_14;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)result < *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v31 = *(id *)(v22 + 8 * (void)result + 32);
LABEL_14:
    double v32 = v31;
    swift_bridgeObjectRelease();
    [v32 v9[455]];
    uint64_t v60 = v34;
    uint64_t v62 = v33;

    id v35 = [self mainScreen];
    [v35 scale];
    CGFloat v37 = v36;

    v65.width = a7;
    v65.height = a8;
    UIGraphicsBeginImageContextWithOptions(v65, 0, v37);
    double v38 = UIGraphicsGetCurrentContext();
    if (v38)
    {
      CGFloat v39 = v38;
      if (a7 / a8 < a5 / a6) {
        double v40 = a7 / a5;
      }
      else {
        double v40 = a8 / a6;
      }
      double v41 = (a7 - v40 * a5) * 0.5;
      double v42 = (a8 - v40 * a6) * 0.5;
      id v43 = &selRef_configurePlayer;
      if ((uint64_t)objc_msgSend(v20, "count", v60, v62) >= 2)
      {
        double v44 = *(uint64_t (**)(void))(*(void *)(v8 + OBJC_IVAR___CHWorkoutRouteMapGenerator_pathRendererClass) + 88);
        id v45 = v20;
        id v46 = a1;
        id v43 = &selRef_configurePlayer;
        double v47 = (void *)v44();
        __n128 v48 = __chkstk_darwin([v46 boundingMapRect]);
        (*(void (**)(CGContext *, double (*)(double), __n128))((swift_isaMask & *v47) + 0x78))(v39, sub_100654CF8, v48);

        CGContextStrokePath(v39);
        id v49 = (objc_class *)type metadata accessor for WorkoutEndLocationAnnotation();
        id v50 = [objc_allocWithZone(v49) init];
        if (*(unsigned char *)(v12 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) == 1)
        {
          id v51 = [objc_allocWithZone(v49) init];
          id v52 = [objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()) initWithAnnotation:v51 reuseIdentifier:0];

          id v50 = v51;
        }
        else
        {
          id v52 = [objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()) initWithAnnotation:v50 reuseIdentifier:0];
        }

        v66.longitude = v61;
        v66.latitude = v63;
        MKMapPoint v53 = MKMapPointForCoordinate(v66);
        sub_100654C04(v52, v39, v41 + v40 * (v53.x - a3), v42 + v40 * (v53.y - a4));
      }
      id v54 = [objc_allocWithZone((Class)type metadata accessor for WorkoutStartLocationAnnotation()) v43[510]];
      if (*(unsigned char *)(v12 + OBJC_IVAR___CHWorkoutRouteMapGenerator_isForDive) == 1)
      {
        id v55 = [objc_allocWithZone((Class)type metadata accessor for WorkoutEndLocationAnnotation()) v43[510]];
        id v56 = [objc_allocWithZone((Class)type metadata accessor for DivingLocationAnnotationView()) initWithAnnotation:v55 reuseIdentifier:0];

        id v54 = v55;
      }
      else
      {
        id v56 = [objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView()) initWithAnnotation:v54 reuseIdentifier:0];
      }

      MKMapPoint v57 = MKMapPointForCoordinate(v64);
      sub_100654C04(v56, v39, v41 + v40 * (v57.x - a3), v42 + v40 * (v57.y - a4));
      id v58 = UIGraphicsGetImageFromCurrentImageContext();
      UIGraphicsEndImageContext();

      return v58;
    }

    return 0;
  }
  __break(1u);
  return result;
}

id sub_100653F28()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutRouteMapGenerator();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutRouteMapGenerator()
{
  return self;
}

void sub_100653FCC(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v65 = a6;
  uint64_t v19 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = (void *)swift_allocObject();
  void v23[2] = a3;
  id v24 = *(void **)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
  if (v24)
  {
    double v25 = (double *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize);
    if ((*(unsigned char *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize + 16) & 1) == 0)
    {
      a4 = *v25;
      a5 = v25[1];
    }
    id v26 = a3;
    id v27 = v24;
    id v28 = [v27 allValidLocations];
    sub_10007E2D8(0, (unint64_t *)&qword_100957EE0);
    unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v62 = v20;
    id v63 = v27;
    CLLocationDegrees v61 = v22;
    uint64_t v64 = a1;
    if (v30)
    {
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1001C932C(0, v30 & ~(v30 >> 63), 0);
      if (v30 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v60 = v19;
      CLLocationCoordinate2D v66 = v23;
      uint64_t v31 = 0;
      double v32 = (void *)aBlock[0];
      do
      {
        if ((v29 & 0xC000000000000001) != 0) {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v33 = *(id *)(v29 + 8 * v31 + 32);
        }
        uint64_t v34 = v33;
        [v33 coordinate:v60];
        MKMapPoint v35 = MKMapPointForCoordinate(v69);

        aBlock[0] = v32;
        unint64_t v37 = v32[2];
        unint64_t v36 = v32[3];
        if (v37 >= v36 >> 1)
        {
          sub_1001C932C(v36 > 1, v37 + 1, 1);
          double v32 = (void *)aBlock[0];
        }
        ++v31;
        v32[2] = v37 + 1;
        *(MKMapPoint *)&v32[2 * v37 + 4] = v35;
      }
      while (v30 != v31);
      swift_bridgeObjectRelease();
      unint64_t v23 = v66;
      uint64_t v19 = v60;
    }
    else
    {
      swift_bridgeObjectRelease();
      double v32 = _swiftEmptyArrayStorage;
    }
    double v39 = sub_100652F54((uint64_t)v32, a4, a5, a7, a8, a9, a10);
    double v41 = v40;
    double v43 = v42;
    double v45 = v44;
    CLLocationCoordinate2D v66 = [objc_allocWithZone((Class)MKMapSnapshotOptions) init];
    [v66 setTraitCollection:v64];
    [v66 setMapRect:v39, v41, v43, v45];
    [v66 setMapType:5];
    [v66 setSize:a4, a5];
    uint64_t v46 = OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter;
    [*(id *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter) cancel];
    double v47 = *(void **)(a2 + v46);
    *(void *)(a2 + v46) = 0;

    id v48 = objc_allocWithZone((Class)MKMapSnapshotter);
    id v49 = [v48 initWithOptions:v66];
    id v50 = *(void **)(a2 + v46);
    *(void *)(a2 + v46) = v49;

    id v51 = *(void **)(a2 + v46);
    if (v51)
    {
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      MKMapPoint v53 = v61;
      uint64_t v52 = v62;
      (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for DispatchQoS.QoSClass.userInitiated(_:), v19);
      id v54 = v51;
      id v55 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v19);
      uint64_t v56 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v56;
      *(void *)(v57 + 24) = v32;
      *(double *)(v57 + 32) = v65;
      *(double *)(v57 + 40) = v39;
      *(double *)(v57 + 48) = v41;
      *(double *)(v57 + 56) = v43;
      *(double *)(v57 + 64) = v45;
      *(double *)(v57 + 72) = a4;
      *(double *)(v57 + 80) = a5;
      *(void *)(v57 + 88) = sub_100654E8C;
      *(void *)(v57 + 96) = v23;
      aBlock[4] = sub_100654DD4;
      aBlock[5] = v57;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100259288;
      aBlock[3] = &unk_1008D3A08;
      id v58 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v54 startWithQueue:v55 completionHandler:v58];

      _Block_release(v58);
      swift_release();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();

      id v59 = v66;
    }
  }
  else
  {
    id v38 = a3;
    sub_10058B66C(0);
    swift_release();
  }
}

void sub_1006545E0(uint64_t a1, uint64_t a2, void (**a3)(void, void), double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v63 = a6;
  uint64_t v19 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = (void *)swift_allocObject();
  void v23[2] = a3;
  id v24 = *(void **)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_locationReadings);
  if (v24)
  {
    double v25 = (double *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize);
    if ((*(unsigned char *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSize + 16) & 1) == 0)
    {
      a4 = *v25;
      a5 = v25[1];
    }
    _Block_copy(a3);
    id v26 = v24;
    id v27 = [v26 allValidLocations];
    sub_10007E2D8(0, (unint64_t *)&qword_100957EE0);
    unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v60 = v20;
    id v61 = v26;
    id v59 = v22;
    uint64_t v62 = a1;
    if (v29)
    {
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1001C932C(0, v29 & ~(v29 >> 63), 0);
      if (v29 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v58 = v19;
      uint64_t v64 = v23;
      uint64_t v30 = 0;
      uint64_t v31 = (void *)aBlock[0];
      do
      {
        if ((v28 & 0xC000000000000001) != 0) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(v28 + 8 * v30 + 32);
        }
        id v33 = v32;
        [v32 coordinate:v58];
        MKMapPoint v34 = MKMapPointForCoordinate(v67);

        aBlock[0] = v31;
        unint64_t v36 = v31[2];
        unint64_t v35 = v31[3];
        if (v36 >= v35 >> 1)
        {
          sub_1001C932C(v35 > 1, v36 + 1, 1);
          uint64_t v31 = (void *)aBlock[0];
        }
        ++v30;
        v31[2] = v36 + 1;
        *(MKMapPoint *)&v31[2 * v36 + 4] = v34;
      }
      while (v29 != v30);
      swift_bridgeObjectRelease();
      unint64_t v23 = v64;
      uint64_t v19 = v58;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = _swiftEmptyArrayStorage;
    }
    double v37 = sub_100652F54((uint64_t)v31, a4, a5, a7, a8, a9, a10);
    double v39 = v38;
    double v41 = v40;
    double v43 = v42;
    uint64_t v64 = [objc_allocWithZone((Class)MKMapSnapshotOptions) init];
    [v64 setTraitCollection:v62];
    [v64 setMapRect:v37, v39, v41, v43];
    [v64 setMapType:5];
    [v64 setSize:a4, a5];
    uint64_t v44 = OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter;
    [*(id *)(a2 + OBJC_IVAR___CHWorkoutRouteMapGenerator_mapSnapshotter) cancel];
    double v45 = *(void **)(a2 + v44);
    *(void *)(a2 + v44) = 0;

    id v46 = objc_allocWithZone((Class)MKMapSnapshotter);
    id v47 = [v46 initWithOptions:v64];
    id v48 = *(void **)(a2 + v44);
    *(void *)(a2 + v44) = v47;

    id v49 = *(void **)(a2 + v44);
    if (v49)
    {
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      id v51 = v59;
      uint64_t v50 = v60;
      (*(void (**)(char *, void, uint64_t))(v60 + 104))(v59, enum case for DispatchQoS.QoSClass.userInitiated(_:), v19);
      id v52 = v49;
      MKMapPoint v53 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v19);
      uint64_t v54 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v54;
      *(void *)(v55 + 24) = v31;
      *(double *)(v55 + 32) = v63;
      *(double *)(v55 + 40) = v37;
      *(double *)(v55 + 48) = v39;
      *(double *)(v55 + 56) = v41;
      *(double *)(v55 + 64) = v43;
      *(double *)(v55 + 72) = a4;
      *(double *)(v55 + 80) = a5;
      *(void *)(v55 + 88) = sub_1002460B8;
      *(void *)(v55 + 96) = v23;
      aBlock[4] = sub_100654DD4;
      aBlock[5] = v55;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100259288;
      aBlock[3] = &unk_1008D3940;
      uint64_t v56 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v52 startWithQueue:v53 completionHandler:v56];

      _Block_release(v56);
      swift_release();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();

      id v57 = v64;
    }
  }
  else
  {
    _Block_copy(a3);
    a3[2](a3, 0);
    swift_release();
  }
}

void sub_100654C04(void *a1, CGContext *a2, double a3, double a4)
{
  [a1 bounds];
  double v8 = a3 - CGRectGetMidX(v16);
  [a1 centerOffset];
  CGFloat v10 = v8 + v9;
  [a1 bounds];
  double v11 = a4 - CGRectGetMidY(v17);
  [a1 centerOffset];
  CGFloat v13 = v11 + v12;
  CGContextSaveGState(a2);
  CGContextTranslateCTM(a2, v10, v13);
  [a1 prepareForSnapshotting];
  id v14 = [a1 layer];
  [v14 renderInContext:a2];

  CGContextRestoreGState(a2);
}

double sub_100654CF8(double a1)
{
  return (a1 - v1[2]) * v1[6] + v1[7];
}

id sub_100654D20(double a1, double a2)
{
  unint64_t v3 = *(void **)(v2 + 16);
  CLLocationCoordinate2D v4 = MKCoordinateForMapPoint(*(MKMapPoint *)&a1);

  return [v3 pointForCoordinate:v4.latitude, v4.longitude];
}

uint64_t sub_100654D60()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_100654D98()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100654DD8()
{
  swift_errorRelease();

  swift_release();

  return swift_deallocObject();
}

void sub_100654E30()
{
  sub_100652ACC(*(void *)(v0 + 16), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72), *(CGFloat *)(v0 + 80), *(CGFloat *)(v0 + 88), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 96), *(void (**)(void))(v0 + 104));
}

uint64_t sub_100654E54()
{
  return swift_deallocObject();
}

uint64_t sub_100654E8C(void *a1)
{
  return sub_10058B66C(a1);
}

uint64_t sub_100654E98()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100654EE0(void *a1, uint64_t a2)
{
  return sub_100652728(a1, a2, *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56), *(double *)(v2 + 64), *(double *)(v2 + 72), *(double *)(v2 + 80), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 88), *(void *)(v2 + 96));
}

uint64_t assignWithCopy for ActivityStatistics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  return a1;
}

__n128 initializeWithTake for ActivityStatistics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for ActivityStatistics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v5;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityStatistics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 193)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityStatistics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 192) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 193) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 193) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100655218(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 176);
  v15[10] = *(_OWORD *)(a1 + 160);
  v15[11] = v2;
  char v16 = *(unsigned char *)(a1 + 192);
  long long v3 = *(_OWORD *)(a1 + 112);
  v15[6] = *(_OWORD *)(a1 + 96);
  id v15[7] = v3;
  long long v4 = *(_OWORD *)(a1 + 144);
  v15[8] = *(_OWORD *)(a1 + 128);
  v15[9] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  id v15[2] = *(_OWORD *)(a1 + 32);
  v15[3] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  v15[4] = *(_OWORD *)(a1 + 64);
  v15[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  v17[10] = *(_OWORD *)(a2 + 160);
  v17[11] = v8;
  char v18 = *(unsigned char *)(a2 + 192);
  long long v9 = *(_OWORD *)(a2 + 112);
  void v17[6] = *(_OWORD *)(a2 + 96);
  v17[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 144);
  v17[8] = *(_OWORD *)(a2 + 128);
  v17[9] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  v17[2] = *(_OWORD *)(a2 + 32);
  v17[3] = v11;
  long long v12 = *(_OWORD *)(a2 + 80);
  v17[4] = *(_OWORD *)(a2 + 64);
  v17[5] = v12;
  long long v13 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v13;
  return sub_1006552BC((uint64_t)v15, (uint64_t)v17) & 1;
}

uint64_t sub_1006552BC(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  if ((sub_1003755DC(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0) {
    return 0;
  }
  if (!sub_10037564C(v4, v5)) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 136);
  if ((sub_1003755DC(*(void *)(a1 + 72), *(void *)(a2 + 72)) & 1) == 0
    || !sub_10037564C(v6, v9)
    || (sub_1003755DC(v8, v11) & 1) == 0
    || !sub_10037564C(v7, v10))
  {
    return 0;
  }
  char v12 = *(unsigned char *)(a2 + 192);
  unsigned __int8 v13 = *(unsigned char *)(a1 + 192);

  return sub_10047EB80(v13, v12);
}

Swift::Int sub_1006553B4(uint64_t a1, uint64_t a2, char a3)
{
  Hasher.init(_seed:)();
  if (a3)
  {
    if (a3 == 1)
    {
      Hasher._combine(_:)(3uLL);
      String.hash(into:)();
    }
    else
    {
      if (a1 | a2)
      {
        if (a1 ^ 1 | a2) {
          Swift::UInt v10 = 4;
        }
        else {
          Swift::UInt v10 = 1;
        }
      }
      else
      {
        Swift::UInt v10 = 0;
      }
      Hasher._combine(_:)(v10);
    }
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    Swift::UInt v6 = *(void *)(a1 + 16);
    Hasher._combine(_:)(v6);
    if (v6)
    {
      uint64_t v7 = *(void *)(type metadata accessor for CatalogLockup() - 8);
      uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v9 = *(void *)(v7 + 72);
      sub_1000A9538(&qword_1009581F8, (void (*)(uint64_t))&type metadata accessor for CatalogLockup);
      do
      {
        dispatch thunk of Hashable.hash(into:)();
        v8 += v9;
        --v6;
      }
      while (v6);
    }
  }
  return Hasher._finalize()();
}

uint64_t sub_100655544()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

Swift::Int sub_1006555BC()
{
  return sub_1006553B4(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_1006555C8()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 16))
  {
    uint64_t v2 = v0[1];
    if (*((unsigned char *)v0 + 16) == 1)
    {
      Hasher._combine(_:)(3uLL);
      String.hash(into:)();
    }
    else
    {
      if (v1 | v2)
      {
        if (v1 ^ 1 | v2) {
          Swift::UInt v7 = 4;
        }
        else {
          Swift::UInt v7 = 1;
        }
      }
      else
      {
        Swift::UInt v7 = 0;
      }
      Hasher._combine(_:)(v7);
    }
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    Swift::UInt v3 = *(void *)(v1 + 16);
    Hasher._combine(_:)(v3);
    if (v3)
    {
      uint64_t v4 = *(void *)(type metadata accessor for CatalogLockup() - 8);
      uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      uint64_t v6 = *(void *)(v4 + 72);
      sub_1000A9538(&qword_1009581F8, (void (*)(uint64_t))&type metadata accessor for CatalogLockup);
      do
      {
        dispatch thunk of Hashable.hash(into:)();
        v5 += v6;
        --v3;
      }
      while (v3);
    }
  }
}

Swift::Int sub_100655750()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  int v3 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)();
  if (v3)
  {
    if (v3 == 1)
    {
      Hasher._combine(_:)(3uLL);
      String.hash(into:)();
    }
    else
    {
      if (v1 | v2)
      {
        if (v1 ^ 1 | v2) {
          Swift::UInt v8 = 4;
        }
        else {
          Swift::UInt v8 = 1;
        }
      }
      else
      {
        Swift::UInt v8 = 0;
      }
      Hasher._combine(_:)(v8);
    }
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    Swift::UInt v4 = *(void *)(v1 + 16);
    Hasher._combine(_:)(v4);
    if (v4)
    {
      uint64_t v5 = *(void *)(type metadata accessor for CatalogLockup() - 8);
      uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v7 = *(void *)(v5 + 72);
      sub_1000A9538(&qword_1009581F8, (void (*)(uint64_t))&type metadata accessor for CatalogLockup);
      do
      {
        dispatch thunk of Hashable.hash(into:)();
        v6 += v7;
        --v4;
      }
      while (v4);
    }
  }
  return Hasher._finalize()();
}

uint64_t sub_1006558D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100655948()
{
  uint64_t v0 = sub_1000AFA94(&qword_10094B7A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[FitnessPlusCardDataProvider] Activating on service subscription updated", v9, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
    type metadata accessor for MainActor();
    id v13 = v11;
    uint64_t v14 = static MainActor.shared.getter();
    id v15 = (void *)swift_allocObject();
    id v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v13;
    sub_1000713D0((uint64_t)v2, (uint64_t)&unk_10095CBC0, (uint64_t)v15);

    return swift_release();
  }
  return result;
}

uint64_t sub_100655BB0()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[10];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  static Log.default.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    Swift::UInt v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *Swift::UInt v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[FitnessPlusCardDataProvider] Failed checking subscription status: %@", v9, 0xCu);
    sub_1000AFA94((uint64_t *)&unk_100955620);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12(0);
}

uint64_t sub_100655E08()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100655EB4()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100655F44()
{
  uint64_t v1 = PersonalizationInferenceResponse.shelves.getter();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 376);
    uint64_t v6 = *(void (**)(void, unint64_t, void))(v3 + 16);
    uint64_t v4 = v3 + 16;
    uint64_t v5 = v6;
    unint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
    uint64_t v8 = *(void *)(v4 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v5(*(void *)(v0 + 384), v7, *(void *)(v0 + 368));
      if (PersonalizationShelfDescriptor.displayStyle.getter() == 0x4C4553554F524143 && v9 == 0xE800000000000000) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_12;
      }
      (*(void (**)(void, void))(v4 - 8))(*(void *)(v0 + 384), *(void *)(v0 + 368));
      v7 += v8;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    (*(void (**)(void, void, void))(*(void *)(v0 + 376) + 32))(*(void *)(v0 + 360), *(void *)(v0 + 384), *(void *)(v0 + 368));
    uint64_t v12 = 0;
  }
  else
  {
LABEL_10:
    uint64_t v12 = 1;
  }
  uint64_t v14 = *(void *)(v0 + 368);
  uint64_t v13 = *(void *)(v0 + 376);
  uint64_t v15 = *(void *)(v0 + 360);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v15, v12, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14) == 1)
  {
    uint64_t v76 = *(void *)(v0 + 472);
    uint64_t v16 = *(void *)(v0 + 456);
    uint64_t v17 = *(void *)(v0 + 464);
    uint64_t v18 = *(void *)(v0 + 360);
    uint64_t v19 = *(void **)(v0 + 288);
    swift_release();
    sub_10008DB18(v18, &qword_100966B60);
    *(unsigned char *)(v0 + 59) = 1;
    sub_10065BB58();
    uint64_t v20 = Error.localizedDescription.getter();
    uint64_t v22 = v21;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 184) = v20;
    *(void *)(v0 + 192) = v22;
    *(unsigned char *)(v0 + 200) = 1;
    id v23 = v19;
    static Published.subscript.setter();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v76, v16);
LABEL_31:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v59 = *(uint64_t (**)(void))(v0 + 8);
    return v59();
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 376) + 32))(*(void *)(v0 + 392), *(void *)(v0 + 360), *(void *)(v0 + 368));
  uint64_t v24 = PersonalizationShelfDescriptor.candidates.getter();
  double v25 = (char *)_swiftEmptyArrayStorage;
  uint64_t v77 = *(void *)(v24 + 16);
  uint64_t v79 = (char *)_swiftEmptyArrayStorage;
  if (!v77)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    if (!*((void *)v25 + 2))
    {
      uint64_t v51 = *(void *)(v0 + 464);
      uint64_t v75 = *(void *)(v0 + 456);
      uint64_t v78 = *(void *)(v0 + 472);
      uint64_t v73 = *(void *)(v0 + 392);
      uint64_t v53 = *(void *)(v0 + 368);
      uint64_t v52 = *(void *)(v0 + 376);
      uint64_t v54 = *(void **)(v0 + 288);
      swift_release();
      swift_release();
      *(unsigned char *)(v0 + 57) = 0;
      sub_10065BB58();
      uint64_t v55 = Error.localizedDescription.getter();
      uint64_t v57 = v56;
      swift_getKeyPath();
      swift_getKeyPath();
      *(void *)(v0 + 136) = v55;
      *(void *)(v0 + 144) = v57;
      *(unsigned char *)(v0 + 152) = 1;
      id v58 = v54;
      static Published.subscript.setter();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v73, v53);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v78, v75);
      goto LABEL_31;
    }
    uint64_t v41 = *(void *)(v0 + 288);
    *(void *)(v41 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_candidates) = v25;
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)(v41 + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeBodyFocusMapTask);
    *(void *)(v0 + 528) = v42;
    if (v42)
    {
      uint64_t v43 = v0 + 232;
      swift_retain();
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 536) = v44;
      uint64_t v45 = sub_1000AFA94(&qword_100966B78);
      uint64_t v46 = sub_1000AFA94(&qword_10095C080);
      void *v44 = v0;
      id v47 = sub_100656AAC;
    }
    else
    {
      *(void *)(v0 + 552) = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v61 = *(void *)(*(void *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_queryLocaleTask);
      *(void *)(v0 + 560) = v61;
      if (v61)
      {
        swift_retain();
        uint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 568) = v62;
        uint64_t v46 = sub_1000AFA94(&qword_10095C080);
        void *v62 = v0;
        v62[1] = sub_1006570F4;
        uint64_t v48 = *(void *)(v0 + 296);
        uint64_t v50 = *(void *)(v0 + 304);
        uint64_t v49 = v61;
        goto LABEL_36;
      }
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 296), 1, 1, *(void *)(v0 + 304));
      uint64_t v63 = *(void *)(v0 + 296);
      static Locale.autoupdatingCurrent.getter();
      sub_10008DB18(v63, (uint64_t *)&unk_10095BF60);
      uint64_t v42 = *(void *)(*(void *)(v0 + 288)
                      + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask);
      *(void *)(v0 + 584) = v42;
      if (v42)
      {
        uint64_t v43 = v0 + 248;
        swift_retain();
        uint64_t v44 = (void *)swift_task_alloc();
        *(void *)(v0 + 592) = v44;
        uint64_t v45 = sub_1000AFA94(&qword_100966B78);
        uint64_t v46 = sub_1000AFA94(&qword_10095C080);
        void *v44 = v0;
        id v47 = sub_1006576CC;
      }
      else
      {
        *(void *)(v0 + 608) = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v42 = *(void *)(*(void *)(v0 + 288)
                        + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask);
        *(void *)(v0 + 616) = v42;
        if (v42)
        {
          uint64_t v43 = v0 + 256;
          swift_retain();
          uint64_t v44 = (void *)swift_task_alloc();
          *(void *)(v0 + 624) = v44;
          uint64_t v45 = sub_1000AFA94(&qword_100966B78);
          uint64_t v46 = sub_1000AFA94(&qword_10095C080);
          void *v44 = v0;
          id v47 = sub_100657BB0;
        }
        else
        {
          *(void *)(v0 + 640) = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v42 = *(void *)(*(void *)(v0 + 288)
                          + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
          *(void *)(v0 + 648) = v42;
          if (!v42) {
            goto LABEL_46;
          }
          uint64_t v43 = v0 + 264;
          swift_retain();
          uint64_t v44 = (void *)swift_task_alloc();
          *(void *)(v0 + 656) = v44;
          uint64_t v45 = sub_1000AFA94(&qword_100966B78);
          uint64_t v46 = sub_1000AFA94(&qword_10095C080);
          void *v44 = v0;
          id v47 = sub_100658000;
        }
      }
    }
LABEL_29:
    v44[1] = v47;
    uint64_t v48 = v43;
    uint64_t v49 = v42;
    uint64_t v50 = v45;
LABEL_36:
    return Task.value.getter(v48, v49, v50, v46, &protocol self-conformance witness table for Error);
  }
  unint64_t v26 = 0;
  uint64_t v27 = *(void *)(v0 + 336);
  double v72 = (void (**)(char *, uint64_t, uint64_t))(v27 + 32);
  uint64_t v74 = v24;
  while (v26 < *(void *)(v24 + 16))
  {
    unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v29 = *(void *)(v27 + 72);
    (*(void (**)(void, unint64_t, void))(v27 + 16))(*(void *)(v0 + 352), v24 + v28 + v29 * v26, *(void *)(v0 + 328));
    uint64_t v30 = PersonalizationCandidate.referenceType.getter();
    uint64_t v32 = v31;
    *(void *)(v0 + 208) = v30;
    *(void *)(v0 + 216) = v31;
    char v34 = v33 & 1;
    *(unsigned char *)(v0 + 224) = v33 & 1;
    *(_OWORD *)(v0 + 160) = xmmword_100771D50;
    *(unsigned char *)(v0 + 176) = 1;
    sub_10065BCDC();
    sub_10065BD30();
    char v35 = static PortableEnum<>.== infix(_:_:)();
    sub_1004108E4(v30, v32, v34);
    if (v35)
    {
      unint64_t v36 = *v72;
      (*v72)(*(char **)(v0 + 344), *(void *)(v0 + 352), *(void *)(v0 + 328));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001C9714(0, *((void *)v25 + 2) + 1, 1);
        double v25 = v79;
      }
      unint64_t v38 = *((void *)v25 + 2);
      unint64_t v37 = *((void *)v25 + 3);
      if (v38 >= v37 >> 1)
      {
        sub_1001C9714(v37 > 1, v38 + 1, 1);
        double v25 = v79;
      }
      uint64_t v39 = *(void *)(v0 + 344);
      uint64_t v40 = *(void *)(v0 + 328);
      *((void *)v25 + 2) = v38 + 1;
      v36(&v25[v28 + v38 * v29], v39, v40);
      uint64_t v79 = v25;
    }
    else
    {
      (*(void (**)(void, void))(v27 + 8))(*(void *)(v0 + 352), *(void *)(v0 + 328));
    }
    ++v26;
    uint64_t v24 = v74;
    if (v77 == v26) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_46:
  *(void *)(v0 + 672) = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v42 = *(void *)(*(void *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  *(void *)(v0 + 680) = v42;
  if (v42)
  {
    uint64_t v43 = v0 + 272;
    swift_retain();
    uint64_t v44 = (void *)swift_task_alloc();
    *(void *)(v0 + 688) = v44;
    uint64_t v45 = sub_1000AFA94(&qword_100966B78);
    uint64_t v46 = sub_1000AFA94(&qword_10095C080);
    void *v44 = v0;
    id v47 = sub_1006583C4;
    goto LABEL_29;
  }
  *(void *)(v0 + 704) = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v42 = *(void *)(*(void *)(v0 + 288) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  *(void *)(v0 + 712) = v42;
  if (v42)
  {
    uint64_t v43 = v0 + 240;
    swift_retain();
    uint64_t v44 = (void *)swift_task_alloc();
    *(void *)(v0 + 720) = v44;
    uint64_t v45 = sub_1000AFA94(&qword_100966B78);
    uint64_t v46 = sub_1000AFA94(&qword_10095C080);
    void *v44 = v0;
    id v47 = sub_1006586F4;
    goto LABEL_29;
  }
  unint64_t v64 = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 736) = v64;
  double v65 = (void *)swift_task_alloc();
  *(void *)(v0 + 744) = v65;
  void *v65 = v0;
  v65[1] = sub_100658950;
  uint64_t v66 = *(void *)(v0 + 704);
  uint64_t v67 = *(void *)(v0 + 672);
  uint64_t v68 = *(void *)(v0 + 640);
  uint64_t v69 = *(void *)(v0 + 608);
  uint64_t v70 = *(void *)(v0 + 552);
  uint64_t v71 = *(void *)(v0 + 320);
  return sub_100659D4C(v70, v71, v69, v68, v67, v66, v64);
}

uint64_t sub_100656AAC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 544) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 496);
  uint64_t v4 = *(void *)(v2 + 488);
  if (v0) {
    uint64_t v5 = sub_100658D2C;
  }
  else {
    uint64_t v5 = sub_100656C04;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100656C04()
{
  v0[69] = v0[29];
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_queryLocaleTask);
  v0[70] = v1;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[71] = v2;
    uint64_t v3 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v2 = v0;
    v2[1] = sub_1006570F4;
    uint64_t v4 = (void *)v0[37];
    uint64_t v5 = v0[38];
    uint64_t v6 = v1;
LABEL_14:
    return Task.value.getter(v4, v6, v5, v3, &protocol self-conformance witness table for Error);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[39] + 56))(v0[37], 1, 1, v0[38]);
  uint64_t v7 = v0[37];
  static Locale.autoupdatingCurrent.getter();
  sub_10008DB18(v7, (uint64_t *)&unk_10095BF60);
  uint64_t v8 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask);
  v0[73] = v8;
  if (v8)
  {
    uint64_t v9 = v0 + 31;
    swift_retain();
    Swift::UInt v10 = (void *)swift_task_alloc();
    v0[74] = v10;
    uint64_t v11 = sub_1000AFA94(&qword_100966B78);
    uint64_t v3 = sub_1000AFA94(&qword_10095C080);
    *Swift::UInt v10 = v0;
    uint64_t v12 = sub_1006576CC;
LABEL_13:
    v10[1] = v12;
    uint64_t v4 = v9;
    uint64_t v6 = v8;
    uint64_t v5 = v11;
    goto LABEL_14;
  }
  v0[76] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask);
  v0[77] = v8;
  if (v8)
  {
    uint64_t v9 = v0 + 32;
    swift_retain();
    Swift::UInt v10 = (void *)swift_task_alloc();
    v0[78] = v10;
    uint64_t v11 = sub_1000AFA94(&qword_100966B78);
    uint64_t v3 = sub_1000AFA94(&qword_10095C080);
    *Swift::UInt v10 = v0;
    uint64_t v12 = sub_100657BB0;
    goto LABEL_13;
  }
  v0[80] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
  v0[81] = v8;
  if (v8)
  {
    uint64_t v9 = v0 + 33;
    swift_retain();
    Swift::UInt v10 = (void *)swift_task_alloc();
    v0[82] = v10;
    uint64_t v11 = sub_1000AFA94(&qword_100966B78);
    uint64_t v3 = sub_1000AFA94(&qword_10095C080);
    *Swift::UInt v10 = v0;
    uint64_t v12 = sub_100658000;
    goto LABEL_13;
  }
  v0[84] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v0[85] = v8;
  if (v8)
  {
    uint64_t v9 = v0 + 34;
    swift_retain();
    Swift::UInt v10 = (void *)swift_task_alloc();
    v0[86] = v10;
    uint64_t v11 = sub_1000AFA94(&qword_100966B78);
    uint64_t v3 = sub_1000AFA94(&qword_10095C080);
    *Swift::UInt v10 = v0;
    uint64_t v12 = sub_1006583C4;
    goto LABEL_13;
  }
  v0[88] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v0[89] = v8;
  if (v8)
  {
    uint64_t v9 = v0 + 30;
    swift_retain();
    Swift::UInt v10 = (void *)swift_task_alloc();
    v0[90] = v10;
    uint64_t v11 = sub_1000AFA94(&qword_100966B78);
    uint64_t v3 = sub_1000AFA94(&qword_10095C080);
    *Swift::UInt v10 = v0;
    uint64_t v12 = sub_1006586F4;
    goto LABEL_13;
  }
  unint64_t v13 = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  v0[92] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[93] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_100658950;
  uint64_t v15 = v0[88];
  uint64_t v16 = v0[84];
  uint64_t v17 = v0[80];
  uint64_t v18 = v0[76];
  uint64_t v19 = v0[69];
  uint64_t v20 = v0[40];
  return sub_100659D4C(v19, v20, v18, v17, v16, v15, v13);
}

uint64_t sub_1006570F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 576) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 488);
    uint64_t v4 = *(void *)(v2 + 496);
    uint64_t v5 = sub_100658F30;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 488);
    uint64_t v4 = *(void *)(v2 + 496);
    uint64_t v5 = sub_10065721C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10065721C()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[37];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[37];
    static Locale.autoupdatingCurrent.getter();
    sub_10008DB18(v4, (uint64_t *)&unk_10095BF60);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[39] + 32))(v0[40], v0[37], v0[38]);
  }
  uint64_t v5 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeModalityMapTask);
  v0[73] = v5;
  if (v5)
  {
    uint64_t v6 = v0 + 31;
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[74] = v7;
    uint64_t v8 = sub_1000AFA94(&qword_100966B78);
    uint64_t v9 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v7 = v0;
    Swift::UInt v10 = sub_1006576CC;
LABEL_14:
    v7[1] = v10;
    return Task.value.getter(v6, v5, v8, v9, &protocol self-conformance witness table for Error);
  }
  v0[76] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask);
  v0[77] = v5;
  if (v5)
  {
    uint64_t v6 = v0 + 32;
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[78] = v7;
    uint64_t v8 = sub_1000AFA94(&qword_100966B78);
    uint64_t v9 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v7 = v0;
    Swift::UInt v10 = sub_100657BB0;
    goto LABEL_14;
  }
  v0[80] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
  v0[81] = v5;
  if (v5)
  {
    uint64_t v6 = v0 + 33;
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[82] = v7;
    uint64_t v8 = sub_1000AFA94(&qword_100966B78);
    uint64_t v9 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v7 = v0;
    Swift::UInt v10 = sub_100658000;
    goto LABEL_14;
  }
  v0[84] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v0[85] = v5;
  if (v5)
  {
    uint64_t v6 = v0 + 34;
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[86] = v7;
    uint64_t v8 = sub_1000AFA94(&qword_100966B78);
    uint64_t v9 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v7 = v0;
    Swift::UInt v10 = sub_1006583C4;
    goto LABEL_14;
  }
  v0[88] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v0[89] = v5;
  if (v5)
  {
    uint64_t v6 = v0 + 30;
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[90] = v7;
    uint64_t v8 = sub_1000AFA94(&qword_100966B78);
    uint64_t v9 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v7 = v0;
    Swift::UInt v10 = sub_1006586F4;
    goto LABEL_14;
  }
  unint64_t v11 = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  v0[92] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[93] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100658950;
  uint64_t v13 = v0[88];
  uint64_t v14 = v0[84];
  uint64_t v15 = v0[80];
  uint64_t v16 = v0[76];
  uint64_t v17 = v0[69];
  uint64_t v18 = v0[40];
  return sub_100659D4C(v17, v18, v16, v15, v14, v13, v11);
}

uint64_t sub_1006576CC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 600) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    uint64_t v5 = sub_100659134;
  }
  else
  {
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    uint64_t v5 = sub_100657830;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100657830()
{
  v0[76] = v0[31];
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeMusicGenreMapTask);
  v0[77] = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 32;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[78] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_100966B78);
    uint64_t v5 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v3 = v0;
    uint64_t v6 = sub_100657BB0;
LABEL_9:
    v3[1] = v6;
    return Task.value.getter(v2, v1, v4, v5, &protocol self-conformance witness table for Error);
  }
  v0[80] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
  v0[81] = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 33;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[82] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_100966B78);
    uint64_t v5 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v3 = v0;
    uint64_t v6 = sub_100658000;
    goto LABEL_9;
  }
  v0[84] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v0[85] = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 34;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[86] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_100966B78);
    uint64_t v5 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v3 = v0;
    uint64_t v6 = sub_1006583C4;
    goto LABEL_9;
  }
  v0[88] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v0[89] = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 30;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[90] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_100966B78);
    uint64_t v5 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v3 = v0;
    uint64_t v6 = sub_1006586F4;
    goto LABEL_9;
  }
  unint64_t v7 = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  v0[92] = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[93] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100658950;
  uint64_t v9 = v0[88];
  uint64_t v10 = v0[84];
  uint64_t v11 = v0[80];
  uint64_t v12 = v0[76];
  uint64_t v13 = v0[69];
  uint64_t v14 = v0[40];
  return sub_100659D4C(v13, v14, v12, v11, v10, v9, v7);
}

uint64_t sub_100657BB0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 632) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    uint64_t v5 = sub_100659338;
  }
  else
  {
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    uint64_t v5 = sub_100657D20;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100657D20()
{
  v0[80] = v0[32];
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeSkillLevelMapTask);
  v0[81] = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 33;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[82] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_100966B78);
    uint64_t v5 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v3 = v0;
    uint64_t v6 = sub_100658000;
LABEL_7:
    v3[1] = v6;
    return Task.value.getter(v2, v1, v4, v5, &protocol self-conformance witness table for Error);
  }
  v0[84] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v0[85] = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 34;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[86] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_100966B78);
    uint64_t v5 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v3 = v0;
    uint64_t v6 = sub_1006583C4;
    goto LABEL_7;
  }
  v0[88] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v0[89] = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 30;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[90] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_100966B78);
    uint64_t v5 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v3 = v0;
    uint64_t v6 = sub_1006586F4;
    goto LABEL_7;
  }
  unint64_t v7 = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  v0[92] = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[93] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100658950;
  uint64_t v9 = v0[88];
  uint64_t v10 = v0[84];
  uint64_t v11 = v0[80];
  uint64_t v12 = v0[76];
  uint64_t v13 = v0[69];
  uint64_t v14 = v0[40];
  return sub_100659D4C(v13, v14, v12, v11, v10, v9, v7);
}

uint64_t sub_100658000()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 664) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    uint64_t v5 = sub_10065953C;
  }
  else
  {
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    uint64_t v5 = sub_100658184;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100658184()
{
  v0[84] = v0[33];
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeThemeMapTask);
  v0[85] = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 34;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[86] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_100966B78);
    uint64_t v5 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v3 = v0;
    uint64_t v6 = sub_1006583C4;
LABEL_5:
    v3[1] = v6;
    return Task.value.getter(v2, v1, v4, v5, &protocol self-conformance witness table for Error);
  }
  v0[88] = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v0[89] = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 30;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[90] = v3;
    uint64_t v4 = sub_1000AFA94(&qword_100966B78);
    uint64_t v5 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v3 = v0;
    uint64_t v6 = sub_1006586F4;
    goto LABEL_5;
  }
  unint64_t v7 = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
  v0[92] = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[93] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100658950;
  uint64_t v9 = v0[88];
  uint64_t v10 = v0[84];
  uint64_t v11 = v0[80];
  uint64_t v12 = v0[76];
  uint64_t v13 = v0[69];
  uint64_t v14 = v0[40];
  return sub_100659D4C(v13, v14, v12, v11, v10, v9, v7);
}

uint64_t sub_1006583C4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 696) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    uint64_t v5 = sub_100659740;
  }
  else
  {
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    uint64_t v5 = sub_100658554;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100658554()
{
  v0[88] = v0[34];
  uint64_t v1 = *(void *)(v0[36] + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_makeTrainerMapTask);
  v0[89] = v1;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[90] = v2;
    uint64_t v3 = sub_1000AFA94(&qword_100966B78);
    uint64_t v4 = sub_1000AFA94(&qword_10095C080);
    *uint64_t v2 = v0;
    v2[1] = sub_1006586F4;
    return Task.value.getter(v0 + 30, v1, v3, v4, &protocol self-conformance witness table for Error);
  }
  else
  {
    unint64_t v5 = sub_100019CB0((uint64_t)_swiftEmptyArrayStorage);
    v0[92] = v5;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[93] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100658950;
    uint64_t v7 = v0[88];
    uint64_t v8 = v0[84];
    uint64_t v9 = v0[80];
    uint64_t v10 = v0[76];
    uint64_t v11 = v0[69];
    uint64_t v12 = v0[40];
    return sub_100659D4C(v11, v12, v10, v9, v8, v7, v5);
  }
}

uint64_t sub_1006586F4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 728) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[39] + 8))(v2[40], v2[38]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    unint64_t v5 = sub_100659944;
  }
  else
  {
    swift_release();
    uint64_t v3 = v2[61];
    uint64_t v4 = v2[62];
    unint64_t v5 = sub_100658898;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100658898()
{
  uint64_t v1 = v0[30];
  v0[92] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[93] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100658950;
  uint64_t v3 = v0[88];
  uint64_t v4 = v0[84];
  uint64_t v5 = v0[80];
  uint64_t v6 = v0[76];
  uint64_t v7 = v0[69];
  uint64_t v8 = v0[40];
  return sub_100659D4C(v7, v8, v6, v5, v4, v3, v1);
}

uint64_t sub_100658950()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 320);
  uint64_t v4 = *(void *)(*v1 + 312);
  uint64_t v5 = *(void *)(*v1 + 304);
  *(void *)(*v1 + 752) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 496);
  uint64_t v7 = *(void *)(v2 + 488);
  if (v0) {
    uint64_t v8 = sub_100659B48;
  }
  else {
    uint64_t v8 = sub_100658BB0;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_100658BB0()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 376);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v8 = v7;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100658D2C()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 376);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(void **)(v0 + 288);
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  uint64_t v10 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = v10;
  *(unsigned char *)(v0 + 128) = 1;
  id v11 = v7;
  static Published.subscript.setter();
  swift_errorRelease();
  uint64_t v12 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v13 = v12;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100658F30()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 376);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(void **)(v0 + 288);
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  uint64_t v10 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = v10;
  *(unsigned char *)(v0 + 128) = 1;
  id v11 = v7;
  static Published.subscript.setter();
  swift_errorRelease();
  uint64_t v12 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v13 = v12;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100659134()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 376);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(void **)(v0 + 288);
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  uint64_t v10 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = v10;
  *(unsigned char *)(v0 + 128) = 1;
  id v11 = v7;
  static Published.subscript.setter();
  swift_errorRelease();
  uint64_t v12 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v13 = v12;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100659338()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 376);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(void **)(v0 + 288);
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  uint64_t v10 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = v10;
  *(unsigned char *)(v0 + 128) = 1;
  id v11 = v7;
  static Published.subscript.setter();
  swift_errorRelease();
  uint64_t v12 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v13 = v12;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_10065953C()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 376);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(void **)(v0 + 288);
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  uint64_t v10 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = v10;
  *(unsigned char *)(v0 + 128) = 1;
  id v11 = v7;
  static Published.subscript.setter();
  swift_errorRelease();
  uint64_t v12 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v13 = v12;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100659740()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 376);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(void **)(v0 + 288);
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  uint64_t v10 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = v10;
  *(unsigned char *)(v0 + 128) = 1;
  id v11 = v7;
  static Published.subscript.setter();
  swift_errorRelease();
  uint64_t v12 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v13 = v12;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100659944()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 376);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(void **)(v0 + 288);
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  uint64_t v10 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = v10;
  *(unsigned char *)(v0 + 128) = 1;
  id v11 = v7;
  static Published.subscript.setter();
  swift_errorRelease();
  uint64_t v12 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v13 = v12;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100659B48()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 376);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(void **)(v0 + 288);
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  uint64_t v10 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = v10;
  *(unsigned char *)(v0 + 128) = 1;
  id v11 = v7;
  static Published.subscript.setter();
  swift_errorRelease();
  uint64_t v12 = *(void **)(v0 + 288);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 58) = 0;
  id v13 = v12;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100659D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[18] = a7;
  v8[19] = v7;
  unsigned char v8[16] = a5;
  v8[17] = a6;
  v8[14] = a3;
  v8[15] = a4;
  v8[12] = a1;
  v8[13] = a2;
  uint64_t v9 = sub_1000AFA94(&qword_10094E7A0);
  v8[20] = v9;
  v8[21] = *(void *)(v9 - 8);
  v8[22] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for PersonalizationCandidate();
  v8[23] = v10;
  v8[24] = *(void *)(v10 - 8);
  v8[25] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for CatalogLockupPlaceholder();
  v8[26] = v11;
  v8[27] = *(void *)(v11 - 8);
  v8[28] = swift_task_alloc();
  uint64_t v12 = sub_1000AFA94(&qword_10094DBA0);
  v8[29] = v12;
  v8[30] = *(void *)(v12 - 8);
  v8[31] = swift_task_alloc();
  return _swift_task_switch(sub_100659F34, 0, 0);
}

uint64_t sub_100659F34()
{
  uint64_t v1 = *(char **)(v0 + 152);
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_candidates];
  *(void *)(v0 + 256) = v2;
  if (v2 && (int64_t v3 = *(void *)(v2 + 16)) != 0)
  {
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 192);
    unint64_t v28 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001C96D8(0, v3, 0);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v5 += 16;
    uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64));
    uint64_t v26 = *(void *)(v5 + 56);
    uint64_t v27 = v6;
    uint64_t v8 = (void (**)(uint64_t, uint64_t))(v5 - 8);
    uint64_t v9 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v10 = *(void *)(v0 + 200);
      uint64_t v11 = *(void *)(v0 + 184);
      v27(v10, v7, v11);
      PersonalizationCandidate.identifier.getter();
      CatalogLockupPlaceholder.init(identifier:referenceType:editorialCardIdentifier:)();
      (*v8)(v10, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001C96D8(0, v9[2] + 1, 1);
        uint64_t v9 = v28;
      }
      unint64_t v13 = v9[2];
      unint64_t v12 = v9[3];
      if (v13 >= v12 >> 1)
      {
        sub_1001C96D8(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v28;
      }
      uint64_t v14 = *(void *)(v0 + 224);
      uint64_t v15 = *(void *)(v0 + 208);
      _OWORD v9[2] = v13 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, v14, v15);
      unint64_t v28 = v9;
      v7 += v26;
      --v3;
    }
    while (v3);
    uint64_t v22 = *(void *)(v0 + 248);
    sub_10007E4EC((void *)(*(void *)(v0 + 152) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient), *(void *)(*(void *)(v0 + 152) + OBJC_IVAR____TtC10FitnessApp27FitnessPlusCardDataProvider_catalogClient + 24));
    dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)();
    swift_release();
    uint64_t v23 = swift_task_alloc();
    *(void *)(v0 + 264) = v23;
    *(void *)(v23 + 16) = "/Library/Caches/com.apple.xbs/Sources/CompanionHealth/Fitness/Activity Dashboard/Data Provid"
                            "ers/FitnessPlusCardDataProvider.swift";
    *(void *)(v23 + 24) = 129;
    *(unsigned char *)(v23 + 32) = 2;
    *(void *)(v23 + 40) = 315;
    *(void *)(v23 + 48) = v22;
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v24;
    uint64_t v25 = sub_1000AFA94(&qword_10095DD08);
    *uint64_t v24 = v0;
    v24[1] = sub_10065A310;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 88, 0, 0, 0xD000000000000013, 0x80000001007BEBB0, sub_10065BBB4, v23, v25);
  }
  else
  {
    *(unsigned char *)(v0 + 33) = 2;
    sub_10065BB58();
    uint64_t v16 = Error.localizedDescription.getter();
    uint64_t v18 = v17;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 16) = v16;
    *(void *)(v0 + 24) = v18;
    *(unsigned char *)(v0 + 32) = 1;
    uint64_t v19 = v1;
    static Published.subscript.setter();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_10065A310()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    int64_t v3 = sub_10065A830;
  }
  else
  {
    uint64_t v5 = v2[30];
    uint64_t v4 = v2[31];
    uint64_t v6 = v2[29];
    v2[36] = v2[11];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    int64_t v3 = sub_10065A45C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10065A45C()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void *)(v0 + 288);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v36 = *(void *)(v0 + 176);
    uint64_t v34 = *(void *)(v0 + 160);
    unint64_t v38 = _swiftEmptyArrayStorage;
    sub_1001C96A8(0, v2, 0);
    uint64_t v4 = _swiftEmptyArrayStorage;
    uint64_t v32 = type metadata accessor for CatalogLockup();
    uint64_t v5 = *(void *)(v32 - 8);
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    do
    {
      uint64_t v8 = *(uint64_t **)(v30 + 176);
      v31((char *)v8 + *(int *)(v34 + 48), v6, v32);
      *uint64_t v8 = CatalogLockup.identifier.getter();
      *(void *)(v36 + 8) = v9;
      unint64_t v38 = v4;
      unint64_t v11 = v4[2];
      unint64_t v10 = v4[3];
      if (v11 >= v10 >> 1)
      {
        sub_1001C96A8(v10 > 1, v11 + 1, 1);
        uint64_t v4 = v38;
      }
      uint64_t v12 = *(void *)(v30 + 176);
      _OWORD v4[2] = v11 + 1;
      sub_10065BBCC(v12, (uint64_t)v4+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11);
      v6 += v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    if (v4[2])
    {
      sub_1000AFA94(&qword_10095FD30);
      unint64_t v13 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      unint64_t v13 = _swiftEmptyDictionarySingleton;
    }
    uint64_t v0 = v30;
    uint64_t v19 = *(void *)(v30 + 280);
    unint64_t v38 = v13;
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_10065B5F8(v20, 1, &v38);
    if (v19)
    {
      return _swift_unexpectedError(v19, "Swift/Dictionary.swift", 22, 1, 489);
    }
    uint64_t v21 = *(void *)(v30 + 256);
    uint64_t v22 = *(void *)(v30 + 144);
    uint64_t v23 = *(void **)(v30 + 152);
    long long v37 = *(_OWORD *)(v30 + 96);
    long long v35 = *(_OWORD *)(v30 + 112);
    long long v33 = *(_OWORD *)(v30 + 128);
    swift_release();
    uint64_t v24 = v38;
    uint64_t v25 = swift_task_alloc();
    *(void *)(v25 + 16) = v24;
    *(_OWORD *)(v25 + 24) = v37;
    *(_OWORD *)(v25 + 40) = v35;
    *(_OWORD *)(v25 + 56) = v33;
    *(void *)(v25 + 72) = v22;
    uint64_t v26 = sub_1006DEC1C((void (*)(void))sub_10065BC34, v25, v21);
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v30 + 40) = v26;
    *(void *)(v30 + 48) = 0;
    *(unsigned char *)(v30 + 56) = 0;
    id v27 = v23;
  }
  else
  {
    uint64_t v14 = *(void **)(v0 + 152);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0 + 34) = 2;
    sub_10065BB58();
    uint64_t v15 = Error.localizedDescription.getter();
    uint64_t v17 = v16;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 64) = v15;
    *(void *)(v0 + 72) = v17;
    *(unsigned char *)(v0 + 80) = 1;
    id v18 = v14;
  }
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_10065A830()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10065A8FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>)
{
  uint64_t v79 = a6;
  uint64_t v80 = a7;
  uint64_t v77 = a4;
  uint64_t v78 = a5;
  uint64_t v75 = a2;
  uint64_t v76 = a3;
  uint64_t v88 = a8;
  uint64_t v10 = sub_1000AFA94(&qword_100966B28);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v74 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v73 = (char *)v71 - v13;
  uint64_t v14 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v14 - 8);
  double v72 = (char *)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AFA94(&qword_1009512E8);
  __chkstk_darwin(v16 - 8);
  uint64_t v85 = (uint64_t)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AFA94(&qword_100966B30);
  __chkstk_darwin(v18 - 8);
  uint64_t v84 = (uint64_t)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000AFA94(&qword_100966B38);
  __chkstk_darwin(v20 - 8);
  uint64_t v83 = (char *)v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000AFA94((uint64_t *)&unk_10095B890);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v86 = (char *)v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v82 = (char *)v71 - v25;
  uint64_t v26 = sub_1000AFA94(&qword_100966B40);
  __chkstk_darwin(v26 - 8);
  uint64_t v81 = (char *)v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000AFA94(&qword_100966B48);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000AFA94(&qword_10095D148);
  __chkstk_darwin(v31 - 8);
  long long v33 = (char *)v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for CatalogLockup();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  char v87 = (char *)v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = PersonalizationCandidate.identifier.getter();
  if (*(void *)(a1 + 16) && (unint64_t v39 = sub_1000DA1C0(v37, v38), (v40 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v33, *(void *)(a1 + 56) + *(void *)(v35 + 72) * v39, v34);
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    v41(v33, 0, 1, v34);
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    v41(v33, 1, 1, v34);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
  {
    sub_10008DB18((uint64_t)v33, &qword_10095D148);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v41)(v88, 1, 1, v34);
  }
  v71[0] = v35;
  v71[1] = v8;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v43(v87, v33, v34);
  PersonalizationCandidate.reason.getter();
  uint64_t v44 = type metadata accessor for PersonalizationText();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v30, 1, v44) == 1)
  {
    sub_10008DB18((uint64_t)v30, &qword_100966B48);
  }
  else
  {
    id v46 = [objc_allocWithZone((Class)NSNumberFormatter) init];
    uint64_t v80 = PersonalizationText.localizeFillers(bodyFocusMap:locale:numberFormatter:modalityMap:musicGenreMap:skillLevelMap:themeMap:trainerMap:)();
    uint64_t v48 = v47;

    (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v44);
    if (v48)
    {
      uint64_t v49 = type metadata accessor for ArtworkDescriptor();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v81, 1, 1, v49);
      uint64_t v50 = type metadata accessor for Date();
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
      v51(v82, 1, 1, v50);
      uint64_t v52 = type metadata accessor for AssetBundleProgress();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v83, 1, 1, v52);
      v51(v86, 1, 1, v50);
      sub_1000AFA94(&qword_10095BCB0);
      uint64_t v53 = *(void *)(type metadata accessor for MediaTag() - 8);
      unint64_t v54 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      uint64_t v55 = swift_allocObject();
      uint64_t v79 = v55;
      *(_OWORD *)(v55 + 16) = xmmword_1007509E0;
      uint64_t v56 = (uint64_t *)(v55 + v54);
      uint64_t *v56 = v80;
      v56[1] = v48;
      swift_storeEnumTagMultiPayload();
      uint64_t v57 = type metadata accessor for CatalogLink();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v84, 1, 1, v57);
      uint64_t v58 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v85, 1, 1, v58);
      uint64_t v59 = type metadata accessor for URL();
      uint64_t v60 = (uint64_t)v72;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v72, 1, 1, v59);
      uint64_t v61 = type metadata accessor for TextAttribute();
      uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
      uint64_t v63 = (uint64_t)v73;
      v62(v73, 1, 1, v61);
      uint64_t v64 = (uint64_t)v74;
      v62(v74, 1, 1, v61);
      uint64_t v66 = (uint64_t)v81;
      uint64_t v65 = (uint64_t)v82;
      uint64_t v67 = (uint64_t)v83;
      uint64_t v68 = v87;
      CatalogLockup.copyWith(accessibilityTitle:actionTags:artworkDescriptor:bundleDateRequested:bundleLoadStatus:bundleProgress:bundleReason:completedCount:contentRating:contextMenuSubtitleTags:contextMenuTitleTags:dateBookmarked:detailTags:duration:dynamicBrickDisplayStyle:editorialCardIdentifier:healthKitActivityTypes:identifier:isIncompletePlanWorkout:link:mediaType:recencyTag:referenceType:streamingArtwork:streamingArtworkCropCode:streamingSubtitle:streamingTitle:streamingURL:subtitleTags:subtitleTextAttribute:titleTags:titleTextAttribute:)();
      swift_bridgeObjectRelease();
      sub_10008DB18(v64, &qword_100966B28);
      sub_10008DB18(v63, &qword_100966B28);
      sub_10008DB18(v60, (uint64_t *)&unk_10094B790);
      sub_10008DB18(v85, &qword_1009512E8);
      sub_10008DB18(v84, &qword_100966B30);
      sub_10008DB18((uint64_t)v86, (uint64_t *)&unk_10095B890);
      sub_10008DB18(v67, &qword_100966B38);
      sub_10008DB18(v65, (uint64_t *)&unk_10095B890);
      sub_10008DB18(v66, &qword_100966B40);
      uint64_t v69 = v71[0];
      (*(void (**)(char *, uint64_t))(v71[0] + 8))(v68, v34);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v88, 0, 1, v34);
    }
  }
  uint64_t v70 = v88;
  v43(v88, v87, v34);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v41)(v70, 0, 1, v34);
}

id sub_10065B380()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessPlusCardDataProvider();
  return [super dealloc];
}

uint64_t sub_10065B564()
{
  return type metadata accessor for FitnessPlusCardDataProvider();
}

uint64_t assignWithTake for FitnessPlusCardDataProvider.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000904DC(v4, v5, v6);
  return a1;
}

uint64_t sub_10065B5B8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FitnessPlusCardDataProvider();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10065B5F8(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = type metadata accessor for CatalogLockup();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AFA94(&qword_10094E7A0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
  LODWORD(v64) = a2;
  uint64_t v60 = v3;
  uint64_t v61 = v16;
  uint64_t v17 = (char *)v15 + *(int *)(v12 + 48);
  unint64_t v59 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v59;
  uint64_t v66 = *(void *)(v13 + 72);
  uint64_t v63 = a1;
  swift_bridgeObjectRetain();
  sub_10065BC68(v18, (uint64_t)v15);
  uint64_t v62 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v21 = v15[1];
  uint64_t v72 = *v15;
  uint64_t v20 = v72;
  uint64_t v73 = v21;
  uint64_t v68 = v19;
  uint64_t v69 = v10;
  uint64_t v65 = v17;
  uint64_t v67 = v7;
  v19((unint64_t)v10, v17, v7);
  uint64_t v22 = (void *)*a3;
  unint64_t v24 = sub_1000DA1C0(v20, v21);
  uint64_t v25 = v22[2];
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_23;
  }
  char v28 = v23;
  if (v22[3] >= v27)
  {
    if (v64)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1004F5EE8();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    long long v33 = (void *)*a3;
    *(void *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v34 = (uint64_t *)(v33[6] + 16 * v24);
    *uint64_t v34 = v20;
    v34[1] = v21;
    uint64_t v35 = v33[7];
    uint64_t v64 = *(void *)(v62 + 72);
    uint64_t v36 = v67;
    v68(v35 + v64 * v24, v69, v67);
    uint64_t v37 = v33[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v33[2] = v39;
    uint64_t v40 = v61 - 1;
    if (v61 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = v63 + v66 + v59;
    while (1)
    {
      sub_10065BC68(v41, (uint64_t)v15);
      uint64_t v43 = v15[1];
      uint64_t v72 = *v15;
      uint64_t v42 = v72;
      uint64_t v73 = v43;
      v68((unint64_t)v69, v65, v36);
      uint64_t v44 = (void *)*a3;
      unint64_t v45 = sub_1000DA1C0(v42, v43);
      uint64_t v47 = v44[2];
      BOOL v48 = (v46 & 1) == 0;
      BOOL v38 = __OFADD__(v47, v48);
      uint64_t v49 = v47 + v48;
      if (v38) {
        break;
      }
      char v50 = v46;
      if (v44[3] < v49)
      {
        sub_1004EE798(v49, 1);
        unint64_t v45 = sub_1000DA1C0(v42, v43);
        if ((v50 & 1) != (v51 & 1)) {
          goto LABEL_25;
        }
      }
      if (v50) {
        goto LABEL_10;
      }
      uint64_t v52 = (void *)*a3;
      *(void *)(*a3 + 8 * (v45 >> 6) + 64) |= 1 << v45;
      uint64_t v53 = (uint64_t *)(v52[6] + 16 * v45);
      *uint64_t v53 = v42;
      v53[1] = v43;
      uint64_t v36 = v67;
      v68(v52[7] + v64 * v45, v69, v67);
      uint64_t v54 = v52[2];
      BOOL v38 = __OFADD__(v54, 1);
      uint64_t v55 = v54 + 1;
      if (v38) {
        goto LABEL_24;
      }
      v52[2] = v55;
      v41 += v66;
      if (!--v40) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1004EE798(v27, v64 & 1);
  unint64_t v29 = sub_1000DA1C0(v20, v21);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v32 = swift_allocError();
    swift_willThrow();
    uint64_t v74 = v32;
    swift_errorRetain();
    sub_1000AFA94(&qword_10095C080);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v67);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  uint64_t v70 = 0;
  unint64_t v71 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v56._object = (void *)0x80000001007D31B0;
  v56._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v56);
  _print_unlocked<A, B>(_:_:)();
  v57._countAndFlagsBits = 39;
  v57._object = (void *)0xE100000000000000;
  String.append(_:)(v57);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10065BB58()
{
  unint64_t result = qword_100966B20;
  if (!qword_100966B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966B20);
  }
  return result;
}

uint64_t sub_10065BBB4(uint64_t a1)
{
  return sub_1000DC254(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004F7F14);
}

uint64_t sub_10065BBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094E7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10065BC34@<X0>(char *a1@<X8>)
{
  return sub_10065A8FC(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

uint64_t sub_10065BC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094E7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10065BCDC()
{
  unint64_t result = qword_100966B68;
  if (!qword_100966B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966B68);
  }
  return result;
}

unint64_t sub_10065BD30()
{
  unint64_t result = qword_100966B70;
  if (!qword_100966B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966B70);
  }
  return result;
}

uint64_t sub_10065BD84()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10065BDBC()
{
  return sub_100655948();
}

unsigned char *storeEnumTagSinglePayload for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10033A2C8(0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10065BEB0);
      case 4:
        *(_DWORD *)(result + sub_10033A2C8(0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10033A2C8(0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10033A2C8(0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError()
{
  return &type metadata for FitnessPlusCardDataProvider.FitnessPlusCardDataProviderError;
}

unint64_t sub_10065BEEC()
{
  unint64_t result = qword_100966C38;
  if (!qword_100966C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966C38);
  }
  return result;
}

unint64_t sub_10065BF44()
{
  return 0xD000000000000014;
}

unsigned char *storeEnumTagSinglePayload for NavigationCoordinationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10065BFFCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationCoordinationError()
{
  return &type metadata for NavigationCoordinationError;
}

unint64_t sub_10065C038()
{
  unint64_t result = qword_100966C40;
  if (!qword_100966C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966C40);
  }
  return result;
}

id sub_10065C08C()
{
  id result = [self standardUserDefaults];
  qword_1009987F0 = (uint64_t)result;
  return result;
}

void *sub_10065C0C8(void *a1)
{
  if (qword_10094B080 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1009987F0;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 dictionaryForKey:v3];

  if (!v4)
  {
    static os_log_type_t.default.getter();
    id v24 = HKLogWorkouts;
    uint64_t v34 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();

    return v34;
  }
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v6 = [a1 uniqueIdentifier];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (!*(void *)(v5 + 16) || (unint64_t v10 = sub_1000DA1C0(v7, v9), (v11 & 1) == 0))
  {
    long long v39 = 0u;
    long long v40 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10008F484(*(void *)(v5 + 56) + 32 * v10, (uint64_t)&v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v40 + 1))
  {
LABEL_10:
    sub_100074898((uint64_t)&v39);
    static os_log_type_t.default.getter();
    uint64_t v20 = (void *)HKLogWorkouts;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1007509E0;
    *(void *)(v21 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100968CF0);
    *(void *)(v21 + 64) = sub_10065D1D0();
    *(void *)(v21 + 32) = a1;
    id v22 = a1;
    id v23 = v20;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  sub_10005C2B0(&v39, &v41);
  uint64_t v12 = self;
  sub_10007E4EC(&v41, v42);
  uint64_t v13 = _bridgeAnythingToObjectiveC<A>(_:)();
  *(void *)&long long v39 = 0;
  id v14 = [v12 dataWithPropertyList:v13 format:100 options:0 error:&v39];
  swift_unknownObjectRelease();
  id v15 = (id)v39;
  if (!v14)
  {
    BOOL v26 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static os_log_type_t.error.getter();
    uint64_t v27 = (void *)HKLogWorkouts;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_10074E640;
    *(void *)(v28 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100968CF0);
    *(void *)(v28 + 64) = sub_10065D1D0();
    *(void *)(v28 + 32) = a1;
    swift_getErrorValue();
    id v29 = a1;
    id v30 = v27;
    uint64_t v31 = Error.errorDescription.getter();
    uint64_t v33 = v32;
    *(void *)(v28 + 96) = &type metadata for String;
    *(void *)(v28 + 104) = sub_1000AA64C();
    *(void *)(v28 + 72) = v31;
    *(void *)(v28 + 80) = v33;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v41);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v18 = v17;

  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  uint64_t v19 = sub_1000AFA94(&qword_100962CF0);
  sub_10065D294(&qword_100966C68, (void (*)(void))sub_10065D304);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  uint64_t v34 = (void *)v39;
  static os_log_type_t.default.getter();
  uint64_t v35 = (void *)HKLogWorkouts;
  sub_1000AFA94((uint64_t *)&unk_1009546D0);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_10074E640;
  *(void *)(v36 + 56) = v19;
  *(void *)(v36 + 64) = sub_10065D238();
  *(void *)(v36 + 32) = v34;
  *(void *)(v36 + 96) = sub_10007E2D8(0, (unint64_t *)&qword_100968CF0);
  *(void *)(v36 + 104) = sub_10065D1D0();
  *(void *)(v36 + 72) = a1;
  id v37 = v35;
  swift_bridgeObjectRetain();
  id v38 = a1;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  sub_1000939A4(v16, v18);
  _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)&v41);
  return v34;
}

void *sub_10065C6A8(uint64_t a1, uint64_t a2)
{
  id v19 = [objc_allocWithZone((Class)NSMutableOrderedSet) init];
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      if (!v4) {
        goto LABEL_5;
      }
      uint64_t v6 = *(unsigned __int8 *)(a1 + 32 + v5);
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
      while (2)
      {
        uint64_t v8 = a2 + v7++;
        unint64_t v9 = 0xE900000000000065;
        unint64_t v10 = 0x7461527472616568;
        switch(*(unsigned char *)(v8 + 32))
        {
          case 1:
            unint64_t v9 = 0xE400000000000000;
            unint64_t v10 = 1701011824;
            break;
          case 2:
            unint64_t v9 = 0xE90000000000006ELL;
            unint64_t v10 = 0x6F69746176656C65;
            break;
          case 3:
            unint64_t v9 = 0xE700000000000000;
            unint64_t v10 = 0x65636E65646163;
            break;
          case 4:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x7265776F70;
            break;
          case 5:
            unint64_t v9 = 0x80000001007B5960;
            unint64_t v10 = 0xD000000000000011;
            break;
          case 6:
            unint64_t v10 = 0x654C656469727473;
            unint64_t v9 = 0xEC0000006874676ELL;
            break;
          case 7:
            unint64_t v10 = 0xD000000000000013;
            unint64_t v9 = 0x80000001007B5980;
            break;
          case 8:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x6465657073;
            break;
          case 9:
            unint64_t v10 = 0x53676E696C637963;
            unint64_t v9 = 0xEC00000064656570;
            break;
          case 0xA:
            unint64_t v10 = 0x43676E696C637963;
            unint64_t v9 = 0xEE0065636E656461;
            break;
          default:
            break;
        }
        uint64_t v11 = 0x7461527472616568;
        unint64_t v12 = 0xE900000000000065;
        switch(v6)
        {
          case 1:
            unint64_t v12 = 0xE400000000000000;
            if (v10 == 1701011824) {
              goto LABEL_38;
            }
            goto LABEL_39;
          case 2:
            unint64_t v12 = 0xE90000000000006ELL;
            if (v10 != 0x6F69746176656C65) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 3:
            unint64_t v12 = 0xE700000000000000;
            if (v10 != 0x65636E65646163) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 4:
            unint64_t v12 = 0xE500000000000000;
            if (v10 != 0x7265776F70) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 5:
            unint64_t v12 = 0x80000001007B5960;
            if (v10 != 0xD000000000000011) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 6:
            unint64_t v12 = 0xEC0000006874676ELL;
            if (v10 != 0x654C656469727473) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 7:
            unint64_t v12 = 0x80000001007B5980;
            if (v10 != 0xD000000000000013) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 8:
            unint64_t v12 = 0xE500000000000000;
            if (v10 != 0x6465657073) {
              goto LABEL_39;
            }
            goto LABEL_38;
          case 9:
            uint64_t v11 = 0x53676E696C637963;
            unint64_t v12 = 0xEC00000064656570;
            goto LABEL_37;
          case 10:
            unint64_t v12 = 0xEE0065636E656461;
            if (v10 != 0x43676E696C637963) {
              goto LABEL_39;
            }
            goto LABEL_38;
          default:
LABEL_37:
            if (v10 != v11) {
              goto LABEL_39;
            }
LABEL_38:
            if (v9 == v12)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_39:
            char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v13 & 1) == 0)
            {
              if (v4 == v7)
              {
                swift_bridgeObjectRelease();
                goto LABEL_5;
              }
              continue;
            }
            swift_bridgeObjectRelease();
LABEL_4:
            [v19 addObject:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
            swift_unknownObjectRelease();
LABEL_5:
            if (++v5 == v20)
            {
              swift_bridgeObjectRelease();
              goto LABEL_46;
            }
            break;
        }
        break;
      }
    }
  }
LABEL_46:
  sub_1001E5770(a2);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 addObjectsFromArray:isa];

  id v15 = [v19 array];
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v17 = sub_1001E5890(v16);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_10065CBC0(uint64_t a1, void *a2)
{
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v42[0] = a1;
  uint64_t v4 = sub_1000AFA94(&qword_100962CF0);
  sub_10065D294(&qword_100966C48, (void (*)(void))sub_10065D17C);
  uint64_t v5 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v7 = v6;
  swift_release();
  uint64_t v16 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&v41[0] = 0;
  id v18 = [v16 propertyListWithData:isa options:0 format:0 error:v41];

  id v19 = *(id *)&v41[0];
  if (v18)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    if (qword_10094B080 != -1) {
      swift_once();
    }
    id v20 = (id)qword_1009987F0;
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v20 dictionaryForKey:v21];

    if (v22)
    {
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      sub_100522E98((uint64_t)_swiftEmptyArrayStorage);
    }
    id v24 = [a2 uniqueIdentifier];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    sub_10008F484((uint64_t)v42, (uint64_t)v41);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1004F09C0(v41, v25, v27, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v29 = (id)qword_1009987F0;
    Class v30 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v31 = String._bridgeToObjectiveC()();
    [v29 setObject:v30 forKey:v31];

    uint64_t v32 = (void *)qword_1009987F0;
    uint64_t v33 = self;
    id v34 = v32;
    id v35 = [v33 standardUserDefaults];
    sub_10007E2D8(0, (unint64_t *)&qword_100957780);
    LOBYTE(v3sub_10033A2C8(0, 1) = static NSObject.== infix(_:_:)();

    if (v31)
    {
      NSString v36 = String._bridgeToObjectiveC()();
      [v33 fu_backupStandardUserDefaultsKey:v36];
    }
    static os_log_type_t.default.getter();
    id v37 = (void *)HKLogWorkouts;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_10074E640;
    *(void *)(v38 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100968CF0);
    *(void *)(v38 + 64) = sub_10065D1D0();
    *(void *)(v38 + 32) = a2;
    *(void *)(v38 + 96) = v4;
    *(void *)(v38 + 104) = sub_10065D238();
    *(void *)(v38 + 72) = a1;
    id v39 = v37;
    id v40 = a2;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    sub_1000939A4(v5, v7);

    swift_bridgeObjectRelease();
    return _s10FitnessApp24HistoryViewActionContextVwxx_0((uint64_t)v42);
  }
  else
  {
    id v23 = v19;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_1000939A4(v5, v7);
    static os_log_type_t.error.getter();
    uint64_t v8 = (void *)HKLogWorkouts;
    sub_1000AFA94((uint64_t *)&unk_1009546D0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10074E640;
    *(void *)(v9 + 56) = sub_10007E2D8(0, (unint64_t *)&qword_100968CF0);
    *(void *)(v9 + 64) = sub_10065D1D0();
    *(void *)(v9 + 32) = a2;
    swift_getErrorValue();
    id v10 = a2;
    id v11 = v8;
    uint64_t v12 = Error.errorDescription.getter();
    uint64_t v14 = v13;
    *(void *)(v9 + 96) = &type metadata for String;
    *(void *)(v9 + 104) = sub_1000AA64C();
    *(void *)(v9 + 72) = v12;
    *(void *)(v9 + 80) = v14;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
}

unint64_t sub_10065D17C()
{
  unint64_t result = qword_100966C50;
  if (!qword_100966C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966C50);
  }
  return result;
}

unint64_t sub_10065D1D0()
{
  unint64_t result = qword_100966C58;
  if (!qword_100966C58)
  {
    sub_10007E2D8(255, (unint64_t *)&qword_100968CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966C58);
  }
  return result;
}

unint64_t sub_10065D238()
{
  unint64_t result = qword_100966C60;
  if (!qword_100966C60)
  {
    sub_1000A1370(&qword_100962CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966C60);
  }
  return result;
}

uint64_t sub_10065D294(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000A1370(&qword_100962CF0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10065D304()
{
  unint64_t result = qword_100966C70;
  if (!qword_100966C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966C70);
  }
  return result;
}

unint64_t sub_10065D35C()
{
  unint64_t result = qword_100966C78;
  if (!qword_100966C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966C78);
  }
  return result;
}

unint64_t sub_10065D3B4()
{
  unint64_t result = qword_100966C80[0];
  if (!qword_100966C80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100966C80);
  }
  return result;
}

uint64_t sub_10065D408()
{
  return sub_10065D710(&qword_100964630);
}

uint64_t sub_10065D43C(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_100966CC0 + dword_100966CC0);
  NSString v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *NSString v3 = v1;
  v3[1] = sub_10024C1D0;
  return v5(a1);
}

uint64_t sub_10065D4E4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for Date();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10065D574, 0, 0);
}

uint64_t sub_10065D574()
{
  id v2 = (uint64_t *)v0[2];
  uint64_t v1 = v0[3];
  sub_1000AFA94(&qword_10094F438);
  uint64_t v3 = *(void *)(type metadata accessor for ActivityRingEntity() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1007509E0;
  Date.init()();
  sub_1005E11DC(v1, v5 + v4);
  *id v2 = v5;
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

unint64_t sub_10065D688()
{
  unint64_t result = qword_100966C98;
  if (!qword_100966C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966C98);
  }
  return result;
}

uint64_t sub_10065D6DC()
{
  return sub_10065D710(&qword_100964650);
}

uint64_t sub_10065D710(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ActivityRingEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10065D758()
{
  unint64_t result = qword_100966CA0;
  if (!qword_100966CA0)
  {
    sub_1000A1370(qword_100966CA8);
    sub_10065D710(&qword_100964650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966CA0);
  }
  return result;
}

uint64_t sub_10065D7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1005DFC6C();
  *uint64_t v5 = v2;
  v5[1] = sub_10005DB5C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for ActivityRingEntityQuery()
{
  return &type metadata for ActivityRingEntityQuery;
}

uint64_t sub_10065D8AC(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = *(void *)(type metadata accessor for ActivityRingEntity() - 8);
  v1[4] = swift_task_alloc();
  sub_1000AFA94((uint64_t *)&unk_10095B890);
  v1[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Date();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_10065DA04, 0, 0);
}

uint64_t sub_10065DA04()
{
  uint64_t v1 = *(void *)(v0[2] + 16);
  if (v1)
  {
    uint64_t v2 = v0[7];
    uint64_t v3 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    uint64_t v4 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    uint64_t v29 = v0[3];
    Class v30 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    uint64_t v27 = (void (**)(uint64_t, uint64_t))(v2 + 8);
    uint64_t v28 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    NSString v31 = _swiftEmptyArrayStorage;
    uint64_t v5 = swift_bridgeObjectRetain() + 40;
    while (1)
    {
      uint64_t v6 = qword_10094AF88;
      swift_bridgeObjectRetain();
      if (v6 != -1) {
        swift_once();
      }
      unint64_t v7 = (void *)qword_100998620;
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v9 = [v7 dateFromString:v8];

      if (v9)
      {
        uint64_t v10 = v0[8];
        uint64_t v12 = v0[5];
        uint64_t v11 = v0[6];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v13 = *v3;
        (*v3)(v12, v10, v11);
        (*v4)(v12, 0, 1, v11);
        if ((*v30)(v12, 1, v11) != 1)
        {
          uint64_t v15 = v0[8];
          uint64_t v14 = v0[9];
          uint64_t v16 = v0[6];
          uint64_t v17 = v0[4];
          v13(v14, v0[5], v16);
          (*v28)(v15, v14, v16);
          sub_1005E11DC(v15, v17);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v18 = (unint64_t)v31;
          }
          else {
            unint64_t v18 = sub_1001E8BFC(0, v31[2] + 1, 1, (unint64_t)v31);
          }
          unint64_t v20 = *(void *)(v18 + 16);
          unint64_t v19 = *(void *)(v18 + 24);
          if (v20 >= v19 >> 1) {
            unint64_t v18 = sub_1001E8BFC(v19 > 1, v20 + 1, 1, v18);
          }
          uint64_t v21 = v0[9];
          uint64_t v22 = v0[6];
          uint64_t v23 = v0[4];
          *(void *)(v18 + 16) = v20 + 1;
          NSString v31 = (void *)v18;
          sub_1005E41B4(v23, v18+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v20);
          (*v27)(v21, v22);
          goto LABEL_5;
        }
      }
      else
      {
        (*v4)(v0[5], 1, 1, v0[6]);
      }
      sub_10023636C(v0[5]);
LABEL_5:
      v5 += 16;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        id v24 = v31;
        goto LABEL_18;
      }
    }
  }
  id v24 = _swiftEmptyArrayStorage;
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void *))v0[1];
  return v25(v24);
}

uint64_t sub_10065DD34(uint64_t a1)
{
  return sub_10003DB00(a1, &qword_10095EDD0);
}

uint64_t sub_10065DD48(uint64_t a1)
{
  return sub_10003DB00(a1, (unint64_t *)&unk_1009633F0);
}

uint64_t sub_10065DD5C(void *a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  NSString v8 = (char *)&v22 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - v10;
  sub_10003D5A8(a1, (uint64_t)v8);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100664190;
  *(void *)(v13 + 24) = v12;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v15 = (v4 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v16 + v14, v5, v2);
  uint64_t v17 = (uint64_t (**)(uint64_t))(v16 + v15);
  *uint64_t v17 = sub_1001B36B8;
  v17[1] = (uint64_t (*)(uint64_t))v13;
  Promise.init(asyncOperation:)();
  unint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v8, v2);
  unint64_t v19 = (void (*)(uint64_t (*)(), uint64_t))Promise.operation.getter();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  v19(sub_10006D36C, v20);
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v2);
}

uint64_t sub_10065DFF8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1006617B4();
    return swift_release();
  }
  return result;
}

uint64_t sub_10065E058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a1;
  uint64_t v33 = a2;
  uint64_t v30 = type metadata accessor for NavigationAnnotation();
  uint64_t v27 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000AFA94(&qword_10095DD30);
  uint64_t v6 = *(void *)(v32 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v32);
  uint64_t v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v31 = (uint64_t)&v26 - v9;
  uint64_t v10 = type metadata accessor for TrainerTipsGalleryNavigationBegan();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  TrainerTipsGalleryNavigationBegan.init()();
  sub_1000E035C(qword_100963730, (void (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan);
  dispatch thunk of EventHubProtocol.publish<A>(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_4;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v15 = [Strong navigateToSeymourTab];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    if (v15)
    {
LABEL_4:
      sub_10007E4EC(v2 + 11, v2[14]);
      dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
      static NavigationAnnotation.tabSwitch.getter();
      uint64_t v16 = v31;
      sub_10058FDA8(v29, (uint64_t)v5, v2[3], v31);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v30);
      uint64_t v17 = v28;
      uint64_t v18 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v28, v16, v32);
      unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v20 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v20 + v19, v17, v18);
      uint64_t v21 = (void (**)(uint64_t))(v20 + ((v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
      char *v21 = sub_100664144;
      v21[1] = (void (*)(uint64_t))v3;
      swift_retain();
      Promise.init(asyncOperation:)();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v16, v18);
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  uint64_t v23 = type metadata accessor for NavigationError();
  sub_1000E035C(&qword_100966E48, (void (*)(uint64_t))&type metadata accessor for NavigationError);
  uint64_t v24 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, enum case for NavigationError.tabUnavailable(_:), v23);
  *(void *)(swift_allocObject() + 16) = v24;
  return Promise.init(synchronousOperation:)();
}

void sub_10065E528(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void **)sub_10007E4EC((void *)(a2 + 48), *(void *)(a2 + 72));
  uint64_t v3 = *v2;
  uint64_t v4 = (uint64_t)v2[1];
  if (v4 < 0)
  {
    swift_retain();
    AppCoordinator.navigateToRequest(_:)();
    sub_1000656A0(v3, v4);
  }
  else
  {
    id v5 = v3;
    BrowsingViewController.navigateToRequest(_:)();
  }
}

uint64_t sub_10065E5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for NavigationAnnotation();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v17[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 16))(v13, a1, v11);
  sub_100333B60((uint64_t)v13, *(unsigned __int8 *)(v3 + 128), (uint64_t)v17);
  sub_1000AEEC8((uint64_t)v17, (uint64_t)v18, &qword_100966E70);
  if (v19 == 1)
  {
    swift_getObjectType();
    sub_10065E800();
    AMSBagProtocol.makeNavigationRequest(with:annotation:)();
  }
  else
  {
    sub_100334350((uint64_t)v18, (uint64_t)v20);
    sub_10007E4EC((void *)(v3 + 88), *(void *)(v3 + 112));
    dispatch thunk of MetricSceneLifecycleReporting.reportDidSelectTab()();
    static NavigationAnnotation.tabSwitch.getter();
    sub_10058FDA8((uint64_t)v20, (uint64_t)v9, *(void *)(v3 + 24), a2);
    sub_100663C74(v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10065E800()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10065E8C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v80 = a2;
  uint64_t v83 = a3;
  uint64_t v77 = type metadata accessor for NavigationAnnotation();
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v74 = v6;
  uint64_t v75 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000AFA94(&qword_10095DD30);
  uint64_t v78 = *(void *)(v82 - 8);
  uint64_t v7 = *(void *)(v78 + 64);
  uint64_t v8 = __chkstk_darwin(v82);
  uint64_t v73 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v79 = (char *)v65 - v10;
  __chkstk_darwin(v9);
  uint64_t v81 = (char *)v65 - v11;
  uint64_t v12 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v71 = (char *)v65 - v20;
  sub_10007E4EC((void *)(v3 + 144), *(void *)(v3 + 168));
  if ((dispatch thunk of SiriUserActivityHandling.canHandleActivity(_:)() & 1) == 0)
  {
    uint64_t v22 = v83;
    id v72 = a1;
    id v23 = [a1 webpageURL];
    if (v23)
    {
      uint64_t v24 = v23;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v25(v14, v19, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
      {
        uint64_t v26 = v71;
        v25(v71, v14, v15);
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v26, v15);
        sub_100333B60((uint64_t)v19, *(unsigned __int8 *)(v4 + 128), (uint64_t)v84);
        sub_1000AEEC8((uint64_t)v84, (uint64_t)v85, &qword_100966E70);
        if (v86 != 1)
        {
          sub_100334350((uint64_t)v85, (uint64_t)v87);
          sub_10065E058((uint64_t)v87, v22);
          sub_100663C74(v84);
          return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v26, v15);
        }
        (*(void (**)(char *, uint64_t))(v16 + 8))(v26, v15);
LABEL_11:
        id v27 = v72;
        id v28 = [v72 activityType];
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;

        if (v29 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v31 == v32)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v33 & 1) == 0)
          {
            sub_10066376C(v27);
            uint64_t v62 = type metadata accessor for NavigationError();
            sub_1000E035C(&qword_100966E48, (void (*)(uint64_t))&type metadata accessor for NavigationError);
            uint64_t v63 = swift_allocError();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v62 - 8) + 104))(v64, enum case for NavigationError.tabUnavailable(_:), v62);
            *(void *)(swift_allocObject() + 16) = v63;
            return Promise.init(synchronousOperation:)();
          }
        }
        swift_getObjectType();
        id v34 = v79;
        AMSBagProtocol.makeNavigationRequest(with:annotation:)();
        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = v4;
        *(void *)(v35 + 24) = v27;
        uint64_t v36 = v78;
        id v37 = *(char **)(v78 + 16);
        v65[1] = v78 + 16;
        unint64_t v71 = v37;
        uint64_t v38 = v73;
        id v39 = v34;
        uint64_t v40 = v82;
        ((void (*)(char *, char *))v37)(v73, v39);
        uint64_t v41 = *(unsigned __int8 *)(v36 + 80);
        uint64_t v69 = v41 | 7;
        uint64_t v42 = (v41 + 16) & ~v41;
        uint64_t v70 = v42;
        unint64_t v68 = ((v7 + v42 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
        unint64_t v67 = (v7 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v43 = swift_allocObject();
        uint64_t v44 = v4;
        uint64_t v66 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
        unint64_t v45 = v38;
        uint64_t v46 = v40;
        v66(v43 + v42, v45, v40);
        uint64_t v47 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v43 + ((v7 + v42 + 7) & 0xFFFFFFFFFFFFFFF8));
        *uint64_t v47 = sub_100663D44;
        v47[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v35;
        type metadata accessor for NavigationRequest();
        swift_retain();
        id v48 = v72;
        Promise.init(asyncOperation:)();
        uint64_t v78 = *(void *)(v36 + 8);
        uint64_t v49 = v79;
        ((void (*)(char *, uint64_t))v78)(v79, v46);
        uint64_t v50 = v76;
        char v51 = v75;
        uint64_t v52 = v77;
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v80, v77);
        unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = v44;
        *(void *)(v54 + 24) = v48;
        (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v54 + v53, v51, v52);
        uint64_t v55 = v49;
        Swift::String v56 = v49;
        Swift::String v57 = v81;
        uint64_t v58 = v82;
        ((void (*)(char *, char *, uint64_t))v71)(v56, v81, v82);
        uint64_t v59 = swift_allocObject();
        v66(v59 + v70, v55, v58);
        uint64_t v60 = (uint64_t (**)(uint64_t))(v59 + v67);
        char *v60 = sub_100663E30;
        v60[1] = (uint64_t (*)(uint64_t))v54;
        swift_retain();
        id v61 = v48;
        Promise.init(asyncOperation:)();
        return ((uint64_t (*)(char *, uint64_t))v78)(v57, v58);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    }
    sub_10008DB18((uint64_t)v14, (uint64_t *)&unk_10094B790);
    goto LABEL_11;
  }

  return sub_100661498(a1);
}

uint64_t sub_10065F1CC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = type metadata accessor for NavigationRequest();
  uint64_t v7 = *(void *)(v26 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v26);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TrainerTipsGalleryNavigationBegan();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  if (NavigationRequest.isTrainerTipsGalleryRequest.getter())
  {
    uint64_t v23 = a2[5];
    swift_getObjectType();
    TrainerTipsGalleryNavigationBegan.init()();
    sub_1000E035C(qword_100963730, (void (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan);
    uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    dispatch thunk of EventHubProtocol.publish<A>(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_6;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  unsigned __int8 v15 = [Strong navigateToSeymourTab];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_8:
    sub_10066376C(a3);
    uint64_t v19 = type metadata accessor for NavigationError();
    sub_1000E035C(&qword_100966E48, (void (*)(uint64_t))&type metadata accessor for NavigationError);
    uint64_t v20 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, enum case for NavigationError.tabUnavailable(_:), v19);
    *(void *)(swift_allocObject() + 16) = v20;
    return Promise.init(synchronousOperation:)();
  }
LABEL_6:
  sub_10007E4EC(a2 + 11, a2[14]);
  dispatch thunk of MetricSceneLifecycleReporting.reportContinueUserActivity()();
  uint64_t v16 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v24, v26);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v9, v16);
  return Promise.init(synchronousOperation:)();
}

uint64_t sub_10065F580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v27[0] = a3;
  v27[1] = a4;
  uint64_t v28 = a1;
  uint64_t v31 = a5;
  uint64_t v6 = type metadata accessor for NavigationRequest();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v10 = *(void *)(v29 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v29);
  uint64_t v13 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unsigned __int8 v15 = (char *)v27 - v14;
  uint64_t v30 = a2;
  uint64_t v16 = (void **)sub_10007E4EC((void *)(a2 + 48), *(void *)(a2 + 72));
  uint64_t v17 = (uint64_t)v16[1];
  if (v17 < 0)
  {
    uint64_t v19 = *v16;
    swift_retain();
    AppCoordinator.navigateToUserActivity(_:annotation:)();
    sub_1000656A0(v19, v17);
  }
  else
  {
    sub_100663CD0();
    uint64_t v18 = swift_allocError();
    *(void *)(swift_allocObject() + 16) = v18;
    Promise.init(synchronousOperation:)();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v6);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, v6);
  uint64_t v22 = v29;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v29);
  unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24 + v23, v13, v22);
  uint64_t v25 = (void *)(v24 + ((v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v25 = sub_100663CC0;
  v25[1] = v21;
  swift_retain();
  Promise.init(asyncOperation:)();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v22);
}

uint64_t *sub_10065F8CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v109 = a2;
  uint64_t v114 = a3;
  uint64_t v4 = type metadata accessor for NavigationAnnotation();
  uint64_t v111 = *(void *)(v4 - 8);
  uint64_t v112 = v4;
  uint64_t v5 = *(void *)(v111 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v99 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v100 = (char *)&v92 - v7;
  uint64_t v104 = sub_1000AFA94(&qword_10095DD30);
  uint64_t v103 = *(void *)(v104 - 8);
  uint64_t v8 = *(void *)(v103 + 64);
  uint64_t v9 = __chkstk_darwin(v104);
  uint64_t v98 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v108 = (char *)&v92 - v11;
  __chkstk_darwin(v10);
  unint64_t v110 = (char *)&v92 - v12;
  uint64_t v107 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v106 = *(void *)(v107 - 8);
  uint64_t v13 = __chkstk_darwin(v107);
  uint64_t v102 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = v14;
  __chkstk_darwin(v13);
  uint64_t v105 = (char *)&v92 - v15;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v97 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (void (*)(char *, uint64_t))((char *)&v92 - v21);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v92 - v24;
  __chkstk_darwin(v23);
  id v27 = (char *)&v92 - v26;
  uint64_t v28 = a1;
  id v29 = [a1 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v30 = URL.scheme.getter();
  uint64_t v32 = v31;
  uint64_t v115 = *(void (**)(char *, uint64_t))(v17 + 8);
  v115(v27, v16);
  uint64_t v33 = static OpenLinkConstants.scheme.getter();
  if (!v32)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v30 == v33 && v32 == v34)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0) {
      goto LABEL_11;
    }
  }
  id v36 = [v28 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v37 = URL.host.getter();
  uint64_t v39 = v38;
  v115(v25, v16);
  uint64_t v40 = static OpenLinkConstants.multiUserHost.getter();
  if (!v39)
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = v113;
    goto LABEL_19;
  }
  if (v37 == v40 && v39 == v41)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = v113;
    goto LABEL_14;
  }
  char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v113;
  if ((v48 & 1) == 0)
  {
LABEL_19:
    id v59 = [v28 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100333B60((uint64_t)v22, *(unsigned __int8 *)(v42 + 128), (uint64_t)v116);
    sub_1000AEEC8((uint64_t)v116, (uint64_t)v117, &qword_100966E70);
    if (v118 == 1)
    {
      swift_getObjectType();
      uint64_t v60 = v108;
      AMSBagProtocol.makeNavigationRequest(with:annotation:)();
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v42;
      *(void *)(v61 + 24) = v28;
      uint64_t v62 = v103;
      uint64_t v63 = *(void (**)(char *, uint64_t))(v103 + 16);
      uint64_t v99 = (char *)(v103 + 16);
      uint64_t v115 = v63;
      uint64_t v64 = v98;
      uint64_t v65 = v104;
      ((void (*)(char *, char *, uint64_t))v63)(v98, v60, v104);
      uint64_t v66 = *(unsigned __int8 *)(v62 + 80);
      uint64_t v96 = v66 | 7;
      uint64_t v67 = (v66 + 16) & ~v66;
      uint64_t v97 = (char *)v67;
      unint64_t v95 = ((v8 + v67 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
      unint64_t v94 = (v8 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v68 = swift_allocObject();
      uint64_t v93 = *(void (**)(uint64_t, char *, uint64_t))(v62 + 32);
      v93(v68 + v67, v64, v65);
      uint64_t v69 = (uint64_t (**)(uint64_t))(v68 + ((v8 + v67 + 7) & 0xFFFFFFFFFFFFFFF8));
      char *v69 = sub_100663BE0;
      v69[1] = (uint64_t (*)(uint64_t))v61;
      type metadata accessor for NavigationRequest();
      swift_retain();
      uint64_t v98 = v28;
      Promise.init(asyncOperation:)();
      uint64_t v103 = *(void *)(v62 + 8);
      uint64_t v70 = v108;
      ((void (*)(char *, uint64_t))v103)(v108, v65);
      uint64_t v72 = v111;
      uint64_t v71 = v112;
      uint64_t v73 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v100, v109, v112);
      unint64_t v74 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
      uint64_t v75 = swift_allocObject();
      *(void *)(v75 + 16) = v42;
      uint64_t v76 = v98;
      *(void *)(v75 + 24) = v98;
      (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v75 + v74, v73, v71);
      uint64_t v77 = v110;
      ((void (*)(char *, char *, uint64_t))v115)(v70, v110, v65);
      uint64_t v78 = swift_allocObject();
      v93((uint64_t)&v97[v78], v70, v65);
      uint64_t v79 = (uint64_t (**)(uint64_t))(v78 + v94);
      char *v79 = sub_100663C18;
      v79[1] = (uint64_t (*)(uint64_t))v75;
      uint64_t v80 = v113;
      swift_retain();
      id v81 = v76;
      uint64_t v115 = (void (*)(char *, uint64_t))((char *)&type metadata for () + 8);
      uint64_t v82 = v105;
      Promise.init(asyncOperation:)();
      ((void (*)(char *, uint64_t))v103)(v77, v65);
      uint64_t v83 = swift_allocObject();
      *(void *)(v83 + 16) = v80;
      *(void *)(v83 + 24) = v81;
      uint64_t v84 = v106;
      uint64_t v85 = v102;
      uint64_t v86 = v107;
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v102, v82, v107);
      unint64_t v87 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
      unint64_t v88 = (v101 + v87 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v89 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v89 + v87, v85, v86);
      uint64_t v90 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v89 + v88);
      char *v90 = sub_100663C60;
      v90[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v83;
      swift_retain();
      id v91 = v81;
      Promise.init(asyncOperation:)();
      return (uint64_t *)(*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v82, v86);
    }
    else
    {
      sub_100334350((uint64_t)v117, (uint64_t)&v119);
      sub_10065E058((uint64_t)&v119, v114);
      return sub_100663C74(v116);
    }
  }
LABEL_14:
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unsigned __int8 v50 = [Strong navigateToSeymourTab];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if (v50) {
        goto LABEL_17;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
LABEL_11:
    id v43 = [v28 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100662520(v22);
    v115((char *)v22, v16);
    uint64_t v44 = type metadata accessor for NavigationError();
    sub_1000E035C(&qword_100966E48, (void (*)(uint64_t))&type metadata accessor for NavigationError);
    uint64_t v45 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v44 - 8) + 104))(v46, enum case for NavigationError.tabUnavailable(_:), v44);
    *(void *)(swift_allocObject() + 16) = v45;
    return (uint64_t *)Promise.init(synchronousOperation:)();
  }
LABEL_17:
  char v51 = (void **)sub_10007E4EC((void *)(v42 + 48), *(void *)(v42 + 72));
  id v52 = [v28 URL];
  unint64_t v53 = v97;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v54 = *v51;
  uint64_t v55 = (uint64_t)v51[1];
  int v119 = _swiftEmptyArrayStorage;
  sub_1000E035C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
  sub_1000AFA94(&qword_1009633E0);
  sub_1002D54D8((unint64_t *)&qword_1009668F0, &qword_1009633E0);
  Swift::String v56 = v99;
  uint64_t v57 = v112;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  if (v55 < 0)
  {
    swift_retain();
    AppCoordinator.navigateToURL(_:annotation:)();
    sub_1000656A0(v54, v55);
  }
  else
  {
    id v58 = v54;
    BrowsingViewController.navigateToURL(_:annotation:)();
  }
  (*(void (**)(char *, uint64_t))(v111 + 8))(v56, v57);
  return (uint64_t *)((uint64_t (*)(char *, uint64_t))v115)(v53, v16);
}

uint64_t sub_100660648(uint64_t a1, void *a2, void *a3)
{
  id v26 = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  __chkstk_darwin(v5);
  id v27 = (void (*)(char *, uint64_t))((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for NavigationRequest();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v30 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TrainerTipsGalleryNavigationBegan();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  if (NavigationRequest.isTrainerTipsGalleryRequest.getter())
  {
    v25[1] = a2[5];
    swift_getObjectType();
    TrainerTipsGalleryNavigationBegan.init()();
    sub_1000E035C(qword_100963730, (void (*)(uint64_t))&type metadata accessor for TrainerTipsGalleryNavigationBegan);
    dispatch thunk of EventHubProtocol.publish<A>(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_6;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  unsigned __int8 v15 = [Strong navigateToSeymourTab];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_8:
    id v19 = [v26 URL];
    uint64_t v20 = v27;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100662520(v20);
    (*(void (**)(void, uint64_t))(v28 + 8))(v20, v29);
    uint64_t v21 = type metadata accessor for NavigationError();
    sub_1000E035C(&qword_100966E48, (void (*)(uint64_t))&type metadata accessor for NavigationError);
    uint64_t v22 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, enum case for NavigationError.tabUnavailable(_:), v21);
    *(void *)(swift_allocObject() + 16) = v22;
    return Promise.init(synchronousOperation:)();
  }
LABEL_6:
  sub_10007E4EC(a2 + 11, a2[14]);
  dispatch thunk of MetricSceneLifecycleReporting.reportOpenURLContexts()();
  uint64_t v16 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v30, v31, v7);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, v16, v7);
  return Promise.init(synchronousOperation:)();
}

uint64_t sub_100660AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v39 = a4;
  id v37 = a3;
  uint64_t v42 = a1;
  uint64_t v44 = a5;
  uint64_t v6 = type metadata accessor for NavigationRequest();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v41 = v8;
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for URL();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v13 = *(v12 - 1);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v40 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v35 - v16;
  uint64_t v43 = a2;
  uint64_t v18 = (void **)sub_10007E4EC((void *)(a2 + 48), *(void *)(a2 + 72));
  uint64_t v19 = (uint64_t)v18[1];
  if (v19 < 0)
  {
    uint64_t v21 = *v18;
    swift_retain();
    id v22 = [v37 URL];
    id v37 = v12;
    uint64_t v23 = v9;
    uint64_t v24 = v6;
    id v25 = v22;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v6 = v24;
    uint64_t v9 = v23;
    uint64_t v12 = v37;
    AppCoordinator.navigateToURL(_:annotation:)();
    sub_1000656A0(v21, v19);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v38);
  }
  else
  {
    sub_100663CD0();
    uint64_t v20 = swift_allocError();
    *(void *)(swift_allocObject() + 16) = v20;
    Promise.init(synchronousOperation:)();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v42, v6);
  uint64_t v26 = v6;
  unint64_t v27 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v28 + v27, v9, v26);
  uint64_t v29 = v40;
  (*(void (**)(char *, char *, void *))(v13 + 16))(v40, v17, v12);
  unint64_t v30 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v31 = (v14 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  (*(void (**)(unint64_t, char *, void *))(v13 + 32))(v32 + v30, v29, v12);
  uint64_t v33 = (void *)(v32 + v31);
  *uint64_t v33 = sub_100663CC0;
  v33[1] = v28;
  swift_retain();
  Promise.init(asyncOperation:)();
  return (*(uint64_t (**)(char *, void *))(v13 + 8))(v17, v12);
}

void sub_100660EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void **)sub_10007E4EC((void *)(a2 + 48), *(void *)(a2 + 72));
  uint64_t v3 = *v2;
  uint64_t v4 = (uint64_t)v2[1];
  if (v4 < 0)
  {
    swift_retain();
    AppCoordinator.navigateToRequest(_:)();
    sub_1000656A0(v3, v4);
  }
  else
  {
    id v5 = v3;
    BrowsingViewController.navigateToRequest(_:)();
  }
}

uint64_t sub_100660FAC@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v5 = type metadata accessor for NavigationAnnotation();
  uint64_t v35 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v11 = *(void *)(v38 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v38);
  uint64_t v36 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v37 = (char *)&v32 - v14;
  uint64_t v39 = a1;
  uint64_t v15 = (void **)sub_10007E4EC((void *)(a1 + 48), *(void *)(a1 + 72));
  id v16 = [a2 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v18 = *v15;
  uint64_t v17 = (uint64_t)v15[1];
  uint64_t v41 = _swiftEmptyArrayStorage;
  sub_1000E035C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
  sub_1000AFA94(&qword_1009633E0);
  sub_1002D54D8((unint64_t *)&qword_1009668F0, &qword_1009633E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  if (v17 < 0)
  {
    swift_retain();
    uint64_t v21 = v37;
    AppCoordinator.navigateToURL(_:annotation:)();
    id v22 = v18;
    uint64_t v20 = v21;
    sub_1000656A0(v22, v17);
  }
  else
  {
    id v19 = v18;
    uint64_t v20 = v37;
    BrowsingViewController.navigateToURL(_:annotation:)();
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v39;
  *(void *)(v23 + 16) = sub_100663CA8;
  *(void *)(v23 + 24) = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1000E02E0;
  *(void *)(v25 + 24) = v23;
  uint64_t v26 = v36;
  uint64_t v27 = v38;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v20, v38);
  unint64_t v28 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v29 + v28, v26, v27);
  unint64_t v30 = (uint64_t (**)(uint64_t))(v29 + ((v12 + v28 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v30 = sub_10003936C;
  v30[1] = (uint64_t (*)(uint64_t))v25;
  swift_retain();
  Promise.init(asyncOperation:)();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v20, v27);
}

uint64_t sub_100661418()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong navigateToSeymourTab];
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100661498(void *a1)
{
  if (!swift_unknownObjectWeakLoadStrong())
  {
LABEL_4:
    sub_10007E4EC((void *)(v1 + 144), *(void *)(v1 + 168));
    dispatch thunk of SiriUserActivityHandling.handleActivity(_:)();
    return static Promise<>.success.getter();
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v4 = [Strong navigateToSeymourTab];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  sub_10066376C(a1);
  uint64_t v6 = type metadata accessor for NavigationError();
  sub_1000E035C(&qword_100966E48, (void (*)(uint64_t))&type metadata accessor for NavigationError);
  uint64_t v7 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v8, enum case for NavigationError.tabUnavailable(_:), v6);
  *(void *)(swift_allocObject() + 16) = v7;

  return Promise.init(synchronousOperation:)();
}

void sub_10066165C(uint64_t a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v2 - 8);
  unsigned __int8 v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self defaultWorkspace];
  if (v5)
  {
    uint64_t v6 = v5;
    sub_100650A4C(a1, (uint64_t)v4);
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v10 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
    {
      URL._bridgeToObjectiveC()(v9);
      uint64_t v10 = v11;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
    }
    [v6 openSensitiveURL:v10 withOptions:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006617B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_1009633D0);
  uint64_t v51 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned __int8 v50 = &v45[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for NavigationRoutingBehavior();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  __chkstk_darwin(v4);
  uint64_t v65 = &v45[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v63 = type metadata accessor for NavigationSource();
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v64 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v59 = type metadata accessor for NavigationAnnotation();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v60 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for NavigationPriority();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  __chkstk_darwin(v8);
  id v58 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v54 = type metadata accessor for NavigationIntent();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v52 = type metadata accessor for NavigationResource();
  uint64_t v12 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = type metadata accessor for NavigationRequest();
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v62 = &v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for SeymourAvailabilityManager.State(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v45[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for ContentAvailability();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = &v45[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v25 = &v45[-v24];
  uint64_t v26 = v1[17];
  if (v26)
  {
    uint64_t v47 = v2;
    uint64_t v27 = v26 + OBJC_IVAR____TtC10FitnessApp26SeymourAvailabilityManager_state;
    swift_beginAccess();
    sub_100075760(v27, (uint64_t)v18);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
      return sub_100074AF8((uint64_t)v18);
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(v25, v18, v19);
    (*(void (**)(unsigned char *, void, uint64_t))(v20 + 104))(v22, enum case for ContentAvailability.available(_:), v19);
    sub_1000E035C(&qword_100966E40, (void (*)(uint64_t))&type metadata accessor for ContentAvailability);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v70 == v68 && v71 == v69)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v20 + 8);
      v29(v22, v19);
      v29(v25, v19);
      uint64_t v2 = v47;
    }
    else
    {
      int v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v20 + 8);
      v30(v22, v19);
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v30)(v25, v19);
      uint64_t v2 = v47;
      if ((v46 & 1) == 0) {
        return result;
      }
    }
  }
  sub_10007E4EC(v1 + 11, v1[14]);
  dispatch thunk of MetricSceneLifecycleReporting.reportDefaultLaunch()();
  uint64_t v31 = enum case for NavigationRootResourceState.automatic(_:);
  uint64_t v32 = type metadata accessor for NavigationRootResourceState();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v14, v31, v32);
  (*(void (**)(unsigned char *, void, uint64_t))(v12 + 104))(v14, enum case for NavigationResource.root(_:), v52);
  *uint64_t v11 = 0;
  (*(void (**)(unsigned char *, void, uint64_t))(v53 + 104))(v11, enum case for NavigationIntent.reset(_:), v54);
  (*(void (**)(unsigned char *, void, uint64_t))(v55 + 104))(v58, enum case for NavigationPriority.takeover(_:), v56);
  sub_1000AFA94((uint64_t *)&unk_100966E30);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1007509E0;
  static NavigationAnnotation.appLaunch.getter();
  uint64_t v70 = v33;
  sub_1000E035C((unint64_t *)&qword_1009668E0, (void (*)(uint64_t))&type metadata accessor for NavigationAnnotation);
  sub_1000AFA94(&qword_1009633E0);
  sub_1002D54D8((unint64_t *)&qword_1009668F0, &qword_1009633E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(unsigned char *, void, uint64_t))(v61 + 104))(v64, enum case for NavigationSource.default(_:), v63);
  (*(void (**)(unsigned char *, void, uint64_t))(v66 + 104))(v65, enum case for NavigationRoutingBehavior.default(_:), v67);
  uint64_t v34 = v62;
  NavigationRequest.init(resource:intent:source:routingBehavior:priority:annotation:)();
  uint64_t v35 = (void **)sub_10007E4EC(v1 + 6, v1[9]);
  id v37 = *v35;
  uint64_t v36 = (uint64_t)v35[1];
  if (v36 < 0)
  {
    swift_retain();
    uint64_t v39 = v50;
    AppCoordinator.navigateToRequest(_:)();
    sub_1000656A0(v37, v36);
  }
  else
  {
    id v38 = v37;
    uint64_t v39 = v50;
    BrowsingViewController.navigateToRequest(_:)();
  }
  uint64_t v40 = v51;
  uint64_t v41 = v49;
  uint64_t v42 = v48;
  uint64_t v43 = (void (*)(uint64_t (*)(uint64_t), uint64_t))Promise.operation.getter();
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = 0;
  *(void *)(v44 + 24) = 0;
  v43(sub_10006D8B4, v44);
  swift_release();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v39, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v42 + 8))(v34, v41);
}

uint64_t sub_1006621CC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 48);
  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 88);

  _s10FitnessApp24HistoryViewActionContextVwxx_0(v0 + 144);
  sub_10019B9F8(v0 + 184);

  return swift_deallocClassInstance();
}

uint64_t sub_10066223C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NavigationRequest();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

void sub_1006622AC(uint64_t a1, int a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_10007E2D8(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_10007E2D8(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v17;
  swift_unknownObjectRelease();
  Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v7 = (v7 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_23;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v14 = static NSObject.== infix(_:_:)();
    }
    while ((v14 & 1) == 0);
  }

LABEL_17:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v16 = v15;
}

uint64_t sub_100662520(void (*a1)(char *, uint64_t))
{
  uint64_t v123 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v4 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v122 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v121 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  unint64_t v120 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for URL();
  uint64_t v113 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v124 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for Logger();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  Swift::Int v127 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  uint64_t v117 = *(void *)(v112 - 8);
  uint64_t v11 = __chkstk_darwin(v112);
  uint64_t v119 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v116 = (uint64_t)&v103 - v14;
  uint64_t v118 = v15;
  __chkstk_darwin(v13);
  uint64_t v133 = (uint64_t)&v103 - v16;
  uint64_t v139 = type metadata accessor for URLQueryItem();
  uint64_t v131 = *(void *)(v139 - 8);
  uint64_t v17 = __chkstk_darwin(v139);
  uint64_t v130 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v129 = (char *)&v103 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  Swift::Int v126 = (char *)&v103 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v132 = (char *)&v103 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v103 - v25;
  uint64_t v27 = sub_1000AFA94(&qword_10094DD20);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for URLComponents();
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  unsigned __int8 v134 = (char *)&v103 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = URL.host.getter();
  uint64_t v33 = v32;
  uint64_t v34 = static NavigationConstants.host.getter();
  if (!v33)
  {
    return swift_bridgeObjectRelease();
  }
  if (v31 == v34 && v33 == v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v37 & 1) == 0) {
      return result;
    }
  }
  uint64_t v111 = v6;
  sub_1000AFA94((uint64_t *)&unk_100966E50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100752410;
  *(void *)(inited + 32) = static NavigationConstants.sharingURLScheme.getter();
  *(void *)(inited + 40) = v39;
  *(void *)(inited + 48) = static NavigationConstants.secureSharingURLScheme.getter();
  *(void *)(inited + 56) = v40;
  *(void *)(inited + 64) = static OpenLinkConstants.scheme.getter();
  *(void *)(inited + 72) = v41;
  uint64_t v42 = URL.scheme.getter();
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(inited + 40);
  if (!v45)
  {
    if (!v44) {
      goto LABEL_30;
    }
    goto LABEL_16;
  }
  if (v44)
  {
    if (*(void *)(inited + 32) == v42 && v45 == v44 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_27;
    }
LABEL_16:
    uint64_t v46 = *(void *)(inited + 56);
    if (v46
      && (*(void *)(inited + 48) == v42 && v46 == v44 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  if (!*(void *)(inited + 56)) {
    goto LABEL_30;
  }
LABEL_22:
  uint64_t v47 = *(void *)(inited + 72);
  if (!v47)
  {
    if (v44)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1000AFA94((uint64_t *)&unk_100958790);
      return swift_arrayDestroy();
    }
LABEL_30:
    swift_setDeallocating();
    sub_1000AFA94((uint64_t *)&unk_100958790);
    swift_arrayDestroy();
    goto LABEL_31;
  }
  if (!v44
    || (*(void *)(inited + 64) != v42 || v47 != v44) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    goto LABEL_29;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  uint64_t v48 = v135;
  uint64_t v49 = v136;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v29, 1, v136) == 1) {
    return sub_10008DB18((uint64_t)v29, &qword_10094DD20);
  }
  uint64_t v107 = v4;
  uint64_t v108 = v5;
  uint64_t v109 = v2;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v134, v29, v49);
  uint64_t v50 = URLComponents.queryItems.getter();
  if (v50) {
    uint64_t v51 = (char *)v50;
  }
  else {
    uint64_t v51 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v142 = (unint64_t)v51;
  uint64_t v52 = *((void *)v51 + 2);
  if (!v52)
  {
    uint64_t v62 = 0;
    uint64_t v63 = v127;
    uint64_t v64 = (char *)v125;
    uint64_t v53 = v124;
    uint64_t v65 = v128;
    goto LABEL_49;
  }
  uint64_t v105 = a1;
  uint64_t v53 = (char *)(v131 + 16);
  unint64_t v54 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
  uint64_t v55 = *(void *)(v131 + 72);
  uint64_t v137 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
  uint64_t v138 = v55;
  uint64_t v56 = (void (**)(char *, uint64_t))(v131 + 8);
  swift_bridgeObjectRetain();
  unint64_t v57 = 0;
  unint64_t v110 = v54;
  while (1)
  {
    v137(v26, &v51[v54], v139);
    uint64_t v58 = URLQueryItem.name.getter();
    uint64_t v60 = v59;
    if (v58 == 29548 && v59 == (void (*)(char *, char *, uint64_t))0xE200000000000000) {
      break;
    }
    char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    a1 = *v56;
    (*v56)(v26, v139);
    if (v61) {
      goto LABEL_45;
    }
    ++v57;
    v54 += v138;
    if (v52 == v57)
    {
      swift_bridgeObjectRelease();
      uint64_t v62 = *(void *)(v142 + 16);
      goto LABEL_48;
    }
  }
  swift_bridgeObjectRelease();
  a1 = *v56;
  (*v56)(v26, v139);
LABEL_45:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v62 = v57 + 1;
  uint64_t v66 = v137;
  if (__OFADD__(v57, 1)) {
    goto LABEL_87;
  }
  unint64_t v67 = v142;
  unint64_t v68 = *(void *)(v142 + 16);
  uint64_t v64 = v126;
  if (v62 == v68)
  {
LABEL_47:
    uint64_t v52 = v57;
LABEL_48:
    uint64_t v64 = (char *)v125;
    uint64_t v65 = v128;
    uint64_t v63 = v127;
    uint64_t v53 = v124;
    a1 = v105;
    if (v62 < v52)
    {
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
LABEL_49:
    sub_1001C771C(v52, v62);
    URLQueryItem.init(name:value:)();
    uint64_t v60 = (void (*)(char *, char *, uint64_t))v142;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_50:
      uint64_t v69 = v113;
      unint64_t v71 = *((void *)v60 + 2);
      unint64_t v70 = *((void *)v60 + 3);
      if (v71 >= v70 >> 1) {
        uint64_t v60 = (void (*)(char *, char *, uint64_t))sub_1001E8954(v70 > 1, v71 + 1, 1, (unint64_t)v60);
      }
      *((void *)v60 + 2) = v71 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v131 + 32))((unint64_t)v60+ ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))+ *(void *)(v131 + 72) * v71, v132, v139);
      unint64_t v142 = (unint64_t)v60;
      URLComponents.queryItems.setter();
      static NavigationConstants.secureSharingURLScheme.getter();
      URLComponents.scheme.setter();
      uint64_t v72 = v133;
      URLComponents.url.getter();
      static Log.engagement.getter();
      (*(void (**)(char *, void (*)(char *, uint64_t), char *))(v69 + 16))(v53, a1, v64);
      uint64_t v73 = v116;
      sub_100650A4C(v72, v116);
      unint64_t v74 = Logger.logObject.getter();
      os_log_type_t v75 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = swift_slowAlloc();
        uint64_t v139 = swift_slowAlloc();
        aBlock[0] = v139;
        *(_DWORD *)uint64_t v76 = 136315394;
        sub_1000E035C((unint64_t *)&unk_100966E60, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
        long long v140 = (void *)sub_10008F1F4(v77, v78, aBlock);
        uint64_t v65 = v128;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v69 + 8))(v53, v64);
        *(_WORD *)(v76 + 12) = 2080;
        uint64_t v79 = Optional.description.getter();
        long long v140 = (void *)sub_10008F1F4(v79, v80, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10008DB18(v73, (uint64_t *)&unk_10094B790);
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "Tab hidden, launching URL as fallback: %s, normalized URL %s", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v114 + 8))(v127, v115);
      }
      else
      {
        (*(void (**)(char *, char *))(v69 + 8))(v53, v64);
        sub_10008DB18(v73, (uint64_t *)&unk_10094B790);

        (*(void (**)(char *, uint64_t))(v114 + 8))(v63, v115);
      }
      uint64_t v81 = v109;
      sub_10007E2D8(0, (unint64_t *)&qword_1009555D0);
      uint64_t v82 = v121;
      uint64_t v83 = v120;
      (*(void (**)(char *, void, uint64_t))(v121 + 104))(v120, enum case for DispatchQoS.QoSClass.default(_:), v65);
      uint64_t v84 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v65);
      uint64_t v85 = v133;
      uint64_t v86 = v119;
      sub_100650A4C(v133, v119);
      unint64_t v87 = (*(unsigned __int8 *)(v117 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
      uint64_t v88 = swift_allocObject();
      sub_1000AEEC8(v86, v88 + v87, (uint64_t *)&unk_10094B790);
      aBlock[4] = (uint64_t)sub_100663B78;
      aBlock[5] = v88;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100070394;
      aBlock[3] = (uint64_t)&unk_1008D3EC0;
      uint64_t v89 = _Block_copy(aBlock);
      uint64_t v90 = v122;
      static DispatchQoS.unspecified.getter();
      long long v140 = _swiftEmptyArrayStorage;
      sub_1000E035C((unint64_t *)&qword_100953B50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AFA94((uint64_t *)&unk_1009555E0);
      sub_1002D54D8((unint64_t *)&qword_100953B60, (uint64_t *)&unk_1009555E0);
      id v91 = v107;
      uint64_t v92 = v123;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v89);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v91, v92);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v90, v108);
      sub_10008DB18(v85, (uint64_t *)&unk_10094B790);
      (*(void (**)(char *, uint64_t))(v135 + 8))(v134, v136);
      return swift_release();
    }
LABEL_81:
    uint64_t v60 = (void (*)(char *, char *, uint64_t))sub_1001E8954(0, *((void *)v60 + 2) + 1, 1, (unint64_t)v60);
    goto LABEL_50;
  }
  uint64_t v63 = (char *)(v138 + v54);
  unint64_t v93 = v57 + 1;
  uint64_t v104 = (void (**)(char *, char *, uint64_t))(v131 + 40);
  uint64_t v65 = v139;
  while (1)
  {
    if (v93 >= v68)
    {
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    v66(v64, &v63[v67], v65);
    uint64_t v94 = URLQueryItem.name.getter();
    uint64_t v60 = v95;
    if (v94 == 29548 && v95 == (void (*)(char *, char *, uint64_t))0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      a1(v64, v65);
      goto LABEL_74;
    }
    char v96 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))a1)(v64, v65);
    if (v96)
    {
      uint64_t v66 = v137;
      goto LABEL_74;
    }
    uint64_t v66 = v137;
    if (v93 != v57) {
      break;
    }
LABEL_73:
    if (__OFADD__(v57++, 1)) {
      goto LABEL_79;
    }
LABEL_74:
    uint64_t v62 = v93 + 1;
    if (__OFADD__(v93, 1)) {
      goto LABEL_78;
    }
    unint64_t v67 = v142;
    unint64_t v68 = *(void *)(v142 + 16);
    ++v93;
    v63 += v138;
    if (v62 == v68) {
      goto LABEL_47;
    }
  }
  if ((v57 & 0x8000000000000000) == 0)
  {
    unint64_t v97 = v142;
    unint64_t v98 = *(void *)(v142 + 16);
    if (v57 >= v98) {
      goto LABEL_83;
    }
    uint64_t v99 = v53;
    unint64_t v106 = v57 * v138;
    uint64_t v65 = v139;
    uint64_t v100 = v137;
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v137)(v129, v142 + v110 + v57 * v138, v139);
    if (v93 >= v98) {
      goto LABEL_84;
    }
    v100(v130, &v63[v97], v65);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v142 = v97;
    uint64_t v64 = v126;
    uint64_t v53 = v99;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1005EC2F0(v97);
      unint64_t v97 = result;
      unint64_t v142 = result;
    }
    if (v57 >= *(void *)(v97 + 16)) {
      goto LABEL_85;
    }
    unint64_t v101 = v97 + v110 + v106;
    uint64_t v60 = *v104;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v104)(v101, v130, v65);
    if (v93 >= *(void *)(v142 + 16)) {
      goto LABEL_86;
    }
    v60(&v63[v142], v129, v65);
    uint64_t v66 = v137;
    goto LABEL_73;
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
  return result;
}

uint64_t sub_10066376C(void *a1)
{
  uint64_t v2 = sub_1000AFA94((uint64_t *)&unk_10094B790);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (void (*)(char *, uint64_t))((char *)&v23 - v10);
  id v12 = [a1 activityType];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      return result;
    }
  }
  id v20 = [a1 webpageURL];
  if (v20)
  {
    uint64_t v21 = v20;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v22(v4, v9, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v22((char *)v11, v4, v5);
      sub_100662520(v11);
      return (*(uint64_t (**)(void, uint64_t))(v6 + 8))(v11, v5);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  return sub_10008DB18((uint64_t)v4, (uint64_t *)&unk_10094B790);
}

uint64_t sub_100663A20()
{
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_100663A58()
{
  uint64_t v1 = *(void *)(sub_1000AFA94((uint64_t *)&unk_10094B790) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

void sub_100663B78()
{
  uint64_t v1 = *(void *)(sub_1000AFA94((uint64_t *)&unk_10094B790) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10066165C(v2);
}

uint64_t sub_100663BE0(uint64_t a1)
{
  return sub_100660648(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100663BE8()
{
  return sub_10001EC00(&qword_10095DD30);
}

uint64_t sub_100663BF4(uint64_t a1, uint64_t a2)
{
  return sub_1006641F0(a1, a2, &qword_10095DD30, sub_10048B9C0);
}

uint64_t sub_100663C18(uint64_t a1)
{
  return sub_100663E48(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100660AB8);
}

uint64_t sub_100663C30()
{
  return sub_10001EC00(&qword_10095DD30);
}

uint64_t sub_100663C3C(uint64_t a1, uint64_t a2)
{
  return sub_1006641F0(a1, a2, &qword_10095DD30, sub_10048B998);
}

uint64_t sub_100663C60@<X0>(uint64_t a1@<X8>)
{
  return sub_100660FAC(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_100663C68()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t *sub_100663C74(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100663CA8()
{
  return sub_100661418();
}

uint64_t sub_100663CB0()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100663CC4()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

unint64_t sub_100663CD0()
{
  unint64_t result = qword_100966E78;
  if (!qword_100966E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966E78);
  }
  return result;
}

uint64_t sub_100663D28@<X0>(uint64_t a1@<X8>)
{
  return sub_1006640D4(a1);
}

uint64_t sub_100663D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10065F1CC(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_100663D4C()
{
  return sub_10001EC00(&qword_10095DD30);
}

uint64_t sub_100663D5C()
{
  uint64_t v1 = type metadata accessor for NavigationAnnotation();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100663E30(uint64_t a1)
{
  return sub_100663E48(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10065F580);
}

uint64_t sub_100663E48(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for NavigationAnnotation() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6, v7);
}

uint64_t sub_100663EE0()
{
  return sub_10001EC00(&qword_10095DD30);
}

uint64_t sub_100663EF0()
{
  uint64_t v1 = type metadata accessor for NavigationRequest();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100663FBC(uint64_t a1)
{
  type metadata accessor for NavigationRequest();
  sub_100660EF0(a1, *(void *)(v1 + 16));
}

uint64_t sub_100664034()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_100664044()
{
  uint64_t v1 = type metadata accessor for NavigationRequest();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1006640D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NavigationRequest();
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v3);
}

void sub_100664144(uint64_t a1)
{
  sub_10065E528(a1, v1);
}

uint64_t sub_10066414C()
{
  return sub_10001EC00(&qword_10095DD30);
}

uint64_t sub_100664158()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100664190()
{
  return sub_10065DFF8();
}

uint64_t sub_1006641AC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006641E4()
{
  return sub_10001EC00((uint64_t *)&unk_1009633D0);
}

uint64_t sub_1006641F0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(sub_1000AFA94(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t *sub_1006642E4(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_1000AFA94(&qword_10094DFC8) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006643F0(uint64_t a1)
{
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DismissAction();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100664494(void *a1, void *a2)
{
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100664550(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094DFC8);
    sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100664624(void *a1, const void *a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_1006646E8(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_10008DB18((uint64_t)a1, &qword_10094DFC8);
    uint64_t v4 = sub_1000AFA94(&qword_10094DFC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for DismissAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006647C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006647D8);
}

uint64_t sub_1006647D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094DFD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100664848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10066485C);
}

uint64_t sub_10066485C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AFA94(&qword_10094DFD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TrainingLoadInfoPaneDetailView()
{
  uint64_t result = qword_100966F00;
  if (!qword_100966F00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10066491C()
{
  sub_1001BC5F4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1006649A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006649C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  __chkstk_darwin(v3);
  uint64_t v42 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AFA94(&qword_100966F50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AFA94(&qword_100966F48);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v39 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_100966F40);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  uint64_t v41 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Axis.Set.vertical.getter();
  sub_1000AFA94(&qword_100966F60);
  sub_100666B84();
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v46 = a1;
  uint64_t v17 = sub_1000AFA94(&qword_100961608);
  uint64_t v18 = sub_1000A132C(&qword_100966F58, &qword_100966F50);
  uint64_t v19 = sub_1000A1370(&qword_10094E2B8);
  uint64_t v20 = sub_1000A132C(&qword_100961680, &qword_10094E2B8);
  uint64_t v47 = v19;
  uint64_t v48 = (void *)v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v22 = [self mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v22 localizedStringForKey:v23 value:0 table:0];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  uint64_t v51 = v25;
  uint64_t v52 = v27;
  uint64_t v47 = v5;
  uint64_t v48 = (void *)v17;
  uint64_t v49 = v18;
  unint64_t v50 = OpaqueTypeConformance2;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  unint64_t v29 = sub_1000A06D0();
  uint64_t v30 = v38;
  View.navigationTitle<A>(_:)();
  swift_bridgeObjectRelease();
  uint64_t v31 = v12;
  uint64_t v32 = v30;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v30);
  uint64_t v33 = v42;
  uint64_t v34 = v43;
  uint64_t v35 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v44);
  uint64_t v47 = v32;
  uint64_t v48 = &type metadata for String;
  uint64_t v49 = v28;
  unint64_t v50 = v29;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = v40;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v16, v36);
}

void *sub_100664EEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static HorizontalAlignment.leading.getter();
  sub_100665010((uint64_t)__src);
  v24[736] = 0;
  memcpy(&v24[7], __src, 0x2D9uLL);
  char v3 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v25 = 0;
  char v12 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  char v21 = v25;
  char v26 = 0;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t result = memcpy((void *)(a1 + 17), v24, 0x2E0uLL);
  *(unsigned char *)(a1 + 760) = v3;
  *(void *)(a1 + 768) = v5;
  *(void *)(a1 + 776) = v7;
  *(void *)(a1 + 784) = v9;
  *(void *)(a1 + 792) = v11;
  *(unsigned char *)(a1 + 800) = v21;
  *(unsigned char *)(a1 + 808) = v12;
  *(void *)(a1 + 816) = v14;
  *(void *)(a1 + 824) = v16;
  *(void *)(a1 + 832) = v18;
  *(void *)(a1 + 840) = v20;
  *(unsigned char *)(a1 + 848) = v26;
  return result;
}

uint64_t sub_100665010@<X0>(uint64_t a1@<X8>)
{
  uint64_t v286 = a1;
  uint64_t v1 = type metadata accessor for Font.Leading();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v293 = v1;
  uint64_t v294 = v2;
  __chkstk_darwin(v1);
  id v292 = (char *)&v226 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v296 = self;
  id v4 = [v296 mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 localizedStringForKey:v5 value:0 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  uint64_t v389 = (uint64_t *)v7;
  v390 = v9;
  unint64_t v295 = sub_1000A06D0();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  LOBYTE(v9) = v13 & 1;
  static Font.body.getter();
  uint64_t v14 = Text.font(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  swift_release();
  sub_1000A06C0(v10, v12, (char)v9);
  swift_bridgeObjectRelease();
  LODWORD(v389) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v19 = Text.foregroundStyle<A>(_:)();
  uint64_t v283 = v20;
  uint64_t v284 = v19;
  int v285 = v21;
  uint64_t v282 = v22;
  sub_1000A06C0(v14, v16, v18 & 1);
  swift_bridgeObjectRelease();
  int v281 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v279 = v24;
  uint64_t v280 = v23;
  uint64_t v277 = v26;
  uint64_t v278 = v25;
  id v27 = [v296 mainBundle];
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v27 localizedStringForKey:v28 value:0 table:0];

  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v31;

  uint64_t v389 = (uint64_t *)v30;
  v390 = v32;
  uint64_t v33 = Text.init<A>(_:)();
  uint64_t v35 = v34;
  char v37 = v36 & 1;
  static Font.body.getter();
  unsigned int v289 = enum case for Font.Leading.tight(_:);
  uint64_t v39 = v293;
  uint64_t v38 = v294;
  uint64_t v40 = *(void (**)(void))(v294 + 104);
  uint64_t v290 = v294 + 104;
  id v291 = (void (*)(char *, void, uint64_t))v40;
  uint64_t v41 = v292;
  v40(v292);
  Font.leading(_:)();
  swift_release();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v294 = v38 + 8;
  id v288 = v42;
  v42(v41, v39);
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v43 = Text.font(_:)();
  uint64_t v45 = v44;
  LOBYTE(v39) = v46;
  swift_release();
  sub_1000A06C0(v33, v35, v37);
  swift_bridgeObjectRelease();
  uint64_t v389 = (uint64_t *)static Color.white.getter();
  uint64_t v47 = Text.foregroundStyle<A>(_:)();
  uint64_t v274 = v48;
  uint64_t v275 = v47;
  int v276 = v49;
  uint64_t v273 = v50;
  sub_1000A06C0(v43, v45, v39 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  int v272 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v270 = v52;
  uint64_t v271 = v51;
  uint64_t v268 = v54;
  uint64_t v269 = v53;
  id v55 = [v296 mainBundle];
  NSString v56 = String._bridgeToObjectiveC()();
  id v57 = [v55 localizedStringForKey:v56 value:0 table:0];

  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v60 = v59;

  uint64_t v389 = (uint64_t *)v58;
  v390 = v60;
  uint64_t v61 = Text.init<A>(_:)();
  uint64_t v63 = v62;
  LOBYTE(v60) = v64 & 1;
  static Font.body.getter();
  uint64_t v65 = Text.font(_:)();
  uint64_t v67 = v66;
  LOBYTE(v4sub_10033A2C8(0, 1) = v68;
  swift_release();
  sub_1000A06C0(v61, v63, (char)v60);
  swift_bridgeObjectRelease();
  LODWORD(v389) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v69 = Text.foregroundStyle<A>(_:)();
  uint64_t v261 = v70;
  uint64_t v262 = v69;
  int v267 = v71;
  uint64_t v260 = v72;
  sub_1000A06C0(v65, v67, v41 & 1);
  swift_bridgeObjectRelease();
  int v259 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v265 = v74;
  uint64_t v266 = v73;
  uint64_t v263 = v76;
  uint64_t v264 = v75;
  id v77 = [v296 mainBundle];
  unint64_t v287 = 0xD00000000000002ELL;
  NSString v78 = String._bridgeToObjectiveC()();
  id v79 = [v77 localizedStringForKey:v78 value:0 table:0];

  uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v82 = v81;

  uint64_t v389 = (uint64_t *)v80;
  v390 = v82;
  uint64_t v83 = Text.init<A>(_:)();
  uint64_t v85 = v84;
  LOBYTE(v45) = v86 & 1;
  static Font.body.getter();
  uint64_t v88 = v292;
  uint64_t v87 = v293;
  v291(v292, v289, v293);
  Font.leading(_:)();
  swift_release();
  v288(v88, v87);
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v89 = Text.font(_:)();
  uint64_t v91 = v90;
  LOBYTE(v88) = v92;
  swift_release();
  sub_1000A06C0(v83, v85, v45);
  swift_bridgeObjectRelease();
  uint64_t v389 = (uint64_t *)static Color.white.getter();
  uint64_t v93 = Text.foregroundStyle<A>(_:)();
  uint64_t v250 = v94;
  uint64_t v251 = v93;
  int v257 = v95;
  uint64_t v258 = v96;
  sub_1000A06C0(v89, v91, v88 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  int v256 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v254 = v98;
  uint64_t v255 = v97;
  uint64_t v252 = v100;
  uint64_t v253 = v99;
  id v101 = [v296 mainBundle];
  NSString v102 = String._bridgeToObjectiveC()();
  id v103 = [v101 localizedStringForKey:v102 value:0 table:0];

  uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v106 = v105;

  uint64_t v389 = (uint64_t *)v104;
  v390 = v106;
  uint64_t v107 = Text.init<A>(_:)();
  uint64_t v109 = v108;
  LOBYTE(v106) = v110 & 1;
  static Font.body.getter();
  uint64_t v111 = Text.font(_:)();
  uint64_t v113 = v112;
  LOBYTE(v88) = v114;
  swift_release();
  sub_1000A06C0(v107, v109, (char)v106);
  swift_bridgeObjectRelease();
  LODWORD(v389) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v115 = Text.foregroundStyle<A>(_:)();
  uint64_t v247 = v116;
  uint64_t v248 = v115;
  int v246 = v117;
  uint64_t v249 = v118;
  sub_1000A06C0(v111, v113, v88 & 1);
  swift_bridgeObjectRelease();
  int v245 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v243 = v120;
  uint64_t v244 = v119;
  uint64_t v241 = v122;
  uint64_t v242 = v121;
  id v123 = [v296 mainBundle];
  NSString v124 = String._bridgeToObjectiveC()();
  id v125 = [v123 localizedStringForKey:v124 value:0 table:0];

  uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v128 = v127;

  uint64_t v389 = (uint64_t *)v126;
  v390 = v128;
  uint64_t v129 = Text.init<A>(_:)();
  uint64_t v131 = v130;
  LOBYTE(v45) = v132 & 1;
  static Font.body.getter();
  unsigned __int8 v134 = v292;
  uint64_t v133 = v293;
  v291(v292, v289, v293);
  Font.leading(_:)();
  swift_release();
  v288(v134, v133);
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v135 = Text.font(_:)();
  uint64_t v137 = v136;
  LOBYTE(v134) = v138;
  swift_release();
  sub_1000A06C0(v129, v131, v45);
  swift_bridgeObjectRelease();
  uint64_t v389 = (uint64_t *)static Color.white.getter();
  uint64_t v139 = Text.foregroundStyle<A>(_:)();
  uint64_t v238 = v140;
  uint64_t v239 = v139;
  int v237 = v141;
  uint64_t v240 = v142;
  sub_1000A06C0(v135, v137, v134 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  int v236 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v234 = v144;
  uint64_t v235 = v143;
  uint64_t v232 = v146;
  uint64_t v233 = v145;
  id v147 = [v296 mainBundle];
  NSString v148 = String._bridgeToObjectiveC()();
  id v149 = [v147 localizedStringForKey:v148 value:0 table:0];

  uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v152 = v151;

  uint64_t v389 = (uint64_t *)v150;
  v390 = v152;
  uint64_t v153 = Text.init<A>(_:)();
  uint64_t v155 = v154;
  LOBYTE(v152) = v156 & 1;
  static Font.body.getter();
  uint64_t v157 = Text.font(_:)();
  uint64_t v159 = v158;
  LOBYTE(v134) = v160;
  swift_release();
  sub_1000A06C0(v153, v155, (char)v152);
  swift_bridgeObjectRelease();
  LODWORD(v389) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v161 = Text.foregroundStyle<A>(_:)();
  uint64_t v229 = v162;
  uint64_t v230 = v161;
  int v228 = v163;
  uint64_t v231 = v164;
  sub_1000A06C0(v157, v159, v134 & 1);
  swift_bridgeObjectRelease();
  int v227 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v166 = v165;
  uint64_t v168 = v167;
  uint64_t v170 = v169;
  uint64_t v172 = v171;
  id v173 = [v296 mainBundle];
  NSString v174 = String._bridgeToObjectiveC()();
  id v175 = [v173 localizedStringForKey:v174 value:0 table:0];

  uint64_t v176 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v178 = v177;

  uint64_t v389 = (uint64_t *)v176;
  v390 = v178;
  uint64_t v179 = Text.init<A>(_:)();
  uint64_t v181 = v180;
  LOBYTE(v45) = v182 & 1;
  static Font.body.getter();
  uint64_t v183 = v292;
  uint64_t v184 = v293;
  v291(v292, v289, v293);
  Font.leading(_:)();
  swift_release();
  v288(v183, v184);
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v185 = Text.font(_:)();
  uint64_t v187 = v186;
  LOBYTE(v178) = v188;
  swift_release();
  sub_1000A06C0(v179, v181, v45);
  swift_bridgeObjectRelease();
  uint64_t v389 = (uint64_t *)static Color.white.getter();
  uint64_t v189 = Text.foregroundStyle<A>(_:)();
  id v292 = v190;
  uint64_t v293 = v189;
  LODWORD(v29sub_10033A2C8(0, 1) = v191;
  uint64_t v294 = v192;
  sub_1000A06C0(v185, v187, v178 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v290) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v194 = v193;
  uint64_t v196 = v195;
  uint64_t v198 = v197;
  uint64_t v200 = v199;
  id v201 = [v296 mainBundle];
  NSString v202 = String._bridgeToObjectiveC()();
  id v203 = [v201 localizedStringForKey:v202 value:0 table:0];

  uint64_t v204 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v206 = v205;

  uint64_t v389 = (uint64_t *)v204;
  v390 = v206;
  uint64_t v207 = Text.init<A>(_:)();
  uint64_t v209 = v208;
  LOBYTE(v206) = v210 & 1;
  static Font.body.getter();
  uint64_t v211 = Text.font(_:)();
  uint64_t v213 = v212;
  LOBYTE(v45) = v214;
  swift_release();
  sub_1000A06C0(v207, v209, (char)v206);
  swift_bridgeObjectRelease();
  LODWORD(v389) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v215 = Text.foregroundStyle<A>(_:)();
  uint64_t v217 = v216;
  LOBYTE(v207) = v218;
  uint64_t v220 = v219;
  sub_1000A06C0(v211, v213, v45 & 1);
  swift_bridgeObjectRelease();
  LOBYTE(v209) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v384 = v280;
  uint64_t v385 = v279;
  uint64_t v386 = v278;
  uint64_t v387 = v277;
  uint64_t v374 = v271;
  uint64_t v375 = v270;
  uint64_t v376 = v269;
  uint64_t v377 = v268;
  uint64_t v379 = v284;
  uint64_t v380 = v283;
  uint64_t v382 = v282;
  char v383 = v281;
  uint64_t v369 = v275;
  uint64_t v370 = v274;
  uint64_t v372 = v273;
  char v373 = v272;
  uint64_t v359 = v262;
  uint64_t v360 = v261;
  uint64_t v362 = v260;
  char v363 = v259;
  uint64_t v349 = v251;
  uint64_t v350 = v250;
  char v381 = v285 & 1;
  char v388 = 0;
  char v371 = v276 & 1;
  char v378 = 0;
  uint64_t v389 = &v379;
  v390 = &v369;
  char v361 = v267 & 1;
  uint64_t v364 = v266;
  uint64_t v365 = v265;
  uint64_t v366 = v264;
  uint64_t v367 = v263;
  char v368 = 0;
  char v351 = v257 & 1;
  uint64_t v352 = v258;
  char v353 = v256;
  uint64_t v354 = v255;
  uint64_t v355 = v254;
  uint64_t v356 = v253;
  uint64_t v357 = v252;
  char v358 = 0;
  char v391 = &v359;
  char v392 = &v349;
  uint64_t v339 = v248;
  uint64_t v340 = v247;
  char v341 = v246 & 1;
  uint64_t v342 = v249;
  char v343 = v245;
  uint64_t v344 = v244;
  uint64_t v345 = v243;
  uint64_t v346 = v242;
  uint64_t v347 = v241;
  char v348 = 0;
  uint64_t v329 = v239;
  uint64_t v330 = v238;
  char v331 = v237 & 1;
  uint64_t v332 = v240;
  char v333 = v236;
  uint64_t v334 = v235;
  uint64_t v335 = v234;
  uint64_t v336 = v233;
  uint64_t v337 = v232;
  char v338 = 0;
  v393 = &v339;
  uint64_t v394 = &v329;
  uint64_t v319 = v230;
  uint64_t v320 = v229;
  char v321 = v228 & 1;
  uint64_t v322 = v231;
  char v323 = v227;
  uint64_t v324 = v166;
  uint64_t v325 = v168;
  uint64_t v326 = v170;
  uint64_t v327 = v172;
  char v328 = 0;
  uint64_t v309 = v293;
  uint64_t v310 = v292;
  char v311 = v291 & 1;
  uint64_t v312 = v294;
  char v313 = v290;
  uint64_t v314 = v194;
  uint64_t v315 = v196;
  uint64_t v316 = v198;
  uint64_t v317 = v200;
  char v318 = 0;
  uint64_t v395 = &v319;
  uint64_t v396 = &v309;
  uint64_t v299 = v215;
  uint64_t v300 = v217;
  char v301 = v207 & 1;
  uint64_t v302 = v220;
  char v303 = v209;
  uint64_t v304 = v221;
  uint64_t v305 = v222;
  uint64_t v306 = v223;
  uint64_t v307 = v224;
  char v308 = 0;
  uint64_t v297 = 0;
  char v298 = 1;
  uint64_t v397 = &v299;
  uint64_t v398 = &v297;
  sub_1003E6344((uint64_t)&v389, v286);
  sub_1000A06C0(v299, v300, v301);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v309, (uint64_t)v310, v311);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v319, v320, v321);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v329, v330, v331);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v339, v340, v341);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v349, v350, v351);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v359, v360, v361);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v369, v370, v371);
  swift_bridgeObjectRelease();
  sub_1000A06C0(v379, v380, v381);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006663B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000AFA94(&qword_10094E2B8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v9 = a1;
  sub_1000AFA94(&qword_10094E2C0);
  sub_1001C52BC();
  ToolbarItem<>.init(placement:content:)();
  sub_1000A132C(&qword_100961680, &qword_10094E2B8);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10066655C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1000AFA94(&qword_10094E320);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  InfoPaneDetailuint64_t View = type metadata accessor for TrainingLoadInfoPaneDetailView();
  uint64_t v7 = *(void *)(InfoPaneDetailView - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(InfoPaneDetailView - 8);
  uint64_t v9 = sub_1000AFA94(&qword_10094E2E8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AFA94(&qword_10094E2D8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100666CB0(a1, (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  sub_100666E18((uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  Button.init(action:label:)();
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v19 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 0, 1, v19);
  uint64_t KeyPath = swift_getKeyPath();
  int v21 = (uint64_t *)&v16[*(int *)(v14 + 44)];
  uint64_t v22 = sub_1000AFA94(&qword_10094E2F8);
  sub_1000AEF2C((uint64_t)v5, (uint64_t)v21 + *(int *)(v22 + 28), &qword_10094E320);
  uint64_t *v21 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v12, v9);
  sub_10008DB18((uint64_t)v5, &qword_10094E320);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v23 = [self secondaryLabelColor];
  uint64_t v24 = Color.init(_:)();
  uint64_t v25 = v28;
  sub_1000AEF2C((uint64_t)v16, v28, &qword_10094E2D8);
  *(void *)(v25 + *(int *)(sub_1000AFA94(&qword_10094E2C0) + 36)) = v24;
  return sub_10008DB18((uint64_t)v16, &qword_10094E2D8);
}

uint64_t sub_1006668E0()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004E7580((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1006669AC()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_100666B7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1006649C4(*(void *)(v1 + 16), a1);
}

unint64_t sub_100666B84()
{
  unint64_t result = qword_100966F68;
  if (!qword_100966F68)
  {
    sub_1000A1370(&qword_100966F60);
    sub_100666C00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966F68);
  }
  return result;
}

unint64_t sub_100666C00()
{
  unint64_t result = qword_100966F70;
  if (!qword_100966F70)
  {
    sub_1000A1370(&qword_100966F78);
    sub_1000A132C(&qword_100966F80, &qword_100966F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100966F70);
  }
  return result;
}

uint64_t sub_100666CA0()
{
  return sub_1006663B8(*(void *)(v0 + 16));
}

uint64_t sub_100666CA8@<X0>(uint64_t a1@<X8>)
{
  return sub_10066655C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100666CB0(uint64_t a1, uint64_t a2)
{
  InfoPaneDetailuint64_t View = type metadata accessor for TrainingLoadInfoPaneDetailView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(InfoPaneDetailView - 8) + 16))(a2, a1, InfoPaneDetailView);
  return a2;
}

uint64_t sub_100666D14()
{
  uint64_t v1 = *(void *)(type metadata accessor for TrainingLoadInfoPaneDetailView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000AFA94(&qword_10094DFC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100666E18(uint64_t a1, uint64_t a2)
{
  InfoPaneDetailuint64_t View = type metadata accessor for TrainingLoadInfoPaneDetailView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(InfoPaneDetailView - 8) + 32))(a2, a1, InfoPaneDetailView);
  return a2;
}

uint64_t sub_100666E7C()
{
  type metadata accessor for TrainingLoadInfoPaneDetailView();

  return sub_1006668E0();
}

uint64_t sub_100666EE4()
{
  return sub_1000A132C(&qword_100966F90, &qword_100966F98);
}

uint64_t assignWithCopy for CardType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100091494(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000917F8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CardType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000917F8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CardType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10066704C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

Swift::Int sub_100667110(uint64_t a1, void *a2, char a3)
{
  Hasher.init(_seed:)();
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  sub_1000932C0(v7, a3);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!a3 || a3 == 2)
  {
    Hasher._combine(_:)(a1);
  }
  else if (a3 == 1)
  {
    String.hash(into:)();
  }
  return Hasher._finalize()();
}

uint64_t sub_1006671C4(uint64_t a1)
{
  unint64_t v2 = sub_1000AFD24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100667200(uint64_t a1)
{
  unint64_t v2 = sub_1000AFD24();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10066723C(uint64_t a1)
{
  unint64_t v2 = sub_1000AFBD4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100667278(uint64_t a1)
{
  unint64_t v2 = sub_1000AFBD4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1006672B4(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1006672C0(uint64_t a1)
{
  unint64_t v2 = sub_1000AFAD8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006672FC(uint64_t a1)
{
  unint64_t v2 = sub_1000AFAD8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100667338@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_100667368(uint64_t a1)
{
  unint64_t v2 = sub_1000AFD78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006673A4(uint64_t a1)
{
  unint64_t v2 = sub_1000AFD78();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006673E8()
{
  return 1684632949;
}

uint64_t sub_1006673F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100667480(uint64_t a1)
{
  unint64_t v2 = sub_100667CE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006674BC(uint64_t a1)
{
  unint64_t v2 = sub_100667CE4();

  return CodingKey.debugDescription.getter(a1, v2);
}