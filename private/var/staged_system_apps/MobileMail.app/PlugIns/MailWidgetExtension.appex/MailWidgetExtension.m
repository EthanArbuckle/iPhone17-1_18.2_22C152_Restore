uint64_t sub_100003050()
{
  uint64_t v1;

  v1 = sub_100089700();
  sub_1000030B8(v1, qword_1000A2D58);
  sub_100003160(v1, (uint64_t)qword_1000A2D58);
  type metadata accessor for AvailabilityQueue();
  return sub_100016888();
}

uint64_t sub_1000030B8(uint64_t a1, uint64_t *a2)
{
  v5 = a2;
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v2 = swift_slowAlloc();
    *a2 = v2;
    return v2;
  }
  return (uint64_t)v5;
}

uint64_t sub_100003160(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0) {
    return *(void *)a2;
  }
  return v3;
}

uint64_t type metadata accessor for AvailabilityQueue()
{
  uint64_t v1 = qword_1000A3018;
  if (!qword_1000A3018) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

uint64_t sub_10000323C()
{
  if (qword_1000A2D50 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100089700();
  return sub_100003160(v0, (uint64_t)qword_1000A2D58);
}

uint64_t sub_1000032AC(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return sub_100003318(a1, a2, a3, a4, a5);
}

uint64_t sub_100003318(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  type metadata accessor for AvailabilityQueue.State();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_pendingTasks;
  sub_100089E70();
  *(void *)(v5 + v8) = sub_10008A6C0();
  *(void *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a4;
  *(double *)(v5 + 32) = a5;
  swift_retain();
  v6 = (void *)(v5 + OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_availabilityHandler);
  void *v6 = a2;
  v6[1] = a3;
  swift_release();
  return v14;
}

uint64_t type metadata accessor for AvailabilityQueue.State()
{
  uint64_t v1 = qword_1000A3138;
  if (!qword_1000A3138) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

uint64_t sub_10000349C(uint64_t a1)
{
  uint64_t v252 = a1;
  v217 = "Assertion failed";
  v218 = "MailWidgetExtension/AvailabilityQueue.swift";
  uint64_t v248 = 0;
  v219 = sub_10000960C;
  v220 = sub_10000960C;
  v221 = sub_10000552C;
  v222 = sub_1000080AC;
  v223 = sub_1000092DC;
  v224 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v225 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v226 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  v227 = sub_10000960C;
  v228 = sub_1000093A4;
  v229 = sub_1000093EC;
  v230 = sub_1000092DC;
  v231 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v232 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v233 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  v312 = 0;
  v311 = 0;
  uint64_t v310 = 0;
  uint64_t v309 = 0;
  v313 = 0;
  uint64_t v234 = 0;
  v299 = 0;
  uint64_t v235 = sub_100089700();
  uint64_t v236 = *(void *)(v235 - 8);
  uint64_t v237 = v235 - 8;
  unint64_t v238 = (*(void *)(v236 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = __chkstk_darwin(0);
  v239 = &v74[-v238];
  unint64_t v240 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v2);
  v241 = &v74[-v240];
  unint64_t v242 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = __chkstk_darwin(v4);
  v243 = &v74[-v242];
  unint64_t v244 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = __chkstk_darwin(v6);
  v245 = &v74[-v244];
  unint64_t v246 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  v247 = &v74[-v246];
  uint64_t v249 = type metadata accessor for AvailabilityQueue.State();
  unint64_t v250 = (*(void *)(*(void *)(v249 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v248);
  v251 = &v74[-v250];
  uint64_t v253 = sub_100089630();
  v255 = *(void **)(v253 - 8);
  uint64_t v254 = v253 - 8;
  v256 = v255;
  uint64_t v257 = v255[8];
  unint64_t v258 = (v257 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = __chkstk_darwin(v252);
  v259 = &v74[-v258];
  unint64_t v260 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = __chkstk_darwin(v10);
  v261 = &v74[-v260];
  v313 = &v74[-v260];
  unint64_t v262 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = __chkstk_darwin(v12);
  v263 = &v74[-v262];
  v312 = &v74[-v262];
  unint64_t v264 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v16 = __chkstk_darwin(v14);
  v265 = &v74[-v264];
  v311 = &v74[-v264];
  unint64_t v266 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v18 = __chkstk_darwin(v16);
  v267 = &v74[-v266];
  uint64_t v310 = v18;
  uint64_t v309 = v1;
  if (([self isMainThread] & 1) == 0)
  {
    sub_10008A0B0("enqueue() has to be called from the main thread", 0x2FuLL, 1);
    uint64_t v72 = 50;
    int v73 = 0;
    sub_10008A5B0();
    __break(1u);
  }
  v213 = (const void *)(v216 + OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_state);
  v214 = &v308;
  swift_beginAccess();
  sub_10000511C(v213, v251);
  swift_endAccess();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 1:
      v140 = (void (*)(unsigned char *, unsigned char *, uint64_t))v255[2];
      v141 = v255 + 2;
      v140(v263, v251, v253);
      sub_1000895F0();
      if (*(double *)(v216 + 24) < -1.0 * v39)
      {
        v140(v267, v263, v253);
        v139 = (void (*)(unsigned char *, uint64_t))v255[1];
        v138 = v255 + 1;
        v139(v263, v253);
        v139(v251, v253);
        goto LABEL_26;
      }
      v56 = v239;
      v88 = v256;
      v86 = (void (*)(unsigned char *, uint64_t))v255[1];
      v87 = v255 + 1;
      v86(v263, v253);
      v91 = (void (*)(unsigned char *, unsigned char *, uint64_t))v255[4];
      v90 = v255 + 4;
      v91(v261, v251, v253);
      v313 = v261;
      uint64_t v57 = sub_10000323C();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v236 + 16))(v56, v57, v235);
      v140(v259, v261, v253);
      unint64_t v89 = (*((unsigned __int8 *)v88 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v88 + 80);
      uint64_t v99 = 7;
      uint64_t v92 = swift_allocObject();
      v91((unsigned char *)(v92 + v89), v259, v253);
      swift_retain();
      uint64_t v98 = 32;
      uint64_t v58 = swift_allocObject();
      uint64_t v59 = v92;
      uint64_t v100 = v58;
      *(void *)(v58 + 16) = v221;
      *(void *)(v58 + 24) = v59;
      swift_release();
      v108 = sub_1000896E0();
      int v109 = sub_10008A3A0();
      v95 = &v306;
      uint64_t v306 = 12;
      unint64_t v93 = sub_10000818C();
      unint64_t v94 = sub_100008208();
      sub_100008284();
      sub_10008A140();
      uint32_t v96 = v307;
      uint64_t v97 = 17;
      uint64_t v102 = swift_allocObject();
      *(unsigned char *)(v102 + 16) = 34;
      uint64_t v103 = swift_allocObject();
      *(unsigned char *)(v103 + 16) = 8;
      uint64_t v60 = swift_allocObject();
      uint64_t v61 = v100;
      uint64_t v101 = v60;
      *(void *)(v60 + 16) = v222;
      *(void *)(v60 + 24) = v61;
      uint64_t v62 = swift_allocObject();
      uint64_t v63 = v101;
      uint64_t v105 = v62;
      *(void *)(v62 + 16) = v223;
      *(void *)(v62 + 24) = v63;
      uint64_t v107 = sub_100009334(&qword_1000A2E38);
      uint64_t v104 = sub_10008A6C0();
      v106 = v64;
      swift_retain();
      uint64_t v65 = v102;
      v66 = v106;
      *v106 = v224;
      v66[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v65;
      swift_retain();
      uint64_t v67 = v103;
      v68 = v106;
      v106[2] = v225;
      v68[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v67;
      swift_retain();
      v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v105;
      v70 = v106;
      v106[4] = v226;
      v70[5] = v69;
      sub_100007A04();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v108, (os_log_type_t)v109))
      {
        uint64_t v71 = v234;
        v79 = (uint8_t *)sub_10008A470();
        uint64_t v78 = sub_100009334((uint64_t *)&unk_1000A4320);
        uint64_t v80 = sub_100007E5C(0);
        uint64_t v81 = sub_100007E5C(1);
        v82 = &v304;
        v304 = v79;
        v83 = &v303;
        uint64_t v303 = v80;
        v84 = &v302;
        uint64_t v302 = v81;
        sub_100007EB8(2, &v304);
        sub_100007EB8(1, v82);
        v300 = v224;
        uint64_t v301 = v102;
        sub_100007ECC(&v300, (uint64_t)v82, (uint64_t)v83, (uint64_t)v84);
        uint64_t v85 = v71;
        if (v71)
        {
          __break(1u);
        }
        else
        {
          v300 = v225;
          uint64_t v301 = v103;
          sub_100007ECC(&v300, (uint64_t)&v304, (uint64_t)&v303, (uint64_t)&v302);
          uint64_t v77 = 0;
          v300 = v226;
          uint64_t v301 = v105;
          sub_100007ECC(&v300, (uint64_t)&v304, (uint64_t)&v303, (uint64_t)&v302);
          _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v109, "Device is locked (since %{public}s), tasks will be ignored", v79, v96);
          sub_100007F18(v80);
          sub_100007F18(v81);
          sub_10008A450();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(unsigned char *, uint64_t))(v236 + 8))(v239, v235);
      v76 = &v305;
      swift_beginAccess();
      sub_100089E70();
      int v75 = sub_1000055A4();
      sub_100009334((uint64_t *)&unk_1000A2E40);
      sub_10008A1F0(v75 & 1);
      swift_endAccess();
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v86)(v261, v253);
      break;
    case 2:
      v19 = v247;
      uint64_t v20 = sub_10000323C();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v236 + 16))(v19, v20, v235);
      v211 = sub_1000896E0();
      int v210 = sub_10008A3B0();
      v208 = &v274;
      uint64_t v274 = 2;
      unint64_t v206 = sub_10000818C();
      unint64_t v207 = sub_100008208();
      sub_100008284();
      sub_10008A140();
      uint32_t v209 = v275;
      sub_100009334(&qword_1000A2E38);
      uint64_t v212 = sub_10008A6C0();
      if (os_log_type_enabled(v211, (os_log_type_t)v210))
      {
        uint64_t v21 = v234;
        v196 = (uint8_t *)sub_10008A470();
        uint64_t v194 = sub_100009334((uint64_t *)&unk_1000A4320);
        uint64_t v195 = 0;
        uint64_t v197 = sub_100007E5C(0);
        uint64_t v198 = sub_100007E5C(v195);
        v202 = &v271;
        v271 = v196;
        v203 = &v270;
        uint64_t v270 = v197;
        v200 = &v269;
        uint64_t v269 = v198;
        unsigned int v199 = 0;
        sub_100007EB8(0, &v271);
        sub_100007EB8(v199, v202);
        uint64_t v268 = v212;
        v201 = v74;
        __chkstk_darwin(v74);
        v22 = v203;
        v23 = &v74[-48];
        v204 = &v74[-48];
        v23[2] = v202;
        v23[3] = v22;
        v23[4] = v24;
        uint64_t v205 = sub_100009334((uint64_t *)&unk_1000A2E60);
        sub_10000963C();
        sub_10008A120();
        if (v21)
        {
          __break(1u);
        }
        else
        {
          _os_log_impl((void *)&_mh_execute_header, v211, (os_log_type_t)v210, "State is undefined, adding pending task", v196, v209);
          uint64_t v193 = 0;
          sub_100007F18(v197);
          sub_100007F18(v198);
          sub_10008A450();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      (*(void (**)(unsigned char *, uint64_t))(v236 + 8))(v247, v235);
      swift_retain();
      v191 = &v273;
      uint64_t v273 = v252;
      v192 = &v272;
      swift_beginAccess();
      sub_100009334((uint64_t *)&unk_1000A2E40);
      sub_10008A1E0();
      swift_endAccess();
      uint64_t result = sub_100005250();
      break;
    case 3:
      v26 = v245;
      uint64_t v27 = sub_10000323C();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v236 + 16))(v26, v27, v235);
      v189 = sub_1000896E0();
      int v188 = sub_10008A3B0();
      v186 = &v282;
      uint64_t v282 = 2;
      unint64_t v184 = sub_10000818C();
      unint64_t v185 = sub_100008208();
      sub_100008284();
      sub_10008A140();
      uint32_t v187 = v283;
      sub_100009334(&qword_1000A2E38);
      uint64_t v190 = sub_10008A6C0();
      if (os_log_type_enabled(v189, (os_log_type_t)v188))
      {
        uint64_t v28 = v234;
        v174 = (uint8_t *)sub_10008A470();
        uint64_t v172 = sub_100009334((uint64_t *)&unk_1000A4320);
        uint64_t v173 = 0;
        uint64_t v175 = sub_100007E5C(0);
        uint64_t v176 = sub_100007E5C(v173);
        v180 = &v279;
        v279 = v174;
        v181 = &v278;
        uint64_t v278 = v175;
        v178 = &v277;
        uint64_t v277 = v176;
        unsigned int v177 = 0;
        sub_100007EB8(0, &v279);
        sub_100007EB8(v177, v180);
        uint64_t v276 = v190;
        v179 = v74;
        __chkstk_darwin(v74);
        v29 = v181;
        v30 = &v74[-48];
        v182 = &v74[-48];
        v30[2] = v180;
        v30[3] = v29;
        v30[4] = v31;
        uint64_t v183 = sub_100009334((uint64_t *)&unk_1000A2E60);
        sub_10000963C();
        sub_10008A120();
        if (v28)
        {
          __break(1u);
        }
        else
        {
          _os_log_impl((void *)&_mh_execute_header, v189, (os_log_type_t)v188, "State is currently checked, adding pending task", v174, v187);
          uint64_t v171 = 0;
          sub_100007F18(v175);
          sub_100007F18(v176);
          sub_10008A450();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      (*(void (**)(unsigned char *, uint64_t))(v236 + 8))(v245, v235);
      swift_retain();
      v169 = &v281;
      uint64_t v281 = v252;
      v170 = &v280;
      swift_beginAccess();
      sub_100009334((uint64_t *)&unk_1000A2E40);
      sub_10008A1E0();
      uint64_t result = swift_endAccess();
      break;
    default:
      v167 = (void (*)(unsigned char *, unsigned char *, uint64_t))v255[2];
      v168 = v255 + 2;
      v167(v265, v251, v253);
      sub_1000895F0();
      if (*(double *)(v216 + 24) >= -1.0 * v32)
      {
        v33 = v243;
        v156 = (void (*)(unsigned char *, uint64_t))v255[1];
        v157 = v255 + 1;
        v156(v265, v253);
        uint64_t v34 = sub_10000323C();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v236 + 16))(v33, v34, v235);
        v163 = sub_1000896E0();
        int v162 = sub_10008A3B0();
        v160 = &v288;
        uint64_t v288 = 2;
        unint64_t v158 = sub_10000818C();
        unint64_t v159 = sub_100008208();
        sub_100008284();
        sub_10008A140();
        uint32_t v161 = v289;
        sub_100009334(&qword_1000A2E38);
        uint64_t v164 = sub_10008A6C0();
        if (os_log_type_enabled(v163, (os_log_type_t)v162))
        {
          uint64_t v35 = v234;
          v146 = (uint8_t *)sub_10008A470();
          uint64_t v144 = sub_100009334((uint64_t *)&unk_1000A4320);
          uint64_t v145 = 0;
          uint64_t v147 = sub_100007E5C(0);
          uint64_t v148 = sub_100007E5C(v145);
          v152 = &v287;
          v287 = v146;
          v153 = &v286;
          uint64_t v286 = v147;
          v150 = &v285;
          uint64_t v285 = v148;
          unsigned int v149 = 0;
          sub_100007EB8(0, &v287);
          sub_100007EB8(v149, v152);
          uint64_t v284 = v164;
          v151 = v74;
          __chkstk_darwin(v74);
          v36 = v153;
          v37 = &v74[-48];
          v154 = &v74[-48];
          v37[2] = v152;
          v37[3] = v36;
          v37[4] = v38;
          uint64_t v155 = sub_100009334((uint64_t *)&unk_1000A2E60);
          sub_10000963C();
          sub_10008A120();
          if (v35)
          {
            __break(1u);
          }
          else
          {
            _os_log_impl((void *)&_mh_execute_header, v163, (os_log_type_t)v162, "Data is available, executing task immediateley", v146, v161);
            uint64_t v143 = 0;
            sub_100007F18(v147);
            sub_100007F18(v148);
            sub_10008A450();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }

        (*(void (**)(unsigned char *, uint64_t))(v236 + 8))(v243, v235);
        sub_1000095A4();
        id v142 = (id)sub_10008A3F0();
        sub_10008A410();

        uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v156)(v251, v253);
      }
      else
      {
        v167(v267, v265, v253);
        v166 = (void (*)(unsigned char *, uint64_t))v255[1];
        v165 = v255 + 1;
        v166(v265, v253);
        v166(v251, v253);
LABEL_26:
        v40 = v241;
        v299 = v267;
        uint64_t v41 = sub_10000323C();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v236 + 16))(v40, v41, v235);
        swift_retain();
        swift_retain();
        uint64_t v126 = 32;
        uint64_t v127 = 7;
        uint64_t v42 = swift_allocObject();
        uint64_t v43 = v216;
        uint64_t v128 = v42;
        *(void *)(v42 + 16) = v228;
        *(void *)(v42 + 24) = v43;
        swift_release();
        v136 = sub_1000896E0();
        int v137 = sub_10008A3B0();
        v123 = &v297;
        uint64_t v297 = 12;
        unint64_t v121 = sub_10000818C();
        unint64_t v122 = sub_100008208();
        sub_100008284();
        sub_10008A140();
        uint32_t v124 = v298;
        uint64_t v125 = 17;
        uint64_t v130 = swift_allocObject();
        *(unsigned char *)(v130 + 16) = 34;
        uint64_t v131 = swift_allocObject();
        *(unsigned char *)(v131 + 16) = 8;
        uint64_t v44 = swift_allocObject();
        uint64_t v45 = v128;
        uint64_t v129 = v44;
        *(void *)(v44 + 16) = v229;
        *(void *)(v44 + 24) = v45;
        uint64_t v46 = swift_allocObject();
        uint64_t v47 = v129;
        uint64_t v133 = v46;
        *(void *)(v46 + 16) = v230;
        *(void *)(v46 + 24) = v47;
        uint64_t v135 = sub_100009334(&qword_1000A2E38);
        uint64_t v132 = sub_10008A6C0();
        v134 = v48;
        swift_retain();
        uint64_t v49 = v130;
        v50 = v134;
        *v134 = v231;
        v50[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
        swift_retain();
        uint64_t v51 = v131;
        v52 = v134;
        v134[2] = v232;
        v52[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v51;
        swift_retain();
        v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v133;
        v54 = v134;
        v134[4] = v233;
        v54[5] = v53;
        sub_100007A04();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v136, (os_log_type_t)v137))
        {
          uint64_t v55 = v234;
          v114 = (uint8_t *)sub_10008A470();
          uint64_t v113 = sub_100009334((uint64_t *)&unk_1000A4320);
          uint64_t v115 = sub_100007E5C(0);
          uint64_t v116 = sub_100007E5C(1);
          v117 = &v294;
          v294 = v114;
          v118 = &v293;
          uint64_t v293 = v115;
          v119 = &v292;
          uint64_t v292 = v116;
          sub_100007EB8(2, &v294);
          sub_100007EB8(1, v117);
          v290 = v231;
          uint64_t v291 = v130;
          sub_100007ECC(&v290, (uint64_t)v117, (uint64_t)v118, (uint64_t)v119);
          uint64_t v120 = v55;
          if (v55)
          {
            __break(1u);
          }
          else
          {
            v290 = v232;
            uint64_t v291 = v131;
            sub_100007ECC(&v290, (uint64_t)&v294, (uint64_t)&v293, (uint64_t)&v292);
            uint64_t v112 = 0;
            v290 = v233;
            uint64_t v291 = v133;
            sub_100007ECC(&v290, (uint64_t)&v294, (uint64_t)&v293, (uint64_t)&v292);
            _os_log_impl((void *)&_mh_execute_header, v136, (os_log_type_t)v137, "State (%{public}s) expired, check state again", v114, v124);
            sub_100007F18(v115);
            sub_100007F18(v116);
            sub_10008A450();
            swift_release();
            swift_release();
            swift_release();
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
        }

        (*(void (**)(unsigned char *, uint64_t))(v236 + 8))(v241, v235);
        swift_retain();
        v110 = &v296;
        uint64_t v296 = v252;
        v111 = &v295;
        swift_beginAccess();
        sub_100009334((uint64_t *)&unk_1000A2E40);
        sub_10008A1E0();
        swift_endAccess();
        sub_100005250();
        uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v255[1])(v267, v253);
      }
      break;
  }
  return result;
}

void *sub_10000511C(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for AvailabilityQueue.State();
  if (swift_getEnumCaseMultiPayload() < 2)
  {
    uint64_t v2 = sub_100089630();
    (*(void (**)(void *, const void *))(*(void *)(v2 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(void *)(*(void *)(v6 - 8) + 64));
  }
  return a2;
}

uint64_t sub_100005250()
{
  uint64_t v17 = 0;
  uint64_t v16 = sub_1000099E0;
  uint64_t v15 = *v0;
  uint64_t v21 = 0;
  uint64_t v1 = type metadata accessor for AvailabilityQueue.State();
  unint64_t v9 = (*(void *)(*(void *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  uint64_t v10 = (char *)&v8 - v9;
  uint64_t v21 = v0;
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = (char *)v0 + OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_state;
  uint64_t v12 = &v20;
  swift_beginAccess();
  sub_100009738(v10, v11);
  swift_endAccess();
  uint64_t v14 = 7;
  uint64_t v19 = swift_allocObject();
  swift_retain();
  uint64_t v13 = v0;
  swift_weakInit();
  swift_release();
  swift_retain();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v15;
  uint64_t v4 = (uint64_t)v16;
  uint64_t v5 = v2;
  uint64_t v6 = v17;
  uint64_t v18 = v5;
  *(void *)(v5 + 16) = v19;
  *(void *)(v5 + 24) = v3;
  sub_100006254(v6, v4, v5);
  swift_release();
  return swift_release();
}

uint64_t sub_100005400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = sub_100089630();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a2, a1);
}

uint64_t sub_100005460()
{
  uint64_t v2 = *(void *)(sub_100089630() - 8);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
  return swift_deallocObject();
}

uint64_t sub_10000552C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100089630();
  uint64_t v3 = v1
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));

  return sub_100005400(v3, a1);
}

uint64_t sub_1000055A4()
{
  return 0;
}

uint64_t sub_1000055BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (const void *)(a1 + OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_state);
  swift_beginAccess();
  sub_10000511C(v3, a2);
  return swift_endAccess();
}

uint64_t sub_100005618(unsigned int a1, uint64_t a2)
{
  unsigned int v118 = a1;
  uint64_t v117 = a2;
  uint64_t v108 = 0;
  uint64_t v101 = sub_10000960C;
  uint64_t v102 = sub_10000AFD4;
  uint64_t v103 = sub_10000B074;
  uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v106 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10000B0C0;
  char v151 = 0;
  uint64_t v150 = 0;
  uint64_t v148 = 0;
  uint64_t v116 = 0;
  uint64_t v107 = 0;
  uint64_t v138 = 0;
  uint64_t v133 = 0;
  uint64_t v134 = 0;
  uint64_t v130 = 0;
  uint64_t v109 = sub_100089700();
  uint64_t v110 = *(void *)(v109 - 8);
  uint64_t v111 = v109 - 8;
  unint64_t v112 = (*(void *)(v110 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = __chkstk_darwin(0);
  uint64_t v113 = (char *)&v28 - v112;
  unint64_t v114 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  uint64_t v115 = (char *)&v28 - v114;
  uint64_t v119 = type metadata accessor for AvailabilityQueue.State();
  unint64_t v120 = (*(void *)(*(void *)(v119 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  char v4 = __chkstk_darwin(v118);
  unint64_t v121 = (char *)&v28 - v120;
  char v151 = v4 & 1;
  uint64_t v122 = v5 + 16;
  uint64_t v150 = v5 + 16;
  v123 = &v149;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_endAccess();
  uint64_t result = Strong;
  if (Strong)
  {
    uint64_t v100 = Strong;
    uint64_t v99 = v100;
    uint64_t v148 = v100;
    if (v118)
    {
      sub_100089620();
      swift_storeEnumTagMultiPayload();
      uint64_t v71 = (void *)(v99 + OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_state);
      uint64_t v72 = &v140;
      uint64_t v76 = 33;
      uint64_t v77 = 0;
      swift_beginAccess();
      sub_100009738(v121, v71);
      swift_endAccess();
      int v75 = &selRef_beginObserving_;
      int v73 = (uint64_t *)(v99 + OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_pendingTasks);
      v74 = &v139;
      uint64_t v87 = 32;
      swift_beginAccess();
      uint64_t v81 = *v73;
      swift_bridgeObjectRetain();
      swift_endAccess();
      uint64_t v138 = v81;
      uint64_t v80 = &v137;
      swift_beginAccess();
      sub_100089E70();
      int v78 = sub_1000055A4();
      uint64_t v79 = sub_100009334((uint64_t *)&unk_1000A2E40);
      sub_10008A1F0(v78 & 1);
      uint64_t v7 = v115;
      swift_endAccess();
      uint64_t v8 = sub_10000323C();
      (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v7, v8, v109);
      swift_bridgeObjectRetain();
      uint64_t v88 = 7;
      uint64_t v89 = swift_allocObject();
      *(void *)(v89 + 16) = v81;
      uint64_t v97 = sub_1000896E0();
      int v98 = sub_10008A3B0();
      v84 = &v135;
      uint64_t v135 = 12;
      unint64_t v82 = sub_10000818C();
      unint64_t v83 = sub_100008208();
      sub_100008284();
      sub_10008A140();
      uint32_t v85 = v136;
      uint64_t v86 = 17;
      uint64_t v91 = swift_allocObject();
      *(unsigned char *)(v91 + 16) = 0;
      uint64_t v92 = swift_allocObject();
      *(unsigned char *)(v92 + 16) = 8;
      uint64_t v9 = swift_allocObject();
      uint64_t v10 = v89;
      uint64_t v90 = v9;
      *(void *)(v9 + 16) = v102;
      *(void *)(v9 + 24) = v10;
      uint64_t v11 = swift_allocObject();
      uint64_t v12 = v90;
      uint64_t v94 = v11;
      *(void *)(v11 + 16) = v103;
      *(void *)(v11 + 24) = v12;
      uint64_t v96 = sub_100009334(&qword_1000A2E38);
      uint64_t v93 = sub_10008A6C0();
      v95 = v13;
      swift_retain();
      uint64_t v14 = v91;
      uint64_t v15 = v95;
      uint64_t *v95 = v104;
      v15[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v14;
      swift_retain();
      uint64_t v16 = v92;
      uint64_t v17 = v95;
      v95[2] = v105;
      v17[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
      swift_retain();
      uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v94;
      uint64_t v19 = v95;
      v95[4] = v106;
      v19[5] = v18;
      sub_100007A04();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v97, (os_log_type_t)v98))
      {
        uint64_t v20 = v107;
        v64 = (uint8_t *)sub_10008A470();
        uint64_t v62 = sub_100009334((uint64_t *)&unk_1000A4320);
        uint64_t v63 = 0;
        uint64_t v65 = sub_100007E5C(0);
        uint64_t v66 = sub_100007E5C(v63);
        uint64_t v67 = &v129;
        uint64_t v129 = v64;
        v68 = &v128;
        uint64_t v128 = v65;
        v69 = &v127;
        uint64_t v127 = v66;
        sub_100007EB8(0, &v129);
        sub_100007EB8(1, v67);
        uint64_t v125 = v104;
        uint64_t v126 = v91;
        sub_100007ECC(&v125, (uint64_t)v67, (uint64_t)v68, (uint64_t)v69);
        uint64_t v70 = v20;
        if (v20)
        {
          __break(1u);
        }
        else
        {
          uint64_t v125 = v105;
          uint64_t v126 = v92;
          sub_100007ECC(&v125, (uint64_t)&v129, (uint64_t)&v128, (uint64_t)&v127);
          uint64_t v60 = 0;
          uint64_t v125 = v106;
          uint64_t v126 = v94;
          sub_100007ECC(&v125, (uint64_t)&v129, (uint64_t)&v128, (uint64_t)&v127);
          uint64_t v59 = 0;
          _os_log_impl((void *)&_mh_execute_header, v97, (os_log_type_t)v98, "Availability check succeeded, executing %ld tasks", v64, v85);
          uint64_t v58 = 0;
          sub_100007F18(v65);
          sub_100007F18(v66);
          sub_10008A450();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v61 = v59;
        }
      }
      else
      {
        uint64_t v21 = v107;
        swift_release();
        swift_release();
        swift_release();
        uint64_t v61 = v21;
      }
      uint64_t v56 = v61;

      (*(void (**)(char *, uint64_t))(v110 + 8))(v115, v109);
      swift_bridgeObjectRetain();
      uint64_t v132 = v81;
      sub_10000B1B0();
      sub_10008A350();
      for (uint64_t i = v56; ; uint64_t i = v54)
      {
        uint64_t v54 = i;
        sub_100009334(&qword_1000A3248);
        sub_10008A580();
        uint64_t v55 = v131;
        if (!v131) {
          break;
        }
        uint64_t v53 = v55;
        uint64_t v52 = v55;
        uint64_t v130 = v55;
        sub_1000095A4();
        id v51 = (id)sub_10008A3F0();
        sub_10008A410();

        swift_release();
      }
      sub_10000ADA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = v113;
      uint64_t v23 = sub_10000323C();
      (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v22, v23, v109);
      uint64_t v49 = sub_1000896E0();
      int v48 = sub_10008A3B0();
      uint64_t v46 = &v146;
      uint64_t v146 = 2;
      unint64_t v44 = sub_10000818C();
      unint64_t v45 = sub_100008208();
      sub_100008284();
      sub_10008A140();
      uint32_t v47 = v147;
      sub_100009334(&qword_1000A2E38);
      uint64_t v50 = sub_10008A6C0();
      if (os_log_type_enabled(v49, (os_log_type_t)v48))
      {
        uint64_t v24 = v107;
        uint64_t v34 = (uint8_t *)sub_10008A470();
        uint64_t v32 = sub_100009334((uint64_t *)&unk_1000A4320);
        uint64_t v33 = 0;
        uint64_t v35 = sub_100007E5C(0);
        uint64_t v36 = sub_100007E5C(v33);
        v40 = &v144;
        uint64_t v144 = v34;
        uint64_t v41 = &v143;
        uint64_t v143 = v35;
        uint64_t v38 = &v142;
        uint64_t v142 = v36;
        unsigned int v37 = 0;
        sub_100007EB8(0, &v144);
        sub_100007EB8(v37, v40);
        uint64_t v141 = v50;
        double v39 = &v28;
        __chkstk_darwin(&v28);
        v25 = v41;
        v26 = &v28 - 6;
        uint64_t v42 = &v28 - 6;
        v26[2] = (uint64_t)v40;
        v26[3] = (uint64_t)v25;
        v26[4] = v27;
        uint64_t v43 = sub_100009334((uint64_t *)&unk_1000A2E60);
        sub_10000963C();
        sub_10008A120();
        if (v24)
        {
          __break(1u);
        }
        else
        {
          _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v48, "Availability check failed", v34, v47);
          uint64_t v31 = 0;
          sub_100007F18(v35);
          sub_100007F18(v36);
          sub_10008A450();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      (*(void (**)(char *, uint64_t))(v110 + 8))(v113, v109);
      sub_100089620();
      swift_storeEnumTagMultiPayload();
      v29 = (void *)(v99 + OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_state);
      v30 = &v145;
      swift_beginAccess();
      sub_100009738(v121, v29);
      swift_endAccess();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100006220()
{
  return sub_10008A1C0();
}

uint64_t sub_100006254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  uint64_t v5 = (void (**)(uint64_t (*)(char)))((char *)v3
                                                          + OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_availabilityHandler);
  swift_beginAccess();
  uint64_t v10 = *v5;
  swift_retain();
  swift_endAccess();
  uint64_t v12 = swift_allocObject();
  swift_retain();
  swift_weakInit();
  swift_release();
  swift_retain();
  swift_retain();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v12;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a1;
  v11[6] = v9;
  v10(sub_100009A38);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10000640C(unsigned int a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  unsigned int v142 = a1;
  uint64_t v141 = a2;
  uint64_t v138 = a3;
  uint64_t v139 = a4;
  uint64_t v140 = a5;
  uint64_t v113 = "Assertion failed";
  unint64_t v114 = "MailWidgetExtension/AvailabilityQueue.swift";
  uint64_t v130 = 0;
  uint64_t v115 = sub_10000960C;
  uint64_t v116 = sub_10000960C;
  uint64_t v117 = sub_10000AE14;
  unsigned int v118 = sub_10000960C;
  char v183 = 0;
  uint64_t v182 = 0;
  uint64_t v180 = 0;
  uint64_t v181 = 0;
  uint64_t v179 = 0;
  uint64_t v177 = 0;
  uint64_t v119 = 0;
  uint64_t v120 = sub_100089E00();
  uint64_t v121 = *(void *)(v120 - 8);
  uint64_t v122 = v120 - 8;
  unint64_t v123 = (*(void *)(v121 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint32_t v124 = (char *)v44 - v123;
  uint64_t v125 = sub_100089E20();
  uint64_t v126 = *(void *)(v125 - 8);
  uint64_t v127 = v125 - 8;
  unint64_t v128 = (*(void *)(v126 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v130);
  uint64_t v129 = (char *)v44 - v128;
  uint64_t v131 = sub_100089E40();
  uint64_t v132 = *(void *)(v131 - 8);
  uint64_t v133 = v131 - 8;
  unint64_t v134 = (*(void *)(v132 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = __chkstk_darwin(v130);
  uint64_t v135 = (char *)v44 - v134;
  unint64_t v136 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  char v137 = (char *)v44 - v136;
  uint64_t v143 = sub_100089700();
  uint64_t v144 = *(void *)(v143 - 8);
  uint64_t v145 = v143 - 8;
  unint64_t v146 = (*(void *)(v144 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = __chkstk_darwin(v142);
  uint32_t v147 = (char *)v44 - v146;
  unint64_t v148 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = __chkstk_darwin(v7);
  char v149 = (char *)v44 - v148;
  unint64_t v150 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  char v11 = __chkstk_darwin(v9);
  char v151 = (char *)v44 - v150;
  char v183 = v11 & 1;
  uint64_t v182 = v12 + 16;
  uint64_t v180 = v13;
  uint64_t v181 = v14;
  uint64_t v179 = v15;
  if (([self isMainThread] & 1) == 0)
  {
    sub_10008A0B0("availabilityHandler has to complete on the main thread", 0x36uLL, 1);
    uint64_t v42 = 101;
    int v43 = 0;
    sub_10008A5B0();
    __break(1u);
  }
  uint64_t v110 = v141 + 16;
  uint64_t v111 = &v178;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_endAccess();
  uint64_t result = Strong;
  if (Strong)
  {
    uint64_t v109 = Strong;
    uint64_t v108 = v109;
    uint64_t v177 = v109;
    if (v142)
    {
      uint64_t v17 = v151;
      uint64_t v18 = sub_10000323C();
      (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v17, v18, v143);
      v106 = sub_1000896E0();
      int v105 = sub_10008A380();
      uint64_t v103 = &v156;
      uint64_t v156 = 2;
      unint64_t v101 = sub_10000818C();
      unint64_t v102 = sub_100008208();
      sub_100008284();
      sub_10008A140();
      uint32_t v104 = v157;
      sub_100009334(&qword_1000A2E38);
      uint64_t v107 = sub_10008A6C0();
      if (os_log_type_enabled(v106, (os_log_type_t)v105))
      {
        uint64_t v19 = v119;
        uint64_t v91 = (uint8_t *)sub_10008A470();
        uint64_t v89 = sub_100009334((uint64_t *)&unk_1000A4320);
        uint64_t v90 = 0;
        uint64_t v92 = sub_100007E5C(0);
        uint64_t v93 = sub_100007E5C(v90);
        uint64_t v97 = &v155;
        uint64_t v155 = v91;
        int v98 = &v154;
        uint64_t v154 = v92;
        v95 = &v153;
        uint64_t v153 = v93;
        unsigned int v94 = 0;
        sub_100007EB8(0, &v155);
        sub_100007EB8(v94, v97);
        uint64_t v152 = v107;
        uint64_t v96 = v44;
        __chkstk_darwin(v44);
        uint64_t v20 = v98;
        uint64_t v21 = &v44[-6];
        uint64_t v99 = &v44[-6];
        v21[2] = v97;
        v21[3] = v20;
        v21[4] = v22;
        uint64_t v100 = sub_100009334((uint64_t *)&unk_1000A2E60);
        sub_10000963C();
        sub_10008A120();
        if (v19)
        {
          __break(1u);
        }
        else
        {
          _os_log_impl((void *)&_mh_execute_header, v106, (os_log_type_t)v105, "Data is accessible", v91, v104);
          uint64_t v88 = 0;
          sub_100007F18(v92);
          sub_100007F18(v93);
          sub_10008A450();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      (*(void (**)(char *, uint64_t))(v144 + 8))(v151, v143);
      swift_retain();
      v138(1);
      swift_release();
      return swift_release();
    }
    uint64_t v23 = *(void *)(v108 + 16);
    uint64_t v87 = v23 - 1;
    if (!__OFSUB__(v23, 1))
    {
      if (v140 >= v87)
      {
        uint64_t v36 = v147;
        uint64_t v37 = sub_10000323C();
        (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v36, v37, v143);
        uint64_t v61 = sub_1000896E0();
        int v60 = sub_10008A3A0();
        uint64_t v58 = &v175;
        uint64_t v175 = 2;
        unint64_t v56 = sub_10000818C();
        unint64_t v57 = sub_100008208();
        sub_100008284();
        sub_10008A140();
        uint32_t v59 = v176;
        sub_100009334(&qword_1000A2E38);
        uint64_t v62 = sub_10008A6C0();
        if (os_log_type_enabled(v61, (os_log_type_t)v60))
        {
          uint64_t v38 = v119;
          uint64_t v46 = (uint8_t *)sub_10008A470();
          v44[2] = sub_100009334((uint64_t *)&unk_1000A4320);
          uint64_t v45 = 0;
          uint64_t v47 = sub_100007E5C(0);
          uint64_t v48 = sub_100007E5C(v45);
          uint64_t v52 = &v174;
          v174 = v46;
          uint64_t v53 = &v173;
          uint64_t v173 = v47;
          uint64_t v50 = &v172;
          uint64_t v172 = v48;
          unsigned int v49 = 0;
          sub_100007EB8(0, &v174);
          sub_100007EB8(v49, v52);
          uint64_t v171 = v62;
          id v51 = v44;
          __chkstk_darwin(v44);
          double v39 = v53;
          v40 = &v44[-6];
          uint64_t v54 = &v44[-6];
          v40[2] = v52;
          v40[3] = v39;
          v40[4] = v41;
          uint64_t v55 = sub_100009334((uint64_t *)&unk_1000A2E60);
          sub_10000963C();
          sub_10008A120();
          if (v38)
          {
            __break(1u);
          }
          else
          {
            _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v60, "Data is not accessible, retry count exceeded", v46, v59);
            v44[1] = 0;
            sub_100007F18(v47);
            sub_100007F18(v48);
            sub_10008A450();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }

        (*(void (**)(char *, uint64_t))(v144 + 8))(v147, v143);
        swift_retain();
        v138(0);
        swift_release();
      }
      else
      {
        v25 = v149;
        uint64_t v26 = sub_10000323C();
        (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v25, v26, v143);
        uint32_t v85 = sub_1000896E0();
        int v84 = sub_10008A3A0();
        unint64_t v82 = &v169;
        uint64_t v169 = 2;
        unint64_t v80 = sub_10000818C();
        unint64_t v81 = sub_100008208();
        sub_100008284();
        sub_10008A140();
        uint32_t v83 = v170;
        sub_100009334(&qword_1000A2E38);
        uint64_t v86 = sub_10008A6C0();
        if (os_log_type_enabled(v85, (os_log_type_t)v84))
        {
          uint64_t v27 = v119;
          uint64_t v70 = (uint8_t *)sub_10008A470();
          uint64_t v68 = sub_100009334((uint64_t *)&unk_1000A4320);
          uint64_t v69 = 0;
          uint64_t v71 = sub_100007E5C(0);
          uint64_t v72 = sub_100007E5C(v69);
          uint64_t v76 = &v161;
          uint32_t v161 = v70;
          uint64_t v77 = &v160;
          uint64_t v160 = v71;
          v74 = &v159;
          uint64_t v159 = v72;
          unsigned int v73 = 0;
          sub_100007EB8(0, &v161);
          sub_100007EB8(v73, v76);
          uint64_t v158 = v86;
          int v75 = v44;
          __chkstk_darwin(v44);
          uint64_t v28 = v77;
          v29 = &v44[-6];
          int v78 = &v44[-6];
          v29[2] = v76;
          v29[3] = v28;
          v29[4] = v30;
          uint64_t v79 = sub_100009334((uint64_t *)&unk_1000A2E60);
          sub_10000963C();
          sub_10008A120();
          if (v27)
          {
            __break(1u);
          }
          else
          {
            _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v84, "Data is not accessible, retry…", v70, v83);
            uint64_t v67 = 0;
            sub_100007F18(v71);
            sub_100007F18(v72);
            sub_10008A450();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }

        (*(void (**)(char *, uint64_t))(v144 + 8))(v149, v143);
        sub_1000095A4();
        id v66 = (id)sub_10008A3F0();
        sub_100089E30();
        sub_100089E90();
        uint64_t v65 = *(void (**)(char *, uint64_t))(v132 + 8);
        uint64_t v64 = v132 + 8;
        v65(v135, v131);
        swift_retain();
        swift_retain();
        uint64_t v31 = (void *)swift_allocObject();
        uint64_t v32 = v140;
        uint64_t v33 = v138;
        uint64_t v34 = v139;
        uint64_t v35 = v117;
        v31[2] = v108;
        v31[3] = v32;
        v31[4] = v33;
        v31[5] = v34;
        v167 = v35;
        v168 = v31;
        aBlock = _NSConcreteStackBlock;
        int v163 = 1107296256;
        int v164 = 0;
        v165 = sub_10000B378;
        v166 = &unk_100099BF0;
        uint64_t v63 = _Block_copy(&aBlock);
        swift_release();
        sub_10000739C();
        sub_1000073B4();
        sub_10008A3D0();
        (*(void (**)(char *, uint64_t))(v121 + 8))(v124, v120);
        (*(void (**)(char *, uint64_t))(v126 + 8))(v129, v125);
        _Block_release(v63);
        v65(v137, v131);
      }
      return swift_release();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100007320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!__OFADD__(a2, 1)) {
    return sub_100006254(a2 + 1, a3, a4);
  }
  __break(1u);
  return result;
}

uint64_t sub_10000739C()
{
  return sub_100089E10();
}

uint64_t sub_1000073B4()
{
  return sub_10008A4E0();
}

uint64_t sub_10000744C()
{
  sub_100009888(v0 + OBJC_IVAR____TtC19MailWidgetExtension17AvailabilityQueue_state);
  sub_10000ADA0();
  swift_release();
  return v2;
}

uint64_t sub_1000074AC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_100007514()
{
  uint64_t v46 = 0;
  uint64_t v45 = 0;
  uint64_t v47 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = sub_100089630();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = v31 - 8;
  unint64_t v34 = (*(void *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v35 = (char *)&object - v34;
  uint64_t v47 = (char *)&object - v34;
  uint64_t v38 = type metadata accessor for AvailabilityQueue.State();
  unint64_t v37 = (*(void *)(*(void *)(v38 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v0 = (const void *)__chkstk_darwin(v36);
  double v39 = (char *)&object - v37;
  uint64_t v46 = v0;
  sub_10000511C(v0, (char *)&object - v37);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v45 = v35;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v35, v39, v31);
      uint64_t v45 = v35;
      Builtin::Word v11 = 1;
      uint64_t v6 = sub_10008A6B0();
      uint64_t v14 = &v43;
      uint64_t v43 = v6;
      uint64_t v44 = v7;
      int v12 = 1;
      v50._countAndFlagsBits = sub_10008A0B0("Protected (", 0xBuLL, 1);
      object = v50._object;
      sub_10008A6A0(v50);
      swift_bridgeObjectRelease();
      sub_100008108();
      sub_10008A680();
      v51._countAndFlagsBits = sub_10008A0B0(")", v11, v12 & 1);
      uint64_t v13 = v51._object;
      sub_10008A6A0(v51);
      swift_bridgeObjectRelease();
      uint64_t v16 = v43;
      uint64_t v15 = v44;
      swift_bridgeObjectRetain();
      sub_100009A54();
      uint64_t v17 = sub_10008A0A0();
      uint64_t v18 = v8;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
      uint64_t v28 = v17;
      uint64_t v29 = v18;
      break;
    case 2:
      uint64_t v28 = sub_10008A0B0("Undefined", 9uLL, 1);
      uint64_t v29 = v1;
      break;
    case 3:
      uint64_t v28 = sub_10008A0B0("Checking", 8uLL, 1);
      uint64_t v29 = v2;
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v35, v39, v31);
      uint64_t v47 = v35;
      Builtin::Word v20 = 1;
      uint64_t v3 = sub_10008A6B0();
      uint64_t v23 = &v41;
      uint64_t v41 = v3;
      uint64_t v42 = v4;
      int v21 = 1;
      v48._countAndFlagsBits = sub_10008A0B0("Accessible (", 0xCuLL, 1);
      uint64_t v19 = v48._object;
      sub_10008A6A0(v48);
      swift_bridgeObjectRelease();
      sub_100008108();
      sub_10008A680();
      v49._countAndFlagsBits = sub_10008A0B0(")", v20, v21 & 1);
      uint64_t v22 = v49._object;
      sub_10008A6A0(v49);
      swift_bridgeObjectRelease();
      uint64_t v25 = v41;
      uint64_t v24 = v42;
      swift_bridgeObjectRetain();
      sub_100009A54();
      uint64_t v26 = sub_10008A0A0();
      uint64_t v27 = v5;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
      uint64_t v28 = v26;
      uint64_t v29 = v27;
      break;
  }
  return v28;
}

uint64_t sub_1000079C8()
{
  return sub_100007514();
}

uint64_t sub_1000079E0(uint64_t a1)
{
  return sub_10007F7C0(a1, (uint64_t)&off_100099BB8);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100007A04()
{
}

uint64_t variable initialization expression of MFGetAccountsIntentResponse.code()
{
  return 0;
}

uint64_t sub_100007A50()
{
  return sub_10008A640();
}

uint64_t sub_100007A8C()
{
  return sub_10008A610();
}

uint64_t sub_100007AD8()
{
  return sub_10008A620() & 1;
}

uint64_t sub_100007B28()
{
  return sub_10008A630();
}

uint64_t sub_100007B74()
{
  return sub_10008A6E0() & 1;
}

void sub_100007BC0(uint64_t a1@<X8>)
{
  sub_100007BFC();
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = v2 & 1;
}

void sub_100007C20(void *a1@<X8>)
{
  MFGetAccountsIntentResponseCode.rawValue.getter();
  *a1 = v1;
}

uint64_t sub_100007C6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = nullsub_1(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_100007CB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_100007CE0()
{
  return sub_10008A5F0();
}

uint64_t sub_100007D40()
{
  return sub_10008A5D0();
}

uint64_t sub_100007D80()
{
  return sub_10008A600();
}

uint64_t sub_100007DC8()
{
  return sub_10008A5E0();
}

uint64_t sub_100007E10()
{
  return sub_10008A6E0() & 1;
}

uint64_t sub_100007E5C(uint64_t a1)
{
  if (a1) {
    return sub_10008A470();
  }
  else {
    return 0;
  }
}

uint64_t sub_100007EB8(uint64_t result, unsigned char **a2)
{
  char v2 = *a2;
  *char v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_100007ECC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_100007F18(uint64_t a1)
{
  if (a1)
  {
    sub_10008A460();
    sub_10008A450();
  }
}

uint64_t sub_100007F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = a3;
  v7[1] = a4;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = a3 - 8;
  v7[0] = (*(void *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = (void (*)(void))__chkstk_darwin(a1);
  uint64_t v10 = (char *)v7 - v7[0];
  v4();
  uint64_t v12 = sub_10008A650();
  uint64_t v13 = v5;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v11);
  return v12;
}

uint64_t sub_10000806C()
{
  return swift_deallocObject();
}

uint64_t sub_1000080AC()
{
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = sub_100089630();
  unint64_t v1 = sub_100008108();

  return sub_100007F88(v5, v3, v4, v1);
}

unint64_t sub_100008108()
{
  uint64_t v2 = qword_1000A2E18;
  if (!qword_1000A2E18)
  {
    sub_100089630();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A2E18);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10000818C()
{
  uint64_t v2 = qword_1000A2E20;
  if (!qword_1000A2E20)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A2E20);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100008208()
{
  uint64_t v2 = qword_1000A2E28;
  if (!qword_1000A2E28)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A2E28);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100008284()
{
  uint64_t v2 = qword_1000A2E30;
  if (!qword_1000A2E30)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A2E30);
    return WitnessTable;
  }
  return v2;
}

void sub_100008300()
{
  *uint64_t v0 = *v0;
}

uint64_t sub_10000830C(uint64_t (*a1)(void))
{
  return a1();
}

void *sub_100008334(void *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v4 = a4();
  sub_1000083B8(v4, v5, a3);
  uint64_t v8 = *a1;
  sub_10008A490();
  swift_bridgeObjectRelease();
  uint64_t result = a1;
  *a1 = v8 + 8;
  return result;
}

uint64_t sub_1000083B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v14 = sub_10000852C((uint64_t)&v17, 0, 0, 1, a1, a2);
  uint64_t v15 = v3;
  __int16 v16 = v4;
  uint64_t v11 = v17;
  if (v14)
  {
    v12[3] = swift_getObjectType();
    v12[0] = v14;
    uint64_t v6 = *a3;
    if (*a3)
    {
      sub_10000B2E0((uint64_t)v12, v6);
      *a3 = v6 + 32;
    }
    sub_10000B234((uint64_t)v12);
  }
  else
  {
    v13[3] = &type metadata for _StringGuts;
    v13[0] = a1;
    v13[1] = a2;
    uint64_t v7 = *a3;
    if (*a3)
    {
      sub_10000B2E0((uint64_t)v13, v7);
      *a3 = v7 + 32;
    }
    swift_bridgeObjectRetain();
    sub_10000B234((uint64_t)v13);
  }
  return v11;
}

uint64_t sub_10000852C(uint64_t result, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = (void *)result;
  uint64_t v24 = a6;
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (a2)
      {
        if (!a3) {
          __break(1u);
        }
        int64_t v16 = a3 - (void)a2;
      }
      else
      {
        int64_t v16 = 0;
      }
      int64_t v15 = (a6 & 0xF00000000000000uLL) >> 56;
      if (v15 < v16)
      {
        if (a2)
        {
          v21[0] = a5;
          v21[1] = a6 & (-(uint64_t)bswap64(0xFFuLL) - 1);
          sub_1000088A4(v21, v15, a2);
          sub_10008A4A0();
          *uint64_t v17 = a2;
          uint64_t v11 = 0;
          uint64_t v12 = v15;
          char v13 = 1;
          char v14 = 0;
LABEL_26:
          v21[2] = v11;
          v21[3] = v12;
          char v22 = v13 & 1;
          char v23 = v14 & 1;
          return (uint64_t)v11;
        }
        goto LABEL_28;
      }
    }
LABEL_13:
    uint64_t v6 = sub_1000088E4(a5, a6);
    *uint64_t v17 = v7;
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    char v13 = 0;
    char v14 = 1;
    goto LABEL_26;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v10 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
      goto LABEL_21;
    }
    __break(1u);
  }
  uint64_t result = sub_10008A520();
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v10 = result;
LABEL_21:
  *uint64_t v17 = v10;
  if (a6 < 0)
  {
    uint64_t v9 = 0;
LABEL_25:
    uint64_t v11 = (void *)v9;
    uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL;
    char v13 = 0;
    char v14 = 0;
    goto LABEL_26;
  }
  if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0)
  {
    swift_unknownObjectRetain();
    uint64_t v9 = a6 & 0xFFFFFFFFFFFFFFFLL;
    goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1000088A4(const void *a1, size_t a2, void *__dst)
{
  return __dst;
}

void *sub_1000088E4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_100008998(a1, a2);
  sub_100008B14();
  uint64_t v4 = v6[2];
  sub_100008B8C(v4);
  sub_100008C10(v4, 0);
  sub_100008300();
  swift_retain();
  uint64_t v5 = sub_100008C80((uint64_t)v6);
  swift_bridgeObjectRelease();
  uint64_t result = (void *)v5;
  if (!__OFSUB__(v5, 1)) {
    return v6;
  }
  __break(1u);
  return result;
}

void *sub_100008998(uint64_t a1, uint64_t a2)
{
  v8[2] = a2;
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = sub_10008A0E0();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v7 = (a2 & 0xF00000000000000uLL) >> 56;
  }
  else
  {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7) {
    return sub_100008E04();
  }
  uint64_t v5 = sub_100008C98(v7, 0);
  swift_retain();
  swift_release();
  uint64_t result = (void *)sub_10008A510();
  uint64_t v6 = result;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = v8;
    v8[0] = 0;
    v8[1] = 0xE000000000000000;
    sub_100009A54();
    if (v6 == (void *)v7) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100008B14()
{
  uint64_t v4 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v4;
  if ((result & 1) == 0)
  {
    uint64_t v2 = sub_100008C80(*v3);
    uint64_t result = sub_100008E34(0, v2 + 1, 1, *v3);
    *char v3 = result;
  }
  return result;
}

uint64_t sub_100008B8C(uint64_t result)
{
  if (*(void *)(*(void *)v1 + 24) >> 1 < result + 1)
  {
    uint64_t result = sub_100008E34(*(void *)(*(void *)v1 + 24) >> 1 != 0, result + 1, 1, *v2);
    *uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_100008C10(uint64_t a1, char a2)
{
  uint64_t v5 = a1 + 1;
  uint64_t v4 = *v2;
  swift_bridgeObjectRetain();
  *(void *)(v4 + 16) = v5;
  swift_release();
  uint64_t v6 = *v2;
  swift_retain();
  *(unsigned char *)(v6 + 32 + a1) = a2;
  return swift_release();
}

uint64_t sub_100008C80(uint64_t a1)
{
  return sub_100009134(a1);
}

void *sub_100008C98(uint64_t a1, uint64_t a2)
{
  if (a2 < a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = a2;
  }
  if (v6)
  {
    sub_100009334((uint64_t *)&unk_1000A3250);
    uint64_t v5 = (void *)swift_allocObject();
    if (sub_10000B344())
    {
      size_t v3 = (size_t)v5 + sub_10000B350(v5);
      swift_retain();
      v5[2] = a1;
      v5[3] = 2 * (v3 - (void)(v5 + 4));
    }
    else
    {
      swift_retain();
      v5[2] = a1;
      v5[3] = 2 * v6;
    }
    swift_release();
    return v5;
  }
  else
  {
    swift_retain();
    return &_swiftEmptyArrayStorage;
  }
}

void *sub_100008E04()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_100008E34(char a1, uint64_t a2, char a3, uint64_t a4)
{
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v15 = *(void *)(a4 + 24) >> 1;
  if (a3)
  {
    if (v15 < a2)
    {
      if ((unsigned __int128)(v15 * (__int128)2) >> 64 != (2 * v15) >> 63)
      {
        __break(1u);
        return result;
      }
      if (2 * v15 < a2) {
        uint64_t v10 = a2;
      }
      else {
        uint64_t v10 = 2 * v15;
      }
    }
    else
    {
      uint64_t v10 = *(void *)(a4 + 24) >> 1;
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  int64_t v9 = *(void *)(a4 + 16);
  if (v10 < v9) {
    uint64_t v8 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v8 = v10;
  }
  if (v8)
  {
    sub_100009334((uint64_t *)&unk_1000A3250);
    uint64_t v7 = (void *)swift_allocObject();
    if (sub_10000B344())
    {
      size_t v5 = (size_t)v7 + sub_10000B350(v7);
      swift_retain();
      void v7[2] = v9;
      v7[3] = 2 * (v5 - (void)(v7 + 4));
    }
    else
    {
      swift_retain();
      void v7[2] = v9;
      v7[3] = 2 * v8;
    }
    swift_release();
    uint64_t v6 = (char *)v7;
  }
  else
  {
    swift_retain();
    uint64_t v6 = (char *)&_swiftEmptyArrayStorage;
  }
  if (a1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_100009174((char *)(a4 + 32), v9, v6 + 32);
    *(void *)(a4 + 16) = 0;
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_retain();
    swift_release();
    sub_10000913C((const void *)(a4 + 32), v9, v6 + 32);
    swift_unknownObjectRelease();
  }
  return (uint64_t)v6;
}

uint64_t sub_100009134(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void *sub_10000913C(const void *a1, size_t a2, void *__dst)
{
  return memcpy(__dst, a1, a2);
}

char *sub_100009174(char *result, size_t a2, char *a3)
{
  if (a3 < result || a3 >= &result[a2] || a3 != result) {
    return (char *)memmove(a3, result, a2);
  }
  return result;
}

unsigned char **sub_100009228(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_10000923C()
{
  return swift_deallocObject();
}

unsigned char **sub_100009268(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_100009228(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_100009270()
{
  return swift_deallocObject();
}

uint64_t sub_10000929C()
{
  return swift_deallocObject();
}

uint64_t sub_1000092DC()
{
  return sub_10000830C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000092E8()
{
  return swift_deallocObject();
}

void *sub_100009328(void *a1, uint64_t a2, uint64_t *a3)
{
  return sub_100008334(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_100009334(uint64_t *a1)
{
  uint64_t v4 = *a1;
  if (*a1 < 0)
  {
    uint64_t TypeByMangledNameInContext2 = swift_getTypeByMangledNameInContext2();
    *a1 = TypeByMangledNameInContext2;
    return TypeByMangledNameInContext2;
  }
  return v4;
}

uint64_t sub_1000093A4@<X0>(void *a1@<X8>)
{
  return sub_1000055BC(v1, a1);
}

uint64_t sub_1000093AC()
{
  return swift_deallocObject();
}

uint64_t sub_1000093EC()
{
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = type metadata accessor for AvailabilityQueue.State();
  unint64_t v1 = sub_100009448();

  return sub_100007F88(v5, v3, v4, v1);
}

unint64_t sub_100009448()
{
  uint64_t v2 = qword_1000A2E50;
  if (!qword_1000A2E50)
  {
    type metadata accessor for AvailabilityQueue.State();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A2E50);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000094CC()
{
  return swift_deallocObject();
}

uint64_t sub_1000094F8()
{
  return swift_deallocObject();
}

uint64_t sub_100009524()
{
  return swift_deallocObject();
}

uint64_t sub_100009564()
{
  return swift_deallocObject();
}

unint64_t sub_1000095A4()
{
  uint64_t v2 = qword_1000A44D0;
  if (!qword_1000A44D0)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A44D0);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_10000960C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t))
{
  return sub_100007ECC(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_10000963C()
{
  uint64_t v2 = qword_1000A4330;
  if (!qword_1000A4330)
  {
    sub_1000096C0((uint64_t *)&unk_1000A2E60);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4330);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000096C0(uint64_t *a1)
{
  uint64_t v4 = *a1;
  if (*a1 < 0)
  {
    uint64_t TypeByMangledNameInContextInMetadataState2 = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = TypeByMangledNameInContextInMetadataState2;
    return TypeByMangledNameInContextInMetadataState2;
  }
  return v4;
}

void *sub_100009738(const void *a1, void *a2)
{
  if (a2 != a1)
  {
    sub_100009888((uint64_t)a2);
    uint64_t v4 = type metadata accessor for AvailabilityQueue.State();
    if (swift_getEnumCaseMultiPayload() < 2)
    {
      uint64_t v2 = sub_100089630();
      (*(void (**)(void *, const void *))(*(void *)(v2 - 8) + 32))(a2, a1);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a2, a1, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a2;
}

uint64_t sub_100009888(uint64_t a1)
{
  type metadata accessor for AvailabilityQueue.State();
  if (swift_getEnumCaseMultiPayload() < 2)
  {
    uint64_t v1 = sub_100089630();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  return a1;
}

uint64_t sub_100009960()
{
  return swift_deallocObject();
}

uint64_t sub_1000099A0()
{
  return swift_deallocObject();
}

uint64_t sub_1000099E0(char a1)
{
  return sub_100005618(a1 & 1, *(void *)(v1 + 16));
}

uint64_t sub_1000099F0()
{
  return swift_deallocObject();
}

uint64_t sub_100009A38(char a1)
{
  return sub_10000640C(a1 & 1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100009A54()
{
}

uint64_t sub_100009A80()
{
  return type metadata accessor for AvailabilityQueue();
}

uint64_t sub_100009A9C()
{
  uint64_t updated = type metadata accessor for AvailabilityQueue.State();
  if (v0 <= 0x3F)
  {
    uint64_t updated = swift_updateClassMetadata2();
    if (!updated) {
      return 0;
    }
  }
  return updated;
}

unint64_t sub_100009BBC(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(a3 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  if ((v10 & 0x20000) != 0)
  {
    uint64_t v5 = *a2;
    swift_retain();
    *a1 = v5;
    return *a1 + ((v10 + 16) & ~(unint64_t)v10);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() < 2)
    {
      uint64_t v3 = sub_100089630();
      (*(void (**)(void *, uint64_t *))(*(void *)(v3 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v9 + 64));
    }
    return (unint64_t)a1;
  }
}

uint64_t sub_100009D74(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result < 2)
  {
    uint64_t v2 = sub_100089630();
    return (*(uint64_t (**)(uint64_t))(*(void *)(v2 - 8) + 8))(a1);
  }
  return result;
}

void *sub_100009E38(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() < 2)
  {
    uint64_t v3 = sub_100089630();
    (*(void (**)(void *, const void *))(*(void *)(v3 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100009F64(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100009888((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() < 2)
    {
      uint64_t v3 = sub_100089630();
      (*(void (**)(void *, const void *))(*(void *)(v3 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_10000A0AC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() < 2)
  {
    uint64_t v3 = sub_100089630();
    (*(void (**)(void *, const void *))(*(void *)(v3 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10000A1D8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100009888((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() < 2)
    {
      uint64_t v3 = sub_100089630();
      (*(void (**)(void *, const void *))(*(void *)(v3 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10000A320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_10000A35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_10000A398()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10000A3B0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10000A3DC()
{
  uint64_t v2 = sub_100089630();
  if (v0 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return v2;
}

uint64_t type metadata accessor for MUIBucket()
{
  uint64_t v4 = qword_1000A31D0;
  if (!qword_1000A31D0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1000A31D0);
      return v1;
    }
  }
  return v4;
}

__n128 sub_10000A558(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10000A568(uint64_t a1, int a2)
{
  if (a2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      int v3 = *(_OWORD *)a1;
    }
    else {
      int v3 = -1;
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_10000A694(uint64_t result, int a2, int a3)
{
  BOOL v3 = a3 != 0;
  if (a2)
  {
    *(_OWORD *)__n128 result = (a2 - 1);
    if (a3)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else if (a3)
  {
    if (v3) {
      *(unsigned char *)(result + 16) = 0;
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata accessor for CGSize()
{
  uint64_t v4 = qword_1000A31D8;
  if (!qword_1000A31D8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1000A31D8);
      return v1;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ECMailboxType()
{
  uint64_t v4 = qword_1000A31E0;
  if (!qword_1000A31E0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    uint64_t v4 = ForeignTypeMetadata;
    if (!v0)
    {
      unint64_t v1 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1000A31E0);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_10000A9C4()
{
  return sub_10000A9DC();
}

unint64_t sub_10000A9DC()
{
  uint64_t v2 = qword_1000A31E8;
  if (!qword_1000A31E8)
  {
    type metadata accessor for ECMailboxType();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A31E8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10000AA60()
{
  return sub_10000AA78();
}

unint64_t sub_10000AA78()
{
  uint64_t v2 = qword_1000A31F0;
  if (!qword_1000A31F0)
  {
    type metadata accessor for ECMailboxType();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A31F0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10000AAFC()
{
  return sub_10000AB14();
}

unint64_t sub_10000AB14()
{
  uint64_t v2 = qword_1000A31F8;
  if (!qword_1000A31F8)
  {
    type metadata accessor for ECMailboxType();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A31F8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10000AB98()
{
  uint64_t v2 = qword_1000A3200;
  if (!qword_1000A3200)
  {
    type metadata accessor for MUIBucket();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3200);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10000AC1C()
{
  uint64_t v2 = qword_1000A3208;
  if (!qword_1000A3208)
  {
    type metadata accessor for ECMailboxType();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3208);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10000ACA0()
{
  uint64_t v2 = qword_1000A3210;
  if (!qword_1000A3210)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3210);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10000AD1C()
{
  uint64_t v2 = qword_1000A3218;
  if (!qword_1000A3218)
  {
    type metadata accessor for ECMailboxType();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3218);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10000ADA0()
{
}

uint64_t sub_10000ADCC()
{
  return swift_deallocObject();
}

uint64_t sub_10000AE14()
{
  return sub_100007320(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10000AE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10000AE70()
{
  return swift_release();
}

unint64_t sub_10000AE8C()
{
  uint64_t v2 = qword_1000A3220;
  if (!qword_1000A3220)
  {
    sub_100089E00();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3220);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10000AF10()
{
  uint64_t v2 = qword_1000A3230;
  if (!qword_1000A3230)
  {
    sub_1000096C0(&qword_1000A44E0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3230);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10000AF94()
{
  return swift_deallocObject();
}

uint64_t sub_10000AFD4()
{
  return sub_100006220();
}

uint64_t sub_10000AFDC()
{
  return swift_deallocObject();
}

uint64_t sub_10000B008()
{
  return swift_deallocObject();
}

uint64_t sub_10000B034()
{
  return swift_deallocObject();
}

uint64_t sub_10000B074@<X0>(uint64_t *a1@<X8>)
{
  return sub_10005E0A8(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_10000B080()
{
  return swift_deallocObject();
}

uint64_t sub_10000B0C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v3 + 24);
  unint64_t v4 = sub_10000B134();

  return sub_100030500(a1, a2, a3, v8, v9, (uint64_t)&type metadata for Int, v4);
}

unint64_t sub_10000B134()
{
  uint64_t v2 = qword_1000A3238;
  if (!qword_1000A3238)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3238);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10000B1B0()
{
  uint64_t v2 = qword_1000A3240;
  if (!qword_1000A3240)
  {
    sub_1000096C0((uint64_t *)&unk_1000A2E40);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3240);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10000B234(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if ((*(_DWORD *)(*(void *)(v2 - 8) + 80) & 0x20000) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(uint64_t))(*(void *)(v2 - 8) + 8))(a1);
  }
}

uint64_t sub_10000B2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v2;
  (**(void (***)(uint64_t))(v2 - 8))(a2);
  return a2;
}

uint64_t sub_10000B344()
{
  return 1;
}

size_t sub_10000B350(const void *a1)
{
  return malloc_size(a1);
}

uint64_t sub_10000B378(uint64_t a1)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v1 = swift_retain();
  v3(v1);
  return swift_release();
}

BOOL sub_10000B3C8(char a1, char a2)
{
  switch(a1)
  {
    case 1:
      uint64_t v4 = 1;
      break;
    case 2:
      uint64_t v4 = 2;
      break;
    case 3:
      uint64_t v4 = 3;
      break;
    case 4:
      uint64_t v4 = 4;
      break;
    default:
      uint64_t v4 = 0;
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v3 = 1;
      break;
    case 2:
      uint64_t v3 = 2;
      break;
    case 3:
      uint64_t v3 = 3;
      break;
    case 4:
      uint64_t v3 = 4;
      break;
    default:
      uint64_t v3 = 0;
      break;
  }
  return v4 == v3;
}

uint64_t sub_10000B500()
{
  return sub_10008A750();
}

uint64_t sub_10000B5DC()
{
  return sub_10008A500();
}

unint64_t sub_10000B628()
{
  uint64_t v2 = qword_1000A3518;
  if (!qword_1000A3518)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3518);
    return WitnessTable;
  }
  return v2;
}

BOOL sub_10000B6A8(char *a1, char *a2)
{
  return sub_10000B3C8(*a1, *a2);
}

uint64_t sub_10000B6CC()
{
  return sub_10000B5DC();
}

uint64_t sub_10000B6E8()
{
  return sub_10000B500();
}

Swift::Int sub_10000B704(Swift::Int a1)
{
  return sub_10008A030(a1);
}

uint64_t sub_10000B71C()
{
  return sub_10008A730();
}

uint64_t sub_10000B734()
{
  return sub_10008A720();
}

uint64_t sub_10000B74C()
{
  return sub_10008A740();
}

uint64_t sub_10000B764()
{
  return sub_10008A710();
}

uint64_t sub_10000B77C()
{
  uint64_t v1 = sub_100089700();
  sub_1000030B8(v1, qword_1000A3500);
  sub_100003160(v1, (uint64_t)qword_1000A3500);
  type metadata accessor for DaemonDataSource();
  return sub_100016888();
}

uint64_t type metadata accessor for DaemonDataSource()
{
  return self;
}

uint64_t sub_10000B80C()
{
  if (qword_1000A2D70 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100089700();
  return sub_100003160(v0, (uint64_t)qword_1000A3500);
}

void *sub_10000B87C()
{
  return &unk_10008B290;
}

uint64_t sub_10000B888()
{
  int v10 = *(void **)(v0 + OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_daemon);
  id v1 = v10;
  [v10 vipManager];

  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    uint64_t v8 = (void *)v11;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v8 = 0;
  }
  if (v8)
  {
    id v7 = [v8 allVIPWaitForResult];
    sub_10000BB68();
    sub_10000BBD0();
    sub_10008A280();
    int v6 = sub_10008A2B0();
    swift_bridgeObjectRelease();

    return (v6 ^ 1) & 1;
  }
  else
  {
    uint64_t v3 = v9;
    sub_10008A6B0();
    v12._countAndFlagsBits = sub_10008A0B0("Unexpected class for VIP manager (", 0x22uLL, 1);
    sub_10008A6A0(v12);
    swift_bridgeObjectRelease();
    id v5 = *(id *)&v9[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_daemon];
    id v4 = v5;
    [v5 vipManager];

    swift_getObjectType();
    sub_1000169B0();
    swift_unknownObjectRelease();
    v13._countAndFlagsBits = sub_10008A0B0(")", 1uLL, 1);
    sub_10008A6A0(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_100009A54();
    sub_10008A0A0();
    uint64_t result = sub_10008A5B0();
    __break(1u);
  }
  return result;
}

unint64_t sub_10000BB68()
{
  uint64_t v2 = qword_1000A3528;
  if (!qword_1000A3528)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3528);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_10000BBD0()
{
  uint64_t v2 = qword_1000A3530;
  if (!qword_1000A3530)
  {
    sub_10000BB68();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3530);
    return WitnessTable;
  }
  return v2;
}

id sub_10000BC54(void *a1)
{
  id v2 = objc_allocWithZone(v1);
  return sub_10000BC90(a1);
}

id sub_10000BC90(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = a1;
  id v2 = v1;
  id v3 = v1;
  id v4 = v1;
  id v5 = v1;
  id v6 = v1;
  id v7 = v1;
  id v19 = v1;
  id v8 = a1;
  *(void *)&v13[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_daemon] = a1;

  type metadata accessor for MessagesDataSource();
  *(void *)&v13[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_messagesDataSource] = sub_100056C50([a1 messageRepository]);

  type metadata accessor for MailboxDataSource();
  *(void *)&v13[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_mailboxDataSource] = sub_10001D110([a1 mailboxRepository]);

  type metadata accessor for MailStatusDataSource();
  *(void *)&v13[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_statusDataSource] = sub_1000235C8([a1 messageRepository]);

  sub_10000BEEC();
  *(void *)&v13[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_focusController] = sub_10000BF54();

  type metadata accessor for AvailabilityQueue();
  id v9 = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)&v13[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_queue] = sub_1000032AC(3, (uint64_t)sub_10000C408, v10, 20.0, 1.0);

  v17.receiver = v19;
  v17.super_class = ObjectType;
  [super init];
  id v11 = v16;
  id v19 = v16;

  return v16;
}

unint64_t sub_10000BEEC()
{
  uint64_t v2 = qword_1000A3550;
  if (!qword_1000A3550)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3550);
    return ObjCClassMetadata;
  }
  return v2;
}

id sub_10000BF54()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_100013564();
}

uint64_t sub_10000BF84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v38 = a1;
  uint64_t v35 = a2;
  id v33 = a3;
  uint64_t v24 = 0;
  int v21 = sub_100015054;
  uint64_t v36 = sub_10001510C;
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  uint64_t v57 = 0;
  uint64_t v49 = 0;
  uint64_t v29 = sub_100089E40();
  uint64_t v25 = *(void *)(v29 - 8);
  uint64_t v26 = v29 - 8;
  unint64_t v18 = (*(void *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v27 = (char *)&v18 - v18;
  unint64_t v19 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v28 = (char *)&v18 - v19;
  unint64_t v20 = (*(void *)(*(void *)(sub_100089E00() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v24);
  char v22 = (char *)&v18 - v20;
  uint64_t v58 = v5;
  uint64_t v59 = v6;
  uint64_t v57 = v7;
  sub_100089E70();
  swift_retain();
  uint64_t v34 = 7;
  uint64_t v8 = swift_allocObject();
  id v9 = v21;
  uint64_t v10 = v35;
  *(void *)(v8 + 16) = v38;
  *(void *)(v8 + 24) = v10;
  uint64_t v55 = v9;
  uint64_t v56 = v8;
  aBlock = _NSConcreteStackBlock;
  int v37 = 1107296256;
  int v51 = 1107296256;
  int v52 = 0;
  uint64_t v53 = sub_10000B378;
  uint64_t v54 = &unk_10009A9C8;
  char v23 = _Block_copy(&aBlock);
  sub_1000073B4();
  uint64_t v41 = sub_100089E50();
  swift_release();
  uint64_t v49 = v41;
  sub_1000095A4();
  id v32 = (id)sub_10008A3F0();
  sub_100089E30();
  sub_100089E90();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v30 = v25 + 8;
  v31(v27, v29);
  sub_10008A3E0();
  v31(v28, v29);

  id v40 = [v33 messageRepository];
  swift_retain();
  swift_retain();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v35;
  Swift::String v13 = v36;
  int v14 = v37;
  uint64_t v15 = (void *)v11;
  uint64_t v16 = v38;
  v15[2] = v41;
  v15[3] = v16;
  v15[4] = v12;
  uint64_t v47 = v13;
  Swift::String v48 = v15;
  uint64_t v42 = _NSConcreteStackBlock;
  int v43 = v14;
  int v44 = 0;
  uint64_t v45 = sub_10000C7AC;
  uint64_t v46 = &unk_10009AA18;
  double v39 = _Block_copy(&v42);
  swift_release();
  [v40 isDataAccessible:v39];
  _Block_release(v39);

  return swift_release();
}

uint64_t sub_10000C3C8()
{
  return swift_deallocObject();
}

uint64_t sub_10000C408(uint64_t a1, uint64_t a2)
{
  return sub_10000BF84(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10000C410(void (*a1)(void))
{
  return swift_release();
}

void sub_10000C478(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v19 = a1;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  uint64_t v20 = 0;
  unint64_t v18 = sub_1000151C4;
  char v41 = 0;
  uint64_t v40 = 0;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v24 = sub_100089E00();
  uint64_t v21 = *(void *)(v24 - 8);
  uint64_t v22 = v24 - 8;
  unint64_t v13 = (*(void *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  char v23 = (char *)&v13 - v13;
  uint64_t v28 = sub_100089E20();
  uint64_t v25 = *(void *)(v28 - 8);
  uint64_t v26 = v28 - 8;
  unint64_t v14 = (*(void *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v19);
  uint64_t v27 = (char *)&v13 - v14;
  int v17 = 1;
  char v41 = v5 & 1;
  uint64_t v40 = a2;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  sub_100089E60();
  sub_1000095A4();
  id v30 = (id)sub_10008A3F0();
  swift_retain();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v16;
  char v10 = v17;
  uint64_t v11 = v18;
  uint64_t v12 = v8;
  LOBYTE(v8) = v19;
  *(void *)(v12 + 16) = v15;
  *(void *)(v12 + 24) = v9;
  *(unsigned char *)(v12 + 32) = v8 & v10;
  uint64_t v36 = v11;
  uint64_t v37 = v12;
  aBlock = _NSConcreteStackBlock;
  int v32 = 1107296256;
  int v33 = 0;
  uint64_t v34 = sub_10000B378;
  uint64_t v35 = &unk_10009AA68;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_release();
  sub_10000739C();
  sub_1000073B4();
  sub_10008A400();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v28);
  _Block_release(v29);
}

uint64_t sub_10000C730(void (*a1)(void), uint64_t a2, char a3)
{
  return swift_release();
}

uint64_t sub_10000C7AC(uint64_t a1, char a2)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4(a2 & 1);
  return swift_release();
}

uint64_t sub_10000C808(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a1;
  int v35 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v27 = 0;
  uint64_t v42 = sub_10000EAA0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v66 = 0;
  char v65 = 0;
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  uint64_t v62 = 0;
  uint64_t v54 = 0;
  unint64_t v26 = (*(void *)(*(void *)(sub_100089E00() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v45 = (char *)&v25 - v26;
  uint64_t v28 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v31 = v28;
  uint64_t v32 = *(void *)(v28 + 64);
  unint64_t v29 = (v32 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v27);
  uint64_t v37 = (uint64_t)&v25 - v29;
  uint64_t v66 = v5;
  int v34 = 1;
  char v65 = v6 & 1;
  uint64_t v63 = v7;
  uint64_t v64 = v8;
  uint64_t v62 = v4;
  sub_100089E70();
  uint64_t v33 = 7;
  uint64_t v48 = swift_allocObject();
  uint64_t v9 = v47;
  swift_unknownObjectWeakInit();

  swift_retain();
  sub_10000E524(v30, v37);
  swift_retain();
  unint64_t v36 = (*(unsigned __int8 *)(v31 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v38 = (v36 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  char v11 = v34;
  char v12 = v35;
  unint64_t v13 = v36;
  uint64_t v14 = v10;
  uint64_t v15 = v37;
  uint64_t v43 = v14;
  *(void *)(v14 + 16) = v48;
  *(unsigned char *)(v14 + 24) = v12 & v11;
  sub_10000E8F8(v15, v14 + v13);
  uint64_t v16 = v40;
  unint64_t v17 = v41;
  unint64_t v18 = v42;
  uint64_t v19 = v43;
  uint64_t v20 = ObjectType;
  uint64_t v21 = (void *)(v43 + v38);
  *uint64_t v21 = v39;
  v21[1] = v16;
  *(void *)(v19 + v17) = v20;
  int v60 = v18;
  uint64_t v61 = v19;
  aBlock = _NSConcreteStackBlock;
  int v56 = 1107296256;
  int v57 = 0;
  uint64_t v58 = sub_10000B378;
  uint64_t v59 = &unk_100099D58;
  uint64_t v46 = _Block_copy(&aBlock);
  sub_1000073B4();
  uint64_t v22 = sub_100089E50();
  char v23 = v47;
  uint64_t v52 = v22;
  swift_release();
  swift_release();
  uint64_t v54 = v52;
  uint64_t v49 = &v23[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_queue];
  Swift::String v50 = &v53;
  swift_beginAccess();
  uint64_t v51 = *(void *)v49;
  swift_retain();
  swift_endAccess();
  sub_10000349C(v52);
  swift_release();
  return swift_release();
}

uint64_t sub_10000CC30()
{
  return swift_deallocObject();
}

void sub_10000CC70(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v268 = a1;
  int v267 = a2;
  v263 = a3;
  uint64_t v264 = a4;
  uint64_t v265 = a5;
  uint64_t v212 = a6;
  uint64_t v255 = 0;
  v213 = sub_1000138EC;
  v214 = sub_1000092DC;
  v215 = sub_100013924;
  uint64_t v216 = sub_100013CA8;
  v217 = sub_100013CF4;
  v218 = sub_100013D40;
  v219 = sub_100013AD0;
  v220 = sub_1000092DC;
  v221 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v222 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v223 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  v224 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v225 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v226 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100013D8C;
  v227 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v228 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v229 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  v230 = sub_1000138EC;
  v231 = sub_1000092DC;
  v232 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  v233 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v234 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v235 = sub_1000142CC;
  uint64_t v236 = sub_1000140C4;
  uint64_t v237 = sub_10001412C;
  unint64_t v238 = sub_1000141FC;
  uint64_t v318 = 0;
  char v317 = 0;
  uint64_t v316 = 0;
  uint64_t v314 = 0;
  uint64_t v315 = 0;
  v312 = 0;
  uint64_t v310 = 0;
  uint64_t v311 = 0;
  uint64_t v309 = 0;
  uint64_t v308 = 0;
  uint64_t v307 = 0;
  uint64_t v306 = 0;
  uint64_t v305 = 0;
  uint64_t v266 = 0;
  uint64_t v239 = 0;
  uint64_t v240 = sub_100089E00();
  uint64_t v241 = *(void *)(v240 - 8);
  uint64_t v242 = v240 - 8;
  unint64_t v243 = (*(void *)(v241 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  unint64_t v244 = (char *)v113 - v243;
  uint64_t v245 = sub_100089E20();
  uint64_t v246 = *(void *)(v245 - 8);
  uint64_t v247 = v245 - 8;
  unint64_t v248 = (*(void *)(v246 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v255);
  uint64_t v249 = (char *)v113 - v248;
  uint64_t v250 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v251 = v250;
  uint64_t v252 = *(void *)(v250 + 64);
  unint64_t v253 = (v252 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v255);
  uint64_t v254 = (uint64_t)v113 - v253;
  uint64_t v256 = sub_100089700();
  uint64_t v257 = *(void **)(v256 - 8);
  uint64_t v258 = v256 - 8;
  unint64_t v259 = (v257[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = __chkstk_darwin(v255);
  unint64_t v260 = (char *)v113 - v259;
  unint64_t v261 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  unint64_t v262 = (char *)v113 - v261;
  uint64_t v269 = sub_100089660();
  uint64_t v270 = *(void *)(v269 - 8);
  uint64_t v271 = v269 - 8;
  unint64_t v272 = (*(void *)(v270 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = __chkstk_darwin(v268);
  uint64_t v273 = (char *)v113 - v272;
  uint64_t v274 = v8 + 16;
  uint64_t v318 = v8 + 16;
  char v317 = v9 & 1;
  uint64_t v316 = v10;
  uint64_t v314 = v11;
  uint64_t v315 = v12;
  uint32_t v275 = &v313;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  swift_endAccess();
  if (Strong)
  {
    v211 = Strong;
    v166 = Strong;
    v312 = Strong;
    sub_100089650();
    uint64_t v13 = sub_100089640();
    uint64_t v14 = v262;
    uint64_t v175 = v13;
    uint64_t v176 = v15;
    uint64_t v310 = v13;
    uint64_t v311 = v15;
    (*(void (**)(char *, uint64_t))(v270 + 8))(v273, v269);
    v167 = dispatch_group_create();
    uint64_t v309 = v167;
    uint64_t v193 = 32;
    uint64_t v194 = 7;
    uint64_t v16 = swift_allocObject();
    uint64_t v168 = v16;
    uint64_t v308 = v16 + 16;
    *(void *)(v16 + 16) = 0;
    int v177 = 1;
    *(unsigned char *)(v16 + 24) = 1;
    uint64_t v170 = 24;
    uint64_t v169 = swift_allocObject();
    uint64_t v307 = v169 + 16;
    *(void *)(v169 + 16) = 0;
    uint64_t v191 = 17;
    uint64_t v171 = swift_allocObject();
    uint64_t v306 = v171 + 16;
    *(unsigned char *)(v171 + 16) = 2;
    uint64_t v172 = swift_allocObject();
    uint64_t v305 = v172 + 16;
    *(void *)(v172 + 16) = 0;
    uint64_t v17 = sub_10000B80C();
    uint64_t v173 = (void (*)(char *, uint64_t, uint64_t))v257[2];
    v174 = v257 + 2;
    v173(v14, v17, v256);
    swift_bridgeObjectRetain();
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v176;
    uint64_t v184 = v18;
    *(void *)(v18 + 16) = v175;
    *(void *)(v18 + 24) = v19;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v254;
    uint64_t v22 = v20;
    uint64_t v23 = (uint64_t)v263;
    uint64_t v186 = v22;
    *(unsigned char *)(v22 + 16) = v267 & v177;
    sub_10000E524(v23, v21);
    unint64_t v178 = (*(unsigned __int8 *)(v251 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80);
    uint64_t v195 = swift_allocObject();
    sub_10000E8F8(v254, v195 + v178);
    uint32_t v209 = sub_1000896E0();
    int v210 = sub_10008A3B0();
    uint64_t v181 = &v303;
    uint64_t v303 = 28;
    unint64_t v179 = sub_10000818C();
    unint64_t v180 = sub_100008208();
    unint64_t v182 = sub_100008284();
    sub_10008A140();
    uint32_t v183 = v304;
    uint64_t v197 = swift_allocObject();
    int v190 = 34;
    *(unsigned char *)(v197 + 16) = 34;
    uint64_t v198 = swift_allocObject();
    int v192 = 8;
    *(unsigned char *)(v198 + 16) = 8;
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v184;
    uint64_t v185 = v24;
    *(void *)(v24 + 16) = v213;
    *(void *)(v24 + 24) = v25;
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v185;
    uint64_t v199 = v26;
    *(void *)(v26 + 16) = v214;
    *(void *)(v26 + 24) = v27;
    uint64_t v200 = swift_allocObject();
    *(unsigned char *)(v200 + 16) = 0;
    uint64_t v201 = swift_allocObject();
    *(unsigned char *)(v201 + 16) = 4;
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = v186;
    uint64_t v187 = v28;
    *(void *)(v28 + 16) = v215;
    *(void *)(v28 + 24) = v29;
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v187;
    uint64_t v188 = v30;
    *(void *)(v30 + 16) = v216;
    *(void *)(v30 + 24) = v31;
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v188;
    uint64_t v189 = v32;
    *(void *)(v32 + 16) = v217;
    *(void *)(v32 + 24) = v33;
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = v189;
    uint64_t v202 = v34;
    *(void *)(v34 + 16) = v218;
    *(void *)(v34 + 24) = v35;
    uint64_t v203 = swift_allocObject();
    *(unsigned char *)(v203 + 16) = v190;
    uint64_t v204 = swift_allocObject();
    *(unsigned char *)(v204 + 16) = v192;
    uint64_t v36 = swift_allocObject();
    uint64_t v37 = v195;
    uint64_t v196 = v36;
    *(void *)(v36 + 16) = v219;
    *(void *)(v36 + 24) = v37;
    uint64_t v38 = swift_allocObject();
    uint64_t v39 = v196;
    uint64_t v206 = v38;
    *(void *)(v38 + 16) = v220;
    *(void *)(v38 + 24) = v39;
    uint64_t v208 = sub_100009334(&qword_1000A2E38);
    uint64_t v205 = sub_10008A6C0();
    unint64_t v207 = v40;
    swift_retain();
    uint64_t v41 = v197;
    uint64_t v42 = v207;
    *unint64_t v207 = v221;
    v42[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v41;
    swift_retain();
    uint64_t v43 = v198;
    int v44 = v207;
    v207[2] = v222;
    void v44[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v43;
    swift_retain();
    uint64_t v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v199;
    uint64_t v46 = v207;
    v207[4] = v223;
    v46[5] = v45;
    swift_retain();
    uint64_t v47 = v200;
    uint64_t v48 = v207;
    v207[6] = v224;
    v48[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v47;
    swift_retain();
    uint64_t v49 = v201;
    Swift::String v50 = v207;
    v207[8] = v225;
    v50[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
    swift_retain();
    uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v202;
    uint64_t v52 = v207;
    v207[10] = v226;
    v52[11] = v51;
    swift_retain();
    uint64_t v53 = v203;
    uint64_t v54 = v207;
    v207[12] = v227;
    v54[13] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v53;
    swift_retain();
    uint64_t v55 = v204;
    int v56 = v207;
    v207[14] = v228;
    v56[15] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v55;
    swift_retain();
    int v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v206;
    uint64_t v58 = v207;
    v207[16] = v229;
    v58[17] = v57;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v209, (os_log_type_t)v210))
    {
      uint64_t v59 = v239;
      uint64_t v159 = (uint8_t *)sub_10008A470();
      uint64_t v158 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v160 = sub_100007E5C(0);
      uint64_t v161 = sub_100007E5C(2);
      int v162 = &v281;
      uint64_t v281 = v159;
      int v163 = &v280;
      uint64_t v280 = v160;
      int v164 = &v279;
      uint64_t v279 = v161;
      sub_100007EB8(2, &v281);
      sub_100007EB8(3, v162);
      uint64_t v277 = v221;
      uint64_t v278 = v197;
      sub_100007ECC(&v277, (uint64_t)v162, (uint64_t)v163, (uint64_t)v164);
      uint64_t v165 = v59;
      if (v59)
      {
        __break(1u);
      }
      else
      {
        uint64_t v277 = v222;
        uint64_t v278 = v198;
        sub_100007ECC(&v277, (uint64_t)&v281, (uint64_t)&v280, (uint64_t)&v279);
        uint64_t v156 = 0;
        uint64_t v277 = v223;
        uint64_t v278 = v199;
        sub_100007ECC(&v277, (uint64_t)&v281, (uint64_t)&v280, (uint64_t)&v279);
        uint64_t v155 = 0;
        uint64_t v277 = v224;
        uint64_t v278 = v200;
        sub_100007ECC(&v277, (uint64_t)&v281, (uint64_t)&v280, (uint64_t)&v279);
        uint64_t v154 = 0;
        uint64_t v277 = v225;
        uint64_t v278 = v201;
        sub_100007ECC(&v277, (uint64_t)&v281, (uint64_t)&v280, (uint64_t)&v279);
        uint64_t v153 = 0;
        uint64_t v277 = v226;
        uint64_t v278 = v202;
        sub_100007ECC(&v277, (uint64_t)&v281, (uint64_t)&v280, (uint64_t)&v279);
        uint64_t v152 = 0;
        uint64_t v277 = v227;
        uint64_t v278 = v203;
        sub_100007ECC(&v277, (uint64_t)&v281, (uint64_t)&v280, (uint64_t)&v279);
        uint64_t v151 = 0;
        uint64_t v277 = v228;
        uint64_t v278 = v204;
        sub_100007ECC(&v277, (uint64_t)&v281, (uint64_t)&v280, (uint64_t)&v279);
        uint64_t v150 = 0;
        uint64_t v277 = v229;
        uint64_t v278 = v206;
        sub_100007ECC(&v277, (uint64_t)&v281, (uint64_t)&v280, (uint64_t)&v279);
        uint64_t v149 = 0;
        _os_log_impl((void *)&_mh_execute_header, v209, (os_log_type_t)v210, "[%{public}s] Fetch messages & count (threaded: %{BOOL}d) for mailbox: %{public}s", v159, v183);
        sub_100007F18(v160);
        sub_100007F18(v161);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v157 = v149;
      }
    }
    else
    {
      uint64_t v60 = v239;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v157 = v60;
    }
    uint64_t v146 = v157;

    uint32_t v147 = (void (*)(char *, uint64_t))v257[1];
    unint64_t v148 = v257 + 1;
    v147(v262, v256);
    if (sub_10001925C())
    {
      dispatch_group_enter(v167);
      id v145 = *(id *)&v166[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_statusDataSource];
      id v61 = v145;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v62 = v167;
      uint64_t v63 = swift_allocObject();
      uint64_t v64 = v176;
      uint64_t v65 = v168;
      uint64_t v66 = v167;
      uint64_t v67 = v212;
      uint64_t v68 = (uint64_t)v235;
      uint64_t v69 = (void *)v63;
      uint64_t v70 = v263;
      uint64_t v144 = v69;
      v69[2] = v175;
      v69[3] = v64;
      v69[4] = v65;
      v69[5] = v66;
      v69[6] = v67;
      sub_100023604(v70, 10, v68, (uint64_t)v69);
      swift_release();
    }
    else
    {
      uint64_t v71 = v260;
      uint64_t v72 = sub_10000B80C();
      v173(v71, v72, v256);
      swift_bridgeObjectRetain();
      uint64_t v133 = 32;
      uint64_t v134 = 7;
      uint64_t v73 = swift_allocObject();
      uint64_t v74 = v176;
      uint64_t v135 = v73;
      *(void *)(v73 + 16) = v175;
      *(void *)(v73 + 24) = v74;
      unsigned int v142 = sub_1000896E0();
      int v143 = sub_10008A3A0();
      uint64_t v301 = 12;
      sub_10008A140();
      uint32_t v131 = v302;
      uint64_t v132 = 17;
      uint64_t v137 = swift_allocObject();
      *(unsigned char *)(v137 + 16) = 34;
      uint64_t v138 = swift_allocObject();
      *(unsigned char *)(v138 + 16) = 8;
      uint64_t v75 = swift_allocObject();
      uint64_t v76 = v135;
      uint64_t v136 = v75;
      *(void *)(v75 + 16) = v230;
      *(void *)(v75 + 24) = v76;
      uint64_t v77 = swift_allocObject();
      uint64_t v78 = v136;
      uint64_t v140 = v77;
      *(void *)(v77 + 16) = v231;
      *(void *)(v77 + 24) = v78;
      uint64_t v139 = sub_10008A6C0();
      uint64_t v141 = v79;
      swift_retain();
      uint64_t v80 = v137;
      unint64_t v81 = v141;
      void *v141 = v232;
      v81[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v80;
      swift_retain();
      uint64_t v82 = v138;
      uint32_t v83 = v141;
      v141[2] = v233;
      v83[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v82;
      swift_retain();
      int v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v140;
      uint32_t v85 = v141;
      v141[4] = v234;
      v85[5] = v84;
      sub_100007A04();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v142, (os_log_type_t)v143))
      {
        uint64_t v86 = v146;
        uint32_t v124 = (uint8_t *)sub_10008A470();
        uint64_t v123 = sub_100009334((uint64_t *)&unk_1000A4320);
        uint64_t v125 = sub_100007E5C(0);
        uint64_t v126 = sub_100007E5C(1);
        uint64_t v127 = &v286;
        uint64_t v286 = v124;
        unint64_t v128 = &v285;
        uint64_t v285 = v125;
        uint64_t v129 = &v284;
        uint64_t v284 = v126;
        sub_100007EB8(2, &v286);
        sub_100007EB8(1, v127);
        uint64_t v282 = v232;
        uint64_t v283 = v137;
        sub_100007ECC(&v282, (uint64_t)v127, (uint64_t)v128, (uint64_t)v129);
        uint64_t v130 = v86;
        if (v86)
        {
          __break(1u);
        }
        else
        {
          uint64_t v282 = v233;
          uint64_t v283 = v138;
          sub_100007ECC(&v282, (uint64_t)&v286, (uint64_t)&v285, (uint64_t)&v284);
          uint64_t v122 = 0;
          uint64_t v282 = v234;
          uint64_t v283 = v140;
          sub_100007ECC(&v282, (uint64_t)&v286, (uint64_t)&v285, (uint64_t)&v284);
          _os_log_impl((void *)&_mh_execute_header, v142, (os_log_type_t)v143, "[%{public}s] Cannot fetch unread count. Mailbox is invalid.", v124, v131);
          sub_100007F18(v125);
          sub_100007F18(v126);
          sub_10008A450();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      v147(v260, v256);
      uint64_t v87 = v168;
      *(void *)(v168 + 16) = 0;
      *(unsigned char *)(v87 + 24) = 0;
    }
    dispatch_group_enter(v167);
    id v114 = *(id *)&v166[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_messagesDataSource];
    id v88 = v114;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v89 = v167;
    uint64_t v117 = 64;
    uint64_t v118 = 7;
    uint64_t v90 = swift_allocObject();
    uint64_t v91 = v212;
    char v92 = v267;
    uint64_t v93 = (uint64_t)v236;
    uint64_t v94 = v172;
    uint64_t v95 = v169;
    uint64_t v96 = v167;
    uint64_t v97 = v176;
    int v98 = (void *)v90;
    uint64_t v99 = v263;
    v113[1] = v98;
    v98[2] = v175;
    v98[3] = v97;
    v98[4] = v95;
    v98[5] = v94;
    v98[6] = v96;
    v98[7] = v91;
    sub_100056C8C(v99, v92 & 1, v93, (uint64_t)v98);
    swift_release();

    dispatch_group_enter(v167);
    id v116 = *(id *)&v166[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_focusController];
    id v100 = v116;
    swift_retain();
    unint64_t v101 = v167;
    uint64_t v102 = swift_allocObject();
    uint64_t v103 = v237;
    uint32_t v104 = v167;
    *(void *)(v102 + 16) = v171;
    *(void *)(v102 + 24) = v104;
    v299 = v103;
    uint64_t v300 = v102;
    aBlock = _NSConcreteStackBlock;
    int v119 = 1107296256;
    int v295 = 1107296256;
    int v296 = 0;
    uint64_t v297 = sub_1000112E0;
    uint32_t v298 = &unk_10009A450;
    uint64_t v115 = _Block_copy(&aBlock);
    swift_release();
    [v116 getCurrentFocus:v115];
    _Block_release(v115);

    sub_1000095A4();
    id v121 = (id)sub_10008A3F0();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    int v105 = (void *)swift_allocObject();
    uint64_t v106 = v264;
    uint64_t v107 = v265;
    uint64_t v108 = v238;
    int v109 = v119;
    uint64_t v110 = v172;
    uint64_t v111 = v171;
    uint64_t v112 = v168;
    v105[2] = v169;
    v105[3] = v112;
    v105[4] = v111;
    v105[5] = v110;
    v105[6] = v106;
    v105[7] = v107;
    uint64_t v292 = v108;
    uint64_t v293 = v105;
    v287 = _NSConcreteStackBlock;
    int v288 = v109;
    int v289 = 0;
    v290 = sub_10000B378;
    uint64_t v291 = &unk_10009A4A0;
    uint64_t v120 = _Block_copy(&v287);
    sub_10000739C();
    sub_1000073B4();
    sub_10008A3C0();
    (*(void (**)(char *, uint64_t))(v241 + 8))(v244, v240);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v249, v245);
    _Block_release(v120);
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10000E524(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 8) = v10;
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 16) = v13;
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  }
  else
  {
    *(void *)(a2 + 24) = *(void *)(a1 + 24);
    uint64_t v9 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a2 + 32) = v9;
  }
  uint64_t v2 = type metadata accessor for Mailbox();
  __dst = (void *)(a2 + *(int *)(v2 + 28));
  __src = (void *)(a1 + *(int *)(v2 + 28));
  uint64_t v7 = sub_1000895A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v8 + 48))(__src, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 16))(__dst, __src, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
  }
  return a2;
}

uint64_t sub_10000E714()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 25) & ~v1;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10000E8F8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  uint64_t v2 = type metadata accessor for Mailbox();
  __dst = (void *)(a2 + *(int *)(v2 + 28));
  __src = (void *)(a1 + *(int *)(v2 + 28));
  uint64_t v7 = sub_1000895A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v8 + 48))(__src, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(__dst, __src, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
  }
  return a2;
}

void sub_10000EAA0()
{
  uint64_t v8 = *(void *)(type metadata accessor for Mailbox() - 8);
  unint64_t v1 = (*(unsigned __int8 *)(v8 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v2 = (v1 + *(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + v2);
  uint64_t v5 = *(void *)(v0 + v2 + 8);
  uint64_t v6 = *(void *)(v0 + ((v2 + 23) & 0xFFFFFFFFFFFFFFF8));
  int v7 = *(unsigned char *)(v0 + 24) & 1;

  sub_10000CC70(v3, v7, (void *)(v0 + v1), v4, v5, v6);
}

uint64_t sub_10000EB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10000EBAC()
{
  return swift_release();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10000EBC8()
{
}

uint64_t sub_10000EBFC(char a1)
{
  return a1 & 1;
}

uint64_t sub_10000EC04()
{
  return sub_100018F6C();
}

void sub_10000EC28(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v64 = a1;
  int v65 = a2;
  uint64_t v62 = a3;
  uint64_t v63 = a4;
  uint64_t v55 = a5;
  dispatch_group_t v56 = a6;
  uint64_t v71 = sub_1000138EC;
  uint64_t v73 = sub_1000092DC;
  uint64_t v77 = sub_100014354;
  unint64_t v81 = sub_10000B074;
  uint32_t v83 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint32_t v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v89 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v94 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10000B0C0;
  uint64_t v112 = 0;
  char v113 = 0;
  uint64_t v110 = 0;
  uint64_t v111 = 0;
  uint64_t v109 = 0;
  uint64_t v108 = 0;
  uint64_t v54 = 0;
  uint64_t v61 = sub_100089700();
  uint64_t v59 = *(void *)(v61 - 8);
  uint64_t v60 = v61 - 8;
  unint64_t v57 = (*(void *)(v59 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = (char *)v43 - v57;
  uint64_t v58 = (char *)v43 - v57;
  uint64_t v112 = __chkstk_darwin(v64);
  int v66 = 1;
  char v113 = v7 & 1;
  uint64_t v110 = v8;
  uint64_t v111 = v9;
  uint64_t v109 = v10 + 16;
  uint64_t v108 = v11;
  uint64_t v12 = sub_10000B80C();
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v6, v12, v61);
  swift_bridgeObjectRetain();
  uint64_t v78 = 32;
  uint64_t v79 = 7;
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v63;
  uint64_t v72 = v13;
  *(void *)(v13 + 16) = v62;
  *(void *)(v13 + 24) = v14;
  uint64_t v15 = swift_allocObject();
  char v16 = v65;
  char v17 = v66;
  uint64_t v80 = v15;
  *(void *)(v15 + 16) = v64;
  *(unsigned char *)(v15 + 24) = v16 & 1 & v17;
  int v98 = sub_1000896E0();
  int v99 = sub_10008A3B0();
  uint64_t v69 = &v106;
  uint64_t v106 = 22;
  unint64_t v67 = sub_10000818C();
  unint64_t v68 = sub_100008208();
  sub_100008284();
  sub_10008A140();
  uint32_t v70 = v107;
  uint64_t v75 = 17;
  uint64_t v84 = swift_allocObject();
  *(unsigned char *)(v84 + 16) = 34;
  uint64_t v86 = swift_allocObject();
  int v76 = 8;
  *(unsigned char *)(v86 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v72;
  uint64_t v74 = v18;
  *(void *)(v18 + 16) = v71;
  *(void *)(v18 + 24) = v19;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v74;
  uint64_t v88 = v20;
  *(void *)(v20 + 16) = v73;
  *(void *)(v20 + 24) = v21;
  uint64_t v90 = swift_allocObject();
  *(unsigned char *)(v90 + 16) = 0;
  uint64_t v92 = swift_allocObject();
  *(unsigned char *)(v92 + 16) = v76;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v80;
  uint64_t v82 = v22;
  *(void *)(v22 + 16) = v77;
  *(void *)(v22 + 24) = v23;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v82;
  uint64_t v95 = v24;
  *(void *)(v24 + 16) = v81;
  *(void *)(v24 + 24) = v25;
  uint64_t v97 = sub_100009334(&qword_1000A2E38);
  uint64_t v93 = sub_10008A6C0();
  uint64_t v96 = v26;
  swift_retain();
  uint64_t v27 = v84;
  uint64_t v28 = v96;
  *uint64_t v96 = v83;
  v28[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v27;
  swift_retain();
  uint64_t v29 = v86;
  uint64_t v30 = v96;
  v96[2] = v85;
  v30[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29;
  swift_retain();
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v88;
  uint64_t v32 = v96;
  v96[4] = v87;
  v32[5] = v31;
  swift_retain();
  uint64_t v33 = v90;
  uint64_t v34 = v96;
  v96[6] = v89;
  v34[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v33;
  swift_retain();
  uint64_t v35 = v92;
  uint64_t v36 = v96;
  v96[8] = v91;
  v36[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35;
  swift_retain();
  uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v95;
  uint64_t v38 = v96;
  v96[10] = v94;
  v38[11] = v37;
  sub_100007A04();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v98, (os_log_type_t)v99))
  {
    uint64_t v39 = v54;
    uint64_t v46 = (uint8_t *)sub_10008A470();
    uint64_t v45 = sub_100009334((uint64_t *)&unk_1000A4320);
    uint64_t v47 = sub_100007E5C(0);
    uint64_t v48 = sub_100007E5C(1);
    Swift::String v50 = &v104;
    uint32_t v104 = v46;
    uint64_t v51 = &v103;
    uint64_t v103 = v47;
    uint64_t v52 = &v102;
    uint64_t v102 = v48;
    unsigned int v49 = 2;
    sub_100007EB8(2, &v104);
    sub_100007EB8(v49, v50);
    id v100 = v83;
    uint64_t v101 = v84;
    sub_100007ECC(&v100, (uint64_t)v50, (uint64_t)v51, (uint64_t)v52);
    uint64_t v53 = v39;
    if (v39)
    {
      __break(1u);
    }
    else
    {
      id v100 = v85;
      uint64_t v101 = v86;
      sub_100007ECC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
      uint64_t v44 = 0;
      uint64_t v40 = v44;
      id v100 = v87;
      uint64_t v101 = v88;
      sub_100007ECC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
      v43[3] = v40;
      id v100 = v89;
      uint64_t v101 = v90;
      sub_100007ECC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
      v43[2] = 0;
      id v100 = v91;
      uint64_t v101 = v92;
      sub_100007ECC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
      v43[1] = 0;
      id v100 = v94;
      uint64_t v101 = v95;
      sub_100007ECC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
      _os_log_impl((void *)&_mh_execute_header, v98, (os_log_type_t)v99, "[%{public}s] Received count:%ld", v46, v70);
      sub_100007F18(v47);
      sub_100007F18(v48);
      sub_10008A450();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v61);
  v43[0] = &v105;
  swift_beginAccess();
  char v41 = v65;
  uint64_t v42 = v55;
  *(void *)(v55 + 16) = v64;
  *(unsigned char *)(v42 + 24) = v41 & 1;
  swift_endAccess();
  dispatch_group_leave(v56);
}

uint64_t sub_10000F734(uint64_t a1, char a2)
{
  if (a2) {
    return -1;
  }
  return a1;
}

void sub_10000F778(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  uint64_t v172 = a1;
  int v171 = a2;
  uint64_t v166 = a3;
  uint64_t v167 = a4;
  uint64_t v168 = a5;
  uint64_t v169 = a6;
  dispatch_group_t v170 = a7;
  id v145 = sub_1000138EC;
  uint64_t v146 = sub_1000092DC;
  uint32_t v147 = sub_10001488C;
  unint64_t v148 = sub_1000092DC;
  uint64_t v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v150 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v151 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v152 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v154 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v155 = sub_1000138EC;
  uint64_t v156 = sub_1000092DC;
  uint64_t v157 = sub_100014654;
  uint64_t v158 = sub_1000092DC;
  uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v161 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  int v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  int v163 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  int v164 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v203 = 0;
  char v204 = 0;
  uint64_t v201 = 0;
  uint64_t v202 = 0;
  uint64_t v200 = 0;
  uint64_t v199 = 0;
  uint64_t v198 = 0;
  uint64_t v197 = 0;
  uint64_t v165 = 0;
  uint64_t v188 = 0;
  uint64_t v173 = sub_100089700();
  uint64_t v174 = *(void *)(v173 - 8);
  uint64_t v175 = v173 - 8;
  unint64_t v176 = (*(void *)(v174 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = __chkstk_darwin(v172);
  int v177 = (char *)v70 - v176;
  unint64_t v178 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v179 = (char *)v70 - v178;
  uint64_t v203 = v9;
  char v204 = v10 & 1;
  uint64_t v201 = v11;
  uint64_t v202 = v12;
  uint64_t v200 = v13 + 16;
  uint64_t v199 = v14 + 16;
  uint64_t v198 = v15;
  if (v10)
  {
    uint64_t v143 = v172;
    uint64_t v43 = v177;
    uint64_t v81 = v172;
    swift_errorRetain();
    uint64_t v197 = v81;
    uint64_t v44 = sub_10000B80C();
    (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v43, v44, v173);
    swift_bridgeObjectRetain();
    uint64_t v90 = 32;
    uint64_t v91 = 7;
    uint64_t v45 = swift_allocObject();
    uint64_t v46 = v167;
    uint64_t v86 = v45;
    *(void *)(v45 + 16) = v166;
    *(void *)(v45 + 24) = v46;
    swift_errorRetain();
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = v81;
    uint64_t v103 = sub_1000896E0();
    int v104 = sub_10008A3A0();
    uint64_t v84 = &v195;
    uint64_t v195 = 22;
    unint64_t v82 = sub_10000818C();
    unint64_t v83 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v85 = v196;
    uint64_t v88 = 17;
    uint64_t v94 = swift_allocObject();
    *(unsigned char *)(v94 + 16) = 34;
    uint64_t v95 = swift_allocObject();
    int v89 = 8;
    *(unsigned char *)(v95 + 16) = 8;
    uint64_t v47 = swift_allocObject();
    uint64_t v48 = v86;
    uint64_t v87 = v47;
    *(void *)(v47 + 16) = v155;
    *(void *)(v47 + 24) = v48;
    uint64_t v49 = swift_allocObject();
    uint64_t v50 = v87;
    uint64_t v96 = v49;
    *(void *)(v49 + 16) = v156;
    *(void *)(v49 + 24) = v50;
    uint64_t v97 = swift_allocObject();
    *(unsigned char *)(v97 + 16) = 32;
    uint64_t v98 = swift_allocObject();
    *(unsigned char *)(v98 + 16) = v89;
    uint64_t v51 = swift_allocObject();
    uint64_t v52 = v92;
    uint64_t v93 = v51;
    *(void *)(v51 + 16) = v157;
    *(void *)(v51 + 24) = v52;
    uint64_t v53 = swift_allocObject();
    uint64_t v54 = v93;
    uint64_t v100 = v53;
    *(void *)(v53 + 16) = v158;
    *(void *)(v53 + 24) = v54;
    uint64_t v102 = sub_100009334(&qword_1000A2E38);
    uint64_t v99 = sub_10008A6C0();
    uint64_t v101 = v55;
    swift_retain();
    uint64_t v56 = v94;
    unint64_t v57 = v101;
    *uint64_t v101 = v159;
    v57[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v56;
    swift_retain();
    uint64_t v58 = v95;
    uint64_t v59 = v101;
    v101[2] = v160;
    v59[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v58;
    swift_retain();
    uint64_t v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v96;
    uint64_t v61 = v101;
    v101[4] = v161;
    v61[5] = v60;
    swift_retain();
    uint64_t v62 = v97;
    uint64_t v63 = v101;
    v101[6] = v162;
    v63[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v62;
    swift_retain();
    uint64_t v64 = v98;
    int v65 = v101;
    v101[8] = v163;
    v65[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v64;
    swift_retain();
    int v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v100;
    unint64_t v67 = v101;
    v101[10] = v164;
    v67[11] = v66;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v103, (os_log_type_t)v104))
    {
      uint64_t v68 = v165;
      uint64_t v73 = (uint8_t *)sub_10008A470();
      uint64_t v72 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v74 = sub_100007E5C(0);
      uint64_t v75 = sub_100007E5C(2);
      uint64_t v77 = &v193;
      uint64_t v193 = v73;
      uint64_t v78 = &v192;
      uint64_t v192 = v74;
      uint64_t v79 = &v191;
      uint64_t v191 = v75;
      unsigned int v76 = 2;
      sub_100007EB8(2, &v193);
      sub_100007EB8(v76, v77);
      uint64_t v189 = v159;
      uint64_t v190 = v94;
      sub_100007ECC(&v189, (uint64_t)v77, (uint64_t)v78, (uint64_t)v79);
      uint64_t v80 = v68;
      if (v68)
      {
        __break(1u);
      }
      else
      {
        uint64_t v189 = v160;
        uint64_t v190 = v95;
        sub_100007ECC(&v189, (uint64_t)&v193, (uint64_t)&v192, (uint64_t)&v191);
        uint64_t v71 = 0;
        uint64_t v69 = v71;
        uint64_t v189 = v161;
        uint64_t v190 = v96;
        sub_100007ECC(&v189, (uint64_t)&v193, (uint64_t)&v192, (uint64_t)&v191);
        v70[4] = v69;
        uint64_t v189 = v162;
        uint64_t v190 = v97;
        sub_100007ECC(&v189, (uint64_t)&v193, (uint64_t)&v192, (uint64_t)&v191);
        v70[3] = 0;
        uint64_t v189 = v163;
        uint64_t v190 = v98;
        sub_100007ECC(&v189, (uint64_t)&v193, (uint64_t)&v192, (uint64_t)&v191);
        v70[2] = 0;
        uint64_t v189 = v164;
        uint64_t v190 = v100;
        sub_100007ECC(&v189, (uint64_t)&v193, (uint64_t)&v192, (uint64_t)&v191);
        _os_log_impl((void *)&_mh_execute_header, v103, (os_log_type_t)v104, "[%{public}s] Fetching messages failed with error: %s", v73, v85);
        sub_100007F18(v74);
        sub_100007F18(v75);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v174 + 8))(v177, v173);
    swift_errorRetain();
    v70[1] = &v194;
    swift_beginAccess();
    *(void *)(v169 + 16) = v81;
    swift_errorRelease();
    swift_endAccess();
    swift_errorRelease();
  }
  else
  {
    uint64_t v144 = v172;
    char v16 = v179;
    uint64_t v119 = v172;
    swift_bridgeObjectRetain();
    uint64_t v188 = v119;
    uint64_t v17 = sub_10000B80C();
    (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v16, v17, v173);
    swift_bridgeObjectRetain();
    uint64_t v128 = 32;
    uint64_t v129 = 7;
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v167;
    uint64_t v124 = v18;
    *(void *)(v18 + 16) = v166;
    *(void *)(v18 + 24) = v19;
    swift_bridgeObjectRetain();
    uint64_t v130 = swift_allocObject();
    *(void *)(v130 + 16) = v119;
    uint64_t v141 = sub_1000896E0();
    int v142 = sub_10008A3B0();
    uint64_t v122 = &v186;
    uint64_t v186 = 22;
    unint64_t v120 = sub_10000818C();
    unint64_t v121 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v123 = v187;
    uint64_t v126 = 17;
    uint64_t v132 = swift_allocObject();
    *(unsigned char *)(v132 + 16) = 34;
    uint64_t v133 = swift_allocObject();
    int v127 = 8;
    *(unsigned char *)(v133 + 16) = 8;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v124;
    uint64_t v125 = v20;
    *(void *)(v20 + 16) = v145;
    *(void *)(v20 + 24) = v21;
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = v125;
    uint64_t v134 = v22;
    *(void *)(v22 + 16) = v146;
    *(void *)(v22 + 24) = v23;
    uint64_t v135 = swift_allocObject();
    *(unsigned char *)(v135 + 16) = 32;
    uint64_t v136 = swift_allocObject();
    *(unsigned char *)(v136 + 16) = v127;
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v130;
    uint64_t v131 = v24;
    *(void *)(v24 + 16) = v147;
    *(void *)(v24 + 24) = v25;
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v131;
    uint64_t v138 = v26;
    *(void *)(v26 + 16) = v148;
    *(void *)(v26 + 24) = v27;
    uint64_t v140 = sub_100009334(&qword_1000A2E38);
    uint64_t v137 = sub_10008A6C0();
    uint64_t v139 = v28;
    swift_retain();
    uint64_t v29 = v132;
    uint64_t v30 = v139;
    *uint64_t v139 = v149;
    v30[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29;
    swift_retain();
    uint64_t v31 = v133;
    uint64_t v32 = v139;
    v139[2] = v150;
    v32[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31;
    swift_retain();
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v134;
    uint64_t v34 = v139;
    v139[4] = v151;
    v34[5] = v33;
    swift_retain();
    uint64_t v35 = v135;
    uint64_t v36 = v139;
    v139[6] = v152;
    v36[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35;
    swift_retain();
    uint64_t v37 = v136;
    uint64_t v38 = v139;
    v139[8] = v153;
    v38[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v37;
    swift_retain();
    uint64_t v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v138;
    uint64_t v40 = v139;
    v139[10] = v154;
    v40[11] = v39;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v141, (os_log_type_t)v142))
    {
      uint64_t v41 = v165;
      uint64_t v111 = (uint8_t *)sub_10008A470();
      uint64_t v110 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v112 = sub_100007E5C(0);
      uint64_t v113 = sub_100007E5C(2);
      uint64_t v115 = &v184;
      uint64_t v184 = v111;
      id v116 = &v183;
      uint64_t v183 = v112;
      uint64_t v117 = &v182;
      uint64_t v182 = v113;
      unsigned int v114 = 2;
      sub_100007EB8(2, &v184);
      sub_100007EB8(v114, v115);
      unint64_t v180 = v149;
      uint64_t v181 = v132;
      sub_100007ECC(&v180, (uint64_t)v115, (uint64_t)v116, (uint64_t)v117);
      uint64_t v118 = v41;
      if (v41)
      {
        __break(1u);
      }
      else
      {
        unint64_t v180 = v150;
        uint64_t v181 = v133;
        sub_100007ECC(&v180, (uint64_t)&v184, (uint64_t)&v183, (uint64_t)&v182);
        uint64_t v109 = 0;
        uint64_t v42 = v109;
        unint64_t v180 = v151;
        uint64_t v181 = v134;
        sub_100007ECC(&v180, (uint64_t)&v184, (uint64_t)&v183, (uint64_t)&v182);
        uint64_t v108 = v42;
        unint64_t v180 = v152;
        uint64_t v181 = v135;
        sub_100007ECC(&v180, (uint64_t)&v184, (uint64_t)&v183, (uint64_t)&v182);
        uint64_t v107 = 0;
        unint64_t v180 = v153;
        uint64_t v181 = v136;
        sub_100007ECC(&v180, (uint64_t)&v184, (uint64_t)&v183, (uint64_t)&v182);
        uint64_t v106 = 0;
        unint64_t v180 = v154;
        uint64_t v181 = v138;
        sub_100007ECC(&v180, (uint64_t)&v184, (uint64_t)&v183, (uint64_t)&v182);
        _os_log_impl((void *)&_mh_execute_header, v141, (os_log_type_t)v142, "[%{public}s] Received messages:\n\t%s", v111, v123);
        sub_100007F18(v112);
        sub_100007F18(v113);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v174 + 8))(v179, v173);
    swift_bridgeObjectRetain();
    char v105 = &v185;
    swift_beginAccess();
    *(void *)(v168 + 16) = v119;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(v170);
}

uint64_t sub_100010EC0()
{
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v4 = sub_100009334(&qword_1000A35A0);
  unint64_t v0 = sub_100014A90();
  sub_10001D15C((void (*)(char *, char *))sub_100014A5C, KeyPath, v4, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, v0, (uint64_t)&protocol witness table for Never, v5);
  swift_release();
  swift_release();
  sub_10008A0B0("\n\t", 2uLL, 1);
  sub_100009334(&qword_1000A35B0);
  sub_100014B14();
  uint64_t v2 = sub_10008A040();
  swift_bridgeObjectRelease();
  sub_10000ADA0();
  return v2;
}

uint64_t sub_100011014@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v11 = a2;
  uint64_t v9 = a1;
  unint64_t v10 = (*(void *)(*(void *)(type metadata accessor for Message() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = (char *)__chkstk_darwin(v9);
  uint64_t v12 = (char *)&v9 - v10;
  sub_100014B98(v2, (char *)&v9 - v10);
  uint64_t v3 = sub_100034A24();
  uint64_t v4 = v11;
  uint64_t v5 = v3;
  uint64_t v6 = (uint64_t)v12;
  *uint64_t v11 = v5;
  v4[1] = v7;
  return sub_100014EC0(v6);
}

uint64_t sub_1000110C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = a3;
  uint64_t v5 = a1;
  uint64_t v8 = a2;
  unint64_t v6 = (*(void *)(*(void *)(type metadata accessor for Message() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = (char *)__chkstk_darwin(v5);
  uint64_t v9 = (uint64_t)&v5 - v6;
  sub_100014B98(v3, (char *)&v5 - v6);
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  return sub_100014EC0(v9);
}

uint64_t sub_100011178()
{
  swift_errorRetain();
  id v1 = (id)sub_100089570();
  id v2 = [v1 ef_publicDescription];
  uint64_t v3 = sub_10008A080();

  swift_errorRelease();
  return v3;
}

void sub_1000111F0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  BOOL v3 = a1 != 0;
  swift_beginAccess();
  *(unsigned char *)(a2 + 16) = v3;
  swift_endAccess();
  dispatch_group_leave(a3);
}

uint64_t sub_1000112E0(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v2 = a2;
  v4(a2);

  return swift_release();
}

uint64_t sub_100011348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, void))
{
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v13 = *(void *)(a2 + 16);
  char v14 = *(unsigned char *)(a2 + 24);
  swift_endAccess();
  swift_beginAccess();
  int v16 = *(unsigned __int8 *)(a3 + 16);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v18 = *(void *)(a4 + 16);
  swift_errorRetain();
  swift_endAccess();
  if (!v19 || v16 == 2)
  {
    if (v18)
    {
      swift_errorRetain();
      swift_retain();
      swift_errorRetain();
      LOWORD(v21) = 0;
      BYTE2(v21) = 1;
      a5(v18, 0, v21);
      sub_100014594(v18, 0, 0, 1);
      swift_release();
      swift_errorRelease();
    }
    else
    {
      swift_retain();
      sub_100014514();
      uint64_t v8 = swift_allocError();
      *uint64_t v7 = 0;
      LOWORD(v22) = 0;
      BYTE2(v22) = 1;
      a5(v8, 0, v22);
      sub_100014594(v8, 0, 0, 1);
      swift_release();
    }
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    int v5 = v16 & 1;
    unsigned int v9 = v14 & 1 | (v5 << 8);
    LOWORD(v20) = v14 & 1 | ((_WORD)v5 << 8);
    BYTE2(v20) = 0;
    a5(v19, v13, v20);
    sub_100014594(v19, v13, v9, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
}

uint64_t sub_100011770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a1;
  uint64_t v33 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v24 = 0;
  uint64_t v38 = sub_100011E64;
  uint64_t v61 = 0;
  uint64_t v60 = 0;
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  uint64_t v57 = 0;
  uint64_t v49 = 0;
  unint64_t v23 = (*(void *)(*(void *)(sub_100089E00() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v40 = (char *)&v23 - v23;
  uint64_t v25 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v28 = v25;
  uint64_t v29 = *(void *)(v25 + 64);
  unint64_t v26 = (v29 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v24);
  uint64_t v32 = (uint64_t)&v23 - v26;
  uint64_t v61 = v5;
  uint64_t v60 = v6;
  uint64_t v58 = v7;
  uint64_t v59 = v8;
  uint64_t v57 = v4;
  sub_100089E70();
  uint64_t v30 = 7;
  uint64_t v43 = swift_allocObject();
  unsigned int v9 = v42;
  swift_unknownObjectWeakInit();

  swift_retain();
  sub_10000E524(v27, v32);
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v31 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v34 = (v31 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  unint64_t v11 = v31;
  uint64_t v12 = v10;
  uint64_t v13 = v32;
  uint64_t v39 = v12;
  *(void *)(v12 + 16) = v43;
  sub_10000E8F8(v13, v12 + v11);
  unint64_t v14 = v35;
  uint64_t v15 = v36;
  uint64_t v16 = v37;
  uint64_t v17 = v38;
  uint64_t v18 = v39;
  *(void *)(v39 + v34) = v33;
  uint64_t v19 = (void *)(v18 + v14);
  void *v19 = v15;
  v19[1] = v16;
  uint64_t v55 = v17;
  uint64_t v56 = v18;
  aBlock = _NSConcreteStackBlock;
  int v51 = 1107296256;
  int v52 = 0;
  uint64_t v53 = sub_10000B378;
  uint64_t v54 = &unk_100099DA8;
  uint64_t v41 = _Block_copy(&aBlock);
  sub_1000073B4();
  uint64_t v20 = sub_100089E50();
  unsigned int v21 = v42;
  uint64_t v47 = v20;
  swift_release();
  swift_release();
  uint64_t v49 = v47;
  uint64_t v44 = &v21[OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_queue];
  uint64_t v45 = &v48;
  swift_beginAccess();
  uint64_t v46 = *(void *)v44;
  swift_retain();
  swift_endAccess();
  sub_10000349C(v47);
  swift_release();
  return swift_release();
}

uint64_t sub_100011B54(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  v12[8] = (id)(a1 + 16);
  v12[7] = a2;
  v12[6] = a3;
  void v12[4] = a4;
  v12[5] = a5;
  swift_beginAccess();
  v12[0] = (id)swift_unknownObjectWeakLoadStrong();
  if (v12[0])
  {
    id v7 = v12[0];
    id v6 = v12[0];
    sub_1000137A8(v12);
    swift_endAccess();
    swift_retain();

    sub_10001DA98((uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t *))a4, (uint64_t)a5);
    return swift_release();
  }
  else
  {
    sub_1000137A8(v12);
    return swift_endAccess();
  }
}

uint64_t sub_100011C6C()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 24) & ~v1;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100011E64()
{
  uint64_t v9 = *(void *)(type metadata accessor for Mailbox() - 8);
  unint64_t v1 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v2 = (v1 + *(void *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + v2);
  uint64_t v5 = v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = *(void **)v5;
  uint64_t v7 = *(void **)(v5 + 8);

  return sub_100011B54(v3, (void *)(v0 + v1), v4, v6, v7);
}

uint64_t sub_100011F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100011F68()
{
  return swift_release();
}

void sub_100011F84(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v17 = v2;
  id v9 = *(id *)(v2 + OBJC_IVAR____TtC19MailWidgetExtension16DaemonDataSource_focusController);
  id v3 = v9;
  swift_retain();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = ObjectType;
  uint64_t v15 = sub_1000123B4;
  uint64_t v16 = v4;
  aBlock = _NSConcreteStackBlock;
  int v11 = 1107296256;
  int v12 = 0;
  uint64_t v13 = sub_1000112E0;
  unint64_t v14 = &unk_100099DF8;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_release();
  [v9 getCurrentFocus:v8];
  _Block_release(v8);
}

void sub_1000120D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v20 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v21 = 0;
  uint64_t v19 = sub_1000135D0;
  uint64_t v41 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t v25 = sub_100089E00();
  uint64_t v22 = *(void *)(v25 - 8);
  uint64_t v23 = v25 - 8;
  unint64_t v14 = (*(void *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v24 = (char *)&v13 - v14;
  uint64_t v29 = sub_100089E20();
  uint64_t v26 = *(void *)(v29 - 8);
  uint64_t v27 = v29 - 8;
  unint64_t v15 = (*(void *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  uint64_t v28 = (char *)&v13 - v15;
  uint64_t v41 = v4;
  uint64_t v39 = v5;
  uint64_t v40 = v6;
  sub_1000095A4();
  id v31 = (id)sub_10008A3F0();
  id v7 = v20;
  swift_retain();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = v16;
  uint64_t v10 = v17;
  uint64_t v11 = v18;
  int v12 = v19;
  v8[2] = v20;
  void v8[3] = v9;
  v8[4] = v10;
  v8[5] = v11;
  uint64_t v37 = v12;
  uint64_t v38 = v8;
  aBlock = _NSConcreteStackBlock;
  int v33 = 1107296256;
  int v34 = 0;
  unint64_t v35 = sub_10000B378;
  uint64_t v36 = &unk_100099F00;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_release();
  sub_10000739C();
  sub_1000073B4();
  sub_10008A400();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v29);
  _Block_release(v30);
}

uint64_t sub_100012374()
{
  return swift_deallocObject();
}

void sub_1000123B4(void *a1)
{
  sub_1000120D4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000123C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10001240C()
{
  return swift_release();
}

uint64_t sub_100012428(void *a1, void (*a2)(void), uint64_t a3)
{
  id v76 = a1;
  uint32_t v70 = a2;
  uint64_t v69 = a3;
  uint64_t v63 = sub_100013688;
  uint64_t v64 = sub_10000B074;
  int v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  int v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  unint64_t v67 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10000B0C0;
  id v89 = 0;
  uint64_t v87 = 0;
  uint64_t v88 = 0;
  uint64_t v86 = 0;
  uint64_t v68 = 0;
  uint64_t v71 = sub_100089700();
  uint64_t v72 = *(void *)(v71 - 8);
  uint64_t v73 = v71 - 8;
  unint64_t v74 = (*(void *)(v72 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v75 = (char *)&v21 - v74;
  id v89 = (id)__chkstk_darwin(v76);
  uint64_t v87 = v3;
  uint64_t v88 = v4;
  id v5 = v89;
  if (v76)
  {
    id v62 = v76;
    id v59 = v76;
    id v60 = [v76 focusedAccountIdentifiers];
    if (v60)
    {
      id v58 = v60;
      id v55 = v60;
      uint64_t v56 = sub_10008A280();

      uint64_t v57 = v56;
    }
    else
    {
      uint64_t v57 = 0;
    }
    uint64_t v54 = v57;

    uint64_t v61 = v54;
  }
  else
  {
    uint64_t v61 = 0;
  }
  uint64_t v6 = v75;
  uint64_t v36 = v61;
  uint64_t v86 = v61;
  uint64_t v7 = sub_10000B80C();
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v6, v7, v71);
  swift_bridgeObjectRetain();
  uint64_t v43 = 7;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v36;
  int v52 = sub_1000896E0();
  int v53 = sub_10008A3B0();
  uint64_t v39 = &v84;
  uint64_t v84 = 12;
  unint64_t v37 = sub_10000818C();
  unint64_t v38 = sub_100008208();
  sub_100008284();
  sub_10008A140();
  uint32_t v40 = v85;
  uint64_t v41 = 17;
  uint64_t v46 = swift_allocObject();
  *(unsigned char *)(v46 + 16) = 0;
  uint64_t v47 = swift_allocObject();
  *(unsigned char *)(v47 + 16) = 8;
  uint64_t v42 = 32;
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v44;
  uint64_t v45 = v8;
  *(void *)(v8 + 16) = v63;
  *(void *)(v8 + 24) = v9;
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v45;
  uint64_t v49 = v10;
  *(void *)(v10 + 16) = v64;
  *(void *)(v10 + 24) = v11;
  uint64_t v51 = sub_100009334(&qword_1000A2E38);
  uint64_t v48 = sub_10008A6C0();
  uint64_t v50 = v12;
  swift_retain();
  uint64_t v13 = v46;
  unint64_t v14 = v50;
  *uint64_t v50 = v65;
  v14[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v13;
  swift_retain();
  uint64_t v15 = v47;
  uint64_t v16 = v50;
  v50[2] = v66;
  v16[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v15;
  swift_retain();
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
  uint64_t v18 = v50;
  v50[4] = v67;
  v18[5] = v17;
  sub_100007A04();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v52, (os_log_type_t)v53))
  {
    uint64_t v19 = v68;
    uint64_t v29 = (uint8_t *)sub_10008A470();
    uint64_t v27 = sub_100009334((uint64_t *)&unk_1000A4320);
    uint64_t v28 = 0;
    uint64_t v30 = sub_100007E5C(0);
    uint64_t v31 = sub_100007E5C(v28);
    uint64_t v32 = &v81;
    uint64_t v81 = v29;
    int v33 = &v80;
    uint64_t v80 = v30;
    int v34 = &v79;
    uint64_t v79 = v31;
    sub_100007EB8(0, &v81);
    sub_100007EB8(1, v32);
    uint64_t v77 = v65;
    uint64_t v78 = v46;
    sub_100007ECC(&v77, (uint64_t)v32, (uint64_t)v33, (uint64_t)v34);
    uint64_t v35 = v19;
    if (v19)
    {
      __break(1u);
    }
    else
    {
      uint64_t v77 = v66;
      uint64_t v78 = v47;
      sub_100007ECC(&v77, (uint64_t)&v81, (uint64_t)&v80, (uint64_t)&v79);
      uint64_t v26 = 0;
      uint64_t v77 = v67;
      uint64_t v78 = v49;
      sub_100007ECC(&v77, (uint64_t)&v81, (uint64_t)&v80, (uint64_t)&v79);
      _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v53, "Received %ld focused account identifiers", v29, v40);
      uint64_t v25 = 0;
      sub_100007F18(v30);
      sub_100007F18(v31);
      sub_10008A450();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v72 + 8))(v75, v71);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v82 = v36;
  if (v36)
  {
    uint64_t v83 = v82;
  }
  else
  {
    uint64_t v24 = &type metadata for String;
    sub_10008A6C0();
    uint64_t v83 = sub_10008A290();
    sub_10000ADA0();
  }
  uint64_t v22 = v83;
  int v23 = 0;
  v70();
  sub_100013768(v22, v23 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100012D18(uint64_t a1)
{
  swift_bridgeObjectRetain();
  if (a1)
  {
    uint64_t v2 = sub_10008A2A0();
    swift_bridgeObjectRelease();
    uint64_t v3 = v2;
    char v4 = 0;
  }
  else
  {
    uint64_t v3 = 0;
    char v4 = 1;
  }
  if (v4) {
    return -1;
  }
  else {
    return v3;
  }
}

uint64_t sub_100012DF0()
{
  if (!"MailWidgetExtension.DaemonDataSource")
  {
    sub_10008A5A0();
    __break(1u);
  }
  uint64_t result = sub_10005D24C((uint64_t)"MailWidgetExtension.DaemonDataSource", 36, (unint64_t)"init()", 6, 2, (unint64_t)"MailWidgetExtension/DataSource.swift", 36, 2, v1, 0x16uLL, 0xDuLL);
  __break(1u);
  return result;
}

id sub_100012F24()
{
  uint64_t v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_100013010()
{
  return sub_10000B888() & 1;
}

uint64_t sub_100013038(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_10000C808(a1, a2 & 1, a3, a4);
}

uint64_t sub_100013060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100011770(a1, a2, a3, a4);
}

void sub_100013084(uint64_t a1, uint64_t a2)
{
}

unsigned char *sub_1000130A8(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1000130B4(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 <= 0xFB) {
      goto LABEL_15;
    }
    unsigned int v7 = ((a2 + 4) >> 8) + 1;
    int v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000) {
        int v2 = 4;
      }
      else {
        int v2 = 2;
      }
      int v8 = v2;
    }
    if (v8 == 1) {
      int v6 = a1[1];
    }
    else {
      int v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    }
    if (v6)
    {
      int v5 = (*a1 | ((v6 - 1) << 8)) + 251;
    }
    else
    {
LABEL_15:
      int v3 = *a1 - 5;
      if (v3 < 0) {
        int v3 = -1;
      }
      int v5 = v3;
    }
  }
  else
  {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_100013264(unsigned char *result, unsigned int a2, unsigned int a3)
{
  int v7 = 0;
  if (a3 > 0xFB)
  {
    unsigned int v5 = ((a3 + 4) >> 8) + 1;
    int v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000) {
        int v3 = 4;
      }
      else {
        int v3 = 2;
      }
      int v6 = v3;
    }
    int v7 = v6;
  }
  if (a2 > 0xFB)
  {
    unsigned int v4 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }
      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }
  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }
      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }
    if (a2) {
      *uint64_t result = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_1000134A8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1000134B0(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

void *type metadata accessor for DaemonDataSource.Error()
{
  return &unk_100099EA0;
}

unint64_t sub_1000134CC()
{
  return sub_1000134E4();
}

unint64_t sub_1000134E4()
{
  uint64_t v2 = qword_1000A3590;
  if (!qword_1000A3590)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3590);
    return WitnessTable;
  }
  return v2;
}

id sub_100013564()
{
  return [v0 init];
}

uint64_t sub_100013588()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1000135D0()
{
  return sub_100012428(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000135E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10001362C()
{
  return swift_release();
}

uint64_t sub_100013648()
{
  return swift_deallocObject();
}

uint64_t sub_100013688()
{
  return sub_100012D18(*(void *)(v0 + 16));
}

uint64_t sub_100013690()
{
  return swift_deallocObject();
}

uint64_t sub_1000136BC()
{
  return swift_deallocObject();
}

uint64_t sub_1000136E8()
{
  return swift_deallocObject();
}

uint64_t sub_100013728()
{
  return swift_deallocObject();
}

uint64_t sub_100013768(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1000137A8(id *a1)
{
}

uint64_t sub_1000137D4()
{
  return swift_deallocObject();
}

uint64_t sub_100013800()
{
  return swift_deallocObject();
}

uint64_t sub_100013840()
{
  return swift_deallocObject();
}

uint64_t sub_10001386C()
{
  return swift_deallocObject();
}

uint64_t sub_1000138AC()
{
  return swift_deallocObject();
}

uint64_t sub_1000138EC()
{
  uint64_t result = *(void *)(v0 + 16);
  sub_10000EBC8();
  return result;
}

uint64_t sub_1000138F8()
{
  return swift_deallocObject();
}

uint64_t sub_100013924()
{
  return sub_10000EBFC(*(unsigned char *)(v0 + 16) & 1);
}

uint64_t sub_100013930()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 16) & ~v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_100013AD0()
{
  type metadata accessor for Mailbox();

  return sub_10000EC04();
}

uint64_t sub_100013B38()
{
  return swift_deallocObject();
}

uint64_t sub_100013B64()
{
  return swift_deallocObject();
}

uint64_t sub_100013B90()
{
  return swift_deallocObject();
}

uint64_t sub_100013BD0()
{
  return swift_deallocObject();
}

uint64_t sub_100013C10()
{
  return swift_deallocObject();
}

uint64_t sub_100013C3C()
{
  return swift_deallocObject();
}

uint64_t sub_100013C68()
{
  return swift_deallocObject();
}

BOOL sub_100013CA8()
{
  return sub_1000307C0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100013CB4()
{
  return swift_deallocObject();
}

uint64_t sub_100013CF4()
{
  return sub_100030854(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100013D00()
{
  return swift_deallocObject();
}

uint64_t sub_100013D40@<X0>(_DWORD *a1@<X8>)
{
  return sub_1000308BC(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100013D4C()
{
  return swift_deallocObject();
}

uint64_t sub_100013D8C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v3 + 24);
  unint64_t v4 = sub_100013E00();

  return sub_100030500(a1, a2, a3, v8, v9, (uint64_t)&type metadata for Int32, v4);
}

unint64_t sub_100013E00()
{
  uint64_t v2 = qword_1000A4360;
  if (!qword_1000A4360)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4360);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100013E7C()
{
  return swift_deallocObject();
}

uint64_t sub_100013EA8()
{
  return swift_deallocObject();
}

uint64_t sub_100013ED4()
{
  return swift_deallocObject();
}

uint64_t sub_100013F14()
{
  return swift_deallocObject();
}

uint64_t sub_100013F54()
{
  return swift_deallocObject();
}

uint64_t sub_100013F94()
{
  return swift_deallocObject();
}

uint64_t sub_100013FC0()
{
  return swift_deallocObject();
}

uint64_t sub_100013FEC()
{
  return swift_deallocObject();
}

uint64_t sub_10001402C()
{
  return swift_deallocObject();
}

uint64_t sub_10001406C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1000140C4(uint64_t a1, char a2)
{
  sub_10000F778(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(NSObject **)(v2 + 48));
}

uint64_t sub_1000140E4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10001412C(uint64_t a1)
{
  sub_1000111F0(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_100014138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100014180()
{
  return swift_release();
}

uint64_t sub_10001419C()
{
  return swift_deallocObject();
}

uint64_t sub_1000141FC()
{
  return sub_100011348(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(uint64_t, uint64_t, void))(v0 + 48));
}

uint64_t sub_100014218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100014260()
{
  return swift_release();
}

uint64_t sub_10001427C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1000142CC(uint64_t a1, char a2)
{
  sub_10000EC28(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(NSObject **)(v2 + 40));
}

uint64_t sub_1000142E8()
{
  return swift_deallocObject();
}

uint64_t sub_100014328()
{
  return swift_deallocObject();
}

uint64_t sub_100014354()
{
  return sub_10000F734(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24) & 1);
}

uint64_t sub_100014364()
{
  return swift_deallocObject();
}

uint64_t sub_100014390()
{
  return swift_deallocObject();
}

uint64_t sub_1000143BC()
{
  return swift_deallocObject();
}

uint64_t sub_1000143FC()
{
  return swift_deallocObject();
}

uint64_t sub_10001443C()
{
  return swift_deallocObject();
}

uint64_t sub_100014468()
{
  return swift_deallocObject();
}

uint64_t sub_100014494()
{
  return swift_deallocObject();
}

uint64_t sub_1000144D4()
{
  return swift_deallocObject();
}

unint64_t sub_100014514()
{
  uint64_t v2 = qword_1000A3598;
  if (!qword_1000A3598)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3598);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100014594(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000145D4()
{
  return swift_deallocObject();
}

uint64_t sub_100014614()
{
  return swift_deallocObject();
}

uint64_t sub_100014654()
{
  return sub_100011178();
}

uint64_t sub_10001465C()
{
  return swift_deallocObject();
}

uint64_t sub_100014688()
{
  return swift_deallocObject();
}

uint64_t sub_1000146B4()
{
  return swift_deallocObject();
}

uint64_t sub_1000146F4()
{
  return swift_deallocObject();
}

uint64_t sub_100014734()
{
  return swift_deallocObject();
}

uint64_t sub_100014760()
{
  return swift_deallocObject();
}

uint64_t sub_10001478C()
{
  return swift_deallocObject();
}

uint64_t sub_1000147CC()
{
  return swift_deallocObject();
}

uint64_t sub_10001480C()
{
  return swift_deallocObject();
}

uint64_t sub_10001484C()
{
  return swift_deallocObject();
}

uint64_t sub_10001488C()
{
  return sub_100010EC0();
}

uint64_t sub_100014894()
{
  return swift_deallocObject();
}

uint64_t sub_1000148C0()
{
  return swift_deallocObject();
}

uint64_t sub_1000148EC()
{
  return swift_deallocObject();
}

uint64_t sub_10001492C()
{
  return swift_deallocObject();
}

uint64_t sub_10001496C()
{
  return swift_deallocObject();
}

uint64_t sub_100014998()
{
  return swift_deallocObject();
}

uint64_t sub_1000149C4()
{
  return swift_deallocObject();
}

uint64_t sub_100014A04()
{
  return swift_deallocObject();
}

uint64_t sub_100014A44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100011014(a1, a2);
}

uint64_t sub_100014A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000110C0(a1, v3, a2);
}

unint64_t sub_100014A90()
{
  uint64_t v2 = qword_1000A35A8;
  if (!qword_1000A35A8)
  {
    sub_1000096C0(&qword_1000A35A0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A35A8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100014B14()
{
  uint64_t v2 = qword_1000A35B8;
  if (!qword_1000A35B8)
  {
    sub_1000096C0(&qword_1000A35B0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A35B8);
    return WitnessTable;
  }
  return v2;
}

char *sub_100014B98(char *a1, char *a2)
{
  *(void *)a2 = *(void *)a1;
  uint64_t v7 = *((void *)a1 + 1);
  swift_bridgeObjectRetain();
  *((void *)a2 + 1) = v7;
  *((void *)a2 + 2) = *((void *)a1 + 2);
  uint64_t v8 = *((void *)a1 + 3);
  swift_bridgeObjectRetain();
  *((void *)a2 + 3) = v8;
  *((void *)a2 + 4) = *((void *)a1 + 4);
  uint64_t v9 = *((void *)a1 + 5);
  swift_bridgeObjectRetain();
  *((void *)a2 + 5) = v9;
  *((void *)a2 + 6) = *((void *)a1 + 6);
  uint64_t v10 = *((void *)a1 + 7);
  swift_bridgeObjectRetain();
  *((void *)a2 + 7) = v10;
  uint64_t v13 = (int *)type metadata accessor for Message();
  uint64_t v11 = v13[8];
  uint64_t v2 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 16))(&a2[v11], &a1[v11]);
  a2[v13[9]] = a1[v13[9]];
  a2[v13[10]] = a1[v13[10]];
  a2[v13[11]] = a1[v13[11]];
  a2[v13[12]] = a1[v13[12]];
  uint64_t v3 = v13[13];
  uint64_t v4 = &a2[v3];
  *(void *)uint64_t v4 = *(void *)&a1[v3];
  v4[8] = a1[v3 + 8];
  a2[v13[14]] = a1[v13[14]];
  uint64_t v14 = v13[15];
  uint64_t v16 = sub_1000895A0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 48))(&a1[v14], 1))
  {
    uint64_t v5 = sub_100009334(&qword_1000A3B40);
    memcpy(&a2[v14], &a1[v14], *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void))(v17 + 16))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(&a2[v14], 0, 1, v16);
  }
  return a2;
}

uint64_t sub_100014EC0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Message();
  uint64_t v3 = *(int *)(v4 + 32);
  uint64_t v1 = sub_100089630();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1 + v3);
  uint64_t v5 = *(int *)(v4 + 60);
  uint64_t v7 = sub_1000895A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(a1 + v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1 + v5, v7);
  }
  return a1;
}

uint64_t sub_100015014()
{
  return swift_deallocObject();
}

uint64_t sub_100015054()
{
  return sub_10000C410(*(void (**)(void))(v0 + 16));
}

uint64_t sub_100015060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1000150A8()
{
  return swift_release();
}

uint64_t sub_1000150C4()
{
  return swift_deallocObject();
}

void sub_10001510C(char a1)
{
  sub_10000C478(a1 & 1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100015120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100015168()
{
  return swift_release();
}

uint64_t sub_100015184()
{
  return swift_deallocObject();
}

uint64_t sub_1000151C4()
{
  return sub_10000C730(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32) & 1);
}

uint64_t sub_1000151D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100015220()
{
  return swift_release();
}

id sub_10001523C(void *a1)
{
  uint64_t v11 = a1[3];
  unint64_t v12 = a1[4];
  sub_1000154C0(v11, v12);
  if (v12)
  {
    unint64_t v2 = v12;
    char v1 = 1;
  }
  else
  {
    unint64_t v2 = 0;
    char v1 = 0;
  }
  if ((v1 & 1) == 0)
  {
    switch(v2)
    {
      case 0uLL:
      case 1uLL:
        break;
      case 2uLL:
      case 4uLL:
      case 5uLL:
        sub_100015500(v11, v12);
        goto LABEL_13;
      case 3uLL:
        id v13 = [(id)swift_getObjCClassFromMetadata() mailboxScopeForMailboxType:7 forExclusion:0];
        sub_100015500(v11, v12);
        goto LABEL_12;
      default:
        JUMPOUT(0);
    }
  }
  sub_100015500(v11, v12);
  uint64_t v9 = a1[2];
  swift_bridgeObjectRetain();
  if (v9)
  {
    id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    swift_bridgeObjectRetain();
    sub_100015650();
    sub_100009334(&qword_1000A35C8);
    sub_1000156B8();
    sub_10001573C();
    sub_10008A2C0();
    Class isa = sub_10008A270().super.isa;
    swift_bridgeObjectRelease();
    id v8 = [v6 initWithMailboxTypes:0 excludeTypes:0 mailboxObjectIDs:isa excludeMailboxes:0];

    id v13 = v8;
    swift_bridgeObjectRelease();
LABEL_12:
    id v3 = v13;
    sub_100015540((uint64_t)a1);

    return v13;
  }
  else
  {
LABEL_13:
    sub_100015540((uint64_t)a1);
    return 0;
  }
}

uint64_t sub_1000154C0(uint64_t a1, unint64_t a2)
{
  if (a2 > 5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100015500(uint64_t a1, unint64_t a2)
{
  if (a2 > 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100015540(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v3 = sub_1000895A0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return a1;
}

unint64_t sub_100015650()
{
  uint64_t v2 = qword_1000A35C0;
  if (!qword_1000A35C0)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A35C0);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_1000156B8()
{
  uint64_t v2 = qword_1000A35D0;
  if (!qword_1000A35D0)
  {
    sub_100015650();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A35D0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10001573C()
{
  uint64_t v2 = qword_1000A35D8;
  if (!qword_1000A35D8)
  {
    sub_1000096C0(&qword_1000A35C8);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A35D8);
    return WitnessTable;
  }
  return v2;
}

void sub_1000157C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = sub_100009334((uint64_t *)&unk_1000A35E0);
  uint64_t v44 = a1;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v41 = v3;
  id v10 = self;
  swift_bridgeObjectRetain();
  sub_100009334(&qword_1000A42E0);
  Class isa = sub_10008A180().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v7 messageListItemsForItemIDs:isa];

  sub_100009334((uint64_t *)&unk_1000A35F0);
  sub_10008A190();
  Class v11 = sub_10008A180().super.isa;
  swift_bridgeObjectRelease();

  id v13 = [v10 join:v11];
  uint64_t v39 = sub_100015B78;
  uint64_t v40 = 0;
  aBlock = _NSConcreteStackBlock;
  int v35 = 1107296256;
  int v36 = 0;
  unint64_t v37 = sub_100015EA8;
  unint64_t v38 = &unk_10009AA90;
  unint64_t v12 = _Block_copy(&aBlock);
  id v18 = [v13 then:];
  _Block_release(v12);

  id v33 = v18;
  swift_retain();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a3;
  uint64_t v31 = sub_100016124;
  uint64_t v32 = v4;
  uint64_t v26 = _NSConcreteStackBlock;
  int v27 = 1107296256;
  int v28 = 0;
  uint64_t v29 = sub_100016130;
  uint64_t v30 = &unk_10009AAE0;
  uint64_t v14 = _Block_copy(&v26);
  swift_release();
  [v18 addSuccessBlock:v14];
  _Block_release(v14);
  swift_retain();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  uint64_t v24 = sub_1000162C0;
  uint64_t v25 = v5;
  uint64_t v19 = _NSConcreteStackBlock;
  int v20 = 1107296256;
  int v21 = 0;
  uint64_t v22 = sub_1000162CC;
  int v23 = &unk_10009AB30;
  uint64_t v17 = _Block_copy(&v19);
  swift_release();
  [v18 addFailureBlock:v17];
  _Block_release(v17);
}

id sub_100015B78()
{
  id v8 = self;
  sub_100016658();
  sub_1000166C0();
  sub_100016728();
  sub_10008A100();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v5 = sub_100009334(&qword_1000A3620);
  uint64_t v6 = sub_100009334((uint64_t *)&unk_1000A35F0);
  unint64_t v0 = sub_100016804();
  sub_10001D15C((void (*)(char *, char *))sub_1000167D0, KeyPath, v5, v6, (uint64_t)&type metadata for Never, v0, (uint64_t)&protocol witness table for Never, v7);
  swift_release();
  swift_release();
  sub_10000ADA0();
  Class isa = sub_10008A180().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v8 join:isa];

  return v3;
}

uint64_t sub_100015D58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = a1;
  sub_10000B2E0(a1, (uint64_t)v4);
  sub_1000166C0();
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    *a2 = 0;
  }
  return result;
}

void sub_100015DDC(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  id v2 = *a1;
  *a2 = [v3 displayMessage];
}

uint64_t sub_100015E40(id *a1)
{
  id v3 = *a1;
  id v1 = *a1;
  swift_retain();
  swift_getAtKeyPath();

  return swift_release();
}

id sub_100015EA8(uint64_t a1, void *a2)
{
  uint64_t v4 = *(uint64_t (**)(void *))(a1 + 32);
  swift_retain();
  id v2 = a2;
  id v6 = (id)v4(a2);

  swift_release();

  return v6;
}

uint64_t sub_100015F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100015F74()
{
  return swift_release();
}

uint64_t sub_100015F90(uint64_t a1, void (*a2)(void))
{
  swift_unknownObjectRetain();
  sub_100009334(&qword_1000A3600);
  if (swift_dynamicCast()) {
    uint64_t v3 = v5;
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  if (v3)
  {
    swift_bridgeObjectRetain();
    ((void (*)(uint64_t, void))a2)(v3, 0);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    a2(0);
    return swift_release();
  }
}

uint64_t sub_1000160E4()
{
  return swift_deallocObject();
}

uint64_t sub_100016124(uint64_t a1)
{
  return sub_100015F90(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_100016130(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v3(a2);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_100016198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1000161E0()
{
  return swift_release();
}

uint64_t sub_1000161FC(uint64_t a1, void (*a2)(void, uint64_t))
{
  return swift_release();
}

uint64_t sub_100016280()
{
  return swift_deallocObject();
}

uint64_t sub_1000162C0(uint64_t a1)
{
  return sub_1000161FC(a1, *(void (**)(void, uint64_t))(v1 + 16));
}

uint64_t sub_1000162CC(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v2 = a2;
  v4(a2);
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_100016334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10001637C()
{
  return swift_release();
}

void sub_100016488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  if (a1)
  {
    sub_1000165F0();
    Class isa = sub_10008A180().super.isa;
    swift_bridgeObjectRelease();
    Class v6 = isa;
  }
  else
  {
    Class v6 = 0;
  }
  swift_errorRetain();
  if (a2)
  {
    uint64_t v3 = sub_100089570();
    swift_errorRelease();
    uint64_t v4 = (void *)v3;
  }
  else
  {
    uint64_t v4 = 0;
  }
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, v6);
}

uint64_t sub_1000165A8()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1000165E8(uint64_t a1, uint64_t a2)
{
  sub_100016488(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_1000165F0()
{
  uint64_t v2 = qword_1000A3900;
  if (!qword_1000A3900)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3900);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_100016658()
{
  uint64_t v2 = qword_1000A3608;
  if (!qword_1000A3608)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3608);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_1000166C0()
{
  uint64_t v2 = qword_1000A3610;
  if (!qword_1000A3610)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3610);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_100016728()
{
  uint64_t v2 = qword_1000A3618;
  if (!qword_1000A3618)
  {
    sub_100016658();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3618);
    return WitnessTable;
  }
  return v2;
}

const char *sub_1000167AC()
{
  return "displayMessage";
}

void sub_1000167B8(id *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1000167D0(id *a1)
{
  return sub_100015E40(a1);
}

unint64_t sub_100016804()
{
  uint64_t v2 = qword_1000A3628;
  if (!qword_1000A3628)
  {
    sub_1000096C0(&qword_1000A3620);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3628);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100016888()
{
  sub_10008A0B0("com.apple.mobilemail.mailwidgetextension", 0x28uLL, 1);
  sub_10008A6B0();
  v1._countAndFlagsBits = sub_10008A0B0("", 0, 1);
  sub_10008A6A0(v1);
  swift_bridgeObjectRelease();
  sub_1000169B0();
  v2._countAndFlagsBits = sub_10008A0B0("", 0, 1);
  sub_10008A6A0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100009A54();
  sub_10008A0A0();
  return sub_1000896F0();
}

uint64_t sub_1000169B0()
{
  v1._countAndFlagsBits = sub_10008A760();
  sub_10008A0D0(v1);
  return swift_bridgeObjectRelease();
}

BOOL sub_1000169E8(char a1, char a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 1;
    }
    else {
      uint64_t v4 = 2;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1;
    }
    else {
      uint64_t v3 = 2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v4 == v3;
}

uint64_t sub_100016ABC()
{
  return sub_10008A750();
}

uint64_t sub_100016B68()
{
  return sub_10008A500();
}

unint64_t sub_100016BB4()
{
  uint64_t v2 = qword_1000A3630;
  if (!qword_1000A3630)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3630);
    return WitnessTable;
  }
  return v2;
}

BOOL sub_100016C34(char *a1, char *a2)
{
  return sub_1000169E8(*a1, *a2);
}

uint64_t sub_100016C58()
{
  return sub_100016B68();
}

uint64_t sub_100016C74()
{
  return sub_100016ABC();
}

void sub_100016C90(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  id v57 = a1;
  uint32_t v70 = 0;
  uint64_t v69 = 0;
  id v68 = 0;
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  uint64_t v64 = 0;
  unint64_t v65 = 0;
  uint64_t v54 = 0;
  uint64_t v49 = sub_1000895A0();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = v49 - 8;
  unint64_t v52 = (*(void *)(v50 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v49);
  int v53 = (char *)&v13 - v52;
  unint64_t v55 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3B40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v54);
  uint64_t v56 = (uint64_t)&v13 - v55;
  unint64_t v58 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = __chkstk_darwin(v57);
  uint64_t v59 = (uint64_t)&v13 - v58;
  unint64_t v60 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = (void *)__chkstk_darwin(v2);
  uint64_t v61 = (uint64_t)&v13 - v60;
  uint32_t v70 = (char *)&v13 - v60;
  uint64_t v69 = v4;
  id v62 = [v4 mailbox];
  if (!v62)
  {
    sub_1000173B8();
    uint64_t v45 = swift_allocError();
    unsigned char *v5 = 1;
    swift_willThrow();
    uint64_t v46 = v45;
LABEL_20:
    uint64_t v13 = v46;

    return;
  }
  id v47 = v62;
  uint64_t v43 = v62;
  id v68 = v62;
  id v6 = v62;
  id v44 = [v43 identifier];
  if (v44)
  {
    id v42 = v44;
    id v37 = v44;
    uint64_t v38 = sub_10008A080();
    uint64_t v39 = v7;

    uint64_t v40 = v38;
    uint64_t v41 = v39;
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v41 = 0;
  }
  uint64_t v35 = v41;
  uint64_t v36 = v40;
  if (!v41)
  {

    sub_1000173B8();
    uint64_t v32 = swift_allocError();
    *id v8 = 0;
    swift_willThrow();

    uint64_t v46 = v32;
    goto LABEL_20;
  }
  uint64_t v33 = v36;
  uint64_t v34 = v35;
  uint64_t v28 = v35;
  uint64_t v29 = v36;
  uint64_t v66 = v36;
  uint64_t v67 = v35;

  id v9 = v43;
  uint64_t v30 = sub_100017438(v43);
  unint64_t v31 = v10;
  if (v10 == 6)
  {
    sub_1000173B8();
    uint64_t v25 = swift_allocError();
    *Class v11 = 2;
    swift_willThrow();
    swift_bridgeObjectRelease();

    uint64_t v46 = v25;
    goto LABEL_20;
  }
  uint64_t v26 = v30;
  unint64_t v27 = v31;
  unint64_t v23 = v31;
  uint64_t v24 = v30;
  uint64_t v64 = v30;
  unint64_t v65 = v31;
  swift_bridgeObjectRetain();
  id v63 = [v57 mailbox];
  if (v63)
  {
    id v18 = &v63;
    id v19 = v63;
    id v12 = v63;
    sub_1000137A8(v18);
    uint64_t v20 = sub_10007E194();

    uint64_t v22 = v20;
  }
  else
  {
    uint64_t v21 = 0;
    sub_1000137A8(&v63);
    uint64_t v22 = v21;
  }
  uint64_t v16 = v22;
  id v17 = [v43 url];
  if (v17)
  {
    id v15 = v17;
    id v14 = v17;
    sub_100089590();
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v56, v53, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v56, 0, 1, v49);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v56, 1, 1, v49);
  }
  sub_100019420(v29, v28, v16, v24, v23, v56, v59);
  sub_10000E8F8(v59, v61);
  swift_bridgeObjectRelease();

  sub_10000E524(v61, v48);
  sub_100015540(v61);
}

unint64_t sub_1000173B8()
{
  uint64_t v2 = qword_1000A3638;
  if (!qword_1000A3638)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3638);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100017438(void *a1)
{
  id v1 = [a1 kind];
  if (v1)
  {
    id v3 = v1;
    char v2 = 1;
  }
  else
  {
    id v3 = 0;
    char v2 = 0;
  }
  if ((v2 & 1) == 0)
  {
    switch((unint64_t)v3)
    {
      case 0uLL:

        return 0;
      case 1uLL:
        uint64_t v20 = 0;
        unint64_t v21 = 0;
        goto LABEL_21;
      case 2uLL:
        uint64_t v20 = 0;
        unint64_t v21 = 1;
        goto LABEL_21;
      case 3uLL:
        uint64_t v20 = 0;
        unint64_t v21 = 2;
        goto LABEL_21;
      case 4uLL:
        uint64_t v20 = 0;
        unint64_t v21 = 3;
        goto LABEL_21;
      case 5uLL:
        uint64_t v20 = 0;
        unint64_t v21 = 4;
        goto LABEL_21;
      case 6uLL:
        uint64_t v20 = 0;
        unint64_t v21 = 5;
        goto LABEL_21;
      case 7uLL:
        id v16 = [a1 name];
        if (v16)
        {
          uint64_t v12 = sub_10008A080();
          unint64_t v13 = v4;

          uint64_t v14 = v12;
          unint64_t v15 = v13;
        }
        else
        {
          uint64_t v14 = 0;
          unint64_t v15 = 0;
        }
        id v5 = a1;
        if (v15)
        {
          uint64_t v18 = v14;
          unint64_t v19 = v15;
        }
        else
        {
          id v6 = a1;
          id v11 = [a1 displayString];
          uint64_t v18 = sub_10008A080();
          unint64_t v19 = v7;

          sub_100009A54();
        }

        uint64_t v20 = v18;
        unint64_t v21 = v19;
        goto LABEL_21;
      default:
        JUMPOUT(0);
    }
  }
  sub_10008A6F0();
  __break(1u);
LABEL_21:
  uint64_t v9 = v20;
  sub_1000154C0(v20, v21);

  sub_1000176FC((uint64_t)&v20);
  return v9;
}

uint64_t sub_1000176FC(uint64_t a1)
{
  if (*(void *)(a1 + 8) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_100017748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v74 = a4;
  uint64_t v94 = a1;
  uint64_t v93 = a2;
  unint64_t v92 = a3;
  uint64_t v83 = 0;
  id v76 = sub_1000167D0;
  uint64_t v77 = sub_1000167D0;
  uint64_t v111 = 0;
  uint64_t v110 = 0;
  uint64_t v108 = 0;
  uint64_t v109 = 0;
  char v105 = 0;
  uint64_t v103 = 0;
  uint64_t v104 = 0;
  uint64_t v78 = sub_1000895A0();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = v78 - 8;
  unint64_t v81 = (*(void *)(v79 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v78);
  uint64_t v82 = (char *)v30 - v81;
  unint64_t v84 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3B40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v83);
  uint64_t v85 = (uint64_t)v30 - v84;
  unint64_t v86 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v87 = (char *)v30 - v86;
  unint64_t v88 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = __chkstk_darwin(v6);
  id v89 = (char *)v30 - v88;
  unint64_t v90 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  uint64_t v91 = (uint64_t)v30 - v90;
  unint64_t v95 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = __chkstk_darwin(v94);
  uint64_t v96 = (uint64_t)v30 - v95;
  unint64_t v97 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v98 = (uint64_t)v30 - v97;
  unint64_t v99 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v100 = (uint64_t)v30 - v99;
  uint64_t v111 = (char *)v30 - v99;
  uint64_t v110 = v14;
  uint64_t v108 = v15;
  uint64_t v109 = v16;
  if (!v16)
  {
    id v65 = (id)NSStringFromEMSmartMailboxType();
    uint64_t v66 = sub_10008A080();
    uint64_t v67 = v17;
    uint64_t v101 = v94;
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    uint64_t v69 = sub_100009334(&qword_1000A3640);
    unint64_t v70 = sub_100015650();
    unint64_t v18 = sub_1000183EC();
    uint64_t v19 = v75;
    uint64_t v20 = sub_10001D15C((void (*)(char *, char *))v76, KeyPath, v69, v70, (uint64_t)&type metadata for Never, v18, (uint64_t)&protocol witness table for Never, v71);
    uint64_t v72 = v19;
    uint64_t v73 = v20;
    if (!v19)
    {
      uint64_t v63 = v73;
      swift_release();
      swift_release();
      sub_1000154C0(v93, v92);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v91, 1, 1, v78);
      sub_100019420(v66, v67, v63, v93, v92, v91, v98);

      sub_10000E8F8(v98, v100);
      uint64_t v64 = v72;
LABEL_28:
      v30[2] = v64;
      sub_10000E524(v100, v74);
      sub_100015500(v93, v92);
      swift_bridgeObjectRelease();
      return sub_100015540(v100);
    }
    __break(1u);
    goto LABEL_30;
  }
  if (v92 != 1 && v92 - 2 <= 3)
  {
    sub_100014514();
    uint64_t v31 = swift_allocError();
    *uint64_t v28 = 3;
    swift_willThrow();
    uint64_t v43 = v31;
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v61 = &v106;
  uint64_t v106 = v94;
  uint64_t v59 = sub_100009334(&qword_1000A3640);
  unint64_t v60 = sub_1000183EC();
  sub_10008A320();
  sub_10000ADA0();
  id v62 = v107;
  if (!v107) {
    goto LABEL_26;
  }
  unint64_t v58 = v62;
  id v57 = v62;
  char v105 = v62;
  sub_100018470();
  if (sub_10008A1C0() != 1)
  {

LABEL_26:
    sub_100014514();
    uint64_t v32 = swift_allocError();
    *unint64_t v27 = 4;
    swift_willThrow();
    uint64_t v43 = v32;
    goto LABEL_31;
  }
  id v55 = [v57 objectID];
  id v56 = [v55 url];
  if (v56)
  {
    id v54 = v56;
    id v53 = v56;
    sub_100089590();
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v87, v82, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v87, 0, 1, v78);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v87, 1, 1, v78);
  }
  sub_1000184D8(v87, v89);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v89, 1, v78) == 1)
  {
    uint64_t v50 = 0;
    sub_100018600((uint64_t)v89);
    uint64_t v51 = v50;
    uint64_t v52 = v50;
  }
  else
  {
    uint64_t v48 = sub_100089580();
    uint64_t v49 = v22;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v89, v78);
    uint64_t v51 = v48;
    uint64_t v52 = v49;
  }
  uint64_t v46 = v52;
  uint64_t v47 = v51;
  if (v52)
  {
    uint64_t v44 = v47;
    uint64_t v45 = v46;
    uint64_t v37 = v46;
    uint64_t v38 = v47;
    uint64_t v103 = v47;
    uint64_t v104 = v46;
    uint64_t v102 = v94;
    uint64_t v39 = swift_getKeyPath();
    swift_retain();
    unint64_t v24 = sub_100015650();
    uint64_t v25 = v75;
    uint64_t v26 = sub_10001D15C((void (*)(char *, char *))v77, v39, v59, v24, (uint64_t)&type metadata for Never, v60, (uint64_t)&protocol witness table for Never, v71);
    uint64_t v40 = v25;
    uint64_t v41 = v26;
    if (!v25)
    {
      uint64_t v35 = v41;
      swift_release();
      swift_release();
      sub_1000154C0(v93, v92);
      id v36 = [v57 externalURL];
      if (v36)
      {
        id v34 = v36;
        id v33 = v36;
        sub_100089590();
        (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v85, v82, v78);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v85, 0, 1, v78);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v85, 1, 1, v78);
      }
      sub_100019420(v38, v37, v35, v93, v92, v85, v96);
      sub_10000E8F8(v96, v100);

      uint64_t v64 = v40;
      goto LABEL_28;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_100014514();
  uint64_t v42 = swift_allocError();
  unsigned char *v23 = 3;
  swift_willThrow();

  uint64_t v43 = v42;
LABEL_31:
  v30[1] = v43;
  sub_100015500(v93, v92);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1000183EC()
{
  uint64_t v2 = qword_1000A3648;
  if (!qword_1000A3648)
  {
    sub_1000096C0(&qword_1000A3640);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3648);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100018470()
{
  uint64_t v2 = qword_1000A3650;
  if (!qword_1000A3650)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3650);
    return ObjCClassMetadata;
  }
  return v2;
}

void *sub_1000184D8(const void *a1, void *a2)
{
  uint64_t v6 = sub_1000895A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    uint64_t v2 = sub_100009334(&qword_1000A3B40);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

uint64_t sub_100018600(uint64_t a1)
{
  uint64_t v3 = sub_1000895A0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return a1;
}

const char *sub_1000186B0()
{
  return "objectID";
}

void sub_1000186BC(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  id v2 = *a1;
  *a2 = [v3 objectID];
}

void sub_100018720(id *a1@<X0>, void *a2@<X8>)
{
}

id *sub_100018738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v36 = a1;
  uint64_t v35 = a2;
  uint64_t v48 = 0;
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  uint64_t v37 = sub_100089550();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = v37 - 8;
  unint64_t v40 = (*(void *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = __chkstk_darwin(v36);
  uint64_t v41 = (char *)&v19 - v40;
  unint64_t v42 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v43 = (char *)&v19 - v42;
  uint64_t v48 = (char *)&v19 - v42;
  uint64_t v46 = v5;
  uint64_t v47 = v6;
  uint64_t v44 = v6;
  if (v6)
  {
    uint64_t v8 = v6;
    char v7 = 1;
  }
  else
  {
    uint64_t v8 = 0;
    char v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    switch(v8)
    {
      case 0:
        id v33 = (void *)MFCombinedMailboxAllInbox;
        id v9 = MFCombinedMailboxAllInbox;
        id v45 = v33;
        goto LABEL_12;
      case 1:
        break;
      case 2:
        uint64_t v32 = (void *)MFCombinedMailboxFlagged;
        id v10 = MFCombinedMailboxFlagged;
        id v45 = v32;
        goto LABEL_12;
      case 3:
        uint64_t v31 = (void *)MFCombinedMailboxUnread;
        id v11 = MFCombinedMailboxUnread;
        id v45 = v31;
        goto LABEL_12;
      case 4:
        uint64_t v30 = (void *)MFCombinedMailboxVIP;
        id v12 = MFCombinedMailboxVIP;
        id v45 = v30;
        goto LABEL_12;
      case 5:
        uint64_t v29 = (void *)MFCombinedMailboxToday;
        id v13 = MFCombinedMailboxToday;
        id v45 = v29;
        goto LABEL_12;
      default:
        JUMPOUT(0);
    }
  }
  id v45 = 0;
LABEL_12:
  sub_100089540();
  uint64_t v26 = (void *)EMAppleMailboxURLScheme;
  id v14 = EMAppleMailboxURLScheme;
  uint64_t v27 = sub_100018A7C(v26);
  uint64_t v28 = v15;

  sub_100089530();
  if (v45)
  {
    unint64_t v21 = v45;
    id v16 = v45;
    uint64_t v22 = sub_100018A7C(v21);
    uint64_t v23 = v17;

    uint64_t v24 = v22;
    uint64_t v25 = v23;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  sub_100089520();
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v43, v37);
  sub_100089510();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v19 = v38 + 8;
  v20(v41, v37);
  v20(v43, v37);
  uint64_t result = &v45;
  sub_1000137A8(&v45);
  return result;
}

uint64_t sub_100018A7C(void *a1)
{
  id v1 = a1;
  uint64_t v4 = sub_10008A080();

  return v4;
}

uint64_t sub_100018ACC(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 <= 0xFD) {
      goto LABEL_15;
    }
    unsigned int v7 = ((a2 + 2) >> 8) + 1;
    int v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000) {
        int v2 = 4;
      }
      else {
        int v2 = 2;
      }
      int v8 = v2;
    }
    if (v8 == 1) {
      int v6 = a1[1];
    }
    else {
      int v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    }
    if (v6)
    {
      int v5 = (*a1 | ((v6 - 1) << 8)) + 253;
    }
    else
    {
LABEL_15:
      int v3 = *a1 - 3;
      if (v3 < 0) {
        int v3 = -1;
      }
      int v5 = v3;
    }
  }
  else
  {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_100018C7C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  int v7 = 0;
  if (a3 > 0xFD)
  {
    unsigned int v5 = ((a3 + 2) >> 8) + 1;
    int v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000) {
        int v3 = 4;
      }
      else {
        int v3 = 2;
      }
      int v6 = v3;
    }
    int v7 = v6;
  }
  if (a2 > 0xFD)
  {
    unsigned int v4 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }
      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }
  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }
      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }
    if (a2) {
      *uint64_t result = a2 + 2;
    }
  }
  return result;
}

void *_s5ErrorOMa()
{
  return &unk_10009AC00;
}

unint64_t sub_100018ED4()
{
  return sub_100018EEC();
}

unint64_t sub_100018EEC()
{
  uint64_t v2 = qword_1000A3658;
  if (!qword_1000A3658)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3658);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100018F6C()
{
  id v9 = (void *)sub_100019B94();
  if (v9)
  {
    id v5 = [v9 ef_publicDescription];
    sub_10008A080();
    uint64_t v6 = v0;

    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (!v7)
  {
    sub_10008A0B0("<nil>", 5uLL, 1);
    sub_100009A54();
  }
  sub_10008A6B0();
  v10._countAndFlagsBits = sub_10008A0B0("id:", 3uLL, 1);
  sub_10008A6A0(v10);
  swift_bridgeObjectRelease();
  sub_10008A690();
  v11._countAndFlagsBits = sub_10008A0B0(", name:", 7uLL, 1);
  sub_10008A6A0(v11);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v8 + 24);
  unint64_t v3 = *(void *)(v8 + 32);
  sub_1000154C0(v2, v3);
  sub_10001AB18(v2, v3);
  sub_100015500(v2, v3);
  sub_10008A690();
  sub_100009A54();
  v12._countAndFlagsBits = sub_10008A0B0("", 0, 1);
  sub_10008A6A0(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100009A54();
  uint64_t v4 = sub_10008A0A0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10001925C()
{
  uint64_t v7 = *(void *)(v0 + 24);
  unint64_t v8 = *(void *)(v0 + 32);
  sub_1000154C0(v7, v8);
  if (v8)
  {
    if (v8 == 1)
    {
      sub_100015500(v7, 1uLL);
    }
    else
    {
      if (v8 - 2 <= 3)
      {
        sub_100015500(v7, v8);
        char v2 = 1;
        return v2 & 1;
      }
      sub_100015500(v7, v8);
    }
  }
  else
  {
    sub_100015500(v7, 0);
  }
  uint64_t v5 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_100009334(&qword_1000A35C8);
    sub_10001AE7C();
    char v3 = sub_10008A340();
    sub_10000ADA0();
    swift_bridgeObjectRelease();
    char v4 = v3 & 1;
  }
  else
  {
    char v4 = 2;
  }
  if (v4 == 2) {
    char v9 = 1;
  }
  else {
    char v9 = v4 & 1;
  }
  char v2 = v9 ^ 1;
  return v2 & 1;
}

uint64_t sub_100019420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v25 = a7;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v37 = a4;
  unint64_t v36 = a5;
  uint64_t v35 = (const void *)a6;
  uint64_t v49 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t v46 = 0;
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  uint64_t v43 = 0;
  uint64_t v7 = sub_100009334(&qword_1000A3B40);
  unint64_t v26 = (*(void *)(*(void *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)&v24 - v26;
  unint64_t v27 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v26);
  uint64_t v28 = (char *)&v24 - v27;
  uint64_t v38 = 0;
  uint64_t v29 = type metadata accessor for Mailbox();
  unint64_t v30 = (*(void *)(*(void *)(v29 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = __chkstk_darwin(v32);
  uint64_t v34 = (uint64_t *)((char *)&v24 - v30);
  uint64_t v49 = (char *)&v24 - v30;
  uint64_t v47 = v10;
  uint64_t v48 = v9;
  uint64_t v46 = v11;
  uint64_t v44 = v12;
  uint64_t v45 = v13;
  uint64_t v43 = v14;
  swift_bridgeObjectRetain();
  uint64_t v15 = v32;
  id v16 = v34;
  *uint64_t v34 = v31;
  v16[1] = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = v37;
  unint64_t v18 = v36;
  v34[2] = v33;
  sub_1000154C0(v17, v18);
  uint64_t v19 = v34;
  uint64_t v20 = v35;
  unint64_t v21 = v36;
  uint64_t v22 = v39;
  v34[3] = v37;
  v19[4] = v21;
  sub_10001AF78(v20, v22);
  sub_1000154C0(v37, v36);
  uint64_t v40 = sub_1000895A0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = v40 - 8;
  if ((*(unsigned int (**)(char *, uint64_t))(v41 + 48))(v39, 1) == 1)
  {
    sub_100018738(v37, v36, (uint64_t)v28);
    sub_100018600((uint64_t)v39);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v28, v39, v40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v28, 0, 1, v40);
  }
  sub_100015500(v37, v36);
  sub_1000184D8(v28, (char *)v34 + *(int *)(v29 + 28));
  sub_10000E524((uint64_t)v34, v25);
  sub_100018600((uint64_t)v35);
  sub_100015500(v37, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_100015540((uint64_t)v34);
}

uint64_t sub_10001973C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1000154C0(a1, a2);
  sub_1000154C0(a3, a4);
  if (a2)
  {
    unint64_t v5 = a2;
    char v4 = 1;
  }
  else
  {
    unint64_t v5 = 0;
    char v4 = 0;
  }
  if (v4)
  {
    if (a4 <= 5)
    {
LABEL_26:
      sub_100015500(a1, a2);
      sub_100015500(a3, a4);
      char v7 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_10008A0C0())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100015500(a1, a2);
        sub_100015500(a3, a4);
        char v7 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100015500(a1, a2);
        sub_100015500(a3, a4);
        char v7 = 0;
      }
    }
  }
  else
  {
    switch(v5)
    {
      case 0uLL:
        if (a4) {
          goto LABEL_26;
        }
        sub_100015500(a1, a2);
        sub_100015500(a3, 0);
        char v7 = 1;
        break;
      case 1uLL:
        if (a4 != 1) {
          goto LABEL_26;
        }
        sub_100015500(a1, a2);
        sub_100015500(a3, 1uLL);
        char v7 = 1;
        break;
      case 2uLL:
        if (a4 != 2) {
          goto LABEL_26;
        }
        sub_100015500(a1, a2);
        sub_100015500(a3, 2uLL);
        char v7 = 1;
        break;
      case 3uLL:
        if (a4 != 3) {
          goto LABEL_26;
        }
        sub_100015500(a1, a2);
        sub_100015500(a3, 3uLL);
        char v7 = 1;
        break;
      case 4uLL:
        if (a4 != 4) {
          goto LABEL_26;
        }
        sub_100015500(a1, a2);
        sub_100015500(a3, 4uLL);
        char v7 = 1;
        break;
      case 5uLL:
        if (a4 != 5) {
          goto LABEL_26;
        }
        sub_100015500(a1, a2);
        sub_100015500(a3, 5uLL);
        char v7 = 1;
        break;
      default:
        JUMPOUT(0);
    }
  }
  return v7 & 1;
}

uint64_t sub_100019B60(uint64_t a1, uint64_t a2)
{
  return sub_10001973C(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1;
}

uint64_t sub_100019B94()
{
  uint64_t v3 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_100009334(&qword_1000A35C8);
  sub_10001AE7C();
  sub_10008A320();
  sub_10000ADA0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100019C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v28 = a7;
  uint64_t v26 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  unint64_t v24 = a5;
  uint64_t v29 = a6;
  uint64_t v37 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v34 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v7 = sub_100009334(&qword_1000A3B40);
  unint64_t v17 = (*(void *)(*(void *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v7);
  uint64_t v25 = (uint64_t)&v16 - v17;
  uint64_t v19 = *(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64);
  unint64_t v18 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = __chkstk_darwin(v29);
  uint64_t v27 = (uint64_t)&v16 - v18;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (const void *)__chkstk_darwin(v8);
  uint64_t v30 = (uint64_t)&v16 - v20;
  uint64_t v37 = (char *)&v16 - v20;
  uint64_t v35 = v26;
  uint64_t v36 = v10;
  uint64_t v34 = v11;
  uint64_t v32 = v12;
  uint64_t v33 = v13;
  uint64_t v31 = v9;
  sub_10001AF78(v9, v14);
  sub_100019420(v26, v21, v22, v23, v24, v25, v27);
  sub_10000E8F8(v27, v30);
  sub_10000E524(v30, v28);
  sub_100018600(v29);
  return sub_100015540(v30);
}

uint64_t sub_100019E2C()
{
  uint64_t v0 = sub_100009334(&qword_1000A3B40);
  unint64_t v5 = (*(void *)(*(void *)(v0 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v0);
  uint64_t v13 = (uint64_t)&v4 - v5;
  uint64_t v12 = 0;
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v6 = qword_1000A63E0;
  sub_1000030B8(v7, qword_1000A63E0);
  uint64_t v9 = sub_100003160(v7, (uint64_t)v6);
  unsigned int v8 = 1;
  uint64_t v10 = sub_10008A0B0("VIP", 3uLL, 1);
  uint64_t v11 = v1;
  uint64_t v2 = sub_1000895A0();
  (*(void (**)(uint64_t, void))(*(void *)(v2 - 8) + 56))(v13, v8);
  return sub_100019420(v10, v11, v12, v12, 4uLL, v13, v9);
}

uint64_t sub_100019F60()
{
  if (qword_1000A2D80 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Mailbox();
  return sub_100003160(v0, (uint64_t)qword_1000A63E0);
}

uint64_t sub_100019FD0()
{
  uint64_t v0 = sub_100009334(&qword_1000A3B40);
  unint64_t v5 = (*(void *)(*(void *)(v0 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v0);
  uint64_t v13 = (uint64_t)&v4 - v5;
  unint64_t v12 = 0;
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v6 = qword_1000A63F8;
  sub_1000030B8(v7, qword_1000A63F8);
  uint64_t v9 = sub_100003160(v7, (uint64_t)v6);
  unsigned int v8 = 1;
  uint64_t v10 = sub_10008A0B0("ALL_INBOXES", 0xBuLL, 1);
  uint64_t v11 = v1;
  uint64_t v2 = sub_1000895A0();
  (*(void (**)(uint64_t, void))(*(void *)(v2 - 8) + 56))(v13, v8);
  return sub_100019420(v10, v11, v12, v12, v12, v13, v9);
}

uint64_t sub_10001A100()
{
  if (qword_1000A2D88 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Mailbox();
  return sub_100003160(v0, (uint64_t)qword_1000A63F8);
}

uint64_t sub_10001A170()
{
  uint64_t v66 = *(void *)(v0 + 24);
  unint64_t v67 = *(void *)(v0 + 32);
  sub_1000154C0(v66, v67);
  if (v67)
  {
    unint64_t v2 = v67;
    char v1 = 1;
  }
  else
  {
    unint64_t v2 = 0;
    char v1 = 0;
  }
  if (v1) {
    return v66;
  }
  switch(v2)
  {
    case 0uLL:
      uint64_t v55 = sub_10008A0B0("ALL_INBOXES", 0xBuLL, 1);
      unint64_t v58 = v8;
      sub_10008A0B0("Title of the 'All Inboxes' mailbox displayed in the widget header", 0x41uLL, 1);
      uint64_t v57 = v9;
      id v56 = (objc_class *)sub_10001A710();
      uint64_t v10 = sub_10001A750();
      v11.super.Class isa = v56;
      v81._countAndFlagsBits = v10;
      v69._countAndFlagsBits = v55;
      v81._object = v12;
      v69._object = v58;
      v34._countAndFlagsBits = v57;
      v75.value._object = 0;
      v75.value._countAndFlagsBits = 0;
      uint64_t v59 = sub_100089560(v69, v75, v11, v81, v34);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = v59;
      break;
    case 1uLL:
      uint64_t v50 = sub_10008A0B0("INBOX", 5uLL, 1);
      id v53 = v13;
      sub_10008A0B0("Title of the 'Inbox' mailbox displayed in the widget header", 0x3BuLL, 1);
      uint64_t v52 = v14;
      uint64_t v51 = (objc_class *)sub_10001A710();
      uint64_t v15 = sub_10001A750();
      v16.super.Class isa = v51;
      v82._countAndFlagsBits = v15;
      v70._countAndFlagsBits = v50;
      v82._object = v17;
      v70._object = v53;
      v34._countAndFlagsBits = v52;
      v76.value._object = 0;
      v76.value._countAndFlagsBits = 0;
      uint64_t v54 = sub_100089560(v70, v76, v16, v82, v34);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = v54;
      break;
    case 2uLL:
      uint64_t v45 = sub_10008A0B0("FLAGGED", 7uLL, 1);
      uint64_t v48 = v18;
      sub_10008A0B0("Title of the 'Flag' mailbox displayed in the widget header", 0x3AuLL, 1);
      uint64_t v47 = v19;
      uint64_t v46 = (objc_class *)sub_10001A710();
      uint64_t v20 = sub_10001A750();
      v21.super.Class isa = v46;
      v83._countAndFlagsBits = v20;
      v71._countAndFlagsBits = v45;
      v83._object = v22;
      v71._object = v48;
      v34._countAndFlagsBits = v47;
      v77.value._object = 0;
      v77.value._countAndFlagsBits = 0;
      uint64_t v49 = sub_100089560(v71, v77, v21, v83, v34);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = v49;
      break;
    case 3uLL:
      uint64_t v40 = sub_10008A0B0("UNREAD", 6uLL, 1);
      uint64_t v43 = v23;
      sub_10008A0B0("Title of the 'Unread' mailbox displayed in the widget header", 0x3CuLL, 1);
      uint64_t v42 = v24;
      uint64_t v41 = (objc_class *)sub_10001A710();
      uint64_t v25 = sub_10001A750();
      v26.super.Class isa = v41;
      v84._countAndFlagsBits = v25;
      v72._countAndFlagsBits = v40;
      v84._object = v27;
      v72._object = v43;
      v34._countAndFlagsBits = v42;
      v78.value._object = 0;
      v78.value._countAndFlagsBits = 0;
      uint64_t v44 = sub_100089560(v72, v78, v26, v84, v34);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = v44;
      break;
    case 4uLL:
      uint64_t v60 = sub_10008A0B0("VIP", 3uLL, 1);
      uint64_t v63 = v3;
      sub_10008A0B0("Title of the 'VIP' mailbox displayed in the widget header", 0x39uLL, 1);
      uint64_t v62 = v4;
      uint64_t v61 = (objc_class *)sub_10001A710();
      uint64_t v5 = sub_10001A750();
      v6.super.Class isa = v61;
      v80._countAndFlagsBits = v5;
      v68._countAndFlagsBits = v60;
      v80._object = v7;
      v68._object = v63;
      v34._countAndFlagsBits = v62;
      v74.value._object = 0;
      v74.value._countAndFlagsBits = 0;
      uint64_t v64 = sub_100089560(v68, v74, v6, v80, v34);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = v64;
      break;
    case 5uLL:
      uint64_t v35 = sub_10008A0B0("TODAY", 5uLL, 1);
      uint64_t v38 = v28;
      sub_10008A0B0("Title of the 'Today' mailbox displayed in the widget header", 0x3BuLL, 1);
      uint64_t v37 = v29;
      uint64_t v36 = (objc_class *)sub_10001A710();
      uint64_t v30 = sub_10001A750();
      v31.super.Class isa = v36;
      v85._countAndFlagsBits = v30;
      v73._countAndFlagsBits = v35;
      v85._object = v32;
      v73._object = v38;
      v34._countAndFlagsBits = v37;
      v79.value._object = 0;
      v79.value._countAndFlagsBits = 0;
      uint64_t v39 = sub_100089560(v73, v79, v31, v85, v34);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = v39;
      break;
    default:
      JUMPOUT(0);
  }
  return v65;
}

id sub_10001A710()
{
  id v0 = [self mainBundle];

  return v0;
}

uint64_t sub_10001A750()
{
  return sub_10008A0B0("", 0, 1);
}

id sub_10001A77C()
{
  sub_10008A420();
  sub_10008A440();
  sub_10008A430();
  id result = sub_10001A7D4();
  qword_1000A3660 = (uint64_t)result;
  return result;
}

id sub_10001A7D4()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_10001CA3C();
}

uint64_t *sub_10001A814()
{
  if (qword_1000A2D90 != -1) {
    swift_once();
  }
  return &qword_1000A3660;
}

uint64_t sub_10001A878()
{
  uint64_t v33 = 0;
  id v32 = 0;
  char v31 = 0;
  uint64_t v1 = type metadata accessor for Mailbox();
  unint64_t v29 = (*(void *)(*(void *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  uint64_t v30 = (uint64_t)&v7 - v29;
  uint64_t v33 = v0;
  if (EMBlackPearlIsFeatureEnabled())
  {
    uint64_t v26 = v28[3];
    unint64_t v25 = v28[4];
    sub_1000154C0(v26, v25);
    int v27 = sub_10001973C(v26, v25, 0, 1uLL);
    sub_100015500(v26, v25);
    sub_10000E524((uint64_t)v28, v30);
    if (v27)
    {
      int v24 = 1;
    }
    else
    {
      uint64_t v22 = *(void *)(v30 + 24);
      unint64_t v21 = *(void *)(v30 + 32);
      sub_1000154C0(v22, v21);
      int v23 = sub_10001973C(v22, v21, 0, 0);
      sub_100015500(v22, v21);
      int v24 = v23;
    }
    int v20 = v24;
    sub_100015540(v30);
    if (v20)
    {
      type metadata accessor for MailboxConfiguration();
      uint64_t v7 = *v28;
      uint64_t v8 = v28[1];
      swift_bridgeObjectRetain();
      int v15 = 1;
      id v17 = sub_10001CA84(v7, v8, 1);
      id v32 = v17;
      id v14 = (id)*sub_10001A814();
      id v2 = v14;
      uint64_t v11 = sub_100009334(&qword_1000A3680);
      uint64_t v10 = sub_10008A6C0();
      uint64_t v9 = v3;
      id v4 = v17;
      uint64_t v5 = v10;
      *uint64_t v9 = v17;
      sub_100007A04();
      uint64_t v12 = v5;
      Class isa = sub_10008A180().super.isa;
      swift_bridgeObjectRelease();
      unsigned int v16 = [v14 isBucketBarHiddenForMailboxes:isa];

      char v31 = v16 & 1;
      int v18 = v16 ^ v15;

      int v19 = v18;
    }
    else
    {
      int v19 = 0;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_10001AB18(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = a2;
    char v2 = 1;
  }
  else
  {
    uint64_t v3 = 0;
    char v2 = 0;
  }
  if (v2)
  {
    swift_bridgeObjectRetain();
    id v15 = [self currentDevice];
    unsigned __int8 v16 = [v15 isInternal];

    if (v16)
    {
      id v10 = self;
      swift_bridgeObjectRetain();
      NSString v11 = sub_10008A070();
      swift_bridgeObjectRelease();
      id v12 = [v10 partiallyRedactedStringForString:v11];

      uint64_t v13 = sub_10008A080();
      uint64_t v14 = v13;
    }
    else
    {
      id v6 = self;
      swift_bridgeObjectRetain();
      NSString v7 = sub_10008A070();
      swift_bridgeObjectRelease();
      id v8 = [v6 fullyRedactedStringForString:v7];

      uint64_t v9 = sub_10008A080();
      uint64_t v14 = v9;
    }
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    switch(v3)
    {
      case 0:
        uint64_t v5 = sub_10008A0B0("All Inboxes", 0xBuLL, 1);
        break;
      case 1:
        uint64_t v5 = sub_10008A0B0("Inbox", 5uLL, 1);
        break;
      case 2:
        uint64_t v5 = sub_10008A0B0("Flag", 4uLL, 1);
        break;
      case 3:
        uint64_t v5 = sub_10008A0B0("Unread", 6uLL, 1);
        break;
      case 4:
        uint64_t v5 = sub_10008A0B0("VIP", 3uLL, 1);
        break;
      case 5:
        uint64_t v5 = sub_10008A0B0("Today", 5uLL, 1);
        break;
      default:
        JUMPOUT(0);
    }
  }
  return v5;
}

unint64_t sub_10001AE7C()
{
  uint64_t v2 = qword_1000A3670;
  if (!qword_1000A3670)
  {
    sub_1000096C0(&qword_1000A35C8);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3670);
    return WitnessTable;
  }
  return v2;
}

uint64_t type metadata accessor for Mailbox()
{
  uint64_t v1 = qword_1000A36E0;
  if (!qword_1000A36E0) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

void *sub_10001AF78(const void *a1, void *a2)
{
  uint64_t v6 = sub_1000895A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    uint64_t v2 = sub_100009334(&qword_1000A3B40);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

uint64_t sub_10001B0A0()
{
  return sub_100018F6C();
}

uint64_t sub_10001B0B8(uint64_t a1)
{
  return sub_10007F7C0(a1, (uint64_t)&off_10009ACB0);
}

uint64_t sub_10001B0DC()
{
  return sub_10001AB18(*v0, v0[1]);
}

uint64_t sub_10001B0FC(uint64_t a1)
{
  return sub_10007F7C0(a1, (uint64_t)&off_10009ACA0);
}

unint64_t sub_10001B120(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v17 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v17 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    swift_retain();
    *(void *)a1 = v12;
    return *(void *)a1 + ((v17 + 16) & ~(unint64_t)v17);
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v10 = a2[1];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 8) = v10;
    uint64_t v11 = a2[2];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 16) = v11;
    if ((unint64_t)a2[4] <= 5)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    }
    else
    {
      *(void *)(a1 + 24) = a2[3];
      uint64_t v9 = a2[4];
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v9;
    }
    __dst = (void *)(a1 + *(int *)(a3 + 28));
    __src = (char *)a2 + *(int *)(a3 + 28);
    uint64_t v7 = sub_1000895A0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v8 + 48))(__src, 1))
    {
      uint64_t v3 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v8 + 16))(__dst, __src, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
    }
    return a1;
  }
}

uint64_t sub_10001B398(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = a1 + *(int *)(a2 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1);
  if (!result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return result;
}

uint64_t sub_10001B49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v11;
  uint64_t v13 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v13;
  if (*(void *)(a2 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v9 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v9;
  }
  __dst = (void *)(a1 + *(int *)(a3 + 28));
  __src = (void *)(a2 + *(int *)(a3 + 28));
  uint64_t v7 = sub_1000895A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v8 + 48))(__src, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 16))(__dst, __src, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_10001B684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v14 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v16;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    if (*(void *)(a2 + 32) <= 5uLL)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v11 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v11;
    }
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v12;
    swift_bridgeObjectRelease();
  }
  __dst = (void *)(a1 + *(int *)(a3 + 28));
  __src = (void *)(a2 + *(int *)(a3 + 28));
  uint64_t v8 = sub_1000895A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48);
  if (((unsigned int (*)(void *, uint64_t))v10)(__dst, 1))
  {
    if (v10(__src, 1, v8))
    {
      uint64_t v4 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(__dst, __src, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
    }
  }
  else if (v10(__src, 1, v8))
  {
    (*(void (**)(void *, uint64_t))(v9 + 8))(__dst, v8);
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v9 + 24))(__dst, __src, v8);
  }
  return a1;
}

uint64_t sub_10001BA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  __dst = (void *)(a1 + *(int *)(a3 + 28));
  __src = (void *)(a2 + *(int *)(a3 + 28));
  uint64_t v7 = sub_1000895A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v8 + 48))(__src, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(__dst, __src, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_10001BBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRelease();
  }
  __dst = (void *)(a1 + *(int *)(a3 + 28));
  __src = (void *)(a2 + *(int *)(a3 + 28));
  uint64_t v8 = sub_1000895A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48);
  if (((unsigned int (*)(void *, uint64_t))v10)(__dst, 1))
  {
    if (v10(__src, 1, v8))
    {
      uint64_t v4 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(__dst, __src, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
    }
  }
  else if (v10(__src, 1, v8))
  {
    (*(void (**)(void *, uint64_t))(v9 + 8))(__dst, v8);
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v9 + 40))(__dst, __src, v8);
  }
  return a1;
}

uint64_t sub_10001BF08()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_10001BF30(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    int v6 = -1;
    if (*(void *)(a1 + 8) < (unint64_t)&_mh_execute_header) {
      int v6 = *(void *)(a1 + 8);
    }
    return (v6 + 1);
  }
  else
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    if (a2 == *(_DWORD *)(*(void *)(v4 - 8) + 84)) {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v4);
    }
    else {
      __break(1u);
    }
  }
  return v5;
}

uint64_t sub_10001C058()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_10001C080(uint64_t result, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v4 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = a2 - 1;
  }
  else
  {
    uint64_t result = sub_100009334(&qword_1000A3B40);
    if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
      return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(v4 + *(int *)(a4 + 28), a2, a2, result);
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10001C17C()
{
  uint64_t v2 = sub_10001C274();
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return v2;
}

uint64_t sub_10001C274()
{
  uint64_t v4 = qword_1000A36F0;
  if (!qword_1000A36F0)
  {
    sub_1000895A0();
    unint64_t v3 = sub_10008A480();
    uint64_t v4 = v3;
    if (!v0)
    {
      unint64_t v1 = v3;
      atomic_store(v3, (unint64_t *)&qword_1000A36F0);
      return v1;
    }
  }
  return v4;
}

uint64_t sub_10001C31C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 8) <= 5uLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v3 = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t sub_10001C39C(uint64_t result)
{
  if (*(void *)(result + 8) > 5uLL) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10001C3E4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) <= 5uLL)
  {
    if (*(void *)(a2 + 8) <= 5uLL)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v3 = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      *(void *)(a1 + 8) = v3;
    }
  }
  else if (*(void *)(a2 + 8) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v4 = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 8) = v4;
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_10001C4EC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) <= 5uLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else if (*(void *)(a2 + 8) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_10001C5CC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFF9 && *(unsigned char *)(a1 + 16))
    {
      int v5 = *(_OWORD *)a1 + 2147483641;
    }
    else
    {
      int v4 = -1;
      if (*(void *)(a1 + 8) < (unint64_t)&_mh_execute_header) {
        int v4 = *(void *)(a1 + 8);
      }
      int v2 = v4 - 6;
      if (v4 - 6 < 0) {
        int v2 = -1;
      }
      int v5 = v2;
    }
  }
  else
  {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_10001C74C(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFF9;
  if (a2 > 0x7FFFFFF9)
  {
    *(_OWORD *)uint64_t result = a2 - 2147483642;
    if (a3 > 0x7FFFFFF9)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else
  {
    if (a3 > 0x7FFFFFF9)
    {
      if (v3) {
        *(unsigned char *)(result + 16) = 0;
      }
      else {
        __break(1u);
      }
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 5;
    }
  }
  return result;
}

uint64_t sub_10001C960(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A3728);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1, 6);
}

uint64_t sub_10001C9C0(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = sub_100009334(&qword_1000A3728);
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 56))(a1, a2, 6);
}

void *type metadata accessor for Mailbox.Configuration()
{
  return &unk_10009AC90;
}

id sub_10001CA3C()
{
  id v2 = [v0 initWithProvider:];
  swift_unknownObjectRelease();
  return v2;
}

id sub_10001CA84(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = objc_allocWithZone(v3);
  return sub_10001CE58(a1, a2, a3 & 1);
}

uint64_t sub_10001CB2C()
{
  id v2 = (char *)(v0 + OBJC_IVAR____TtC19MailWidgetExtension20MailboxConfiguration_isInboxMailbox);
  swift_beginAccess();
  char v3 = *v2;
  swift_endAccess();
  return v3 & 1;
}

uint64_t sub_10001CBE8(char a1)
{
  id v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC19MailWidgetExtension20MailboxConfiguration_isInboxMailbox);
  swift_beginAccess();
  *id v4 = a1 & 1;
  return swift_endAccess();
}

uint64_t sub_10001CCE8()
{
  id v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC19MailWidgetExtension20MailboxConfiguration_bucketBarConfigurationIdentifier);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  swift_endAccess();
  return v3;
}

uint64_t sub_10001CDB8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  int v5 = (void *)(v2 + OBJC_IVAR____TtC19MailWidgetExtension20MailboxConfiguration_bucketBarConfigurationIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

id sub_10001CE58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  char v16 = a3 & 1;
  id v4 = v3;
  id v5 = v3;
  id v19 = v3;
  swift_bridgeObjectRetain();
  int v6 = &v11[OBJC_IVAR____TtC19MailWidgetExtension20MailboxConfiguration_bucketBarConfigurationIdentifier];
  *(void *)int v6 = a1;
  *((void *)v6 + 1) = a2;

  v11[OBJC_IVAR____TtC19MailWidgetExtension20MailboxConfiguration_isInboxMailbox] = a3 & 1;
  v15.receiver = v19;
  v15.super_class = ObjectType;
  id v14 = [super init];
  id v7 = v14;
  id v19 = v14;
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_10001CF7C()
{
  if (!"MailWidgetExtension.MailboxConfiguration")
  {
    sub_10008A5A0();
    __break(1u);
  }
  uint64_t result = sub_10005D24C((uint64_t)"MailWidgetExtension.MailboxConfiguration", 40, (unint64_t)"init()", 6, 2, (unint64_t)"MailWidgetExtension/MailboxConfiguration-BlackPearlUI.swift", 59, 2, v1, 0xAuLL, 0xDuLL);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MailboxConfiguration()
{
  return self;
}

uint64_t sub_10001D110(void *a1)
{
  return sub_10001E1E8(a1);
}

uint64_t sub_10001D15C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v55 = a3;
  uint64_t v45 = a4;
  uint64_t v32 = a5;
  uint64_t v54 = a6;
  uint64_t v34 = a8;
  uint64_t v35 = "Fatal error";
  uint64_t v36 = "Index out of bounds";
  uint64_t v37 = "Swift/Collection.swift";
  uint64_t v38 = "Range requires lowerBound <= upperBound";
  uint64_t v39 = "Swift/Range.swift";
  uint64_t v40 = "Index out of range";
  uint64_t v70 = a3;
  uint64_t v69 = a4;
  uint64_t v68 = a5;
  uint64_t v41 = *(void *)(a5 - 8);
  uint64_t v42 = a5 - 8;
  unint64_t v43 = (*(void *)(v41 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(a1);
  uint64_t v44 = (char *)&v15 - v43;
  uint64_t v46 = 0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v49 = AssociatedTypeWitness - 8;
  unint64_t v50 = (*(void *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = __chkstk_darwin(v46);
  uint64_t v51 = (char *)&v15 - v50;
  unint64_t v52 = (*(void *)(*(void *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  id v53 = (char *)&v15 - v52;
  uint64_t v56 = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = v56 - 8;
  unint64_t v59 = (*(void *)(v57 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = __chkstk_darwin(v55);
  uint64_t v60 = (char *)&v15 - v59;
  unint64_t v61 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  uint64_t v62 = (char *)&v15 - v61;
  Swift::Int v63 = sub_10008A2F0();
  if (v63)
  {
    uint64_t v67 = sub_10008A550();
    uint64_t v29 = sub_10008A560();
    sub_10008A530(v63);
    uint64_t result = sub_10008A2E0();
    if (v63 >= 0)
    {
      uint64_t v27 = 0;
      for (uint64_t i = v33; ; uint64_t i = v18)
      {
        uint64_t v25 = i;
        uint64_t v26 = v27;
        if (v27 == v63) {
          goto LABEL_17;
        }
        if (v26 < 0 || v26 >= v63) {
          goto LABEL_16;
        }
        uint64_t v65 = v26;
        if (v63 < 0) {
          goto LABEL_15;
        }
        if (v26 >= v63) {
          break;
        }
        uint64_t v24 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          return result;
        }
        char v66 = 0;
        uint64_t v23 = v24;
LABEL_18:
        uint64_t v22 = v23;
        if (v66)
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v60, v62, v56);
          sub_10008A4F0();
          (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v56);
          uint64_t v19 = v67;
          swift_retain();
          swift_release();
          uint64_t v20 = v19;
          uint64_t v21 = v25;
          return v20;
        }
        uint64_t v17 = &v64;
        char v16 = (void (*)(void))sub_10008A360();
        (*(void (**)(char *))(v48 + 16))(v51);
        v16();
        uint64_t v14 = v25;
        v30(v51, v44);
        uint64_t v18 = v14;
        if (v14)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v51, AssociatedTypeWitness);
          (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v56);
          sub_10001F4C8();
          (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v34, v44, v32);
          return v15;
        }
        (*(void (**)(char *, uint64_t))(v48 + 8))(v51, AssociatedTypeWitness);
        sub_10008A540();
        sub_10008A300();
        uint64_t result = v18;
        uint64_t v27 = v22;
      }
      sub_10008A5A0();
      __break(1u);
LABEL_15:
      sub_10008A5A0();
      __break(1u);
LABEL_16:
      sub_10008A5C0();
      __break(1u);
LABEL_17:
      uint64_t v65 = 0;
      char v66 = 1;
      uint64_t v23 = v26;
      goto LABEL_18;
    }
    sub_10008A5A0();
    __break(1u);
  }
  uint64_t v20 = sub_10008A1A0();
  uint64_t v21 = v33;
  return v20;
}

void sub_10001DA98(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v70 = a1;
  uint64_t v69 = a2;
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  uint64_t v63 = 0;
  uint64_t v60 = (void (*)(char *, char *))sub_10001E64C;
  unint64_t v61 = sub_10001ECFC;
  uint64_t v94 = 0;
  uint64_t v93 = 0;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  uint64_t v90 = 0;
  id v89 = 0;
  id v88 = 0;
  uint64_t v62 = 0;
  id v79 = 0;
  uint64_t v64 = sub_100009334(&qword_1000A3768);
  unint64_t v65 = (*(void *)(*(void *)(v64 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  char v66 = (uint64_t *)((char *)v32 - v65);
  uint64_t v71 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v72 = v71;
  uint64_t v73 = *(void *)(v71 + 64);
  unint64_t v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = __chkstk_darwin(v70);
  uint64_t v75 = (uint64_t)v32 - v74;
  unint64_t v76 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v77 = (uint64_t)v32 - v76;
  uint64_t v94 = v7;
  uint64_t v93 = v8;
  uint64_t v91 = v9;
  uint64_t v92 = v10;
  uint64_t v90 = v4;
  id v78 = sub_10001E23C(v7);
  if (v78)
  {
    id v58 = v78;
    id v56 = v78;
    id v11 = v78;
    id v89 = v56;
    int v57 = sub_10008A2B0();
    sub_10000E524(v70, v77);
    if (v57)
    {
      int v55 = 0;
    }
    else
    {
      uint64_t v53 = *(void *)(v77 + 24);
      unint64_t v52 = *(void *)(v77 + 32);
      sub_1000154C0(v53, v52);
      int v54 = sub_10001973C(v53, v52, 0, 0);
      sub_100015500(v53, v52);
      int v55 = v54;
    }
    int v51 = v55;
    sub_100015540(v77);
    if ((v51 & 1) == 0)
    {

      goto LABEL_9;
    }
    uint64_t v12 = v62;
    uint64_t v46 = 0;
    unint64_t v45 = sub_10001F2D4();
    uint64_t v80 = v69;
    uint64_t v47 = sub_100009334(&qword_1000A3778);
    unint64_t v48 = sub_10001F33C();
    unint64_t v13 = sub_10001F3A4();
    uint64_t v50 = sub_10001D15C(v60, 0, v47, v48, (uint64_t)&type metadata for Never, v13, (uint64_t)&protocol witness table for Never, v49);
    if (!v12)
    {
      id v44 = sub_10001E70C();
      id v79 = v44;
      uint64_t v14 = sub_10008A6C0();
      id v15 = v44;
      uint64_t v43 = v14;
      uint64_t v42 = v16;
      *char v16 = v56;
      id v17 = v15;
      v42[1] = v44;
      sub_100007A04();
      id v18 = sub_100024450();
      id v19 = v89;
      id v89 = v18;

LABEL_9:
      sub_100009334((uint64_t *)&unk_1000A42F0);
      uint64_t v33 = 0;
      unint64_t v35 = sub_100018470();
      uint64_t v36 = v89;
      id v20 = v89;
      sub_10001E5E4();
      uint64_t v34 = sub_10008A6C0();
      uint64_t v21 = sub_10008A0B0("Widget.DaemonDataSource.Mailboxes", 0x21uLL, 1);
      id v41 = sub_1000244CC(v35, v36, v34, 8, v21, v22);
      id v88 = v41;
      id v40 = *(id *)(v59 + 16);
      id v23 = v40;
      swift_retain();
      sub_10000E524(v70, v75);
      unint64_t v37 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
      uint64_t v24 = swift_allocObject();
      uint64_t v25 = v68;
      unint64_t v26 = v37;
      uint64_t v27 = v24;
      uint64_t v28 = v75;
      uint64_t v38 = v27;
      *(void *)(v27 + 16) = v67;
      *(void *)(v27 + 24) = v25;
      sub_10000E8F8(v28, v27 + v26);
      unint64_t v86 = v61;
      uint64_t v87 = v38;
      aBlock = _NSConcreteStackBlock;
      int v82 = 1107296256;
      int v83 = 0;
      Swift::String v84 = sub_10001F148;
      Swift::String v85 = &unk_10009ACE8;
      uint64_t v39 = _Block_copy(&aBlock);
      swift_release();
      [v40 performQuery:v41 completionHandler:v39];
      _Block_release(v39);

      return;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    sub_100014514();
    v32[3] = 1;
    uint64_t v29 = swift_allocError();
    uint64_t v30 = v66;
    *uint64_t v31 = 3;
    uint64_t *v30 = v29;
    swift_storeEnumTagMultiPayload();
    v67(v66);
    sub_10001E494((uint64_t)v66);
    swift_release();
  }
}

uint64_t sub_10001E1E8(void *a1)
{
  id v2 = a1;
  *(void *)(v1 + 16) = a1;

  return v5;
}

id sub_10001E23C(uint64_t a1)
{
  uint64_t v9 = *(void *)(a1 + 24);
  unint64_t v10 = *(void *)(a1 + 32);
  sub_1000154C0(v9, v10);
  if (!v10)
  {
    sub_100015500(v9, 0);
    return [self predicateForMailboxType:7];
  }
  if (v10 == 1)
  {
    sub_100015500(v9, 1uLL);
    return [self predicateForMailboxType:7];
  }
  if (v10 - 2 <= 3)
  {
    sub_100015500(v9, v10);
    return 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10001F2D4();
    sub_10001F33C();
    sub_10008A6C0();
    uint64_t v6 = v1;
    *uint64_t v1 = [self predicateForMailboxType:0];
    id v3 = self;
    swift_bridgeObjectRetain();
    NSString v4 = sub_10008A070();
    swift_bridgeObjectRelease();
    id v5 = [v3 predicateForMailboxName:v4];

    v6[1] = v5;
    sub_100007A04();
    id v7 = sub_100024450();
    swift_bridgeObjectRelease();
    sub_100015500(v9, v10);
    return v7;
  }
}

uint64_t sub_10001E494(uint64_t a1)
{
  sub_100009334(&qword_1000A3768);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 32) > 5uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v2 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
    uint64_t v3 = sub_1000895A0();
    uint64_t v4 = *(void *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    }
  }
  return a1;
}

unint64_t sub_10001E5E4()
{
  uint64_t v2 = qword_1000A3770;
  if (!qword_1000A3770)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3770);
    return ObjCClassMetadata;
  }
  return v2;
}

id sub_10001E64C@<X0>(void *a1@<X8>)
{
  id v2 = self;
  swift_bridgeObjectRetain();
  NSString v3 = sub_10008A070();
  swift_bridgeObjectRelease();
  id v4 = [v2 predicateForMailboxAccountIdentifier:v3 topLevelOnly:0];

  id result = v4;
  *a1 = v4;
  return result;
}

id sub_10001E70C()
{
  sub_10001F33C();
  Class isa = sub_10008A180().super.isa;
  id v2 = [(id)swift_getObjCClassFromMetadata() orPredicateWithSubpredicates:isa];

  swift_bridgeObjectRelease();
  return v2;
}

void sub_10001E788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a1;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v22 = a5;
  uint64_t v33 = 0;
  uint64_t v31 = sub_10001F6B0;
  uint64_t v55 = 0;
  uint64_t v54 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  uint64_t v51 = 0;
  uint64_t v37 = sub_100089E00();
  uint64_t v34 = *(void *)(v37 - 8);
  uint64_t v35 = v37 - 8;
  unint64_t v18 = (*(void *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v36 = (char *)&v17 - v18;
  uint64_t v41 = sub_100089E20();
  uint64_t v38 = *(void *)(v41 - 8);
  uint64_t v39 = v41 - 8;
  unint64_t v19 = (*(void *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v33);
  id v40 = (char *)&v17 - v19;
  uint64_t v20 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v23 = v20;
  uint64_t v24 = *(void *)(v20 + 64);
  unint64_t v21 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v33);
  uint64_t v30 = (uint64_t)&v17 - v21;
  uint64_t v55 = v5;
  uint64_t v54 = v6;
  uint64_t v52 = v7;
  uint64_t v53 = v8;
  uint64_t v51 = v9;
  sub_1000095A4();
  id v43 = (id)sub_10008A3F0();
  swift_errorRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10000E524(v22, v30);
  unint64_t v29 = (*(unsigned __int8 *)(v23 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v26;
  uint64_t v12 = v27;
  uint64_t v13 = v28;
  unint64_t v14 = v29;
  id v15 = (void *)v10;
  uint64_t v16 = v30;
  uint64_t v32 = v15;
  v15[2] = v25;
  v15[3] = v11;
  v15[4] = v12;
  v15[5] = v13;
  sub_10000E8F8(v16, (uint64_t)v15 + v14);
  uint64_t v49 = v31;
  uint64_t v50 = v32;
  aBlock = _NSConcreteStackBlock;
  int v45 = 1107296256;
  int v46 = 0;
  uint64_t v47 = sub_10000B378;
  unint64_t v48 = &unk_10009AD38;
  uint64_t v42 = _Block_copy(&aBlock);
  swift_release();
  sub_10000739C();
  sub_1000073B4();
  sub_10008A400();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v41);
  _Block_release(v42);
}

uint64_t sub_10001EB50()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 32) & ~v1;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

void sub_10001ECFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Mailbox();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = v2
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));

  sub_10001E788(a1, a2, v4, v5, v6);
}

uint64_t sub_10001ED88(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  id v44 = 0;
  uint64_t v43 = 0;
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  uint64_t v40 = 0;
  uint64_t v39 = 0;
  uint64_t v38 = 0;
  uint64_t v25 = 0;
  uint64_t v37 = 0;
  uint64_t v36 = 0;
  uint64_t v5 = type metadata accessor for Mailbox();
  unint64_t v26 = (*(void *)(*(void *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  uint64_t v27 = (uint64_t)v16 - v26;
  id v44 = (char *)v16 - v26;
  uint64_t v32 = sub_100009334(&qword_1000A3768);
  unint64_t v33 = (*(void *)(*(void *)(v32 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = __chkstk_darwin(v35);
  uint64_t v34 = (void *)((char *)v16 - v33);
  uint64_t v43 = v6;
  uint64_t v41 = v7;
  uint64_t v42 = v8;
  uint64_t v40 = v9;
  uint64_t v39 = v10;
  swift_errorRetain();
  if (v35)
  {
    uint64_t v24 = v35;
    uint64_t v22 = v35;
    uint64_t v36 = v35;
    swift_retain();
    swift_errorRetain();
    *uint64_t v34 = v22;
    swift_storeEnumTagMultiPayload();
    v28(v34);
    sub_10001E494((uint64_t)v34);
    swift_release();
    return swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    if (v30)
    {
      uint64_t v23 = v30;
      uint64_t v15 = v25;
      uint64_t v17 = v30;
      uint64_t v38 = v30;
      swift_bridgeObjectRetain();
      uint64_t v18 = *(void *)(v31 + 24);
      unint64_t v19 = *(void *)(v31 + 32);
      sub_1000154C0(v18, v19);
      sub_100017748(v17, v18, v19, v27);
      uint64_t v20 = v15;
      if (v15)
      {
        v16[0] = v20;
        swift_errorRetain();
        uint64_t v37 = v16[0];
        swift_retain();
        swift_errorRetain();
        *uint64_t v34 = v16[0];
        swift_storeEnumTagMultiPayload();
        v28(v34);
        sub_10001E494((uint64_t)v34);
        swift_release();
        swift_errorRelease();
        swift_errorRelease();
      }
      else
      {
        swift_retain();
        sub_10000E524(v27, (uint64_t)v34);
        swift_storeEnumTagMultiPayload();
        v28(v34);
        sub_10001E494((uint64_t)v34);
        swift_release();
        sub_100015540(v27);
      }
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      sub_100014514();
      int v21 = 1;
      uint64_t v12 = swift_allocError();
      uint64_t v13 = v34;
      *unint64_t v14 = 0;
      *uint64_t v13 = v12;
      swift_storeEnumTagMultiPayload();
      v28(v34);
      sub_10001E494((uint64_t)v34);
      return swift_release();
    }
  }
}

uint64_t sub_10001F148(uint64_t a1, void *a2, void *a3)
{
  uint64_t v9 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  id v3 = a2;
  if (a2)
  {
    sub_100018470();
    uint64_t v6 = sub_10008A190();

    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v4 = a3;
  v9(v7);
  swift_errorRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10001F270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10001F2B8()
{
  return swift_release();
}

unint64_t sub_10001F2D4()
{
  uint64_t v2 = qword_1000A38F0;
  if (!qword_1000A38F0)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A38F0);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_10001F33C()
{
  uint64_t v2 = qword_1000A4300;
  if (!qword_1000A4300)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A4300);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_10001F3A4()
{
  uint64_t v2 = qword_1000A3780;
  if (!qword_1000A3780)
  {
    sub_1000096C0(&qword_1000A3778);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3780);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10001F428()
{
  return v2;
}

uint64_t sub_10001F460()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MailboxDataSource()
{
  return self;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10001F4C8()
{
}

uint64_t sub_10001F4F4()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 48) & ~v1;
  swift_errorRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_10001F6B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = (void (*)(uint64_t *))v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10001ED88(v2, v3, v4, v5, v6);
}

uint64_t sub_10001F728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10001F770()
{
  return swift_release();
}

void *sub_10001F78C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MailEntry();
  return sub_10001F83C((const void *)(v1 + *(int *)(v2 + 20)), a1);
}

uint64_t type metadata accessor for MailEntry()
{
  uint64_t v1 = qword_1000A3888;
  if (!qword_1000A3888) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

void *sub_10001F83C(const void *a1, void *a2)
{
  uint64_t v6 = sub_100089F80();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    uint64_t v2 = sub_100009334(&qword_1000A3828);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

uint64_t sub_10001F964@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(int *)(type metadata accessor for MailEntry() + 24);
  uint64_t v2 = sub_100089630();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v1 + v4);
}

uint64_t sub_10001F9DC()
{
  return sub_100089620();
}

uint64_t sub_10001F9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v27 = a1;
  uint64_t v25 = a2;
  uint64_t v22 = a3;
  uint64_t v32 = 0;
  uint64_t v31 = 0;
  uint64_t v30 = 0;
  uint64_t v29 = 0;
  uint64_t v14 = 0;
  uint64_t v21 = sub_100089630();
  uint64_t v19 = *(void *)(v21 - 8);
  uint64_t v20 = v21 - 8;
  unint64_t v9 = (*(void *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  uint64_t v16 = (char *)&v9 - v9;
  unint64_t v10 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3828) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v14);
  uint64_t v15 = (char *)&v9 - v10;
  unint64_t v11 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v14);
  uint64_t v13 = (uint64_t)&v9 - v11;
  uint64_t v17 = type metadata accessor for MailEntry();
  unint64_t v12 = (*(void *)(*(void *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v27);
  uint64_t v28 = (uint64_t)&v9 - v12;
  uint64_t v32 = (char *)&v9 - v12;
  uint64_t v31 = v4;
  uint64_t v30 = v5;
  uint64_t v29 = v6;
  sub_10001FD60(v4, v7);
  sub_10001FFFC(v13, v28);
  uint64_t v26 = sub_100089F80();
  uint64_t v23 = *(void *)(v26 - 8);
  uint64_t v24 = v26 - 8;
  (*(void (**)(char *, uint64_t))(v23 + 16))(v15, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v15, 0, 1, v26);
  sub_100020230(v15, (void *)(v28 + *(int *)(v17 + 20)));
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v16, v22, v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v28 + *(int *)(v17 + 24), v16, v21);
  sub_100020358(v28, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v21);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v26);
  sub_100020788(v27);
  return sub_1000208EC(v28);
}

uint64_t sub_10001FD60(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 8) = v14;
  uint64_t v17 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 16) = v17;
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  }
  else
  {
    *(void *)(a2 + 24) = *(void *)(a1 + 24);
    uint64_t v13 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a2 + 32) = v13;
  }
  uint64_t v2 = type metadata accessor for Mailbox();
  __dst = (void *)(a2 + *(int *)(v2 + 28));
  __src = (void *)(a1 + *(int *)(v2 + 28));
  uint64_t v11 = sub_1000895A0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v12 + 48))(__src, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(__dst, __src, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v4 = type metadata accessor for Snapshot();
  uint64_t v7 = a2 + *(int *)(v4 + 20);
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  if ((unint64_t)*v8 < 2)
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_WORD *)(v7 + 16) = *((_WORD *)v8 + 8);
  }
  else
  {
    uint64_t v6 = *v8;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v7 = v6;
    *(void *)(v7 + 8) = v8[1];
    *(unsigned char *)(v7 + 16) = *((unsigned char *)v8 + 16);
    *(unsigned char *)(v7 + 17) = *((unsigned char *)v8 + 17);
  }
  return a2;
}

uint64_t sub_10001FFFC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  uint64_t v2 = type metadata accessor for Mailbox();
  __dst = (void *)(a2 + *(int *)(v2 + 28));
  __src = (void *)(a1 + *(int *)(v2 + 28));
  uint64_t v10 = sub_1000895A0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v11 + 48))(__src, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v11 + 32))(__dst, __src, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v4 = type metadata accessor for Snapshot();
  uint64_t v6 = a2 + *(int *)(v4 + 20);
  uint64_t v7 = a1 + *(int *)(v4 + 20);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
  *(_WORD *)(v6 + 16) = *(_WORD *)(v7 + 16);
  return a2;
}

void *sub_100020230(const void *a1, void *a2)
{
  uint64_t v6 = sub_100089F80();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    uint64_t v2 = sub_100009334(&qword_1000A3828);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

uint64_t sub_100020358(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  uint64_t v23 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 8) = v23;
  uint64_t v26 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 16) = v26;
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  }
  else
  {
    *(void *)(a2 + 24) = *(void *)(a1 + 24);
    uint64_t v22 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a2 + 32) = v22;
  }
  uint64_t v2 = type metadata accessor for Mailbox();
  uint64_t v18 = (void *)(a2 + *(int *)(v2 + 28));
  uint64_t v19 = (const void *)(a1 + *(int *)(v2 + 28));
  uint64_t v20 = sub_1000895A0();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v21 + 48))(v19, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(v18, v19, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v4 = type metadata accessor for Snapshot();
  uint64_t v16 = a2 + *(int *)(v4 + 20);
  uint64_t v17 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  if ((unint64_t)*v17 < 2)
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_WORD *)(v16 + 16) = *((_WORD *)v17 + 8);
  }
  else
  {
    uint64_t v15 = *v17;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v16 = v15;
    *(void *)(v16 + 8) = v17[1];
    *(unsigned char *)(v16 + 16) = *((unsigned char *)v17 + 16);
    *(unsigned char *)(v16 + 17) = *((unsigned char *)v17 + 17);
  }
  uint64_t v10 = type metadata accessor for MailEntry();
  __dst = (void *)(a2 + *(int *)(v10 + 20));
  __src = (void *)(a1 + *(int *)(v10 + 20));
  uint64_t v13 = sub_100089F80();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v14 + 48))(__src, 1))
  {
    uint64_t v5 = sub_100009334(&qword_1000A3828);
    memcpy(__dst, __src, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v14 + 16))(__dst, __src, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v9 = a2 + *(int *)(v10 + 24);
  uint64_t v8 = a1 + *(int *)(v10 + 24);
  uint64_t v6 = sub_100089630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v8);
  return a2;
}

uint64_t sub_100020788(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v3 = sub_1000895A0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(v2, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  if (*(void *)(a1 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1000208EC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v9 = sub_1000895A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v10 + 48))(v8, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  if (*(void *)(a1 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = type metadata accessor for MailEntry();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_100089F80();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v3 = a1 + *(int *)(v4 + 24);
  uint64_t v1 = sub_100089630();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3);
  return a1;
}

uint64_t sub_100020B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t v22 = 0;
  uint64_t v21 = 0;
  uint64_t v10 = 0;
  unint64_t v8 = (*(void *)(*(void *)(sub_100089630() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v16 = (uint64_t)&v7 - v8;
  unint64_t v9 = (*(void *)(*(void *)(sub_100089F80() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  uint64_t v15 = (uint64_t)&v7 - v9;
  unint64_t v11 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t)&v7 - v11;
  uint64_t v3 = type metadata accessor for MailEntry();
  unint64_t v12 = (*(void *)(*(void *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  uint64_t v17 = (uint64_t)&v7 - v12;
  unint64_t v13 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v7 - v12);
  uint64_t v20 = (uint64_t)&v7 - v13;
  uint64_t v22 = (char *)&v7 - v13;
  uint64_t v21 = a1;
  sub_10001FD60(a1, v5);
  sub_10007F804(v15);
  sub_10001F9DC();
  sub_10001F9F4(v14, v15, v16, v17);
  sub_100020D7C(v17, v20);
  sub_100020358(v20, v18);
  sub_100020788(v19);
  return sub_1000208EC(v20);
}

uint64_t sub_100020D7C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  uint64_t v2 = type metadata accessor for Mailbox();
  uint64_t v17 = (void *)(a2 + *(int *)(v2 + 28));
  uint64_t v18 = (const void *)(a1 + *(int *)(v2 + 28));
  uint64_t v19 = sub_1000895A0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v20 + 48))(v18, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(v17, v18, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v4 = type metadata accessor for Snapshot();
  uint64_t v15 = a2 + *(int *)(v4 + 20);
  uint64_t v16 = a1 + *(int *)(v4 + 20);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  uint64_t v10 = type metadata accessor for MailEntry();
  __dst = (void *)(a2 + *(int *)(v10 + 20));
  __src = (void *)(a1 + *(int *)(v10 + 20));
  uint64_t v13 = sub_100089F80();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v14 + 48))(__src, 1))
  {
    uint64_t v5 = sub_100009334(&qword_1000A3828);
    memcpy(__dst, __src, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v14 + 32))(__dst, __src, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v9 = a2 + *(int *)(v10 + 24);
  uint64_t v8 = a1 + *(int *)(v10 + 24);
  uint64_t v6 = sub_100089630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v8);
  return a2;
}

uint64_t sub_100021144@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F964(a1);
}

void *sub_10002115C@<X0>(void *a1@<X8>)
{
  return sub_10001F78C(a1);
}

unint64_t sub_100021174(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v30 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v30 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    swift_retain();
    *(void *)a1 = v25;
    return *(void *)a1 + ((v30 + 16) & ~(unint64_t)v30);
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v23 = a2[1];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 8) = v23;
    uint64_t v24 = a2[2];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 16) = v24;
    if ((unint64_t)a2[4] <= 5)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    }
    else
    {
      *(void *)(a1 + 24) = a2[3];
      uint64_t v22 = a2[4];
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v22;
    }
    uint64_t v3 = type metadata accessor for Mailbox();
    __dst = (void *)(a1 + *(int *)(v3 + 28));
    __src = (char *)a2 + *(int *)(v3 + 28);
    uint64_t v20 = sub_1000895A0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v21 + 48))(__src, 1))
    {
      uint64_t v4 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(__dst, __src, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    uint64_t v5 = type metadata accessor for Snapshot();
    uint64_t v16 = a1 + *(int *)(v5 + 20);
    uint64_t v17 = (uint64_t *)((char *)a2 + *(int *)(v5 + 20));
    if ((unint64_t)*v17 < 2)
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_WORD *)(v16 + 16) = *((_WORD *)v17 + 8);
    }
    else
    {
      uint64_t v15 = *v17;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v16 = v15;
      *(void *)(v16 + 8) = v17[1];
      *(unsigned char *)(v16 + 16) = *((unsigned char *)v17 + 16);
      *(unsigned char *)(v16 + 17) = *((unsigned char *)v17 + 17);
    }
    unint64_t v11 = (void *)(a1 + *(int *)(a3 + 20));
    unint64_t v12 = (char *)a2 + *(int *)(a3 + 20);
    uint64_t v13 = sub_100089F80();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v14 + 48))(v12, 1))
    {
      uint64_t v6 = sub_100009334(&qword_1000A3828);
      memcpy(v11, v12, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t)a2 + *(int *)(a3 + 24);
    uint64_t v7 = sub_100089630();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v10, v9);
    return a1;
  }
}

uint64_t sub_100021628(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v9 = sub_1000895A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v10 + 48))(v8, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  if (*(void *)(a1 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100089F80();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v2 = sub_100089630();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v4);
}

uint64_t sub_100021878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v24 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v24;
  uint64_t v26 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v26;
  if (*(void *)(a2 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v22 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v22;
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  uint64_t v18 = (void *)(a1 + *(int *)(v3 + 28));
  uint64_t v19 = (const void *)(a2 + *(int *)(v3 + 28));
  uint64_t v20 = sub_1000895A0();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v21 + 48))(v19, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(v18, v19, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v16 = a1 + *(int *)(v5 + 20);
  uint64_t v17 = (uint64_t *)(a2 + *(int *)(v5 + 20));
  if ((unint64_t)*v17 < 2)
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_WORD *)(v16 + 16) = *((_WORD *)v17 + 8);
  }
  else
  {
    uint64_t v15 = *v17;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v16 = v15;
    *(void *)(v16 + 8) = v17[1];
    *(unsigned char *)(v16 + 16) = *((unsigned char *)v17 + 16);
    *(unsigned char *)(v16 + 17) = *((unsigned char *)v17 + 17);
  }
  __dst = (void *)(a1 + *(int *)(a3 + 20));
  __src = (void *)(a2 + *(int *)(a3 + 20));
  uint64_t v13 = sub_100089F80();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v14 + 48))(__src, 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3828);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v14 + 16))(__dst, __src, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v10 = a1 + *(int *)(a3 + 24);
  uint64_t v9 = a2 + *(int *)(a3 + 24);
  uint64_t v7 = sub_100089630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v10, v9);
  return a1;
}

uint64_t sub_100021C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v30 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v32;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    if (*(void *)(a2 + 32) <= 5uLL)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v27 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v27;
    }
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v28 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v28;
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  uint64_t v23 = (void *)(a1 + *(int *)(v3 + 28));
  __src = (void *)(a2 + *(int *)(v3 + 28));
  uint64_t v24 = sub_1000895A0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48);
  if (((unsigned int (*)(void *, uint64_t))v26)(v23, 1))
  {
    if (v26(__src, 1, v24))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3B40);
      memcpy(v23, __src, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v23, __src, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
    }
  }
  else if (v26(__src, 1, v24))
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v23, v24);
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(v23, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v25 + 24))(v23, __src, v24);
  }
  uint64_t v6 = type metadata accessor for Snapshot();
  uint64_t v20 = a1 + *(int *)(v6 + 20);
  uint64_t v21 = (uint64_t *)(a2 + *(int *)(v6 + 20));
  if (*(void *)v20 < 2uLL)
  {
    if ((unint64_t)*v21 < 2)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *(_WORD *)(v20 + 16) = *((_WORD *)v21 + 8);
    }
    else
    {
      uint64_t v18 = *v21;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v20 = v18;
      *(void *)(v20 + 8) = v21[1];
      *(unsigned char *)(v20 + 16) = *((unsigned char *)v21 + 16);
      *(unsigned char *)(v20 + 17) = *((unsigned char *)v21 + 17);
    }
  }
  else if ((unint64_t)*v21 < 2)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_WORD *)(v20 + 16) = *((_WORD *)v21 + 8);
  }
  else
  {
    uint64_t v19 = *v21;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    *(void *)(v20 + 8) = v21[1];
    *(unsigned char *)(v20 + 16) = *((unsigned char *)v21 + 16);
    *(unsigned char *)(v20 + 17) = *((unsigned char *)v21 + 17) & 1;
  }
  __dst = (void *)(a1 + *(int *)(a3 + 20));
  uint64_t v13 = (void *)(a2 + *(int *)(a3 + 20));
  uint64_t v15 = sub_100089F80();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48);
  if (((unsigned int (*)(void *, uint64_t))v17)(__dst, 1))
  {
    if (v17(v13, 1, v15))
    {
      uint64_t v8 = sub_100009334(&qword_1000A3828);
      memcpy(__dst, v13, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(__dst, v13, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
  }
  else if (v17(v13, 1, v15))
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(__dst, v15);
    uint64_t v7 = sub_100009334(&qword_1000A3828);
    memcpy(__dst, v13, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v16 + 24))(__dst, v13, v15);
  }
  uint64_t v12 = a1 + *(int *)(a3 + 24);
  uint64_t v11 = a2 + *(int *)(a3 + 24);
  uint64_t v9 = sub_100089630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v12, v11);
  return a1;
}

uint64_t sub_100022450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = type metadata accessor for Mailbox();
  uint64_t v17 = (void *)(a1 + *(int *)(v3 + 28));
  uint64_t v18 = (const void *)(a2 + *(int *)(v3 + 28));
  uint64_t v19 = sub_1000895A0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v20 + 48))(v18, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(v17, v18, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v15 = a1 + *(int *)(v5 + 20);
  uint64_t v16 = a2 + *(int *)(v5 + 20);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  __dst = (void *)(a1 + *(int *)(a3 + 20));
  __src = (void *)(a2 + *(int *)(a3 + 20));
  uint64_t v13 = sub_100089F80();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v14 + 48))(__src, 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3828);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v14 + 32))(__dst, __src, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v10 = a1 + *(int *)(a3 + 24);
  uint64_t v9 = a2 + *(int *)(a3 + 24);
  uint64_t v7 = sub_100089630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v10, v9);
  return a1;
}

uint64_t sub_10002280C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  uint64_t v21 = (void *)(a1 + *(int *)(v3 + 28));
  uint64_t v20 = (const void *)(a2 + *(int *)(v3 + 28));
  uint64_t v22 = sub_1000895A0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
  if (((unsigned int (*)(void *, uint64_t))v24)(v21, 1))
  {
    if (v24(v20, 1, v22))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3B40);
      memcpy(v21, v20, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v21, v20, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
    }
  }
  else if (v24(v20, 1, v22))
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v21, v22);
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(v21, v20, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 40))(v21, v20, v22);
  }
  uint64_t v6 = type metadata accessor for Snapshot();
  uint64_t v18 = a1 + *(int *)(v6 + 20);
  uint64_t v19 = a2 + *(int *)(v6 + 20);
  if (*(void *)v18 < 2uLL)
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  }
  else if (*(void *)v19 < 2uLL)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  }
  else
  {
    *(void *)uint64_t v18 = *(void *)v19;
    swift_bridgeObjectRelease();
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
    *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
    *(unsigned char *)(v18 + 17) = *(unsigned char *)(v19 + 17) & 1;
  }
  __dst = (void *)(a1 + *(int *)(a3 + 20));
  __src = (void *)(a2 + *(int *)(a3 + 20));
  uint64_t v15 = sub_100089F80();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48);
  if (((unsigned int (*)(void *, uint64_t))v17)(__dst, 1))
  {
    if (v17(__src, 1, v15))
    {
      uint64_t v8 = sub_100009334(&qword_1000A3828);
      memcpy(__dst, __src, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(__dst, __src, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
  }
  else if (v17(__src, 1, v15))
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(__dst, v15);
    uint64_t v7 = sub_100009334(&qword_1000A3828);
    memcpy(__dst, __src, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v16 + 40))(__dst, __src, v15);
  }
  uint64_t v12 = a1 + *(int *)(a3 + 24);
  uint64_t v11 = a2 + *(int *)(a3 + 24);
  uint64_t v9 = sub_100089630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v12, v11);
  return a1;
}

uint64_t sub_100022F40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_100022F68(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v10 = type metadata accessor for Snapshot();
  if (a2 == *(_DWORD *)(*(void *)(v10 - 8) + 84))
  {
    return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 48))(a1, a2, v10);
  }
  else
  {
    uint64_t v5 = sub_100009334(&qword_1000A3828);
    if (a2 == *(_DWORD *)(*(void *)(v5 - 8) + 84))
    {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v5);
    }
    else
    {
      uint64_t v4 = sub_100089630();
      if (a2 == *(_DWORD *)(*(void *)(v4 - 8) + 84)) {
        return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v4);
      }
      else {
        __break(1u);
      }
    }
  }
  return v6;
}

uint64_t sub_100023164()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_10002318C(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v10 = type metadata accessor for Snapshot();
  if (a3 == *(_DWORD *)(*(void *)(v10 - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(v10 - 8) + 56))(a1, a2, a2, v10);
  }
  uint64_t v5 = sub_100009334(&qword_1000A3828);
  if (a3 == *(_DWORD *)(*(void *)(v5 - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(v5 - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, v5);
  }
  uint64_t result = sub_100089630();
  if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  }
  __break(1u);
  return result;
}

uint64_t sub_100023388()
{
  uint64_t v4 = type metadata accessor for Snapshot();
  if (v0 <= 0x3F)
  {
    uint64_t v4 = sub_100023520();
    if (v1 <= 0x3F)
    {
      uint64_t v4 = sub_100089630();
      if (v2 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v4;
}

uint64_t sub_100023520()
{
  uint64_t v4 = qword_1000A3898;
  if (!qword_1000A3898)
  {
    sub_100089F80();
    unint64_t v3 = sub_10008A480();
    uint64_t v4 = v3;
    if (!v0)
    {
      unint64_t v1 = v3;
      atomic_store(v3, (unint64_t *)&qword_1000A3898);
      return v1;
    }
  }
  return v4;
}

id sub_1000235C8(void *a1)
{
  id v2 = objc_allocWithZone(v1);
  return sub_100024878(a1);
}

uint64_t *sub_100023604(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v151 = a1;
  uint64_t v142 = a2;
  uint64_t v140 = a3;
  uint64_t v141 = a4;
  uint64_t v152 = 0;
  uint64_t v118 = sub_10000960C;
  uint64_t v119 = sub_100027A88;
  unint64_t v120 = sub_1000257D8;
  unint64_t v121 = sub_100026384;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v191 = 0;
  uint64_t v190 = 0;
  uint64_t v188 = 0;
  uint64_t v189 = 0;
  uint64_t v187 = 0;
  uint64_t v186 = 0;
  id v185 = 0;
  id v184 = 0;
  uint64_t v174 = 0;
  id v173 = 0;
  id v169 = 0;
  uint64_t v168 = 0;
  uint64_t v164 = 0;
  uint64_t v123 = 0;
  uint64_t v124 = sub_100089DF0();
  uint64_t v125 = *(void *)(v124 - 8);
  uint64_t v126 = v124 - 8;
  unint64_t v127 = (*(void *)(v125 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v128 = (void *)((char *)v50 - v127);
  uint64_t v129 = sub_100089E40();
  uint64_t v130 = *(void *)(v129 - 8);
  uint64_t v131 = v129 - 8;
  unint64_t v132 = (*(void *)(v130 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = __chkstk_darwin(v152);
  uint64_t v133 = (char *)v50 - v132;
  unint64_t v134 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  uint64_t v135 = (char *)v50 - v134;
  unint64_t v136 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v152);
  uint64_t v137 = (void *)((char *)v50 - v136);
  unint64_t v138 = (*(void *)(*(void *)(sub_100089E00() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v152);
  uint64_t v139 = (char *)v50 - v138;
  uint64_t v143 = sub_100089700();
  uint64_t v144 = *(void *)(v143 - 8);
  uint64_t v145 = v143 - 8;
  unint64_t v146 = (*(void *)(v144 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v152);
  uint32_t v147 = (char *)v50 - v146;
  uint64_t v191 = v7;
  uint64_t v190 = v8;
  uint64_t v188 = v9;
  uint64_t v189 = v10;
  uint64_t v187 = v4;
  unint64_t v149 = sub_10001F33C();
  uint64_t v150 = sub_10008A6C0();
  unint64_t v148 = v11;
  id v12 = sub_10007E730(v151);
  uint64_t v13 = v150;
  *unint64_t v148 = v12;
  sub_100007A04();
  uint64_t v186 = v13;
  uint64_t v153 = v151[3];
  unint64_t v154 = v151[4];
  sub_1000154C0(v153, v154);
  sub_1000154C0(v153, v154);
  int v155 = sub_10001973C(v153, v154, v152, 3uLL);
  sub_100015500(v153, v154);
  sub_100015500(v153, v154);
  if ((v155 & 1) == 0)
  {
    id v14 = [self predicateForUnreadMessages];
    id v116 = v156;
    v156[0] = v14;
    sub_100009334(&qword_1000A3970);
    sub_10008A1E0();
  }
  uint64_t v110 = 0;
  sub_10001F2D4();
  uint64_t v104 = v186;
  swift_bridgeObjectRetain();
  id v107 = sub_100024450();
  id v185 = v107;
  uint64_t v112 = sub_100009334((uint64_t *)&unk_1000A42F0);
  unint64_t v106 = sub_1000165F0();
  id v15 = v107;
  sub_10001E5E4();
  uint64_t v105 = sub_10008A6C0();
  uint64_t v16 = sub_10008A0B0("Widget.DaemonDataSource.UnreadCount", 0x23uLL, 1);
  id v109 = sub_1000244CC(v106, v107, v105, 8, v16, v17);
  id v184 = v109;
  id v18 = v109;
  uint64_t v108 = &v117[OBJC_IVAR____TtC19MailWidgetExtension20MailStatusDataSource_state];
  swift_beginAccess();
  uint64_t v111 = *(void *)v108;
  unsigned int v114 = &v182;
  id v182 = v109;
  uint64_t v113 = type metadata accessor for MailStatusDataSource.State();
  sub_100024A3C();
  sub_10008A010();

  uint64_t v115 = v183;
  if (v183)
  {
    uint64_t v103 = v115;
    uint64_t v19 = v147;
    uint64_t v95 = v115;
    uint64_t v164 = v115;
    swift_endAccess();
    uint64_t v20 = sub_100024808();
    (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v19, v20, v143);
    uint64_t v101 = sub_1000896E0();
    int v100 = sub_10008A3B0();
    uint64_t v98 = &v162;
    uint64_t v162 = 2;
    unint64_t v96 = sub_10000818C();
    unint64_t v97 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v99 = v163;
    sub_100009334(&qword_1000A2E38);
    uint64_t v102 = sub_10008A6C0();
    if (os_log_type_enabled(v101, (os_log_type_t)v100))
    {
      uint64_t v21 = v123;
      Swift::String v85 = (uint8_t *)sub_10008A470();
      uint64_t v83 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v84 = 0;
      uint64_t v86 = sub_100007E5C(0);
      uint64_t v87 = sub_100007E5C(v84);
      uint64_t v91 = &v159;
      uint64_t v159 = v85;
      uint64_t v92 = &v158;
      uint64_t v158 = v86;
      id v89 = &v157;
      uint64_t v157 = v87;
      unsigned int v88 = 0;
      sub_100007EB8(0, &v159);
      sub_100007EB8(v88, v91);
      v156[1] = v102;
      uint64_t v90 = v50;
      __chkstk_darwin(v50);
      uint64_t v22 = v92;
      uint64_t v23 = &v50[-6];
      uint64_t v93 = &v50[-6];
      v23[2] = v91;
      v23[3] = v22;
      v23[4] = v24;
      uint64_t v94 = sub_100009334((uint64_t *)&unk_1000A2E60);
      sub_10000963C();
      sub_10008A120();
      if (v21)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v101, (os_log_type_t)v100, "Query in progress. Appending completion handler", v85, v99);
        uint64_t v82 = 0;
        sub_100007F18(v86);
        sub_100007F18(v87);
        sub_10008A450();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    (*(void (**)(char *, uint64_t))(v144 + 8))(v147, v143);
    swift_retain();
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v141;
    uint64_t v27 = v119;
    *(void *)(v25 + 16) = v140;
    *(void *)(v25 + 24) = v26;
    uint64_t v80 = v161;
    v161[0] = v27;
    v161[1] = v25;
    Swift::String v81 = &v160;
    swift_beginAccess();
    sub_100009334((uint64_t *)&unk_1000A3960);
    sub_10008A1E0();
    swift_endAccess();
    swift_release();
  }
  else
  {
    swift_endAccess();
    uint64_t v72 = 0;
    sub_100089E70();
    uint64_t v55 = &unk_10009AD70;
    uint64_t v54 = 24;
    uint64_t v59 = 7;
    uint64_t v53 = swift_allocObject();
    v50[1] = v53 + 16;
    uint64_t v28 = v117;
    uint64_t v51 = v117;
    swift_unknownObjectWeakInit();

    swift_retain();
    id v29 = v109;
    uint64_t v58 = 40;
    uint64_t v30 = (void *)swift_allocObject();
    uint64_t v31 = v120;
    uint64_t v32 = ObjectType;
    id v33 = v109;
    v30[2] = v53;
    void v30[3] = v33;
    v30[4] = v32;
    unint64_t v180 = v31;
    uint64_t v181 = v30;
    aBlock = _NSConcreteStackBlock;
    int v176 = 1107296256;
    int v177 = 0;
    unint64_t v178 = sub_10000B378;
    unint64_t v179 = &unk_10009ADB0;
    uint64_t v52 = _Block_copy(&aBlock);
    sub_1000073B4();
    uint64_t v79 = sub_100089E50();
    swift_release();
    swift_release();
    uint64_t v174 = v79;
    sub_10002584C();
    id v60 = [self mainThreadScheduler];
    uint64_t v61 = swift_allocObject();
    uint64_t v56 = v61 + 16;
    uint64_t v34 = v117;
    int v57 = v117;
    swift_unknownObjectWeakInit();

    swift_retain();
    id v35 = v109;
    uint64_t v36 = swift_allocObject();
    uint64_t v37 = ObjectType;
    uint64_t v38 = (uint64_t)v121;
    id v39 = v109;
    uint64_t v40 = v72;
    uint64_t v41 = (void *)v36;
    uint64_t v42 = (uint64_t)v60;
    v41[2] = v61;
    v41[3] = v39;
    v41[4] = v37;
    id v78 = sub_100026BCC(v42, v40, v38, (uint64_t)v41, 0.5);
    swift_release();
    id v173 = v78;
    id v43 = v109;
    id v44 = v78;
    uint64_t v63 = &v172;
    id v172 = v78;
    uint64_t v62 = &v171;
    id v171 = v109;
    uint64_t v64 = &v170;
    uint64_t v67 = 33;
    uint64_t v68 = 0;
    swift_beginAccess();
    sub_100009334(&qword_1000A3930);
    sub_10008A020();
    swift_endAccess();
    id v66 = *(id *)&v117[OBJC_IVAR____TtC19MailWidgetExtension20MailStatusDataSource_messageRepository];
    id v45 = v66;
    sub_100026C2C();
    sub_10000E524((uint64_t)v151, (uint64_t)v137);
    id v65 = sub_10001523C(v137);
    int v46 = v117;
    id v77 = [v66 startCountingQuery:v109 includingServerCountsForMailboxScope:v65 withObserver:v117];
    swift_unknownObjectRelease();

    id v169 = v77;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v76 = sub_100024540((uint64_t)v77, v79, v140, v141);
    uint64_t v168 = v76;
    id v47 = v109;
    swift_retain();
    uint64_t v70 = &v167;
    uint64_t v167 = v76;
    uint64_t v69 = &v166;
    id v166 = v109;
    uint64_t v71 = &v165;
    swift_beginAccess();
    sub_100009334((uint64_t *)&unk_1000A3950);
    sub_10008A020();
    swift_endAccess();
    sub_1000095A4();
    id v75 = (id)sub_10008A3F0();
    sub_100089E30();
    uint64_t v48 = v125;
    *uint64_t v128 = v142;
    (*(void (**)(void))(v48 + 104))();
    sub_100089E80();
    (*(void (**)(void *, uint64_t))(v125 + 8))(v128, v124);
    unint64_t v74 = *(void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v73 = v130 + 8;
    v74(v133, v129);
    sub_10008A3E0();
    v74(v135, v129);

    swift_release();
    swift_unknownObjectRelease();

    swift_release();
  }

  uint64_t result = &v186;
  sub_10000ADA0();
  return result;
}

id sub_100024450()
{
  sub_10001F33C();
  Class isa = sub_10008A180().super.isa;
  id v2 = [(id)swift_getObjCClassFromMetadata() andPredicateWithSubpredicates:isa];

  swift_bridgeObjectRelease();
  return v2;
}

id sub_1000244CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1000277A4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_100024540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000245A4(a1, a2, a3, a4);
}

uint64_t sub_1000245A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_unknownObjectRetain();
  v4[2] = a1;
  swift_retain();
  v4[3] = a2;
  sub_100009334(&qword_1000A3978);
  uint64_t v10 = sub_10008A6C0();
  uint64_t v9 = v5;
  swift_retain();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *uint64_t v9 = sub_100027A88;
  v9[1] = (uint64_t (*)(uint64_t))v6;
  sub_100007A04();
  v4[4] = v10;
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1000246DC(uint64_t a1, uint64_t (*a2)(void, void))
{
  return a2(*(void *)a1, *(unsigned char *)(a1 + 8) & 1);
}

uint64_t sub_100024718()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_10000ADA0();
  return v1;
}

uint64_t sub_100024760()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1000247A0()
{
  uint64_t v1 = sub_100089700();
  sub_1000030B8(v1, qword_1000A38D0);
  sub_100003160(v1, (uint64_t)qword_1000A38D0);
  type metadata accessor for MailStatusDataSource();
  return sub_100016888();
}

uint64_t sub_100024808()
{
  if (qword_1000A2D98 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100089700();
  return sub_100003160(v0, (uint64_t)qword_1000A38D0);
}

id sub_100024878(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v15 = a1;
  id v2 = v1;
  id v3 = v1;
  id v4 = v1;
  id v16 = v1;
  uint64_t v8 = OBJC_IVAR____TtC19MailWidgetExtension20MailStatusDataSource_state;
  sub_100009334(&qword_1000A3980);
  sub_10008A6C0();
  sub_100009334((uint64_t *)&unk_1000A42F0);
  type metadata accessor for MailStatusDataSource.State();
  sub_100024A3C();
  *(void *)&v10[v8] = sub_10008A000();

  uint64_t v9 = OBJC_IVAR____TtC19MailWidgetExtension20MailStatusDataSource_debouncers;
  sub_100009334(&qword_1000A3988);
  sub_10008A6C0();
  sub_10002584C();
  *(void *)&v10[v9] = sub_10008A000();

  id v5 = a1;
  *(void *)&v10[OBJC_IVAR____TtC19MailWidgetExtension20MailStatusDataSource_messageRepository] = a1;

  v14.receiver = v16;
  v14.super_class = ObjectType;
  id v13 = [super init];
  id v6 = v13;
  id v16 = v13;

  return v13;
}

uint64_t type metadata accessor for MailStatusDataSource.State()
{
  return self;
}

unint64_t sub_100024A3C()
{
  uint64_t v2 = qword_1000A3918;
  if (!qword_1000A3918)
  {
    sub_1000096C0((uint64_t *)&unk_1000A42F0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3918);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100024AC0()
{
  return swift_deallocObject();
}

void sub_100024B00(uint64_t a1, void *a2)
{
  uint64_t v80 = a1;
  id v79 = a2;
  id v75 = sub_10000960C;
  uint64_t v76 = sub_10000960C;
  uint64_t v106 = 0;
  uint64_t v105 = 0;
  uint64_t v78 = 0;
  uint64_t v77 = 0;
  unint64_t v97 = 0;
  uint64_t v81 = sub_100089700();
  uint64_t v82 = *(void *)(v81 - 8);
  uint64_t v83 = v81 - 8;
  unint64_t v84 = (*(void *)(v82 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = __chkstk_darwin(v80);
  Swift::String v85 = (char *)v20 - v84;
  unint64_t v86 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v87 = (char *)v20 - v86;
  uint64_t v88 = v4 + 16;
  uint64_t v106 = v4 + 16;
  uint64_t v105 = v5;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    p_uint64_t Strong = (id *)&Strong;
    uint64_t v71 = Strong;
    id v6 = Strong;
    sub_1000137A8(p_Strong);
    swift_endAccess();
    id v7 = v79;
    id v65 = &v71[OBJC_IVAR____TtC19MailWidgetExtension20MailStatusDataSource_debouncers];
    uint64_t v70 = &v90;
    swift_beginAccess();
    uint64_t v66 = *(void *)v65;
    uint64_t v69 = v89;
    v89[0] = v79;
    uint64_t v67 = sub_100009334((uint64_t *)&unk_1000A42F0);
    unint64_t v68 = sub_10002584C();
    sub_100024A3C();
    sub_10008A010();

    id v72 = v89[1];
    swift_endAccess();

    id v74 = v72;
  }
  else
  {
    uint64_t v73 = 0;
    sub_1000137A8((id *)&Strong);
    swift_endAccess();
    id v74 = v73;
  }
  uint64_t v63 = v74;
  if (v74)
  {
    uint64_t v62 = v63;
    uint64_t v10 = v85;
    id v47 = v63;
    unint64_t v97 = v63;
    uint64_t v11 = sub_100024808();
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v10, v11, v81);
    uint64_t v53 = sub_1000896E0();
    int v52 = sub_10008A3A0();
    uint64_t v50 = &v95;
    uint64_t v95 = 2;
    unint64_t v48 = sub_10000818C();
    unint64_t v49 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v51 = v96;
    sub_100009334(&qword_1000A2E38);
    uint64_t v54 = sub_10008A6C0();
    if (os_log_type_enabled(v53, (os_log_type_t)v52))
    {
      uint64_t v12 = v77;
      uint64_t v37 = (uint8_t *)sub_10008A470();
      uint64_t v35 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v36 = 0;
      uint64_t v38 = sub_100007E5C(0);
      uint64_t v39 = sub_100007E5C(v36);
      id v43 = v94;
      v94[0] = v37;
      id v44 = &v93;
      uint64_t v93 = v38;
      uint64_t v41 = &v92;
      uint64_t v92 = v39;
      unsigned int v40 = 0;
      sub_100007EB8(0, v94);
      sub_100007EB8(v40, v43);
      uint64_t v91 = v54;
      uint64_t v42 = v20;
      __chkstk_darwin(v20);
      id v13 = v44;
      objc_super v14 = &v20[-6];
      id v45 = &v20[-6];
      v14[2] = v43;
      v14[3] = v13;
      v14[4] = v15;
      uint64_t v46 = sub_100009334((uint64_t *)&unk_1000A2E60);
      sub_10000963C();
      sub_10008A120();
      if (v12)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v52, "Timeout! No count received", v37, v51);
        uint64_t v34 = 0;
        sub_100007F18(v38);
        sub_100007F18(v39);
        sub_10008A450();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v81);
    memset(&v94[1], 0, 32);
    uint64_t v33 = 0;
    uint64_t v32 = 0;
    [v47 debounceResult:];
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v8 = v87;
    uint64_t v9 = sub_100024808();
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v8, v9, v81);
    id v60 = sub_1000896E0();
    int v59 = sub_10008A390();
    int v57 = &v102;
    uint64_t v102 = 2;
    unint64_t v55 = sub_10000818C();
    unint64_t v56 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v58 = v103;
    sub_100009334(&qword_1000A2E38);
    uint64_t v61 = sub_10008A6C0();
    if (os_log_type_enabled(v60, (os_log_type_t)v59))
    {
      uint64_t v16 = v77;
      uint64_t v22 = (uint8_t *)sub_10008A470();
      v20[1] = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v21 = 0;
      uint64_t v23 = sub_100007E5C(0);
      uint64_t v24 = sub_100007E5C(v21);
      uint64_t v28 = &v101;
      uint64_t v101 = v22;
      id v29 = &v100;
      uint64_t v100 = v23;
      uint64_t v26 = &v99;
      uint64_t v99 = v24;
      unsigned int v25 = 0;
      sub_100007EB8(0, &v101);
      sub_100007EB8(v25, v28);
      uint64_t v98 = v61;
      uint64_t v27 = v20;
      __chkstk_darwin(v20);
      uint64_t v17 = v29;
      id v18 = &v20[-6];
      uint64_t v30 = &v20[-6];
      v18[2] = v28;
      v18[3] = v17;
      v18[4] = v19;
      uint64_t v31 = sub_100009334((uint64_t *)&unk_1000A2E60);
      sub_10000963C();
      sub_10008A120();
      if (v16)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v59, "No debouncer for query", v22, v58);
        v20[0] = 0;
        sub_100007F18(v23);
        sub_100007F18(v24);
        sub_10008A450();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    (*(void (**)(char *, uint64_t))(v82 + 8))(v87, v81);
  }
}

uint64_t sub_100025790()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1000257D8()
{
  sub_100024B00(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000257E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100025830()
{
  return swift_release();
}

unint64_t sub_10002584C()
{
  uint64_t v2 = qword_1000A3920;
  if (!qword_1000A3920)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3920);
    return ObjCClassMetadata;
  }
  return v2;
}

void sub_1000258B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v77 = a1;
  uint64_t v76 = a2;
  id v75 = a3;
  unint64_t v68 = sub_1000280C4;
  uint64_t v69 = sub_100028164;
  uint64_t v70 = sub_1000092DC;
  uint64_t v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  id v72 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v99 = 0;
  uint64_t v98 = 0;
  uint64_t v97 = 0;
  uint64_t v74 = 0;
  uint64_t v85 = 0;
  char v86 = 0;
  uint64_t v78 = sub_100089700();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = v78 - 8;
  unint64_t v81 = (*(void *)(v79 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v82 = (char *)v22 - v81;
  uint64_t v99 = __chkstk_darwin(v77);
  uint64_t v98 = v3 + 16;
  uint64_t v97 = v4;
  sub_100027F6C(v99, (uint64_t)v95);
  if (v96)
  {
    if (swift_dynamicCast())
    {
      uint64_t v63 = v83;
      int v64 = 0;
    }
    else
    {
      uint64_t v63 = 0;
      int v64 = 1;
    }
    int v61 = v64;
    uint64_t v62 = v63;
    if (v64)
    {
      uint64_t v58 = 0;
      int v59 = 0;
      int v60 = 1;
      goto LABEL_10;
    }
    uint64_t v66 = v62;
    int v67 = v61;
  }
  else
  {
    uint64_t v65 = 0;
    sub_100027F0C((uint64_t)v95);
    uint64_t v66 = v65;
    int v67 = 1;
  }
  uint64_t v58 = v66;
  int v59 = v67 & 1;
  int v60 = 0;
LABEL_10:
  int v56 = v59;
  uint64_t v57 = v58;
  if (v60)
  {
    uint64_t v5 = v82;
    uint64_t v6 = sub_100024808();
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v5, v6, v78);
    uint64_t v35 = v94;
    sub_100027F6C(v77, (uint64_t)v94);
    uint64_t v43 = 7;
    uint64_t v41 = swift_allocObject();
    sub_100028060(v35, (_OWORD *)(v41 + 16));
    int v52 = sub_1000896E0();
    int v53 = sub_10008A3A0();
    uint64_t v38 = &v92;
    uint64_t v92 = 12;
    unint64_t v36 = sub_10000818C();
    unint64_t v37 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v39 = v93;
    uint64_t v40 = 17;
    uint64_t v46 = swift_allocObject();
    *(unsigned char *)(v46 + 16) = 32;
    uint64_t v47 = swift_allocObject();
    *(unsigned char *)(v47 + 16) = 8;
    uint64_t v42 = 32;
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = v41;
    uint64_t v44 = v7;
    *(void *)(v7 + 16) = v68;
    *(void *)(v7 + 24) = v8;
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = v44;
    uint64_t v45 = v9;
    *(void *)(v9 + 16) = v69;
    *(void *)(v9 + 24) = v10;
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v45;
    uint64_t v49 = v11;
    *(void *)(v11 + 16) = v70;
    *(void *)(v11 + 24) = v12;
    uint64_t v51 = sub_100009334(&qword_1000A2E38);
    uint64_t v48 = sub_10008A6C0();
    uint64_t v50 = v13;
    swift_retain();
    uint64_t v14 = v46;
    uint64_t v15 = v50;
    *uint64_t v50 = v71;
    v15[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v14;
    swift_retain();
    uint64_t v16 = v47;
    uint64_t v17 = v50;
    void v50[2] = v72;
    v17[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
    swift_retain();
    id v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
    uint64_t v19 = v50;
    v50[4] = v73;
    v19[5] = v18;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v52, (os_log_type_t)v53))
    {
      uint64_t v21 = v74;
      uint64_t v23 = (uint8_t *)sub_10008A470();
      v22[2] = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v24 = sub_100007E5C(0);
      uint64_t v25 = sub_100007E5C(1);
      uint64_t v26 = &v91;
      uint64_t v91 = v23;
      uint64_t v27 = &v90;
      uint64_t v90 = v24;
      uint64_t v28 = &v89;
      uint64_t v89 = v25;
      sub_100007EB8(2, &v91);
      sub_100007EB8(1, v26);
      uint64_t v87 = v71;
      uint64_t v88 = v46;
      sub_100007ECC(&v87, (uint64_t)v26, (uint64_t)v27, (uint64_t)v28);
      uint64_t v29 = v21;
      if (v21)
      {
        __break(1u);
      }
      else
      {
        uint64_t v87 = v72;
        uint64_t v88 = v47;
        sub_100007ECC(&v87, (uint64_t)&v91, (uint64_t)&v90, (uint64_t)&v89);
        v22[0] = 0;
        uint64_t v87 = v73;
        uint64_t v88 = v49;
        sub_100007ECC(&v87, (uint64_t)&v91, (uint64_t)&v90, (uint64_t)&v89);
        _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v53, "Debouncer received unexpected result. Expected Optional<Int> received %s", v23, v39);
        sub_100007F18(v24);
        sub_100007F18(v25);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v79 + 8))(v82, v78);
  }
  else
  {
    uint64_t v54 = v57;
    int v55 = v56;
    int v32 = v56;
    uint64_t v33 = v57;
    uint64_t v85 = v57;
    char v86 = v56 & 1;
    uint64_t v34 = v76 + 16;
    swift_beginAccess();
    id Strong = (id)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      p_id Strong = &Strong;
      id v31 = Strong;
      id v20 = Strong;
      sub_1000137A8(p_Strong);
      swift_endAccess();
      sub_1000263B4(v75, v33, v32 & 1);
    }
    else
    {
      sub_1000137A8(&Strong);
      swift_endAccess();
    }
  }
}

uint64_t sub_10002633C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100026384(uint64_t a1)
{
  sub_1000258B4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100026394()
{
  return sub_100009334(&qword_1000A3AD8);
}

uint64_t sub_1000263B4(void *a1, uint64_t a2, int a3)
{
  id v84 = a1;
  uint64_t v76 = a2;
  int v75 = a3;
  uint64_t v85 = 0;
  id v72 = sub_10000960C;
  uint64_t v73 = sub_100027BC0;
  id v117 = 0;
  uint64_t v115 = 0;
  char v116 = 0;
  uint64_t v114 = 0;
  uint64_t v82 = 0;
  uint64_t v74 = 0;
  uint64_t v105 = 0;
  v96[3] = 0;
  v96[4] = 0;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  uint64_t v77 = sub_100089700();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = v77 - 8;
  unint64_t v80 = (*(void *)(v78 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v81 = (char *)v19 - v80;
  id v117 = (id)__chkstk_darwin(v84);
  uint64_t v115 = v4;
  char v116 = v5 & 1;
  uint64_t v114 = v3;
  id v6 = v117;
  uint64_t v83 = (uint64_t *)(v3 + OBJC_IVAR____TtC19MailWidgetExtension20MailStatusDataSource_state);
  swift_beginAccess();
  uint64_t v86 = *v83;
  uint64_t v89 = &v112;
  id v112 = v84;
  uint64_t v87 = sub_100009334((uint64_t *)&unk_1000A42F0);
  uint64_t v88 = type metadata accessor for MailStatusDataSource.State();
  sub_100024A3C();
  sub_10008A010();

  uint64_t v90 = v113;
  if (v113)
  {
    uint64_t v71 = v90;
    uint64_t v66 = v90;
    uint64_t v105 = v90;
    swift_endAccess();
    id v7 = v84;
    uint64_t v54 = &v104;
    uint64_t v104 = 0;
    int v53 = &v103;
    id v103 = v84;
    int v55 = &v102;
    uint64_t v56 = 33;
    uint64_t v65 = 0;
    swift_beginAccess();
    sub_100009334((uint64_t *)&unk_1000A3950);
    sub_10008A020();
    swift_endAccess();
    id v8 = v84;
    uint64_t v58 = &v101;
    uint64_t v101 = 0;
    uint64_t v57 = &v100;
    id v100 = v84;
    int v59 = &v99;
    swift_beginAccess();
    sub_100009334(&qword_1000A3930);
    sub_10008A020();
    swift_endAccess();
    int v60 = &v98;
    uint64_t v64 = 32;
    swift_beginAccess();
    uint64_t v61 = v66[3];
    swift_retain();
    swift_endAccess();
    sub_100089E60();
    swift_release();
    uint64_t v62 = &v97;
    swift_beginAccess();
    id v63 = (id)v66[2];
    swift_unknownObjectRetain();
    swift_endAccess();
    swift_getObjectType();
    [v63 cancel];
    swift_unknownObjectRelease();
    int v67 = v96;
    swift_beginAccess();
    uint64_t v68 = v66[4];
    swift_bridgeObjectRetain();
    swift_endAccess();
    uint64_t v95 = v68;
    uint64_t v69 = sub_100009334((uint64_t *)&unk_1000A3960);
    sub_100027AFC();
    sub_10008A350();
    for (uint64_t i = v74; ; uint64_t i = v50)
    {
      uint64_t v50 = i;
      sub_100009334(&qword_1000A3998);
      sub_10008A580();
      uint64_t v51 = v93;
      uint64_t v52 = v94;
      if (v93)
      {
        uint64_t v48 = v51;
        uint64_t v49 = v52;
        uint64_t v45 = v52;
        uint64_t v44 = v51;
        uint64_t v9 = swift_allocObject();
        uint64_t v10 = v45;
        uint64_t v11 = v73;
        *(void *)(v9 + 16) = v44;
        *(void *)(v9 + 24) = v10;
        uint64_t v46 = v11;
        uint64_t v47 = v9;
      }
      else
      {
        uint64_t v46 = 0;
        uint64_t v47 = 0;
      }
      uint64_t v42 = v47;
      uint64_t v43 = v46;
      if (!v46) {
        break;
      }
      uint64_t v40 = v43;
      uint64_t v41 = v42;
      uint64_t v39 = v42;
      uint64_t v38 = v43;
      uint64_t v91 = v43;
      uint64_t v92 = v42;
      swift_retain();
      v38(v76, v75 & 1);
      swift_release();
      swift_release();
    }
    sub_10000ADA0();
    return swift_release();
  }
  else
  {
    id v13 = v81;
    swift_endAccess();
    uint64_t v14 = sub_100024808();
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v13, v14, v77);
    unint64_t v36 = sub_1000896E0();
    int v35 = sub_10008A3A0();
    uint64_t v33 = &v110;
    uint64_t v110 = 2;
    unint64_t v31 = sub_10000818C();
    unint64_t v32 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v34 = v111;
    sub_100009334(&qword_1000A2E38);
    uint64_t v37 = sub_10008A6C0();
    if (os_log_type_enabled(v36, (os_log_type_t)v35))
    {
      uint64_t v15 = v74;
      uint64_t v21 = (uint8_t *)sub_10008A470();
      v19[2] = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v20 = 0;
      uint64_t v22 = sub_100007E5C(0);
      uint64_t v23 = sub_100007E5C(v20);
      uint64_t v27 = &v109;
      id v109 = v21;
      uint64_t v28 = &v108;
      uint64_t v108 = v22;
      uint64_t v25 = &v107;
      uint64_t v107 = v23;
      unsigned int v24 = 0;
      sub_100007EB8(0, &v109);
      sub_100007EB8(v24, v27);
      uint64_t v106 = v37;
      uint64_t v26 = v19;
      __chkstk_darwin(v19);
      uint64_t v16 = v28;
      uint64_t v17 = &v19[-6];
      uint64_t v29 = &v19[-6];
      v17[2] = v27;
      v17[3] = v16;
      v17[4] = v18;
      uint64_t v30 = sub_100009334((uint64_t *)&unk_1000A2E60);
      sub_10000963C();
      sub_10008A120();
      if (v15)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v35, "Query completed but there is no state…", v21, v34);
        v19[1] = 0;
        sub_100007F18(v22);
        sub_100007F18(v23);
        sub_10008A450();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v81, v77);
  }
}

id sub_100026BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  id v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1000278B0(a1, a2, a3, a4, a5);
}

unint64_t sub_100026C2C()
{
  uint64_t v2 = qword_1000A3940;
  if (!qword_1000A3940)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3940);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_100026C94()
{
  if (!"MailWidgetExtension.MailStatusDataSource")
  {
    sub_10008A5A0();
    __break(1u);
  }
  uint64_t result = sub_10005D24C((uint64_t)"MailWidgetExtension.MailStatusDataSource", 40, (unint64_t)"init()", 6, 2, (unint64_t)"MailWidgetExtension/MailStatusDataSource.swift", 46, 2, v1, 0xAuLL, 0xDuLL);
  __break(1u);
  return result;
}

uint64_t sub_100026DA8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

void sub_100026E78(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v57 = a1;
  id v66 = a2;
  uint64_t v58 = a3;
  uint64_t v67 = 0;
  uint64_t v51 = sub_100027C10;
  uint64_t v52 = sub_100027D0C;
  int v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  int v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100027E9C;
  uint64_t v86 = 0;
  uint64_t v85 = 0;
  uint64_t v84 = 0;
  uint64_t v83 = 0;
  uint64_t v64 = 0;
  uint64_t v56 = 0;
  uint64_t v73 = 0;
  uint64_t v59 = sub_100089700();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = v59 - 8;
  unint64_t v62 = (*(void *)(v60 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = (void *)__chkstk_darwin(v66);
  id v63 = (char *)v23 - v62;
  uint64_t v86 = v5;
  uint64_t v85 = v4;
  uint64_t v84 = v6;
  uint64_t v83 = v3;
  id v7 = v4;
  uint64_t v65 = (uint64_t *)(v3 + OBJC_IVAR____TtC19MailWidgetExtension20MailStatusDataSource_debouncers);
  swift_beginAccess();
  uint64_t v68 = *v65;
  uint64_t v71 = &v81;
  id v81 = v66;
  uint64_t v69 = sub_100009334((uint64_t *)&unk_1000A42F0);
  unint64_t v70 = sub_10002584C();
  sub_100024A3C();
  sub_10008A010();

  id v72 = v82;
  if (v82)
  {
    uint64_t v50 = v72;
    id v49 = v72;
    uint64_t v73 = v72;
    swift_endAccess();
    Class isa = sub_10008A2D0().super.super.isa;
    [v49 debounceResult:];
    swift_unknownObjectRelease();
  }
  else
  {
    id v8 = v63;
    swift_endAccess();
    uint64_t v9 = sub_100024808();
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v8, v9, v59);
    id v10 = v66;
    uint64_t v37 = 7;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v66;
    uint64_t v46 = sub_1000896E0();
    int v47 = sub_10008A3A0();
    uint64_t v33 = &v79;
    uint64_t v79 = 12;
    unint64_t v31 = sub_10000818C();
    unint64_t v32 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v34 = v80;
    uint64_t v35 = 17;
    uint64_t v40 = swift_allocObject();
    *(unsigned char *)(v40 + 16) = 64;
    uint64_t v41 = swift_allocObject();
    *(unsigned char *)(v41 + 16) = 8;
    uint64_t v36 = 32;
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v38;
    uint64_t v39 = v11;
    *(void *)(v11 + 16) = v51;
    *(void *)(v11 + 24) = v12;
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = v39;
    uint64_t v43 = v13;
    *(void *)(v13 + 16) = v52;
    *(void *)(v13 + 24) = v14;
    uint64_t v45 = sub_100009334(&qword_1000A2E38);
    uint64_t v42 = sub_10008A6C0();
    uint64_t v44 = v15;
    swift_retain();
    uint64_t v16 = v40;
    uint64_t v17 = v44;
    *uint64_t v44 = v53;
    v17[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
    swift_retain();
    uint64_t v18 = v41;
    uint64_t v19 = v44;
    v44[2] = v54;
    void v19[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v18;
    swift_retain();
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v43;
    uint64_t v21 = v44;
    v44[4] = v55;
    v21[5] = v20;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v46, (os_log_type_t)v47))
    {
      uint64_t v22 = v56;
      unsigned int v24 = (uint8_t *)sub_10008A470();
      v23[3] = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v25 = sub_100007E5C(1);
      uint64_t v26 = sub_100007E5C(0);
      uint64_t v27 = &v78;
      uint64_t v78 = v24;
      uint64_t v28 = &v77;
      uint64_t v77 = v25;
      uint64_t v29 = &v76;
      uint64_t v76 = v26;
      sub_100007EB8(2, &v78);
      sub_100007EB8(1, v27);
      uint64_t v74 = v53;
      uint64_t v75 = v40;
      sub_100007ECC(&v74, (uint64_t)v27, (uint64_t)v28, (uint64_t)v29);
      uint64_t v30 = v22;
      if (v22)
      {
        __break(1u);
      }
      else
      {
        uint64_t v74 = v54;
        uint64_t v75 = v41;
        sub_100007ECC(&v74, (uint64_t)&v78, (uint64_t)&v77, (uint64_t)&v76);
        v23[1] = 0;
        uint64_t v74 = v55;
        uint64_t v75 = v43;
        sub_100007ECC(&v74, (uint64_t)&v78, (uint64_t)&v77, (uint64_t)&v76);
        _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v47, "Missing debouncer for query:%@", v24, v34);
        sub_100007F18(v25);
        sub_100007F18(v26);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v59);
  }
}

void *sub_100027704(void *a1)
{
  id v1 = a1;
  return a1;
}

id sub_1000277A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_10001E5E4();
  v16.super.Class isa = sub_10008A180().super.isa;
  if (a6)
  {
    NSString v10 = sub_10008A070();
    swift_bridgeObjectRelease();
    id v6 = [v13 initWithTargetClass:ObjCClassFromMetadata predicate:a2 sortDescriptors:v16.super.isa queryOptions:a4 label:v10];
  }
  else
  {
    id v6 = [v13 initWithTargetClass:ObjCClassFromMetadata predicate:a2 sortDescriptors:v16.super.isa queryOptions:a4 label:0];
  }
  id v9 = v6;

  swift_bridgeObjectRelease();
  return v9;
}

id sub_1000278B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  aBlock = _NSConcreteStackBlock;
  int v13 = 1107296256;
  int v14 = 0;
  uint64_t v15 = sub_10002797C;
  NSArray v16 = &unk_10009AF40;
  id v9 = _Block_copy(&aBlock);
  id v11 = [v8 initWithTimeInterval:a1 scheduler:a2 startAfter:a5 block:a6];
  _Block_release(v9);
  swift_release();
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_10002797C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(__n128))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  if (a2)
  {
    v6[3] = swift_getObjectType();
    v6[0] = a2;
    __n128 v2 = sub_100027F50((uint64_t)v6, (uint64_t)v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  v4(v2);
  sub_100027F0C((uint64_t)v7);
  return swift_release();
}

uint64_t sub_100027A48()
{
  return swift_deallocObject();
}

uint64_t sub_100027A88(uint64_t a1)
{
  return sub_1000246DC(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_100027A94()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for MailStatusDataSource()
{
  return self;
}

unint64_t sub_100027AFC()
{
  uint64_t v2 = qword_1000A3990;
  if (!qword_1000A3990)
  {
    sub_1000096C0((uint64_t *)&unk_1000A3960);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3990);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100027B80()
{
  return swift_deallocObject();
}

uint64_t sub_100027BC0(uint64_t a1, char a2)
{
  return sub_100026DA8(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_100027BD0()
{
  return swift_deallocObject();
}

void *sub_100027C10()
{
  return sub_100027704(*(void **)(v0 + 16));
}

uint64_t sub_100027C18()
{
  return swift_deallocObject();
}

uint64_t sub_100027C44()
{
  return swift_deallocObject();
}

uint64_t sub_100027C70(void (*a1)(void))
{
  return sub_10008A760();
}

uint64_t sub_100027CA4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100027CCC()
{
  return swift_deallocObject();
}

uint64_t sub_100027D0C()
{
  return sub_100027CA4(*(uint64_t (**)(void))(v0 + 16));
}

void sub_100027D18(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  id v7 = (id)a4();
  uint64_t v8 = *a1;
  sub_10008A490();
  *a1 = v8 + 8;
  uint64_t v4 = *a2;
  if (*a2)
  {
    *uint64_t v4 = v7;
    *a2 = v4 + 1;
  }
  else
  {
  }
}

uint64_t sub_100027E5C()
{
  return swift_deallocObject();
}

void sub_100027E9C(uint64_t *a1, void **a2, uint64_t a3)
{
  sub_100027D18(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_100027EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100027EF0()
{
  return swift_release();
}

uint64_t sub_100027F0C(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    sub_10000B234(a1);
  }
  return a1;
}

__n128 sub_100027F50(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  __n128 result = *(__n128 *)(a1 + 16);
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_100027F6C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v2 = *(void *)(a1 + 24);
    *(void *)(a2 + 24) = v2;
    (**(void (***)(void))(v2 - 8))();
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  }
  return a2;
}

uint64_t sub_100028004()
{
  if (*(void *)(v0 + 40)) {
    sub_10000B234(v2 + 16);
  }
  return swift_deallocObject();
}

_OWORD *sub_100028060(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  a2[1] = a1[1];
  return a2;
}

uint64_t sub_1000280C4()
{
  return sub_100026394();
}

uint64_t sub_1000280CC()
{
  return swift_deallocObject();
}

uint64_t sub_1000280F8()
{
  return swift_deallocObject();
}

uint64_t sub_100028124()
{
  return swift_deallocObject();
}

uint64_t sub_100028164()
{
  return sub_100027C70(*(void (**)(void))(v0 + 16));
}

uint64_t sub_100028170()
{
  return swift_deallocObject();
}

uint64_t sub_1000281B0()
{
  return swift_deallocObject();
}

void *sub_1000281F0(void *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(*(void *)(a2 - 8) + 80);
  if ((v2 & 0x20000) != 0) {
    return (void *)(*result + ((v2 + 16) & ~(unint64_t)v2));
  }
  return result;
}

uint64_t sub_100028268()
{
  uint64_t v1 = sub_100089700();
  sub_1000030B8(v1, qword_1000A3AE0);
  sub_100003160(v1, (uint64_t)qword_1000A3AE0);
  return sub_100016888();
}

uint64_t sub_1000282C4()
{
  if (qword_1000A2DA0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100089700();
  return sub_100003160(v0, (uint64_t)qword_1000A3AE0);
}

uint64_t sub_100028334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v12 = a2;
  uint64_t v9 = a1;
  uint64_t v15 = 0;
  uint64_t v14 = 0;
  uint64_t v11 = 0;
  unint64_t v7 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v10 = (uint64_t)&v6 - v7;
  unint64_t v8 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = (void *)__chkstk_darwin(v11);
  uint64_t v13 = (uint64_t)&v6 - v8;
  uint64_t v15 = v9;
  uint64_t v14 = v2;
  sub_100028458(v3, v4);
  sub_1000801D8(v10, 1, v11, 0, v13);
  return sub_100020B4C(v13, v12);
}

unsigned char *sub_100028458@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a1;
  uint64_t v12 = v2;
  sub_10002CB38(v2, (uint64_t)v11);
  memcpy(__dst, v11, sizeof(__dst));
  id v3 = a1;
  if (a1)
  {
    id v4 = a1;
    sub_100016C90(a1, a2);
  }
  else
  {
    uint64_t v6 = sub_10008A0B0("Intent is nil", 0xDuLL, 1);
    sub_10002C024(v6, v7, (uint64_t)__dst, a2);
    swift_bridgeObjectRelease();
  }
  __n128 result = __dst;
  sub_10002CBA4((uint64_t)__dst);
  return result;
}

uint64_t sub_1000286BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v64 = a1;
  uint64_t v76 = a2;
  uint64_t v62 = a3;
  uint64_t v63 = a4;
  uint64_t v60 = 0;
  uint64_t v74 = sub_10002CC98;
  uint64_t v90 = sub_1000301BC;
  uint64_t v92 = sub_1000092DC;
  uint64_t v95 = sub_100030368;
  uint64_t v97 = sub_100013CA8;
  char v99 = sub_100013CF4;
  id v103 = sub_100013D40;
  uint64_t v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v107 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  id v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint32_t v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v113 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  char v116 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100013D8C;
  uint64_t v58 = sub_1000309B8;
  uint64_t v133 = 0;
  uint64_t v132 = 0;
  uint64_t v130 = 0;
  uint64_t v131 = 0;
  uint64_t v129 = 0;
  uint64_t v59 = 0;
  uint64_t v83 = sub_100089FB0();
  uint64_t v71 = *(void **)(v83 - 8);
  uint64_t v72 = v83 - 8;
  unint64_t v70 = v71;
  uint64_t v80 = v71[8];
  unint64_t v61 = (v80 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v82 = (char *)v47 - v61;
  uint64_t v69 = sub_100089700();
  uint64_t v67 = *(void *)(v69 - 8);
  uint64_t v68 = v69 - 8;
  unint64_t v65 = (*(void *)(v67 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v64);
  uint64_t v5 = (char *)v47 - v65;
  id v66 = (char *)v47 - v65;
  uint64_t v133 = v4;
  uint64_t v132 = v6;
  uint64_t v130 = v7;
  uint64_t v131 = v8;
  uint64_t v129 = v9;
  uint64_t v10 = sub_1000282C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v5, v10, v69);
  uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))v71[2];
  uint64_t v77 = v71 + 2;
  v78(v82, v76, v83);
  uint64_t v79 = *((unsigned int *)v70 + 20);
  unint64_t v73 = (v79 + 16) & ~(unint64_t)v79;
  uint64_t v101 = 7;
  uint64_t v75 = swift_allocObject();
  uint64_t v85 = (void (*)(unint64_t, char *, uint64_t))v71[4];
  uint64_t v84 = v71 + 4;
  v85(v75 + v73, v82, v83);
  swift_retain();
  uint64_t v100 = 32;
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v75;
  uint64_t v91 = v11;
  *(void *)(v11 + 16) = v74;
  *(void *)(v11 + 24) = v12;
  swift_release();
  v78(v82, v76, v83);
  unint64_t v81 = (v79 + 16) & ~(unint64_t)v79;
  uint64_t v96 = swift_allocObject();
  v85(v96 + v81, v82, v83);
  unint64_t v120 = sub_1000896E0();
  int v121 = sub_10008A3B0();
  uint64_t v88 = &v127;
  uint64_t v127 = 18;
  unint64_t v86 = sub_10000818C();
  unint64_t v87 = sub_100008208();
  sub_100008284();
  sub_10008A140();
  uint32_t v89 = v128;
  uint64_t v94 = 17;
  uint64_t v106 = swift_allocObject();
  *(unsigned char *)(v106 + 16) = 32;
  uint64_t v108 = swift_allocObject();
  *(unsigned char *)(v108 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v91;
  uint64_t v93 = v13;
  *(void *)(v13 + 16) = v90;
  *(void *)(v13 + 24) = v14;
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v93;
  uint64_t v110 = v15;
  *(void *)(v15 + 16) = v92;
  *(void *)(v15 + 24) = v16;
  uint64_t v112 = swift_allocObject();
  *(unsigned char *)(v112 + 16) = 0;
  uint64_t v114 = swift_allocObject();
  *(unsigned char *)(v114 + 16) = 4;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v96;
  uint64_t v98 = v17;
  *(void *)(v17 + 16) = v95;
  *(void *)(v17 + 24) = v18;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v98;
  uint64_t v102 = v19;
  *(void *)(v19 + 16) = v97;
  *(void *)(v19 + 24) = v20;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v102;
  uint64_t v104 = v21;
  *(void *)(v21 + 16) = v99;
  *(void *)(v21 + 24) = v22;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v104;
  uint64_t v117 = v23;
  *(void *)(v23 + 16) = v103;
  *(void *)(v23 + 24) = v24;
  uint64_t v119 = sub_100009334(&qword_1000A2E38);
  uint64_t v115 = sub_10008A6C0();
  uint64_t v118 = v25;
  swift_retain();
  uint64_t v26 = v106;
  uint64_t v27 = v118;
  uint64_t *v118 = v105;
  v27[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
  swift_retain();
  uint64_t v28 = v108;
  uint64_t v29 = v118;
  v118[2] = v107;
  v29[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v28;
  swift_retain();
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v110;
  unint64_t v31 = v118;
  v118[4] = v109;
  v31[5] = v30;
  swift_retain();
  uint64_t v32 = v112;
  uint64_t v33 = v118;
  v118[6] = v111;
  v33[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32;
  swift_retain();
  uint64_t v34 = v114;
  uint64_t v35 = v118;
  v118[8] = v113;
  v35[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
  swift_retain();
  uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v117;
  uint64_t v37 = v118;
  v118[10] = v116;
  v37[11] = v36;
  sub_100007A04();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v120, (os_log_type_t)v121))
  {
    uint64_t v38 = v59;
    uint64_t v50 = (uint8_t *)sub_10008A470();
    uint64_t v49 = sub_100009334((uint64_t *)&unk_1000A4320);
    uint64_t v51 = sub_100007E5C(0);
    uint64_t v52 = sub_100007E5C(1);
    uint64_t v54 = &v126;
    uint64_t v126 = v50;
    int v55 = &v125;
    uint64_t v125 = v51;
    uint64_t v56 = &v124;
    uint64_t v124 = v52;
    unsigned int v53 = 2;
    sub_100007EB8(2, &v126);
    sub_100007EB8(v53, v54);
    uint64_t v122 = v105;
    uint64_t v123 = v106;
    sub_100007ECC(&v122, (uint64_t)v54, (uint64_t)v55, (uint64_t)v56);
    uint64_t v57 = v38;
    if (v38)
    {
      __break(1u);
    }
    else
    {
      uint64_t v122 = v107;
      uint64_t v123 = v108;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      uint64_t v48 = 0;
      uint64_t v39 = v48;
      uint64_t v122 = v109;
      uint64_t v123 = v110;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      v47[3] = v39;
      uint64_t v122 = v111;
      uint64_t v123 = v112;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      v47[2] = 0;
      uint64_t v122 = v113;
      uint64_t v123 = v114;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      v47[1] = 0;
      uint64_t v122 = v116;
      uint64_t v123 = v117;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      _os_log_impl((void *)&_mh_execute_header, v120, (os_log_type_t)v121, "Get snapshot for family: %s, is preview: %{BOOL}d", v50, v89);
      sub_100007F18(v51);
      sub_100007F18(v52);
      sub_10008A450();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v69);
  swift_retain();
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v63;
  uint64_t v42 = v76;
  uint64_t v43 = (uint64_t)v58;
  uint64_t v44 = v40;
  uint64_t v45 = v64;
  v47[0] = v44;
  *(void *)(v44 + 16) = v62;
  *(void *)(v44 + 24) = v41;
  sub_100029EAC(v45, v42, v43, v44);
  return swift_release();
}

uint64_t sub_100029480()
{
  return sub_100089F90();
}

uint64_t sub_1000294A4()
{
  return sub_100089FA0() & 1;
}

uint64_t sub_1000294CC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v40 = a1;
  uint64_t v34 = a2;
  uint64_t v33 = a3;
  uint64_t v30 = 0;
  uint64_t v50 = sub_100032A64;
  uint64_t v54 = sub_1000092DC;
  uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  unint64_t v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v76 = 0;
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  uint64_t v29 = 0;
  uint64_t v31 = *(void *)(type metadata accessor for MailEntry() - 8);
  uint64_t v41 = v31;
  uint64_t v42 = *(void *)(v31 + 64);
  unint64_t v32 = (v42 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v44 = (uint64_t)v21 - v32;
  uint64_t v39 = sub_100089700();
  uint64_t v37 = *(void *)(v39 - 8);
  uint64_t v38 = v39 - 8;
  unint64_t v35 = (*(void *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = __chkstk_darwin(v40);
  uint64_t v4 = (char *)v21 - v35;
  uint64_t v36 = (char *)v21 - v35;
  uint64_t v76 = v3;
  uint64_t v74 = v5;
  uint64_t v75 = v6;
  uint64_t v7 = sub_1000282C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v4, v7, v39);
  sub_100020358(v40, v44);
  unint64_t v43 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v52 = 7;
  uint64_t v53 = swift_allocObject();
  sub_100020D7C(v44, v53 + v43);
  unint64_t v65 = sub_1000896E0();
  int v66 = sub_10008A3B0();
  int v47 = &v72;
  uint64_t v72 = 12;
  unint64_t v45 = sub_10000818C();
  unint64_t v46 = sub_100008208();
  sub_100008284();
  sub_10008A140();
  uint32_t v48 = v73;
  uint64_t v49 = 17;
  uint64_t v57 = swift_allocObject();
  *(unsigned char *)(v57 + 16) = 34;
  uint64_t v59 = swift_allocObject();
  *(unsigned char *)(v59 + 16) = 8;
  uint64_t v51 = 32;
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v53;
  uint64_t v55 = v8;
  *(void *)(v8 + 16) = v50;
  *(void *)(v8 + 24) = v9;
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v55;
  uint64_t v62 = v10;
  *(void *)(v10 + 16) = v54;
  *(void *)(v10 + 24) = v11;
  uint64_t v64 = sub_100009334(&qword_1000A2E38);
  uint64_t v60 = sub_10008A6C0();
  uint64_t v63 = v12;
  swift_retain();
  uint64_t v13 = v57;
  uint64_t v14 = v63;
  *uint64_t v63 = v56;
  v14[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v13;
  swift_retain();
  uint64_t v15 = v59;
  uint64_t v16 = v63;
  v63[2] = v58;
  v16[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v15;
  swift_retain();
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v62;
  uint64_t v18 = v63;
  v63[4] = v61;
  v18[5] = v17;
  sub_100007A04();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v65, (os_log_type_t)v66))
  {
    uint64_t v19 = v29;
    uint64_t v22 = (uint8_t *)sub_10008A470();
    v21[2] = sub_100009334((uint64_t *)&unk_1000A4320);
    uint64_t v23 = sub_100007E5C(0);
    uint64_t v24 = sub_100007E5C(1);
    uint64_t v25 = &v71;
    uint64_t v71 = v22;
    uint64_t v26 = &v70;
    uint64_t v70 = v23;
    uint64_t v27 = &v69;
    uint64_t v69 = v24;
    sub_100007EB8(2, &v71);
    sub_100007EB8(1, v25);
    uint64_t v67 = v56;
    uint64_t v68 = v57;
    sub_100007ECC(&v67, (uint64_t)v25, (uint64_t)v26, (uint64_t)v27);
    uint64_t v28 = v19;
    if (v19)
    {
      __break(1u);
    }
    else
    {
      uint64_t v67 = v58;
      uint64_t v68 = v59;
      sub_100007ECC(&v67, (uint64_t)&v71, (uint64_t)&v70, (uint64_t)&v69);
      v21[0] = 0;
      uint64_t v67 = v61;
      uint64_t v68 = v62;
      sub_100007ECC(&v67, (uint64_t)&v71, (uint64_t)&v70, (uint64_t)&v69);
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v66, "Get snapshot completed with relvance: %{public}s", v22, v48);
      sub_100007F18(v23);
      sub_100007F18(v24);
      sub_10008A450();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v39);
  swift_retain();
  v34(v40);
  return swift_release();
}

uint64_t sub_100029C70(uint64_t a1)
{
  uint64_t v12 = a1;
  uint64_t v1 = sub_100009334(&qword_1000A3828);
  unint64_t v8 = (*(void *)(*(void *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  uint64_t v16 = (char *)v5 - v8;
  uint64_t v9 = 0;
  uint64_t v15 = sub_100089F80();
  uint64_t v13 = *(void *)(v15 - 8);
  uint64_t v14 = v15 - 8;
  unint64_t v10 = (*(void *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v5 - v10;
  uint64_t v2 = type metadata accessor for MailEntry();
  sub_10001F83C((const void *)(v12 + *(int *)(v2 + 20)), v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v16, 1, v15) == 1)
  {
    uint64_t v6 = sub_1000830FC();
    uint64_t v7 = &v17;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, v6, v15);
    swift_endAccess();
    sub_100032BA4((uint64_t)v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v16, v15);
  }
  v5[0] = sub_10008316C();
  v5[1] = v3;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v15);
  return v5[0];
}

void sub_100029EAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = a1;
  uint64_t v15 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  uint64_t v12 = v4;
  unsigned __int8 v6 = [self preferenceEnabled:17];
  unsigned char v11[40] = v6 & 1;
  id v5 = a1;
  sub_10002CB38(v4, (uint64_t)v11);
  swift_retain();
  uint64_t v9 = swift_allocObject();
  memcpy((void *)(v9 + 16), v11, 0x28uLL);
  *(unsigned char *)(v9 + 56) = v6 & 1;
  *(void *)(v9 + 64) = a3;
  *(void *)(v9 + 72) = a4;
  sub_10002BD68((uint64_t)a1, (uint64_t)sub_100030A0C, v9);
  swift_release();
}

uint64_t sub_100029FEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v64 = a1;
  uint64_t v76 = a2;
  uint64_t v62 = a3;
  uint64_t v63 = a4;
  uint64_t v60 = 0;
  uint64_t v74 = sub_10002CC98;
  uint64_t v90 = sub_1000301BC;
  uint64_t v92 = sub_1000092DC;
  uint64_t v95 = sub_100030368;
  uint64_t v97 = sub_100013CA8;
  char v99 = sub_100013CF4;
  id v103 = sub_100013D40;
  uint64_t v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v107 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  id v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint32_t v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v113 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  char v116 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100013D8C;
  uint64_t v58 = sub_100030E6C;
  uint64_t v133 = 0;
  uint64_t v132 = 0;
  uint64_t v130 = 0;
  uint64_t v131 = 0;
  uint64_t v129 = 0;
  uint64_t v59 = 0;
  uint64_t v83 = sub_100089FB0();
  uint64_t v71 = *(void **)(v83 - 8);
  uint64_t v72 = v83 - 8;
  uint64_t v70 = v71;
  uint64_t v80 = v71[8];
  unint64_t v61 = (v80 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v82 = (char *)v47 - v61;
  uint64_t v69 = sub_100089700();
  uint64_t v67 = *(void *)(v69 - 8);
  uint64_t v68 = v69 - 8;
  unint64_t v65 = (*(void *)(v67 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v64);
  id v5 = (char *)v47 - v65;
  int v66 = (char *)v47 - v65;
  uint64_t v133 = v4;
  uint64_t v132 = v6;
  uint64_t v130 = v7;
  uint64_t v131 = v8;
  uint64_t v129 = v9;
  uint64_t v10 = sub_1000282C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v5, v10, v69);
  uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))v71[2];
  uint64_t v77 = v71 + 2;
  v78(v82, v76, v83);
  uint64_t v79 = *((unsigned int *)v70 + 20);
  unint64_t v73 = (v79 + 16) & ~(unint64_t)v79;
  uint64_t v101 = 7;
  uint64_t v75 = swift_allocObject();
  uint64_t v85 = (void (*)(unint64_t, char *, uint64_t))v71[4];
  uint64_t v84 = v71 + 4;
  v85(v75 + v73, v82, v83);
  swift_retain();
  uint64_t v100 = 32;
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v75;
  uint64_t v91 = v11;
  *(void *)(v11 + 16) = v74;
  *(void *)(v11 + 24) = v12;
  swift_release();
  v78(v82, v76, v83);
  unint64_t v81 = (v79 + 16) & ~(unint64_t)v79;
  uint64_t v96 = swift_allocObject();
  v85(v96 + v81, v82, v83);
  unint64_t v120 = sub_1000896E0();
  int v121 = sub_10008A3B0();
  uint64_t v88 = &v127;
  uint64_t v127 = 18;
  unint64_t v86 = sub_10000818C();
  unint64_t v87 = sub_100008208();
  sub_100008284();
  sub_10008A140();
  uint32_t v89 = v128;
  uint64_t v94 = 17;
  uint64_t v106 = swift_allocObject();
  *(unsigned char *)(v106 + 16) = 32;
  uint64_t v108 = swift_allocObject();
  *(unsigned char *)(v108 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v91;
  uint64_t v93 = v13;
  *(void *)(v13 + 16) = v90;
  *(void *)(v13 + 24) = v14;
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v93;
  uint64_t v110 = v15;
  *(void *)(v15 + 16) = v92;
  *(void *)(v15 + 24) = v16;
  uint64_t v112 = swift_allocObject();
  *(unsigned char *)(v112 + 16) = 0;
  uint64_t v114 = swift_allocObject();
  *(unsigned char *)(v114 + 16) = 4;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v96;
  uint64_t v98 = v17;
  *(void *)(v17 + 16) = v95;
  *(void *)(v17 + 24) = v18;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v98;
  uint64_t v102 = v19;
  *(void *)(v19 + 16) = v97;
  *(void *)(v19 + 24) = v20;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v102;
  uint64_t v104 = v21;
  *(void *)(v21 + 16) = v99;
  *(void *)(v21 + 24) = v22;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v104;
  uint64_t v117 = v23;
  *(void *)(v23 + 16) = v103;
  *(void *)(v23 + 24) = v24;
  uint64_t v119 = sub_100009334(&qword_1000A2E38);
  uint64_t v115 = sub_10008A6C0();
  uint64_t v118 = v25;
  swift_retain();
  uint64_t v26 = v106;
  uint64_t v27 = v118;
  uint64_t *v118 = v105;
  v27[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
  swift_retain();
  uint64_t v28 = v108;
  uint64_t v29 = v118;
  v118[2] = v107;
  v29[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v28;
  swift_retain();
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v110;
  uint64_t v31 = v118;
  v118[4] = v109;
  v31[5] = v30;
  swift_retain();
  uint64_t v32 = v112;
  uint64_t v33 = v118;
  v118[6] = v111;
  v33[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32;
  swift_retain();
  uint64_t v34 = v114;
  unint64_t v35 = v118;
  v118[8] = v113;
  v35[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
  swift_retain();
  uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v117;
  uint64_t v37 = v118;
  v118[10] = v116;
  v37[11] = v36;
  sub_100007A04();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v120, (os_log_type_t)v121))
  {
    uint64_t v38 = v59;
    uint64_t v50 = (uint8_t *)sub_10008A470();
    uint64_t v49 = sub_100009334((uint64_t *)&unk_1000A4320);
    uint64_t v51 = sub_100007E5C(0);
    uint64_t v52 = sub_100007E5C(1);
    uint64_t v54 = &v126;
    uint64_t v126 = v50;
    uint64_t v55 = &v125;
    uint64_t v125 = v51;
    uint64_t v56 = &v124;
    uint64_t v124 = v52;
    unsigned int v53 = 2;
    sub_100007EB8(2, &v126);
    sub_100007EB8(v53, v54);
    uint64_t v122 = v105;
    uint64_t v123 = v106;
    sub_100007ECC(&v122, (uint64_t)v54, (uint64_t)v55, (uint64_t)v56);
    uint64_t v57 = v38;
    if (v38)
    {
      __break(1u);
    }
    else
    {
      uint64_t v122 = v107;
      uint64_t v123 = v108;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      uint64_t v48 = 0;
      uint64_t v39 = v48;
      uint64_t v122 = v109;
      uint64_t v123 = v110;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      v47[3] = v39;
      uint64_t v122 = v111;
      uint64_t v123 = v112;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      v47[2] = 0;
      uint64_t v122 = v113;
      uint64_t v123 = v114;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      v47[1] = 0;
      uint64_t v122 = v116;
      uint64_t v123 = v117;
      sub_100007ECC(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      _os_log_impl((void *)&_mh_execute_header, v120, (os_log_type_t)v121, "Get timeline for family: %s, is preview: %{BOOL}d", v50, v89);
      sub_100007F18(v51);
      sub_100007F18(v52);
      sub_10008A450();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v69);
  swift_retain();
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v63;
  uint64_t v42 = v76;
  uint64_t v43 = (uint64_t)v58;
  uint64_t v44 = v40;
  unint64_t v45 = v64;
  v47[0] = v44;
  *(void *)(v44 + 16) = v62;
  *(void *)(v44 + 24) = v41;
  sub_100029EAC(v45, v42, v43, v44);
  return swift_release();
}

uint64_t sub_10002ADB0(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v51 = a1;
  unint64_t v45 = a2;
  uint64_t v44 = a3;
  uint64_t v40 = 0;
  unint64_t v61 = sub_100032A64;
  unint64_t v65 = sub_1000092DC;
  uint64_t v67 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v72 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v87 = 0;
  uint64_t v85 = 0;
  uint64_t v86 = 0;
  uint64_t v32 = 0;
  uint64_t v3 = sub_100089F20();
  unint64_t v33 = (*(void *)(*(void *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  uint64_t v34 = (char *)v24 - v33;
  uint64_t v35 = sub_100009334((uint64_t *)&unk_1000A3B20);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = v35 - 8;
  unint64_t v38 = (*(void *)(v36 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)v24 - v38;
  uint64_t v41 = type metadata accessor for MailEntry();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v52 = v42;
  uint64_t v53 = *(void *)(v42 + 64);
  unint64_t v43 = (v53 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v40);
  uint64_t v55 = (uint64_t)v24 - v43;
  uint64_t v50 = sub_100089700();
  uint64_t v48 = *(void *)(v50 - 8);
  uint64_t v49 = v50 - 8;
  unint64_t v46 = (*(void *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v51);
  id v5 = (char *)v24 - v46;
  int v47 = (char *)v24 - v46;
  uint64_t v87 = v4;
  uint64_t v85 = v6;
  uint64_t v86 = v7;
  uint64_t v8 = sub_1000282C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v5, v8, v50);
  sub_100020358(v51, v55);
  unint64_t v54 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  uint64_t v63 = 7;
  uint64_t v64 = swift_allocObject();
  sub_100020D7C(v55, v64 + v54);
  uint64_t v76 = sub_1000896E0();
  int v77 = sub_10008A3B0();
  uint64_t v58 = &v83;
  uint64_t v83 = 12;
  unint64_t v56 = sub_10000818C();
  unint64_t v57 = sub_100008208();
  sub_100008284();
  sub_10008A140();
  uint32_t v59 = v84;
  uint64_t v60 = 17;
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 34;
  uint64_t v70 = swift_allocObject();
  *(unsigned char *)(v70 + 16) = 8;
  uint64_t v62 = 32;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = v64;
  uint64_t v66 = v9;
  *(void *)(v9 + 16) = v61;
  *(void *)(v9 + 24) = v10;
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v66;
  uint64_t v73 = v11;
  *(void *)(v11 + 16) = v65;
  *(void *)(v11 + 24) = v12;
  uint64_t v75 = sub_100009334(&qword_1000A2E38);
  uint64_t v71 = sub_10008A6C0();
  uint64_t v74 = v13;
  swift_retain();
  uint64_t v14 = v68;
  uint64_t v15 = v74;
  uint64_t *v74 = v67;
  v15[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v14;
  swift_retain();
  uint64_t v16 = v70;
  uint64_t v17 = v74;
  v74[2] = v69;
  v17[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
  swift_retain();
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v73;
  uint64_t v19 = v74;
  v74[4] = v72;
  v19[5] = v18;
  sub_100007A04();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v76, (os_log_type_t)v77))
  {
    uint64_t v20 = v32;
    uint64_t v25 = (uint8_t *)sub_10008A470();
    v24[4] = sub_100009334((uint64_t *)&unk_1000A4320);
    uint64_t v26 = sub_100007E5C(0);
    uint64_t v27 = sub_100007E5C(1);
    uint64_t v28 = &v82;
    uint64_t v82 = v25;
    uint64_t v29 = &v81;
    uint64_t v81 = v26;
    uint64_t v30 = &v80;
    uint64_t v80 = v27;
    sub_100007EB8(2, &v82);
    sub_100007EB8(1, v28);
    uint64_t v78 = v67;
    uint64_t v79 = v68;
    sub_100007ECC(&v78, (uint64_t)v28, (uint64_t)v29, (uint64_t)v30);
    uint64_t v31 = v20;
    if (v20)
    {
      __break(1u);
    }
    else
    {
      uint64_t v78 = v69;
      uint64_t v79 = v70;
      sub_100007ECC(&v78, (uint64_t)&v82, (uint64_t)&v81, (uint64_t)&v80);
      v24[2] = 0;
      uint64_t v78 = v72;
      uint64_t v79 = v73;
      sub_100007ECC(&v78, (uint64_t)&v82, (uint64_t)&v81, (uint64_t)&v80);
      _os_log_impl((void *)&_mh_execute_header, v76, (os_log_type_t)v77, "Get timeline completed with relvance: %{public}s", v25, v59);
      sub_100007F18(v26);
      sub_100007F18(v27);
      sub_10008A450();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v50);
  swift_retain();
  v24[0] = sub_10008A6C0();
  sub_100020358(v51, v21);
  uint64_t v22 = v24[0];
  sub_100007A04();
  v24[1] = v22;
  sub_100089F10();
  sub_100031E74();
  sub_100089FC0();
  v45(v39);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
  return swift_release();
}

uint64_t sub_10002B700(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a1;
  uint64_t v16 = a2;
  int v25 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v26 = sub_100032E00;
  uint64_t v39 = 0;
  uint64_t v38 = 0;
  char v37 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v17 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v19 = v17;
  uint64_t v20 = *(void *)(v17 + 64);
  unint64_t v18 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = __chkstk_darwin(v16);
  uint64_t v24 = (uint64_t)&v16 - v18;
  uint64_t v39 = v6;
  uint64_t v38 = v5;
  char v37 = v7 & 1;
  uint64_t v35 = v8;
  uint64_t v36 = v9;
  uint64_t v31 = v32;
  sub_10002CB38(v5, (uint64_t)v32);
  uint64_t v27 = v33;
  uint64_t v28 = v34;
  sub_1000281F0(v31, v33);
  swift_retain();
  sub_10000E524(v29, v24);
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v22;
  unint64_t v12 = v23;
  uint64_t v13 = v10;
  uint64_t v14 = v24;
  uint64_t v30 = v13;
  *(void *)(v13 + 16) = v21;
  *(void *)(v13 + 24) = v11;
  sub_10000E8F8(v14, v13 + v12);
  (*(void (**)(uint64_t, void, void *(*)(unint64_t, uint64_t, int), uint64_t, uint64_t))(v28 + 16))(v29, v25 & 1, v26, v30, v27);
  swift_release();
  return sub_10000B234((uint64_t)v31);
}

void *sub_10002B8FC(unint64_t a1, uint64_t a2, int a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  unint64_t v55 = 0;
  memset(v56, 0, 11);
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v52 = 0;
  unint64_t v48 = 0;
  uint64_t v46 = 0;
  char v47 = 0;
  char v45 = 0;
  v56[2] = a1;
  v56[3] = a2;
  int v57 = a3;
  unint64_t v40 = a1;
  uint64_t v41 = a2;
  unsigned int v42 = (unsigned __int16)a3;
  int v39 = BYTE2(a3);
  uint64_t v33 = 0;
  unint64_t v31 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v32 = (uint64_t)&v13 - v31;
  unint64_t v34 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v33);
  uint64_t v35 = (uint64_t)&v13 - v34;
  uint64_t v6 = type metadata accessor for MailEntry();
  __chkstk_darwin(v6);
  uint64_t v43 = (uint64_t)&v13 - v7;
  unint64_t v55 = v40;
  v56[0] = v41;
  LOWORD(v56[1]) = v42;
  BYTE2(v56[1]) = v8 & 1;
  uint64_t v53 = v9;
  uint64_t v54 = v10;
  uint64_t v52 = v11;
  if (v8)
  {
    uint64_t v49 = 1;
    uint64_t v50 = 0;
    unsigned __int16 v51 = 0;
  }
  else
  {
    unint64_t v27 = v40;
    uint64_t v28 = v41;
    unsigned int v29 = v42;
    unsigned int v30 = v42 >> 8;
    unsigned int v22 = v42 >> 8;
    unsigned int v21 = v42;
    uint64_t v20 = v41;
    unint64_t v23 = v40;
    swift_bridgeObjectRetain();
    unint64_t v48 = v23;
    uint64_t v46 = v20;
    char v47 = v21 & 1;
    char v45 = v22 & 1;
    swift_bridgeObjectRetain();
    int v25 = &v44;
    unint64_t v44 = v23;
    uint64_t v24 = sub_100009334(&qword_1000A35A0);
    sub_100014A90();
    int v26 = sub_10008A340();
    sub_10000ADA0();
    if (v26)
    {
      unint64_t v17 = 0;
      uint64_t v18 = 0;
      int v19 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v17 = v23;
      uint64_t v18 = v20;
      int v19 = v21 & 1 | ((v22 & 1) << 8);
    }
    uint64_t v49 = v17;
    uint64_t v50 = v18;
    unsigned __int16 v51 = v19;
    swift_bridgeObjectRelease();
  }
  swift_retain();
  sub_10000E524(v38, v32);
  uint64_t v16 = (unint64_t *)&v49;
  uint64_t v13 = v49;
  uint64_t v14 = v50;
  int v15 = v51;
  sub_100032ED4(v49);
  sub_1000801D8(v32, v13, v14, v15, v35);
  sub_100020B4C(v35, v43);
  v36(v43);
  sub_1000208EC(v43);
  swift_release();
  return sub_100032F24(v16);
}

uint64_t sub_10002BD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  unint64_t v31 = sub_100031064;
  char v45 = 0;
  unint64_t v44 = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  uint64_t v41 = 0;
  uint64_t v17 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v21 = v17;
  uint64_t v22 = *(void *)(v17 + 64);
  unint64_t v18 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v16);
  uint64_t v24 = (uint64_t)&v16 - v18;
  unint64_t v19 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = (void *)__chkstk_darwin(v4);
  uint64_t v36 = (uint64_t)&v16 - v19;
  char v45 = (char *)&v16 - v19;
  unint64_t v44 = v6;
  uint64_t v42 = v7;
  uint64_t v43 = v8;
  uint64_t v41 = v3;
  sub_100028458(v6, (uint64_t)&v16 - v19);
  uint64_t v35 = v38;
  sub_10002CB38(v20, (uint64_t)v38);
  uint64_t v32 = v39;
  uint64_t v33 = v40;
  sub_1000281F0(v35, v39);
  sub_10000E524(v36, v24);
  swift_retain();
  unsigned int v29 = v37;
  sub_10002CB38(v20, (uint64_t)v37);
  unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v25 = (v23 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = 40;
  uint64_t v34 = swift_allocObject();
  sub_10000E8F8(v24, v34 + v23);
  uint64_t v9 = v27;
  unint64_t v10 = v28;
  uint64_t v11 = v29;
  size_t v12 = v30;
  uint64_t v13 = v34;
  uint64_t v14 = (void *)(v34 + v25);
  *uint64_t v14 = v26;
  v14[1] = v9;
  memcpy((void *)(v13 + v10), v11, v12);
  (*(void (**)(uint64_t (*)(uint64_t, char), uint64_t, uint64_t))(v33 + 32))(v31, v34, v32);
  swift_release();
  sub_10000B234((uint64_t)v35);
  return sub_100015540(v36);
}

uint64_t sub_10002C024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v48 = a4;
  uint64_t v59 = a1;
  uint64_t v60 = a2;
  uint64_t v50 = a3;
  uint64_t v67 = sub_1000138EC;
  uint64_t v69 = sub_1000092DC;
  uint64_t v73 = sub_1000333FC;
  int v77 = sub_1000092DC;
  uint64_t v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v83 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v90 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v108 = 0;
  uint64_t v109 = 0;
  uint64_t v107 = 0;
  char v103 = 0;
  uint64_t v49 = 0;
  uint64_t v58 = sub_100089700();
  uint64_t v56 = *(void *)(v58 - 8);
  uint64_t v57 = v58 - 8;
  unint64_t v51 = (*(void *)(v56 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v50);
  uint64_t v54 = (char *)v37 - v51;
  uint64_t v108 = v5;
  uint64_t v109 = v6;
  uint64_t v107 = v4;
  unint64_t v55 = v104;
  sub_10002CB38(v4, (uint64_t)v104);
  uint64_t v53 = v105;
  uint64_t v52 = v106;
  sub_1000281F0(v55, v105);
  int v7 = (*(uint64_t (**)(uint64_t))(v52 + 8))(v53);
  uint64_t v8 = v54;
  int v62 = v7;
  int v61 = 1;
  char v103 = v7 & 1;
  sub_10000B234((uint64_t)v55);
  uint64_t v9 = sub_1000282C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v8, v9, v58);
  swift_bridgeObjectRetain();
  uint64_t v74 = 32;
  uint64_t v75 = 7;
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v60;
  uint64_t v68 = v10;
  *(void *)(v10 + 16) = v59;
  *(void *)(v10 + 24) = v11;
  uint64_t v71 = 17;
  uint64_t v76 = swift_allocObject();
  *(unsigned char *)(v76 + 16) = v62 & v61;
  uint64_t v94 = sub_1000896E0();
  int v95 = sub_10008A3A0();
  unint64_t v65 = &v101;
  uint64_t v101 = 22;
  unint64_t v63 = sub_10000818C();
  unint64_t v64 = sub_100008208();
  sub_100008284();
  sub_10008A140();
  uint32_t v66 = v102;
  uint64_t v80 = swift_allocObject();
  *(unsigned char *)(v80 + 16) = 34;
  uint64_t v82 = swift_allocObject();
  int v72 = 8;
  *(unsigned char *)(v82 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v68;
  uint64_t v70 = v12;
  *(void *)(v12 + 16) = v67;
  *(void *)(v12 + 24) = v13;
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v70;
  uint64_t v84 = v14;
  *(void *)(v14 + 16) = v69;
  *(void *)(v14 + 24) = v15;
  uint64_t v86 = swift_allocObject();
  *(unsigned char *)(v86 + 16) = 32;
  uint64_t v88 = swift_allocObject();
  *(unsigned char *)(v88 + 16) = v72;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v76;
  uint64_t v78 = v16;
  *(void *)(v16 + 16) = v73;
  *(void *)(v16 + 24) = v17;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v78;
  uint64_t v91 = v18;
  *(void *)(v18 + 16) = v77;
  *(void *)(v18 + 24) = v19;
  uint64_t v93 = sub_100009334(&qword_1000A2E38);
  uint64_t v89 = sub_10008A6C0();
  uint64_t v92 = v20;
  swift_retain();
  uint64_t v21 = v80;
  uint64_t v22 = v92;
  *uint64_t v92 = v79;
  v22[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v21;
  swift_retain();
  uint64_t v23 = v82;
  uint64_t v24 = v92;
  v92[2] = v81;
  v24[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v23;
  swift_retain();
  unint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v84;
  uint64_t v26 = v92;
  v92[4] = v83;
  v26[5] = v25;
  swift_retain();
  uint64_t v27 = v86;
  unint64_t v28 = v92;
  v92[6] = v85;
  v28[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v27;
  swift_retain();
  uint64_t v29 = v88;
  uint64_t v30 = v92;
  v92[8] = v87;
  v30[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29;
  swift_retain();
  unint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v91;
  uint64_t v32 = v92;
  v92[10] = v90;
  v32[11] = v31;
  sub_100007A04();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v94, (os_log_type_t)v95))
  {
    uint64_t v33 = v49;
    uint64_t v40 = (uint8_t *)sub_10008A470();
    uint64_t v39 = sub_100009334((uint64_t *)&unk_1000A4320);
    uint64_t v41 = sub_100007E5C(0);
    uint64_t v42 = sub_100007E5C(2);
    unint64_t v44 = &v100;
    uint64_t v100 = v40;
    char v45 = &v99;
    uint64_t v99 = v41;
    uint64_t v46 = &v98;
    uint64_t v98 = v42;
    unsigned int v43 = 2;
    sub_100007EB8(2, &v100);
    sub_100007EB8(v43, v44);
    uint64_t v96 = v79;
    uint64_t v97 = v80;
    sub_100007ECC(&v96, (uint64_t)v44, (uint64_t)v45, (uint64_t)v46);
    uint64_t v47 = v33;
    if (v33)
    {
      __break(1u);
    }
    else
    {
      uint64_t v96 = v81;
      uint64_t v97 = v82;
      sub_100007ECC(&v96, (uint64_t)&v100, (uint64_t)&v99, (uint64_t)&v98);
      uint64_t v38 = 0;
      uint64_t v34 = v38;
      uint64_t v96 = v83;
      uint64_t v97 = v84;
      sub_100007ECC(&v96, (uint64_t)&v100, (uint64_t)&v99, (uint64_t)&v98);
      v37[3] = v34;
      uint64_t v96 = v85;
      uint64_t v97 = v86;
      sub_100007ECC(&v96, (uint64_t)&v100, (uint64_t)&v99, (uint64_t)&v98);
      v37[2] = 0;
      uint64_t v96 = v87;
      uint64_t v97 = v88;
      sub_100007ECC(&v96, (uint64_t)&v100, (uint64_t)&v99, (uint64_t)&v98);
      v37[1] = 0;
      uint64_t v96 = v90;
      uint64_t v97 = v91;
      sub_100007ECC(&v96, (uint64_t)&v100, (uint64_t)&v99, (uint64_t)&v98);
      _os_log_impl((void *)&_mh_execute_header, v94, (os_log_type_t)v95, "%{public}s, fallback to %s", v40, v66);
      sub_100007F18(v41);
      sub_100007F18(v42);
      sub_10008A450();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v58);
  if (v62) {
    uint64_t v35 = sub_100019F60();
  }
  else {
    uint64_t v35 = sub_10001A100();
  }
  return sub_10000E524(v35, v48);
}

uint64_t sub_10002CB38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v2;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t))(v2 - 8))(a2);
  return a2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10002CBA4(uint64_t a1)
{
}

uint64_t sub_10002CBCC()
{
  uint64_t v2 = *(void *)(sub_100089FB0() - 8);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
  return swift_deallocObject();
}

uint64_t sub_10002CC98()
{
  sub_100089FB0();

  return sub_100029480();
}

uint64_t sub_10002CD10(char a1)
{
  if (a1) {
    return sub_10008A0B0("'VIP'", 5uLL, 1);
  }
  else {
    return sub_10008A0B0("'All Inboxes'", 0xDuLL, 1);
  }
}

uint64_t sub_10002CD8C(uint64_t a1, int a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v125 = a1;
  int v124 = a2;
  uint64_t v120 = a3;
  int v121 = a4;
  uint64_t v122 = a5;
  uint64_t v123 = a6;
  uint64_t v117 = 0;
  uint64_t v106 = sub_100032680;
  uint64_t v107 = sub_10000B074;
  uint64_t v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v110 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10000B0C0;
  uint32_t v111 = sub_100014654;
  uint64_t v112 = sub_1000092DC;
  uint64_t v113 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v115 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v153 = 0;
  char v154 = 0;
  uint64_t v152 = 0;
  uint64_t v150 = 0;
  uint64_t v151 = 0;
  uint64_t v149 = 0;
  uint64_t v148 = 0;
  uint64_t v116 = 0;
  uint64_t v140 = 0;
  unint64_t v118 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v119 = (uint64_t)v43 - v118;
  uint64_t v126 = sub_100089700();
  uint64_t v127 = *(void *)(v126 - 8);
  uint64_t v128 = v126 - 8;
  unint64_t v129 = (*(void *)(v127 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = __chkstk_darwin(v125);
  uint64_t v130 = (char *)v43 - v129;
  unint64_t v131 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v132 = (char *)v43 - v131;
  uint64_t v153 = v8;
  char v154 = v9 & 1;
  uint64_t v152 = v10;
  uint64_t v150 = v11;
  uint64_t v151 = v12;
  uint64_t v149 = v13;
  if (v9)
  {
    uint64_t v104 = v125;
    uint64_t v29 = v130;
    uint64_t v54 = v125;
    swift_errorRetain();
    uint64_t v148 = v54;
    uint64_t v30 = sub_1000282C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v29, v30, v126);
    swift_errorRetain();
    uint64_t v61 = 7;
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = v54;
    uint64_t v70 = sub_1000896E0();
    int v71 = sub_10008A3A0();
    uint64_t v57 = &v146;
    uint64_t v146 = 12;
    unint64_t v55 = sub_10000818C();
    unint64_t v56 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v58 = v147;
    uint64_t v59 = 17;
    uint64_t v64 = swift_allocObject();
    *(unsigned char *)(v64 + 16) = 32;
    uint64_t v65 = swift_allocObject();
    *(unsigned char *)(v65 + 16) = 8;
    uint64_t v60 = 32;
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v62;
    uint64_t v63 = v31;
    *(void *)(v31 + 16) = v111;
    *(void *)(v31 + 24) = v32;
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v63;
    uint64_t v67 = v33;
    *(void *)(v33 + 16) = v112;
    *(void *)(v33 + 24) = v34;
    uint64_t v69 = sub_100009334(&qword_1000A2E38);
    uint64_t v66 = sub_10008A6C0();
    uint64_t v68 = v35;
    swift_retain();
    uint64_t v36 = v64;
    uint64_t v37 = v68;
    uint64_t *v68 = v113;
    v37[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
    swift_retain();
    uint64_t v38 = v65;
    uint64_t v39 = v68;
    v68[2] = v114;
    v39[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38;
    swift_retain();
    uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v67;
    uint64_t v41 = v68;
    v68[4] = v115;
    v41[5] = v40;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v70, (os_log_type_t)v71))
    {
      uint64_t v42 = v116;
      uint64_t v47 = (uint8_t *)sub_10008A470();
      uint64_t v46 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v48 = sub_100007E5C(0);
      uint64_t v49 = sub_100007E5C(1);
      uint64_t v50 = &v145;
      uint64_t v145 = v47;
      unint64_t v51 = &v144;
      uint64_t v144 = v48;
      uint64_t v52 = &v143;
      uint64_t v143 = v49;
      sub_100007EB8(2, &v145);
      sub_100007EB8(1, v50);
      uint64_t v141 = v113;
      uint64_t v142 = v64;
      sub_100007ECC(&v141, (uint64_t)v50, (uint64_t)v51, (uint64_t)v52);
      uint64_t v53 = v42;
      if (v42)
      {
        __break(1u);
      }
      else
      {
        uint64_t v141 = v114;
        uint64_t v142 = v65;
        sub_100007ECC(&v141, (uint64_t)&v145, (uint64_t)&v144, (uint64_t)&v143);
        uint64_t v45 = 0;
        uint64_t v141 = v115;
        uint64_t v142 = v67;
        sub_100007ECC(&v141, (uint64_t)&v145, (uint64_t)&v144, (uint64_t)&v143);
        _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v71, "Failed to get excluded accounts. %s", v47, v58);
        sub_100007F18(v48);
        sub_100007F18(v49);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v127 + 8))(v130, v126);
    v43[1] = &type metadata for String;
    sub_10008A6C0();
    uint64_t v44 = sub_10008A290();
    sub_10002DE68(v120, v44, (uint64_t)v121, v122);
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v105 = v125;
    uint64_t v14 = v132;
    uint64_t v86 = v125;
    swift_bridgeObjectRetain();
    uint64_t v140 = v86;
    uint64_t v15 = sub_1000282C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v14, v15, v126);
    swift_bridgeObjectRetain();
    uint64_t v93 = 7;
    uint64_t v94 = swift_allocObject();
    *(void *)(v94 + 16) = v86;
    uint32_t v102 = sub_1000896E0();
    int v103 = sub_10008A3B0();
    uint64_t v89 = &v138;
    uint64_t v138 = 12;
    unint64_t v87 = sub_10000818C();
    unint64_t v88 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v90 = v139;
    uint64_t v91 = 17;
    uint64_t v96 = swift_allocObject();
    *(unsigned char *)(v96 + 16) = 0;
    uint64_t v97 = swift_allocObject();
    *(unsigned char *)(v97 + 16) = 8;
    uint64_t v92 = 32;
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = v94;
    uint64_t v95 = v16;
    *(void *)(v16 + 16) = v106;
    *(void *)(v16 + 24) = v17;
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v95;
    uint64_t v99 = v18;
    *(void *)(v18 + 16) = v107;
    *(void *)(v18 + 24) = v19;
    uint64_t v101 = sub_100009334(&qword_1000A2E38);
    uint64_t v98 = sub_10008A6C0();
    uint64_t v100 = v20;
    swift_retain();
    uint64_t v21 = v96;
    uint64_t v22 = v100;
    *uint64_t v100 = v108;
    v22[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v21;
    swift_retain();
    uint64_t v23 = v97;
    uint64_t v24 = v100;
    v100[2] = v109;
    v24[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v23;
    swift_retain();
    unint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v99;
    uint64_t v26 = v100;
    v100[4] = v110;
    v26[5] = v25;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v102, (os_log_type_t)v103))
    {
      uint64_t v27 = v116;
      uint64_t v79 = (uint8_t *)sub_10008A470();
      uint64_t v77 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v78 = 0;
      uint64_t v80 = sub_100007E5C(0);
      uint64_t v81 = sub_100007E5C(v78);
      uint64_t v82 = &v137;
      uint64_t v137 = v79;
      uint64_t v83 = &v136;
      uint64_t v136 = v80;
      uint64_t v84 = &v135;
      uint64_t v135 = v81;
      sub_100007EB8(0, &v137);
      sub_100007EB8(1, v82);
      uint64_t v133 = v108;
      uint64_t v134 = v96;
      sub_100007ECC(&v133, (uint64_t)v82, (uint64_t)v83, (uint64_t)v84);
      uint64_t v85 = v27;
      if (v27)
      {
        __break(1u);
      }
      else
      {
        uint64_t v133 = v109;
        uint64_t v134 = v97;
        sub_100007ECC(&v133, (uint64_t)&v137, (uint64_t)&v136, (uint64_t)&v135);
        uint64_t v76 = 0;
        uint64_t v133 = v110;
        uint64_t v134 = v99;
        sub_100007ECC(&v133, (uint64_t)&v137, (uint64_t)&v136, (uint64_t)&v135);
        _os_log_impl((void *)&_mh_execute_header, v102, (os_log_type_t)v103, "Received %ld focused accounts", v79, v90);
        uint64_t v75 = 0;
        sub_100007F18(v80);
        sub_100007F18(v81);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v127 + 8))(v132, v126);
    int v74 = sub_10008A2B0();
    sub_10000E524(v120, v119);
    if (v74) {
      int v73 = sub_10001925C();
    }
    else {
      int v73 = 0;
    }
    int v72 = v73;
    sub_100015540(v119);
    if (v72)
    {
      swift_retain();
      v121(v120);
      swift_release();
    }
    else
    {
      sub_10002DE68(v120, v86, (uint64_t)v121, v122);
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10002DE40()
{
  return sub_10008A2A0();
}

uint64_t sub_10002DE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v122 = a1;
  uint64_t v125 = a2;
  uint64_t v123 = a3;
  uint64_t v124 = a4;
  uint64_t v116 = 0;
  uint64_t v104 = sub_1000138EC;
  uint64_t v105 = sub_1000092DC;
  uint64_t v106 = sub_100013AD0;
  uint64_t v107 = sub_1000092DC;
  uint64_t v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v110 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint32_t v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v112 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v113 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v114 = sub_10003166C;
  uint64_t v150 = 0;
  uint64_t v149 = 0;
  uint64_t v147 = 0;
  uint64_t v148 = 0;
  uint64_t v146 = 0;
  uint64_t v141 = 0;
  uint64_t v142 = 0;
  uint64_t v115 = 0;
  uint64_t v117 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v118 = v117;
  uint64_t v119 = *(void *)(v117 + 64);
  unint64_t v120 = (v119 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v121 = (uint64_t)&v48 - v120;
  uint64_t v126 = sub_100089700();
  uint64_t v127 = *(void *)(v126 - 8);
  uint64_t v128 = v126 - 8;
  unint64_t v129 = (*(void *)(v127 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = __chkstk_darwin(v125);
  uint64_t v130 = (char *)&v48 - v129;
  uint64_t v150 = v6;
  uint64_t v149 = v5;
  uint64_t v147 = v7;
  uint64_t v148 = v8;
  uint64_t v146 = v4;
  if (sub_10008A2B0())
  {
    uint64_t v101 = sub_10008A0B0("Mailbox is invalid", 0x12uLL, 1);
  }
  else
  {
    uint64_t v10 = sub_10008A6B0();
    uint64_t v98 = &v144;
    uint64_t v144 = v10;
    uint64_t v145 = v11;
    int v96 = 1;
    v151._countAndFlagsBits = sub_10008A0B0("Update mailbox for ", 0x13uLL, 1);
    object = v151._object;
    sub_10008A6A0(v151);
    swift_bridgeObjectRelease();
    uint64_t v143 = sub_10008A2A0();
    sub_10008A680();
    v152._countAndFlagsBits = sub_10008A0B0(" focused accounts", 0x11uLL, v96 & 1);
    uint64_t v97 = v152._object;
    sub_10008A6A0(v152);
    swift_bridgeObjectRelease();
    uint64_t v100 = v144;
    uint64_t v99 = v145;
    swift_bridgeObjectRetain();
    sub_100009A54();
    uint64_t v101 = sub_10008A0A0();
  }
  uint64_t v102 = v9;
  uint64_t v12 = v130;
  uint64_t v68 = v9;
  uint64_t v67 = v101;
  uint64_t v141 = v101;
  uint64_t v142 = v9;
  uint64_t v13 = sub_1000282C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v12, v13, v126);
  swift_bridgeObjectRetain();
  uint64_t v80 = 32;
  uint64_t v81 = 7;
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v68;
  uint64_t v16 = v121;
  uint64_t v17 = v14;
  uint64_t v18 = v122;
  uint64_t v75 = v17;
  *(void *)(v17 + 16) = v67;
  *(void *)(v17 + 24) = v15;
  sub_10000E524(v18, v16);
  uint64_t v69 = *(unsigned int *)(v118 + 80);
  unint64_t v70 = (v69 + 16) & ~(unint64_t)v69;
  uint64_t v82 = swift_allocObject();
  sub_10000E8F8(v121, v82 + v70);
  uint64_t v93 = sub_1000896E0();
  int v94 = sub_10008A3B0();
  int v73 = &v139;
  uint64_t v139 = 22;
  unint64_t v71 = sub_10000818C();
  unint64_t v72 = sub_100008208();
  sub_100008284();
  sub_10008A140();
  uint32_t v74 = v140;
  uint64_t v78 = 17;
  uint64_t v84 = swift_allocObject();
  int v77 = 34;
  *(unsigned char *)(v84 + 16) = 34;
  uint64_t v85 = swift_allocObject();
  int v79 = 8;
  *(unsigned char *)(v85 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v75;
  uint64_t v76 = v19;
  *(void *)(v19 + 16) = v104;
  *(void *)(v19 + 24) = v20;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v76;
  uint64_t v86 = v21;
  *(void *)(v21 + 16) = v105;
  *(void *)(v21 + 24) = v22;
  uint64_t v87 = swift_allocObject();
  *(unsigned char *)(v87 + 16) = v77;
  uint64_t v88 = swift_allocObject();
  *(unsigned char *)(v88 + 16) = v79;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v82;
  uint64_t v83 = v23;
  *(void *)(v23 + 16) = v106;
  *(void *)(v23 + 24) = v24;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v83;
  uint64_t v90 = v25;
  *(void *)(v25 + 16) = v107;
  *(void *)(v25 + 24) = v26;
  uint64_t v92 = sub_100009334(&qword_1000A2E38);
  uint64_t v89 = sub_10008A6C0();
  uint64_t v91 = v27;
  swift_retain();
  uint64_t v28 = v84;
  uint64_t v29 = v91;
  *uint64_t v91 = v108;
  v29[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v28;
  swift_retain();
  uint64_t v30 = v85;
  uint64_t v31 = v91;
  v91[2] = v109;
  v31[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v30;
  swift_retain();
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v86;
  uint64_t v33 = v91;
  v91[4] = v110;
  v33[5] = v32;
  swift_retain();
  uint64_t v34 = v87;
  uint64_t v35 = v91;
  v91[6] = v111;
  v35[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
  swift_retain();
  uint64_t v36 = v88;
  uint64_t v37 = v91;
  v91[8] = v112;
  v37[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
  swift_retain();
  uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v90;
  uint64_t v39 = v91;
  v91[10] = v113;
  v39[11] = v38;
  sub_100007A04();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v93, (os_log_type_t)v94))
  {
    uint64_t v40 = v115;
    uint64_t v59 = (uint8_t *)sub_10008A470();
    uint64_t v58 = sub_100009334((uint64_t *)&unk_1000A4320);
    uint64_t v60 = sub_100007E5C(0);
    uint64_t v61 = sub_100007E5C(2);
    uint64_t v63 = &v135;
    uint64_t v135 = v59;
    uint64_t v64 = &v134;
    uint64_t v134 = v60;
    uint64_t v65 = &v133;
    uint64_t v133 = v61;
    unsigned int v62 = 2;
    sub_100007EB8(2, &v135);
    sub_100007EB8(v62, v63);
    unint64_t v131 = v108;
    uint64_t v132 = v84;
    sub_100007ECC(&v131, (uint64_t)v63, (uint64_t)v64, (uint64_t)v65);
    uint64_t v66 = v40;
    if (v40)
    {
      __break(1u);
    }
    else
    {
      unint64_t v131 = v109;
      uint64_t v132 = v85;
      sub_100007ECC(&v131, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v133);
      uint64_t v57 = 0;
      uint64_t v41 = v57;
      unint64_t v131 = v110;
      uint64_t v132 = v86;
      sub_100007ECC(&v131, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v133);
      uint64_t v56 = v41;
      unint64_t v131 = v111;
      uint64_t v132 = v87;
      sub_100007ECC(&v131, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v133);
      uint64_t v55 = 0;
      unint64_t v131 = v112;
      uint64_t v132 = v88;
      sub_100007ECC(&v131, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v133);
      uint64_t v54 = 0;
      unint64_t v131 = v113;
      uint64_t v132 = v90;
      sub_100007ECC(&v131, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v133);
      _os_log_impl((void *)&_mh_execute_header, v93, (os_log_type_t)v94, "%{public}s, mailbox: %{public}s", v59, v74);
      sub_100007F18(v60);
      sub_100007F18(v61);
      sub_10008A450();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v127 + 8))(v130, v126);
  uint64_t v53 = v136;
  sub_10002CB38(v103, (uint64_t)v136);
  uint64_t v50 = v137;
  uint64_t v51 = v138;
  sub_1000281F0(v53, v137);
  swift_retain();
  sub_10000E524(v122, v121);
  unint64_t v49 = (v69 + 32) & ~(unint64_t)v69;
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v124;
  unint64_t v44 = v49;
  uint64_t v45 = v42;
  uint64_t v46 = v121;
  uint64_t v52 = v45;
  *(void *)(v45 + 16) = v123;
  *(void *)(v45 + 24) = v43;
  sub_10000E8F8(v46, v45 + v44);
  (*(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t))(v51 + 24))(v122, v125, v114, v52, v50);
  swift_release();
  sub_10000B234((uint64_t)v53);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002ED74(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v123 = a1;
  unint64_t v120 = a2;
  uint64_t v121 = a3;
  uint64_t v122 = a4;
  uint64_t v105 = 0;
  int v94 = sub_100014654;
  uint64_t v95 = sub_1000092DC;
  int v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v97 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v98 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v99 = sub_100013AD0;
  uint64_t v100 = sub_1000092DC;
  uint64_t v101 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v102 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v145 = 0;
  uint64_t v143 = 0;
  uint64_t v144 = 0;
  uint64_t v142 = 0;
  uint64_t v141 = 0;
  uint64_t v104 = 0;
  uint64_t v146 = 0;
  uint64_t v106 = sub_100089700();
  uint64_t v107 = *(void *)(v106 - 8);
  uint64_t v108 = v106 - 8;
  unint64_t v109 = (*(void *)(v107 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(0);
  uint64_t v110 = (char *)v41 - v109;
  unint64_t v111 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v112 = (char *)v41 - v111;
  uint64_t v6 = type metadata accessor for Mailbox();
  uint64_t v113 = *(void *)(v6 - 8);
  uint64_t v114 = v113;
  uint64_t v115 = *(void *)(v113 + 64);
  unint64_t v116 = (v115 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  uint64_t v117 = (uint64_t)v41 - v116;
  unint64_t v118 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v41 - v116);
  uint64_t v119 = (char *)v41 - v118;
  uint64_t v146 = (char *)v41 - v118;
  uint64_t v125 = sub_100009334(&qword_1000A3768);
  unint64_t v124 = (*(void *)(*(void *)(v125 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = (uint64_t *)__chkstk_darwin(v123);
  uint64_t v126 = (void *)((char *)v41 - v124);
  uint64_t v145 = v8;
  uint64_t v143 = v9;
  uint64_t v144 = v10;
  uint64_t v142 = v11;
  sub_100031F34(v8, (uint64_t)v41 - v124);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = v110;
    uint64_t v49 = *v126;
    uint64_t v141 = v49;
    uint64_t v28 = sub_1000282C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v27, v28, v106);
    swift_errorRetain();
    uint64_t v56 = 7;
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = v49;
    uint64_t v65 = sub_1000896E0();
    int v66 = sub_10008A3A0();
    uint64_t v52 = &v139;
    uint64_t v139 = 12;
    unint64_t v50 = sub_10000818C();
    unint64_t v51 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v53 = v140;
    uint64_t v54 = 17;
    uint64_t v59 = swift_allocObject();
    *(unsigned char *)(v59 + 16) = 34;
    uint64_t v60 = swift_allocObject();
    *(unsigned char *)(v60 + 16) = 8;
    uint64_t v55 = 32;
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v57;
    uint64_t v58 = v29;
    *(void *)(v29 + 16) = v94;
    *(void *)(v29 + 24) = v30;
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v58;
    uint64_t v62 = v31;
    *(void *)(v31 + 16) = v95;
    *(void *)(v31 + 24) = v32;
    uint64_t v64 = sub_100009334(&qword_1000A2E38);
    uint64_t v61 = sub_10008A6C0();
    uint64_t v63 = v33;
    swift_retain();
    uint64_t v34 = v59;
    uint64_t v35 = v63;
    *uint64_t v63 = v96;
    v35[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
    swift_retain();
    uint64_t v36 = v60;
    uint64_t v37 = v63;
    v63[2] = v97;
    v37[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
    swift_retain();
    uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v62;
    uint64_t v39 = v63;
    v63[4] = v98;
    v39[5] = v38;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v65, (os_log_type_t)v66))
    {
      uint64_t v40 = v104;
      uint64_t v42 = (uint8_t *)sub_10008A470();
      v41[1] = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v43 = sub_100007E5C(0);
      uint64_t v44 = sub_100007E5C(1);
      uint64_t v45 = &v138;
      uint64_t v138 = v42;
      uint64_t v46 = &v137;
      uint64_t v137 = v43;
      uint64_t v47 = &v136;
      uint64_t v136 = v44;
      sub_100007EB8(2, &v138);
      sub_100007EB8(1, v45);
      uint64_t v134 = v96;
      uint64_t v135 = v59;
      sub_100007ECC(&v134, (uint64_t)v45, (uint64_t)v46, (uint64_t)v47);
      uint64_t v48 = v40;
      if (v40)
      {
        __break(1u);
      }
      else
      {
        uint64_t v134 = v97;
        uint64_t v135 = v60;
        sub_100007ECC(&v134, (uint64_t)&v138, (uint64_t)&v137, (uint64_t)&v136);
        v41[0] = 0;
        uint64_t v134 = v98;
        uint64_t v135 = v62;
        sub_100007ECC(&v134, (uint64_t)&v138, (uint64_t)&v137, (uint64_t)&v136);
        _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v66, "Failed to update mailbox: %{public}s", v42, v53);
        sub_100007F18(v43);
        sub_100007F18(v44);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v107 + 8))(v110, v106);
    swift_retain();
    v120(v122);
    swift_release();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v12 = v112;
    sub_10000E8F8((uint64_t)v126, (uint64_t)v119);
    uint64_t v146 = v119;
    uint64_t v13 = sub_1000282C4();
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v12, v13, v106);
    sub_10000E524((uint64_t)v119, v117);
    unint64_t v76 = (*(unsigned __int8 *)(v114 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v83 = 7;
    uint64_t v84 = swift_allocObject();
    sub_10000E8F8(v117, v84 + v76);
    uint64_t v92 = sub_1000896E0();
    int v93 = sub_10008A3B0();
    int v79 = &v132;
    uint64_t v132 = 12;
    unint64_t v77 = sub_10000818C();
    unint64_t v78 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v80 = v133;
    uint64_t v81 = 17;
    uint64_t v86 = swift_allocObject();
    *(unsigned char *)(v86 + 16) = 34;
    uint64_t v87 = swift_allocObject();
    *(unsigned char *)(v87 + 16) = 8;
    uint64_t v82 = 32;
    uint64_t v14 = swift_allocObject();
    uint64_t v15 = v84;
    uint64_t v85 = v14;
    *(void *)(v14 + 16) = v99;
    *(void *)(v14 + 24) = v15;
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = v85;
    uint64_t v89 = v16;
    *(void *)(v16 + 16) = v100;
    *(void *)(v16 + 24) = v17;
    uint64_t v91 = sub_100009334(&qword_1000A2E38);
    uint64_t v88 = sub_10008A6C0();
    uint64_t v90 = v18;
    swift_retain();
    uint64_t v19 = v86;
    uint64_t v20 = v90;
    void *v90 = v101;
    v20[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v19;
    swift_retain();
    uint64_t v21 = v87;
    uint64_t v22 = v90;
    v90[2] = v102;
    void v22[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v21;
    swift_retain();
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v89;
    uint64_t v24 = v90;
    v90[4] = v103;
    void v24[5] = v23;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v92, (os_log_type_t)v93))
    {
      uint64_t v25 = v104;
      uint64_t v69 = (uint8_t *)sub_10008A470();
      uint64_t v68 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v70 = sub_100007E5C(0);
      uint64_t v71 = sub_100007E5C(1);
      unint64_t v72 = &v131;
      unint64_t v131 = v69;
      int v73 = &v130;
      uint64_t v130 = v70;
      uint32_t v74 = &v129;
      uint64_t v129 = v71;
      sub_100007EB8(2, &v131);
      sub_100007EB8(1, v72);
      uint64_t v127 = v101;
      uint64_t v128 = v86;
      sub_100007ECC(&v127, (uint64_t)v72, (uint64_t)v73, (uint64_t)v74);
      uint64_t v75 = v25;
      if (v25)
      {
        __break(1u);
      }
      else
      {
        uint64_t v127 = v102;
        uint64_t v128 = v87;
        sub_100007ECC(&v127, (uint64_t)&v131, (uint64_t)&v130, (uint64_t)&v129);
        uint64_t v67 = 0;
        uint64_t v127 = v103;
        uint64_t v128 = v89;
        sub_100007ECC(&v127, (uint64_t)&v131, (uint64_t)&v130, (uint64_t)&v129);
        _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v93, "Successfully updated mailbox: %{public}s", v69, v80);
        sub_100007F18(v70);
        sub_100007F18(v71);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v107 + 8))(v112, v106);
    swift_retain();
    v120((uint64_t)v119);
    swift_release();
    return sub_100015540((uint64_t)v119);
  }
}

void *sub_10002FDDC@<X0>(const void *a1@<X0>, void *a2@<X8>)
{
  return sub_100031EF8(a1, a2);
}

uint64_t sub_10002FDF8()
{
  return sub_100089F40();
}

uint64_t sub_10002FE10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100028334(a1, a2);
}

uint64_t sub_10002FE28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_release();
}

uint64_t sub_10002FE78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_release();
}

uint64_t sub_10002FEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  *(void *)(v3 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v4;
  *uint64_t v4 = *(void *)(v6 + 16);
  v4[1] = sub_10002FF8C;
  return IntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10002FF8C()
{
  uint64_t v3 = *v0;
  *(void *)(v3 + 16) = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v3 + 16) + 8);
  return v1();
}

uint64_t sub_1000300B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  *(void *)(v3 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v4;
  *uint64_t v4 = *(void *)(v6 + 16);
  v4[1] = sub_10002FF8C;
  return IntentTimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_10003017C()
{
  return swift_deallocObject();
}

uint64_t sub_1000301BC()
{
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = sub_100089EF0();
  unint64_t v1 = sub_100030218();

  return sub_100007F88(v5, v3, v4, v1);
}

unint64_t sub_100030218()
{
  uint64_t v2 = qword_1000A3B00[0];
  if (!qword_1000A3B00[0])
  {
    sub_100089EF0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, qword_1000A3B00);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10003029C()
{
  uint64_t v2 = *(void *)(sub_100089FB0() - 8);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
  return swift_deallocObject();
}

uint64_t sub_100030368()
{
  sub_100089FB0();

  return sub_1000294A4();
}

uint64_t sub_1000303D0()
{
  return swift_deallocObject();
}

uint64_t sub_1000303FC()
{
  return swift_deallocObject();
}

uint64_t sub_100030428()
{
  return swift_deallocObject();
}

uint64_t sub_100030468()
{
  return swift_deallocObject();
}

uint64_t sub_1000304A8()
{
  return swift_deallocObject();
}

uint64_t sub_1000304D4()
{
  return swift_deallocObject();
}

uint64_t sub_100030500(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = a1;
  uint64_t v21 = a6;
  v13[1] = a7;
  uint64_t v14 = sub_100033360;
  uint64_t v25 = a6;
  uint64_t v18 = *(void *)(a6 - 8);
  uint64_t v19 = a6 - 8;
  v13[0] = (*(void *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v20 = (uint64_t)v13 - v13[0];
  v8(v7);
  uint64_t v16 = sub_10008A590() >> 3;
  uint64_t v23 = *v17;
  uint64_t v24 = v23 + v16;
  sub_100030690(v20, v14, (uint64_t)v22, v21, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for () + 8, (uint64_t)&protocol witness table for Never, v15);
  uint64_t v9 = v18;
  uint64_t v10 = v20;
  uint64_t v11 = v21;
  *v17 += v16;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
}

uint64_t sub_100030668()
{
  return sub_10008A490();
}

uint64_t sub_100030690(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = a2;
  uint64_t v12 = a5;
  uint64_t v13 = a8;
  uint64_t v23 = a4;
  uint64_t v22 = a5;
  uint64_t v21 = a6;
  uint64_t v14 = *(void *)(a5 - 8);
  uint64_t v15 = a5 - 8;
  unint64_t v16 = (*(void *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = __chkstk_darwin();
  uint64_t v18 = (char *)&v12 - v16;
  uint64_t v20 = v9 + *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t result = v17();
  uint64_t v19 = v8;
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v13, v18, v12);
  }
  return result;
}

BOOL sub_1000307C0(uint64_t (*a1)(void))
{
  return (a1() & 1) != 0;
}

uint64_t sub_100030814()
{
  return swift_deallocObject();
}

uint64_t sub_100030854(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10003087C()
{
  return swift_deallocObject();
}

uint64_t sub_1000308BC@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1000308F8()
{
  return swift_deallocObject();
}

uint64_t sub_100030938()
{
  return swift_deallocObject();
}

uint64_t sub_100030978()
{
  return swift_deallocObject();
}

uint64_t sub_1000309B8(uint64_t a1)
{
  return sub_1000294CC(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000309C4()
{
  sub_10000B234(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100030A0C(uint64_t a1)
{
  return sub_10002B700(a1, v1 + 16, *(unsigned char *)(v1 + 56) & 1, *(void *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_100030A24()
{
  uint64_t v2 = *(void *)(sub_100089FB0() - 8);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
  return swift_deallocObject();
}

uint64_t sub_100030AF0()
{
  return swift_deallocObject();
}

uint64_t sub_100030B30()
{
  uint64_t v2 = *(void *)(sub_100089FB0() - 8);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
  return swift_deallocObject();
}

uint64_t sub_100030BFC()
{
  return swift_deallocObject();
}

uint64_t sub_100030C28()
{
  return swift_deallocObject();
}

uint64_t sub_100030C54()
{
  return swift_deallocObject();
}

uint64_t sub_100030C94()
{
  return swift_deallocObject();
}

uint64_t sub_100030CD4()
{
  return swift_deallocObject();
}

uint64_t sub_100030D00()
{
  return swift_deallocObject();
}

uint64_t sub_100030D2C()
{
  return swift_deallocObject();
}

uint64_t sub_100030D6C()
{
  return swift_deallocObject();
}

uint64_t sub_100030DAC()
{
  return swift_deallocObject();
}

uint64_t sub_100030DEC()
{
  return swift_deallocObject();
}

uint64_t sub_100030E2C()
{
  return swift_deallocObject();
}

uint64_t sub_100030E6C(uint64_t a1)
{
  return sub_10002ADB0(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100030E78()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 16) & ~v1;
  unint64_t v9 = (((v8 + *(void *)(*(void *)(v7 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_release();
  sub_10000B234(v6 + v9);
  return swift_deallocObject();
}

uint64_t sub_100031064(uint64_t a1, char a2)
{
  uint64_t v12 = *(void *)(type metadata accessor for Mailbox() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v4 = (v3 + *(void *)(v12 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v2 + v4;
  uint64_t v7 = *(void (**)(uint64_t))v6;
  uint64_t v8 = *(void *)(v6 + 8);

  return sub_10002CD8C(a1, a2 & 1, v2 + v3, v7, v8, v2 + v5);
}

uint64_t sub_100031130()
{
  return swift_deallocObject();
}

uint64_t sub_100031170()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 16) & ~v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_100031310()
{
  return swift_deallocObject();
}

uint64_t sub_10003133C()
{
  return swift_deallocObject();
}

uint64_t sub_100031368()
{
  return swift_deallocObject();
}

uint64_t sub_1000313A8()
{
  return swift_deallocObject();
}

uint64_t sub_1000313E8()
{
  return swift_deallocObject();
}

uint64_t sub_100031414()
{
  return swift_deallocObject();
}

uint64_t sub_100031440()
{
  return swift_deallocObject();
}

uint64_t sub_100031480()
{
  return swift_deallocObject();
}

uint64_t sub_1000314C0()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 32) & ~v1;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_10003166C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Mailbox();
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));

  return sub_10002ED74(a1, v3, v4, v5);
}

uint64_t sub_1000316F0(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  swift_retain();
  *a1 = v4;
  return *a1 + 16;
}

uint64_t sub_100031730(uint64_t a1)
{
  return sub_10000B234(a1);
}

uint64_t sub_100031748(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  (**(void (***)(void))(v2 - 8))();
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1000317A8(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_1000317D0(uint64_t result, uint64_t *a2)
{
  uint64_t v8 = (void *)result;
  if ((uint64_t *)result != a2)
  {
    uint64_t v6 = *(void *)(result + 24);
    uint64_t v7 = a2[3];
    if (v6 == v7)
    {
      if ((*(_DWORD *)(*(void *)(v6 - 8) + 80) & 0x20000) != 0)
      {
        uint64_t v5 = *a2;
        swift_retain();
        uint64_t result = swift_release();
        *uint64_t v8 = v5;
      }
      else
      {
        return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)(v6 - 8) + 24))(result, a2);
      }
    }
    else
    {
      *(void *)(result + 24) = v7;
      *(void *)(result + 32) = a2[4];
      BOOL v4 = (*(_DWORD *)(*(void *)(v7 - 8) + 80) & 0x20000) == 0;
      if ((*(_DWORD *)(*(void *)(v6 - 8) + 80) & 0x20000) != 0)
      {
        if ((*(_DWORD *)(*(void *)(v7 - 8) + 80) & 0x20000) != 0)
        {
          uint64_t v2 = *a2;
          swift_retain();
          *uint64_t v8 = v2;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t *))(*(void *)(v7 - 8) + 16))(result, a2);
        }
        return swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(v10, result);
        if (v4)
        {
          (*(void (**)(void *, uint64_t *))(*(void *)(v7 - 8) + 16))(v8, a2);
        }
        else
        {
          uint64_t v3 = *a2;
          swift_retain();
          *uint64_t v8 = v3;
        }
        return (*(uint64_t (**)(unsigned char *))(*(void *)(v6 - 8) + 8))(v10);
      }
    }
  }
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100031AB4(void *a1, const void *a2)
{
}

void *sub_100031AE4(void *a1, const void *a2)
{
  return a1;
}

uint64_t sub_100031B24(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      int v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      int v3 = -1;
      if (!HIDWORD(*(void *)(a1 + 24))) {
        int v3 = *(void *)(a1 + 24);
      }
      int v4 = v3;
    }
  }
  else
  {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_100031C3C(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(void *)uint64_t result = a2 + 0x80000000;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(unsigned char *)(result + 40) = 1;
      }
      else {
        __break(1u);
      }
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(unsigned char *)(result + 40) = 0;
      }
      else {
        __break(1u);
      }
    }
    if (a2) {
      *(void *)(result + 24) = a2 - 1;
    }
  }
  return result;
}

void *type metadata accessor for MailTimelineProvider()
{
  return &unk_10009B728;
}

unint64_t sub_100031E5C()
{
  return sub_100031E74();
}

unint64_t sub_100031E74()
{
  uint64_t v2 = qword_1000A3B18;
  if (!qword_1000A3B18)
  {
    type metadata accessor for MailEntry();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3B18);
    return WitnessTable;
  }
  return v2;
}

void *sub_100031EF8(const void *a1, void *__dst)
{
  return __dst;
}

uint64_t sub_100031F34(uint64_t *a1, uint64_t a2)
{
  sub_100009334(&qword_1000A3768);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = *a1;
    swift_errorRetain();
    *(void *)a2 = v5;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    *(void *)a2 = *a1;
    uint64_t v11 = a1[1];
    swift_bridgeObjectRetain();
    *(void *)(a2 + 8) = v11;
    uint64_t v12 = a1[2];
    swift_bridgeObjectRetain();
    *(void *)(a2 + 16) = v12;
    if ((unint64_t)a1[4] <= 5)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 3);
    }
    else
    {
      *(void *)(a2 + 24) = a1[3];
      uint64_t v10 = a1[4];
      swift_bridgeObjectRetain();
      *(void *)(a2 + 32) = v10;
    }
    uint64_t v2 = type metadata accessor for Mailbox();
    __dst = (void *)(a2 + *(int *)(v2 + 28));
    __src = (char *)a1 + *(int *)(v2 + 28);
    uint64_t v8 = sub_1000895A0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 48))(__src, 1))
    {
      uint64_t v3 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(__dst, __src, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

uint64_t sub_100032198()
{
  return swift_deallocObject();
}

uint64_t sub_1000321D8()
{
  return swift_deallocObject();
}

uint64_t sub_100032204()
{
  return swift_deallocObject();
}

uint64_t sub_100032230()
{
  return swift_deallocObject();
}

uint64_t sub_100032270()
{
  return swift_deallocObject();
}

uint64_t sub_1000322B0()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 16) & ~v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_100032450()
{
  return swift_deallocObject();
}

uint64_t sub_10003247C()
{
  return swift_deallocObject();
}

uint64_t sub_1000324A8()
{
  return swift_deallocObject();
}

uint64_t sub_1000324E8()
{
  return swift_deallocObject();
}

uint64_t sub_100032528()
{
  return swift_deallocObject();
}

uint64_t sub_100032568()
{
  return swift_deallocObject();
}

uint64_t sub_100032594()
{
  return swift_deallocObject();
}

uint64_t sub_1000325C0()
{
  return swift_deallocObject();
}

uint64_t sub_100032600()
{
  return swift_deallocObject();
}

uint64_t sub_100032640()
{
  return swift_deallocObject();
}

uint64_t sub_100032680()
{
  return sub_10002DE40();
}

uint64_t sub_100032688()
{
  return swift_deallocObject();
}

uint64_t sub_1000326B4()
{
  return swift_deallocObject();
}

uint64_t sub_1000326E0()
{
  return swift_deallocObject();
}

uint64_t sub_100032720()
{
  return swift_deallocObject();
}

uint64_t sub_100032760()
{
  uint64_t v12 = type metadata accessor for MailEntry();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
  uint64_t v13 = (v1 + 16) & ~v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v13 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v11 + v13 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v9 = sub_1000895A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v10 + 48))(v8, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  if (*(void *)(v11 + v13 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v11 + v13 + *(int *)(v12 + 20);
  uint64_t v6 = sub_100089F80();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v4 = v11 + v13 + *(int *)(v12 + 24);
  uint64_t v2 = sub_100089630();
  (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v4);
  return swift_deallocObject();
}

uint64_t sub_100032A64()
{
  uint64_t v1 = *(void *)(type metadata accessor for MailEntry() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100029C70(v2);
}

uint64_t sub_100032ACC()
{
  return swift_deallocObject();
}

uint64_t sub_100032AF8()
{
  return swift_deallocObject();
}

uint64_t sub_100032B24()
{
  return swift_deallocObject();
}

uint64_t sub_100032B64()
{
  return swift_deallocObject();
}

uint64_t sub_100032BA4(uint64_t a1)
{
  uint64_t v3 = sub_100089F80();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return a1;
}

uint64_t sub_100032C54()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 32) & ~v1;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

void *sub_100032E00(unint64_t a1, uint64_t a2, int a3)
{
  LOWORD(v11) = a3;
  BYTE2(v11) = BYTE2(a3) & 1;
  uint64_t v4 = type metadata accessor for Mailbox();
  uint64_t v5 = *(void (**)(uint64_t))(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = v3
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));

  return sub_10002B8FC(a1, a2, v11, v5, v6, v7);
}

unint64_t sub_100032ED4(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_100032F24(void *a1)
{
  if (*a1 >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_100032F84()
{
  uint64_t v12 = type metadata accessor for MailEntry();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
  uint64_t v13 = (v1 + 16) & ~v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v13 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v11 + v13 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v9 = sub_1000895A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v10 + 48))(v8, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  if (*(void *)(v11 + v13 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v11 + v13 + *(int *)(v12 + 20);
  uint64_t v6 = sub_100089F80();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v4 = v11 + v13 + *(int *)(v12 + 24);
  uint64_t v2 = sub_100089630();
  (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v4);
  return swift_deallocObject();
}

uint64_t sub_100033288()
{
  return swift_deallocObject();
}

uint64_t sub_1000332B4()
{
  return swift_deallocObject();
}

uint64_t sub_1000332E0()
{
  return swift_deallocObject();
}

uint64_t sub_100033320()
{
  return swift_deallocObject();
}

uint64_t sub_100033360()
{
  return sub_100030668();
}

uint64_t sub_100033390()
{
  return swift_deallocObject();
}

uint64_t sub_1000333D0()
{
  return swift_deallocObject();
}

uint64_t sub_1000333FC()
{
  return sub_10002CD10(*(unsigned char *)(v0 + 16) & 1);
}

uint64_t sub_100033408()
{
  return swift_deallocObject();
}

uint64_t sub_100033434()
{
  return swift_deallocObject();
}

uint64_t sub_100033460()
{
  return swift_deallocObject();
}

uint64_t sub_1000334A0()
{
  return swift_deallocObject();
}

uint64_t sub_1000334E0()
{
  return swift_deallocObject();
}

uint64_t sub_10003350C()
{
  return swift_deallocObject();
}

uint64_t sub_100033538()
{
  return swift_deallocObject();
}

uint64_t sub_100033578()
{
  return swift_deallocObject();
}

id sub_1000335B8()
{
  sub_1000336D4();
  id v2 = [self defaultProvider];
  id v3 = [self sharedManager];
  if (v3)
  {
    uint64_t v1 = v3;
  }
  else
  {
    sub_10008A5A0();
    __break(1u);
  }
  id result = sub_10003373C((uint64_t)v2, v1);
  qword_1000A3B30 = (uint64_t)result;
  return result;
}

unint64_t sub_1000336D4()
{
  uint64_t v2 = qword_1000A3B38;
  if (!qword_1000A3B38)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3B38);
    return ObjCClassMetadata;
  }
  return v2;
}

id sub_10003373C(uint64_t a1, void *a2)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_100034984(a1, a2);
}

uint64_t *sub_100033784()
{
  if (qword_1000A2DA8 != -1) {
    swift_once();
  }
  return &qword_1000A3B30;
}

uint64_t sub_1000337E8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  int v93 = a3;
  uint64_t v117 = a1;
  uint64_t v107 = a2;
  uint64_t v132 = 0;
  unint64_t v131 = 0;
  uint64_t v130 = 0;
  uint64_t v129 = 0;
  id v128 = 0;
  id v127 = 0;
  id v120 = 0;
  uint64_t v108 = 0;
  unint64_t v94 = (*(void *)(*(void *)(sub_100089630() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v95 = &v30[-v94];
  uint64_t v96 = sub_1000895A0();
  uint64_t v97 = *(void *)(v96 - 8);
  uint64_t v98 = v96 - 8;
  unint64_t v99 = (*(void *)(v97 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v96);
  uint64_t v100 = &v30[-v99];
  unint64_t v101 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3B40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = __chkstk_darwin(v108);
  uint64_t v102 = &v30[-v101];
  unint64_t v103 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v104 = &v30[-v103];
  unint64_t v105 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  uint64_t v106 = &v30[-v105];
  uint64_t v132 = &v30[-v105];
  uint64_t v109 = type metadata accessor for Message();
  uint64_t v110 = *(void *)(v109 - 8);
  uint64_t v111 = v109 - 8;
  uint64_t v113 = *(void *)(v110 + 64);
  unint64_t v112 = (v113 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = __chkstk_darwin(v108);
  uint64_t v114 = &v30[-v112];
  unint64_t v115 = (v113 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v7);
  unint64_t v116 = &v30[-v115];
  unint64_t v131 = &v30[-v115];
  uint64_t v130 = v8;
  uint64_t v129 = v9;
  sub_100034620();
  id v10 = v117;
  id v118 = sub_100034688(v117);
  id v128 = v118;
  id v119 = [v118 waitForResult];
  id v127 = v119;
  id v11 = v119;
  if (v119)
  {
    id v92 = v119;
    id v90 = v119;
    id v91 = [v119 publicMessageURL];
    if (v91)
    {
      id v89 = v91;
      id v88 = v91;
      sub_100089590();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v97 + 32))(v104, v100, v96);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v97 + 56))(v104, 0, 1, v96);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v104, 1, 1, v96);
    }
    sub_1000184D8(v104, v106);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v106, 1, 1, v96);
  }
  uint64_t v125 = 0;
  unsigned __int8 v126 = 1;
  id v12 = v117;
  id v87 = [v117 category];
  if (v87)
  {
    id v86 = v87;
    id v85 = v87;
    id v120 = v87;

    [v85 type];
    uint64_t v125 = MUIBucketFromEMCategoryType();
    unsigned __int8 v126 = 0;
  }
  else
  {
  }
  id v75 = [v117 objectID];
  id v76 = [v75 globalMessageID];

  id v124 = v76;
  uint64_t v77 = sub_10008A0F0();
  uint64_t v78 = v13;
  id v83 = (id)*sub_100033784();
  id v14 = v83;
  id v15 = v117;
  id v81 = [v117 senderList];
  uint64_t v79 = sub_100009334((uint64_t *)&unk_1000A3B50);
  uint64_t v80 = sub_10008A190();
  Class isa = sub_10008A180().super.isa;

  swift_bridgeObjectRelease();
  id v84 = [v83 stringFromEmailAddressList:isa preferFullDisplayName:0];

  if (v84)
  {
    id v74 = v84;
    id v69 = v84;
    uint64_t v70 = sub_10008A080();
    uint64_t v71 = v16;

    uint64_t v72 = v70;
    uint64_t v73 = v71;
  }
  else
  {
    uint64_t v72 = 0;
    uint64_t v73 = 0;
  }
  uint64_t v64 = v73;
  uint64_t v65 = v72;
  id v66 = self;
  id v17 = v117;
  id v67 = [v117 subject];

  id v68 = [v66 subjectStringForDisplayForSubject:v67];
  if (v68)
  {
    id v63 = v68;
    id v58 = v68;
    uint64_t v59 = sub_10008A080();
    uint64_t v60 = v18;

    uint64_t v61 = v59;
    uint64_t v62 = v60;
  }
  else
  {
    uint64_t v61 = 0;
    uint64_t v62 = 0;
  }
  uint64_t v55 = v62;
  uint64_t v56 = v61;
  id v19 = v117;
  id v57 = [v117 summary];
  if (v57)
  {
    id v54 = v57;
    id v49 = v57;
    uint64_t v50 = sub_10008A080();
    uint64_t v51 = v20;

    uint64_t v52 = v50;
    uint64_t v53 = v51;
  }
  else
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
  }
  uint64_t v38 = v53;
  uint64_t v39 = v52;

  id v21 = v117;
  id v40 = [v117 date];
  sub_100089610();

  id v22 = v117;
  unsigned int v41 = [v117 isVIP];

  id v23 = v117;
  id v42 = [v117 flags];

  unsigned int v43 = [v42 read];
  int v44 = v43 ^ 1;
  id v24 = v117;
  unsigned int v45 = [v117 hasAttachments];

  id v25 = v117;
  unsigned int v46 = [v117 isBlocked];

  uint64_t v47 = v125;
  int v48 = v126;
  if (sub_10001A878())
  {
    id v26 = v117;
    id v122 = [v117 category];
    if (v122)
    {
      uint64_t v34 = &v122;
      id v35 = v122;
      id v27 = v122;
      sub_1000137A8(v34);

      unsigned int v36 = [v35 isHighImpact];
      int v37 = v36 & 1;
    }
    else
    {
      sub_1000137A8(&v122);

      int v37 = 2;
    }
    char v121 = v37;
    if (v37 == 2) {
      unsigned __int8 v123 = 0;
    }
    else {
      unsigned __int8 v123 = v121 & 1;
    }
    int v33 = v123;
  }
  else
  {
    int v33 = 0;
  }
  uint64_t v28 = (uint64_t)v95;
  int v31 = v33;
  sub_10001AF78(v106, v102);
  unsigned int v32 = 1;
  sub_100035188(v77, v78, v65, v64, v56, v55, v39, v38, v114, v28, v41 & 1, v44 & 1, v45 & 1, v46 & 1, v47, v48 & 1, v31 & 1, v102);

  sub_1000346C8(v114, v116);
  sub_100018600((uint64_t)v106);

  sub_100014B98(v116, v93);
  (*(void (**)(char *, void, void, uint64_t))(v110 + 56))(v93, 0, v32, v109);
  sub_100015540(v107);

  return sub_100014EC0((uint64_t)v116);
}

unint64_t sub_100034620()
{
  uint64_t v2 = qword_1000A3B48;
  if (!qword_1000A3B48)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3B48);
    return ObjCClassMetadata;
  }
  return v2;
}

id sub_100034688(void *a1)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1000349DC(a1);
}

char *sub_1000346C8(char *a1, char *a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *((_OWORD *)a2 + 1) = *((_OWORD *)a1 + 1);
  *((_OWORD *)a2 + 2) = *((_OWORD *)a1 + 2);
  *((_OWORD *)a2 + 3) = *((_OWORD *)a1 + 3);
  uint64_t v9 = (int *)type metadata accessor for Message();
  uint64_t v7 = v9[8];
  uint64_t v2 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 32))(&a2[v7], &a1[v7]);
  a2[v9[9]] = a1[v9[9]];
  a2[v9[10]] = a1[v9[10]];
  a2[v9[11]] = a1[v9[11]];
  a2[v9[12]] = a1[v9[12]];
  uint64_t v3 = v9[13];
  uint64_t v4 = &a2[v3];
  *(void *)uint64_t v4 = *(void *)&a1[v3];
  v4[8] = a1[v3 + 8];
  a2[v9[14]] = a1[v9[14]];
  uint64_t v10 = v9[15];
  uint64_t v12 = sub_1000895A0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 48))(&a1[v10], 1))
  {
    uint64_t v5 = sub_100009334(&qword_1000A3B40);
    memcpy(&a2[v10], &a1[v10], *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void))(v13 + 32))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(&a2[v10], 0, 1, v12);
  }
  return a2;
}

id sub_100034984(uint64_t a1, void *a2)
{
  id v5 = [v2 initWithUserProfileProvider:v2 addressBookManager:];

  swift_unknownObjectRelease();
  return v5;
}

id sub_1000349DC(void *a1)
{
  id v4 = [v1 initWithMessage:];

  return v4;
}

uint64_t sub_100034A24()
{
  uint64_t v69 = 0;
  char v68 = 0;
  uint64_t v1 = sub_100009334(&qword_1000A3B40);
  unint64_t v17 = (*(void *)(*(void *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  uint64_t v59 = (char *)&v10 - v17;
  uint64_t v57 = 0;
  uint64_t v47 = sub_100089630();
  uint64_t v44 = *(void *)(v47 - 8);
  uint64_t v45 = v47 - 8;
  unint64_t v18 = (*(void *)(v44 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v47);
  unsigned int v46 = (char *)&v10 - v18;
  uint64_t v69 = v0;
  id v19 = [self currentDevice];
  unsigned int v35 = [v19 isInternal];
  unsigned int v58 = 1;
  char v68 = v35 & 1;

  Builtin::Word v20 = 7;
  uint64_t v2 = sub_10008A6B0();
  uint64_t v52 = &v66;
  uint64_t v66 = v2;
  uint64_t v67 = v3;
  v70._countAndFlagsBits = sub_10008A0B0("sender:", v20, v58 & 1);
  object = v70._object;
  sub_10008A6A0(v70);
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v54 + 2);
  uint64_t v23 = *((void *)v54 + 3);
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_100036B6C(v22, v23, v35 & 1);
  uint64_t v25 = v4;
  swift_bridgeObjectRelease();
  id v26 = v65;
  v65[0] = v24;
  v65[1] = v25;
  uint64_t v39 = &type metadata for String;
  id v40 = &protocol witness table for String;
  unsigned int v41 = &protocol witness table for String;
  sub_10008A690();
  sub_100009A54();
  Builtin::Word v53 = 10;
  v71._countAndFlagsBits = sub_10008A0B0(", subject:", 0xAuLL, v58 & 1);
  id v27 = v71._object;
  sub_10008A6A0(v71);
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v54 + 4);
  uint64_t v29 = *((void *)v54 + 5);
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_100036B6C(v28, v29, v35 & 1);
  uint64_t v31 = v5;
  swift_bridgeObjectRelease();
  unsigned int v32 = v64;
  v64[0] = v30;
  v64[1] = v31;
  sub_10008A690();
  sub_100009A54();
  v72._countAndFlagsBits = sub_10008A0B0(", summary:", v53, v58 & 1);
  int v33 = v72._object;
  sub_10008A6A0(v72);
  swift_bridgeObjectRelease();
  uint64_t v34 = *((void *)v54 + 6);
  uint64_t v36 = *((void *)v54 + 7);
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_100036B6C(v34, v36, v35 & 1);
  uint64_t v38 = v6;
  swift_bridgeObjectRelease();
  id v42 = v63;
  v63[0] = v37;
  v63[1] = v38;
  sub_10008A690();
  sub_100009A54();
  v73._countAndFlagsBits = sub_10008A0B0(", dateReceived: ", 0x10uLL, v58 & 1);
  unsigned int v43 = v73._object;
  sub_10008A6A0(v73);
  swift_bridgeObjectRelease();
  uint64_t v56 = (int *)type metadata accessor for Message();
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v46, &v54[v56[8]], v47);
  sub_100008108();
  sub_10008A680();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v47);
  v74._countAndFlagsBits = sub_10008A0B0(", isVIP: ", 9uLL, v58 & 1);
  int v48 = v74._object;
  sub_10008A6A0(v74);
  swift_bridgeObjectRelease();
  char v62 = v54[v56[9]] & v58;
  uint64_t v50 = &type metadata for Bool;
  uint64_t v51 = &protocol witness table for Bool;
  sub_10008A680();
  v75._countAndFlagsBits = sub_10008A0B0(", isUnread: ", 0xCuLL, v58 & 1);
  id v49 = v75._object;
  sub_10008A6A0(v75);
  swift_bridgeObjectRelease();
  char v61 = v54[v56[10]] & v58;
  sub_10008A680();
  v76._countAndFlagsBits = sub_10008A0B0(", hasURL: ", v53, v58 & 1);
  uint64_t v55 = v76._object;
  sub_10008A6A0(v76);
  uint64_t v7 = v54;
  swift_bridgeObjectRelease();
  sub_10001AF78((char *)v7 + v56[15], v59);
  uint64_t v8 = sub_1000895A0();
  BOOL v16 = (*(uint64_t (**)(char *, void))(*(void *)(v8 - 8) + 48))(v59, v58) != 1;
  BOOL v10 = v16;
  sub_100018600((uint64_t)v59);
  int v11 = 1;
  BOOL v60 = v10;
  uint64_t v13 = &v66;
  sub_10008A680();
  v77._countAndFlagsBits = sub_10008A0B0("", 0, v11 & 1);
  uint64_t v12 = v77._object;
  sub_10008A6A0(v77);
  swift_bridgeObjectRelease();
  uint64_t v15 = v66;
  uint64_t v14 = v67;
  swift_bridgeObjectRetain();
  sub_100009A54();
  return sub_10008A0A0();
}

void *sub_100035188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, char a11, char a12, char a13, char a14, uint64_t a15, char a16, char a17, const void *a18)
{
  *(void *)a9 = a1;
  *((void *)a9 + 1) = a2;
  *((void *)a9 + 2) = a3;
  *((void *)a9 + 3) = a4;
  *((void *)a9 + 4) = a5;
  *((void *)a9 + 5) = a6;
  *((void *)a9 + 6) = a7;
  *((void *)a9 + 7) = a8;
  uint64_t v22 = (int *)type metadata accessor for Message();
  uint64_t v21 = v22[8];
  uint64_t v18 = sub_100089630();
  (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 32))(&a9[v21], a10);
  a9[v22[9]] = a11 & 1;
  a9[v22[10]] = a12 & 1;
  a9[v22[11]] = a13 & 1;
  a9[v22[12]] = a14 & 1;
  id v19 = &a9[v22[13]];
  *(void *)id v19 = a15;
  v19[8] = a16 & 1;
  a9[v22[14]] = a17 & 1;
  return sub_1000184D8(a18, &a9[v22[15]]);
}

uint64_t sub_100035300()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100035338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100035300();
  *a1 = result;
  a1[1] = v2;
  return result;
}

id sub_100035368()
{
  id result = sub_100035388();
  qword_1000A3B60 = (uint64_t)result;
  return result;
}

id sub_100035388()
{
  sub_1000389E4();
  id v1 = sub_10000BF54();
  [v1 setDateStyle:1];
  [v1 setTimeStyle:0];
  [v1 setDoesRelativeDateFormatting:1];
  return v1;
}

uint64_t *sub_100035414()
{
  if (qword_1000A2DB0 != -1) {
    swift_once();
  }
  return &qword_1000A3B60;
}

id sub_100035478()
{
  id result = sub_100035498();
  qword_1000A3B68 = (uint64_t)result;
  return result;
}

id sub_100035498()
{
  sub_1000389E4();
  id v1 = sub_10000BF54();
  [v1 setDateStyle:0];
  [v1 setTimeStyle:1];
  return v1;
}

uint64_t *sub_10003550C()
{
  if (qword_1000A2DB8 != -1) {
    swift_once();
  }
  return &qword_1000A3B68;
}

uint64_t sub_100035570()
{
  uint64_t v39 = 0;
  uint64_t v23 = 0;
  uint64_t v30 = sub_100089630();
  uint64_t v28 = *(void **)(v30 - 8);
  uint64_t v29 = v30 - 8;
  unint64_t v21 = (v28[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v31 = (char *)&v8 - v21;
  uint64_t v37 = sub_1000896B0();
  uint64_t v34 = *(void *)(v37 - 8);
  uint64_t v35 = v37 - 8;
  unint64_t v22 = (*(void *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v8 - v22;
  uint64_t v39 = v0;
  sub_100089690();
  uint64_t v25 = type metadata accessor for Message();
  uint64_t v1 = *(int *)(v25 + 32);
  id v26 = (void (*)(char *, uint64_t, uint64_t))v28[2];
  id v27 = v28 + 2;
  v26(v31, v24 + v1, v30);
  int v38 = sub_100089670();
  unsigned int v32 = (void (*)(char *, uint64_t))v28[1];
  int v33 = v28 + 1;
  v32(v31, v30);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v37);
  uint64_t v2 = v31;
  if (v38)
  {
    id v15 = (id)*sub_10003550C();
    id v3 = v15;
    v26(v2, v24 + *(int *)(v25 + 32), v30);
    Class isa = sub_1000895D0().super.isa;
    v32(v31, v30);
    id v16 = [v15 stringFromDate:isa];

    uint64_t v17 = sub_10008A080();
    uint64_t v18 = v4;

    uint64_t v19 = v17;
    uint64_t v20 = v18;
  }
  else
  {
    id v10 = (id)*sub_100035414();
    id v5 = v10;
    v26(v2, v24 + *(int *)(v25 + 32), v30);
    Class v9 = sub_1000895D0().super.isa;
    v32(v31, v30);
    id v11 = [v10 stringFromDate:v9];

    uint64_t v12 = sub_10008A080();
    uint64_t v13 = v6;

    uint64_t v19 = v12;
    uint64_t v20 = v13;
  }
  return v19;
}

BOOL sub_1000358F8(void *a1, char *a2)
{
  id v91 = a1;
  unint64_t v99 = a2;
  uint64_t v125 = 0;
  uint64_t v124 = 0;
  uint64_t v84 = 0;
  uint64_t v74 = sub_1000895A0();
  uint64_t v75 = *(void *)(v74 - 8);
  uint64_t v76 = v74 - 8;
  unint64_t v77 = (*(void *)(v75 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v74);
  uint64_t v78 = (char *)&v17 - v77;
  unint64_t v79 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v17 - v77);
  uint64_t v80 = (char *)&v17 - v79;
  uint64_t v81 = sub_100009334(&qword_1000A3C28);
  unint64_t v82 = (*(void *)(*(void *)(v81 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v81);
  id v83 = (char *)&v17 - v82;
  unint64_t v85 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3B40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = __chkstk_darwin(v84);
  id v86 = (char *)&v17 - v85;
  unint64_t v87 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = __chkstk_darwin(v3);
  id v88 = (char *)&v17 - v87;
  unint64_t v89 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  id v90 = (char *)&v17 - v89;
  uint64_t v92 = sub_100089630();
  int v93 = *(void **)(v92 - 8);
  uint64_t v94 = v92 - 8;
  unint64_t v95 = (v93[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = __chkstk_darwin(v91);
  uint64_t v96 = (char *)&v17 - v95;
  unint64_t v97 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  Class v9 = (void *)__chkstk_darwin(v7);
  uint64_t v98 = (char *)&v17 - v97;
  uint64_t v125 = v9;
  uint64_t v124 = v10;
  uint64_t v100 = *v9;
  uint64_t v103 = v9[1];
  swift_bridgeObjectRetain();
  uint64_t v101 = *(void *)v99;
  uint64_t v102 = *((void *)v99 + 1);
  swift_bridgeObjectRetain();
  int v104 = sub_10008A0C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v104 & 1) == 0) {
    return 0;
  }
  uint64_t v70 = v91[2];
  uint64_t v71 = v91[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v72 = *((void *)v99 + 2);
  uint64_t v73 = *((void *)v99 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v121[0] = v70;
  v121[1] = v71;
  uint64_t v122 = v72;
  uint64_t v123 = v73;
  if (v71)
  {
    sub_1000389A4(v121, v105);
    if (v123)
    {
      uint64_t v63 = v105[0];
      uint64_t v66 = v105[1];
      swift_bridgeObjectRetain();
      uint64_t v64 = v122;
      uint64_t v67 = v121;
      uint64_t v65 = v123;
      swift_bridgeObjectRetain();
      int v68 = sub_10008A0C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100009A54();
      int v69 = v68;
      goto LABEL_8;
    }
    sub_100009A54();
    goto LABEL_10;
  }
  if (v123)
  {
LABEL_10:
    sub_100038714();
    int v69 = 0;
    goto LABEL_8;
  }
  sub_100009A54();
  int v69 = 1;
LABEL_8:
  int v62 = v69;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v62)
  {
    uint64_t v58 = v91[4];
    uint64_t v59 = v91[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v60 = *((void *)v99 + 4);
    uint64_t v61 = *((void *)v99 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v118[0] = v58;
    v118[1] = v59;
    uint64_t v119 = v60;
    uint64_t v120 = v61;
    if (v59)
    {
      sub_1000389A4(v118, v106);
      if (v120)
      {
        uint64_t v51 = v106[0];
        uint64_t v54 = v106[1];
        swift_bridgeObjectRetain();
        uint64_t v52 = v119;
        uint64_t v55 = v118;
        uint64_t v53 = v120;
        swift_bridgeObjectRetain();
        int v56 = sub_10008A0C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100009A54();
        int v57 = v56;
        goto LABEL_18;
      }
      sub_100009A54();
    }
    else if (!v120)
    {
      sub_100009A54();
      int v57 = 1;
LABEL_18:
      int v50 = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v50 & 1) == 0) {
        return 0;
      }
      uint64_t v46 = v91[6];
      uint64_t v47 = v91[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v48 = *((void *)v99 + 6);
      uint64_t v49 = *((void *)v99 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v115[0] = v46;
      v115[1] = v47;
      uint64_t v116 = v48;
      uint64_t v117 = v49;
      if (v47)
      {
        sub_1000389A4(v115, v107);
        if (v117)
        {
          uint64_t v39 = v107[0];
          uint64_t v42 = v107[1];
          swift_bridgeObjectRetain();
          uint64_t v40 = v116;
          unsigned int v43 = v115;
          uint64_t v41 = v117;
          swift_bridgeObjectRetain();
          int v44 = sub_10008A0C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100009A54();
          int v45 = v44;
          goto LABEL_28;
        }
        sub_100009A54();
      }
      else if (!v117)
      {
        sub_100009A54();
        int v45 = 1;
LABEL_28:
        int v38 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0) {
          return 0;
        }
        unsigned int v32 = (int *)type metadata accessor for Message();
        id v11 = (char *)v91 + v32[8];
        uint64_t v34 = (void (*)(char *, char *, uint64_t))v93[2];
        int v33 = v93 + 2;
        v34(v98, v11, v92);
        v34(v96, &v99[v32[8]], v92);
        int v37 = sub_100089600();
        uint64_t v36 = (void (*)(char *, uint64_t))v93[1];
        uint64_t v35 = v93 + 1;
        v36(v96, v92);
        v36(v98, v92);
        if ((v37 & 1) == 0) {
          return 0;
        }
        if ((*((unsigned char *)v91 + v32[9]) & 1) != (v99[v32[9]] & 1)) {
          return 0;
        }
        if ((*((unsigned char *)v91 + v32[10]) & 1) != (v99[v32[10]] & 1)) {
          return 0;
        }
        if ((*((unsigned char *)v91 + v32[11]) & 1) != (v99[v32[11]] & 1)) {
          return 0;
        }
        if ((*((unsigned char *)v91 + v32[12]) & 1) != (v99[v32[12]] & 1)) {
          return 0;
        }
        uint64_t v12 = (char *)v91 + v32[13];
        uint64_t v13 = *(void *)v12;
        LOBYTE(v12) = v12[8];
        uint64_t v14 = &v99[v32[13]];
        uint64_t v15 = *(void *)v14;
        LOBYTE(v14) = v14[8];
        uint64_t v111 = v13;
        char v112 = v12 & 1;
        uint64_t v113 = v15;
        char v114 = v14 & 1;
        if (v12)
        {
          if (v114)
          {
            int v31 = 1;
LABEL_43:
            if ((v31 & 1) == 0) {
              return 0;
            }
            if ((*((unsigned char *)v91 + v32[14]) & 1) != (v99[v32[14]] & 1)) {
              return 0;
            }
            sub_10001AF78((char *)v91 + v32[15], v90);
            sub_10001AF78(&v99[v32[15]], v88);
            uint64_t v25 = &v83[*(int *)(v81 + 48)];
            sub_10001AF78(v90, v83);
            sub_10001AF78(v88, v25);
            id v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
            uint64_t v27 = v75 + 48;
            if (v26(v83, 1, v74) == 1)
            {
              if (v26(v25, 1, v74) != 1) {
                goto LABEL_55;
              }
              sub_100018600((uint64_t)v83);
              int v24 = 1;
            }
            else
            {
              sub_10001AF78(v83, v86);
              if (v26(v25, 1, v74) == 1)
              {
                (*(void (**)(char *, uint64_t))(v75 + 8))(v86, v74);
LABEL_55:
                sub_10003874C((uint64_t)v83);
                int v24 = 0;
                goto LABEL_54;
              }
              uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
              uint64_t v19 = v75 + 32;
              v20(v80, v86, v74);
              v20(v78, v25, v74);
              sub_100038880();
              int v23 = sub_10008A060();
              unint64_t v22 = *(void (**)(char *, uint64_t))(v75 + 8);
              uint64_t v21 = v75 + 8;
              v22(v78, v74);
              v22(v80, v74);
              sub_100018600((uint64_t)v83);
              int v24 = v23;
            }
LABEL_54:
            int v18 = v24;
            sub_100018600((uint64_t)v88);
            sub_100018600((uint64_t)v90);
            return (v18 & 1) != 0;
          }
        }
        else
        {
          sub_100038904((uint64_t)&v111, (uint64_t)&v110);
          if ((v114 & 1) == 0)
          {
            uint64_t v30 = &v109;
            uint64_t v109 = v110;
            uint64_t v28 = &v108;
            uint64_t v108 = v113;
            uint64_t v29 = type metadata accessor for MUIBucket();
            sub_100038920();
            int v31 = sub_10008A060();
            goto LABEL_43;
          }
        }
        int v31 = 0;
        goto LABEL_43;
      }
      sub_100038714();
      int v45 = 0;
      goto LABEL_28;
    }
    sub_100038714();
    int v57 = 0;
    goto LABEL_18;
  }
  return 0;
}

BOOL sub_100036B50(void *a1, char *a2)
{
  return sub_1000358F8(a1, a2);
}

uint64_t sub_100036B6C(uint64_t a1, uint64_t a2, char a3)
{
  swift_bridgeObjectRetain();
  if (!a2) {
    return sub_10008A0B0("<nil>", 5uLL, 1);
  }
  if (a3)
  {
    id v8 = self;
    swift_bridgeObjectRetain();
    NSString v9 = sub_10008A070();
    swift_bridgeObjectRelease();
    id v10 = [v8 partiallyRedactedStringForString:v9 maximumUnredactedLength:3];

    uint64_t v11 = sub_10008A080();
    uint64_t v12 = v11;
  }
  else
  {
    id v4 = self;
    swift_bridgeObjectRetain();
    NSString v5 = sub_10008A070();
    swift_bridgeObjectRelease();
    id v6 = [v4 fullyRedactedStringForString:v5];

    uint64_t v7 = sub_10008A080();
    uint64_t v12 = v7;
  }
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t type metadata accessor for Message()
{
  uint64_t v1 = qword_1000A3BC8;
  if (!qword_1000A3BC8) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

uint64_t sub_100036E18()
{
  return sub_100034A24();
}

uint64_t sub_100036E30(uint64_t a1)
{
  return sub_10007F7C0(a1, (uint64_t)&off_10009BDA8);
}

unint64_t sub_100036E54(void *a1, void *a2, int *a3)
{
  int v23 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v23 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    swift_retain();
    *a1 = v18;
    return *a1 + ((v23 + 16) & ~(unint64_t)v23);
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = a2[1];
    swift_bridgeObjectRetain();
    a1[1] = v8;
    a1[2] = a2[2];
    uint64_t v9 = a2[3];
    swift_bridgeObjectRetain();
    a1[3] = v9;
    a1[4] = a2[4];
    uint64_t v10 = a2[5];
    swift_bridgeObjectRetain();
    a1[5] = v10;
    a1[6] = a2[6];
    uint64_t v11 = a2[7];
    swift_bridgeObjectRetain();
    a1[7] = v11;
    uint64_t v13 = (char *)a1 + a3[8];
    uint64_t v12 = (char *)a2 + a3[8];
    uint64_t v3 = sub_100089630();
    (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 16))(v13, v12);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    id v4 = (char *)a1 + a3[13];
    NSString v5 = (char *)a2 + a3[13];
    *(void *)id v4 = *(void *)v5;
    v4[8] = v5[8];
    *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    __dst = (char *)a1 + a3[15];
    __src = (char *)a2 + a3[15];
    uint64_t v16 = sub_1000895A0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v17 + 48))(__src, 1))
    {
      uint64_t v6 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, __src, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    return (unint64_t)a1;
  }
}

uint64_t sub_1000371E8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(a2 + 32);
  uint64_t v2 = sub_100089630();
  (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(a1 + v4);
  uint64_t v6 = *(int *)(a2 + 60);
  uint64_t v8 = sub_1000895A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(a1 + v6, 1);
  if (!result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1 + v6, v8);
  }
  return result;
}

char *sub_100037330(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v8 = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  *((void *)a1 + 1) = v8;
  *((void *)a1 + 2) = *((void *)a2 + 2);
  uint64_t v9 = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  *((void *)a1 + 3) = v9;
  *((void *)a1 + 4) = *((void *)a2 + 4);
  uint64_t v10 = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  *((void *)a1 + 5) = v10;
  *((void *)a1 + 6) = *((void *)a2 + 6);
  uint64_t v11 = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  *((void *)a1 + 7) = v11;
  uint64_t v12 = a3[8];
  uint64_t v3 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 16))(&a1[v12], &a2[v12]);
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v4 = a3[13];
  NSString v5 = &a1[v4];
  *(void *)NSString v5 = *(void *)&a2[v4];
  v5[8] = a2[v4 + 8];
  a1[a3[14]] = a2[a3[14]];
  uint64_t v15 = a3[15];
  uint64_t v17 = sub_1000895A0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v18 + 48))(&a2[v15], 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(&a1[v15], &a2[v15], *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void))(v18 + 16))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(&a1[v15], 0, 1, v17);
  }
  return a1;
}

char *sub_100037650(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v9 = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  *((void *)a1 + 1) = v9;
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  uint64_t v10 = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  *((void *)a1 + 3) = v10;
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  uint64_t v11 = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  *((void *)a1 + 5) = v11;
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = *((void *)a2 + 6);
  uint64_t v12 = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  *((void *)a1 + 7) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v3 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 24))(&a1[v13], &a2[v13]);
  a1[a3[9]] = a2[a3[9]] & 1;
  a1[a3[10]] = a2[a3[10]] & 1;
  a1[a3[11]] = a2[a3[11]] & 1;
  a1[a3[12]] = a2[a3[12]] & 1;
  uint64_t v4 = a3[13];
  NSString v5 = &a1[v4];
  *(void *)NSString v5 = *(void *)&a2[v4];
  v5[8] = a2[v4 + 8];
  a1[a3[14]] = a2[a3[14]] & 1;
  uint64_t v16 = a3[15];
  uint64_t v18 = sub_1000895A0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (((unsigned int (*)(char *, uint64_t))v20)(&a1[v16], 1))
  {
    if (v20(&a2[v16], 1, v18))
    {
      uint64_t v7 = sub_100009334(&qword_1000A3B40);
      memcpy(&a1[v16], &a2[v16], *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void))(v19 + 16))();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(&a1[v16], 0, 1, v18);
    }
  }
  else if (v20(&a2[v16], 1, v18))
  {
    (*(void (**)(void))(v19 + 8))();
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(&a1[v16], &a2[v16], *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 24))(&a1[v16], &a2[v16], v18);
  }
  return a1;
}

char *sub_100037AD0(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  uint64_t v8 = a3[8];
  uint64_t v3 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(&a1[v8], &a2[v8]);
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v4 = a3[13];
  NSString v5 = &a1[v4];
  *(void *)NSString v5 = *(void *)&a2[v4];
  v5[8] = a2[v4 + 8];
  a1[a3[14]] = a2[a3[14]];
  uint64_t v11 = a3[15];
  uint64_t v13 = sub_1000895A0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 48))(&a2[v11], 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(&a1[v11], &a2[v11], *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void))(v14 + 32))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(&a1[v11], 0, 1, v13);
  }
  return a1;
}

char *sub_100037D80(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + 7) = *((void *)a2 + 7);
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v3 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 40))(&a1[v9], &a2[v9]);
  a1[a3[9]] = a2[a3[9]] & 1;
  a1[a3[10]] = a2[a3[10]] & 1;
  a1[a3[11]] = a2[a3[11]] & 1;
  a1[a3[12]] = a2[a3[12]] & 1;
  uint64_t v4 = a3[13];
  NSString v5 = &a1[v4];
  *(void *)NSString v5 = *(void *)&a2[v4];
  v5[8] = a2[v4 + 8];
  a1[a3[14]] = a2[a3[14]] & 1;
  uint64_t v12 = a3[15];
  uint64_t v14 = sub_1000895A0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (((unsigned int (*)(char *, uint64_t))v16)(&a1[v12], 1))
  {
    if (v16(&a2[v12], 1, v14))
    {
      uint64_t v7 = sub_100009334(&qword_1000A3B40);
      memcpy(&a1[v12], &a2[v12], *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void))(v15 + 32))();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(&a1[v12], 0, 1, v14);
    }
  }
  else if (v16(&a2[v12], 1, v14))
  {
    (*(void (**)(void))(v15 + 8))();
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(&a1[v12], &a2[v12], *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 40))(&a1[v12], &a2[v12], v14);
  }
  return a1;
}

uint64_t sub_1000381C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1000381EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    int v7 = -1;
    if (*(void *)(a1 + 8) < (unint64_t)&_mh_execute_header) {
      int v7 = *(void *)(a1 + 8);
    }
    return (v7 + 1);
  }
  else
  {
    uint64_t v5 = sub_100089630();
    if (a2 == *(_DWORD *)(*(void *)(v5 - 8) + 84))
    {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v5);
    }
    else
    {
      uint64_t v4 = sub_100009334(&qword_1000A3B40);
      if (a2 == *(_DWORD *)(*(void *)(v4 - 8) + 84)) {
        return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 48))(a1 + *(int *)(a3 + 60), a2, v4);
      }
      else {
        __break(1u);
      }
    }
  }
  return v6;
}

uint64_t sub_1000383B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1000383D8(uint64_t result, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = a2 - 1;
  }
  else
  {
    uint64_t v4 = sub_100089630();
    if (a3 == *(_DWORD *)(*(void *)(v4 - 8) + 84))
    {
      return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(v4 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v4);
    }
    else
    {
      uint64_t result = sub_100009334(&qword_1000A3B40);
      if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
        return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(v5 + *(int *)(a4 + 60), a2, a2, result);
      }
      else {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_100038570()
{
  uint64_t v3 = sub_100089630();
  if (v0 <= 0x3F)
  {
    uint64_t v3 = sub_10001C274();
    if (v1 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v3;
}

void *sub_100038708()
{
  return &protocol witness table for String;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100038714()
{
}

uint64_t sub_10003874C(uint64_t a1)
{
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  unsigned int v6 = *(unsigned int (**)(void))(v5 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t))v6)(a1, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v2 = a1 + *(int *)(sub_100009334(&qword_1000A3C28) + 48);
  if (!v6()) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  return a1;
}

unint64_t sub_100038880()
{
  uint64_t v2 = qword_1000A3C30;
  if (!qword_1000A3C30)
  {
    sub_1000895A0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3C30);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100038904(uint64_t a1, uint64_t a2)
{
  uint64_t result = a2;
  *(void *)a2 = *(void *)a1;
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 8);
  return result;
}

unint64_t sub_100038920()
{
  uint64_t v2 = qword_1000A3C38;
  if (!qword_1000A3C38)
  {
    type metadata accessor for MUIBucket();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3C38);
    return WitnessTable;
  }
  return v2;
}

void *sub_1000389A4(void *a1, void *a2)
{
  *a2 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = a2;
  a2[1] = v4;
  return result;
}

unint64_t sub_1000389E4()
{
  uint64_t v2 = qword_1000A3C40;
  if (!qword_1000A3C40)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3C40);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_100038A4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = a1;
  int v7 = 0;
  uint64_t v5 = sub_100009334(&qword_1000A3C50);
  unint64_t v3 = (*(void *)(*(void *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = (uint64_t)&v2 - v3;
  int v7 = (uint64_t *)__chkstk_darwin(v2);
  sub_100038B04(v7, (uint64_t *)((char *)&v2 - v3));
  sub_100089710();
  return sub_100038BD4(v6);
}

void *sub_100038B04(uint64_t *a1, void *a2)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v2 - 8) + 16))(a2, a1);
  }
  else
  {
    uint64_t v4 = *a1;
    swift_retain();
    *a2 = v4;
  }
  swift_storeEnumTagMultiPayload();
  return a2;
}

uint64_t sub_100038BD4(uint64_t a1)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EC0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  return a1;
}

id sub_100038C6C()
{
  id result = sub_100038C8C();
  qword_1000A3C48 = (uint64_t)result;
  return result;
}

id sub_100038C8C()
{
  sub_100045870();
  id v1 = sub_10000BF54();
  [v1 setNumberStyle:1];
  [v1 setUsesSignificantDigits:0];
  return v1;
}

uint64_t *sub_100038D00()
{
  if (qword_1000A2DC0 != -1) {
    swift_once();
  }
  return &qword_1000A3C48;
}

uint64_t sub_100038D64()
{
  uint64_t v40 = 0;
  uint64_t v31 = 0;
  unint64_t v28 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v1 = __chkstk_darwin(0);
  uint64_t v29 = (uint64_t)&v18 - v28;
  unint64_t v30 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  uint64_t v37 = (uint64_t)&v18 - v30;
  unint64_t v32 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t)&v18 - v32;
  unint64_t v34 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  uint64_t v36 = (uint64_t)&v18 - v34;
  uint64_t v40 = v0;
  uint64_t v35 = type metadata accessor for MessageListHeaderView();
  sub_10001FD60(v0 + *(int *)(v35 + 20), v36);
  sub_10000E524(v36, v37);
  sub_100020788(v36);
  uint64_t v5 = *(void *)(v37 + 24);
  unint64_t v38 = *(void *)(v37 + 32);
  sub_1000154C0(v5, v38);
  sub_100015540(v37);
  unint64_t v39 = v38;
  if (v38)
  {
    unint64_t v7 = v38;
    char v6 = 1;
  }
  else
  {
    unint64_t v7 = 0;
    char v6 = 0;
  }
  if (v6)
  {
    unint64_t v26 = v38;
    unint64_t v21 = v38;
    uint64_t v22 = sub_10008A0B0("folder", 6uLL, 1);
    uint64_t v23 = v8;
    swift_bridgeObjectRelease();
    uint64_t v24 = v22;
    uint64_t v25 = v23;
  }
  else
  {
    switch(v7)
    {
      case 0uLL:
        uint64_t v9 = v29;
        sub_10001FD60(v27 + *(int *)(v35 + 20), v33);
        sub_10000E524(v33, v9);
        sub_100020788(v33);
        int v20 = sub_10001A878();
        sub_100015540(v29);
        if (v20) {
          uint64_t v24 = sub_10008A0B0("person.2", 8uLL, 1);
        }
        else {
          uint64_t v24 = sub_10008A0B0("tray.2", 6uLL, 1);
        }
        uint64_t v25 = v10;
        break;
      case 1uLL:
        uint64_t v11 = v29;
        sub_10001FD60(v27 + *(int *)(v35 + 20), v33);
        sub_10000E524(v33, v11);
        sub_100020788(v33);
        int v19 = sub_10001A878();
        sub_100015540(v29);
        if (v19) {
          uint64_t v24 = sub_10008A0B0("person.2", 8uLL, 1);
        }
        else {
          uint64_t v24 = sub_10008A0B0("tray", 4uLL, 1);
        }
        uint64_t v25 = v12;
        break;
      case 2uLL:
        uint64_t v24 = sub_10008A0B0("flag", 4uLL, 1);
        uint64_t v25 = v13;
        break;
      case 3uLL:
        uint64_t v24 = sub_10008A0B0("envelope.badge", 0xEuLL, 1);
        uint64_t v25 = v14;
        break;
      case 4uLL:
        uint64_t v24 = sub_10008A0B0("star.fill", 9uLL, 1);
        uint64_t v25 = v15;
        break;
      case 5uLL:
        uint64_t v24 = sub_10008A0B0("calendar", 8uLL, 1);
        uint64_t v25 = v16;
        break;
      default:
        JUMPOUT(0);
    }
  }
  return v24;
}

uint64_t type metadata accessor for MessageListHeaderView()
{
  uint64_t v1 = qword_1000A3DB0;
  if (!qword_1000A3DB0) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

uint64_t sub_100039208()
{
  uint64_t v12 = 0;
  uint64_t v8 = 0;
  unint64_t v4 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v7 = (uint64_t)&v3 - v4;
  unint64_t v5 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  uint64_t v6 = (uint64_t)&v3 - v5;
  uint64_t v12 = v0;
  uint64_t v1 = type metadata accessor for MessageListHeaderView();
  sub_10001FD60(v0 + *(int *)(v1 + 20), v6);
  sub_10000E524(v6, v7);
  sub_100020788(v6);
  uint64_t v10 = *(void *)(v7 + 24);
  unint64_t v9 = *(void *)(v7 + 32);
  sub_1000154C0(v10, v9);
  sub_100015540(v7);
  int v11 = sub_10001973C(v10, v9, v8, 4uLL);
  sub_100015500(v10, v9);
  if (v11) {
    return sub_100089CB0();
  }
  else {
    return sub_100089C70();
  }
}

uint64_t sub_100039380@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v61 = 0;
  uint64_t v60 = 0;
  uint64_t v59 = 0;
  uint64_t v58 = 0;
  uint64_t v57 = 0;
  uint64_t v21 = sub_100009334(&qword_1000A3C60);
  unint64_t v22 = (*(void *)(*(void *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t)v14 - v22;
  unint64_t v24 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v14 - v22);
  uint64_t v25 = (uint64_t)v14 - v24;
  unint64_t v26 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v14 - v24);
  uint64_t v27 = (uint64_t)v14 - v26;
  uint64_t v61 = (char *)v14 - v26;
  uint64_t v28 = sub_100009334(&qword_1000A3C68);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = v28 - 8;
  unint64_t v31 = (*(void *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v28);
  uint64_t v32 = (uint64_t)v14 - v31;
  unint64_t v33 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v14 - v31);
  uint64_t v34 = (uint64_t)v14 - v33;
  unint64_t v35 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v14 - v33);
  uint64_t v36 = (uint64_t)v14 - v35;
  uint64_t v60 = (char *)v14 - v35;
  uint64_t v6 = sub_100009334(&qword_1000A3B40);
  unint64_t v37 = (*(void *)(*(void *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  int v56 = (char *)v14 - v37;
  uint64_t v44 = 0;
  uint64_t v51 = type metadata accessor for Mailbox();
  unint64_t v38 = (*(void *)(*(void *)(v51 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v44);
  uint64_t v52 = (uint64_t)v14 - v38;
  unint64_t v39 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v44);
  uint64_t v50 = (uint64_t)v14 - v39;
  uint64_t v55 = sub_1000895A0();
  uint64_t v53 = *(void *)(v55 - 8);
  uint64_t v54 = v55 - 8;
  unint64_t v40 = (*(void *)(v53 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v55);
  uint64_t v41 = (char *)v14 - v40;
  unint64_t v42 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v14 - v40);
  unsigned int v43 = (char *)v14 - v42;
  uint64_t v59 = (char *)v14 - v42;
  uint64_t v45 = sub_100009334(&qword_1000A3C70);
  unint64_t v46 = (*(void *)(*(void *)(v45 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = __chkstk_darwin(v44);
  uint64_t v47 = (uint64_t)v14 - v46;
  unint64_t v48 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)v14 - v48;
  uint64_t v58 = (char *)v14 - v48;
  uint64_t v57 = v1;
  uint64_t v10 = type metadata accessor for MessageListHeaderView();
  sub_10001FD60(v1 + *(int *)(v10 + 20), v50);
  sub_10000E524(v50, v52);
  sub_100020788(v50);
  sub_10001AF78((const void *)(v52 + *(int *)(v51 + 28)), v56);
  sub_100015540(v52);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v56, 1, v55) == 1)
  {
    sub_100018600((uint64_t)v56);
    sub_100039D84(v25);
    v14[0] = sub_100039FD0();
    sub_100039F6C(v25, v21, v27);
    sub_10003A054(v25);
    sub_10003A568(v27, v23);
    sub_100039F6C(v23, v21, v25);
    sub_10003A054(v23);
    unint64_t v12 = sub_10003B0C8();
    sub_10003AFD0(v25, v28, v21, v12, v14[0], v47);
    sub_10003A054(v25);
    sub_10003B14C(v47, v49);
    sub_10003A054(v27);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v43, v56, v55);
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v41, v43, v55);
    v14[1] = (uint64_t)sub_100039C20(v20);
    v14[2] = v11;
    swift_retain();
    unint64_t v16 = sub_100039FD0();
    sub_100089AC0();
    swift_release();
    swift_release();
    unint64_t v15 = sub_10003B0C8();
    sub_100039F6C(v34, v28, v36);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    uint64_t v17 = v29 + 8;
    v18(v34, v28);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v32, v36, v28);
    sub_100039F6C(v32, v28, v34);
    v18(v32, v28);
    sub_10003AED8(v34, v28, v21, v15, v16, v47);
    v18(v34, v28);
    sub_10003B14C(v47, v49);
    v18(v36, v28);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v43, v55);
  }
  sub_10003B93C(v49, v47);
  sub_10003C2B4();
  sub_100039F6C(v47, v45, v19);
  sub_10003C358(v47);
  return sub_10003C358(v49);
}

uint64_t (*sub_100039C20(uint64_t a1))@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = a1;
  uint64_t v10 = sub_1000457F8;
  uint64_t v11 = 0;
  uint64_t v3 = *(void *)(type metadata accessor for MessageListHeaderView() - 8);
  uint64_t v5 = v3;
  uint64_t v6 = *(void *)(v3 + 64);
  unint64_t v4 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = (char *)&v2 - v4;
  uint64_t v11 = (uint64_t *)__chkstk_darwin(v2);
  sub_10003E6AC(v11, (uint64_t *)((char *)&v2 - v4));
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1000454D8(v8, (char *)(v9 + v7));
  return v10;
}

uint64_t sub_100039D4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100039D84(a1);
}

uint64_t sub_100039D84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v14 = a1;
  uint64_t v9 = sub_10003EA48;
  unint64_t v22 = 0;
  uint64_t v21 = 0;
  uint64_t v2 = type metadata accessor for MessageListHeaderView();
  unint64_t v5 = (*(void *)(*(void *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  uint64_t v13 = (unint64_t *)((char *)&v5 - v5);
  uint64_t v15 = sub_100009334(&qword_1000A3C60);
  unint64_t v6 = (*(void *)(*(void *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t)&v5 - v6;
  unint64_t v7 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v5 - v6);
  uint64_t v18 = (uint64_t)&v5 - v7;
  unint64_t v22 = (char *)&v5 - v7;
  uint64_t v21 = v1;
  uint64_t v12 = sub_100089920();
  sub_10003E6AC(v8, v13);
  uint64_t v10 = &v19;
  uint64_t v20 = v13;
  uint64_t v11 = sub_100009334(&qword_1000A3D10);
  sub_10003EA50();
  sub_100089D50();
  sub_10003EAD4((uint64_t)v13);
  unint64_t v16 = sub_100039FD0();
  sub_100039F6C(v17, v15, v18);
  sub_10003A054(v17);
  sub_10003A568(v18, v17);
  sub_100039F6C(v17, v15, v14);
  sub_10003A054(v17);
  return sub_10003A054(v18);
}

uint64_t sub_100039F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1);
}

unint64_t sub_100039FD0()
{
  uint64_t v2 = qword_1000A3C78;
  if (!qword_1000A3C78)
  {
    sub_1000096C0(&qword_1000A3C60);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3C78);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10003A054(uint64_t a1)
{
  uint64_t v14 = *(int *)(sub_100009334(&qword_1000A3C80) + 44);
  swift_release();
  uint64_t v15 = sub_100009334(&qword_1000A3C88);
  uint64_t v17 = a1 + v14 + *(int *)(v15 + 36);
  swift_release();
  uint64_t v16 = sub_100009334(&qword_1000A3C90);
  uint64_t v18 = *(int *)(v16 + 28);
  uint64_t v19 = sub_100089D10();
  uint64_t v20 = *(void (**)(uint64_t))(*(void *)(v19 - 8) + 8);
  v20(v17 + v18);
  sub_100009334(&qword_1000A3C98);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3CA0);
  swift_release();
  swift_release();
  uint64_t v21 = *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
  swift_release();
  uint64_t v22 = sub_100009334(&qword_1000A3CB0);
  uint64_t v23 = *(int *)(v22 + 28);
  uint64_t v24 = sub_100089990();
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v26 = *(unsigned int (**)(void))(v25 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t))v26)(a1 + v14 + v21 + v23, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a1 + v14 + v21 + v23, v24);
  }
  uint64_t v10 = (int *)sub_100009334(&qword_1000A3CB8);
  uint64_t v9 = a1 + v14 + v10[12];
  uint64_t v1 = sub_100009334(&qword_1000A3CC0);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v9);
  uint64_t v11 = a1 + v14 + v10[20];
  uint64_t v12 = sub_100009334(&qword_1000A3CC8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1))
  {
    swift_release();
    uint64_t v6 = v11 + *(int *)(v15 + 36);
    swift_release();
    ((void (*)(uint64_t, uint64_t))v20)(v6 + *(int *)(v16 + 28), v19);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CD0);
    swift_release();
    uint64_t v7 = v11 + *(int *)(v12 + 36);
    swift_release();
    uint64_t v8 = v7 + *(int *)(v22 + 28);
    if (!v26()) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v8, v24);
    }
  }
  uint64_t v3 = a1 + v14 + v10[24];
  uint64_t v4 = sub_100009334(&qword_1000A3CD8);
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return a1;
}

uint64_t sub_10003A568(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v42 = *(int *)(sub_100009334(&qword_1000A3C80) + 44);
  uint64_t v43 = *(void *)(a1 + v42);
  swift_retain();
  uint64_t v63 = a2 + v42;
  *(void *)(a2 + v42) = v43;
  uint64_t v44 = sub_100009334(&qword_1000A3C88);
  uint64_t v45 = *(int *)(v44 + 36);
  uint64_t v49 = (uint64_t *)(a1 + v42 + v45);
  uint64_t v46 = *v49;
  swift_retain();
  *(void *)(v63 + v45) = v46;
  uint64_t v47 = sub_100009334(&qword_1000A3C90);
  uint64_t v48 = *(int *)(v47 + 28);
  uint64_t v50 = sub_100089D10();
  uint64_t v51 = *(void (**)(uint64_t, char *))(*(void *)(v50 - 8) + 16);
  v51(a2 + v42 + v45 + v48, (char *)v49 + v48);
  uint64_t v52 = sub_100009334(&qword_1000A3C98);
  uint64_t v53 = *(int *)(v52 + 36);
  uint64_t v55 = (uint64_t *)(a1 + v42 + v53);
  uint64_t v54 = *v55;
  swift_retain();
  *(void *)(v63 + v53) = v54;
  uint64_t v56 = v55[1];
  swift_retain();
  *(void *)(a2 + v42 + v53 + 8) = v56;
  uint64_t v57 = sub_100009334(&qword_1000A3CA0);
  uint64_t v58 = *(int *)(v57 + 36);
  uint64_t v60 = (uint64_t *)(a1 + v42 + v58);
  uint64_t v59 = *v60;
  swift_retain();
  *(void *)(v63 + v58) = v59;
  uint64_t v61 = v60[1];
  swift_retain();
  *(void *)(a2 + v42 + v58 + 8) = v61;
  uint64_t v62 = *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
  uint64_t v67 = (uint64_t *)(a1 + v42 + v62);
  uint64_t v64 = *v67;
  swift_retain();
  *(void *)(v63 + v62) = v64;
  uint64_t v65 = sub_100009334(&qword_1000A3CB0);
  uint64_t v66 = *(int *)(v65 + 28);
  uint64_t v68 = sub_100089990();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = *(unsigned int (**)(void))(v69 + 48);
  if (((unsigned int (*)(char *, uint64_t))v70)((char *)v67 + v66, 1))
  {
    uint64_t v2 = sub_100009334(&qword_1000A3CE0);
    memcpy((void *)(a2 + v42 + v62 + v66), (const void *)(a1 + v42 + v62 + v66), *(void *)(*(void *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void))(v69 + 16))();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(a2 + v42 + v62 + v66, 0, 1, v68);
  }
  unint64_t v35 = (int *)sub_100009334(&qword_1000A3CB8);
  uint64_t v34 = a2 + v42 + v35[12];
  uint64_t v33 = a1 + v42 + v35[12];
  uint64_t v3 = sub_100009334(&qword_1000A3CC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v34, v33);
  uint64_t v4 = a2 + v42 + v35[16];
  uint64_t v5 = a1 + v42 + v35[16];
  *(void *)uint64_t v4 = *(void *)v5;
  *(unsigned char *)(v4 + 8) = *(unsigned char *)(v5 + 8);
  uint64_t v36 = (void *)(a2 + v42 + v35[20]);
  unint64_t v37 = (uint64_t *)(a1 + v42 + v35[20]);
  uint64_t v38 = sub_100009334(&qword_1000A3CC8);
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v39 + 48))(v37, 1))
  {
    uint64_t v7 = sub_100009334(&qword_1000A3CE8);
    memcpy(v36, v37, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v14 = *v37;
    swift_retain();
    void *v36 = v14;
    uint64_t v16 = (void *)((char *)v36 + *(int *)(v44 + 36));
    uint64_t v17 = (uint64_t *)((char *)v37 + *(int *)(v44 + 36));
    uint64_t v15 = *v17;
    swift_retain();
    *uint64_t v16 = v15;
    ((void (*)(char *, char *, uint64_t))v51)((char *)v16 + *(int *)(v47 + 28), (char *)v17 + *(int *)(v47 + 28), v50);
    uint64_t v20 = (void *)((char *)v36 + *(int *)(v52 + 36));
    uint64_t v19 = (uint64_t *)((char *)v37 + *(int *)(v52 + 36));
    uint64_t v18 = *v19;
    swift_retain();
    *uint64_t v20 = v18;
    uint64_t v21 = v19[1];
    swift_retain();
    v20[1] = v21;
    uint64_t v24 = (void *)((char *)v36 + *(int *)(v57 + 36));
    uint64_t v23 = (uint64_t *)((char *)v37 + *(int *)(v57 + 36));
    uint64_t v22 = *v23;
    swift_retain();
    *uint64_t v24 = v22;
    uint64_t v25 = v23[1];
    swift_retain();
    v24[1] = v25;
    uint64_t v26 = *(int *)(sub_100009334(&qword_1000A3CD0) + 36);
    uint64_t v27 = *(uint64_t *)((char *)v37 + v26);
    swift_retain();
    *(void *)((char *)v36 + v26) = v27;
    uint64_t v29 = (void *)((char *)v36 + *(int *)(v38 + 36));
    uint64_t v30 = (uint64_t *)((char *)v37 + *(int *)(v38 + 36));
    uint64_t v28 = *v30;
    swift_retain();
    void *v29 = v28;
    __dst = (char *)v29 + *(int *)(v65 + 28);
    __src = (char *)v30 + *(int *)(v65 + 28);
    if (v70())
    {
      uint64_t v6 = sub_100009334(&qword_1000A3CE0);
      memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(__dst, __src, v68);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(__dst, 0, 1, v68);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  uint64_t v10 = (void *)(a2 + v42 + v35[24]);
  uint64_t v11 = (void *)(a1 + v42 + v35[24]);
  uint64_t v12 = sub_100009334(&qword_1000A3CD8);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v13 + 48))(v11, 1))
  {
    uint64_t v8 = sub_100009334(&qword_1000A3CF0);
    memcpy(v10, v11, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a2;
}

uint64_t sub_10003AED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = a6;
  v8[1] = a1;
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v18 = a2;
  uint64_t v17 = a3;
  uint64_t v10 = sub_1000899E0();
  unint64_t v9 = (*(void *)(*(void *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v8 - v9;
  (*(void (**)(void))(*(void *)(v6 - 8) + 16))();
  swift_storeEnumTagMultiPayload();
  return sub_1000899F0();
}

uint64_t sub_10003AFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = a6;
  v8[1] = a1;
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v18 = a2;
  uint64_t v17 = a3;
  uint64_t v10 = sub_1000899E0();
  unint64_t v9 = (*(void *)(*(void *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v8 - v9;
  (*(void (**)(void))(*(void *)(v6 - 8) + 16))();
  swift_storeEnumTagMultiPayload();
  return sub_1000899F0();
}

unint64_t sub_10003B0C8()
{
  uint64_t v2 = qword_1000A3CF8;
  if (!qword_1000A3CF8)
  {
    sub_1000096C0(&qword_1000A3C68);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3CF8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10003B14C(uint64_t a1, uint64_t a2)
{
  sub_100009334(&qword_1000A3D00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
    uint64_t v3 = sub_100009334(&qword_1000A3C80);
    uint64_t v39 = (void *)(a2 + *(int *)(v3 + 44));
    unint64_t v40 = (void *)(a1 + *(int *)(v3 + 44));
    *uint64_t v39 = *v40;
    uint64_t v29 = sub_100009334(&qword_1000A3C88);
    uint64_t v30 = (void *)((char *)v39 + *(int *)(v29 + 36));
    unint64_t v31 = (void *)((char *)v40 + *(int *)(v29 + 36));
    void *v30 = *v31;
    uint64_t v32 = sub_100009334(&qword_1000A3C90);
    uint64_t v34 = (char *)v30 + *(int *)(v32 + 28);
    uint64_t v33 = (char *)v31 + *(int *)(v32 + 28);
    uint64_t v35 = sub_100089D10();
    uint64_t v36 = *(void (**)(char *, char *))(*(void *)(v35 - 8) + 32);
    v36(v34, v33);
    uint64_t v37 = sub_100009334(&qword_1000A3C98);
    *(_OWORD *)((char *)v39 + *(int *)(v37 + 36)) = *(_OWORD *)((char *)v40 + *(int *)(v37 + 36));
    uint64_t v38 = sub_100009334(&qword_1000A3CA0);
    *(_OWORD *)((char *)v39 + *(int *)(v38 + 36)) = *(_OWORD *)((char *)v40 + *(int *)(v38 + 36));
    uint64_t v4 = sub_100009334(&qword_1000A3CA8);
    uint64_t v41 = (void *)((char *)v39 + *(int *)(v4 + 36));
    uint64_t v42 = (void *)((char *)v40 + *(int *)(v4 + 36));
    *uint64_t v41 = *v42;
    uint64_t v43 = sub_100009334(&qword_1000A3CB0);
    uint64_t v44 = (char *)v41 + *(int *)(v43 + 28);
    uint64_t v45 = (char *)v42 + *(int *)(v43 + 28);
    uint64_t v46 = sub_100089990();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(unsigned int (**)(void))(v47 + 48);
    if (((unsigned int (*)(char *, uint64_t))v48)(v45, 1))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3CE0);
      memcpy(v44, v45, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    uint64_t v24 = (int *)sub_100009334(&qword_1000A3CB8);
    uint64_t v23 = (char *)v39 + v24[12];
    uint64_t v22 = (char *)v40 + v24[12];
    uint64_t v6 = sub_100009334(&qword_1000A3CC0);
    (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 32))(v23, v22);
    uint64_t v7 = (char *)v39 + v24[16];
    uint64_t v8 = (char *)v40 + v24[16];
    *(void *)uint64_t v7 = *(void *)v8;
    v7[8] = v8[8];
    uint64_t v25 = (void *)((char *)v39 + v24[20]);
    uint64_t v26 = (void *)((char *)v40 + v24[20]);
    uint64_t v27 = sub_100009334(&qword_1000A3CC8);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(void *, uint64_t))(v28 + 48))(v26, 1))
    {
      uint64_t v13 = sub_100009334(&qword_1000A3CE8);
      memcpy(v25, v26, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      void *v25 = *v26;
      uint64_t v9 = *(int *)(v29 + 36);
      *(void *)((char *)v25 + v9) = *(void *)((char *)v26 + v9);
      ((void (*)(char *, char *, uint64_t))v36)((char *)v25 + v9 + *(int *)(v32 + 28), (char *)v26 + v9 + *(int *)(v32 + 28), v35);
      *(_OWORD *)((char *)v25 + *(int *)(v37 + 36)) = *(_OWORD *)((char *)v26 + *(int *)(v37 + 36));
      *(_OWORD *)((char *)v25 + *(int *)(v38 + 36)) = *(_OWORD *)((char *)v26 + *(int *)(v38 + 36));
      uint64_t v10 = sub_100009334(&qword_1000A3CD0);
      *(void *)((char *)v25 + *(int *)(v10 + 36)) = *(void *)((char *)v26 + *(int *)(v10 + 36));
      uint64_t v11 = *(int *)(v27 + 36);
      *(void *)((char *)v25 + v11) = *(void *)((char *)v26 + v11);
      __dst = (char *)v25 + v11 + *(int *)(v43 + 28);
      __src = (char *)v26 + v11 + *(int *)(v43 + 28);
      if (v48())
      {
        uint64_t v12 = sub_100009334(&qword_1000A3CE0);
        memcpy(__dst, __src, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(__dst, __src, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v16 = (char *)v39 + v24[24];
    uint64_t v17 = (char *)v40 + v24[24];
    uint64_t v18 = sub_100009334(&qword_1000A3CD8);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v19 + 48))(v17, 1))
    {
      uint64_t v14 = sub_100009334(&qword_1000A3CF0);
      memcpy(v16, v17, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v2 = sub_100009334(&qword_1000A3C68);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

uint64_t sub_10003B93C(uint64_t a1, uint64_t a2)
{
  sub_100009334(&qword_1000A3D00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
    uint64_t v3 = sub_100009334(&qword_1000A3C80);
    uint64_t v63 = (void *)(a2 + *(int *)(v3 + 44));
    uint64_t v64 = (uint64_t *)(a1 + *(int *)(v3 + 44));
    uint64_t v43 = *v64;
    swift_retain();
    *uint64_t v63 = v43;
    uint64_t v44 = sub_100009334(&qword_1000A3C88);
    uint64_t v46 = (void *)((char *)v63 + *(int *)(v44 + 36));
    uint64_t v47 = (uint64_t *)((char *)v64 + *(int *)(v44 + 36));
    uint64_t v45 = *v47;
    swift_retain();
    *uint64_t v46 = v45;
    uint64_t v48 = sub_100009334(&qword_1000A3C90);
    uint64_t v50 = (char *)v46 + *(int *)(v48 + 28);
    uint64_t v49 = (char *)v47 + *(int *)(v48 + 28);
    uint64_t v51 = sub_100089D10();
    uint64_t v52 = *(void (**)(char *, char *))(*(void *)(v51 - 8) + 16);
    v52(v50, v49);
    uint64_t v53 = sub_100009334(&qword_1000A3C98);
    uint64_t v56 = (void *)((char *)v63 + *(int *)(v53 + 36));
    uint64_t v55 = (uint64_t *)((char *)v64 + *(int *)(v53 + 36));
    uint64_t v54 = *v55;
    swift_retain();
    void *v56 = v54;
    uint64_t v57 = v55[1];
    swift_retain();
    v56[1] = v57;
    uint64_t v58 = sub_100009334(&qword_1000A3CA0);
    uint64_t v61 = (void *)((char *)v63 + *(int *)(v58 + 36));
    uint64_t v60 = (uint64_t *)((char *)v64 + *(int *)(v58 + 36));
    uint64_t v59 = *v60;
    swift_retain();
    *uint64_t v61 = v59;
    uint64_t v62 = v60[1];
    swift_retain();
    v61[1] = v62;
    uint64_t v4 = sub_100009334(&qword_1000A3CA8);
    uint64_t v66 = (void *)((char *)v63 + *(int *)(v4 + 36));
    uint64_t v67 = (uint64_t *)((char *)v64 + *(int *)(v4 + 36));
    uint64_t v65 = *v67;
    swift_retain();
    *uint64_t v66 = v65;
    uint64_t v68 = sub_100009334(&qword_1000A3CB0);
    uint64_t v69 = (char *)v66 + *(int *)(v68 + 28);
    uint64_t v70 = (char *)v67 + *(int *)(v68 + 28);
    uint64_t v71 = sub_100089990();
    uint64_t v72 = *(void *)(v71 - 8);
    uint64_t v73 = *(unsigned int (**)(void))(v72 + 48);
    if (((unsigned int (*)(char *, uint64_t))v73)(v70, 1))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3CE0);
      memcpy(v69, v70, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    uint64_t v38 = (int *)sub_100009334(&qword_1000A3CB8);
    uint64_t v37 = (char *)v63 + v38[12];
    uint64_t v36 = (char *)v64 + v38[12];
    uint64_t v6 = sub_100009334(&qword_1000A3CC0);
    (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 16))(v37, v36);
    uint64_t v7 = (char *)v63 + v38[16];
    uint64_t v8 = (char *)v64 + v38[16];
    *(void *)uint64_t v7 = *(void *)v8;
    v7[8] = v8[8];
    uint64_t v39 = (void *)((char *)v63 + v38[20]);
    unint64_t v40 = (uint64_t *)((char *)v64 + v38[20]);
    uint64_t v41 = sub_100009334(&qword_1000A3CC8);
    uint64_t v42 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v42 + 48))(v40, 1))
    {
      uint64_t v10 = sub_100009334(&qword_1000A3CE8);
      memcpy(v39, v40, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v17 = *v40;
      swift_retain();
      *uint64_t v39 = v17;
      uint64_t v19 = (void *)((char *)v39 + *(int *)(v44 + 36));
      uint64_t v20 = (uint64_t *)((char *)v40 + *(int *)(v44 + 36));
      uint64_t v18 = *v20;
      swift_retain();
      void *v19 = v18;
      ((void (*)(char *, char *, uint64_t))v52)((char *)v19 + *(int *)(v48 + 28), (char *)v20 + *(int *)(v48 + 28), v51);
      uint64_t v23 = (void *)((char *)v39 + *(int *)(v53 + 36));
      uint64_t v22 = (uint64_t *)((char *)v40 + *(int *)(v53 + 36));
      uint64_t v21 = *v22;
      swift_retain();
      void *v23 = v21;
      uint64_t v24 = v22[1];
      swift_retain();
      v23[1] = v24;
      uint64_t v27 = (void *)((char *)v39 + *(int *)(v58 + 36));
      uint64_t v26 = (uint64_t *)((char *)v40 + *(int *)(v58 + 36));
      uint64_t v25 = *v26;
      swift_retain();
      *uint64_t v27 = v25;
      uint64_t v28 = v26[1];
      swift_retain();
      v27[1] = v28;
      uint64_t v29 = *(int *)(sub_100009334(&qword_1000A3CD0) + 36);
      uint64_t v30 = *(uint64_t *)((char *)v40 + v29);
      swift_retain();
      *(void *)((char *)v39 + v29) = v30;
      uint64_t v32 = (void *)((char *)v39 + *(int *)(v41 + 36));
      uint64_t v33 = (uint64_t *)((char *)v40 + *(int *)(v41 + 36));
      uint64_t v31 = *v33;
      swift_retain();
      *uint64_t v32 = v31;
      __dst = (char *)v32 + *(int *)(v68 + 28);
      __src = (char *)v33 + *(int *)(v68 + 28);
      if (v73())
      {
        uint64_t v9 = sub_100009334(&qword_1000A3CE0);
        memcpy(__dst, __src, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))(__dst, __src, v71);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v71);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    uint64_t v13 = (char *)v63 + v38[24];
    uint64_t v14 = (char *)v64 + v38[24];
    uint64_t v15 = sub_100009334(&qword_1000A3CD8);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v16 + 48))(v14, 1))
    {
      uint64_t v11 = sub_100009334(&qword_1000A3CF0);
      memcpy(v13, v14, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v2 = sub_100009334(&qword_1000A3C68);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

unint64_t sub_10003C2B4()
{
  uint64_t v2 = qword_1000A3D08;
  if (!qword_1000A3D08)
  {
    sub_1000096C0(&qword_1000A3C70);
    sub_10003B0C8();
    sub_100039FD0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3D08);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10003C358(uint64_t a1)
{
  sub_100009334(&qword_1000A3D00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = a1 + *(int *)(sub_100009334(&qword_1000A3C80) + 44);
    swift_release();
    uint64_t v14 = sub_100009334(&qword_1000A3C88);
    uint64_t v15 = v20 + *(int *)(v14 + 36);
    swift_release();
    uint64_t v16 = sub_100009334(&qword_1000A3C90);
    uint64_t v17 = v15 + *(int *)(v16 + 28);
    uint64_t v18 = sub_100089D10();
    uint64_t v19 = *(void (**)(uint64_t))(*(void *)(v18 - 8) + 8);
    v19(v17);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v21 = v20 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
    swift_release();
    uint64_t v22 = sub_100009334(&qword_1000A3CB0);
    uint64_t v23 = v21 + *(int *)(v22 + 28);
    uint64_t v24 = sub_100089990();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(void))(v25 + 48);
    if (!((unsigned int (*)(uint64_t, uint64_t))v26)(v23, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    uint64_t v11 = (int *)sub_100009334(&qword_1000A3CB8);
    uint64_t v10 = v20 + v11[12];
    uint64_t v2 = sub_100009334(&qword_1000A3CC0);
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v10);
    uint64_t v12 = v20 + v11[20];
    uint64_t v13 = sub_100009334(&qword_1000A3CC8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1))
    {
      swift_release();
      uint64_t v7 = v12 + *(int *)(v14 + 36);
      swift_release();
      ((void (*)(uint64_t, uint64_t))v19)(v7 + *(int *)(v16 + 28), v18);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CD0);
      swift_release();
      uint64_t v8 = v12 + *(int *)(v13 + 36);
      swift_release();
      uint64_t v9 = v8 + *(int *)(v22 + 28);
      if (!v26()) {
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v9, v24);
      }
    }
    uint64_t v4 = v20 + v11[24];
    uint64_t v5 = sub_100009334(&qword_1000A3CD8);
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v6 + 48))(v4, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    uint64_t v1 = sub_100009334(&qword_1000A3C68);
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  return a1;
}

uint64_t sub_10003C8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v129 = a2;
  uint64_t v241 = a1;
  uint64_t v223 = 0;
  uint64_t v130 = &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>;
  v335 = 0;
  v334 = 0;
  v333 = 0;
  v332 = 0;
  v331 = 0;
  v330 = 0;
  uint64_t v329 = 0;
  uint64_t v288 = 0;
  char v289 = 0;
  uint64_t v280 = 0;
  uint64_t v278 = 0;
  uint64_t v279 = 0;
  uint64_t v131 = sub_100089870();
  uint64_t v132 = *(void *)(v131 - 8);
  uint64_t v133 = v131 - 8;
  unint64_t v134 = (*(void *)(v132 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v131);
  uint64_t v135 = (char *)&v53 - v134;
  uint64_t v136 = sub_100009334(&qword_1000A3E10);
  unint64_t v137 = (*(void *)(*(void *)(v136 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v136);
  uint64_t v138 = (uint64_t)&v53 - v137;
  uint64_t v139 = sub_100009334(&qword_1000A3CD8);
  uint64_t v140 = *(void *)(v139 - 8);
  uint64_t v141 = v139 - 8;
  unint64_t v142 = (*(void *)(v140 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v139);
  uint64_t v143 = (uint64_t)&v53 - v142;
  unint64_t v144 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v53 - v142);
  uint64_t v145 = (uint64_t)&v53 - v144;
  v335 = (char *)&v53 - v144;
  uint64_t v146 = sub_100009334(&qword_1000A3CF0);
  unint64_t v147 = (*(void *)(*(void *)(v146 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v223);
  uint64_t v148 = (char *)&v53 - v147;
  unint64_t v149 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v150 = (char *)&v53 - v149;
  unint64_t v151 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  Swift::String v152 = (char *)&v53 - v151;
  v334 = (char *)&v53 - v151;
  uint64_t v153 = sub_1000897F0();
  uint64_t v154 = *(void *)(v153 - 8);
  uint64_t v155 = v153 - 8;
  unint64_t v156 = (*(void *)(v154 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v153);
  uint64_t v157 = (uint64_t)&v53 - v156;
  uint64_t v158 = sub_100009334(&qword_1000A3CD0);
  unint64_t v159 = (*(void *)(*(void *)(v158 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v158);
  uint64_t v160 = (uint64_t)&v53 - v159;
  uint64_t v161 = sub_100009334(&qword_1000A3CC8);
  uint64_t v162 = *(void *)(v161 - 8);
  uint64_t v163 = v161 - 8;
  unint64_t v164 = (*(void *)(v162 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v161);
  uint64_t v165 = (char *)&v53 - v164;
  unint64_t v166 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v53 - v164);
  uint64_t v167 = (uint64_t)&v53 - v166;
  unint64_t v168 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v53 - v166);
  id v169 = (char *)&v53 - v168;
  v333 = (char *)&v53 - v168;
  uint64_t v170 = sub_100009334(&qword_1000A3CE8);
  unint64_t v171 = (*(void *)(*(void *)(v170 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = __chkstk_darwin(v223);
  id v172 = (char *)&v53 - v171;
  unint64_t v173 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v174 = (uint64_t *)((char *)&v53 - v173);
  unint64_t v175 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v12);
  int v176 = (uint64_t *)((char *)&v53 - v175);
  v332 = (char *)&v53 - v175;
  unint64_t v177 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v223);
  uint64_t v178 = (uint64_t)&v53 - v177;
  uint64_t v179 = type metadata accessor for Snapshot();
  unint64_t v180 = (*(void *)(*(void *)(v179 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = __chkstk_darwin(v179);
  uint64_t v181 = (uint64_t)&v53 - v180;
  unint64_t v182 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v14);
  uint64_t v183 = (uint64_t)&v53 - v182;
  uint64_t v184 = sub_100009334(&qword_1000A3CC0);
  uint64_t v185 = *(void *)(v184 - 8);
  uint64_t v186 = v184 - 8;
  unint64_t v187 = (*(void *)(v185 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v16 = __chkstk_darwin(v223);
  uint64_t v188 = (uint64_t)&v53 - v187;
  unint64_t v189 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v16);
  uint64_t v190 = (uint64_t)&v53 - v189;
  v331 = (char *)&v53 - v189;
  uint64_t v248 = sub_100089EC0();
  uint64_t v244 = *(void *)(v248 - 8);
  uint64_t v245 = v248 - 8;
  unint64_t v191 = (*(void *)(v244 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v248);
  uint64_t v246 = (char *)&v53 - v191;
  unint64_t v192 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v53 - v191);
  uint64_t v247 = (char *)&v53 - v192;
  unint64_t v193 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3CE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v19 = __chkstk_darwin(v223);
  uint64_t v194 = (uint64_t)&v53 - v193;
  unint64_t v195 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v19);
  uint64_t v196 = (uint64_t)&v53 - v195;
  uint64_t v229 = sub_100089A80();
  v227 = *(void **)(v229 - 8);
  uint64_t v228 = v229 - 8;
  unint64_t v197 = (v227[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v223);
  v230 = (char *)&v53 - v197;
  uint64_t v219 = sub_100089D10();
  uint64_t v216 = *(void **)(v219 - 8);
  uint64_t v217 = v219 - 8;
  unint64_t v198 = (v216[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v219);
  v218 = (char *)&v53 - v198;
  uint64_t v234 = sub_100009334(&qword_1000A3C88);
  unint64_t v199 = (*(void *)(*(void *)(v234 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v234);
  uint64_t v237 = (uint64_t)&v53 - v199;
  uint64_t v239 = sub_100009334(&qword_1000A3C98);
  unint64_t v200 = (*(void *)(*(void *)(v239 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v239);
  uint64_t v201 = (uint64_t)&v53 - v200;
  unint64_t v202 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v53 - v200);
  uint64_t v243 = (uint64_t)&v53 - v202;
  uint64_t v203 = sub_100009334(&qword_1000A3CA0);
  unint64_t v204 = (*(void *)(*(void *)(v203 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v203);
  uint64_t v205 = (uint64_t)&v53 - v204;
  unint64_t v206 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v53 - v204);
  uint64_t v238 = (uint64_t)&v53 - v206;
  uint64_t v207 = sub_100009334(&qword_1000A3CA8);
  unint64_t v208 = (*(void *)(*(void *)(v207 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v207);
  uint32_t v209 = (char *)&v53 - v208;
  unint64_t v210 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v53 - v208);
  uint64_t v211 = (uint64_t)&v53 - v210;
  unint64_t v212 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v53 - v210);
  v213 = (char *)&v53 - v212;
  v330 = (char *)&v53 - v212;
  uint64_t v329 = a1;
  sub_100038D64();
  uint64_t v25 = sub_100089D00();
  v222 = &v328;
  uint64_t v328 = v25;
  v214 = (void (*)(char *, void, uint64_t))v216[13];
  v215 = v216 + 13;
  v214(v218, enum case for Image.Scale.medium(_:), v219);
  sub_100089B50();
  v220 = (void (*)(char *, uint64_t))v216[1];
  v221 = v216 + 1;
  v220(v218, v219);
  sub_10001F4C8();
  uint64_t v224 = type metadata accessor for MessageListHeaderView();
  uint64_t v233 = *(void *)(v241 + *(int *)(v224 + 24));
  swift_retain();
  v225 = (void (*)(char *, void, uint64_t))v227[13];
  v226 = v227 + 13;
  v225(v230, enum case for Font.Leading.tight(_:), v229);
  uint64_t v236 = sub_100089A90();
  v231 = (void (*)(char *, uint64_t))v227[1];
  v232 = v227 + 1;
  v231(v230, v229);
  swift_release();
  unint64_t v235 = sub_100042654();
  sub_100089C10();
  swift_release();
  sub_100042778(v237);
  uint64_t v242 = sub_100039208();
  unint64_t v240 = sub_100042820();
  sub_100089BC0();
  swift_release();
  sub_100042948(v243);
  sub_100038A4C((uint64_t)v247);
  sub_100089EB0();
  int v251 = sub_100089EA0();
  uint64_t v250 = *(void (**)(char *, uint64_t))(v244 + 8);
  uint64_t v249 = v244 + 8;
  v250(v246, v248);
  v250(v247, v248);
  if (v251) {
    sub_100089980();
  }
  else {
    sub_100089970();
  }
  uint64_t v26 = sub_100089990();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 56))(v196, 0, 1);
  unint64_t v106 = sub_100042A24();
  sub_100089BF0();
  uint64_t v27 = v178;
  sub_100042B4C(v196);
  sub_100042BFC(v238);
  unint64_t v107 = sub_100042D0C();
  sub_100039F6C(v211, v207, (uint64_t)v213);
  sub_100042E34(v211);
  sub_10001FD60(v241 + *(int *)(v224 + 20), v183);
  sub_10000E524(v183, v27);
  sub_100020788(v183);
  uint64_t v109 = sub_10001A170();
  uint64_t v108 = v28;
  sub_100015540(v178);
  uint64_t v110 = v313;
  v313[0] = v109;
  v313[1] = v108;
  unint64_t v111 = sub_100043030();
  uint64_t v309 = sub_100089B00();
  uint64_t v310 = v29;
  char v311 = v30;
  uint64_t v312 = v31;
  char v112 = v306;
  v306[0] = v309;
  v306[1] = v29;
  int v124 = 1;
  char v307 = v30 & 1;
  uint64_t v308 = v31;
  uint64_t v120 = 1;
  sub_100089C60();
  sub_1000430AC((uint64_t)v112);
  uint64_t v116 = v300;
  v300[0] = v313[2];
  v300[1] = v313[3];
  char v301 = v314 & 1 & v124;
  uint64_t v302 = v315;
  uint64_t v303 = v316;
  uint64_t v304 = v317;
  char v305 = v318 & 1 & v124;
  uint64_t v113 = *(void *)(v241 + *(int *)(v224 + 24));
  swift_retain();
  sub_100089A60();
  uint64_t v115 = sub_100089A70();
  swift_release();
  uint64_t v114 = sub_100009334(&qword_1000A3E70);
  sub_100043138();
  sub_100089C10();
  swift_release();
  sub_10004325C((uint64_t)v116);
  uint64_t v117 = v292;
  v292[0] = v319;
  v292[1] = v320;
  char v293 = v321 & 1 & v124;
  uint64_t v294 = v322;
  uint64_t v295 = v323;
  uint64_t v296 = v324;
  char v297 = v325 & 1 & v124;
  uint64_t v298 = v326;
  uint64_t v299 = v327;
  uint64_t v118 = sub_100009334(&qword_1000A3E90);
  unint64_t v119 = sub_1000432B0();
  sub_1000458D8();
  sub_100089B10();
  sub_100043354((uint64_t)v117);
  uint64_t v290 = v118;
  unint64_t v291 = v119;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100039F6C(v188, v184, v190);
  uint64_t v122 = *(void (**)(uint64_t, uint64_t))(v185 + 8);
  uint64_t v123 = v185 + 8;
  v122(v188, v184);
  uint64_t v286 = sub_100089D60();
  char v287 = v32 & 1 & v124;
  sub_100039F6C((uint64_t)&v286, (uint64_t)&type metadata for Spacer, (uint64_t)&v288);
  sub_10001FD60(v241 + *(int *)(v224 + 20), v183);
  uint64_t v33 = v183 + *(int *)(v179 + 20);
  unint64_t v127 = *(void *)v33;
  uint64_t v125 = *(void *)(v33 + 8);
  int v126 = *(unsigned __int16 *)(v33 + 16);
  sub_100032ED4(v127);
  sub_100020788(v183);
  int v128 = sub_10008023C(v127, v125, v126);
  sub_1000433C0(v127);
  if (v128)
  {
    sub_10008A0B0("moon.fill", 9uLL, 1);
    uint64_t v34 = sub_100089D00();
    uint64_t v102 = v252;
    v252[0] = v34;
    v214(v218, enum case for Image.Scale.medium(_:), v219);
    sub_100089B50();
    v220(v218, v219);
    sub_10001F4C8();
    uint64_t v103 = *(void *)(v241 + *(int *)(v224 + 24));
    swift_retain();
    v225(v230, enum case for Font.Leading.tight(_:), v229);
    uint64_t v104 = sub_100089A90();
    v231(v230, v229);
    swift_release();
    sub_100089C10();
    swift_release();
    sub_100042778(v237);
    sub_100038A4C((uint64_t)v247);
    sub_100089EB0();
    int v105 = sub_100089EA0();
    v250(v246, v248);
    v250(v247, v248);
    if (v105)
    {
      id v35 = [self systemIndigoColor];
      uint64_t v101 = sub_100089CE0();
    }
    else
    {
      uint64_t v101 = sub_100089CC0();
    }
    uint64_t v99 = v101;
    sub_100089BC0();
    swift_release();
    sub_100042948(v201);
    sub_1000458F0();
    unint64_t v36 = sub_10004499C();
    sub_100045908(v157, v203, v153, v106, v36, v160);
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v157, v153);
    sub_100042BFC(v205);
    sub_100038A4C((uint64_t)v247);
    sub_100089EB0();
    int v100 = sub_100089EA0();
    v250(v246, v248);
    v250(v247, v248);
    if (v100) {
      sub_100089980();
    }
    else {
      sub_100089970();
    }
    uint64_t v37 = sub_100089990();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v37 - 8) + 56))(v194, 0, 1);
    sub_1000434B4();
    sub_100089BF0();
    sub_100042B4C(v194);
    sub_100044A20(v160);
    unint64_t v98 = sub_100043410();
    sub_100039F6C(v167, v161, (uint64_t)v169);
    sub_100044B50(v167);
    sub_100044D6C(v169, v165);
    sub_100039F6C((uint64_t)v165, v161, (uint64_t)v172);
    sub_100044B50((uint64_t)v165);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v172, 0, 1, v161);
    sub_1000642D0(v172, v161, v174);
    sub_1000435DC((uint64_t)v172);
    sub_100043824(v174, v176);
    sub_100044B50((uint64_t)v169);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v162 + 56))(v172, 1, 1, v161);
    sub_100043410();
    sub_1000642D0(v172, v161, v174);
    sub_1000435DC((uint64_t)v172);
    sub_100043824(v174, v176);
  }
  sub_10001FD60(v241 + *(int *)(v224 + 20), v181);
  uint64_t v38 = v181 + *(int *)(v179 + 20);
  unint64_t v96 = *(void *)v38;
  uint64_t v94 = *(void *)(v38 + 8);
  int v95 = *(unsigned __int16 *)(v38 + 16);
  sub_100032ED4(v96);
  sub_100020788(v181);
  uint64_t v97 = sub_1000802D0(v96, v94);
  if (v39)
  {
    sub_1000433C0(v96);
LABEL_22:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56))(v148, 1, 1, v139);
    unint64_t v51 = sub_100043B8C();
    v285[5] = v136;
    v285[6] = v51;
    swift_getOpaqueTypeConformance2();
    sub_1000642D0(v148, v139, v150);
    sub_100043CB0((uint64_t)v148);
    sub_100043D64(v150, v152);
    goto LABEL_23;
  }
  uint64_t v93 = v97;
  uint64_t v92 = v97;
  uint64_t v280 = v97;
  sub_1000433C0(v96);
  if (v92 <= 0) {
    goto LABEL_22;
  }
  id v90 = (id)*sub_100038D00();
  id v40 = v90;
  Class isa = sub_10008A2D0().super.super.isa;
  id v91 = [v90 stringForObjectValue:];
  swift_unknownObjectRelease();

  if (v91)
  {
    id v88 = v91;
    id v83 = v91;
    uint64_t v84 = sub_10008A080();
    uint64_t v85 = v41;

    uint64_t v86 = v84;
    uint64_t v87 = v85;
  }
  else
  {
    uint64_t v86 = 0;
    uint64_t v87 = 0;
  }
  uint64_t v81 = v87;
  uint64_t v82 = v86;
  if (!v87) {
    goto LABEL_22;
  }
  uint64_t v79 = v82;
  uint64_t v80 = v81;
  uint64_t v78 = v81;
  uint64_t v57 = v82;
  uint64_t v278 = v82;
  uint64_t v279 = v81;
  swift_bridgeObjectRetain();
  uint64_t v276 = v57;
  uint64_t v277 = v78;
  uint64_t v272 = sub_100089B00();
  uint64_t v273 = v42;
  unsigned __int8 v274 = v43;
  uint64_t v275 = v44;
  uint64_t v59 = v272;
  uint64_t v60 = v42;
  int v61 = v43;
  uint64_t v62 = v44;
  uint64_t v58 = *(void *)(v241 + *(int *)(v224 + 24));
  swift_retain();
  uint64_t v268 = v59;
  uint64_t v269 = v60;
  unsigned int v74 = 1;
  char v270 = v61 & 1;
  uint64_t v271 = v62;
  uint64_t v264 = sub_100089AE0();
  uint64_t v265 = v45;
  unsigned __int8 v266 = v46;
  uint64_t v267 = v47;
  uint64_t v64 = v264;
  uint64_t v65 = v45;
  int v66 = v46;
  uint64_t v67 = v47;
  swift_release();
  sub_1000430F4(v59, v60, v61 & 1);
  swift_bridgeObjectRelease();
  uint64_t v63 = sub_100089CD0();
  uint64_t v260 = v64;
  uint64_t v261 = v65;
  char v262 = v66 & 1 & v74;
  uint64_t v263 = v67;
  uint64_t v256 = sub_100089AD0();
  uint64_t v257 = v48;
  unsigned __int8 v258 = v49;
  uint64_t v259 = v50;
  uint64_t v68 = v256;
  uint64_t v69 = v48;
  int v70 = v49;
  uint64_t v71 = v50;
  swift_release();
  sub_1000430F4(v64, v65, v66 & 1);
  swift_bridgeObjectRelease();
  uint64_t v72 = v253;
  v253[0] = v68;
  v253[1] = v69;
  char v254 = v70 & 1 & v74;
  uint64_t v255 = v71;
  sub_10003ECDC();
  sub_100089860();
  sub_10003ECE8();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v135, v131);
  sub_1000430AC((uint64_t)v72);
  unint64_t v73 = sub_100043B8C();
  sub_1000458D8();
  sub_100089B10();
  sub_1000448D8(v138);
  v252[1] = v136;
  v252[2] = v73;
  uint64_t v75 = swift_getOpaqueTypeConformance2();
  sub_100039F6C(v143, v139, v145);
  unint64_t v77 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
  uint64_t v76 = v140 + 8;
  v77(v143, v139);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 16))(v143, v145, v139);
  sub_100039F6C(v143, v139, (uint64_t)v148);
  v77(v143, v139);
  (*(void (**)(char *, void, void, uint64_t))(v140 + 56))(v148, 0, v74, v139);
  sub_1000642D0(v148, v139, v150);
  sub_100043CB0((uint64_t)v148);
  sub_100043D64(v150, v152);
  v77(v145, v139);
  swift_bridgeObjectRelease();
LABEL_23:
  sub_100043E90(v213, v209);
  uint64_t v56 = v285;
  v285[0] = v209;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v185 + 16))(v188, v190, v184);
  v285[1] = v188;
  uint64_t v283 = v288;
  char v284 = v289;
  v285[2] = &v283;
  sub_100044210(v176, v174);
  v285[3] = v174;
  sub_10004463C(v152, v150);
  v285[4] = v150;
  uint64_t v54 = v282;
  v282[0] = v207;
  v282[1] = v184;
  v282[2] = &type metadata for Spacer;
  v282[3] = v170;
  v282[4] = v146;
  uint64_t v55 = v281;
  v281[0] = v107;
  v281[1] = OpaqueTypeConformance2;
  v281[2] = &protocol witness table for Spacer;
  v281[3] = sub_100044768();
  v281[4] = sub_1000447FC();
  sub_10003ED48((uint64_t)v56, 5uLL, (uint64_t)v54, v129);
  sub_100043CB0((uint64_t)v150);
  sub_1000435DC((uint64_t)v174);
  v122(v188, v184);
  sub_100042E34((uint64_t)v209);
  sub_100043CB0((uint64_t)v152);
  sub_1000435DC((uint64_t)v176);
  v122(v190, v184);
  return sub_100042E34((uint64_t)v213);
}

void *sub_10003E6AC(uint64_t *a1, void *a2)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v2 - 8) + 16))(a2, a1);
  }
  else
  {
    uint64_t v22 = *a1;
    swift_retain();
    *a2 = v22;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = type metadata accessor for MessageListHeaderView();
  uint64_t v19 = (char *)a2 + *(int *)(v17 + 20);
  uint64_t v21 = (char *)a1 + *(int *)(v17 + 20);
  *(void *)uint64_t v19 = *(void *)v21;
  uint64_t v18 = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  *((void *)v19 + 1) = v18;
  uint64_t v20 = *((void *)v21 + 2);
  swift_bridgeObjectRetain();
  *((void *)v19 + 2) = v20;
  if (*((void *)v21 + 4) <= 5uLL)
  {
    *(_OWORD *)(v19 + 24) = *(_OWORD *)(v21 + 24);
  }
  else
  {
    *((void *)v19 + 3) = *((void *)v21 + 3);
    uint64_t v16 = *((void *)v21 + 4);
    swift_bridgeObjectRetain();
    *((void *)v19 + 4) = v16;
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = &v19[*(int *)(v3 + 28)];
  __src = &v21[*(int *)(v3 + 28)];
  uint64_t v14 = sub_1000895A0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 48))(__src, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, __src, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v10 = &v19[*(int *)(v5 + 20)];
  uint64_t v11 = &v21[*(int *)(v5 + 20)];
  if (*(void *)v11 < 2uLL)
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
  }
  else
  {
    uint64_t v9 = *(void *)v11;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v10 = v9;
    *((void *)v10 + 1) = *((void *)v11 + 1);
    v10[16] = v11[16];
    v10[17] = v11[17];
  }
  uint64_t v7 = *(int *)(v17 + 24);
  uint64_t v8 = *(uint64_t *)((char *)a1 + v7);
  swift_retain();
  id result = a2;
  *(void *)((char *)a2 + v7) = v8;
  return result;
}

uint64_t sub_10003EA48@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C8A0(*(void *)(v1 + 16), a1);
}

unint64_t sub_10003EA50()
{
  uint64_t v2 = qword_1000A3D18;
  if (!qword_1000A3D18)
  {
    sub_1000096C0(&qword_1000A3D10);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3D18);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10003EAD4(uint64_t a1)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EC0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(type metadata accessor for MessageListHeaderView() + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  if (*(void *)(v6 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  return a1;
}

uint64_t sub_10003ECDC()
{
  return 0;
}

uint64_t sub_10003ECE8()
{
  return swift_release();
}

uint64_t *sub_10003ED48@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v25 = a1;
  unint64_t v26 = a2;
  uint64_t v27 = a3;
  unint64_t v28 = a3 & 0xFFFFFFFFFFFFFFFELL;
  if (a2 == 1)
  {
    uint64_t TupleTypeMetadata = *(void *)(v27 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t v19 = &v9;
    unint64_t v20 = (8 * v26 + 15) & 0xFFFFFFFFFFFFFFF0;
    __chkstk_darwin(&v9);
    uint64_t v21 = (char *)&v9 - v20;
    for (unint64_t i = v4; ; unint64_t i = v5 + 1)
    {
      unint64_t v18 = i;
      if (i >= v26) {
        break;
      }
      unint64_t v5 = v18;
      *(void *)&v21[8 * v18] = *(void *)((v27 & 0xFFFFFFFFFFFFFFFELL) + 8 * v18);
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  uint64_t v14 = TupleTypeMetadata;
  uint64_t v6 = *(void *)(*(void *)(TupleTypeMetadata - 8) + 64);
  uint64_t v15 = &v9;
  unint64_t v16 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(&v9);
  uint64_t v17 = (char *)&v9 - v16;
  if (v7)
  {
    for (uint64_t j = 0; ; uint64_t j = v9)
    {
      uint64_t v11 = j;
      uint64_t v12 = *(void *)((v27 & 0xFFFFFFFFFFFFFFFELL) + 8 * j);
      int v10 = v26 == 1 ? 0 : *(_DWORD *)(v14 + 24 + 16 * v11 + 8);
      (*(void (**)(char *, void))(*(void *)(v12 - 8) + 16))(&v17[v10], *(void *)(v25 + 8 * v11));
      uint64_t v9 = v11 + 1;
      if (v11 + 1 == v26) {
        break;
      }
    }
  }
  sub_100089DE0();
  return v15;
}

uint64_t sub_10003EFB8()
{
  return sub_100089730();
}

uint64_t sub_10003EFEC@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_100042584(a1, a3);
  uint64_t v5 = type metadata accessor for MessageListHeaderView();
  sub_10001FFFC(a2, (uint64_t)&a3[*(int *)(v5 + 20)]);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t result = sub_100089AA0();
  *(void *)&a3[v6] = result;
  return result;
}

uint64_t sub_10003F05C()
{
  return sub_100089B20();
}

uint64_t sub_10003F074()
{
  return sub_100089B30();
}

uint64_t sub_10003F08C()
{
  return sub_100089B90();
}

uint64_t sub_10003F0A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100039380(a1);
}

uint64_t sub_10003F0C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v67 = 0;
  int v66 = 0;
  uint64_t v1 = sub_100009334(&qword_1000A3B40);
  unint64_t v23 = (*(void *)(*(void *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  uint64_t v24 = (uint64_t)&v14 - v23;
  uint64_t v37 = 0;
  uint64_t v44 = sub_100089EF0();
  uint64_t v42 = *(void *)(v44 - 8);
  uint64_t v43 = v44 - 8;
  unint64_t v25 = (*(void *)(v42 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v37);
  uint64_t v47 = (char *)&v14 - v25;
  uint64_t v54 = sub_100089EE0();
  uint64_t v51 = *(void *)(v54 - 8);
  uint64_t v52 = v54 - 8;
  unint64_t v26 = (*(void *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v54);
  uint64_t v53 = (char *)&v14 - v26;
  unint64_t v27 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v37);
  id v40 = (char *)&v14 - v27;
  unint64_t v28 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v37);
  uint64_t v39 = (uint64_t)&v14 - v28;
  unint64_t v29 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v37);
  uint64_t v41 = (uint64_t)&v14 - v29;
  uint64_t v48 = type metadata accessor for MessageListHeaderView();
  unint64_t v30 = (*(void *)(*(void *)(v48 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v48);
  uint64_t v2 = (char *)&v14 - v30;
  uint64_t v57 = (char *)&v14 - v30;
  uint64_t v59 = sub_100009334(&qword_1000A3D20);
  unint64_t v31 = (*(void *)(*(void *)(v59 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v59);
  char v32 = (Builtin::Word *)((char *)&v14 - v31);
  unint64_t v33 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v14 - v31);
  uint64_t v34 = (Builtin::Word *)((char *)&v14 - v33);
  unint64_t v35 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v14 - v33);
  int v61 = (uint64_t *)((char *)&v14 - v35);
  unint64_t v36 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v14 - v35);
  uint64_t v58 = (uint64_t *)((char *)&v14 - v36);
  uint64_t v67 = (char *)&v14 - v36;
  uint64_t v6 = sub_100019F60();
  sub_10000E524(v6, v39);
  uint64_t v38 = type metadata accessor for Message();
  uint64_t v7 = sub_10008A6C0();
  sub_1000801D8(v39, v7, 8, 0, v41);
  sub_10003EFB8();
  sub_10003EFEC(v40, v41, v2);
  uint64_t v45 = *(void (**)(char *, void, uint64_t))(v42 + 104);
  uint64_t v46 = v42 + 104;
  v45(v47, enum case for WidgetFamily.systemSmall(_:), v44);
  sub_100089ED0();
  unint64_t v49 = sub_10003FBF8();
  unint64_t v50 = sub_10003FC7C();
  sub_100089BB0();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v51 + 8);
  uint64_t v56 = v51 + 8;
  v55(v53, v54);
  sub_10003EAD4((uint64_t)v57);
  unint64_t v60 = sub_10003FD00();
  sub_100039F6C((uint64_t)v61, v59, (uint64_t)v58);
  sub_10003FE28((uint64_t)v61);
  int v66 = v61;
  uint64_t v8 = v57;
  Builtin::Word v14 = 5;
  unsigned int v15 = 1;
  uint64_t v16 = sub_10008A0B0("INBOX", 5uLL, 1);
  uint64_t v17 = v9;
  uint64_t v18 = sub_10008A0B0("Inbox", v14, v15 & 1);
  unint64_t v19 = v10;
  uint64_t v20 = 0;
  uint64_t v11 = sub_1000895A0();
  (*(void (**)(uint64_t, void))(*(void *)(v11 - 8) + 56))(v24, v15);
  sub_100019C64(v16, v17, v20, v18, v19, v24, v39);
  uint64_t v12 = sub_10008A6C0();
  sub_1000801D8(v39, v12, 8, 256, v41);
  sub_10003EFB8();
  sub_10003EFEC(v40, v41, v8);
  v45(v47, enum case for WidgetFamily.systemSmall(_:), v44);
  sub_100089ED0();
  sub_100089BB0();
  v55(v53, v54);
  sub_10003EAD4((uint64_t)v57);
  sub_100039F6C((uint64_t)v34, v59, (uint64_t)v61);
  sub_10003FE28((uint64_t)v34);
  sub_10004006C(v58, v34);
  uint64_t v21 = v65;
  v65[0] = v34;
  sub_10004006C(v61, v32);
  v65[1] = v32;
  v64[0] = v59;
  v64[1] = v59;
  unint64_t v62 = v60;
  unint64_t v63 = v60;
  sub_10003ED48((uint64_t)v21, 2uLL, (uint64_t)v64, v22);
  sub_10003FE28((uint64_t)v32);
  sub_10003FE28((uint64_t)v34);
  sub_10003FE28((uint64_t)v61);
  return sub_10003FE28((uint64_t)v58);
}

uint64_t sub_10003F8E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10003F0C0(a1);
}

uint64_t sub_10003F8F8()
{
  return sub_100089810();
}

uint64_t sub_10003F910()
{
  return sub_100089830();
}

uint64_t sub_10003F948()
{
  return sub_100089820();
}

uint64_t sub_10003F980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v9 = a2;
  uint64_t v5 = a1;
  v3[1] = 0;
  uint64_t v11 = sub_100089EC0();
  uint64_t v7 = *(void *)(v11 - 8);
  uint64_t v8 = v11 - 8;
  unint64_t v4 = (*(void *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  unint64_t v10 = (char *)v3 - v4;
  uint64_t v14 = sub_100089910();
  uint64_t v12 = *(void *)(v14 - 8);
  uint64_t v13 = v14 - 8;
  unint64_t v6 = (*(void *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v14);
  unsigned int v15 = (char *)v3 - v6;
  (*(void (**)(char *))(v12 + 16))((char *)v3 - v6);
  sub_1000898F0();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v9, v10, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v14);
}

uint64_t sub_10003FB10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003F980(a1, a2);
}

uint64_t sub_10003FB28(uint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v1 = sub_100089EC0();
  uint64_t v5 = *(void *)(v1 - 8);
  unint64_t v4 = (*(void *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  unint64_t v6 = (char *)&v3 - v4;
  (*(void (**)(char *))(v5 + 16))((char *)&v3 - v4);
  return sub_100089900();
}

uint64_t sub_10003FBE0(uint64_t a1)
{
  return sub_10003FB28(a1);
}

unint64_t sub_10003FBF8()
{
  uint64_t v2 = qword_1000A3D28;
  if (!qword_1000A3D28)
  {
    type metadata accessor for MessageListHeaderView();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3D28);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10003FC7C()
{
  uint64_t v2 = qword_1000A3D30;
  if (!qword_1000A3D30)
  {
    sub_100089EE0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3D30);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10003FD00()
{
  uint64_t v2 = qword_1000A3D38;
  if (!qword_1000A3D38)
  {
    sub_1000096C0(&qword_1000A3D20);
    sub_10003FBF8();
    sub_10003FDA4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3D38);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10003FDA4()
{
  uint64_t v2 = qword_1000A3D40;
  if (!qword_1000A3D40)
  {
    sub_1000096C0(&qword_1000A3D48);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3D40);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10003FE28(uint64_t a1)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EC0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(type metadata accessor for MessageListHeaderView() + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = v7 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v5 = sub_1000895A0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v6 + 48))(v4, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(v7 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3D20) + 36);
  if (*(void *)(v3 + 24)) {
    sub_10000B234(v3);
  }
  return a1;
}

void *sub_10004006C(uint64_t *a1, void *a2)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v2 - 8) + 16))(a2, a1);
  }
  else
  {
    uint64_t v26 = *a1;
    swift_retain();
    *a2 = v26;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = type metadata accessor for MessageListHeaderView();
  unint64_t v23 = (char *)a2 + *(int *)(v21 + 20);
  unint64_t v25 = (char *)a1 + *(int *)(v21 + 20);
  *(void *)unint64_t v23 = *(void *)v25;
  uint64_t v22 = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  *((void *)v23 + 1) = v22;
  uint64_t v24 = *((void *)v25 + 2);
  swift_bridgeObjectRetain();
  *((void *)v23 + 2) = v24;
  if (*((void *)v25 + 4) <= 5uLL)
  {
    *(_OWORD *)(v23 + 24) = *(_OWORD *)(v25 + 24);
  }
  else
  {
    *((void *)v23 + 3) = *((void *)v25 + 3);
    uint64_t v20 = *((void *)v25 + 4);
    swift_bridgeObjectRetain();
    *((void *)v23 + 4) = v20;
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = &v23[*(int *)(v3 + 28)];
  __src = &v25[*(int *)(v3 + 28)];
  uint64_t v18 = sub_1000895A0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 48))(__src, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, __src, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v14 = &v23[*(int *)(v5 + 20)];
  unsigned int v15 = &v25[*(int *)(v5 + 20)];
  if (*(void *)v15 < 2uLL)
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
  }
  else
  {
    uint64_t v13 = *(void *)v15;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v14 = v13;
    *((void *)v14 + 1) = *((void *)v15 + 1);
    v14[16] = v15[16];
    v14[17] = v15[17];
  }
  uint64_t v9 = *(int *)(v21 + 24);
  uint64_t v10 = *(uint64_t *)((char *)a1 + v9);
  swift_retain();
  *(void *)((char *)a2 + v9) = v10;
  uint64_t v6 = sub_100009334(&qword_1000A3D20);
  uint64_t v11 = (void *)((char *)a2 + *(int *)(v6 + 36));
  uint64_t v12 = (uint64_t *)((char *)a1 + *(int *)(v6 + 36));
  if (v12[3])
  {
    uint64_t v7 = v12[3];
    v11[3] = v7;
    v11[4] = v12[4];
    (**(void (***)(void))(v7 - 8))();
  }
  else
  {
    memcpy(v11, v12, 0x28uLL);
  }
  return a2;
}

unint64_t sub_1000404AC()
{
  uint64_t v2 = qword_1000A3D50;
  if (!qword_1000A3D50)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3D50);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10004052C(void *a1, uint64_t *a2, uint64_t a3)
{
  int v29 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v29 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    swift_retain();
    *a1 = v24;
    return *a1 + ((v29 + 16) & ~(unint64_t)v29);
  }
  else
  {
    sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EC0();
      (*(void (**)(void *, uint64_t *))(*(void *)(v3 - 8) + 16))(a1, a2);
    }
    else
    {
      uint64_t v23 = *a2;
      swift_retain();
      *a1 = v23;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v20 = (char *)a1 + v4;
    uint64_t v22 = (char *)a2 + v4;
    *(void *)((char *)a1 + v4) = *(uint64_t *)((char *)a2 + v4);
    uint64_t v19 = *(uint64_t *)((char *)a2 + v4 + 8);
    swift_bridgeObjectRetain();
    *((void *)v20 + 1) = v19;
    uint64_t v21 = *((void *)v22 + 2);
    swift_bridgeObjectRetain();
    *((void *)v20 + 2) = v21;
    if (*((void *)v22 + 4) <= 5uLL)
    {
      *(_OWORD *)(v20 + 24) = *(_OWORD *)(v22 + 24);
    }
    else
    {
      *((void *)v20 + 3) = *((void *)v22 + 3);
      uint64_t v18 = *((void *)v22 + 4);
      swift_bridgeObjectRetain();
      *((void *)v20 + 4) = v18;
    }
    uint64_t v5 = type metadata accessor for Mailbox();
    __dst = &v20[*(int *)(v5 + 28)];
    __src = &v22[*(int *)(v5 + 28)];
    uint64_t v16 = sub_1000895A0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v17 + 48))(__src, 1))
    {
      uint64_t v6 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, __src, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v7 = type metadata accessor for Snapshot();
    uint64_t v12 = &v20[*(int *)(v7 + 20)];
    uint64_t v13 = &v22[*(int *)(v7 + 20)];
    if (*(void *)v13 < 2uLL)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_WORD *)v12 + 8) = *((_WORD *)v13 + 8);
    }
    else
    {
      uint64_t v11 = *(void *)v13;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v12 = v11;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      v12[16] = v13[16];
      v12[17] = v13[17];
    }
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    swift_retain();
    *(void *)((char *)a1 + v9) = v10;
    return (unint64_t)a1;
  }
}

uint64_t sub_10004094C(uint64_t a1, uint64_t a2)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = v7 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v5 = sub_1000895A0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v6 + 48))(v4, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(v7 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

void *sub_100040B4C(void *a1, uint64_t *a2, uint64_t a3)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_100089EC0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v3 - 8) + 16))(a1, a2);
  }
  else
  {
    uint64_t v23 = *a2;
    swift_retain();
    *a1 = v23;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v4;
  uint64_t v22 = (char *)a2 + v4;
  *(void *)((char *)a1 + v4) = *(uint64_t *)((char *)a2 + v4);
  uint64_t v19 = *(uint64_t *)((char *)a2 + v4 + 8);
  swift_bridgeObjectRetain();
  *((void *)v20 + 1) = v19;
  uint64_t v21 = *((void *)v22 + 2);
  swift_bridgeObjectRetain();
  *((void *)v20 + 2) = v21;
  if (*((void *)v22 + 4) <= 5uLL)
  {
    *(_OWORD *)(v20 + 24) = *(_OWORD *)(v22 + 24);
  }
  else
  {
    *((void *)v20 + 3) = *((void *)v22 + 3);
    uint64_t v18 = *((void *)v22 + 4);
    swift_bridgeObjectRetain();
    *((void *)v20 + 4) = v18;
  }
  uint64_t v5 = type metadata accessor for Mailbox();
  __dst = &v20[*(int *)(v5 + 28)];
  __src = &v22[*(int *)(v5 + 28)];
  uint64_t v16 = sub_1000895A0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 48))(__src, 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, __src, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v7 = type metadata accessor for Snapshot();
  uint64_t v12 = &v20[*(int *)(v7 + 20)];
  uint64_t v13 = &v22[*(int *)(v7 + 20)];
  if (*(void *)v13 < 2uLL)
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_WORD *)v12 + 8) = *((_WORD *)v13 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)v13;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v12 = v11;
    *((void *)v12 + 1) = *((void *)v13 + 1);
    v12[16] = v13[16];
    v12[17] = v13[17];
  }
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
  swift_retain();
  uint64_t result = a1;
  *(void *)((char *)a1 + v9) = v10;
  return result;
}

uint64_t *sub_100040EE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100038BD4((uint64_t)a1);
    sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EC0();
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v3 - 8) + 16))(a1, a2);
    }
    else
    {
      uint64_t v27 = *a2;
      swift_retain();
      *a1 = v27;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v26 = (char *)a1 + v4;
  uint64_t v24 = (char *)a2 + v4;
  *(uint64_t *)((char *)a1 + v4) = *(uint64_t *)((char *)a2 + v4);
  uint64_t v23 = *(uint64_t *)((char *)a2 + v4 + 8);
  swift_bridgeObjectRetain();
  *((void *)v26 + 1) = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v24 + 2);
  swift_bridgeObjectRetain();
  *((void *)v26 + 2) = v25;
  swift_bridgeObjectRelease();
  if (*((void *)v26 + 4) <= 5uLL)
  {
    if (*((void *)v24 + 4) <= 5uLL)
    {
      *(_OWORD *)(v26 + 24) = *(_OWORD *)(v24 + 24);
    }
    else
    {
      *((void *)v26 + 3) = *((void *)v24 + 3);
      uint64_t v21 = *((void *)v24 + 4);
      swift_bridgeObjectRetain();
      *((void *)v26 + 4) = v21;
    }
  }
  else if (*((void *)v24 + 4) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(v26 + 24) = *(_OWORD *)(v24 + 24);
  }
  else
  {
    *((void *)v26 + 3) = *((void *)v24 + 3);
    uint64_t v22 = *((void *)v24 + 4);
    swift_bridgeObjectRetain();
    *((void *)v26 + 4) = v22;
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = type metadata accessor for Mailbox();
  __dst = &v26[*(int *)(v5 + 28)];
  __src = &v24[*(int *)(v5 + 28)];
  uint64_t v18 = sub_1000895A0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (((unsigned int (*)(char *, uint64_t))v20)(__dst, 1))
  {
    if (v20(__src, 1, v18))
    {
      uint64_t v7 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, __src, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
  }
  else if (v20(__src, 1, v18))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(__dst, v18);
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 24))(__dst, __src, v18);
  }
  uint64_t v8 = type metadata accessor for Snapshot();
  uint64_t v14 = &v26[*(int *)(v8 + 20)];
  unsigned int v15 = &v24[*(int *)(v8 + 20)];
  if (*(void *)v14 < 2uLL)
  {
    if (*(void *)v15 < 2uLL)
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    }
    else
    {
      uint64_t v12 = *(void *)v15;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v14 = v12;
      *((void *)v14 + 1) = *((void *)v15 + 1);
      v14[16] = v15[16];
      v14[17] = v15[17];
    }
  }
  else if (*(void *)v15 < 2uLL)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
  }
  else
  {
    uint64_t v13 = *(void *)v15;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *((void *)v14 + 1) = *((void *)v15 + 1);
    v14[16] = v15[16];
    v14[17] = v15[17] & 1;
  }
  uint64_t v10 = (uint64_t *)((char *)a1 + *(int *)(a3 + 24));
  uint64_t v11 = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  *uint64_t v10 = v11;
  swift_release();
  return a1;
}

char *sub_100041534(char *a1, char *a2, uint64_t a3)
{
  uint64_t v20 = sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_100089EC0();
    (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v4 = *(int *)(a3 + 20);
  unsigned int v15 = &a1[v4];
  uint64_t v16 = &a2[v4];
  *(_OWORD *)unsigned int v15 = *(_OWORD *)&a2[v4];
  *((void *)v15 + 2) = *(void *)&a2[v4 + 16];
  *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v4 + 24];
  uint64_t v5 = type metadata accessor for Mailbox();
  __dst = &v15[*(int *)(v5 + 28)];
  __src = &v16[*(int *)(v5 + 28)];
  uint64_t v13 = sub_1000895A0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 48))(__src, 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(__dst, __src, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v7 = type metadata accessor for Snapshot();
  uint64_t v9 = &v15[*(int *)(v7 + 20)];
  uint64_t v10 = &v16[*(int *)(v7 + 20)];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_WORD *)v9 + 8) = *((_WORD *)v10 + 8);
  uint64_t result = a1;
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return result;
}

char *sub_100041850(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100038BD4((uint64_t)a1);
    uint64_t v19 = sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EC0();
      (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v18 = &a1[v4];
  uint64_t v17 = &a2[v4];
  *(void *)uint64_t v18 = *(void *)&a2[v4];
  *((void *)v18 + 1) = *(void *)&a2[v4 + 8];
  swift_bridgeObjectRelease();
  *((void *)v18 + 2) = *((void *)v17 + 2);
  swift_bridgeObjectRelease();
  if (*((void *)v18 + 4) <= 5uLL)
  {
    *(_OWORD *)(v18 + 24) = *(_OWORD *)(v17 + 24);
  }
  else if (*((void *)v17 + 4) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(v18 + 24) = *(_OWORD *)(v17 + 24);
  }
  else
  {
    *((void *)v18 + 3) = *((void *)v17 + 3);
    *((void *)v18 + 4) = *((void *)v17 + 4);
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = type metadata accessor for Mailbox();
  __dst = &v18[*(int *)(v5 + 28)];
  __src = &v17[*(int *)(v5 + 28)];
  uint64_t v14 = sub_1000895A0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (((unsigned int (*)(char *, uint64_t))v16)(__dst, 1))
  {
    if (v16(__src, 1, v14))
    {
      uint64_t v7 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, __src, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
  }
  else if (v16(__src, 1, v14))
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(__dst, v14);
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 40))(__dst, __src, v14);
  }
  uint64_t v8 = type metadata accessor for Snapshot();
  uint64_t v10 = &v18[*(int *)(v8 + 20)];
  uint64_t v11 = &v17[*(int *)(v8 + 20)];
  if (*(void *)v10 < 2uLL)
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
  }
  else if (*(void *)v11 < 2uLL)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
  }
  else
  {
    *(void *)uint64_t v10 = *(void *)v11;
    swift_bridgeObjectRelease();
    *((void *)v10 + 1) = *((void *)v11 + 1);
    v10[16] = v11[16];
    v10[17] = v11[17] & 1;
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_100041E08()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_100041E30(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v10 = sub_100009334(&qword_1000A3C50);
  if (a2 == *(_DWORD *)(*(void *)(v10 - 8) + 84))
  {
    return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 48))(a1, a2, v10);
  }
  else
  {
    uint64_t v5 = type metadata accessor for Snapshot();
    if (a2 == *(_DWORD *)(*(void *)(v5 - 8) + 84))
    {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v5);
    }
    else if (a2 == 0x7FFFFFFF)
    {
      int v4 = -1;
      if (*(void *)(a1 + *(int *)(a3 + 24)) < (unint64_t)&_mh_execute_header) {
        int v4 = *(void *)(a1 + *(int *)(a3 + 24));
      }
      return (v4 + 1);
    }
    else
    {
      __break(1u);
    }
  }
  return v6;
}

uint64_t sub_100041FF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_10004201C(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v9 = sub_100009334(&qword_1000A3C50);
  if (a3 == *(_DWORD *)(*(void *)(v9 - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(v9 - 8) + 56))(a1, a2, a2, v9);
  }
  uint64_t result = type metadata accessor for Snapshot();
  if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  }
  if (a3 == 0x7FFFFFFF) {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2 - 1;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000421B4()
{
  uint64_t v3 = sub_1000422FC();
  if (v0 <= 0x3F)
  {
    uint64_t v3 = type metadata accessor for Snapshot();
    if (v1 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1000422FC()
{
  uint64_t v4 = qword_1000A3DC0;
  if (!qword_1000A3DC0)
  {
    sub_100089EC0();
    unint64_t v3 = sub_100089720();
    uint64_t v4 = v3;
    if (!v0)
    {
      unint64_t v1 = v3;
      atomic_store(v3, (unint64_t *)&qword_1000A3DC0);
      return v1;
    }
  }
  return v4;
}

void *type metadata accessor for MessageListHeader_Previews()
{
  return &unk_10009BDC8;
}

unint64_t sub_1000423B8()
{
  return sub_10003C2B4();
}

unint64_t sub_1000423D0()
{
  return sub_100039FD0();
}

unint64_t sub_1000423E8()
{
  return sub_100042400();
}

unint64_t sub_100042400()
{
  uint64_t v2 = qword_1000A3DF8;
  if (!qword_1000A3DF8)
  {
    sub_1000096C0(&qword_1000A3E00);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3DF8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100042484()
{
  return sub_10004249C();
}

unint64_t sub_10004249C()
{
  uint64_t v2 = qword_1000A3E08;
  if (!qword_1000A3E08)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E08);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004251C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100042550()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100042584(const void *a1, void *a2)
{
  uint64_t v6 = sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(void *, const void *))(*(void *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(void *)(*(void *)(v6 - 8) + 64));
  }
  return a2;
}

unint64_t sub_100042654()
{
  uint64_t v2 = qword_1000A3E18;
  if (!qword_1000A3E18)
  {
    sub_1000096C0(&qword_1000A3C88);
    sub_1000426F4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E18);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1000426F4()
{
  uint64_t v2 = qword_1000A3E20;
  if (!qword_1000A3E20)
  {
    sub_1000096C0(&qword_1000A3C90);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E20);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100042778(uint64_t a1)
{
  swift_release();
  uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
  swift_release();
  uint64_t v4 = *(int *)(sub_100009334(&qword_1000A3C90) + 28);
  uint64_t v1 = sub_100089D10();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v4);
  return a1;
}

unint64_t sub_100042820()
{
  uint64_t v2 = qword_1000A3E28;
  if (!qword_1000A3E28)
  {
    sub_1000096C0(&qword_1000A3C98);
    sub_100042654();
    sub_1000428C4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E28);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1000428C4()
{
  uint64_t v2 = qword_1000A3E30;
  if (!qword_1000A3E30)
  {
    sub_1000096C0(&qword_1000A3E38);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E30);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100042948(uint64_t a1)
{
  swift_release();
  uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
  swift_release();
  uint64_t v4 = *(int *)(sub_100009334(&qword_1000A3C90) + 28);
  uint64_t v1 = sub_100089D10();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v4);
  sub_100009334(&qword_1000A3C98);
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_100042A24()
{
  uint64_t v2 = qword_1000A3E40;
  if (!qword_1000A3E40)
  {
    sub_1000096C0(&qword_1000A3CA0);
    sub_100042820();
    sub_100042AC8();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E40);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100042AC8()
{
  uint64_t v2 = qword_1000A3E48;
  if (!qword_1000A3E48)
  {
    sub_1000096C0(&qword_1000A3E50);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E48);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100042B4C(uint64_t a1)
{
  uint64_t v3 = sub_100089990();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return a1;
}

uint64_t sub_100042BFC(uint64_t a1)
{
  swift_release();
  uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
  swift_release();
  uint64_t v4 = *(int *)(sub_100009334(&qword_1000A3C90) + 28);
  uint64_t v1 = sub_100089D10();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v4);
  sub_100009334(&qword_1000A3C98);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3CA0);
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_100042D0C()
{
  uint64_t v2 = qword_1000A3E58;
  if (!qword_1000A3E58)
  {
    sub_1000096C0(&qword_1000A3CA8);
    sub_100042A24();
    sub_100042DB0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E58);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100042DB0()
{
  uint64_t v2 = qword_1000A3E60;
  if (!qword_1000A3E60)
  {
    sub_1000096C0(&qword_1000A3CB0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E60);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100042E34(uint64_t a1)
{
  swift_release();
  uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
  swift_release();
  uint64_t v4 = *(int *)(sub_100009334(&qword_1000A3C90) + 28);
  uint64_t v1 = sub_100089D10();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v4);
  sub_100009334(&qword_1000A3C98);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3CA0);
  swift_release();
  swift_release();
  uint64_t v6 = *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
  swift_release();
  uint64_t v7 = *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
  uint64_t v8 = sub_100089990();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v9 + 48))(a1 + v6 + v7, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1 + v6 + v7, v8);
  }
  return a1;
}

unint64_t sub_100043030()
{
  uint64_t v2 = qword_1000A3E68;
  if (!qword_1000A3E68)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E68);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000430AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000430F4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_100043138()
{
  uint64_t v2 = qword_1000A3E78;
  if (!qword_1000A3E78)
  {
    sub_1000096C0(&qword_1000A3E70);
    sub_1000431D8();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E78);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1000431D8()
{
  uint64_t v2 = qword_1000A3E80;
  if (!qword_1000A3E80)
  {
    sub_1000096C0(&qword_1000A3E88);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E80);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004325C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000432B0()
{
  uint64_t v2 = qword_1000A3E98;
  if (!qword_1000A3E98)
  {
    sub_1000096C0(&qword_1000A3E90);
    sub_100043138();
    sub_1000428C4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3E98);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100043354(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000433C0(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100043410()
{
  uint64_t v2 = qword_1000A3EA0;
  if (!qword_1000A3EA0)
  {
    sub_1000096C0(&qword_1000A3CC8);
    sub_1000434B4();
    sub_100042DB0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3EA0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1000434B4()
{
  uint64_t v2 = qword_1000A3EA8;
  if (!qword_1000A3EA8)
  {
    sub_1000096C0(&qword_1000A3CD0);
    sub_100042A24();
    sub_100043558();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3EA8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100043558()
{
  uint64_t v2 = qword_1000A3EB0;
  if (!qword_1000A3EB0)
  {
    sub_1000096C0(&qword_1000A3EB8);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3EB0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000435DC(uint64_t a1)
{
  uint64_t v10 = sub_100009334(&qword_1000A3CC8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(a1, 1))
  {
    swift_release();
    uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v4 = v3 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v1 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v4);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CD0);
    swift_release();
    uint64_t v5 = a1 + *(int *)(v10 + 36);
    swift_release();
    uint64_t v6 = v5 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v7 = sub_100089990();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return a1;
}

void *sub_100043824(void *a1, void *a2)
{
  uint64_t v24 = sub_100009334(&qword_1000A3CC8);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v25 + 48))(a1, 1))
  {
    uint64_t v10 = sub_100009334(&qword_1000A3CE8);
    memcpy(a2, a1, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *a2 = *a1;
    uint64_t v2 = sub_100009334(&qword_1000A3C88);
    uint64_t v12 = (void *)((char *)a2 + *(int *)(v2 + 36));
    uint64_t v13 = (void *)((char *)a1 + *(int *)(v2 + 36));
    *uint64_t v12 = *v13;
    uint64_t v3 = sub_100009334(&qword_1000A3C90);
    uint64_t v15 = (char *)v12 + *(int *)(v3 + 28);
    uint64_t v14 = (char *)v13 + *(int *)(v3 + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(v15, v14);
    uint64_t v5 = sub_100009334(&qword_1000A3C98);
    *(_OWORD *)((char *)a2 + *(int *)(v5 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v5 + 36));
    uint64_t v6 = sub_100009334(&qword_1000A3CA0);
    *(_OWORD *)((char *)a2 + *(int *)(v6 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v6 + 36));
    uint64_t v7 = sub_100009334(&qword_1000A3CD0);
    *(void *)((char *)a2 + *(int *)(v7 + 36)) = *(void *)((char *)a1 + *(int *)(v7 + 36));
    uint64_t v16 = (void *)((char *)a2 + *(int *)(v24 + 36));
    uint64_t v17 = (void *)((char *)a1 + *(int *)(v24 + 36));
    *uint64_t v16 = *v17;
    uint64_t v8 = sub_100009334(&qword_1000A3CB0);
    __dst = (char *)v16 + *(int *)(v8 + 28);
    __src = (char *)v17 + *(int *)(v8 + 28);
    uint64_t v20 = sub_100089990();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v21 + 48))(__src, 1))
    {
      uint64_t v9 = sub_100009334(&qword_1000A3CE0);
      memcpy(__dst, __src, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, __src, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(a2, 0, 1, v24);
  }
  return a2;
}

unint64_t sub_100043B8C()
{
  uint64_t v2 = qword_1000A3EC0;
  if (!qword_1000A3EC0)
  {
    sub_1000096C0(&qword_1000A3E10);
    sub_100043C2C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3EC0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100043C2C()
{
  uint64_t v2 = qword_1000A3EC8;
  if (!qword_1000A3EC8)
  {
    sub_1000096C0(&qword_1000A3ED0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3EC8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100043CB0(uint64_t a1)
{
  uint64_t v3 = sub_100009334(&qword_1000A3CD8);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return a1;
}

void *sub_100043D64(const void *a1, void *a2)
{
  uint64_t v6 = sub_100009334(&qword_1000A3CD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    uint64_t v2 = sub_100009334(&qword_1000A3CF0);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

char *sub_100043E90(char *a1, char *a2)
{
  uint64_t v5 = *(void *)a1;
  swift_retain();
  *(void *)a2 = v5;
  uint64_t v6 = *(int *)(sub_100009334(&qword_1000A3C88) + 36);
  uint64_t v7 = *(void *)&a1[v6];
  swift_retain();
  *(void *)&a2[v6] = v7;
  uint64_t v8 = *(int *)(sub_100009334(&qword_1000A3C90) + 28);
  uint64_t v2 = sub_100089D10();
  (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 16))(&a2[v6 + v8], &a1[v6 + v8]);
  uint64_t v9 = *(int *)(sub_100009334(&qword_1000A3C98) + 36);
  uint64_t v10 = *(void *)&a1[v9];
  swift_retain();
  *(void *)&a2[v9] = v10;
  uint64_t v11 = *(void *)&a1[v9 + 8];
  swift_retain();
  *(void *)&a2[v9 + 8] = v11;
  uint64_t v12 = *(int *)(sub_100009334(&qword_1000A3CA0) + 36);
  uint64_t v13 = *(void *)&a1[v12];
  swift_retain();
  *(void *)&a2[v12] = v13;
  uint64_t v14 = *(void *)&a1[v12 + 8];
  swift_retain();
  *(void *)&a2[v12 + 8] = v14;
  uint64_t v16 = *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
  uint64_t v18 = *(void *)&a1[v16];
  swift_retain();
  *(void *)&a2[v16] = v18;
  uint64_t v19 = *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
  uint64_t v20 = sub_100089990();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v21 + 48))(&a1[v16 + v19], 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3CE0);
    memcpy(&a2[v16 + v19], &a1[v16 + v19], *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void))(v21 + 16))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(&a2[v16 + v19], 0, 1, v20);
  }
  return a2;
}

void *sub_100044210(uint64_t *a1, void *a2)
{
  uint64_t v36 = sub_100009334(&qword_1000A3CC8);
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v37 + 48))(a1, 1))
  {
    uint64_t v9 = sub_100009334(&qword_1000A3CE8);
    memcpy(a2, a1, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v11 = *a1;
    swift_retain();
    *a2 = v11;
    uint64_t v2 = sub_100009334(&qword_1000A3C88);
    uint64_t v13 = (void *)((char *)a2 + *(int *)(v2 + 36));
    uint64_t v14 = (uint64_t *)((char *)a1 + *(int *)(v2 + 36));
    uint64_t v12 = *v14;
    swift_retain();
    *uint64_t v13 = v12;
    uint64_t v3 = sub_100009334(&qword_1000A3C90);
    uint64_t v16 = (char *)v13 + *(int *)(v3 + 28);
    uint64_t v15 = (char *)v14 + *(int *)(v3 + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v16, v15);
    uint64_t v5 = sub_100009334(&qword_1000A3C98);
    uint64_t v19 = (void *)((char *)a2 + *(int *)(v5 + 36));
    uint64_t v18 = (uint64_t *)((char *)a1 + *(int *)(v5 + 36));
    uint64_t v17 = *v18;
    swift_retain();
    void *v19 = v17;
    uint64_t v20 = v18[1];
    swift_retain();
    v19[1] = v20;
    uint64_t v6 = sub_100009334(&qword_1000A3CA0);
    uint64_t v23 = (void *)((char *)a2 + *(int *)(v6 + 36));
    uint64_t v22 = (uint64_t *)((char *)a1 + *(int *)(v6 + 36));
    uint64_t v21 = *v22;
    swift_retain();
    void *v23 = v21;
    uint64_t v24 = v22[1];
    swift_retain();
    v23[1] = v24;
    uint64_t v25 = *(int *)(sub_100009334(&qword_1000A3CD0) + 36);
    uint64_t v26 = *(uint64_t *)((char *)a1 + v25);
    swift_retain();
    *(void *)((char *)a2 + v25) = v26;
    unint64_t v28 = (void *)((char *)a2 + *(int *)(v36 + 36));
    int v29 = (uint64_t *)((char *)a1 + *(int *)(v36 + 36));
    uint64_t v27 = *v29;
    swift_retain();
    *unint64_t v28 = v27;
    uint64_t v7 = sub_100009334(&qword_1000A3CB0);
    unint64_t v30 = (char *)v28 + *(int *)(v7 + 28);
    unint64_t v31 = (char *)v29 + *(int *)(v7 + 28);
    uint64_t v32 = sub_100089990();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v33 + 48))(v31, 1))
    {
      uint64_t v8 = sub_100009334(&qword_1000A3CE0);
      memcpy(v30, v31, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(a2, 0, 1, v36);
  }
  return a2;
}

void *sub_10004463C(const void *a1, void *a2)
{
  uint64_t v6 = sub_100009334(&qword_1000A3CD8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    uint64_t v2 = sub_100009334(&qword_1000A3CF0);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

unint64_t sub_100044768()
{
  uint64_t v2 = qword_1000A3ED8;
  if (!qword_1000A3ED8)
  {
    sub_1000096C0(&qword_1000A3CE8);
    sub_100043410();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3ED8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1000447FC()
{
  uint64_t v2 = qword_1000A3EE0;
  if (!qword_1000A3EE0)
  {
    sub_1000096C0(&qword_1000A3CF0);
    sub_1000096C0(&qword_1000A3E10);
    sub_100043B8C();
    swift_getOpaqueTypeConformance2();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3EE0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000448D8(uint64_t a1)
{
  sub_1000430F4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16) & 1);
  swift_bridgeObjectRelease();
  uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3E10) + 36);
  swift_release();
  uint64_t v4 = *(int *)(sub_100009334(&qword_1000A3ED0) + 28);
  uint64_t v1 = sub_100089870();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v4);
  return a1;
}

unint64_t sub_10004499C()
{
  uint64_t v2 = qword_1000A3EE8;
  if (!qword_1000A3EE8)
  {
    sub_1000897F0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3EE8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100044A20(uint64_t a1)
{
  swift_release();
  uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
  swift_release();
  uint64_t v4 = *(int *)(sub_100009334(&qword_1000A3C90) + 28);
  uint64_t v1 = sub_100089D10();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v4);
  sub_100009334(&qword_1000A3C98);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3CA0);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3CD0);
  swift_release();
  return a1;
}

uint64_t sub_100044B50(uint64_t a1)
{
  swift_release();
  uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
  swift_release();
  uint64_t v4 = *(int *)(sub_100009334(&qword_1000A3C90) + 28);
  uint64_t v1 = sub_100089D10();
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v4);
  sub_100009334(&qword_1000A3C98);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3CA0);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3CD0);
  swift_release();
  uint64_t v6 = *(int *)(sub_100009334(&qword_1000A3CC8) + 36);
  swift_release();
  uint64_t v7 = *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
  uint64_t v8 = sub_100089990();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v9 + 48))(a1 + v6 + v7, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1 + v6 + v7, v8);
  }
  return a1;
}

char *sub_100044D6C(char *a1, char *a2)
{
  uint64_t v5 = *(void *)a1;
  swift_retain();
  *(void *)a2 = v5;
  uint64_t v6 = *(int *)(sub_100009334(&qword_1000A3C88) + 36);
  uint64_t v7 = *(void *)&a1[v6];
  swift_retain();
  *(void *)&a2[v6] = v7;
  uint64_t v8 = *(int *)(sub_100009334(&qword_1000A3C90) + 28);
  uint64_t v2 = sub_100089D10();
  (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 16))(&a2[v6 + v8], &a1[v6 + v8]);
  uint64_t v9 = *(int *)(sub_100009334(&qword_1000A3C98) + 36);
  uint64_t v10 = *(void *)&a1[v9];
  swift_retain();
  *(void *)&a2[v9] = v10;
  uint64_t v11 = *(void *)&a1[v9 + 8];
  swift_retain();
  *(void *)&a2[v9 + 8] = v11;
  uint64_t v12 = *(int *)(sub_100009334(&qword_1000A3CA0) + 36);
  uint64_t v13 = *(void *)&a1[v12];
  swift_retain();
  *(void *)&a2[v12] = v13;
  uint64_t v14 = *(void *)&a1[v12 + 8];
  swift_retain();
  *(void *)&a2[v12 + 8] = v14;
  uint64_t v15 = *(int *)(sub_100009334(&qword_1000A3CD0) + 36);
  uint64_t v16 = *(void *)&a1[v15];
  swift_retain();
  *(void *)&a2[v15] = v16;
  uint64_t v18 = *(int *)(sub_100009334(&qword_1000A3CC8) + 36);
  uint64_t v20 = *(void *)&a1[v18];
  swift_retain();
  *(void *)&a2[v18] = v20;
  uint64_t v21 = *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
  uint64_t v22 = sub_100089990();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v23 + 48))(&a1[v18 + v21], 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3CE0);
    memcpy(&a2[v18 + v21], &a1[v18 + v21], *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void))(v23 + 16))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(&a2[v18 + v21], 0, 1, v22);
  }
  return a2;
}

uint64_t sub_100045128()
{
  return sub_1000898A0();
}

uint64_t sub_10004514C()
{
  return sub_100045128();
}

uint64_t sub_100045164(uint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v1 = sub_100089870();
  uint64_t v5 = *(void *)(v1 - 8);
  unint64_t v4 = (*(void *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  uint64_t v6 = (char *)&v3 - v4;
  (*(void (**)(char *))(v5 + 16))((char *)&v3 - v4);
  return sub_1000898B0();
}

uint64_t sub_10004521C(uint64_t a1)
{
  return sub_100045164(a1);
}

uint64_t sub_100045234()
{
  uint64_t v8 = type metadata accessor for MessageListHeaderView();
  uint64_t v0 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v9 = (v0 + 16) & ~v0;
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EC0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v7 + v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v7 + v9 + *(int *)(v8 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  if (*(void *)(v6 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

char *sub_1000454D8(char *a1, char *a2)
{
  uint64_t v18 = sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v13 = type metadata accessor for MessageListHeaderView();
  uint64_t v14 = &a2[*(int *)(v13 + 20)];
  uint64_t v15 = &a1[*(int *)(v13 + 20)];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((void *)v14 + 2) = *((void *)v15 + 2);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = &v14[*(int *)(v3 + 28)];
  __src = &v15[*(int *)(v3 + 28)];
  uint64_t v11 = sub_1000895A0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 48))(__src, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(__dst, __src, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v7 = &v14[*(int *)(v5 + 20)];
  uint64_t v8 = &v15[*(int *)(v5 + 20)];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *((_WORD *)v7 + 8) = *((_WORD *)v8 + 8);
  uint64_t result = a2;
  *(void *)&a2[*(int *)(v13 + 24)] = *(void *)&a1[*(int *)(v13 + 24)];
  return result;
}

uint64_t sub_1000457F8@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for MessageListHeaderView();

  return sub_100039D4C(a1);
}

unint64_t sub_100045870()
{
  uint64_t v2 = qword_1000A3EF0;
  if (!qword_1000A3EF0)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A3EF0);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_1000458D8()
{
  return 1;
}

uint64_t sub_1000458F0()
{
  return sub_1000897E0();
}

uint64_t sub_100045908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v13 = a6;
  uint64_t v7 = a1;
  uint64_t v14 = a2;
  uint64_t v10 = a3;
  uint64_t v15 = a4;
  uint64_t v11 = a5;
  uint64_t v18 = a2;
  uint64_t v17 = a3;
  uint64_t v9 = *(void *)(a3 - 8);
  unint64_t v8 = (*(void *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v7 - v8;
  (*(void (**)(char *))(v9 + 16))((char *)&v7 - v8);
  uint64_t v16 = sub_100089780();
  sub_100089B70();
  return swift_release();
}

uint64_t sub_1000459F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = a1;
  uint64_t v8 = sub_100009334(&qword_1000A3EF8);
  unint64_t v5 = (*(void *)(*(void *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  uint64_t v1 = (uint64_t *)((char *)&v4 - v5);
  uint64_t v9 = (uint64_t)&v4 - v5;
  uint64_t v2 = type metadata accessor for MessageListView();
  sub_100045B20((uint64_t *)(v6 + *(int *)(v2 + 20)), v1);
  sub_100089710();
  return sub_100045BF0(v9);
}

uint64_t type metadata accessor for MessageListView()
{
  uint64_t v1 = qword_1000A4078;
  if (!qword_1000A4078) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

void *sub_100045B20(uint64_t *a1, void *a2)
{
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EF0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v2 - 8) + 16))(a2, a1);
  }
  else
  {
    uint64_t v4 = *a1;
    swift_retain();
    *a2 = v4;
  }
  swift_storeEnumTagMultiPayload();
  return a2;
}

uint64_t sub_100045BF0(uint64_t a1)
{
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  return a1;
}

uint64_t sub_100045C88()
{
  sub_100089D20();
  return v1;
}

double sub_100045CCC()
{
  type metadata accessor for MessageListView();
  swift_retain();
  swift_retain();
  sub_100009334(&qword_1000A3F08);
  sub_100089D30();
  sub_100045D64();
  swift_release();
  return v1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100045D64()
{
}

double sub_100045D90()
{
  type metadata accessor for MessageListView();
  swift_retain();
  swift_retain();
  sub_100009334(&qword_1000A3F08);
  sub_100089D40();
  sub_100045D64();
  swift_release();
  return v1;
}

uint64_t sub_100045E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v81 = 0;
  uint64_t v54 = sub_10004C4A0;
  uint64_t v55 = sub_10004A678;
  uint64_t v56 = &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>;
  unint64_t v111 = 0;
  uint64_t v110 = 0;
  uint64_t v109 = 0;
  unint64_t v106 = 0;
  uint64_t v104 = 0;
  uint64_t v105 = 0;
  uint64_t v57 = sub_100009334(&qword_1000A3F10);
  unint64_t v58 = (*(void *)(*(void *)(v57 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v57);
  uint64_t v59 = (uint64_t)v27 - v58;
  uint64_t v60 = sub_100009334(&qword_1000A3F18);
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = v60 - 8;
  unint64_t v63 = (*(void *)(v61 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v60);
  uint64_t v64 = (char *)v27 - v63;
  uint64_t v65 = sub_100009334(&qword_1000A3F20);
  unint64_t v66 = (*(void *)(*(void *)(v65 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v65);
  uint64_t v67 = (uint64_t)v27 - v66;
  uint64_t v68 = sub_100009334(&qword_1000A3F28);
  unint64_t v69 = (*(void *)(*(void *)(v68 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v68);
  uint64_t v70 = (uint64_t)v27 - v69;
  uint64_t v71 = sub_100009334(&qword_1000A3F30);
  unint64_t v72 = (*(void *)(*(void *)(v71 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v71);
  uint64_t v73 = (uint64_t)v27 - v72;
  uint64_t v74 = sub_100009334(&qword_1000A3F38);
  unint64_t v75 = (*(void *)(*(void *)(v74 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v81);
  uint64_t v76 = (uint64_t)v27 - v75;
  unint64_t v77 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  uint64_t v78 = (uint64_t)v27 - v77;
  unint64_t v79 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v80 = (uint64_t)v27 - v79;
  unint64_t v111 = (char *)v27 - v79;
  uint64_t v82 = *(void *)(type metadata accessor for MessageListView() - 8);
  uint64_t v83 = v82;
  uint64_t v84 = *(void *)(v82 + 64);
  unint64_t v85 = (v84 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v81);
  uint64_t v86 = (uint64_t)v27 - v85;
  uint64_t v94 = type metadata accessor for Snapshot();
  unint64_t v87 = (*(void *)(*(void *)(v94 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v94);
  uint64_t v95 = (uint64_t)v27 - v87;
  uint64_t v89 = sub_100009334(&qword_1000A3F40);
  unint64_t v90 = (*(void *)(*(void *)(v89 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v88);
  id v91 = (char *)v27 - v90;
  unint64_t v92 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  uint64_t v93 = (char *)v27 - v92;
  uint64_t v110 = (char *)v27 - v92;
  uint64_t v109 = v7;
  sub_10001FD60(v7, v8);
  uint64_t v9 = v95 + *(int *)(v94 + 20);
  unint64_t v98 = *(void *)v9;
  uint64_t v96 = *(void *)(v9 + 8);
  int v97 = *(unsigned __int16 *)(v9 + 16);
  sub_100032ED4(v98);
  sub_100020788(v95);
  unint64_t v99 = sub_100080384(v98);
  if (v99)
  {
    unint64_t v52 = v99;
    unint64_t v51 = v99;
    unint64_t v106 = v99;
    sub_1000433C0(v98);
    sub_10004A2C8(v88, v86);
    swift_bridgeObjectRetain();
    unint64_t v39 = (*(unsigned __int8 *)(v83 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    unint64_t v40 = (v39 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = swift_allocObject();
    sub_10004C180(v86, v41 + v39);
    *(void *)(v41 + v40) = v51;
    uint64_t v42 = sub_100009334(&qword_1000A3FD0);
    sub_10004C550();
    uint64_t v10 = sub_1000897D0();
    uint64_t v43 = v103;
    v103[0] = v10;
    v103[1] = v11;
    uint64_t v47 = sub_100009334(&qword_1000A3FB0);
    unint64_t v48 = sub_10004B8B8();
    unint64_t v50 = &v104;
    sub_100039F6C((uint64_t)v43, v47, (uint64_t)&v104);
    sub_100045D64();
    uint64_t v44 = v104;
    uint64_t v45 = v105;
    swift_retain();
    uint64_t v46 = v101;
    v101[0] = v44;
    v101[1] = v45;
    sub_100039F6C((uint64_t)v101, v47, (uint64_t)v102);
    sub_100045D64();
    unint64_t v49 = v100;
    v100[0] = v102[0];
    v100[1] = v102[1];
    unint64_t v12 = sub_10004B658();
    sub_10003AED8((uint64_t)v49, v47, v74, v48, v12, (uint64_t)v91);
    sub_100045D64();
    sub_10004B93C(v91, v93);
    sub_100045D64();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000433C0(v98);
    sub_10004A2C8(v88, v86);
    v27[3] = v27;
    __chkstk_darwin(v27);
    v27[1] = v24;
    uint64_t v25 = v13;
    v27[2] = sub_100009334(&qword_1000A3F48);
    sub_10004A680();
    sub_100089CF0();
    sub_10004A7F0(v86);
    unint64_t v28 = sub_10004A9FC();
    sub_1000458D8();
    int v34 = 1;
    sub_100089B10();
    sub_10004AA90(v59);
    uint64_t v29 = sub_100089CD0();
    uint64_t v107 = v57;
    unint64_t v108 = v28;
    swift_getOpaqueTypeConformance2();
    sub_100089BC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v60);
    uint64_t v30 = sub_100089A50();
    sub_10004AB98();
    sub_100089C10();
    swift_release();
    sub_10004AC84(v67);
    sub_10004AD18();
    int v31 = 1;
    sub_100089C00();
    sub_10004ADBC(v70);
    sub_10008A250();
    double v33 = sub_10008A260(v14);
    sub_10008A250();
    double v32 = sub_10008A260(v15);
    unint64_t v35 = sub_10004B448();
    uint64_t v16 = sub_10004B274();
    uint64_t v36 = &v20;
    uint64_t v20 = 0;
    char v21 = v31;
    double v22 = v32;
    char v23 = 0;
    v24[0] = v16;
    v24[1] = v17;
    uint64_t v25 = v71;
    unint64_t v26 = v35;
    sub_100089C30();
    sub_10004B570(v73);
    unint64_t v38 = sub_10004B658();
    sub_100039F6C(v78, v74, v80);
    sub_10004B570(v78);
    sub_10004B6F8(v80, v76);
    sub_100039F6C(v76, v74, v78);
    sub_10004B570(v76);
    uint64_t v37 = sub_100009334(&qword_1000A3FB0);
    unint64_t v18 = sub_10004B8B8();
    sub_10003AFD0(v78, v37, v74, v18, v38, (uint64_t)v91);
    sub_10004B570(v78);
    sub_10004B93C(v91, v93);
    sub_10004B570(v80);
  }
  sub_10004BAC0((uint64_t *)v93, v91);
  sub_10004BCE8();
  sub_100039F6C((uint64_t)v91, v89, v53);
  sub_10004BD8C((uint64_t)v91);
  return sub_10004BD8C((uint64_t)v93);
}

uint64_t sub_100046AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v18 = a1;
  uint64_t v14 = a2;
  uint64_t v29 = a3;
  uint64_t v19 = 0;
  uint64_t v20 = sub_10004FF9C;
  uint64_t v42 = 0;
  uint64_t v41 = 0;
  uint64_t v40 = 0;
  uint64_t v39 = 0;
  uint64_t v27 = sub_1000897A0();
  uint64_t v25 = *(void *)(v27 - 8);
  uint64_t v26 = v27 - 8;
  unint64_t v12 = (*(void *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  unint64_t v28 = (char *)&v11 - v12;
  uint64_t v4 = type metadata accessor for MessageListView();
  unint64_t v13 = (*(void *)(*(void *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v24 = (uint64_t)&v11 - v13;
  uint64_t v31 = sub_100009334(&qword_1000A3FD0);
  uint64_t v16 = *(void *)(*(void *)(v31 - 8) + 64);
  unint64_t v15 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v14);
  uint64_t v33 = (uint64_t)&v11 - v15;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  uint64_t v34 = (uint64_t)&v11 - v17;
  uint64_t v42 = (char *)&v11 - v17;
  uint64_t v41 = v6;
  uint64_t v40 = v7;
  uint64_t v39 = v8;
  sub_10004A2C8(v7, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v18, v27);
  swift_bridgeObjectRetain();
  char v21 = &v35;
  uint64_t v36 = v24;
  uint64_t v37 = v28;
  uint64_t v38 = v29;
  uint64_t v22 = sub_100009334(&qword_1000A40C0);
  unint64_t v23 = sub_10004FFAC();
  sub_100049A54();
  sub_100089D70();
  sub_10004A7F0(v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v27);
  swift_bridgeObjectRelease();
  unint64_t v32 = sub_10004C550();
  sub_100039F6C(v33, v31, v34);
  sub_100050168(v33);
  sub_100050204(v34, v33);
  sub_100039F6C(v33, v31, v30);
  sub_100050168(v33);
  return sub_100050168(v34);
}

uint64_t sub_100046DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v57 = a4;
  uint64_t v99 = a1;
  uint64_t v98 = a2;
  uint64_t v96 = a3;
  uint64_t v94 = 0;
  unint64_t v58 = sub_100050838;
  uint64_t v59 = sub_1000509BC;
  int v126 = 0;
  uint64_t v125 = 0;
  uint64_t v124 = 0;
  uint64_t v123 = 0;
  uint64_t v122 = 0;
  double v119 = 0.0;
  double v116 = 0.0;
  uint64_t v60 = sub_1000897F0();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = v60 - 8;
  unint64_t v63 = (*(void *)(v61 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v64 = (uint64_t)v25 - v63;
  uint64_t v65 = sub_1000897A0();
  uint64_t v67 = *(void *)(v65 - 8);
  uint64_t v66 = v65 - 8;
  uint64_t v68 = v67;
  uint64_t v69 = *(void *)(v67 + 64);
  unint64_t v70 = (v69 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v94);
  uint64_t v71 = (char *)v25 - v70;
  uint64_t v97 = type metadata accessor for MessageListView();
  uint64_t v72 = *(void *)(v97 - 8);
  uint64_t v73 = v72;
  uint64_t v74 = *(void *)(v72 + 64);
  unint64_t v75 = (v74 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v97);
  uint64_t v76 = (uint64_t)v25 - v75;
  uint64_t v77 = sub_100009334(&qword_1000A40D8);
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = v77 - 8;
  unint64_t v80 = (*(void *)(v78 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v77);
  uint64_t v81 = (char *)v25 - v80;
  uint64_t v82 = sub_100009334(&qword_1000A40C0);
  unint64_t v83 = (*(void *)(*(void *)(v82 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v94);
  uint64_t v84 = (uint64_t)v25 - v83;
  unint64_t v85 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  uint64_t v86 = (uint64_t)v25 - v85;
  int v126 = (char *)v25 - v85;
  uint64_t v87 = sub_10008A660();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v89 = v87 - 8;
  unint64_t v90 = (*(void *)(v88 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v87);
  id v91 = (char *)v25 - v90;
  unint64_t v92 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v25 - v90);
  uint64_t v93 = (char *)v25 - v92;
  uint64_t v103 = sub_100009334(&qword_1000A3EF8);
  unint64_t v95 = (*(void *)(*(void *)(v103 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v94);
  uint64_t v7 = (void *)((char *)v25 - v95);
  uint64_t v104 = (uint64_t)v25 - v95;
  uint64_t v109 = sub_100089EF0();
  uint64_t v105 = *(void *)(v109 - 8);
  uint64_t v106 = v109 - 8;
  uint64_t v101 = *(void *)(v105 + 64);
  unint64_t v100 = (v101 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v99);
  uint64_t v107 = (char *)v25 - v100;
  unint64_t v102 = (v101 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  unint64_t v108 = (char *)v25 - v102;
  uint64_t v125 = v9;
  uint64_t v124 = v10;
  uint64_t v123 = v11;
  sub_100045B20((uint64_t *)(v9 + *(int *)(v12 + 20)), v7);
  sub_100089710();
  sub_100045BF0(v104);
  (*(void (**)(char *, void, uint64_t))(v105 + 104))(v107, enum case for WidgetFamily.systemLarge(_:), v109);
  sub_1000502E8();
  int v112 = sub_10008A6E0();
  unint64_t v111 = *(void (**)(char *, uint64_t))(v105 + 8);
  uint64_t v110 = v105 + 8;
  v111(v107, v109);
  v111(v108, v109);
  if (v112) {
    uint64_t v56 = 4;
  }
  else {
    uint64_t v56 = 2;
  }
  uint64_t v49 = v56;
  uint64_t v122 = v56;
  uint64_t v43 = &v121;
  uint64_t v121 = v56;
  unint64_t v51 = sub_100008284();
  unint64_t v50 = &type metadata for Int;
  double v48 = sub_100047F10((uint64_t)v43, (uint64_t)&type metadata for Int, v51) - 1.0;
  unint64_t v13 = (uint64_t *)(v99 + *(int *)(v97 + 24));
  uint64_t v44 = *v13;
  uint64_t v46 = v13[1];
  swift_retain();
  swift_retain();
  uint64_t v45 = v120;
  v120[0] = v44;
  v120[1] = v46;
  sub_100009334(&qword_1000A3F08);
  sub_100089D30();
  sub_100045D64();
  double v47 = *(double *)&v120[2];
  swift_release();
  double v52 = v48 * v47;
  double v119 = v48 * v47;
  sub_100089790();
  double v53 = v14 - v52;
  uint64_t v118 = v49;
  double v15 = sub_100047F10((uint64_t)&v118, (uint64_t)v50, v51);
  double v54 = v53 / v15;
  (*(void (**)(char *, void, uint64_t))(v88 + 104))(v93, enum case for FloatingPointRoundingRule.down(_:), v87);
  double v117 = v54;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v91, v93, v87);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v88 + 88))(v91, v87);
  int v55 = result;
  if (result == enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
  {
    double v117 = round(v54);
    goto LABEL_18;
  }
  if (v55 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    double v117 = rint(v54);
    goto LABEL_18;
  }
  if (v55 == enum case for FloatingPointRoundingRule.up(_:)) {
    goto LABEL_16;
  }
  if (v55 == enum case for FloatingPointRoundingRule.down(_:))
  {
LABEL_17:
    double v117 = floor(v54);
    goto LABEL_18;
  }
  if (v55 == enum case for FloatingPointRoundingRule.towardZero(_:))
  {
    double v117 = trunc(v54);
    goto LABEL_18;
  }
  if (v55 != enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    sub_10008A240();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v91, v87);
LABEL_18:
    double v30 = v117;
    (*(void (**)(char *, uint64_t))(v88 + 8))(v93, v87);
    double v116 = v30;
    swift_bridgeObjectRetain();
    v115[4] = v96;
    v25[1] = sub_100009334(&qword_1000A35A0);
    sub_100014A90();
    sub_10008A330();
    v25[3] = v115;
    v115[0] = v115[5];
    v115[1] = v115[6];
    void v115[2] = v115[7];
    v115[3] = v115[8];
    v25[2] = sub_100009334(&qword_1000A4100);
    sub_10005036C();
    sub_10008A110();
    sub_1000503F0();
    v25[6] = v114;
    v114[0] = v115[9];
    v114[1] = v115[10];
    v114[2] = v115[11];
    v114[3] = v115[12];
    v25[4] = sub_100009334(&qword_1000A4110);
    v25[5] = sub_100009334(&qword_1000A4118);
    sub_10005041C();
    uint64_t v17 = sub_10008A220();
    uint64_t v39 = &v113;
    uint64_t v113 = v17;
    uint64_t KeyPath = swift_getKeyPath();
    sub_10004A2C8(v99, v76);
    uint64_t v26 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v71, v98, v65);
    unint64_t v27 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    uint64_t v32 = 7;
    unint64_t v28 = (v27 + v74 + *(unsigned __int8 *)(v26 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    unint64_t v29 = (v28 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = swift_allocObject();
    __n128 v18 = sub_10004C180(v76, v33 + v27);
    (*(void (**)(unint64_t, char *, uint64_t, __n128))(v67 + 32))(v33 + v28, v71, v65, v18);
    unint64_t v19 = v31;
    uint64_t v20 = v49;
    uint64_t v21 = v33;
    *(double *)(v33 + v29) = v30;
    *(void *)(v21 + v19) = v20;
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = v33;
    uint64_t v35 = v22;
    *(void *)(v22 + 16) = v58;
    *(void *)(v22 + 24) = v23;
    uint64_t v36 = sub_100009334(&qword_1000A4128);
    uint64_t v37 = sub_100009334(&qword_1000A40E8);
    unint64_t v38 = sub_1000509C8();
    sub_1000500E4();
    sub_100089DB0();
    sub_1000458F0();
    unint64_t v40 = sub_100050050();
    unint64_t v24 = sub_10004499C();
    sub_100045908(v64, v77, v60, v40, v24, v84);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v64, v60);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v77);
    unint64_t v41 = sub_10004FFAC();
    sub_100039F6C(v84, v82, v86);
    sub_100050A4C(v84);
    sub_100050ACC(v86, v84);
    sub_100039F6C(v84, v82, v57);
    sub_100050A4C(v84);
    return sub_100050A4C(v86);
  }
  uint64_t v42 = *(void *)&v54 >> 63;
  if (v54 >= 0.0)
  {
LABEL_16:
    double v117 = ceil(v54);
    goto LABEL_18;
  }
  if (v42 == 1) {
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

double sub_100047F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v14 = a2;
  uint64_t v13 = a3;
  uint64_t v16 = a2;
  uint64_t v11 = *(void *)(a2 - 8);
  uint64_t v9 = a2 - 8;
  unint64_t v10 = (*(void *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(a3);
  uint64_t v12 = (char *)v4 - v10;
  (*(void (**)(char *))(v11 + 16))((char *)v4 - v10);
  if (sub_10008A4C0() > 64)
  {
    v4[1] = sub_100051AF4();
    sub_100051B70();
    sub_100089FD0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v14);
    double v7 = v15;
  }
  else if (sub_10008A4D0())
  {
    uint64_t v5 = sub_10008A4B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v14);
    double v7 = (double)v5;
  }
  else
  {
    uint64_t v6 = sub_10008A4B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v14);
    double v7 = (double)(unint64_t)v6;
  }
  *(double *)uint64_t v4 = v7;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v14);
  return *(double *)v4;
}

uint64_t sub_100048168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v43 = a6;
  uint64_t v75 = a1;
  uint64_t v76 = a2;
  uint64_t v89 = a3;
  uint64_t v77 = a4;
  double v78 = a7;
  uint64_t v79 = a5;
  uint64_t v80 = 0;
  uint64_t v44 = &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>;
  uint64_t v115 = 0;
  uint64_t v114 = 0;
  uint64_t v113 = 0;
  uint64_t v112 = 0;
  uint64_t v111 = 0;
  uint64_t v110 = 0;
  uint64_t v109 = 0;
  double v108 = 0.0;
  uint64_t v107 = 0;
  uint64_t v45 = sub_100089DA0();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = v45 - 8;
  unint64_t v48 = (*(void *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v24 - v48;
  uint64_t v50 = sub_100009334(&qword_1000A4138);
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = v50 - 8;
  unint64_t v53 = (*(void *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v50);
  double v54 = (char *)&v24 - v53;
  uint64_t v55 = sub_100009334(&qword_1000A4140);
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = v55 - 8;
  unint64_t v58 = (*(void *)(v56 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v55);
  uint64_t v59 = (uint64_t)&v24 - v58;
  unint64_t v60 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v58);
  uint64_t v61 = (uint64_t)&v24 - v60;
  uint64_t v115 = (char *)&v24 - v60;
  uint64_t v62 = sub_100009334(&qword_1000A4148);
  unint64_t v63 = (*(void *)(*(void *)(v62 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v62);
  uint64_t v64 = (char *)&v24 - v63;
  unint64_t v65 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v63);
  uint64_t v66 = (char *)&v24 - v65;
  unint64_t v67 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v65);
  uint64_t v68 = (char *)&v24 - v67;
  uint64_t v114 = (char *)&v24 - v67;
  uint64_t v91 = sub_100009334(&qword_1000A3EF8);
  unint64_t v69 = (*(void *)(*(void *)(v91 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v80);
  unint64_t v10 = (uint64_t *)((char *)&v24 - v69);
  uint64_t v92 = (uint64_t)&v24 - v69;
  uint64_t v97 = sub_100089EF0();
  uint64_t v93 = *(void *)(v97 - 8);
  uint64_t v94 = v97 - 8;
  unint64_t v70 = (*(void *)(v93 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v97);
  unint64_t v95 = (char *)&v24 - v70;
  unint64_t v71 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v70);
  uint64_t v96 = (char *)&v24 - v71;
  uint64_t v72 = sub_100009334(&qword_1000A3FE8);
  unint64_t v73 = (*(void *)(*(void *)(v72 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v72);
  uint64_t v74 = (uint64_t)&v24 - v73;
  uint64_t v81 = sub_100009334(&qword_1000A4150);
  uint64_t v85 = *(void *)(*(void *)(v81 - 8) + 64);
  unint64_t v82 = (v85 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v80);
  unint64_t v83 = (uint64_t *)((char *)&v24 - v82);
  unint64_t v84 = (v85 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v12);
  uint64_t v86 = (uint64_t)&v24 - v84;
  unint64_t v87 = (v85 + 15) & 0xFFFFFFFFFFFFFFF0;
  double v14 = __chkstk_darwin(v13);
  uint64_t v88 = (uint64_t *)((char *)&v24 - v87);
  uint64_t v113 = (char *)&v24 - v87;
  uint64_t v112 = v15;
  uint64_t v111 = v16;
  uint64_t v110 = v17;
  uint64_t v109 = v18;
  double v108 = v14;
  uint64_t v107 = v19;
  uint64_t v90 = type metadata accessor for MessageListView();
  sub_100045B20((uint64_t *)(v89 + *(int *)(v90 + 20)), v10);
  sub_100089710();
  sub_100045BF0(v92);
  (*(void (**)(char *, void, uint64_t))(v93 + 104))(v95, enum case for WidgetFamily.systemLarge(_:), v97);
  sub_1000502E8();
  int v100 = sub_10008A6E0();
  uint64_t v99 = *(void (**)(char *, uint64_t))(v93 + 8);
  uint64_t v98 = v93 + 8;
  v99(v95, v97);
  v99(v96, v97);
  BOOL v42 = (v100 & 1) != 0;
  sub_100048EB0(v76, v42, v74);
  sub_100089790();
  uint64_t v38 = v20;
  unint64_t v39 = sub_10004DC24();
  sub_10004B274();
  sub_100089C20();
  sub_10004DCC8(v74);
  unint64_t v40 = sub_100050B6C();
  sub_100039F6C(v86, v81, (uint64_t)v88);
  uint64_t result = sub_10004DCC8(v86);
  uint64_t v41 = v79 - 1;
  if (__OFSUB__(v79, 1))
  {
    __break(1u);
  }
  else
  {
    if (v75 >= v41)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v64, 1, 1, v55);
      sub_100050C0C();
      sub_1000642D0(v64, v55, v66);
      sub_100050E00((uint64_t)v64);
      sub_100050EE0(v66, v68);
    }
    else
    {
      sub_100089D90();
      unint64_t v31 = sub_100050CF8();
      sub_1000458D8();
      unsigned int v36 = 1;
      sub_100089B10();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v45);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v23 = (uint64_t *)(v89 + *(int *)(v90 + 24));
      uint64_t v28 = *v23;
      uint64_t v30 = v23[1];
      swift_retain();
      swift_retain();
      unint64_t v29 = v103;
      v103[0] = v28;
      v103[1] = v30;
      sub_100009334(&qword_1000A3F08);
      sub_100089D40();
      sub_100045D64();
      uint64_t v33 = v103[2];
      uint64_t v34 = v103[3];
      double v32 = *(double *)&v103[4];
      swift_release();
      uint64_t v101 = v45;
      unint64_t v102 = v31;
      swift_getOpaqueTypeConformance2();
      sub_100083480(KeyPath, v33, v34, v50, v32);
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v50);
      unint64_t v37 = sub_100050C0C();
      sub_100039F6C(v59, v55, v61);
      sub_100051964(v59);
      sub_1000519F8(v61, v59);
      sub_100039F6C(v59, v55, (uint64_t)v64);
      sub_100051964(v59);
      (*(void (**)(char *, void, void, uint64_t))(v56 + 56))(v64, 0, v36, v55);
      sub_1000642D0(v64, v55, v66);
      sub_100050E00((uint64_t)v64);
      sub_100050EE0(v66, v68);
      sub_100051964(v61);
    }
    sub_100051040(v88, v83);
    unint64_t v27 = v106;
    v106[0] = v83;
    sub_100051714(v68, v66);
    v106[1] = v66;
    uint64_t v25 = v105;
    v105[0] = v81;
    v105[1] = v62;
    uint64_t v26 = v104;
    v104[0] = v40;
    v104[1] = sub_1000518D0();
    sub_10003ED48((uint64_t)v27, 2uLL, (uint64_t)v25, v43);
    sub_100050E00((uint64_t)v66);
    sub_10004DCC8((uint64_t)v83);
    sub_100050E00((uint64_t)v68);
    return sub_10004DCC8((uint64_t)v88);
  }
  return result;
}

uint64_t sub_100048EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v68 = a1;
  uint64_t v65 = a2;
  uint64_t v59 = 0;
  uint64_t v23 = sub_10004E030;
  uint64_t v81 = 0;
  uint64_t v80 = 0;
  uint64_t v79 = 0;
  double v78 = 0;
  uint64_t v77 = 0;
  uint64_t v76 = 0;
  uint64_t v75 = 0;
  uint64_t v74 = 0;
  uint64_t v24 = sub_100009334(&qword_1000A3FE0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v24 - 8;
  unint64_t v27 = (*(void *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v24);
  uint64_t v28 = (uint64_t)v17 - v27;
  unint64_t v29 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v17 - v27);
  uint64_t v30 = (uint64_t)v17 - v29;
  unint64_t v31 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v17 - v29);
  uint64_t v32 = (uint64_t)v17 - v31;
  uint64_t v81 = (char *)v17 - v31;
  unint64_t v33 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3B40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v59);
  unint64_t v73 = (char *)v17 - v33;
  uint64_t v72 = sub_1000895A0();
  uint64_t v69 = *(void *)(v72 - 8);
  uint64_t v70 = v72 - 8;
  unint64_t v34 = (*(void *)(v69 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v72);
  uint64_t v35 = (char *)v17 - v34;
  unint64_t v36 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v17 - v34);
  unint64_t v37 = (char *)v17 - v36;
  uint64_t v80 = (char *)v17 - v36;
  uint64_t v38 = sub_100009334(&qword_1000A3FE8);
  unint64_t v39 = (*(void *)(*(void *)(v38 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v38);
  unint64_t v40 = (char *)v17 - v39;
  unint64_t v41 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v17 - v39);
  BOOL v42 = (char *)v17 - v41;
  uint64_t v79 = (char *)v17 - v41;
  unint64_t v43 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v59);
  uint64_t v63 = (uint64_t)v17 - v43;
  unint64_t v44 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v59);
  uint64_t v58 = (uint64_t)v17 - v44;
  unint64_t v45 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v59);
  uint64_t v57 = (uint64_t)v17 - v45;
  uint64_t v67 = type metadata accessor for Message();
  unint64_t v46 = (*(void *)(*(void *)(v67 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v59);
  uint64_t v64 = (char *)v17 - v46;
  uint64_t v47 = type metadata accessor for MessageView();
  uint64_t v53 = *(void *)(*(void *)(v47 - 8) + 64);
  unint64_t v48 = (v53 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v68);
  uint64_t v49 = (uint64_t *)((char *)v17 - v48);
  unint64_t v50 = (v53 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  uint64_t v51 = (uint64_t)v17 - v50;
  unint64_t v52 = (v53 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v9);
  double v54 = (uint64_t *)((char *)v17 - v52);
  unint64_t v55 = (v53 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  uint64_t v62 = (uint64_t *)((char *)v17 - v55);
  double v78 = (char *)v17 - v55;
  uint64_t v77 = v11;
  uint64_t v76 = v12;
  uint64_t v75 = v3;
  sub_100014B98(v11, v13);
  sub_10001FD60(v56, v57);
  sub_10000E524(v57, v58);
  sub_100020788(v57);
  uint64_t v61 = *(void *)(v58 + 24);
  unint64_t v60 = *(void *)(v58 + 32);
  sub_1000154C0(v61, v60);
  sub_100015540(v58);
  int v66 = sub_10001973C(v61, v60, v59, 4uLL);
  sub_100015500(v61, v60);
  sub_10006431C();
  unsigned int v71 = 1;
  sub_100064350(v63, v64, v65, v66 & 1, (uint64_t)v62);
  sub_10001AF78((const void *)(v68 + *(int *)(v67 + 60)), v73);
  if ((*(unsigned int (**)(char *, void, uint64_t))(v69 + 48))(v73, v71, v72) == 1)
  {
    sub_100018600((uint64_t)v73);
    uint64_t v74 = v54;
    v17[0] = sub_10004C5D4();
    sub_100039F6C((uint64_t)v62, v47, (uint64_t)v54);
    sub_10004C658(v54, v49);
    sub_100039F6C((uint64_t)v49, v47, v51);
    sub_10004CC64((uint64_t)v49);
    unint64_t v15 = sub_10004CF60();
    sub_10003AFD0(v51, v24, v47, v15, v17[0], (uint64_t)v40);
    sub_10004CC64(v51);
    sub_10004CFE4(v40, v42);
    sub_10004CC64((uint64_t)v54);
  }
  else
  {
    v17[1] = 32;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v37, v73, v72);
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v35, v37, v72);
    sub_10004C658(v62, v54);
    v17[3] = (uint64_t)v17;
    __chkstk_darwin(v17);
    v17[2] = (uint64_t)&v17[-4];
    v17[-2] = v14;
    unint64_t v19 = sub_10004C5D4();
    sub_100089AC0();
    sub_10004CC64((uint64_t)v54);
    unint64_t v18 = sub_10004CF60();
    sub_100039F6C(v30, v24, v32);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    uint64_t v20 = v25 + 8;
    v21(v30, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v28, v32, v24);
    sub_100039F6C(v28, v24, v30);
    v21(v28, v24);
    sub_10003AED8(v30, v24, v47, v18, v19, (uint64_t)v40);
    v21(v30, v24);
    sub_10004CFE4(v40, v42);
    v21(v32, v24);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v37, v72);
  }
  sub_10004D584(v42, v40);
  sub_10004DC24();
  sub_100039F6C((uint64_t)v40, v38, v22);
  sub_10004DCC8((uint64_t)v40);
  sub_10004DCC8((uint64_t)v42);
  return sub_10004CC64((uint64_t)v62);
}

uint64_t sub_1000499E8(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v6 = *(void *)a1;
  uint64_t v2 = sub_100009334(&qword_1000A4110);
  return a2(v6, &a1[*(int *)(v2 + 48)]);
}

uint64_t sub_100049A54()
{
  return sub_100089950();
}

uint64_t sub_100049A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v51 = a1;
  unint64_t v52 = &opaque type descriptor for <<opaque return type of View.redacted(reason:)>>;
  uint64_t v104 = 0;
  uint64_t v103 = 0;
  uint64_t v102 = 0;
  long long v100 = 0u;
  long long v101 = 0u;
  long long v93 = 0u;
  long long v94 = 0u;
  long long v91 = 0u;
  long long v92 = 0u;
  uint64_t v53 = sub_100089850();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = v53 - 8;
  unint64_t v56 = (*(void *)(v54 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v53);
  uint64_t v57 = (char *)&v15 - v56;
  uint64_t v58 = sub_100009334(&qword_1000A3F78);
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = v58 - 8;
  unint64_t v61 = (*(void *)(v59 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v58);
  uint64_t v62 = (uint64_t)&v15 - v61;
  unint64_t v63 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v61);
  uint64_t v64 = (uint64_t)&v15 - v63;
  unint64_t v65 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v63);
  uint64_t v66 = (uint64_t)&v15 - v65;
  uint64_t v104 = (char *)&v15 - v65;
  uint64_t v67 = sub_100009334(&qword_1000A3F48);
  unint64_t v68 = (*(void *)(*(void *)(v67 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v67);
  uint64_t v69 = (char *)&v15 - v68;
  unint64_t v70 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v68);
  unsigned int v71 = (char *)&v15 - v70;
  unint64_t v72 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v70);
  unint64_t v73 = (char *)&v15 - v72;
  uint64_t v103 = (char *)&v15 - v72;
  uint64_t v102 = a1;
  *(void *)&long long v74 = sub_10004AE84();
  *((void *)&v74 + 1) = v7;
  uint64_t v75 = v8;
  uint64_t v76 = v9;
  if (v9)
  {
    long long v47 = v74;
    int v48 = v75;
    uint64_t v49 = v76;
    uint64_t v40 = v76;
    int v38 = v75;
    uint64_t v37 = *((void *)&v74 + 1);
    uint64_t v39 = v74;
    long long v93 = v74;
    unsigned int v34 = 1;
    LOBYTE(v94) = v75 & 1;
    *((void *)&v94 + 1) = v76;
    long long v88 = v74;
    char v89 = v75 & 1;
    uint64_t v90 = v76;
    unint64_t v36 = &v91;
    unint64_t v31 = &type metadata for Text;
    uint64_t v32 = &protocol witness table for Text;
    sub_100039F6C((uint64_t)&v88, (uint64_t)&type metadata for Text, (uint64_t)&v91);
    long long v27 = v91;
    int v28 = v92;
    uint64_t v29 = *((void *)&v92 + 1);
    sub_100051F7C(v91, *((uint64_t *)&v91 + 1), v92 & 1);
    swift_bridgeObjectRetain();
    uint64_t v30 = &v82;
    long long v82 = v27;
    char v83 = v28 & 1 & v34;
    uint64_t v84 = v29;
    sub_100039F6C((uint64_t)&v82, (uint64_t)v31, (uint64_t)v85);
    sub_1000430AC((uint64_t)v30);
    unint64_t v33 = v79;
    v79[0] = v85[0];
    v79[1] = v85[1];
    char v80 = v86 & 1 & v34;
    uint64_t v81 = v87;
    uint64_t v77 = v31;
    double v78 = v32;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_10003AED8((uint64_t)v33, (uint64_t)v31, v58, (uint64_t)v32, OpaqueTypeConformance2, (uint64_t)v69);
    sub_1000430AC((uint64_t)v33);
    uint64_t v35 = sub_100009334(&qword_1000A3F60);
    (*(void (**)(char *, void, void))(*(void *)(v35 - 8) + 56))(v69, 0, v34);
    sub_10004A714();
    sub_1000642D0(v69, v35, v71);
    sub_10004AA90((uint64_t)v69);
    sub_100051BEC(v71, v73);
    sub_1000430AC((uint64_t)v36);
    sub_1000430F4(v39, v37, v38 & 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&long long v44 = sub_10004B07C();
    *((void *)&v44 + 1) = v10;
    uint64_t v45 = v11;
    uint64_t v46 = v12;
    if (v12)
    {
      long long v41 = v44;
      int v42 = v45;
      uint64_t v43 = v46;
      uint64_t v25 = v46;
      int v24 = v45;
      long long v23 = v44;
      long long v100 = v44;
      unsigned int v19 = 1;
      LOBYTE(v101) = v45 & 1;
      *((void *)&v101 + 1) = v46;
      long long v97 = v44;
      char v98 = v45 & 1;
      uint64_t v99 = v46;
      sub_100089840();
      uint64_t v16 = &type metadata for Text;
      uint64_t v17 = &protocol witness table for Text;
      sub_100089C50();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v53);
      unint64_t v95 = v16;
      uint64_t v96 = v17;
      uint64_t v18 = swift_getOpaqueTypeConformance2();
      sub_100039F6C(v64, v58, v66);
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
      uint64_t v21 = v59 + 8;
      v22(v64, v58);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v62, v66, v58);
      sub_100039F6C(v62, v58, v64);
      v22(v62, v58);
      sub_10003AFD0(v64, (uint64_t)v16, v58, (uint64_t)v17, v18, (uint64_t)v69);
      v22(v64, v58);
      uint64_t v20 = sub_100009334(&qword_1000A3F60);
      (*(void (**)(char *, void, void))(*(void *)(v20 - 8) + 56))(v69, 0, v19);
      sub_10004A714();
      sub_1000642D0(v69, v20, v71);
      sub_10004AA90((uint64_t)v69);
      sub_100051BEC(v71, v73);
      v22(v66, v58);
      sub_1000430F4(v23, *((uint64_t *)&v23 + 1), v24 & 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = sub_100009334(&qword_1000A3F60);
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 56))(v69, 1);
      sub_10004A714();
      sub_1000642D0(v69, v26, v71);
      sub_10004AA90((uint64_t)v69);
      sub_100051BEC(v71, v73);
    }
  }
  sub_100051D90((uint64_t *)v73, v71);
  sub_10004A680();
  sub_100039F6C((uint64_t)v71, v67, v50);
  sub_10004AA90((uint64_t)v71);
  return sub_10004AA90((uint64_t)v73);
}

uint64_t sub_10004A2C8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  uint64_t v22 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 8) = v22;
  uint64_t v25 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 16) = v25;
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  }
  else
  {
    *(void *)(a2 + 24) = *(void *)(a1 + 24);
    uint64_t v21 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a2 + 32) = v21;
  }
  uint64_t v2 = type metadata accessor for Mailbox();
  uint64_t v17 = (void *)(a2 + *(int *)(v2 + 28));
  uint64_t v18 = (const void *)(a1 + *(int *)(v2 + 28));
  uint64_t v19 = sub_1000895A0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v20 + 48))(v18, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(v17, v18, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v4 = type metadata accessor for Snapshot();
  uint64_t v15 = a2 + *(int *)(v4 + 20);
  uint64_t v16 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  if ((unint64_t)*v16 < 2)
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_WORD *)(v15 + 16) = *((_WORD *)v16 + 8);
  }
  else
  {
    uint64_t v14 = *v16;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v15 = v14;
    *(void *)(v15 + 8) = v16[1];
    *(unsigned char *)(v15 + 16) = *((unsigned char *)v16 + 16);
    *(unsigned char *)(v15 + 17) = *((unsigned char *)v16 + 17);
  }
  uint64_t v11 = type metadata accessor for MessageListView();
  uint64_t v12 = (void *)(a2 + *(int *)(v11 + 20));
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(v11 + 20));
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_100089EF0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v5 - 8) + 16))(v12, v13);
  }
  else
  {
    uint64_t v10 = *v13;
    swift_retain();
    *uint64_t v12 = v10;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (void *)(a2 + *(int *)(v11 + 24));
  uint64_t v6 = (void *)(a1 + *(int *)(v11 + 24));
  *uint64_t v8 = *v6;
  uint64_t v9 = v6[1];
  swift_retain();
  uint64_t result = a2;
  v8[1] = v9;
  return result;
}

uint64_t sub_10004A678@<X0>(uint64_t a1@<X8>)
{
  return sub_100049A78(*(void *)(v1 + 16), a1);
}

unint64_t sub_10004A680()
{
  uint64_t v2 = qword_1000A3F50;
  if (!qword_1000A3F50)
  {
    sub_1000096C0(&qword_1000A3F48);
    sub_10004A714();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3F50);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10004A714()
{
  uint64_t v2 = qword_1000A3F58;
  if (!qword_1000A3F58)
  {
    sub_1000096C0(&qword_1000A3F60);
    swift_getOpaqueTypeConformance2();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3F58);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004A7F0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v5 = sub_1000895A0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v6 + 48))(v4, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(void *)(a1 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = a1 + *(int *)(type metadata accessor for MessageListView() + 20);
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return a1;
}

unint64_t sub_10004A9FC()
{
  uint64_t v2 = qword_1000A3F68;
  if (!qword_1000A3F68)
  {
    sub_1000096C0(&qword_1000A3F10);
    sub_10004A680();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3F68);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004AA90(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A3F60);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1, 1))
  {
    sub_100009334(&qword_1000A3F70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v2 = sub_100009334(&qword_1000A3F78);
      (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(a1);
    }
    else
    {
      sub_1000430F4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16) & 1);
      swift_bridgeObjectRelease();
    }
  }
  return a1;
}

unint64_t sub_10004AB98()
{
  uint64_t v2 = qword_1000A3F80;
  if (!qword_1000A3F80)
  {
    sub_1000096C0(&qword_1000A3F20);
    sub_1000096C0(&qword_1000A3F10);
    sub_10004A9FC();
    swift_getOpaqueTypeConformance2();
    sub_100042AC8();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3F80);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004AC84(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A3F18);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  sub_100009334(&qword_1000A3F20);
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_10004AD18()
{
  uint64_t v2 = qword_1000A3F88;
  if (!qword_1000A3F88)
  {
    sub_1000096C0(&qword_1000A3F28);
    sub_10004AB98();
    sub_1000428C4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3F88);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004ADBC(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A3F18);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  sub_100009334(&qword_1000A3F20);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3F28);
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_10004AE84()
{
  uint64_t v10 = "Placeholder when the selected mailbox is empty";
  uint64_t v26 = 0;
  uint64_t v13 = type metadata accessor for Snapshot();
  unint64_t v12 = (*(void *)(*(void *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = (uint64_t)&v5 - v12;
  uint64_t v26 = __chkstk_darwin(v11);
  sub_10001FD60(v26, (uint64_t)&v5 - v12);
  uint64_t v0 = v14 + *(int *)(v13 + 20);
  unint64_t v17 = *(void *)v0;
  uint64_t v15 = *(void *)(v0 + 8);
  int v16 = *(unsigned __int16 *)(v0 + 16);
  sub_100032ED4(v17);
  sub_100020788(v14);
  BOOL v18 = sub_10008041C(v17, v15, v16);
  sub_1000433C0(v17);
  if (v18)
  {
    sub_10008A0B0("NO_MESSAGES", 0xBuLL, 1);
    sub_100089930();
    long long v23 = v10;
    uint64_t v24 = 46;
    __int16 v25 = 2;
    uint64_t v19 = sub_100089AF0();
    uint64_t v20 = v1;
    char v21 = v2;
    uint64_t v22 = v3;
    uint64_t v6 = v19;
    uint64_t v7 = v1;
    uint64_t v8 = v2 & 1;
    uint64_t v9 = v3;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  return v6;
}

uint64_t sub_10004B07C()
{
  uint64_t v10 = "Placeholder when widget failed to load messages";
  uint64_t v26 = 0;
  uint64_t v13 = type metadata accessor for Snapshot();
  unint64_t v12 = (*(void *)(*(void *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = (uint64_t)&v5 - v12;
  uint64_t v26 = __chkstk_darwin(v11);
  sub_10001FD60(v26, (uint64_t)&v5 - v12);
  uint64_t v0 = v14 + *(int *)(v13 + 20);
  unint64_t v17 = *(void *)v0;
  uint64_t v15 = *(void *)(v0 + 8);
  int v16 = *(unsigned __int16 *)(v0 + 16);
  sub_100032ED4(v17);
  sub_100020788(v14);
  BOOL v18 = sub_100080464(v17, v15, v16);
  sub_1000433C0(v17);
  if (v18)
  {
    sub_10008A0B0("MESSAGE_ERROR", 0xDuLL, 1);
    sub_100089930();
    long long v23 = v10;
    uint64_t v24 = 47;
    __int16 v25 = 2;
    uint64_t v19 = sub_100089AF0();
    uint64_t v20 = v1;
    char v21 = v2;
    uint64_t v22 = v3;
    uint64_t v6 = v19;
    uint64_t v7 = v1;
    uint64_t v8 = v2 & 1;
    uint64_t v9 = v3;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  return v6;
}

uint64_t sub_10004B274()
{
  return sub_100089DC0();
}

uint64_t sub_10004B298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v9 = a2;
  uint64_t v8 = a1;
  uint64_t v15 = 0;
  uint64_t v14 = 0;
  uint64_t v10 = type metadata accessor for MessageView();
  unint64_t v6 = (*(void *)(*(void *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = __chkstk_darwin(v8);
  unint64_t v12 = (unint64_t *)((char *)&v6 - v6);
  unint64_t v7 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v13 = (unint64_t *)((char *)&v6 - v7);
  uint64_t v15 = (char *)&v6 - v7;
  uint64_t v14 = v4;
  unint64_t v11 = sub_10004C5D4();
  sub_100039F6C(v8, v10, (uint64_t)v13);
  sub_10004C658(v13, v12);
  sub_100039F6C((uint64_t)v12, v10, v9);
  sub_10004CC64((uint64_t)v12);
  return sub_10004CC64((uint64_t)v13);
}

uint64_t sub_10004B3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10001FFFC(a1, a2);
  uint64_t v5 = type metadata accessor for MessageListView();
  swift_getKeyPath();
  sub_100089730();
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t result = sub_100045C88();
  uint64_t v3 = (void *)(a2 + v6);
  *uint64_t v3 = v4;
  v3[1] = result;
  return result;
}

uint64_t sub_10004B430@<X0>(uint64_t a1@<X8>)
{
  return sub_100045E40(a1);
}

unint64_t sub_10004B448()
{
  uint64_t v2 = qword_1000A3F90;
  if (!qword_1000A3F90)
  {
    sub_1000096C0(&qword_1000A3F30);
    sub_10004AD18();
    sub_10004B4EC();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3F90);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10004B4EC()
{
  uint64_t v2 = qword_1000A3F98;
  if (!qword_1000A3F98)
  {
    sub_1000096C0(&qword_1000A3FA0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3F98);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004B570(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A3F18);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  sub_100009334(&qword_1000A3F20);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3F28);
  swift_release();
  swift_release();
  sub_100009334(&qword_1000A3F30);
  swift_release();
  return a1;
}

unint64_t sub_10004B658()
{
  uint64_t v2 = qword_1000A3FA8;
  if (!qword_1000A3FA8)
  {
    sub_1000096C0(&qword_1000A3F38);
    sub_10004B448();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3FA8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004B6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_100009334(&qword_1000A3F18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a2, a1);
  uint64_t v6 = *(int *)(sub_100009334(&qword_1000A3F20) + 36);
  uint64_t v7 = *(void *)(a1 + v6);
  swift_retain();
  *(void *)(a2 + v6) = v7;
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  swift_retain();
  *(void *)(a2 + v6 + 8) = v8;
  uint64_t v9 = *(int *)(sub_100009334(&qword_1000A3F28) + 36);
  uint64_t v10 = *(void *)(a1 + v9);
  swift_retain();
  *(void *)(a2 + v9) = v10;
  uint64_t v11 = *(void *)(a1 + v9 + 8);
  swift_retain();
  *(void *)(a2 + v9 + 8) = v11;
  uint64_t v12 = *(int *)(sub_100009334(&qword_1000A3F30) + 36);
  uint64_t v13 = *(void *)(a1 + v12);
  swift_retain();
  uint64_t v3 = a2 + v12;
  *(void *)uint64_t v3 = v13;
  *(unsigned char *)(v3 + 8) = *(unsigned char *)(a1 + v12 + 8);
  uint64_t v4 = sub_100009334(&qword_1000A3F38);
  memcpy((void *)(a2 + *(int *)(v4 + 36)), (const void *)(a1 + *(int *)(v4 + 36)), 0x70uLL);
  return a2;
}

unint64_t sub_10004B8B8()
{
  uint64_t v2 = qword_1000A3FB8;
  if (!qword_1000A3FB8)
  {
    sub_1000096C0(&qword_1000A3FB0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3FB8);
    return WitnessTable;
  }
  return v2;
}

char *sub_10004B93C(char *a1, char *a2)
{
  uint64_t v12 = sub_100009334(&qword_1000A3FC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100009334(&qword_1000A3F18);
    (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 32))(a2, a1);
    uint64_t v3 = sub_100009334(&qword_1000A3F20);
    *(_OWORD *)&a2[*(int *)(v3 + 36)] = *(_OWORD *)&a1[*(int *)(v3 + 36)];
    uint64_t v4 = sub_100009334(&qword_1000A3F28);
    *(_OWORD *)&a2[*(int *)(v4 + 36)] = *(_OWORD *)&a1[*(int *)(v4 + 36)];
    uint64_t v5 = sub_100009334(&qword_1000A3F30);
    uint64_t v6 = &a2[*(int *)(v5 + 36)];
    uint64_t v7 = &a1[*(int *)(v5 + 36)];
    *(void *)uint64_t v6 = *(void *)v7;
    v6[8] = v7[8];
    uint64_t v8 = sub_100009334(&qword_1000A3F38);
    memcpy(&a2[*(int *)(v8 + 36)], &a1[*(int *)(v8 + 36)], 0x70uLL);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(void *)(*(void *)(v12 - 8) + 64));
  }
  return a2;
}

void *sub_10004BAC0(uint64_t *a1, void *a2)
{
  sub_100009334(&qword_1000A3FC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100009334(&qword_1000A3F18);
    (*(void (**)(void *, uint64_t *))(*(void *)(v2 - 8) + 16))(a2, a1);
    uint64_t v3 = sub_100009334(&qword_1000A3F20);
    uint64_t v10 = (void *)((char *)a2 + *(int *)(v3 + 36));
    uint64_t v9 = (uint64_t *)((char *)a1 + *(int *)(v3 + 36));
    uint64_t v8 = *v9;
    swift_retain();
    *uint64_t v10 = v8;
    uint64_t v11 = v9[1];
    swift_retain();
    v10[1] = v11;
    uint64_t v4 = sub_100009334(&qword_1000A3F28);
    uint64_t v14 = (void *)((char *)a2 + *(int *)(v4 + 36));
    uint64_t v13 = (uint64_t *)((char *)a1 + *(int *)(v4 + 36));
    uint64_t v12 = *v13;
    swift_retain();
    *uint64_t v14 = v12;
    uint64_t v15 = v13[1];
    swift_retain();
    v14[1] = v15;
    uint64_t v5 = sub_100009334(&qword_1000A3F30);
    BOOL v18 = (char *)a2 + *(int *)(v5 + 36);
    unint64_t v17 = (char *)a1 + *(int *)(v5 + 36);
    uint64_t v16 = *(void *)v17;
    swift_retain();
    *(void *)BOOL v18 = v16;
    v18[8] = v17[8];
    uint64_t v6 = sub_100009334(&qword_1000A3F38);
    memcpy((char *)a2 + *(int *)(v6 + 36), (char *)a1 + *(int *)(v6 + 36), 0x70uLL);
  }
  else
  {
    uint64_t v19 = *a1;
    uint64_t v20 = a1[1];
    swift_retain();
    *a2 = v19;
    a2[1] = v20;
  }
  swift_storeEnumTagMultiPayload();
  return a2;
}

unint64_t sub_10004BCE8()
{
  uint64_t v2 = qword_1000A3FC8;
  if (!qword_1000A3FC8)
  {
    sub_1000096C0(&qword_1000A3F40);
    sub_10004B8B8();
    sub_10004B658();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3FC8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004BD8C(uint64_t a1)
{
  sub_100009334(&qword_1000A3FC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100009334(&qword_1000A3F18);
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
    sub_100009334(&qword_1000A3F20);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3F28);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3F30);
  }
  swift_release();
  return a1;
}

uint64_t sub_10004BEA4()
{
  uint64_t v9 = type metadata accessor for MessageListView();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v10 = (v1 + 16) & ~v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v10 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v8 + v10 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v6 = sub_1000895A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  if (*(void *)(v8 + v10 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = v8 + v10 + *(int *)(v9 + 20);
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

__n128 sub_10004C180(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  uint64_t v2 = type metadata accessor for Mailbox();
  uint64_t v13 = (void *)(a2 + *(int *)(v2 + 28));
  uint64_t v14 = (const void *)(a1 + *(int *)(v2 + 28));
  uint64_t v15 = sub_1000895A0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v16 + 48))(v14, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(v13, v14, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v4 = type metadata accessor for Snapshot();
  uint64_t v11 = a2 + *(int *)(v4 + 20);
  uint64_t v12 = a1 + *(int *)(v4 + 20);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_WORD *)(v11 + 16) = *(_WORD *)(v12 + 16);
  uint64_t v7 = type metadata accessor for MessageListView();
  __dst = (void *)(a2 + *(int *)(v7 + 20));
  __src = (void *)(a1 + *(int *)(v7 + 20));
  uint64_t v10 = sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_100089EF0();
    (*(void (**)(void *, void *))(*(void *)(v5 - 8) + 32))(__dst, __src);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(__dst, __src, *(void *)(*(void *)(v10 - 8) + 64));
  }
  __n128 result = *(__n128 *)(a1 + *(int *)(v7 + 24));
  *(__n128 *)(a2 + *(int *)(v7 + 24)) = result;
  return result;
}

uint64_t sub_10004C4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v8 = *(void *)(type metadata accessor for MessageListView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v4 = *(void *)(v2 + ((v3 + *(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100046AB0(a1, v2 + v3, v4, a2);
}

unint64_t sub_10004C550()
{
  uint64_t v2 = qword_1000A3FD8;
  if (!qword_1000A3FD8)
  {
    sub_1000096C0(&qword_1000A3FD0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3FD8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10004C5D4()
{
  uint64_t v2 = qword_1000A3FF0;
  if (!qword_1000A3FF0)
  {
    type metadata accessor for MessageView();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A3FF0);
    return WitnessTable;
  }
  return v2;
}

void *sub_10004C658(void *a1, void *a2)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(void *, void *))(*(void *)(v2 - 8) + 16))(a2, a1);
  }
  else
  {
    uint64_t v38 = *a1;
    swift_retain();
    *a2 = v38;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (int *)type metadata accessor for MessageView();
  unint64_t v31 = (void *)((char *)a2 + v24[5]);
  unint64_t v33 = (void *)((char *)a1 + v24[5]);
  *unint64_t v31 = *v33;
  uint64_t v25 = v33[1];
  swift_bridgeObjectRetain();
  v31[1] = v25;
  v31[2] = v33[2];
  uint64_t v26 = v33[3];
  swift_bridgeObjectRetain();
  v31[3] = v26;
  v31[4] = v33[4];
  uint64_t v27 = v33[5];
  swift_bridgeObjectRetain();
  v31[5] = v27;
  v31[6] = v33[6];
  uint64_t v28 = v33[7];
  swift_bridgeObjectRetain();
  v31[7] = v28;
  uint64_t v32 = (int *)type metadata accessor for Message();
  uint64_t v30 = (char *)v31 + v32[8];
  uint64_t v29 = (char *)v33 + v32[8];
  uint64_t v3 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 16))(v30, v29);
  *((unsigned char *)v31 + v32[9]) = *((unsigned char *)v33 + v32[9]);
  *((unsigned char *)v31 + v32[10]) = *((unsigned char *)v33 + v32[10]);
  *((unsigned char *)v31 + v32[11]) = *((unsigned char *)v33 + v32[11]);
  *((unsigned char *)v31 + v32[12]) = *((unsigned char *)v33 + v32[12]);
  uint64_t v4 = (char *)v31 + v32[13];
  uint64_t v5 = (char *)v33 + v32[13];
  *(void *)uint64_t v4 = *(void *)v5;
  v4[8] = v5[8];
  *((unsigned char *)v31 + v32[14]) = *((unsigned char *)v33 + v32[14]);
  unsigned int v34 = (char *)v31 + v32[15];
  uint64_t v35 = (char *)v33 + v32[15];
  uint64_t v36 = sub_1000895A0();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v37 + 48))(v35, 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(v34, v35, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  *(void *)((char *)a2 + v24[6]) = *(void *)((char *)a1 + v24[6]);
  *((unsigned char *)a2 + v24[7]) = *((unsigned char *)a1 + v24[7]);
  uint64_t v15 = (char *)a2 + v24[8];
  uint64_t v14 = (char *)a1 + v24[8];
  uint64_t v7 = sub_100009334(&qword_1000A3FF8);
  (*(void (**)(char *, char *))(*(void *)(v7 - 8) + 16))(v15, v14);
  uint64_t v16 = (void *)((char *)a2 + v24[9]);
  uint64_t v8 = (void *)((char *)a1 + v24[9]);
  *uint64_t v16 = *v8;
  uint64_t v17 = v8[1];
  swift_retain();
  v16[1] = v17;
  uint64_t v9 = v24[10];
  BOOL v18 = (char *)a2 + v9;
  *(void *)((char *)a2 + v9) = *(void *)((char *)a1 + v9);
  uint64_t v19 = *(void *)((char *)a1 + v9 + 8);
  swift_retain();
  *((void *)v18 + 1) = v19;
  uint64_t v10 = v24[11];
  uint64_t v20 = (char *)a2 + v10;
  *(void *)((char *)a2 + v10) = *(void *)((char *)a1 + v10);
  uint64_t v21 = *(void *)((char *)a1 + v10 + 8);
  swift_retain();
  *((void *)v20 + 1) = v21;
  uint64_t v22 = (void *)((char *)a2 + v24[12]);
  long long v23 = (void *)((char *)a1 + v24[12]);
  sub_100009334(&qword_1000A4000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_100089940();
    (*(void (**)(void *, uint64_t *))(*(void *)(v11 - 8) + 16))(v22, v23);
  }
  else
  {
    uint64_t v13 = *v23;
    swift_retain();
    void *v22 = v13;
  }
  swift_storeEnumTagMultiPayload();
  return a2;
}

uint64_t sub_10004CC64(uint64_t a1)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EC0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = (int *)type metadata accessor for MessageView();
  uint64_t v11 = a1 + v8[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for Message();
  uint64_t v9 = v11 + *(int *)(v10 + 32);
  uint64_t v2 = sub_100089630();
  (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v9);
  uint64_t v12 = v11 + *(int *)(v10 + 60);
  uint64_t v13 = sub_1000895A0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(v12, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v6 = a1 + v8[8];
  uint64_t v3 = sub_100009334(&qword_1000A3FF8);
  (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v6);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = a1 + v8[12];
  sub_100009334(&qword_1000A4000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100089940();
    (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v7);
  }
  else
  {
    swift_release();
  }
  return a1;
}

unint64_t sub_10004CF60()
{
  uint64_t v2 = qword_1000A4008;
  if (!qword_1000A4008)
  {
    sub_1000096C0(&qword_1000A3FE0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4008);
    return WitnessTable;
  }
  return v2;
}

char *sub_10004CFE4(char *a1, char *a2)
{
  sub_100009334(&qword_1000A4010);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EC0();
      (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(a2, a1);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a2, a1, *(void *)(*(void *)(v26 - 8) + 64));
    }
    uint64_t v16 = (int *)type metadata accessor for MessageView();
    uint64_t v19 = &a2[v16[5]];
    uint64_t v21 = &a1[v16[5]];
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
    *((_OWORD *)v19 + 1) = *((_OWORD *)v21 + 1);
    *((_OWORD *)v19 + 2) = *((_OWORD *)v21 + 2);
    *((_OWORD *)v19 + 3) = *((_OWORD *)v21 + 3);
    uint64_t v20 = (int *)type metadata accessor for Message();
    BOOL v18 = &v19[v20[8]];
    uint64_t v17 = &v21[v20[8]];
    uint64_t v4 = sub_100089630();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(v18, v17);
    v19[v20[9]] = v21[v20[9]];
    v19[v20[10]] = v21[v20[10]];
    v19[v20[11]] = v21[v20[11]];
    v19[v20[12]] = v21[v20[12]];
    uint64_t v5 = &v19[v20[13]];
    uint64_t v6 = &v21[v20[13]];
    *(void *)uint64_t v5 = *(void *)v6;
    v5[8] = v6[8];
    v19[v20[14]] = v21[v20[14]];
    uint64_t v22 = &v19[v20[15]];
    long long v23 = &v21[v20[15]];
    uint64_t v24 = sub_1000895A0();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v25 + 48))(v23, 1))
    {
      uint64_t v7 = sub_100009334(&qword_1000A3B40);
      memcpy(v22, v23, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    *(void *)&a2[v16[6]] = *(void *)&a1[v16[6]];
    a2[v16[7]] = a1[v16[7]];
    uint64_t v12 = &a2[v16[8]];
    uint64_t v11 = &a1[v16[8]];
    uint64_t v8 = sub_100009334(&qword_1000A3FF8);
    (*(void (**)(char *, char *))(*(void *)(v8 - 8) + 32))(v12, v11);
    *(_OWORD *)&a2[v16[9]] = *(_OWORD *)&a1[v16[9]];
    *(_OWORD *)&a2[v16[10]] = *(_OWORD *)&a1[v16[10]];
    *(_OWORD *)&a2[v16[11]] = *(_OWORD *)&a1[v16[11]];
    __dst = &a2[v16[12]];
    __src = &a1[v16[12]];
    uint64_t v15 = sub_100009334(&qword_1000A4000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_100089940();
      (*(void (**)(char *, char *))(*(void *)(v9 - 8) + 32))(__dst, __src);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(__dst, __src, *(void *)(*(void *)(v15 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v2 = sub_100009334(&qword_1000A3FE0);
    (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

void *sub_10004D584(void *a1, void *a2)
{
  sub_100009334(&qword_1000A4010);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EC0();
      (*(void (**)(void *, void *))(*(void *)(v3 - 8) + 16))(a2, a1);
    }
    else
    {
      uint64_t v39 = *a1;
      swift_retain();
      *a2 = v39;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = (int *)type metadata accessor for MessageView();
    uint64_t v32 = (void *)((char *)a2 + v25[5]);
    unsigned int v34 = (void *)((char *)a1 + v25[5]);
    *uint64_t v32 = *v34;
    uint64_t v26 = v34[1];
    swift_bridgeObjectRetain();
    v32[1] = v26;
    v32[2] = v34[2];
    uint64_t v27 = v34[3];
    swift_bridgeObjectRetain();
    v32[3] = v27;
    _DWORD v32[4] = v34[4];
    uint64_t v28 = v34[5];
    swift_bridgeObjectRetain();
    v32[5] = v28;
    v32[6] = v34[6];
    uint64_t v29 = v34[7];
    swift_bridgeObjectRetain();
    v32[7] = v29;
    unint64_t v33 = (int *)type metadata accessor for Message();
    unint64_t v31 = (char *)v32 + v33[8];
    uint64_t v30 = (char *)v34 + v33[8];
    uint64_t v4 = sub_100089630();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v31, v30);
    *((unsigned char *)v32 + v33[9]) = *((unsigned char *)v34 + v33[9]);
    *((unsigned char *)v32 + v33[10]) = *((unsigned char *)v34 + v33[10]);
    *((unsigned char *)v32 + v33[11]) = *((unsigned char *)v34 + v33[11]);
    *((unsigned char *)v32 + v33[12]) = *((unsigned char *)v34 + v33[12]);
    uint64_t v5 = (char *)v32 + v33[13];
    uint64_t v6 = (char *)v34 + v33[13];
    *(void *)uint64_t v5 = *(void *)v6;
    v5[8] = v6[8];
    *((unsigned char *)v32 + v33[14]) = *((unsigned char *)v34 + v33[14]);
    uint64_t v35 = (char *)v32 + v33[15];
    uint64_t v36 = (char *)v34 + v33[15];
    uint64_t v37 = sub_1000895A0();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v38 + 48))(v36, 1))
    {
      uint64_t v7 = sub_100009334(&qword_1000A3B40);
      memcpy(v35, v36, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    *(void *)((char *)a2 + v25[6]) = *(void *)((char *)a1 + v25[6]);
    *((unsigned char *)a2 + v25[7]) = *((unsigned char *)a1 + v25[7]);
    uint64_t v16 = (char *)a2 + v25[8];
    uint64_t v15 = (char *)a1 + v25[8];
    uint64_t v8 = sub_100009334(&qword_1000A3FF8);
    (*(void (**)(char *, char *))(*(void *)(v8 - 8) + 16))(v16, v15);
    uint64_t v17 = (void *)((char *)a2 + v25[9]);
    uint64_t v9 = (void *)((char *)a1 + v25[9]);
    *uint64_t v17 = *v9;
    uint64_t v18 = v9[1];
    swift_retain();
    v17[1] = v18;
    uint64_t v10 = v25[10];
    uint64_t v19 = (char *)a2 + v10;
    *(void *)((char *)a2 + v10) = *(void *)((char *)a1 + v10);
    uint64_t v20 = *(void *)((char *)a1 + v10 + 8);
    swift_retain();
    *((void *)v19 + 1) = v20;
    uint64_t v11 = v25[11];
    uint64_t v21 = (char *)a2 + v11;
    *(void *)((char *)a2 + v11) = *(void *)((char *)a1 + v11);
    uint64_t v22 = *(void *)((char *)a1 + v11 + 8);
    swift_retain();
    *((void *)v21 + 1) = v22;
    long long v23 = (void *)((char *)a2 + v25[12]);
    uint64_t v24 = (void *)((char *)a1 + v25[12]);
    sub_100009334(&qword_1000A4000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100089940();
      (*(void (**)(void *, uint64_t *))(*(void *)(v12 - 8) + 16))(v23, v24);
    }
    else
    {
      uint64_t v14 = *v24;
      swift_retain();
      void *v23 = v14;
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v2 = sub_100009334(&qword_1000A3FE0);
    (*(void (**)(void *, void *))(*(void *)(v2 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

unint64_t sub_10004DC24()
{
  uint64_t v2 = qword_1000A4018;
  if (!qword_1000A4018)
  {
    sub_1000096C0(&qword_1000A3FE8);
    sub_10004CF60();
    sub_10004C5D4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4018);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10004DCC8(uint64_t a1)
{
  sub_100009334(&qword_1000A4010);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v2 = sub_100089EC0();
      (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(a1);
    }
    else
    {
      swift_release();
    }
    uint64_t v9 = (int *)type metadata accessor for MessageView();
    uint64_t v12 = a1 + v9[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = type metadata accessor for Message();
    uint64_t v10 = v12 + *(int *)(v11 + 32);
    uint64_t v3 = sub_100089630();
    (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v10);
    uint64_t v13 = v12 + *(int *)(v11 + 60);
    uint64_t v14 = sub_1000895A0();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v15 + 48))(v13, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v7 = a1 + v9[8];
    uint64_t v4 = sub_100009334(&qword_1000A3FF8);
    (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v7);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v8 = a1 + v9[12];
    sub_100009334(&qword_1000A4000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_100089940();
      (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v8);
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    uint64_t v1 = sub_100009334(&qword_1000A3FE0);
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  return a1;
}

uint64_t sub_10004E030@<X0>(uint64_t a1@<X8>)
{
  return sub_10004B298(*(void *)(v1 + 16), a1);
}

unint64_t sub_10004E038(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v29 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v29 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    swift_retain();
    *(void *)a1 = v24;
    return *(void *)a1 + ((v29 + 16) & ~(unint64_t)v29);
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v22 = a2[1];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 8) = v22;
    uint64_t v23 = a2[2];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 16) = v23;
    if ((unint64_t)a2[4] <= 5)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    }
    else
    {
      *(void *)(a1 + 24) = a2[3];
      uint64_t v21 = a2[4];
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v21;
    }
    uint64_t v3 = type metadata accessor for Mailbox();
    __dst = (void *)(a1 + *(int *)(v3 + 28));
    __src = (char *)a2 + *(int *)(v3 + 28);
    uint64_t v19 = sub_1000895A0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v20 + 48))(__src, 1))
    {
      uint64_t v4 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 16))(__dst, __src, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v5 = type metadata accessor for Snapshot();
    uint64_t v15 = a1 + *(int *)(v5 + 20);
    uint64_t v16 = (uint64_t *)((char *)a2 + *(int *)(v5 + 20));
    if ((unint64_t)*v16 < 2)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *(_WORD *)(v15 + 16) = *((_WORD *)v16 + 8);
    }
    else
    {
      uint64_t v14 = *v16;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v15 = v14;
      *(void *)(v15 + 8) = v16[1];
      *(unsigned char *)(v15 + 16) = *((unsigned char *)v16 + 16);
      *(unsigned char *)(v15 + 17) = *((unsigned char *)v16 + 17);
    }
    uint64_t v12 = (void *)(a1 + *(int *)(a3 + 20));
    uint64_t v13 = (uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100089EF0();
      (*(void (**)(void *, uint64_t *))(*(void *)(v6 - 8) + 16))(v12, v13);
    }
    else
    {
      uint64_t v11 = *v13;
      swift_retain();
      *uint64_t v12 = v11;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v7;
    *(void *)(a1 + v7) = *(uint64_t *)((char *)a2 + v7);
    uint64_t v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    swift_retain();
    *(void *)(v9 + 8) = v10;
    return a1;
  }
}

uint64_t sub_10004E474(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v6 = sub_1000895A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  if (*(void *)(a1 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v4);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

uint64_t sub_10004E678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v23 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v23;
  uint64_t v25 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v25;
  if (*(void *)(a2 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v21 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v21;
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = (void *)(a1 + *(int *)(v3 + 28));
  uint64_t v18 = (const void *)(a2 + *(int *)(v3 + 28));
  uint64_t v19 = sub_1000895A0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v20 + 48))(v18, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, v18, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(__dst, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v15 = a1 + *(int *)(v5 + 20);
  uint64_t v16 = (uint64_t *)(a2 + *(int *)(v5 + 20));
  if ((unint64_t)*v16 < 2)
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_WORD *)(v15 + 16) = *((_WORD *)v16 + 8);
  }
  else
  {
    uint64_t v14 = *v16;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v15 = v14;
    *(void *)(v15 + 8) = v16[1];
    *(unsigned char *)(v15 + 16) = *((unsigned char *)v16 + 16);
    *(unsigned char *)(v15 + 17) = *((unsigned char *)v16 + 17);
  }
  uint64_t v12 = (void *)(a1 + *(int *)(a3 + 20));
  uint64_t v13 = (uint64_t *)(a2 + *(int *)(a3 + 20));
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100089EF0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v6 - 8) + 16))(v12, v13);
  }
  else
  {
    uint64_t v11 = *v13;
    swift_retain();
    *uint64_t v12 = v11;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  swift_retain();
  uint64_t result = a1;
  *(void *)(v9 + 8) = v10;
  return result;
}

uint64_t sub_10004EA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v27 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v29;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    if (*(void *)(a2 + 32) <= 5uLL)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v24 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v24;
    }
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v25 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v25;
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = (void *)(a1 + *(int *)(v3 + 28));
  __src = (void *)(a2 + *(int *)(v3 + 28));
  uint64_t v21 = sub_1000895A0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48);
  if (((unsigned int (*)(void *, uint64_t))v23)(__dst, 1))
  {
    if (v23(__src, 1, v21))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 16))(__dst, __src, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
  }
  else if (v23(__src, 1, v21))
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(__dst, v21);
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v22 + 24))(__dst, __src, v21);
  }
  uint64_t v6 = type metadata accessor for Snapshot();
  uint64_t v17 = a1 + *(int *)(v6 + 20);
  uint64_t v18 = (uint64_t *)(a2 + *(int *)(v6 + 20));
  if (*(void *)v17 < 2uLL)
  {
    if ((unint64_t)*v18 < 2)
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *(_WORD *)(v17 + 16) = *((_WORD *)v18 + 8);
    }
    else
    {
      uint64_t v15 = *v18;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v17 = v15;
      *(void *)(v17 + 8) = v18[1];
      *(unsigned char *)(v17 + 16) = *((unsigned char *)v18 + 16);
      *(unsigned char *)(v17 + 17) = *((unsigned char *)v18 + 17);
    }
  }
  else if ((unint64_t)*v18 < 2)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_WORD *)(v17 + 16) = *((_WORD *)v18 + 8);
  }
  else
  {
    uint64_t v16 = *v18;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    *(void *)(v17 + 8) = v18[1];
    *(unsigned char *)(v17 + 16) = *((unsigned char *)v18 + 16);
    *(unsigned char *)(v17 + 17) = *((unsigned char *)v18 + 17) & 1;
  }
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(a3 + 20));
  uint64_t v14 = (uint64_t *)(a2 + *(int *)(a3 + 20));
  if (v13 != v14)
  {
    sub_100045BF0((uint64_t)v13);
    sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100089EF0();
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v7 - 8) + 16))(v13, v14);
    }
    else
    {
      uint64_t v12 = *v14;
      swift_retain();
      *uint64_t v13 = v12;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = (void *)(a1 + *(int *)(a3 + 24));
  uint64_t v8 = (void *)(a2 + *(int *)(a3 + 24));
  *uint64_t v10 = *v8;
  uint64_t v11 = v8[1];
  swift_retain();
  v10[1] = v11;
  swift_release();
  return a1;
}

__n128 sub_10004F084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = (void *)(a1 + *(int *)(v3 + 28));
  uint64_t v14 = (const void *)(a2 + *(int *)(v3 + 28));
  uint64_t v15 = sub_1000895A0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v16 + 48))(v14, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, v14, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(__dst, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v11 = a1 + *(int *)(v5 + 20);
  uint64_t v12 = a2 + *(int *)(v5 + 20);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_WORD *)(v11 + 16) = *(_WORD *)(v12 + 16);
  uint64_t v8 = (void *)(a1 + *(int *)(a3 + 20));
  __src = (void *)(a2 + *(int *)(a3 + 20));
  uint64_t v10 = sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100089EF0();
    (*(void (**)(void *, void *))(*(void *)(v6 - 8) + 32))(v8, __src);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, __src, *(void *)(*(void *)(v10 - 8) + 64));
  }
  __n128 result = *(__n128 *)(a2 + *(int *)(a3 + 24));
  *(__n128 *)(a1 + *(int *)(a3 + 24)) = result;
  return result;
}

uint64_t sub_10004F3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  uint64_t v17 = (void *)(a1 + *(int *)(v3 + 28));
  __src = (void *)(a2 + *(int *)(v3 + 28));
  uint64_t v18 = sub_1000895A0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48);
  if (((unsigned int (*)(void *, uint64_t))v20)(v17, 1))
  {
    if (v20(__src, 1, v18))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3B40);
      memcpy(v17, __src, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v17, __src, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
    }
  }
  else if (v20(__src, 1, v18))
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v17, v18);
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(v17, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v17, __src, v18);
  }
  uint64_t v6 = type metadata accessor for Snapshot();
  uint64_t v14 = a1 + *(int *)(v6 + 20);
  uint64_t v15 = a2 + *(int *)(v6 + 20);
  if (*(void *)v14 < 2uLL)
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  }
  else if (*(void *)v15 < 2uLL)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  }
  else
  {
    *(void *)uint64_t v14 = *(void *)v15;
    swift_bridgeObjectRelease();
    *(void *)(v14 + 8) = *(void *)(v15 + 8);
    *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
    *(unsigned char *)(v14 + 17) = *(unsigned char *)(v15 + 17) & 1;
  }
  __dst = (void *)(a1 + *(int *)(a3 + 20));
  uint64_t v13 = (void *)(a2 + *(int *)(a3 + 20));
  if (__dst != v13)
  {
    sub_100045BF0((uint64_t)__dst);
    uint64_t v11 = sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100089EF0();
      (*(void (**)(void *, void *))(*(void *)(v7 - 8) + 32))(__dst, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(__dst, v13, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v8 = (void *)(a1 + *(int *)(a3 + 24));
  uint64_t v9 = (void *)(a2 + *(int *)(a3 + 24));
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_release();
  return a1;
}

uint64_t sub_10004F964()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_10004F98C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v11 = type metadata accessor for Snapshot();
  if (a2 == *(_DWORD *)(*(void *)(v11 - 8) + 84))
  {
    return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 48))(a1, a2, v11);
  }
  else
  {
    uint64_t v6 = sub_100009334(&qword_1000A3EF8);
    if (a2 == *(_DWORD *)(*(void *)(v6 - 8) + 84))
    {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v6);
    }
    else if (a2 == 2147483646)
    {
      int v5 = -1;
      if (*(void *)(a1 + *(int *)(a3 + 24) + 8) < (unint64_t)&_mh_execute_header) {
        int v5 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
      }
      int v3 = v5 - 1;
      if (v5 - 1 < 0) {
        int v3 = -1;
      }
      return (v3 + 1);
    }
    else
    {
      __break(1u);
    }
  }
  return v7;
}

uint64_t sub_10004FB6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_10004FB94(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for Snapshot();
  if (a3 == *(_DWORD *)(*(void *)(v9 - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(v9 - 8) + 56))(a1, a2, a2, v9);
  }
  uint64_t result = sub_100009334(&qword_1000A3EF8);
  if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  }
  if (a3 == 2147483646) {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004FD34()
{
  uint64_t v3 = type metadata accessor for Snapshot();
  if (v0 <= 0x3F)
  {
    uint64_t v3 = sub_10004FE78();
    if (v1 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10004FE78()
{
  uint64_t v4 = qword_1000A4088;
  if (!qword_1000A4088)
  {
    sub_100089EF0();
    unint64_t v3 = sub_100089720();
    uint64_t v4 = v3;
    if (!v0)
    {
      unint64_t v1 = v3;
      atomic_store(v3, (unint64_t *)&qword_1000A4088);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_10004FF20()
{
  return sub_10004BCE8();
}

unint64_t sub_10004FF38()
{
  return sub_10004DC24();
}

uint64_t sub_10004FF50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004FF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100060EF8(a1, a2);
}

uint64_t sub_10004FF9C@<X0>(uint64_t a1@<X8>)
{
  return sub_100046DD4(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_10004FFAC()
{
  uint64_t v2 = qword_1000A40C8;
  if (!qword_1000A40C8)
  {
    sub_1000096C0(&qword_1000A40C0);
    sub_100050050();
    sub_100043558();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A40C8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100050050()
{
  uint64_t v2 = qword_1000A40D0;
  if (!qword_1000A40D0)
  {
    sub_1000096C0(&qword_1000A40D8);
    sub_1000500E4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A40D0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1000500E4()
{
  uint64_t v2 = qword_1000A40E0;
  if (!qword_1000A40E0)
  {
    sub_1000096C0(&qword_1000A40E8);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A40E0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100050168(uint64_t a1)
{
  sub_100009334(&qword_1000A40F0);
  uint64_t v1 = sub_100009334(&qword_1000A40D8);
  (*(void (**)(void))(*(void *)(v1 - 8) + 8))();
  sub_100009334(&qword_1000A40C0);
  swift_release();
  return a1;
}

uint64_t sub_100050204(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v4 = *(int *)(sub_100009334(&qword_1000A40F0) + 44);
  uint64_t v2 = sub_100009334(&qword_1000A40D8);
  (*(void (**)(void))(*(void *)(v2 - 8) + 16))();
  uint64_t v7 = *(int *)(sub_100009334(&qword_1000A40C0) + 36);
  uint64_t v8 = *(void *)(a1 + v4 + v7);
  swift_retain();
  uint64_t result = a2;
  *(void *)(a2 + v4 + v7) = v8;
  return result;
}

unint64_t sub_1000502E8()
{
  uint64_t v2 = qword_1000A40F8;
  if (!qword_1000A40F8)
  {
    sub_100089EF0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A40F8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10005036C()
{
  uint64_t v2 = qword_1000A4108;
  if (!qword_1000A4108)
  {
    sub_1000096C0(&qword_1000A4100);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4108);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1000503F0()
{
}

unint64_t sub_10005041C()
{
  uint64_t v2 = qword_1000A4120;
  if (!qword_1000A4120)
  {
    sub_1000096C0(&qword_1000A4118);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4120);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000504A0()
{
  uint64_t v9 = type metadata accessor for MessageListView();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v11 = (v1 + 16) & ~v1;
  uint64_t v10 = v11 + *(void *)(*(void *)(v9 - 8) + 64);
  uint64_t v12 = sub_1000897A0();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (v10 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v11 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v8 + v11 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v6 = sub_1000895A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  if (*(void *)(v8 + v11 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = v8 + v11 + *(int *)(v9 + 20);
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v8 + v14, v12);
  return swift_deallocObject();
}

uint64_t sub_100050838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v10 = *(void *)(type metadata accessor for MessageListView() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v11 = v13 + *(void *)(v10 + 64);
  uint64_t v4 = sub_1000897A0();
  unint64_t v5 = (v11 + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  unint64_t v6 = (v5 + *(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  double v7 = *(double *)(v3 + v6);
  uint64_t v8 = *(void *)(v3 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100048168(a1, a2, v3 + v13, v3 + v5, v8, a3, v7);
}

uint64_t sub_10005097C()
{
  return swift_deallocObject();
}

uint64_t sub_1000509BC(char *a1)
{
  return sub_1000499E8(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 16));
}

unint64_t sub_1000509C8()
{
  uint64_t v2 = qword_1000A4130;
  if (!qword_1000A4130)
  {
    sub_1000096C0(&qword_1000A4128);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4130);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100050A4C(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A40D8);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  sub_100009334(&qword_1000A40C0);
  swift_release();
  return a1;
}

uint64_t sub_100050ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_100009334(&qword_1000A40D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a2, a1);
  uint64_t v6 = *(int *)(sub_100009334(&qword_1000A40C0) + 36);
  uint64_t v7 = *(void *)(a1 + v6);
  swift_retain();
  uint64_t result = a2;
  *(void *)(a2 + v6) = v7;
  return result;
}

unint64_t sub_100050B6C()
{
  uint64_t v2 = qword_1000A4158;
  if (!qword_1000A4158)
  {
    sub_1000096C0(&qword_1000A4150);
    sub_10004DC24();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4158);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100050C0C()
{
  uint64_t v2 = qword_1000A4160;
  if (!qword_1000A4160)
  {
    sub_1000096C0(&qword_1000A4140);
    sub_100089DA0();
    sub_100050CF8();
    swift_getOpaqueTypeConformance2();
    sub_100050D7C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4160);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100050CF8()
{
  uint64_t v2 = qword_1000A4168;
  if (!qword_1000A4168)
  {
    sub_100089DA0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4168);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100050D7C()
{
  uint64_t v2 = qword_1000A4170;
  if (!qword_1000A4170)
  {
    sub_1000096C0(&qword_1000A4178);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4170);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100050E00(uint64_t a1)
{
  uint64_t v4 = sub_100009334(&qword_1000A4140);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1))
  {
    uint64_t v1 = sub_100009334(&qword_1000A4138);
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
    swift_release();
    swift_release();
  }
  return a1;
}

char *sub_100050EE0(char *a1, char *a2)
{
  uint64_t v7 = sub_100009334(&qword_1000A4140);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 48))(a1, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A4148);
    memcpy(a2, a1, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    uint64_t v2 = sub_100009334(&qword_1000A4138);
    (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 32))(a2, a1);
    memcpy(&a2[*(int *)(v7 + 36)], &a1[*(int *)(v7 + 36)], 0x30uLL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
  return a2;
}

void *sub_100051040(void *a1, void *a2)
{
  sub_100009334(&qword_1000A4010);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EC0();
      (*(void (**)(void *, void *))(*(void *)(v3 - 8) + 16))(a2, a1);
    }
    else
    {
      uint64_t v40 = *a1;
      swift_retain();
      *a2 = v40;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = (int *)type metadata accessor for MessageView();
    unint64_t v33 = (void *)((char *)a2 + v26[5]);
    uint64_t v35 = (void *)((char *)a1 + v26[5]);
    void *v33 = *v35;
    uint64_t v27 = v35[1];
    swift_bridgeObjectRetain();
    v33[1] = v27;
    v33[2] = v35[2];
    uint64_t v28 = v35[3];
    swift_bridgeObjectRetain();
    v33[3] = v28;
    v33[4] = v35[4];
    uint64_t v29 = v35[5];
    swift_bridgeObjectRetain();
    v33[5] = v29;
    v33[6] = v35[6];
    uint64_t v30 = v35[7];
    swift_bridgeObjectRetain();
    v33[7] = v30;
    unsigned int v34 = (int *)type metadata accessor for Message();
    uint64_t v32 = (char *)v33 + v34[8];
    unint64_t v31 = (char *)v35 + v34[8];
    uint64_t v4 = sub_100089630();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v32, v31);
    *((unsigned char *)v33 + v34[9]) = *((unsigned char *)v35 + v34[9]);
    *((unsigned char *)v33 + v34[10]) = *((unsigned char *)v35 + v34[10]);
    *((unsigned char *)v33 + v34[11]) = *((unsigned char *)v35 + v34[11]);
    *((unsigned char *)v33 + v34[12]) = *((unsigned char *)v35 + v34[12]);
    unint64_t v5 = (char *)v33 + v34[13];
    uint64_t v6 = (char *)v35 + v34[13];
    *(void *)unint64_t v5 = *(void *)v6;
    v5[8] = v6[8];
    *((unsigned char *)v33 + v34[14]) = *((unsigned char *)v35 + v34[14]);
    uint64_t v36 = (char *)v33 + v34[15];
    uint64_t v37 = (char *)v35 + v34[15];
    uint64_t v38 = sub_1000895A0();
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v39 + 48))(v37, 1))
    {
      uint64_t v7 = sub_100009334(&qword_1000A3B40);
      memcpy(v36, v37, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    *(void *)((char *)a2 + v26[6]) = *(void *)((char *)a1 + v26[6]);
    *((unsigned char *)a2 + v26[7]) = *((unsigned char *)a1 + v26[7]);
    uint64_t v17 = (char *)a2 + v26[8];
    uint64_t v16 = (char *)a1 + v26[8];
    uint64_t v8 = sub_100009334(&qword_1000A3FF8);
    (*(void (**)(char *, char *))(*(void *)(v8 - 8) + 16))(v17, v16);
    uint64_t v18 = (void *)((char *)a2 + v26[9]);
    uint64_t v9 = (void *)((char *)a1 + v26[9]);
    *uint64_t v18 = *v9;
    uint64_t v19 = v9[1];
    swift_retain();
    v18[1] = v19;
    uint64_t v10 = v26[10];
    uint64_t v20 = (char *)a2 + v10;
    *(void *)((char *)a2 + v10) = *(void *)((char *)a1 + v10);
    uint64_t v21 = *(void *)((char *)a1 + v10 + 8);
    swift_retain();
    *((void *)v20 + 1) = v21;
    uint64_t v11 = v26[11];
    uint64_t v22 = (char *)a2 + v11;
    *(void *)((char *)a2 + v11) = *(void *)((char *)a1 + v11);
    uint64_t v23 = *(void *)((char *)a1 + v11 + 8);
    swift_retain();
    *((void *)v22 + 1) = v23;
    uint64_t v24 = (void *)((char *)a2 + v26[12]);
    uint64_t v25 = (void *)((char *)a1 + v26[12]);
    sub_100009334(&qword_1000A4000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100089940();
      (*(void (**)(void *, uint64_t *))(*(void *)(v12 - 8) + 16))(v24, v25);
    }
    else
    {
      uint64_t v15 = *v25;
      swift_retain();
      *uint64_t v24 = v15;
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v2 = sub_100009334(&qword_1000A3FE0);
    (*(void (**)(void *, void *))(*(void *)(v2 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = sub_100009334(&qword_1000A4150);
  memcpy((char *)a2 + *(int *)(v13 + 36), (char *)a1 + *(int *)(v13 + 36), 0x30uLL);
  return a2;
}

char *sub_100051714(char *a1, char *a2)
{
  uint64_t v14 = sub_100009334(&qword_1000A4140);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 48))(a1, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A4148);
    memcpy(a2, a1, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v2 = sub_100009334(&qword_1000A4138);
    (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 16))(a2, a1);
    uint64_t v3 = *(int *)(v14 + 36);
    uint64_t v11 = &a2[v3];
    uint64_t v10 = &a1[v3];
    uint64_t v6 = *(void *)&a1[v3];
    uint64_t v7 = *(void *)&a1[v3 + 8];
    swift_retain();
    *(void *)uint64_t v11 = v6;
    *((void *)v11 + 1) = v7;
    uint64_t v8 = *((void *)v10 + 2);
    uint64_t v9 = *((void *)v10 + 3);
    swift_retain();
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = v9;
    *((_OWORD *)v11 + 2) = *((_OWORD *)v10 + 2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
  }
  return a2;
}

unint64_t sub_1000518D0()
{
  uint64_t v2 = qword_1000A4180;
  if (!qword_1000A4180)
  {
    sub_1000096C0(&qword_1000A4148);
    sub_100050C0C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4180);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100051964(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A4138);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  sub_100009334(&qword_1000A4140);
  swift_release();
  swift_release();
  return a1;
}

__n128 sub_1000519F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_100009334(&qword_1000A4138);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a2, a1);
  uint64_t v6 = *(int *)(sub_100009334(&qword_1000A4140) + 36);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  swift_retain();
  uint64_t v3 = (void *)(a2 + v6);
  uint64_t v12 = (__n128 *)(a2 + v6);
  *uint64_t v3 = v7;
  v3[1] = v8;
  unint64_t v10 = *(void *)(a1 + v6 + 16);
  unint64_t v11 = *(void *)(a1 + v6 + 24);
  swift_retain();
  v12[1].n128_u64[0] = v10;
  v12[1].n128_u64[1] = v11;
  __n128 result = *(__n128 *)(a1 + v6 + 32);
  v12[2] = result;
  return result;
}

unint64_t sub_100051AF4()
{
  uint64_t v2 = qword_1000A4188;
  if (!qword_1000A4188)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4188);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100051B70()
{
  uint64_t v2 = qword_1000A4190;
  if (!qword_1000A4190)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4190);
    return WitnessTable;
  }
  return v2;
}

void *sub_100051BEC(const void *a1, void *a2)
{
  uint64_t v8 = sub_100009334(&qword_1000A3F60);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v9 + 48))(a1, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3F48);
    memcpy(a2, a1, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    uint64_t v5 = sub_100009334(&qword_1000A3F70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v2 = sub_100009334(&qword_1000A3F78);
      (*(void (**)(void *, const void *))(*(void *)(v2 - 8) + 32))(a2, a1);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a2, a1, *(void *)(*(void *)(v5 - 8) + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
  return a2;
}

void *sub_100051D90(uint64_t *a1, void *a2)
{
  uint64_t v11 = sub_100009334(&qword_1000A3F60);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v12 + 48))(a1, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3F48);
    memcpy(a2, a1, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    sub_100009334(&qword_1000A3F70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v2 = sub_100009334(&qword_1000A3F78);
      (*(void (**)(void *, uint64_t *))(*(void *)(v2 - 8) + 16))(a2, a1);
    }
    else
    {
      uint64_t v5 = *a1;
      uint64_t v6 = a1[1];
      char v7 = *((unsigned char *)a1 + 16);
      sub_100051F7C(*a1, v6, v7 & 1);
      *a2 = v5;
      a2[1] = v6;
      *((unsigned char *)a2 + 16) = v7 & 1;
      uint64_t v8 = a1[3];
      swift_bridgeObjectRetain();
      a2[3] = v8;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  return a2;
}

uint64_t sub_100051F7C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100051FC0()
{
  uint64_t v9 = 0;
  uint64_t v1 = v0 + *(int *)(type metadata accessor for MessagesContentView() + 24);
  uint64_t v4 = *(void *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  sub_1000520F8(*(void *)v1, v3 & 1);
  sub_1000520F8(v4, v3 & 1);
  uint64_t v6 = v4;
  char v7 = v3 & 1;
  sub_100009334(&qword_1000A4198);
  sub_100089710();
  sub_10005212C((uint64_t)&v6);
  char v5 = v8;
  sub_100052164(v4, v3 & 1);
  return v5 & 1;
}

uint64_t type metadata accessor for MessagesContentView()
{
  uint64_t v1 = qword_1000A4260;
  if (!qword_1000A4260) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

uint64_t sub_1000520F8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10005212C(uint64_t a1)
{
}

uint64_t sub_100052164(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100052198@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v39 = 0;
  uint64_t v40 = sub_100053230;
  uint64_t v49 = 0;
  uint64_t v48 = 0;
  uint64_t v2 = type metadata accessor for MessagesContentView();
  unint64_t v22 = (*(void *)(*(void *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  uint64_t v44 = (uint64_t)v6 - v22;
  uint64_t v23 = sub_100009334(&qword_1000A41A0);
  unint64_t v24 = (*(void *)(*(void *)(v23 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v23);
  uint64_t v38 = (uint64_t)v6 - v24;
  uint64_t v25 = sub_100009334(&qword_1000A41A8);
  unint64_t v26 = (*(void *)(*(void *)(v25 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t)v6 - v26;
  uint64_t v28 = sub_100009334(&qword_1000A41B0);
  unint64_t v29 = (*(void *)(*(void *)(v28 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t)v6 - v29;
  uint64_t v31 = sub_100009334(&qword_1000A41B8);
  unint64_t v32 = (*(void *)(*(void *)(v31 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t)v6 - v32;
  unint64_t v34 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v6 - v32);
  uint64_t v35 = (uint64_t)v6 - v34;
  unint64_t v36 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v6 - v34);
  uint64_t v37 = (uint64_t)v6 - v36;
  uint64_t v49 = (char *)v6 - v36;
  uint64_t v48 = v1;
  uint64_t v43 = sub_100089960();
  sub_100052E2C(v1, v44);
  long long v41 = &v46;
  uint64_t v47 = v44;
  uint64_t v42 = sub_100009334(&qword_1000A41C0);
  sub_100053238();
  sub_100089D70();
  sub_1000532BC(v44);
  int v45 = sub_100089A20();
  if (sub_100051FC0()) {
    uint64_t v19 = 0x4030000000000000;
  }
  else {
    uint64_t v19 = 0;
  }
  int v20 = 0;
  int v17 = 0;
  uint64_t v16 = v19;
  sub_1000534E8();
  sub_100089C40();
  sub_10005356C(v38);
  int v18 = sub_100089A30();
  if (sub_100051FC0()) {
    uint64_t v14 = 0x4028000000000000;
  }
  else {
    uint64_t v14 = 0;
  }
  int v15 = 0;
  int v12 = 0;
  uint64_t v11 = v14;
  sub_1000539DC();
  sub_100089C40();
  sub_10005356C(v27);
  int v13 = sub_100089A40();
  if (sub_100051FC0()) {
    uint64_t v9 = 0x4010000000000000;
  }
  else {
    uint64_t v9 = 0;
  }
  int v10 = 0;
  int v7 = 0;
  v6[1] = v9;
  sub_100053A7C();
  sub_100089C40();
  sub_10005356C(v30);
  unint64_t v8 = sub_100053B1C();
  sub_100039F6C(v35, v31, v37);
  sub_10005356C(v35);
  sub_100053BBC(v37, v33);
  sub_100039F6C(v33, v31, v21);
  sub_10005356C(v33);
  return sub_10005356C(v37);
}

uint64_t sub_1000526F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v32 = a1;
  uint64_t v17 = 0;
  uint64_t v31 = &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>;
  uint64_t v60 = 0;
  uint64_t v59 = 0;
  uint64_t v58 = 0;
  uint64_t v57 = 0;
  uint64_t v37 = type metadata accessor for MessageListView();
  unint64_t v11 = (*(void *)(*(void *)(v37 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v43 = (uint64_t)&v11 - v11;
  unint64_t v12 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  uint64_t v46 = (uint64_t)&v11 - v12;
  uint64_t v60 = (char *)&v11 - v12;
  uint64_t v29 = sub_100089DA0();
  uint64_t v26 = *(void *)(v29 - 8);
  uint64_t v27 = v29 - 8;
  unint64_t v13 = (*(void *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v11 - v13;
  uint64_t v47 = sub_100009334(&qword_1000A4138);
  uint64_t v34 = *(void *)(v47 - 8);
  uint64_t v35 = v47 - 8;
  unint64_t v14 = (*(void *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v47);
  uint64_t v44 = (uint64_t)&v11 - v14;
  unint64_t v15 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v11 - v14);
  uint64_t v50 = (uint64_t)&v11 - v15;
  uint64_t v59 = (char *)&v11 - v15;
  unint64_t v16 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v17);
  unint64_t v22 = (char *)&v11 - v16;
  unint64_t v18 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v17);
  uint64_t v33 = (uint64_t)&v11 - v18;
  uint64_t v23 = type metadata accessor for MessageListHeaderView();
  unint64_t v19 = (*(void *)(*(void *)(v23 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v23);
  char v5 = (char *)&v11 - v19;
  uint64_t v25 = (uint64_t)&v11 - v19;
  uint64_t v36 = sub_100009334(&qword_1000A4200);
  unint64_t v20 = (*(void *)(*(void *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v32);
  int v45 = (unint64_t *)((char *)&v11 - v20);
  unint64_t v21 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v7);
  uint64_t v51 = (uint64_t *)((char *)&v11 - v21);
  uint64_t v58 = (char *)&v11 - v21;
  uint64_t v57 = v8;
  sub_10001FD60(v8, v9);
  sub_10003EFB8();
  sub_10003EFEC(v22, v33, v5);
  int v24 = sub_100089A40();
  sub_10003FBF8();
  sub_100089C40();
  sub_10003EAD4(v25);
  unint64_t v38 = sub_100056758();
  sub_100039F6C((uint64_t)v45, v36, (uint64_t)v51);
  sub_10003EAD4((uint64_t)v45);
  sub_100089D90();
  unint64_t v30 = sub_100050CF8();
  sub_1000458D8();
  sub_100089B10();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v29);
  v56[3] = v29;
  void v56[4] = v30;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100039F6C(v44, v47, v50);
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  uint64_t v48 = v34 + 8;
  v49(v44, v47);
  sub_10001FD60(v32, v33);
  sub_10004B3AC(v33, v43);
  unint64_t v40 = sub_1000567F8();
  sub_100039F6C(v43, v37, v46);
  sub_10004A7F0(v43);
  sub_10005687C(v51, v45);
  uint64_t v42 = v56;
  v56[0] = v45;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v44, v50, v47);
  v56[1] = v44;
  sub_10004A2C8(v46, v43);
  v56[2] = v43;
  v55[0] = v36;
  v55[1] = v47;
  v55[2] = v37;
  unint64_t v52 = v38;
  uint64_t v53 = OpaqueTypeConformance2;
  unint64_t v54 = v40;
  sub_10003ED48((uint64_t)v42, 3uLL, (uint64_t)v55, v41);
  sub_10004A7F0(v43);
  v49(v44, v47);
  sub_10003EAD4((uint64_t)v45);
  sub_10004A7F0(v46);
  v49(v50, v47);
  return sub_10003EAD4((uint64_t)v51);
}

uint64_t sub_100052E2C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  uint64_t v26 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 8) = v26;
  uint64_t v29 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a2 + 16) = v29;
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  }
  else
  {
    *(void *)(a2 + 24) = *(void *)(a1 + 24);
    uint64_t v25 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a2 + 32) = v25;
  }
  uint64_t v2 = type metadata accessor for Mailbox();
  unint64_t v21 = (void *)(a2 + *(int *)(v2 + 28));
  unint64_t v22 = (const void *)(a1 + *(int *)(v2 + 28));
  uint64_t v23 = sub_1000895A0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v24 + 48))(v22, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(v21, v22, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v4 = type metadata accessor for Snapshot();
  uint64_t v19 = a2 + *(int *)(v4 + 20);
  unint64_t v20 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  if ((unint64_t)*v20 < 2)
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_WORD *)(v19 + 16) = *((_WORD *)v20 + 8);
  }
  else
  {
    uint64_t v18 = *v20;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v19 = v18;
    *(void *)(v19 + 8) = v20[1];
    *(unsigned char *)(v19 + 16) = *((unsigned char *)v20 + 16);
    *(unsigned char *)(v19 + 17) = *((unsigned char *)v20 + 17);
  }
  unint64_t v15 = (int *)type metadata accessor for MessagesContentView();
  unint64_t v16 = (void *)(a2 + v15[5]);
  uint64_t v17 = (uint64_t *)(a1 + v15[5]);
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_100089EF0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v5 - 8) + 16))(v16, v17);
  }
  else
  {
    uint64_t v14 = *v17;
    swift_retain();
    *unint64_t v16 = v14;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a2 + v15[6];
  uint64_t v6 = a1 + v15[6];
  uint64_t v9 = *(void *)v6;
  char v10 = *(unsigned char *)(v6 + 8);
  sub_1000520F8(*(void *)v6, v10 & 1);
  *(void *)uint64_t v11 = v9;
  *(unsigned char *)(v11 + 8) = v10 & 1;
  uint64_t v7 = v15[7];
  uint64_t v12 = a2 + v7;
  *(void *)(a2 + v7) = *(void *)(a1 + v7);
  uint64_t v13 = *(void *)(a1 + v7 + 8);
  swift_retain();
  uint64_t result = a2;
  *(void *)(v12 + 8) = v13;
  return result;
}

uint64_t sub_100053230@<X0>(uint64_t a1@<X8>)
{
  return sub_1000526F4(*(void *)(v1 + 16), a1);
}

unint64_t sub_100053238()
{
  uint64_t v2 = qword_1000A41C8;
  if (!qword_1000A41C8)
  {
    sub_1000096C0(&qword_1000A41C0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A41C8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000532BC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v6 = sub_1000895A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  if (*(void *)(a1 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = type metadata accessor for MessagesContentView();
  uint64_t v4 = a1 + *(int *)(v3 + 20);
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v4);
  }
  else
  {
    swift_release();
  }
  sub_100052164(*(void *)(a1 + *(int *)(v3 + 24)), *(unsigned char *)(a1 + *(int *)(v3 + 24) + 8) & 1);
  swift_release();
  return a1;
}

unint64_t sub_1000534E8()
{
  uint64_t v2 = qword_1000A41D0;
  if (!qword_1000A41D0)
  {
    sub_1000096C0(&qword_1000A41A0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A41D0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10005356C(uint64_t a1)
{
  uint64_t v17 = *(int *)(sub_100009334(&qword_1000A41D8) + 44);
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EC0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1 + v17);
  }
  else
  {
    swift_release();
  }
  uint64_t v16 = a1 + v17 + *(int *)(type metadata accessor for MessageListHeaderView() + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v16 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = type metadata accessor for Mailbox();
  uint64_t v12 = v16 + *(int *)(v11 + 28);
  uint64_t v13 = sub_1000895A0();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = *(unsigned int (**)(void))(v14 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t))v15)(v12, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v10 = type metadata accessor for Snapshot();
  if (*(void *)(v16 + *(int *)(v10 + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v8 = sub_100009334(&qword_1000A41E0);
  uint64_t v7 = a1 + v17 + *(int *)(v8 + 48);
  uint64_t v2 = sub_100009334(&qword_1000A4138);
  (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v7);
  uint64_t v9 = a1 + v17 + *(int *)(v8 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v9 + *(int *)(v11 + 28);
  if (!v15()) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v6, v13);
  }
  if (*(void *)(v9 + *(int *)(v10 + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v9 + *(int *)(type metadata accessor for MessageListView() + 20);
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return a1;
}

unint64_t sub_1000539DC()
{
  uint64_t v2 = qword_1000A41E8;
  if (!qword_1000A41E8)
  {
    sub_1000096C0(&qword_1000A41A8);
    sub_1000534E8();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A41E8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100053A7C()
{
  uint64_t v2 = qword_1000A41F0;
  if (!qword_1000A41F0)
  {
    sub_1000096C0(&qword_1000A41B0);
    sub_1000539DC();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A41F0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100053B1C()
{
  uint64_t v2 = qword_1000A41F8;
  if (!qword_1000A41F8)
  {
    sub_1000096C0(&qword_1000A41B8);
    sub_100053A7C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A41F8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100053BBC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v52 = *(int *)(sub_100009334(&qword_1000A41D8) + 44);
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(void))(*(void *)(v2 - 8) + 16))();
  }
  else
  {
    uint64_t v50 = *(void *)(a1 + v52);
    swift_retain();
    *(void *)(a2 + v52) = v50;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = type metadata accessor for MessageListHeaderView();
  uint64_t v47 = a2 + v52 + *(int *)(v45 + 20);
  uint64_t v49 = a1 + v52 + *(int *)(v45 + 20);
  *(void *)uint64_t v47 = *(void *)v49;
  uint64_t v46 = *(void *)(v49 + 8);
  swift_bridgeObjectRetain();
  *(void *)(v47 + 8) = v46;
  uint64_t v48 = *(void *)(v49 + 16);
  swift_bridgeObjectRetain();
  *(void *)(v47 + 16) = v48;
  if (*(void *)(v49 + 32) <= 5uLL)
  {
    *(_OWORD *)(v47 + 24) = *(_OWORD *)(v49 + 24);
  }
  else
  {
    *(void *)(v47 + 24) = *(void *)(v49 + 24);
    uint64_t v44 = *(void *)(v49 + 32);
    swift_bridgeObjectRetain();
    *(void *)(v47 + 32) = v44;
  }
  uint64_t v38 = type metadata accessor for Mailbox();
  uint64_t v39 = (void *)(v47 + *(int *)(v38 + 28));
  unint64_t v40 = (const void *)(v49 + *(int *)(v38 + 28));
  uint64_t v41 = sub_1000895A0();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(unsigned int (**)(void))(v42 + 48);
  if (((unsigned int (*)(const void *, uint64_t))v43)(v40, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3B40);
    memcpy(v39, v40, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v39, v40, v41);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  uint64_t v35 = type metadata accessor for Snapshot();
  uint64_t v36 = v47 + *(int *)(v35 + 20);
  uint64_t v37 = (uint64_t *)(v49 + *(int *)(v35 + 20));
  if ((unint64_t)*v37 < 2)
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    *(_WORD *)(v36 + 16) = *((_WORD *)v37 + 8);
  }
  else
  {
    uint64_t v34 = *v37;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v36 = v34;
    *(void *)(v36 + 8) = v37[1];
    *(unsigned char *)(v36 + 16) = *((unsigned char *)v37 + 16);
    *(unsigned char *)(v36 + 17) = *((unsigned char *)v37 + 17);
  }
  uint64_t v25 = *(int *)(v45 + 24);
  uint64_t v26 = *(void *)(a1 + v52 + v25);
  swift_retain();
  *(void *)(a2 + v52 + v25) = v26;
  uint64_t v4 = sub_100009334(&qword_1000A4200);
  memcpy((void *)(a2 + v52 + *(int *)(v4 + 36)), (const void *)(a1 + v52 + *(int *)(v4 + 36)), 0x29uLL);
  uint64_t v29 = sub_100009334(&qword_1000A41E0);
  uint64_t v28 = a2 + v52 + *(int *)(v29 + 48);
  uint64_t v27 = a1 + v52 + *(int *)(v29 + 48);
  uint64_t v5 = sub_100009334(&qword_1000A4138);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v28, v27);
  uint64_t v31 = a2 + v52 + *(int *)(v29 + 64);
  uint64_t v33 = a1 + v52 + *(int *)(v29 + 64);
  *(void *)uint64_t v31 = *(void *)v33;
  uint64_t v30 = *(void *)(v33 + 8);
  swift_bridgeObjectRetain();
  *(void *)(v31 + 8) = v30;
  uint64_t v32 = *(void *)(v33 + 16);
  swift_bridgeObjectRetain();
  *(void *)(v31 + 16) = v32;
  if (*(void *)(v33 + 32) <= 5uLL)
  {
    *(_OWORD *)(v31 + 24) = *(_OWORD *)(v33 + 24);
  }
  else
  {
    *(void *)(v31 + 24) = *(void *)(v33 + 24);
    uint64_t v24 = *(void *)(v33 + 32);
    swift_bridgeObjectRetain();
    *(void *)(v31 + 32) = v24;
  }
  __dst = (void *)(v31 + *(int *)(v38 + 28));
  __src = (void *)(v33 + *(int *)(v38 + 28));
  if (v43())
  {
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v42 + 16))(__dst, __src, v41);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v41);
  }
  uint64_t v20 = v31 + *(int *)(v35 + 20);
  unint64_t v21 = (uint64_t *)(v33 + *(int *)(v35 + 20));
  if ((unint64_t)*v21 < 2)
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_WORD *)(v20 + 16) = *((_WORD *)v21 + 8);
  }
  else
  {
    uint64_t v19 = *v21;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v20 = v19;
    *(void *)(v20 + 8) = v21[1];
    *(unsigned char *)(v20 + 16) = *((unsigned char *)v21 + 16);
    *(unsigned char *)(v20 + 17) = *((unsigned char *)v21 + 17);
  }
  uint64_t v16 = type metadata accessor for MessageListView();
  uint64_t v17 = (void *)(v31 + *(int *)(v16 + 20));
  uint64_t v18 = (uint64_t *)(v33 + *(int *)(v16 + 20));
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100089EF0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v7 - 8) + 16))(v17, v18);
  }
  else
  {
    uint64_t v15 = *v18;
    swift_retain();
    *uint64_t v17 = v15;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (void *)(v31 + *(int *)(v16 + 24));
  uint64_t v8 = (void *)(v33 + *(int *)(v16 + 24));
  *uint64_t v13 = *v8;
  uint64_t v14 = v8[1];
  swift_retain();
  v13[1] = v14;
  uint64_t v9 = sub_100009334(&qword_1000A41A8);
  memcpy((void *)(a2 + *(int *)(v9 + 36)), (const void *)(a1 + *(int *)(v9 + 36)), 0x29uLL);
  uint64_t v10 = sub_100009334(&qword_1000A41B0);
  memcpy((void *)(a2 + *(int *)(v10 + 36)), (const void *)(a1 + *(int *)(v10 + 36)), 0x29uLL);
  uint64_t v11 = sub_100009334(&qword_1000A41B8);
  memcpy((void *)(a2 + *(int *)(v11 + 36)), (const void *)(a1 + *(int *)(v11 + 36)), 0x29uLL);
  return a2;
}

uint64_t sub_1000544A0()
{
  swift_getKeyPath();
  sub_100089730();
  return v1;
}

double sub_1000544DC()
{
  return 0.0;
}

uint64_t sub_1000544E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_10001FFFC(a1, a4);
  uint64_t v10 = type metadata accessor for MessagesContentView();
  swift_getKeyPath();
  sub_100089730();
  uint64_t v4 = a4 + *(int *)(v10 + 24);
  *(void *)uint64_t v4 = a2;
  *(unsigned char *)(v4 + 8) = a3 & 1;
  uint64_t v11 = *(int *)(v10 + 28);
  uint64_t result = sub_100045C88();
  uint64_t v6 = (void *)(a4 + v11);
  void *v6 = v7;
  v6[1] = result;
  return result;
}

uint64_t sub_10005459C@<X0>(uint64_t a1@<X8>)
{
  return sub_100052198(a1);
}

uint64_t sub_1000545B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v11 = a2;
  v9[1] = a1;
  uint64_t v14 = sub_100089910();
  uint64_t v12 = *(void *)(v14 - 8);
  uint64_t v13 = v14 - 8;
  unint64_t v10 = (*(void *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  double v2 = __chkstk_darwin(v14);
  uint64_t v15 = (char *)v9 - v10;
  (*(void (**)(char *, double))(v12 + 16))((char *)v9 - v10, v2);
  char v3 = sub_1000898C0();
  uint64_t v4 = v12;
  uint64_t v5 = v14;
  char v6 = v3;
  uint64_t v7 = v15;
  *uint64_t v11 = v6 & 1;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v5);
}

uint64_t sub_1000546B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000545B4(a1, a2);
}

uint64_t sub_1000546CC()
{
  return sub_1000898D0();
}

uint64_t sub_1000546F8()
{
  return sub_1000546CC();
}

unint64_t sub_100054710(uint64_t a1, uint64_t *a2, int *a3)
{
  int v33 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v33 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    swift_retain();
    *(void *)a1 = v28;
    return *(void *)a1 + ((v33 + 16) & ~(unint64_t)v33);
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v26 = a2[1];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 8) = v26;
    uint64_t v27 = a2[2];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 16) = v27;
    if ((unint64_t)a2[4] <= 5)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    }
    else
    {
      *(void *)(a1 + 24) = a2[3];
      uint64_t v25 = a2[4];
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v25;
    }
    uint64_t v3 = type metadata accessor for Mailbox();
    __dst = (void *)(a1 + *(int *)(v3 + 28));
    unint64_t v22 = (char *)a2 + *(int *)(v3 + 28);
    uint64_t v23 = sub_1000895A0();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v24 + 48))(v22, 1))
    {
      uint64_t v4 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, v22, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    uint64_t v5 = type metadata accessor for Snapshot();
    uint64_t v19 = a1 + *(int *)(v5 + 20);
    uint64_t v20 = (uint64_t *)((char *)a2 + *(int *)(v5 + 20));
    if ((unint64_t)*v20 < 2)
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *(_WORD *)(v19 + 16) = *((_WORD *)v20 + 8);
    }
    else
    {
      uint64_t v18 = *v20;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v20[1];
      *(unsigned char *)(v19 + 16) = *((unsigned char *)v20 + 16);
      *(unsigned char *)(v19 + 17) = *((unsigned char *)v20 + 17);
    }
    uint64_t v16 = (void *)(a1 + a3[5]);
    uint64_t v17 = (uint64_t *)((char *)a2 + a3[5]);
    sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100089EF0();
      (*(void (**)(void *, uint64_t *))(*(void *)(v6 - 8) + 16))(v16, v17);
    }
    else
    {
      uint64_t v15 = *v17;
      swift_retain();
      *uint64_t v16 = v15;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a1 + a3[6];
    uint64_t v7 = (uint64_t)a2 + a3[6];
    uint64_t v10 = *(void *)v7;
    char v11 = *(unsigned char *)(v7 + 8);
    sub_1000520F8(*(void *)v7, v11 & 1);
    *(void *)uint64_t v12 = v10;
    *(unsigned char *)(v12 + 8) = v11 & 1;
    uint64_t v8 = a3[7];
    uint64_t v13 = a1 + v8;
    *(void *)(a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v14 = *(uint64_t *)((char *)a2 + v8 + 8);
    swift_retain();
    *(void *)(v13 + 8) = v14;
    return a1;
  }
}

uint64_t sub_100054BA0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v6 = sub_1000895A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  if (*(void *)(a1 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v4);
  }
  else
  {
    swift_release();
  }
  sub_100052164(*(void *)(a1 + *(int *)(a2 + 24)), *(unsigned char *)(a1 + *(int *)(a2 + 24) + 8) & 1);
  return swift_release();
}

uint64_t sub_100054DC4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v27 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v27;
  uint64_t v29 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v29;
  if (*(void *)(a2 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v25 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v25;
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  unint64_t v21 = (void *)(a1 + *(int *)(v3 + 28));
  unint64_t v22 = (const void *)(a2 + *(int *)(v3 + 28));
  uint64_t v23 = sub_1000895A0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v24 + 48))(v22, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(v21, v22, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v19 = a1 + *(int *)(v5 + 20);
  uint64_t v20 = (uint64_t *)(a2 + *(int *)(v5 + 20));
  if ((unint64_t)*v20 < 2)
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_WORD *)(v19 + 16) = *((_WORD *)v20 + 8);
  }
  else
  {
    uint64_t v18 = *v20;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v19 = v18;
    *(void *)(v19 + 8) = v20[1];
    *(unsigned char *)(v19 + 16) = *((unsigned char *)v20 + 16);
    *(unsigned char *)(v19 + 17) = *((unsigned char *)v20 + 17);
  }
  uint64_t v16 = (void *)(a1 + a3[5]);
  uint64_t v17 = (uint64_t *)(a2 + a3[5]);
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100089EF0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v6 - 8) + 16))(v16, v17);
  }
  else
  {
    uint64_t v15 = *v17;
    swift_retain();
    *uint64_t v16 = v15;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a1 + a3[6];
  uint64_t v7 = a2 + a3[6];
  uint64_t v10 = *(void *)v7;
  char v11 = *(unsigned char *)(v7 + 8);
  sub_1000520F8(*(void *)v7, v11 & 1);
  *(void *)uint64_t v12 = v10;
  *(unsigned char *)(v12 + 8) = v11 & 1;
  uint64_t v8 = a3[7];
  uint64_t v13 = a1 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v14 = *(void *)(a2 + v8 + 8);
  swift_retain();
  uint64_t result = a1;
  *(void *)(v13 + 8) = v14;
  return result;
}

uint64_t sub_1000551C4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v33 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v35;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    if (*(void *)(a2 + 32) <= 5uLL)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v30 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v30;
    }
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v31 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v31;
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  uint64_t v26 = (void *)(a1 + *(int *)(v3 + 28));
  uint64_t v25 = (const void *)(a2 + *(int *)(v3 + 28));
  uint64_t v27 = sub_1000895A0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  if (((unsigned int (*)(void *, uint64_t))v29)(v26, 1))
  {
    if (v29(v25, 1, v27))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3B40);
      memcpy(v26, v25, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v26, v25, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v27);
    }
  }
  else if (v29(v25, 1, v27))
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v26, v27);
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(v26, v25, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 24))(v26, v25, v27);
  }
  uint64_t v6 = type metadata accessor for Snapshot();
  uint64_t v23 = a1 + *(int *)(v6 + 20);
  uint64_t v24 = (uint64_t *)(a2 + *(int *)(v6 + 20));
  if (*(void *)v23 < 2uLL)
  {
    if ((unint64_t)*v24 < 2)
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *(_WORD *)(v23 + 16) = *((_WORD *)v24 + 8);
    }
    else
    {
      uint64_t v21 = *v24;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v23 = v21;
      *(void *)(v23 + 8) = v24[1];
      *(unsigned char *)(v23 + 16) = *((unsigned char *)v24 + 16);
      *(unsigned char *)(v23 + 17) = *((unsigned char *)v24 + 17);
    }
  }
  else if ((unint64_t)*v24 < 2)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_WORD *)(v23 + 16) = *((_WORD *)v24 + 8);
  }
  else
  {
    uint64_t v22 = *v24;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    *(void *)(v23 + 8) = v24[1];
    *(unsigned char *)(v23 + 16) = *((unsigned char *)v24 + 16);
    *(unsigned char *)(v23 + 17) = *((unsigned char *)v24 + 17) & 1;
  }
  uint64_t v19 = (uint64_t *)(a1 + a3[5]);
  uint64_t v20 = (uint64_t *)(a2 + a3[5]);
  if (v19 != v20)
  {
    sub_100045BF0((uint64_t)v19);
    sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100089EF0();
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v7 - 8) + 16))(v19, v20);
    }
    else
    {
      uint64_t v18 = *v20;
      swift_retain();
      uint64_t *v19 = v18;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a1 + a3[6];
  uint64_t v8 = a2 + a3[6];
  uint64_t v13 = *(void *)v8;
  char v14 = *(unsigned char *)(v8 + 8);
  sub_1000520F8(*(void *)v8, v14 & 1);
  uint64_t v9 = *(void *)v15;
  char v10 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v13;
  *(unsigned char *)(v15 + 8) = v14 & 1;
  sub_100052164(v9, v10 & 1);
  uint64_t v16 = (void *)(a1 + a3[7]);
  char v11 = (void *)(a2 + a3[7]);
  *uint64_t v16 = *v11;
  uint64_t v17 = v11[1];
  swift_retain();
  v16[1] = v17;
  swift_release();
  return a1;
}

__n128 sub_100055888(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = (void *)(a1 + *(int *)(v3 + 28));
  uint64_t v16 = (const void *)(a2 + *(int *)(v3 + 28));
  uint64_t v17 = sub_1000895A0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v18 + 48))(v16, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, v16, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(__dst, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v13 = a1 + *(int *)(v5 + 20);
  uint64_t v14 = a2 + *(int *)(v5 + 20);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  char v10 = (void *)(a1 + a3[5]);
  __src = (void *)(a2 + a3[5]);
  uint64_t v12 = sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100089EF0();
    (*(void (**)(void *, void *))(*(void *)(v6 - 8) + 32))(v10, __src);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, __src, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v7 = a1 + a3[6];
  uint64_t v8 = a2 + a3[6];
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  __n128 result = *(__n128 *)(a2 + a3[7]);
  *(__n128 *)(a1 + a3[7]) = result;
  return result;
}

uint64_t sub_100055BCC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  uint64_t v22 = (void *)(a1 + *(int *)(v3 + 28));
  __src = (void *)(a2 + *(int *)(v3 + 28));
  uint64_t v23 = sub_1000895A0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48);
  if (((unsigned int (*)(void *, uint64_t))v25)(v22, 1))
  {
    if (v25(__src, 1, v23))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3B40);
      memcpy(v22, __src, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v22, __src, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v23);
    }
  }
  else if (v25(__src, 1, v23))
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v22, v23);
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(v22, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v22, __src, v23);
  }
  uint64_t v6 = type metadata accessor for Snapshot();
  uint64_t v19 = a1 + *(int *)(v6 + 20);
  uint64_t v20 = a2 + *(int *)(v6 + 20);
  if (*(void *)v19 < 2uLL)
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_WORD *)(v19 + 16) = *(_WORD *)(v20 + 16);
  }
  else if (*(void *)v20 < 2uLL)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_WORD *)(v19 + 16) = *(_WORD *)(v20 + 16);
  }
  else
  {
    *(void *)uint64_t v19 = *(void *)v20;
    swift_bridgeObjectRelease();
    *(void *)(v19 + 8) = *(void *)(v20 + 8);
    *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
    *(unsigned char *)(v19 + 17) = *(unsigned char *)(v20 + 17) & 1;
  }
  __dst = (void *)(a1 + a3[5]);
  uint64_t v18 = (void *)(a2 + a3[5]);
  if (__dst != v18)
  {
    sub_100045BF0((uint64_t)__dst);
    uint64_t v16 = sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100089EF0();
      (*(void (**)(void *, void *))(*(void *)(v7 - 8) + 32))(__dst, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(__dst, v18, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v8 = a1 + a3[6];
  uint64_t v9 = a2 + a3[6];
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  uint64_t v12 = *(void *)v8;
  LOBYTE(v9) = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = v11 & 1;
  sub_100052164(v12, v9 & 1);
  uint64_t v13 = (void *)(a1 + a3[7]);
  uint64_t v14 = (void *)(a2 + a3[7]);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_release();
  return a1;
}

uint64_t sub_1000561D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1000561FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v11 = type metadata accessor for Snapshot();
  if (a2 == *(_DWORD *)(*(void *)(v11 - 8) + 84))
  {
    return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 48))(a1, a2, v11);
  }
  else
  {
    uint64_t v6 = sub_100009334(&qword_1000A3EF8);
    if (a2 == *(_DWORD *)(*(void *)(v6 - 8) + 84))
    {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v6);
    }
    else if (a2 == 2147483646)
    {
      int v5 = -1;
      if (*(void *)(a1 + *(int *)(a3 + 28) + 8) < (unint64_t)&_mh_execute_header) {
        int v5 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
      }
      int v3 = v5 - 1;
      if (v5 - 1 < 0) {
        int v3 = -1;
      }
      return (v3 + 1);
    }
    else
    {
      __break(1u);
    }
  }
  return v7;
}

uint64_t sub_1000563DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_100056404(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for Snapshot();
  if (a3 == *(_DWORD *)(*(void *)(v9 - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(v9 - 8) + 56))(a1, a2, a2, v9);
  }
  uint64_t result = sub_100009334(&qword_1000A3EF8);
  if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  }
  if (a3 == 2147483646) {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000565A4()
{
  uint64_t v3 = type metadata accessor for Snapshot();
  if (v0 <= 0x3F)
  {
    uint64_t v3 = sub_10004FE78();
    if (v1 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v3;
}

unint64_t sub_1000566F4()
{
  return sub_100053B1C();
}

uint64_t sub_10005670C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100056740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100060EF8(a1, a2);
}

unint64_t sub_100056758()
{
  uint64_t v2 = qword_1000A42A0;
  if (!qword_1000A42A0)
  {
    sub_1000096C0(&qword_1000A4200);
    sub_10003FBF8();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A42A0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1000567F8()
{
  uint64_t v2 = qword_1000A42A8;
  if (!qword_1000A42A8)
  {
    type metadata accessor for MessageListView();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A42A8);
    return WitnessTable;
  }
  return v2;
}

void *sub_10005687C(uint64_t *a1, void *a2)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v2 - 8) + 16))(a2, a1);
  }
  else
  {
    uint64_t v23 = *a1;
    swift_retain();
    *a2 = v23;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = type metadata accessor for MessageListHeaderView();
  uint64_t v20 = (char *)a2 + *(int *)(v18 + 20);
  uint64_t v22 = (char *)a1 + *(int *)(v18 + 20);
  *(void *)uint64_t v20 = *(void *)v22;
  uint64_t v19 = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  *((void *)v20 + 1) = v19;
  uint64_t v21 = *((void *)v22 + 2);
  swift_bridgeObjectRetain();
  *((void *)v20 + 2) = v21;
  if (*((void *)v22 + 4) <= 5uLL)
  {
    *(_OWORD *)(v20 + 24) = *(_OWORD *)(v22 + 24);
  }
  else
  {
    *((void *)v20 + 3) = *((void *)v22 + 3);
    uint64_t v17 = *((void *)v22 + 4);
    swift_bridgeObjectRetain();
    *((void *)v20 + 4) = v17;
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = &v20[*(int *)(v3 + 28)];
  __src = &v22[*(int *)(v3 + 28)];
  uint64_t v15 = sub_1000895A0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 48))(__src, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, __src, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v5 = type metadata accessor for Snapshot();
  uint64_t v11 = &v20[*(int *)(v5 + 20)];
  uint64_t v12 = &v22[*(int *)(v5 + 20)];
  if (*(void *)v12 < 2uLL)
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_WORD *)v11 + 8) = *((_WORD *)v12 + 8);
  }
  else
  {
    uint64_t v10 = *(void *)v12;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v11 = v10;
    *((void *)v11 + 1) = *((void *)v12 + 1);
    v11[16] = v12[16];
    v11[17] = v12[17];
  }
  uint64_t v8 = *(int *)(v18 + 24);
  uint64_t v9 = *(uint64_t *)((char *)a1 + v8);
  swift_retain();
  *(void *)((char *)a2 + v8) = v9;
  uint64_t v6 = sub_100009334(&qword_1000A4200);
  memcpy((char *)a2 + *(int *)(v6 + 36), (char *)a1 + *(int *)(v6 + 36), 0x29uLL);
  return a2;
}

id sub_100056C50(void *a1)
{
  id v2 = objc_allocWithZone(v1);
  return sub_100057BC0(a1);
}

uint64_t sub_100056C8C(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  int v25 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v38 = 0;
  char v37 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v34 = 0;
  uint64_t v32 = 0;
  unint64_t v27 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v28 = (uint64_t)&v12 - v27;
  uint64_t v38 = __chkstk_darwin(v26);
  char v37 = v5 & 1;
  uint64_t v35 = v6;
  uint64_t v36 = v7;
  uint64_t v34 = v4;
  uint64_t v29 = OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageList;
  uint64_t v30 = (void *)(v4 + OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageList);
  swift_beginAccess();
  if (*v30)
  {
    id v21 = *(id *)&v22[v29];
    id v8 = v21;
    swift_endAccess();
    uint64_t v9 = v22;
    [v21 stopObserving:v22];
    swift_unknownObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v13 = (void **)&v22[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageList];
  uint64_t v14 = &v33;
  uint64_t v16 = 33;
  uint64_t v17 = 0;
  swift_beginAccess();
  uint64_t v10 = *v13;
  uint64_t v15 = 0;
  *uint64_t v13 = 0;

  swift_endAccess();
  type metadata accessor for MessagesDataSource.ResultHandler();
  sub_10000E524((uint64_t)v26, v28);
  swift_retain();
  uint64_t v19 = sub_100056F20(v28, v23, v24);
  uint64_t v32 = v19;
  swift_retain();
  uint64_t v18 = &v22[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_resultHandler];
  uint64_t v20 = &v31;
  swift_beginAccess();
  *(void *)uint64_t v18 = v19;
  swift_release();
  swift_endAccess();
  if (v25) {
    sub_100057D3C(v26);
  }
  else {
    sub_100057FB0(v26, v19);
  }
  return swift_release();
}

uint64_t sub_100056F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100056F7C(a1, a2, a3);
}

uint64_t sub_100056F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a1;
  uint64_t v26 = a2;
  uint64_t v29 = a3;
  uint64_t v19 = 0;
  unint64_t v27 = sub_1000583B8;
  uint64_t v35 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v32 = 0;
  uint64_t v17 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v21 = v17;
  uint64_t v22 = *(void *)(v17 + 64);
  unint64_t v18 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v24 = (uint64_t)&v16 - v18;
  uint64_t v35 = __chkstk_darwin(v30);
  uint64_t v33 = v4;
  uint64_t v34 = v5;
  uint64_t v32 = v3;
  uint64_t v20 = OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_itemIDs;
  sub_100009334(&qword_1000A42E0);
  uint64_t v6 = sub_10008A6C0();
  uint64_t v7 = v24;
  uint64_t v8 = v6;
  uint64_t v9 = v30;
  *(void *)(v3 + v20) = v8;
  sub_10000E524(v9, v7);
  sub_10000E8F8(v24, v3 + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_mailbox);
  sub_10000E524(v30, v24);
  swift_retain();
  unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v25 = (v23 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  sub_10000E8F8(v24, v28 + v23);
  uint64_t v10 = v27;
  uint64_t v11 = v28;
  uint64_t v12 = v29;
  uint64_t v13 = (void *)(v28 + v25);
  *uint64_t v13 = v26;
  v13[1] = v12;
  uint64_t v14 = (void (**)(uint64_t, uint64_t))(v3
                                               + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_completion);
  *uint64_t v14 = v10;
  v14[1] = (void (*)(uint64_t, uint64_t))v11;
  swift_release();
  sub_100015540(v30);
  return v31;
}

void sub_100057190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v23 = a3;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v35 = 0;
  uint64_t v33 = sub_10005F388;
  uint64_t v57 = 0;
  uint64_t v56 = 0;
  uint64_t v55 = 0;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v39 = sub_100089E00();
  uint64_t v36 = *(void *)(v39 - 8);
  uint64_t v37 = v39 - 8;
  unint64_t v19 = (*(void *)(v36 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v38 = (char *)&v19 - v19;
  uint64_t v43 = sub_100089E20();
  uint64_t v40 = *(void *)(v43 - 8);
  uint64_t v41 = v43 - 8;
  unint64_t v20 = (*(void *)(v40 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v35);
  uint64_t v42 = (char *)&v19 - v20;
  uint64_t v21 = *(void *)(type metadata accessor for Mailbox() - 8);
  uint64_t v24 = v21;
  uint64_t v25 = *(void *)(v21 + 64);
  unint64_t v22 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v35);
  uint64_t v29 = (uint64_t)&v19 - v22;
  uint64_t v57 = v5;
  uint64_t v56 = v6;
  uint64_t v55 = v7;
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  sub_1000095A4();
  id v45 = (id)sub_10008A3F0();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  sub_10000E524(v23, v29);
  swift_retain();
  unint64_t v28 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v30 = (v28 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v27;
  unint64_t v12 = v28;
  uint64_t v13 = v10;
  uint64_t v14 = v29;
  uint64_t v34 = v13;
  *(void *)(v13 + 16) = v26;
  *(void *)(v13 + 24) = v11;
  sub_10000E8F8(v14, v13 + v12);
  uint64_t v15 = v32;
  uint64_t v16 = v33;
  uint64_t v17 = v34;
  unint64_t v18 = (void *)(v34 + v30);
  *unint64_t v18 = v31;
  v18[1] = v15;
  uint64_t v51 = v16;
  uint64_t v52 = v17;
  aBlock = _NSConcreteStackBlock;
  int v47 = 1107296256;
  int v48 = 0;
  uint64_t v49 = sub_10000B378;
  uint64_t v50 = &unk_10009C548;
  uint64_t v44 = _Block_copy(&aBlock);
  swift_release();
  sub_10000739C();
  sub_1000073B4();
  sub_10008A400();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v43);
  _Block_release(v44);
}

uint64_t sub_100057588(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v40 = a1;
  uint64_t v39 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v32 = sub_10005F49C;
  uint64_t v49 = 0;
  uint64_t v48 = 0;
  uint64_t v47 = 0;
  uint64_t v45 = 0;
  uint64_t v46 = 0;
  uint64_t v44 = 0;
  uint64_t v43 = 0;
  uint64_t v33 = 0;
  uint64_t v41 = 0;
  unint64_t v37 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v38 = (uint64_t)&v17 - v37;
  uint64_t v49 = __chkstk_darwin(v40);
  uint64_t v48 = v5;
  uint64_t v47 = v6;
  uint64_t v45 = v7;
  uint64_t v46 = v8;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  if (!v40)
  {
    if (v39)
    {
      uint64_t v22 = v39;
      uint64_t v21 = v39;
      swift_errorRetain();
      uint64_t v44 = v21;
      swift_retain();
      swift_errorRetain();
      int v20 = 1;
      v35(v21);
      sub_100013768(v21, v20 & 1);
      swift_release();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_8;
  }
  uint64_t v31 = v40;
  uint64_t v30 = v40;
  if (v39)
  {
LABEL_8:
    swift_retain();
    sub_100014514();
    unsigned int v19 = 1;
    uint64_t v12 = swift_allocError();
    uint64_t v13 = v35;
    uint64_t v18 = v12;
    uint64_t v15 = v14;
    uint64_t v16 = v19;
    *uint64_t v15 = 0;
    ((void (*)(uint64_t, uint64_t))v13)(v12, v16);
    sub_100013768(v18, v19 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  uint64_t v9 = v33;
  swift_bridgeObjectRetain();
  uint64_t v43 = v30;
  uint64_t v42 = v30;
  sub_10000E524(v34, v38);
  uint64_t v25 = &v17;
  __chkstk_darwin(&v17);
  uint64_t v26 = &v17 - 4;
  *(&v17 - 2) = v10;
  uint64_t v27 = sub_100009334(&qword_1000A3600);
  uint64_t v28 = type metadata accessor for Message();
  sub_10005F4C4();
  uint64_t result = sub_10008A100();
  uint64_t v29 = result;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = v29;
    sub_100015540(v38);
    uint64_t v41 = v24;
    swift_retain();
    swift_bridgeObjectRetain();
    int v23 = 0;
    v35(v24);
    sub_100013768(v24, v23 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10005794C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v10 = a3;
  uint64_t v7 = a1;
  uint64_t v9 = a2;
  uint64_t v14 = 0;
  uint64_t v13 = 0;
  unint64_t v8 = (*(void *)(*(void *)(type metadata accessor for Mailbox() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (uint64_t)&v6 - v8;
  uint64_t v12 = *(void **)__chkstk_darwin(v7);
  uint64_t v14 = v12;
  uint64_t v13 = v3;
  id v4 = v12;
  sub_10000E524(v9, v11);
  return sub_1000337E8(v12, v11, v10);
}

uint64_t sub_100057A14()
{
  sub_100015540(v0 + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_mailbox);
  sub_10000ADA0();
  swift_release();
  return v2;
}

uint64_t sub_100057A74()
{
  return swift_deallocClassInstance();
}

uint64_t sub_100057ADC()
{
  uint64_t v1 = sub_100089700();
  sub_1000030B8(v1, qword_1000A42B0);
  sub_100003160(v1, (uint64_t)qword_1000A42B0);
  type metadata accessor for MessagesDataSource();
  return sub_100016888();
}

uint64_t sub_100057B44()
{
  if (qword_1000A2DC8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100089700();
  return sub_100003160(v0, (uint64_t)qword_1000A42B0);
}

void *sub_100057BB4()
{
  return &unk_10008BE60;
}

id sub_100057BC0(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = a1;
  uint64_t v2 = v1;
  uint64_t v3 = v1;
  id v4 = v1;
  id v13 = v1;
  *(void *)&v1[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageList] = 0;

  *(void *)&v1[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_resultHandler] = 0;
  id v5 = a1;
  *(void *)&v1[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageRepository] = a1;

  v11.receiver = v13;
  v11.super_class = ObjectType;
  [super init];
  id v6 = v10;
  id v13 = v10;

  return v10;
}

uint64_t type metadata accessor for MessagesDataSource.ResultHandler()
{
  uint64_t v1 = qword_1000A43D0;
  if (!qword_1000A43D0) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

void sub_100057D3C(void *a1)
{
  sub_100009334((uint64_t *)&unk_1000A42F0);
  unint64_t v14 = sub_1000166C0();
  sub_10001F33C();
  id v12 = sub_10007E730(a1);
  sub_10001E5E4();
  uint64_t v11 = sub_10008A6C0();
  *uint64_t v1 = [self sortDescriptorForDateAscending:0];
  sub_100007A04();
  uint64_t v2 = sub_10008A0B0("Widget.DaemonDataSource.ThreadedMessages", 0x28uLL, 1);
  id v15 = sub_1000244CC(v14, v12, v11, 8, v2, v3);
  sub_100009334((uint64_t *)&unk_1000A4310);
  id v4 = v15;
  id v13 = *(void **)&v16[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageRepository];
  id v5 = v13;
  id v18 = sub_100058498(v15, v13);
  uint64_t v17 = (void **)&v16[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageList];
  swift_beginAccess();
  id v6 = *v17;
  *uint64_t v17 = v18;

  swift_endAccess();
  uint64_t v19 = OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageList;
  int v20 = &v16[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageList];
  swift_beginAccess();
  if (*(void *)v20)
  {
    id v9 = *(id *)&v16[v19];
    id v7 = v9;
    swift_endAccess();
    unint64_t v8 = v16;
    [v9 beginObserving:v16];
    swift_unknownObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
}

uint64_t sub_100057FB0(void *a1, uint64_t a2)
{
  uint64_t v25 = 0;
  uint64_t v27 = a1;
  uint64_t v26 = a2;
  sub_10001E5E4();
  uint64_t v7 = sub_10008A6C0();
  *uint64_t v2 = [self sortDescriptorForDateAscending:0];
  sub_100007A04();
  uint64_t v24 = v7;
  sub_100009334((uint64_t *)&unk_1000A42F0);
  unint64_t v9 = sub_1000165F0();
  sub_10001F33C();
  id v10 = sub_10007E730(a1);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10008A0B0("Widget.DaemonDataSource.NonThreadedMessages", 0x2BuLL, 1);
  id v15 = sub_1000244CC(v9, v10, v7, 8, v3, v4);
  id v23 = v15;
  id v14 = *(id *)(v11 + OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageRepository);
  id v5 = v14;
  swift_retain();
  uint64_t v21 = sub_100058788;
  uint64_t v22 = a2;
  aBlock = _NSConcreteStackBlock;
  int v17 = 1107296256;
  int v18 = 0;
  uint64_t v19 = sub_100058928;
  int v20 = &unk_10009BEA0;
  id v13 = _Block_copy(&aBlock);
  swift_release();
  [v14 performQuery:v15 limit:4 completionHandler:v13];
  _Block_release(v13);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000581F0()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 16) & ~v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1000583B8(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *(void *)(type metadata accessor for Mailbox() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v4 = (uint64_t *)(v2 + ((v3 + *(void *)(v9 + 64) + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];

  sub_100057190(a1, a2, v2 + v3, v5, v6);
}

uint64_t type metadata accessor for MessagesDataSource()
{
  return self;
}

id sub_100058498(void *a1, void *a2)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_10005CDD8(a1, a2);
}

void sub_1000584EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a1;
  uint64_t v14 = a2;
  uint64_t v13 = a3;
  uint64_t v17 = 0;
  id v15 = sub_10005F138;
  uint64_t v37 = 0;
  uint64_t v36 = 0;
  uint64_t v35 = 0;
  uint64_t v21 = sub_100089E00();
  uint64_t v18 = *(void *)(v21 - 8);
  uint64_t v19 = v21 - 8;
  unint64_t v11 = (*(void *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  int v20 = (char *)&v11 - v11;
  uint64_t v25 = sub_100089E20();
  uint64_t v22 = *(void *)(v25 - 8);
  uint64_t v23 = v25 - 8;
  unint64_t v12 = (*(void *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v17);
  uint64_t v24 = (char *)&v11 - v12;
  uint64_t v37 = v3;
  uint64_t v36 = v4;
  uint64_t v35 = v5;
  sub_1000095A4();
  id v27 = (id)sub_10008A3F0();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  uint64_t v9 = (void *)v6;
  uint64_t v10 = v16;
  void v9[2] = v13;
  v9[3] = v10;
  v9[4] = v7;
  uint64_t v33 = v8;
  uint64_t v34 = v9;
  aBlock = _NSConcreteStackBlock;
  int v29 = 1107296256;
  int v30 = 0;
  uint64_t v31 = sub_10000B378;
  uint64_t v32 = &unk_10009C4F8;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_release();
  sub_10000739C();
  sub_1000073B4();
  sub_10008A400();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v21);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v25);
  _Block_release(v26);
}

void sub_100058788(uint64_t a1, uint64_t a2)
{
  sub_1000584EC(a1, a2, v2);
}

uint64_t sub_100058790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(a1
                                               + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_completion);
  swift_retain();
  v6(a2, a3);
  return swift_release();
}

uint64_t sub_100058814()
{
  if (!"MailWidgetExtension.MessagesDataSource")
  {
    sub_10008A5A0();
    __break(1u);
  }
  uint64_t result = sub_10005D24C((uint64_t)"MailWidgetExtension.MessagesDataSource", 38, (unint64_t)"init()", 6, 2, (unint64_t)"MailWidgetExtension/MessagesDataSource.swift", 44, 2, v1, 0xAuLL, 0xDuLL);
  __break(1u);
  return result;
}

uint64_t sub_100058928(uint64_t a1, void *a2, void *a3)
{
  uint64_t v9 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  id v3 = a2;
  if (a2)
  {
    sub_1000165F0();
    uint64_t v6 = sub_10008A190();

    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v4 = a3;
  v9(v7);
  swift_errorRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100058A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100058A98()
{
  return swift_release();
}

uint64_t sub_100058B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v115 = a1;
  uint64_t v114 = a2;
  uint64_t v112 = a3;
  long long v100 = sub_10005CE78;
  long long v101 = sub_10000B074;
  uint64_t v102 = sub_10005CEC0;
  uint64_t v103 = sub_1000092DC;
  uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v106 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10000B0C0;
  uint64_t v107 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  double v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v110 = sub_10000960C;
  uint64_t v144 = 0;
  uint64_t v143 = 0;
  uint64_t v142 = 0;
  uint64_t v141 = 0;
  uint64_t v113 = 0;
  uint64_t v111 = 0;
  uint64_t v133 = 0;
  uint64_t v116 = sub_100089700();
  uint64_t v117 = *(void *)(v116 - 8);
  uint64_t v118 = v116 - 8;
  unint64_t v119 = (*(void *)(v117 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v115);
  uint64_t v120 = (char *)v41 - v119;
  unint64_t v121 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  uint64_t v122 = (char *)v41 - v121;
  uint64_t v144 = v6;
  uint64_t v143 = v7;
  uint64_t v142 = v8;
  uint64_t v141 = v3;
  uint64_t v123 = (uint64_t *)(v3 + OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_resultHandler);
  uint64_t v124 = &v140;
  swift_beginAccess();
  uint64_t v125 = *v123;
  swift_retain();
  swift_endAccess();
  if (v125)
  {
    uint64_t v99 = v125;
    uint64_t v9 = v122;
    uint64_t v74 = v125;
    uint64_t v133 = v125;
    uint64_t v10 = sub_100057B44();
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v9, v10, v116);
    swift_bridgeObjectRetain();
    uint64_t v75 = 24;
    uint64_t v85 = 7;
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = v114;
    swift_unknownObjectRetain();
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = v112;
    long long v97 = sub_1000896E0();
    int v98 = sub_10008A3B0();
    double v78 = &v131;
    uint64_t v131 = 22;
    unint64_t v76 = sub_10000818C();
    unint64_t v77 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v79 = v132;
    uint64_t v82 = 17;
    uint64_t v88 = swift_allocObject();
    *(unsigned char *)(v88 + 16) = 0;
    uint64_t v89 = swift_allocObject();
    int v83 = 8;
    *(unsigned char *)(v89 + 16) = 8;
    uint64_t v84 = 32;
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v80;
    uint64_t v81 = v11;
    *(void *)(v11 + 16) = v100;
    *(void *)(v11 + 24) = v12;
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = v81;
    uint64_t v90 = v13;
    *(void *)(v13 + 16) = v101;
    *(void *)(v13 + 24) = v14;
    uint64_t v91 = swift_allocObject();
    *(unsigned char *)(v91 + 16) = 32;
    uint64_t v92 = swift_allocObject();
    *(unsigned char *)(v92 + 16) = v83;
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v86;
    uint64_t v87 = v15;
    *(void *)(v15 + 16) = v102;
    *(void *)(v15 + 24) = v16;
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = v87;
    uint64_t v94 = v17;
    *(void *)(v17 + 16) = v103;
    *(void *)(v17 + 24) = v18;
    uint64_t v96 = sub_100009334(&qword_1000A2E38);
    uint64_t v93 = sub_10008A6C0();
    unint64_t v95 = v19;
    swift_retain();
    uint64_t v20 = v88;
    uint64_t v21 = v95;
    void *v95 = v104;
    v21[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v20;
    swift_retain();
    uint64_t v22 = v89;
    uint64_t v23 = v95;
    v95[2] = v105;
    v23[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v22;
    swift_retain();
    uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v90;
    uint64_t v25 = v95;
    v95[4] = v106;
    v25[5] = v24;
    swift_retain();
    uint64_t v26 = v91;
    id v27 = v95;
    v95[6] = v107;
    v27[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
    swift_retain();
    uint64_t v28 = v92;
    int v29 = v95;
    char v95[8] = v108;
    v29[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v28;
    swift_retain();
    int v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v94;
    uint64_t v31 = v95;
    v95[10] = v109;
    v31[11] = v30;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v97, (os_log_type_t)v98))
    {
      uint64_t v32 = v111;
      uint64_t v66 = (uint8_t *)sub_10008A470();
      uint64_t v65 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v67 = sub_100007E5C(0);
      uint64_t v68 = sub_100007E5C(1);
      unint64_t v70 = &v130;
      uint64_t v130 = v66;
      unsigned int v71 = &v129;
      uint64_t v129 = v67;
      unint64_t v72 = &v128;
      uint64_t v128 = v68;
      unsigned int v69 = 2;
      sub_100007EB8(2, &v130);
      sub_100007EB8(v69, v70);
      int v126 = v104;
      uint64_t v127 = v88;
      sub_100007ECC(&v126, (uint64_t)v70, (uint64_t)v71, (uint64_t)v72);
      uint64_t v73 = v32;
      if (v32)
      {
        __break(1u);
      }
      else
      {
        int v126 = v105;
        uint64_t v127 = v89;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        uint64_t v64 = 0;
        uint64_t v33 = v64;
        int v126 = v106;
        uint64_t v127 = v90;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        uint64_t v63 = v33;
        int v126 = v107;
        uint64_t v127 = v91;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        uint64_t v62 = 0;
        int v126 = v108;
        uint64_t v127 = v92;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        uint64_t v61 = 0;
        int v126 = v109;
        uint64_t v127 = v94;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        _os_log_impl((void *)&_mh_execute_header, v97, (os_log_type_t)v98, "Added %ld item IDs, before %s", v66, v79);
        sub_100007F18(v67);
        sub_100007F18(v68);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v117 + 8))(v122, v116);
    swift_unknownObjectRetain();
    int v60 = 0;
    sub_100059BA0(v114, v112, 0);
    sub_10005E23C();
    return swift_release();
  }
  else
  {
    uint64_t v35 = v120;
    uint64_t v36 = sub_100057B44();
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v35, v36, v116);
    uint64_t v58 = sub_1000896E0();
    int v57 = sub_10008A3A0();
    uint64_t v55 = &v138;
    uint64_t v138 = 2;
    unint64_t v53 = sub_10000818C();
    unint64_t v54 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v56 = v139;
    sub_100009334(&qword_1000A2E38);
    uint64_t v59 = sub_10008A6C0();
    if (os_log_type_enabled(v58, (os_log_type_t)v57))
    {
      uint64_t v37 = v111;
      uint64_t v43 = (uint8_t *)sub_10008A470();
      void v41[2] = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v42 = 0;
      uint64_t v44 = sub_100007E5C(0);
      uint64_t v45 = sub_100007E5C(v42);
      uint64_t v49 = &v137;
      unint64_t v137 = v43;
      uint64_t v50 = &v136;
      uint64_t v136 = v44;
      uint64_t v47 = &v135;
      uint64_t v135 = v45;
      unsigned int v46 = 0;
      sub_100007EB8(0, &v137);
      sub_100007EB8(v46, v49);
      uint64_t v134 = v59;
      uint64_t v48 = v41;
      __chkstk_darwin(v41);
      uint64_t v38 = v50;
      uint64_t v39 = &v41[-6];
      uint64_t v51 = &v41[-6];
      v39[2] = v49;
      v39[3] = v38;
      v39[4] = v40;
      uint64_t v52 = sub_100009334((uint64_t *)&unk_1000A2E60);
      sub_10000963C();
      sub_10008A120();
      if (v37)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v57, "Collection added item ids before itemID but there is no result handler", v43, v56);
        v41[1] = 0;
        sub_100007F18(v44);
        sub_100007F18(v45);
        sub_10008A450();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v120, v116);
  }
}

uint64_t sub_100059B1C()
{
  return sub_10008A1C0();
}

uint64_t sub_100059B54()
{
  return sub_10008A090();
}

uint64_t sub_100059BA0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  int v23 = a3;
  uint64_t v25 = sub_10005E300;
  v37[1] = 0;
  uint64_t v35 = 0;
  uint64_t v26 = 0;
  uint64_t v30 = 0;
  uint64_t v39 = a1;
  v37[2] = a2;
  char v38 = a3 & 1;
  uint64_t v27 = sub_10005CC74(a2);
  if (!v27) {
    goto LABEL_12;
  }
  uint64_t v20 = v27;
  uint64_t v15 = v27;
  uint64_t v35 = v27;
  uint64_t v12 = (uint64_t *)(v24 + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_itemIDs);
  uint64_t v13 = &v32;
  swift_beginAccess();
  uint64_t v14 = *v12;
  swift_bridgeObjectRetain();
  swift_endAccess();
  uint64_t v31 = v14;
  swift_unknownObjectRetain();
  uint64_t v16 = v7;
  __chkstk_darwin(v7);
  uint64_t v17 = v6;
  void v6[2] = v3;
  uint64_t v18 = sub_100009334(&qword_1000A4340);
  unint64_t v19 = sub_10005E32C();
  sub_10008A310();
  swift_unknownObjectRelease();
  sub_10000ADA0();
  uint64_t v11 = v33;
  if (v34)
  {
    swift_unknownObjectRelease();
LABEL_12:
    swift_bridgeObjectRetain();
    v7[1] = v37;
    v37[0] = v21;
    void v7[2] = &v36;
    swift_beginAccess();
    v7[0] = sub_100009334(&qword_1000A4340);
    sub_10005E27C();
    sub_10008A1D0();
    return swift_endAccess();
  }
  uint64_t v10 = v11;
  uint64_t v8 = v11;
  uint64_t v30 = v11;
  swift_bridgeObjectRetain();
  v29[1] = v21;
  uint64_t result = sub_10005CD88(v22, v23 & 1);
  uint64_t v9 = v8 + result;
  if (__OFADD__(v8, result))
  {
    __break(1u);
  }
  else
  {
    v7[3] = v29;
    v29[0] = v9;
    void v7[4] = &v28;
    swift_beginAccess();
    sub_10005E3B0();
    sub_10008A370();
    swift_endAccess();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10005A000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v115 = a1;
  uint64_t v114 = a2;
  uint64_t v112 = a3;
  long long v100 = sub_10005CE78;
  long long v101 = sub_10000B074;
  uint64_t v102 = sub_10005CEC0;
  uint64_t v103 = sub_1000092DC;
  uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v106 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10000B0C0;
  uint64_t v107 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  double v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009328;
  uint64_t v110 = sub_10000960C;
  uint64_t v144 = 0;
  uint64_t v143 = 0;
  uint64_t v142 = 0;
  uint64_t v141 = 0;
  uint64_t v113 = 0;
  uint64_t v111 = 0;
  uint64_t v133 = 0;
  uint64_t v116 = sub_100089700();
  uint64_t v117 = *(void *)(v116 - 8);
  uint64_t v118 = v116 - 8;
  unint64_t v119 = (*(void *)(v117 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v115);
  uint64_t v120 = (char *)v41 - v119;
  unint64_t v121 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  uint64_t v122 = (char *)v41 - v121;
  uint64_t v144 = v6;
  uint64_t v143 = v7;
  uint64_t v142 = v8;
  uint64_t v141 = v3;
  uint64_t v123 = (uint64_t *)(v3 + OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_resultHandler);
  uint64_t v124 = &v140;
  swift_beginAccess();
  uint64_t v125 = *v123;
  swift_retain();
  swift_endAccess();
  if (v125)
  {
    uint64_t v99 = v125;
    uint64_t v9 = v122;
    uint64_t v74 = v125;
    uint64_t v133 = v125;
    uint64_t v10 = sub_100057B44();
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v9, v10, v116);
    swift_bridgeObjectRetain();
    uint64_t v75 = 24;
    uint64_t v85 = 7;
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = v114;
    swift_unknownObjectRetain();
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = v112;
    long long v97 = sub_1000896E0();
    int v98 = sub_10008A3B0();
    double v78 = &v131;
    uint64_t v131 = 22;
    unint64_t v76 = sub_10000818C();
    unint64_t v77 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v79 = v132;
    uint64_t v82 = 17;
    uint64_t v88 = swift_allocObject();
    *(unsigned char *)(v88 + 16) = 0;
    uint64_t v89 = swift_allocObject();
    int v83 = 8;
    *(unsigned char *)(v89 + 16) = 8;
    uint64_t v84 = 32;
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v80;
    uint64_t v81 = v11;
    *(void *)(v11 + 16) = v100;
    *(void *)(v11 + 24) = v12;
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = v81;
    uint64_t v90 = v13;
    *(void *)(v13 + 16) = v101;
    *(void *)(v13 + 24) = v14;
    uint64_t v91 = swift_allocObject();
    *(unsigned char *)(v91 + 16) = 32;
    uint64_t v92 = swift_allocObject();
    *(unsigned char *)(v92 + 16) = v83;
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v86;
    uint64_t v87 = v15;
    *(void *)(v15 + 16) = v102;
    *(void *)(v15 + 24) = v16;
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = v87;
    uint64_t v94 = v17;
    *(void *)(v17 + 16) = v103;
    *(void *)(v17 + 24) = v18;
    uint64_t v96 = sub_100009334(&qword_1000A2E38);
    uint64_t v93 = sub_10008A6C0();
    unint64_t v95 = v19;
    swift_retain();
    uint64_t v20 = v88;
    uint64_t v21 = v95;
    void *v95 = v104;
    v21[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v20;
    swift_retain();
    uint64_t v22 = v89;
    int v23 = v95;
    v95[2] = v105;
    v23[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v22;
    swift_retain();
    uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v90;
    uint64_t v25 = v95;
    v95[4] = v106;
    v25[5] = v24;
    swift_retain();
    uint64_t v26 = v91;
    uint64_t v27 = v95;
    v95[6] = v107;
    v27[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
    swift_retain();
    uint64_t v28 = v92;
    int v29 = v95;
    char v95[8] = v108;
    v29[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v28;
    swift_retain();
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v94;
    uint64_t v31 = v95;
    v95[10] = v109;
    v31[11] = v30;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v97, (os_log_type_t)v98))
    {
      uint64_t v32 = v111;
      uint64_t v66 = (uint8_t *)sub_10008A470();
      uint64_t v65 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v67 = sub_100007E5C(0);
      uint64_t v68 = sub_100007E5C(1);
      unint64_t v70 = &v130;
      uint64_t v130 = v66;
      unsigned int v71 = &v129;
      uint64_t v129 = v67;
      unint64_t v72 = &v128;
      uint64_t v128 = v68;
      unsigned int v69 = 2;
      sub_100007EB8(2, &v130);
      sub_100007EB8(v69, v70);
      int v126 = v104;
      uint64_t v127 = v88;
      sub_100007ECC(&v126, (uint64_t)v70, (uint64_t)v71, (uint64_t)v72);
      uint64_t v73 = v32;
      if (v32)
      {
        __break(1u);
      }
      else
      {
        int v126 = v105;
        uint64_t v127 = v89;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        uint64_t v64 = 0;
        uint64_t v33 = v64;
        int v126 = v106;
        uint64_t v127 = v90;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        uint64_t v63 = v33;
        int v126 = v107;
        uint64_t v127 = v91;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        uint64_t v62 = 0;
        int v126 = v108;
        uint64_t v127 = v92;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        uint64_t v61 = 0;
        int v126 = v109;
        uint64_t v127 = v94;
        sub_100007ECC(&v126, (uint64_t)&v130, (uint64_t)&v129, (uint64_t)&v128);
        _os_log_impl((void *)&_mh_execute_header, v97, (os_log_type_t)v98, "Added %ld item IDs, after %s", v66, v79);
        sub_100007F18(v67);
        sub_100007F18(v68);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v117 + 8))(v122, v116);
    swift_unknownObjectRetain();
    int v60 = 1;
    sub_100059BA0(v114, v112, 1);
    sub_10005E23C();
    return swift_release();
  }
  else
  {
    uint64_t v35 = v120;
    uint64_t v36 = sub_100057B44();
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v35, v36, v116);
    uint64_t v58 = sub_1000896E0();
    int v57 = sub_10008A3A0();
    uint64_t v55 = &v138;
    uint64_t v138 = 2;
    unint64_t v53 = sub_10000818C();
    unint64_t v54 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v56 = v139;
    sub_100009334(&qword_1000A2E38);
    uint64_t v59 = sub_10008A6C0();
    if (os_log_type_enabled(v58, (os_log_type_t)v57))
    {
      uint64_t v37 = v111;
      uint64_t v43 = (uint8_t *)sub_10008A470();
      void v41[2] = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v42 = 0;
      uint64_t v44 = sub_100007E5C(0);
      uint64_t v45 = sub_100007E5C(v42);
      uint64_t v49 = &v137;
      unint64_t v137 = v43;
      uint64_t v50 = &v136;
      uint64_t v136 = v44;
      uint64_t v47 = &v135;
      uint64_t v135 = v45;
      unsigned int v46 = 0;
      sub_100007EB8(0, &v137);
      sub_100007EB8(v46, v49);
      uint64_t v134 = v59;
      uint64_t v48 = v41;
      __chkstk_darwin(v41);
      char v38 = v50;
      uint64_t v39 = &v41[-6];
      uint64_t v51 = &v41[-6];
      v39[2] = v49;
      v39[3] = v38;
      v39[4] = v40;
      uint64_t v52 = sub_100009334((uint64_t *)&unk_1000A2E60);
      sub_10000963C();
      sub_10008A120();
      if (v37)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v57, "Collection added item ids after itemID but there is no result handler", v43, v56);
        v41[1] = 0;
        sub_100007F18(v44);
        sub_100007F18(v45);
        sub_10008A450();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v117 + 8))(v120, v116);
  }
}

void sub_10005B08C(void *a1)
{
  id v26 = a1;
  uint64_t v36 = 0;
  int v23 = sub_10000960C;
  uint64_t v47 = 0;
  uint64_t v46 = 0;
  uint64_t v24 = 0;
  uint64_t v31 = sub_100089700();
  uint64_t v29 = *(void *)(v31 - 8);
  uint64_t v30 = v31 - 8;
  unint64_t v27 = (*(void *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v26);
  uint64_t v1 = (char *)v11 - v27;
  uint64_t v28 = (char *)v11 - v27;
  uint64_t v47 = v2;
  uint64_t v46 = v3;
  uint64_t v4 = sub_100057B44();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v1, v4, v31);
  char v38 = sub_1000896E0();
  int v37 = sub_10008A3B0();
  char v34 = &v44;
  uint64_t v44 = 2;
  unint64_t v32 = sub_10000818C();
  unint64_t v33 = sub_100008208();
  sub_100008284();
  sub_10008A140();
  uint32_t v35 = v45;
  sub_100009334(&qword_1000A2E38);
  uint64_t v39 = sub_10008A6C0();
  if (os_log_type_enabled(v38, (os_log_type_t)v37))
  {
    uint64_t v5 = v24;
    uint64_t v13 = (uint8_t *)sub_10008A470();
    v11[1] = sub_100009334((uint64_t *)&unk_1000A4320);
    uint64_t v12 = 0;
    uint64_t v14 = sub_100007E5C(0);
    uint64_t v15 = sub_100007E5C(v12);
    unint64_t v19 = &v43;
    uint64_t v43 = v13;
    uint64_t v20 = &v42;
    uint64_t v42 = v14;
    uint64_t v17 = &v41;
    uint64_t v41 = v15;
    unsigned int v16 = 0;
    sub_100007EB8(0, &v43);
    sub_100007EB8(v16, v19);
    uint64_t v40 = v39;
    uint64_t v18 = v11;
    __chkstk_darwin(v11);
    uint64_t v6 = v20;
    uint64_t v7 = &v11[-6];
    uint64_t v21 = &v11[-6];
    void v7[2] = v19;
    v7[3] = v6;
    void v7[4] = v8;
    uint64_t v22 = sub_100009334((uint64_t *)&unk_1000A2E60);
    sub_10000963C();
    sub_10008A120();
    if (v5)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v37, "Did finish initial load", v13, v35);
      v11[0] = 0;
      sub_100007F18(v14);
      sub_100007F18(v15);
      sub_10008A450();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v25;

  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v31);
  swift_getObjectType();
  id v10 = v9;
  [v26 stopObserving:v9];
  swift_unknownObjectRelease();
  sub_10005B4B8();
}

void sub_10005B4B8()
{
  unint64_t v137 = sub_10000960C;
  uint64_t v138 = sub_10005E6A4;
  uint32_t v139 = sub_100013CA8;
  char v140 = sub_100013CF4;
  uint64_t v141 = sub_100013D40;
  uint64_t v142 = sub_10005E6EC;
  uint64_t v143 = sub_100013CA8;
  uint64_t v144 = sub_100013CF4;
  uint64_t v145 = sub_100013D40;
  uint64_t v146 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  unint64_t v147 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v148 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100013D8C;
  unint64_t v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  uint64_t v150 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100009268;
  unint64_t v151 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100013D8C;
  uint64_t v189 = 0;
  uint64_t v153 = 0;
  uint64_t v152 = 0;
  id v180 = 0;
  uint64_t v178 = 0;
  uint64_t v154 = sub_100089700();
  uint64_t v155 = *(void *)(v154 - 8);
  uint64_t v156 = v154 - 8;
  unint64_t v157 = (*(void *)(v155 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v154);
  uint64_t v158 = (char *)&v48 - v157;
  unint64_t v159 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v48 - v157);
  uint64_t v160 = (char *)&v48 - v159;
  uint64_t v189 = v0;
  uint64_t v161 = (id *)(v0 + OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageList);
  uint64_t v162 = &v188;
  swift_beginAccess();
  id v163 = *v161;
  id v2 = v163;
  swift_endAccess();
  if (!v163)
  {
LABEL_16:
    uint64_t v9 = v158;
    uint64_t v10 = sub_100057B44();
    (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v9, v10, v154);
    uint64_t v11 = v136;
    uint64_t v68 = 24;
    uint64_t v82 = 7;
    uint64_t v12 = swift_allocObject();
    id v13 = v136;
    uint64_t v73 = v12;
    *(void *)(v12 + 16) = v136;
    id v14 = v13;
    uint64_t v79 = swift_allocObject();
    *(void *)(v79 + 16) = v136;
    uint64_t v94 = sub_1000896E0();
    int v95 = sub_10008A3A0();
    unsigned int v71 = &v186;
    uint64_t v186 = 14;
    unint64_t v69 = sub_10000818C();
    unint64_t v70 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v72 = v187;
    uint64_t v77 = 17;
    uint64_t v85 = swift_allocObject();
    *(unsigned char *)(v85 + 16) = 0;
    uint64_t v86 = swift_allocObject();
    int v78 = 4;
    *(unsigned char *)(v86 + 16) = 4;
    uint64_t v81 = 32;
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v73;
    uint64_t v74 = v15;
    *(void *)(v15 + 16) = v138;
    *(void *)(v15 + 24) = v16;
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = v74;
    uint64_t v75 = v17;
    *(void *)(v17 + 16) = v139;
    *(void *)(v17 + 24) = v18;
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = v75;
    uint64_t v76 = v19;
    *(void *)(v19 + 16) = v140;
    *(void *)(v19 + 24) = v20;
    uint64_t v21 = swift_allocObject();
    uint64_t v22 = v76;
    uint64_t v87 = v21;
    *(void *)(v21 + 16) = v141;
    *(void *)(v21 + 24) = v22;
    uint64_t v88 = swift_allocObject();
    *(unsigned char *)(v88 + 16) = 0;
    uint64_t v89 = swift_allocObject();
    *(unsigned char *)(v89 + 16) = v78;
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = v79;
    uint64_t v80 = v23;
    *(void *)(v23 + 16) = v142;
    *(void *)(v23 + 24) = v24;
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v80;
    uint64_t v83 = v25;
    *(void *)(v25 + 16) = v143;
    *(void *)(v25 + 24) = v26;
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v83;
    uint64_t v84 = v27;
    *(void *)(v27 + 16) = v144;
    *(void *)(v27 + 24) = v28;
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v84;
    uint64_t v91 = v29;
    *(void *)(v29 + 16) = v145;
    *(void *)(v29 + 24) = v30;
    uint64_t v93 = sub_100009334(&qword_1000A2E38);
    uint64_t v90 = sub_10008A6C0();
    uint64_t v92 = v31;
    swift_retain();
    uint64_t v32 = v85;
    unint64_t v33 = v92;
    *uint64_t v92 = v146;
    v33[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32;
    swift_retain();
    uint64_t v34 = v86;
    uint32_t v35 = v92;
    v92[2] = v147;
    v35[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
    swift_retain();
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v87;
    int v37 = v92;
    v92[4] = v148;
    v37[5] = v36;
    swift_retain();
    uint64_t v38 = v88;
    uint64_t v39 = v92;
    v92[6] = v149;
    v39[7] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38;
    swift_retain();
    uint64_t v40 = v89;
    uint64_t v41 = v92;
    v92[8] = v150;
    v41[9] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v40;
    swift_retain();
    uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v91;
    uint64_t v43 = v92;
    v92[10] = v151;
    v43[11] = v42;
    sub_100007A04();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v94, (os_log_type_t)v95))
    {
      uint64_t v44 = v152;
      uint64_t v61 = (uint8_t *)sub_10008A470();
      uint64_t v59 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v60 = 0;
      uint64_t v62 = sub_100007E5C(0);
      uint64_t v63 = sub_100007E5C(v60);
      uint64_t v64 = &v185;
      uint64_t v185 = v61;
      uint64_t v65 = &v184;
      uint64_t v184 = v62;
      uint64_t v66 = &v183;
      uint64_t v183 = v63;
      sub_100007EB8(0, &v185);
      sub_100007EB8(2, v64);
      uint64_t v181 = v146;
      uint64_t v182 = v85;
      sub_100007ECC(&v181, (uint64_t)v64, (uint64_t)v65, (uint64_t)v66);
      uint64_t v67 = v44;
      if (v44)
      {
        __break(1u);
      }
      else
      {
        uint64_t v181 = v147;
        uint64_t v182 = v86;
        sub_100007ECC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v58 = 0;
        uint64_t v181 = v148;
        uint64_t v182 = v87;
        sub_100007ECC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v57 = 0;
        uint64_t v181 = v149;
        uint64_t v182 = v88;
        sub_100007ECC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v56 = 0;
        uint64_t v181 = v150;
        uint64_t v182 = v89;
        sub_100007ECC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        uint64_t v55 = 0;
        uint64_t v181 = v151;
        uint64_t v182 = v91;
        sub_100007ECC(&v181, (uint64_t)&v185, (uint64_t)&v184, (uint64_t)&v183);
        _os_log_impl((void *)&_mh_execute_header, v94, (os_log_type_t)v95, "Cannot fetch display messages. Valid messagesList: %{BOOL}d, resultHandler: %{BOOL}d", v61, v72);
        uint64_t v54 = 0;
        sub_100007F18(v62);
        sub_100007F18(v63);
        sub_10008A450();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v155 + 8))(v158, v154);
    unint64_t v53 = &v136[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_resultHandler];
    swift_beginAccess();
    if (*(void *)v53)
    {
      uint64_t v49 = *(void *)v53;
      swift_retain();
      swift_endAccess();
      uint64_t v50 = *(void (**)(void, uint64_t))(v49
                                                   + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_completion);
      uint64_t v52 = *(void *)(v49 + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_completion + 8);
      swift_retain();
      swift_release();
      sub_100014514();
      uint64_t v45 = swift_allocError();
      uint64_t v46 = v50;
      uint64_t v51 = v45;
      *uint64_t v47 = 2;
      v46(0, v45);
      swift_errorRelease();
      swift_release();
    }
    else
    {
      swift_endAccess();
    }
    return;
  }
  id v135 = v163;
  id v131 = v163;
  id v180 = v163;
  uint32_t v132 = &v136[OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_resultHandler];
  uint64_t v133 = &v179;
  swift_beginAccess();
  uint64_t v134 = *(void *)v132;
  swift_retain();
  swift_endAccess();
  if (!v134)
  {

    goto LABEL_16;
  }
  uint64_t v130 = v134;
  uint64_t v125 = v134;
  uint64_t v178 = v134;
  uint64_t v128 = sub_10005C648();
  swift_bridgeObjectRetain();
  uint64_t v127 = &v177;
  uint64_t v177 = v128;
  uint64_t v126 = sub_100009334(&qword_1000A4340);
  sub_10005E32C();
  int v129 = sub_10008A340();
  sub_10000ADA0();
  swift_bridgeObjectRelease();
  if (v129)
  {
    uint64_t v3 = v160;
    uint64_t v4 = sub_100057B44();
    (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v3, v4, v154);
    uint64_t v123 = sub_1000896E0();
    int v122 = sub_10008A3B0();
    uint64_t v120 = &v168;
    uint64_t v168 = 2;
    unint64_t v118 = sub_10000818C();
    unint64_t v119 = sub_100008208();
    sub_100008284();
    sub_10008A140();
    uint32_t v121 = v169;
    sub_100009334(&qword_1000A2E38);
    uint64_t v124 = sub_10008A6C0();
    if (os_log_type_enabled(v123, (os_log_type_t)v122))
    {
      uint64_t v5 = v152;
      double v108 = (uint8_t *)sub_10008A470();
      uint64_t v106 = sub_100009334((uint64_t *)&unk_1000A4320);
      uint64_t v107 = 0;
      uint64_t v109 = sub_100007E5C(0);
      uint64_t v110 = sub_100007E5C(v107);
      uint64_t v114 = &v167;
      uint64_t v167 = v108;
      uint64_t v115 = &v166;
      uint64_t v166 = v109;
      uint64_t v112 = &v165;
      uint64_t v165 = v110;
      unsigned int v111 = 0;
      sub_100007EB8(0, &v167);
      sub_100007EB8(v111, v114);
      uint64_t v164 = v124;
      uint64_t v113 = &v48;
      __chkstk_darwin(&v48);
      uint64_t v6 = v115;
      uint64_t v7 = &v48 - 6;
      uint64_t v116 = &v48 - 6;
      void v7[2] = (uint64_t)v114;
      v7[3] = (uint64_t)v6;
      void v7[4] = v8;
      uint64_t v117 = sub_100009334((uint64_t *)&unk_1000A2E60);
      sub_10000963C();
      sub_10008A120();
      if (v5)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v123, (os_log_type_t)v122, "Return immediately since itemIDs to request are empty", v108, v121);
        uint64_t v105 = 0;
        sub_100007F18(v109);
        sub_100007F18(v110);
        sub_10008A450();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    (*(void (**)(char *, uint64_t))(v155 + 8))(v160, v154);
    long long v101 = *(void (**)(uint64_t, uint64_t))(v125
                                                   + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_completion);
    uint64_t v104 = *(void *)(v125 + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_completion + 8);
    swift_retain();
    uint64_t v102 = 0;
    sub_1000165F0();
    uint64_t v103 = sub_10008A6C0();
    v101(v103, v102);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v96 = sub_10005C648();
    sub_100009334(&qword_1000A42E0);
    Class isa = sub_10008A180().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v97 = *(void *)(v125 + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_completion);
    uint64_t v98 = *(void *)(v125 + OBJC_IVAR____TtCC19MailWidgetExtension18MessagesDataSource13ResultHandler_completion + 8);
    swift_retain();
    uint64_t v175 = v97;
    uint64_t v176 = v98;
    aBlock = _NSConcreteStackBlock;
    int v171 = 1107296256;
    int v172 = 0;
    unint64_t v173 = sub_100058928;
    uint64_t v174 = &unk_10009C418;
    uint64_t v99 = _Block_copy(&aBlock);
    swift_release();
    [v131 displayMessagesFromThreadsWithItemIDs:isa completion:v99];
    _Block_release(v99);
  }
  swift_release();
}

BOOL sub_10005C4F4(uint64_t a1)
{
  uint64_t v3 = (id *)(a1 + OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_messageList);
  swift_beginAccess();
  id v4 = *v3;
  id v1 = *v3;
  swift_endAccess();
  id v5 = v4;
  sub_1000137A8(&v5);
  return v4 != 0;
}

BOOL sub_10005C59C(uint64_t a1)
{
  id v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC19MailWidgetExtension18MessagesDataSource_resultHandler);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_retain();
  swift_endAccess();
  sub_10001F4C8();
  return v3 == 0;
}

uint64_t sub_10005C648()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_endAccess();
  swift_bridgeObjectRetain();
  sub_100009334(&qword_1000A4340);
  sub_10005E32C();
  char v2 = sub_10008A340();
  sub_10000ADA0();
  swift_bridgeObjectRelease();
  if (v2)
  {
    sub_100009334(&qword_1000A42E0);
    return sub_10008A6C0();
  }
  else
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_endAccess();
    sub_100009334(&qword_1000A42E0);
    sub_10008A1C0();
    swift_bridgeObjectRelease();
    sub_10008A700();
    if (v3 < 0)
    {
      sub_10008A5A0();
      __break(1u);
    }
    swift_beginAccess();
    sub_10008A230();
    swift_endAccess();
    sub_100009334(&qword_1000A4370);
    sub_10005EA08();
    return sub_10008A220();
  }
}

uint64_t sub_10005CC74(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005CD08(id *a1, uint64_t a2)
{
  id v3 = *a1;
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_getObjectType();
  unsigned __int8 v5 = [v3 isEqual:a2];
  swift_unknownObjectRelease();
  return v5 & 1;
}

BOOL sub_10005CD88(uint64_t a1, char a2)
{
  return (a2 & 1) != 0;
}

id sub_10005CDD8(void *a1, void *a2)
{
  id v6 = [v2 initWithQuery:a1];

  return v6;
}

uint64_t sub_10005CE38()
{
  return swift_deallocObject();
}

uint64_t sub_10005CE78()
{
  return sub_100059B1C();
}

uint64_t sub_10005CE80()
{
  return swift_deallocObject();
}

uint64_t sub_10005CEC0()
{
  return sub_100059B54();
}

uint64_t sub_10005CEC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_10005CF00(uint64_t (*a1)(uint64_t *, uint64_t), uint64_t a2, unsigned int a3)
{
  if (a3 < 0x80uLL)
  {
    if (a3 > 0xFF) {
      goto LABEL_12;
    }
    unsigned int v5 = (a3 + 1);
  }
  else
  {
    int v7 = (a3 & 0x3F) << 8;
    if (a3 >> 6 < 0x20uLL)
    {
      unsigned int v5 = (v7 | (a3 >> 6)) + 33217;
    }
    else
    {
      int v6 = (v7 | (a3 >> 6) & 0x3F) << 8;
      if (a3 >> 12 < 0x10uLL) {
        unsigned int v5 = (v6 | (a3 >> 12)) + 8487393;
      }
      else {
        unsigned int v5 = ((a3 >> 18) | ((v6 | (a3 >> 12) & 0x3F) << 8)) - 2122219023;
      }
    }
  }
  uint64_t v4 = 4 - ((uint64_t)__clz(v5) >> 3);
  uint64_t v8 = (v5 - 0x101010101010101) & ((1 << ((8 * v4) & 0x3F)) - 1);
  if (v4 >= 0) {
    return a1(&v8, v4);
  }
  sub_10008A5C0();
  __break(1u);
LABEL_12:
  uint64_t result = sub_10008A5A0();
  __break(1u);
  return result;
}

uint64_t sub_10005D24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, unint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, unint64_t a10, unint64_t a11)
{
  uint64_t v21 = a9;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  unint64_t v24 = a3;
  uint64_t v25 = a4;
  unint64_t v26 = a6;
  uint64_t v27 = a7;
  int v28 = a8;
  unint64_t v29 = a10;
  unint64_t v30 = a11;
  uint64_t v31 = sub_10005F05C;
  uint64_t v32 = sub_10005F0A0;
  unint64_t v33 = "Fatal error";
  uint64_t v34 = "Unexpectedly found nil while unwrapping an Optional value";
  uint32_t v35 = "Swift/StaticString.swift";
  uint64_t v36 = "Not enough bits to represent the passed value";
  int v37 = "Swift/Integers.swift";
  uint64_t v38 = "UnsafeBufferPointer with negative count";
  uint64_t v39 = "Swift/UnsafeBufferPointer.swift";
  uint64_t v40 = 0;
  unint64_t v42 = a6;
  uint64_t v43 = a7;
  char v44 = a8;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  unint64_t v47 = a10;
  unint64_t v48 = a11;
  if (a5)
  {
    if (v24 <= 0xFFFFFFFF)
    {
      unsigned int v20 = v24;
      if ((v24 < 0xD800 || v20 > 0xDFFF) && v20 <= 0x10FFFF)
      {
        uint64_t v19 = &v18;
        uint64_t v11 = (uint64_t (*)(uint64_t *, uint64_t))__chkstk_darwin(v32);
        uint64_t v16 = v31;
        uint64_t v17 = &v41;
        sub_10005CF00(v11, (uint64_t)v14, v12);
        return (uint64_t)v19;
      }
      v14[0] = 2;
      uint64_t v15 = 148;
      LODWORD(v16) = 0;
      sub_10008A5A0();
      __break(1u);
    }
    v14[0] = 2;
    uint64_t v15 = 3455;
    LODWORD(v16) = 0;
    sub_10008A5A0();
    __break(1u);
  }
  if (v24) {
    uint64_t v49 = v24;
  }
  else {
    uint64_t v49 = 0;
  }
  uint64_t v18 = v49;
  if (!v49)
  {
    v14[0] = 2;
    uint64_t v15 = 136;
    LODWORD(v16) = 0;
    sub_10008A5A0();
    __break(1u);
  }
  if (v25 >= 0) {
    return sub_10005D64C(v18, v25, v26, v27, v28, v22, v23, v29, v21, v30);
  }
  uint64_t result = sub_10008A5C0();
  __break(1u);
  return result;
}

uint64_t sub_10005D64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, unint64_t a10)
{
  uint64_t v21 = a9;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  unint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  unint64_t v28 = a8;
  unint64_t v29 = a10;
  unint64_t v30 = sub_10005F0CC;
  uint64_t v31 = sub_10005F0A0;
  uint64_t v32 = "Fatal error";
  unint64_t v33 = "Unexpectedly found nil while unwrapping an Optional value";
  uint64_t v34 = "Swift/StaticString.swift";
  uint32_t v35 = "Not enough bits to represent the passed value";
  uint64_t v36 = "Swift/Integers.swift";
  int v37 = "UnsafeBufferPointer with negative count";
  uint64_t v38 = "Swift/UnsafeBufferPointer.swift";
  uint64_t v39 = 0;
  uint64_t v41 = a6;
  uint64_t v42 = a7;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  unint64_t v45 = a8;
  unint64_t v46 = a10;
  if (a5)
  {
    if (v24 <= 0xFFFFFFFF)
    {
      unsigned int v20 = v24;
      if ((v24 < 0xD800 || v20 > 0xDFFF) && v20 <= 0x10FFFF)
      {
        uint64_t v19 = &v17;
        uint64_t v10 = (uint64_t (*)(uint64_t *, uint64_t))__chkstk_darwin(v31);
        uint64_t v15 = v30;
        uint64_t v16 = &v40;
        sub_10005CF00(v10, (uint64_t)v13, v11);
        return (uint64_t)v19;
      }
      v13[0] = 2;
      uint64_t v14 = 148;
      LODWORD(v15) = 0;
      sub_10008A5A0();
      __break(1u);
    }
    v13[0] = 2;
    uint64_t v14 = 3455;
    LODWORD(v15) = 0;
    sub_10008A5A0();
    __break(1u);
  }
  if (v24) {
    uint64_t v47 = v24;
  }
  else {
    uint64_t v47 = 0;
  }
  uint64_t v18 = v47;
  if (!v47)
  {
    v13[0] = 2;
    uint64_t v14 = 136;
    LODWORD(v15) = 0;
    sub_10008A5A0();
    __break(1u);
  }
  if (v25 >= 0) {
    return sub_10005DA24(v18, v25, v26, v27, v22, v23, v28, v29);
  }
  uint64_t result = sub_10008A5C0();
  __break(1u);
  return result;
}

uint64_t sub_10005DA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8)
{
  if (!a3)
  {
    sub_10008A5A0();
    __break(1u);
  }
  if (a4 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (a4 <= 0x7FFFFFFF)
    {
      if (!a5)
      {
        sub_10008A5A0();
        __break(1u);
      }
      if (a6 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a6 <= 0x7FFFFFFF)
        {
          if (!a1)
          {
            sub_10008A5A0();
            __break(1u);
          }
          if (a2 >= (uint64_t)0xFFFFFFFF80000000)
          {
            if (a2 <= 0x7FFFFFFF)
            {
              if (a7 <= 0xFFFFFFFF)
              {
                if (a8 <= 0xFFFFFFFF) {
                  return _swift_stdlib_reportUnimplementedInitializerInFile();
                }
                sub_10008A5A0();
                __break(1u);
              }
              sub_10008A5A0();
              __break(1u);
            }
            sub_10008A5A0();
            __break(1u);
          }
          sub_10008A5A0();
          __break(1u);
        }
        sub_10008A5A0();
        __break(1u);
      }
      sub_10008A5A0();
      __break(1u);
    }
    sub_10008A5A0();
    __break(1u);
  }
  uint64_t result = sub_10008A5A0();
  __break(1u);
  return result;
}

uint64_t sub_10005DF70(uint64_t result)
{
  uint64_t v3 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    if (result > 0)
    {
      sub_100089E00();
      uint64_t v1 = sub_10008A1B0();
      *(void *)(v1 + 16) = v3;
      char v2 = (void *)v1;
    }
    else
    {
      swift_retain();
      char v2 = &_swiftEmptyArrayStorage;
    }
    sub_100089E00();
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_10005E050()
{
  return swift_deallocObject();
}

uint64_t sub_10005E07C()
{
  return swift_deallocObject();
}

uint64_t sub_10005E0A8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_10005E0E4()
{
  return swift_deallocObject();
}

uint64_t sub_10005E124()
{
  return swift_deallocObject();
}

uint64_t sub_10005E164()
{
  return swift_deallocObject();
}

uint64_t sub_10005E190()
{
  return swift_deallocObject();
}

uint64_t sub_10005E1BC()
{
  return swift_deallocObject();
}

uint64_t sub_10005E1FC()
{
  return swift_deallocObject();
}

uint64_t sub_10005E23C()
{
  return swift_unknownObjectRelease();
}

unint64_t sub_10005E27C()
{
  uint64_t v2 = qword_1000A4348;
  if (!qword_1000A4348)
  {
    sub_1000096C0(&qword_1000A4340);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4348);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10005E300(id *a1)
{
  return sub_10005CD08(a1, *(void *)(v1 + 16)) & 1;
}

unint64_t sub_10005E32C()
{
  uint64_t v2 = qword_1000A4350;
  if (!qword_1000A4350)
  {
    sub_1000096C0(&qword_1000A4340);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4350);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10005E3B0()
{
  uint64_t v2 = qword_1000A4358;
  if (!qword_1000A4358)
  {
    sub_1000096C0(&qword_1000A4340);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4358);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10005E434()
{
  return swift_deallocObject();
}

uint64_t sub_10005E474()
{
  return swift_deallocObject();
}

uint64_t sub_10005E4B4()
{
  return swift_deallocObject();
}

uint64_t sub_10005E4E0()
{
  return swift_deallocObject();
}

uint64_t sub_10005E50C()
{
  return swift_deallocObject();
}

uint64_t sub_10005E54C()
{
  return swift_deallocObject();
}

uint64_t sub_10005E58C()
{
  return swift_deallocObject();
}

uint64_t sub_10005E5B8()
{
  return swift_deallocObject();
}

uint64_t sub_10005E5E4()
{
  return swift_deallocObject();
}

uint64_t sub_10005E624()
{
  return swift_deallocObject();
}

uint64_t sub_10005E664()
{
  return swift_deallocObject();
}

BOOL sub_10005E6A4()
{
  return sub_10005C4F4(*(void *)(v0 + 16));
}

uint64_t sub_10005E6AC()
{
  return swift_deallocObject();
}

BOOL sub_10005E6EC()
{
  return sub_10005C59C(*(void *)(v0 + 16));
}

uint64_t sub_10005E6F4()
{
  return swift_deallocObject();
}

uint64_t sub_10005E720()
{
  return swift_deallocObject();
}

uint64_t sub_10005E74C()
{
  return swift_deallocObject();
}

uint64_t sub_10005E78C()
{
  return swift_deallocObject();
}

uint64_t sub_10005E7CC()
{
  return swift_deallocObject();
}

uint64_t sub_10005E80C()
{
  return swift_deallocObject();
}

uint64_t sub_10005E84C()
{
  return swift_deallocObject();
}

uint64_t sub_10005E878()
{
  return swift_deallocObject();
}

uint64_t sub_10005E8A4()
{
  return swift_deallocObject();
}

uint64_t sub_10005E8E4()
{
  return swift_deallocObject();
}

uint64_t sub_10005E924()
{
  return swift_deallocObject();
}

uint64_t sub_10005E964()
{
  return swift_deallocObject();
}

uint64_t sub_10005E9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10005E9EC()
{
  return swift_release();
}

unint64_t sub_10005EA08()
{
  uint64_t v2 = qword_1000A4378;
  if (!qword_1000A4378)
  {
    sub_1000096C0(&qword_1000A4370);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4378);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10005EA8C()
{
  return type metadata accessor for MessagesDataSource.ResultHandler();
}

uint64_t sub_10005EAA8()
{
  uint64_t updated = type metadata accessor for Mailbox();
  if (v0 <= 0x3F)
  {
    uint64_t updated = swift_updateClassMetadata2();
    if (!updated) {
      return 0;
    }
  }
  return updated;
}

uint64_t sub_10005EBA8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  sub_10005EBFC();
  uint64_t result = a1;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10005EBFC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_10005EC3C()
{
  return sub_10005E23C();
}

uint64_t sub_10005EC64(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  sub_10005EBFC();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4 & 1;
  sub_10005E23C();
  return a1;
}

uint64_t sub_10005ECCC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = *(void *)a2;
  *(unsigned char *)(result + 8) = *(unsigned char *)(a2 + 8);
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10005ECE0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v2 & 1;
  sub_10005E23C();
}

uint64_t sub_10005ED30(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v4 = *(void *)a1 + 254;
    }
    else
    {
      unsigned int v2 = 255 - *(unsigned __int8 *)(a1 + 8);
      if (v2 >= 0xFE) {
        unsigned int v2 = -1;
      }
      int v4 = v2;
    }
  }
  else
  {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_10005EE78(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = result;
  int v4 = (unsigned char *)(result + 9);
  if (a2 > 0xFE)
  {
    uint64_t result = 0;
    *(unsigned char *)(v3 + 8) = 0;
    *(void *)uint64_t v3 = a2 - 255;
    if (a3 >= 0xFF) {
      *int v4 = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *int v4 = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10005F02C(uint64_t a1)
{
  return *(unsigned char *)(a1 + 8) & 1;
}

uint64_t sub_10005F038(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

void *type metadata accessor for MessagesDataSource.ResultHandler.Insertion()
{
  return &unk_10009C4C0;
}

uint64_t sub_10005F05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10005D64C(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), a3, *(void *)(v3 + 64));
}

uint64_t sub_10005F0A0(uint64_t a1, uint64_t a2)
{
  return sub_10005CEC8(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_10005F0CC(uint64_t a1, uint64_t a2)
{
  return sub_10005DA24(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_10005F0E8()
{
  return swift_deallocObject();
}

uint64_t sub_10005F138()
{
  return sub_100058790(v0[2], v0[3], v0[4]);
}

uint64_t sub_10005F148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10005F190()
{
  return swift_release();
}

uint64_t sub_10005F1AC()
{
  uint64_t v7 = type metadata accessor for Mailbox();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v1 + 32) & ~v1;
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + v8 + *(int *)(v7 + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10005F388()
{
  uint64_t v8 = *(void *)(type metadata accessor for Mailbox() - 8);
  unint64_t v1 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((v1 + *(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = *(void (**)(uint64_t))v4;
  uint64_t v6 = *(void *)(v4 + 8);

  return sub_100057588(v2, v3, v0 + v1, v5, v6);
}

uint64_t sub_10005F438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  uint64_t result = a1;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10005F480()
{
  return swift_release();
}

uint64_t sub_10005F49C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_10005794C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_10005F4C4()
{
  uint64_t v2 = qword_1000A44E8;
  if (!qword_1000A44E8)
  {
    sub_1000096C0(&qword_1000A3600);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A44E8);
    return WitnessTable;
  }
  return v2;
}

id *sub_10005F548()
{
  id v5 = 0;
  id v4 = sub_10005F5F0();
  sub_10005F64C();
  sub_100039F6C((uint64_t)&v4, (uint64_t)&unk_10009C5A0, (uint64_t)&v5);
  sub_1000137A8(&v4);
  id v2 = v5;
  id v0 = v5;
  id v3 = v2;
  sub_1000899A0();
  sub_1000137A8(&v3);
  uint64_t result = &v5;
  sub_1000137A8(&v5);
  return result;
}

id sub_10005F5F0()
{
  id v3 = 0;
  sub_100064268();
  id v2 = sub_10000BF54();
  id v0 = v2;
  id v3 = v2;
  sub_1000137A8(&v3);
  return v2;
}

unint64_t sub_10005F64C()
{
  uint64_t v2 = qword_1000A44F0;
  if (!qword_1000A44F0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A44F0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10005F6CC()
{
  return sub_100089770();
}

uint64_t sub_10005F704(uint64_t a1)
{
  return nullsub_1(a1);
}

id *sub_10005F71C()
{
  return sub_10005F548();
}

uint64_t sub_10005F734@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v21 = a1;
  uint64_t v56 = 0;
  uint64_t v26 = sub_10005FE1C;
  uint64_t v42 = "Title of the Mail widget displayed in the widget picker";
  unint64_t v45 = &opaque type descriptor for <<opaque return type of WidgetConfiguration.supportedFamilies(_:)>>;
  unint64_t v53 = "Description of the Mail widget, displayed in the widget picker";
  uint64_t v59 = &opaque type descriptor for <<opaque return type of WidgetConfiguration.configurationDisplayName(_:)>>;
  uint64_t v100 = 0;
  uint64_t v43 = sub_100009334(&qword_1000A44F8);
  uint64_t v39 = *(void *)(v43 - 8);
  uint64_t v40 = v43 - 8;
  unint64_t v18 = (*(void *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v43);
  uint64_t v41 = (char *)&v17 - v18;
  uint64_t v57 = sub_100009334(&qword_1000A4500);
  uint64_t v50 = *(void *)(v57 - 8);
  uint64_t v51 = v57 - 8;
  unint64_t v19 = (*(void *)(v50 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v57);
  uint64_t v52 = (char *)&v17 - v19;
  uint64_t v70 = sub_100009334(&qword_1000A4508);
  uint64_t v67 = *(void *)(v70 - 8);
  uint64_t v68 = v70 - 8;
  unint64_t v20 = (*(void *)(v67 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  unint64_t v69 = (char *)&v17 - v20;
  uint64_t v100 = v2;
  id v30 = (id)MFWidgetKindMessages;
  id v3 = MFWidgetKindMessages;
  uint64_t v29 = sub_10008A080();
  uint64_t v24 = v4;
  uint64_t v27 = type metadata accessor for MFGetMailboxIntent();
  uint64_t v22 = type metadata accessor for DaemonDataSource();
  id v5 = v21;
  id v6 = sub_10000BC54(v21);
  v98[3] = v22;
  v98[4] = &off_100099EB0;
  v98[0] = v6;
  uint64_t v25 = v99;
  sub_10002FDDC(v98, v99);
  uint64_t v28 = type metadata accessor for MailWidgetView();
  unint64_t v23 = sub_100060088();
  sub_10006010C();
  sub_100089F00();

  uint64_t v37 = sub_100089EF0();
  uint64_t v36 = sub_10008A6C0();
  uint64_t v33 = v7;
  uint64_t v31 = *(void *)(v37 - 8);
  uint64_t v32 = v37 - 8;
  uint32_t v35 = *(void (**)(void))(v31 + 104);
  uint64_t v34 = v31 + 104;
  v35();
  uint64_t v8 = *(void *)(v31 + 72);
  uint64_t v60 = 1;
  ((void (*)(uint64_t, void, uint64_t))v35)(v33 + v8, enum case for WidgetFamily.systemLarge(_:), v37);
  uint64_t v9 = v36;
  sub_100007A04();
  uint64_t v38 = v9;
  unint64_t v44 = sub_100060188();
  sub_1000899C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v43);
  int v61 = 1;
  sub_10008A0B0("DISPLAY_NAME", 0xCuLL, 1);
  sub_100089930();
  int v95 = v42;
  uint64_t v96 = 55;
  int v54 = 2;
  __int16 v97 = 2;
  int v55 = 0;
  uint64_t v91 = sub_100089AF0();
  uint64_t v92 = v10;
  unsigned __int8 v93 = v11;
  uint64_t v94 = v12;
  uint64_t v46 = v91;
  uint64_t v47 = v10;
  int v48 = v11;
  uint64_t v49 = v12;
  uint64_t v89 = v43;
  unint64_t v90 = v44;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v85 = v46;
  uint64_t v86 = v47;
  char v87 = v48 & 1 & v61;
  uint64_t v88 = v49;
  sub_1000899D0();
  sub_1000430F4(v46, v47, v48 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v57);
  sub_10008A0B0("WIDGET_DESCRIPTION", 0x12uLL, v61 & 1);
  sub_100089930();
  uint64_t v81 = v53;
  uint64_t v82 = 62;
  char v83 = v54;
  char v84 = v55 & 1 & v61;
  uint64_t v77 = sub_100089AF0();
  uint64_t v78 = v13;
  unsigned __int8 v79 = v14;
  uint64_t v80 = v15;
  uint64_t v63 = v77;
  uint64_t v64 = v13;
  int v65 = v14;
  uint64_t v66 = v15;
  uint64_t v75 = v57;
  uint64_t v76 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v71 = v63;
  uint64_t v72 = v64;
  char v73 = v65 & 1 & v61;
  uint64_t v74 = v66;
  sub_1000899B0();
  sub_1000430F4(v63, v64, v65 & 1);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v69, v70);
}

uint64_t sub_10005FE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v12 = a1;
  unint64_t v23 = 0;
  uint64_t v22 = 0;
  uint64_t v2 = sub_100009334(&qword_1000A3EF8);
  unint64_t v9 = (*(void *)(*(void *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  uint64_t v15 = (char *)&v8 - v9;
  uint64_t v10 = 0;
  unint64_t v11 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  uint64_t v16 = (uint64_t)&v8 - v11;
  uint64_t v18 = type metadata accessor for MailWidgetView();
  unint64_t v13 = (*(void *)(*(void *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v12);
  unint64_t v20 = (char *)&v8 - v13;
  unint64_t v14 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v21 = (uint64_t *)((char *)&v8 - v14);
  unint64_t v23 = (char *)&v8 - v14;
  uint64_t v22 = v5;
  sub_10001FD60(v5, v6);
  sub_10006020C();
  sub_100060240(v15, v16, v20);
  unint64_t v19 = sub_100060088();
  sub_100039F6C((uint64_t)v20, v18, (uint64_t)v21);
  sub_100061538((uint64_t)v20);
  sub_1000610A0(v21, v20);
  sub_100039F6C((uint64_t)v20, v18, v17);
  sub_100061538((uint64_t)v20);
  return sub_100061538((uint64_t)v21);
}

uint64_t type metadata accessor for MailWidgetView()
{
  uint64_t v1 = qword_1000A45B8;
  if (!qword_1000A45B8) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

unint64_t sub_100060088()
{
  uint64_t v2 = qword_1000A4510;
  if (!qword_1000A4510)
  {
    type metadata accessor for MailWidgetView();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4510);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10006010C()
{
  uint64_t v2 = qword_1000A4518;
  if (!qword_1000A4518)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4518);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100060188()
{
  uint64_t v2 = qword_1000A4520;
  if (!qword_1000A4520)
  {
    sub_1000096C0(&qword_1000A44F8);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4520);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10006020C()
{
  return sub_100089730();
}

uint64_t sub_100060240@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_100064198(a1, a3);
  uint64_t v3 = type metadata accessor for MailWidgetView();
  return sub_10001FFFC(a2, (uint64_t)a3 + *(int *)(v3 + 20));
}

uint64_t sub_100060290@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1;
  uint64_t v8 = 0;
  uint64_t v6 = sub_100009334(&qword_1000A3EF8);
  unint64_t v4 = (*(void *)(*(void *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  uint64_t v7 = (uint64_t)&v3 - v4;
  uint64_t v8 = v1;
  sub_100045B20(v1, (uint64_t *)((char *)&v3 - v4));
  sub_100089710();
  return sub_100045BF0(v7);
}

id sub_100060348@<X0>(void *a1@<X8>)
{
  id result = sub_10005F5F0();
  *a1 = result;
  return result;
}

uint64_t sub_100060374@<X0>(uint64_t a1@<X8>)
{
  return sub_10005F734(*v1, a1);
}

uint64_t sub_100060390@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v7 = 0;
  uint64_t v16 = sub_10006140C;
  uint64_t v18 = sub_10005F704;
  uint64_t v29 = &opaque type descriptor for <<opaque return type of View.containerBackground<A>(for:alignment:content:)>>;
  uint64_t v46 = 0;
  unint64_t v45 = 0;
  uint64_t v23 = sub_100089A10();
  uint64_t v20 = *(void *)(v23 - 8);
  uint64_t v21 = v23 - 8;
  unint64_t v8 = (*(void *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v22 = (char *)&v7 - v8;
  uint64_t v1 = type metadata accessor for MailWidgetView();
  unint64_t v9 = (*(void *)(*(void *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  uint64_t v17 = (uint64_t)&v7 - v9;
  uint64_t v25 = sub_100009334(&qword_1000A4528);
  unint64_t v10 = (*(void *)(*(void *)(v25 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v25);
  uint64_t v24 = (uint64_t)&v7 - v10;
  uint64_t v36 = sub_100009334(&qword_1000A4530);
  uint64_t v30 = *(void *)(v36 - 8);
  uint64_t v31 = v36 - 8;
  unint64_t v12 = (*(void *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v11);
  uint64_t v34 = (uint64_t)&v7 - v12;
  unint64_t v13 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  uint64_t v35 = (uint64_t)&v7 - v13;
  uint64_t v46 = (char *)&v7 - v13;
  unint64_t v45 = v4;
  sub_1000610A0(v4, v5);
  unint64_t v14 = &v39;
  uint64_t v40 = v17;
  uint64_t v15 = sub_100009334(&qword_1000A4538);
  sub_100061414();
  sub_100089CF0();
  sub_100061538(v17);
  sub_100089A00();
  unint64_t v27 = sub_100061728();
  uint64_t v26 = &type metadata for EmptyView;
  uint64_t v28 = &protocol witness table for EmptyView;
  uint64_t v19 = sub_100060E9C();
  sub_100089BE0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v23);
  sub_1000617BC(v24);
  uint64_t v41 = v25;
  uint64_t v42 = v26;
  unint64_t v43 = v27;
  unint64_t v44 = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100039F6C(v34, v36, v35);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  uint64_t v37 = v30 + 8;
  v38(v34, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v34, v35, v36);
  sub_100039F6C(v34, v36, v32);
  v38(v34, v36);
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v35, v36);
}

uint64_t sub_10006082C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v24 = "Fatal error";
  uint64_t v25 = "MailWidgetExtension/MessagesWidget.swift";
  uint64_t v57 = 0;
  uint64_t v56 = 0;
  int v55 = 0;
  uint64_t v31 = 0;
  uint64_t v26 = type metadata accessor for MailWidgetView();
  unint64_t v27 = (*(void *)(*(void *)(v26 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v28 = (Builtin::Word *)((char *)v13 - v27);
  unint64_t v29 = (*(void *)(*(void *)(type metadata accessor for Snapshot() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v31);
  uint64_t v30 = (uint64_t)v13 - v29;
  uint64_t v32 = type metadata accessor for MessagesContentView();
  unint64_t v33 = (*(void *)(*(void *)(v32 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v31);
  uint64_t v34 = (uint64_t)v13 - v33;
  unint64_t v35 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v36 = (uint64_t)v13 - v35;
  unint64_t v37 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  uint64_t v38 = (uint64_t)v13 - v37;
  uint64_t v57 = (char *)v13 - v37;
  uint64_t v51 = sub_100089EF0();
  uint64_t v48 = *(void *)(v51 - 8);
  uint64_t v49 = v51 - 8;
  unint64_t v39 = (*(void *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v51);
  uint64_t v40 = (uint64_t)v13 - v39;
  unint64_t v41 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v13 - v39);
  uint64_t v50 = (char *)v13 - v41;
  uint64_t v42 = sub_100009334(&qword_1000A4538);
  uint64_t v44 = *(void *)(*(void *)(v42 - 8) + 64);
  unint64_t v43 = (v44 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v42);
  unint64_t v45 = (Builtin::Word *)((char *)v13 - v43);
  unint64_t v46 = (v44 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v13 - v43);
  uint64_t v47 = (Builtin::Word *)((char *)v13 - v46);
  uint64_t v56 = (char *)v13 - v46;
  int v55 = a1;
  sub_100060290(v8);
  int v52 = (*(uint64_t (**)(char *, uint64_t))(v48 + 88))(v50, v51);
  if (v52 == enum case for WidgetFamily.systemMedium(_:) || v52 == enum case for WidgetFamily.systemLarge(_:))
  {
    sub_10001FD60((uint64_t)v23 + *(int *)(v26 + 20), v30);
    uint64_t v19 = sub_1000544A0();
    int v20 = v9;
    sub_1000544DC();
    sub_1000544E4(v30, v19, v20 & 1, v36);
    unint64_t v21 = sub_1000614B4();
    sub_100039F6C(v36, v32, v38);
    sub_1000532BC(v36);
    sub_100052E2C(v38, v34);
    sub_100039F6C(v34, v32, v36);
    sub_1000532BC(v34);
    sub_10003AED8(v36, v32, (uint64_t)&type metadata for Never, v21, (uint64_t)&protocol witness table for Never, (uint64_t)v45);
    sub_1000532BC(v36);
    sub_100063964(v45, v47);
    sub_1000532BC(v38);
    sub_100063D20(v47, v45);
    sub_100061414();
    sub_100039F6C((uint64_t)v45, v42, v22);
    sub_1000617BC((uint64_t)v45);
    return sub_1000617BC((uint64_t)v47);
  }
  else
  {
    sub_1000610A0(v23, v28);
    v13[0] = 32;
    uint64_t v10 = sub_10008A6B0();
    uint64_t v16 = &v53;
    uint64_t v53 = v10;
    uint64_t v54 = v11;
    int v14 = 1;
    v58._countAndFlagsBits = sub_10008A0B0("Widget family is not supported: ", v13[0], 1);
    v13[1] = (Builtin::Word)v58._object;
    sub_10008A6A0(v58);
    swift_bridgeObjectRelease();
    sub_100060290(v40);
    sub_100030218();
    sub_10008A680();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v40, v51);
    v59._countAndFlagsBits = sub_10008A0B0("", 0, v14 & 1);
    object = v59._object;
    sub_10008A6A0(v59);
    swift_bridgeObjectRelease();
    uint64_t v18 = v53;
    uint64_t v17 = v54;
    swift_bridgeObjectRetain();
    sub_100009A54();
    sub_10008A0A0();
    uint64_t result = sub_10008A5B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_100060E9C()
{
  return sub_100089DC0();
}

uint64_t sub_100060EC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100060390(a1);
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

uint64_t sub_100060EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v10 = a2;
  uint64_t v6 = a1;
  v4[1] = 0;
  uint64_t v12 = sub_100089EF0();
  uint64_t v8 = *(void *)(v12 - 8);
  uint64_t v9 = v12 - 8;
  unint64_t v5 = (*(void *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v11 = (char *)v4 - v5;
  uint64_t v15 = sub_100089910();
  uint64_t v13 = *(void *)(v15 - 8);
  uint64_t v14 = v15 - 8;
  unint64_t v7 = (*(void *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  double v2 = __chkstk_darwin(v15);
  uint64_t v16 = (char *)v4 - v7;
  (*(void (**)(char *, double))(v13 + 16))((char *)v4 - v7, v2);
  sub_1000898E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v10, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v15);
}

uint64_t sub_100061088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100060EF8(a1, a2);
}

void *sub_1000610A0(uint64_t *a1, void *a2)
{
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EF0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v2 - 8) + 16))(a2, a1);
  }
  else
  {
    uint64_t v20 = *a1;
    swift_retain();
    *a2 = v20;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = type metadata accessor for MailWidgetView();
  uint64_t v17 = (char *)a2 + *(int *)(v3 + 20);
  uint64_t v19 = (char *)a1 + *(int *)(v3 + 20);
  *(void *)uint64_t v17 = *(void *)v19;
  uint64_t v16 = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  *((void *)v17 + 1) = v16;
  uint64_t v18 = *((void *)v19 + 2);
  swift_bridgeObjectRetain();
  *((void *)v17 + 2) = v18;
  if (*((void *)v19 + 4) <= 5uLL)
  {
    *(_OWORD *)(v17 + 24) = *(_OWORD *)(v19 + 24);
  }
  else
  {
    *((void *)v17 + 3) = *((void *)v19 + 3);
    uint64_t v15 = *((void *)v19 + 4);
    swift_bridgeObjectRetain();
    *((void *)v17 + 4) = v15;
  }
  uint64_t v4 = type metadata accessor for Mailbox();
  __dst = &v17[*(int *)(v4 + 28)];
  __src = &v19[*(int *)(v4 + 28)];
  uint64_t v13 = sub_1000895A0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 48))(__src, 1))
  {
    uint64_t v5 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, __src, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v6 = type metadata accessor for Snapshot();
  uint64_t v9 = &v17[*(int *)(v6 + 20)];
  uint64_t v10 = &v19[*(int *)(v6 + 20)];
  if (*(void *)v10 < 2uLL)
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_WORD *)v9 + 8) = *((_WORD *)v10 + 8);
  }
  else
  {
    uint64_t v8 = *(void *)v10;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v9 = v8;
    *((void *)v9 + 1) = *((void *)v10 + 1);
    v9[16] = v10[16];
    v9[17] = v10[17];
  }
  return a2;
}

uint64_t sub_10006140C@<X0>(uint64_t a1@<X8>)
{
  return sub_10006082C(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_100061414()
{
  uint64_t v2 = qword_1000A4540;
  if (!qword_1000A4540)
  {
    sub_1000096C0(&qword_1000A4538);
    sub_1000614B4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4540);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1000614B4()
{
  uint64_t v2 = qword_1000A4548;
  if (!qword_1000A4548)
  {
    type metadata accessor for MessagesContentView();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4548);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100061538(uint64_t a1)
{
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(type metadata accessor for MailWidgetView() + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v6 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  if (*(void *)(v6 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t sub_100061728()
{
  uint64_t v2 = qword_1000A4550;
  if (!qword_1000A4550)
  {
    sub_1000096C0(&qword_1000A4528);
    sub_100061414();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4550);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000617BC(uint64_t a1)
{
  sub_100009334(&qword_1000A4558);
  if (!swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 32) > 5uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
    uint64_t v6 = sub_1000895A0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v7 + 48))(v5, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    if (*(void *)(a1 + *(int *)(type metadata accessor for Snapshot() + 20)) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v3 = type metadata accessor for MessagesContentView();
    uint64_t v4 = a1 + *(int *)(v3 + 20);
    sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v1 = sub_100089EF0();
      (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v4);
    }
    else
    {
      swift_release();
    }
    sub_100052164(*(void *)(a1 + *(int *)(v3 + 24)), *(unsigned char *)(a1 + *(int *)(v3 + 24) + 8) & 1);
    swift_release();
  }
  return a1;
}

void *type metadata accessor for MailWidgets()
{
  return &unk_10009C580;
}

void *type metadata accessor for MessagesWidget()
{
  return &unk_10009C5A0;
}

unint64_t sub_100061A40(void *a1, uint64_t *a2, uint64_t a3)
{
  int v27 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v27 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    swift_retain();
    *a1 = v22;
    return *a1 + ((v27 + 16) & ~(unint64_t)v27);
  }
  else
  {
    sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EF0();
      (*(void (**)(void *, uint64_t *))(*(void *)(v3 - 8) + 16))(a1, a2);
    }
    else
    {
      uint64_t v21 = *a2;
      swift_retain();
      *a1 = v21;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v18 = (char *)a1 + v4;
    uint64_t v20 = (char *)a2 + v4;
    *(void *)((char *)a1 + v4) = *(uint64_t *)((char *)a2 + v4);
    uint64_t v17 = *(uint64_t *)((char *)a2 + v4 + 8);
    swift_bridgeObjectRetain();
    *((void *)v18 + 1) = v17;
    uint64_t v19 = *((void *)v20 + 2);
    swift_bridgeObjectRetain();
    *((void *)v18 + 2) = v19;
    if (*((void *)v20 + 4) <= 5uLL)
    {
      *(_OWORD *)(v18 + 24) = *(_OWORD *)(v20 + 24);
    }
    else
    {
      *((void *)v18 + 3) = *((void *)v20 + 3);
      uint64_t v16 = *((void *)v20 + 4);
      swift_bridgeObjectRetain();
      *((void *)v18 + 4) = v16;
    }
    uint64_t v5 = type metadata accessor for Mailbox();
    __dst = &v18[*(int *)(v5 + 28)];
    __src = &v20[*(int *)(v5 + 28)];
    uint64_t v14 = sub_1000895A0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v15 + 48))(__src, 1))
    {
      uint64_t v6 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, __src, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v7 = type metadata accessor for Snapshot();
    uint64_t v10 = &v18[*(int *)(v7 + 20)];
    uint64_t v11 = &v20[*(int *)(v7 + 20)];
    if (*(void *)v11 < 2uLL)
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    }
    else
    {
      uint64_t v9 = *(void *)v11;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v10 = v9;
      *((void *)v10 + 1) = *((void *)v11 + 1);
      v10[16] = v11[16];
      v10[17] = v11[17];
    }
    return (unint64_t)a1;
  }
}

uint64_t sub_100061E34(uint64_t a1, uint64_t a2)
{
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EF0();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = v7 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v5 = sub_1000895A0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v6 + 48))(v4, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t result = type metadata accessor for Snapshot();
  if (*(void *)(v7 + *(int *)(result + 20)) >= 2uLL) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100062020(void *a1, uint64_t *a2, uint64_t a3)
{
  sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_100089EF0();
    (*(void (**)(void *, uint64_t *))(*(void *)(v3 - 8) + 16))(a1, a2);
  }
  else
  {
    uint64_t v21 = *a2;
    swift_retain();
    *a1 = v21;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v18 = (char *)a1 + v4;
  uint64_t v20 = (char *)a2 + v4;
  *(void *)((char *)a1 + v4) = *(uint64_t *)((char *)a2 + v4);
  uint64_t v17 = *(uint64_t *)((char *)a2 + v4 + 8);
  swift_bridgeObjectRetain();
  *((void *)v18 + 1) = v17;
  uint64_t v19 = *((void *)v20 + 2);
  swift_bridgeObjectRetain();
  *((void *)v18 + 2) = v19;
  if (*((void *)v20 + 4) <= 5uLL)
  {
    *(_OWORD *)(v18 + 24) = *(_OWORD *)(v20 + 24);
  }
  else
  {
    *((void *)v18 + 3) = *((void *)v20 + 3);
    uint64_t v16 = *((void *)v20 + 4);
    swift_bridgeObjectRetain();
    *((void *)v18 + 4) = v16;
  }
  uint64_t v5 = type metadata accessor for Mailbox();
  __dst = &v18[*(int *)(v5 + 28)];
  __src = &v20[*(int *)(v5 + 28)];
  uint64_t v14 = sub_1000895A0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 48))(__src, 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, __src, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v7 = type metadata accessor for Snapshot();
  uint64_t v10 = &v18[*(int *)(v7 + 20)];
  uint64_t v11 = &v20[*(int *)(v7 + 20)];
  if (*(void *)v11 < 2uLL)
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
  }
  else
  {
    uint64_t v9 = *(void *)v11;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v10 = v9;
    *((void *)v10 + 1) = *((void *)v11 + 1);
    v10[16] = v11[16];
    v10[17] = v11[17];
  }
  return a1;
}

uint64_t *sub_10006238C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100045BF0((uint64_t)a1);
    sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EF0();
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v3 - 8) + 16))(a1, a2);
    }
    else
    {
      uint64_t v25 = *a2;
      swift_retain();
      *a1 = v25;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v4;
  uint64_t v22 = (char *)a2 + v4;
  *(uint64_t *)((char *)a1 + v4) = *(uint64_t *)((char *)a2 + v4);
  uint64_t v21 = *(uint64_t *)((char *)a2 + v4 + 8);
  swift_bridgeObjectRetain();
  *((void *)v24 + 1) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v22 + 2);
  swift_bridgeObjectRetain();
  *((void *)v24 + 2) = v23;
  swift_bridgeObjectRelease();
  if (*((void *)v24 + 4) <= 5uLL)
  {
    if (*((void *)v22 + 4) <= 5uLL)
    {
      *(_OWORD *)(v24 + 24) = *(_OWORD *)(v22 + 24);
    }
    else
    {
      *((void *)v24 + 3) = *((void *)v22 + 3);
      uint64_t v19 = *((void *)v22 + 4);
      swift_bridgeObjectRetain();
      *((void *)v24 + 4) = v19;
    }
  }
  else if (*((void *)v22 + 4) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(v24 + 24) = *(_OWORD *)(v22 + 24);
  }
  else
  {
    *((void *)v24 + 3) = *((void *)v22 + 3);
    uint64_t v20 = *((void *)v22 + 4);
    swift_bridgeObjectRetain();
    *((void *)v24 + 4) = v20;
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = type metadata accessor for Mailbox();
  __dst = &v24[*(int *)(v5 + 28)];
  __src = &v22[*(int *)(v5 + 28)];
  uint64_t v16 = sub_1000895A0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t))v18)(__dst, 1))
  {
    if (v18(__src, 1, v16))
    {
      uint64_t v7 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, __src, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
  }
  else if (v18(__src, 1, v16))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(__dst, v16);
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 24))(__dst, __src, v16);
  }
  uint64_t v8 = type metadata accessor for Snapshot();
  uint64_t v12 = &v24[*(int *)(v8 + 20)];
  uint64_t v13 = &v22[*(int *)(v8 + 20)];
  if (*(void *)v12 < 2uLL)
  {
    if (*(void *)v13 < 2uLL)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_WORD *)v12 + 8) = *((_WORD *)v13 + 8);
    }
    else
    {
      uint64_t v10 = *(void *)v13;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v12 = v10;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      v12[16] = v13[16];
      v12[17] = v13[17];
    }
  }
  else if (*(void *)v13 < 2uLL)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_WORD *)v12 + 8) = *((_WORD *)v13 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)v13;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *((void *)v12 + 1) = *((void *)v13 + 1);
    v12[16] = v13[16];
    v12[17] = v13[17] & 1;
  }
  return a1;
}

char *sub_100062998(char *a1, char *a2, uint64_t a3)
{
  uint64_t v20 = sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_100089EF0();
    (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v15 = &a1[v4];
  uint64_t v16 = &a2[v4];
  *(_OWORD *)uint64_t v15 = *(_OWORD *)&a2[v4];
  *((void *)v15 + 2) = *(void *)&a2[v4 + 16];
  *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v4 + 24];
  uint64_t v5 = type metadata accessor for Mailbox();
  __dst = &v15[*(int *)(v5 + 28)];
  __src = &v16[*(int *)(v5 + 28)];
  uint64_t v13 = sub_1000895A0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 48))(__src, 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(__dst, __src, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v7 = type metadata accessor for Snapshot();
  uint64_t v9 = &v15[*(int *)(v7 + 20)];
  uint64_t v10 = &v16[*(int *)(v7 + 20)];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_WORD *)v9 + 8) = *((_WORD *)v10 + 8);
  return a1;
}

char *sub_100062C9C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100045BF0((uint64_t)a1);
    uint64_t v19 = sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EF0();
      (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v18 = &a1[v4];
  uint64_t v17 = &a2[v4];
  *(void *)uint64_t v18 = *(void *)&a2[v4];
  *((void *)v18 + 1) = *(void *)&a2[v4 + 8];
  swift_bridgeObjectRelease();
  *((void *)v18 + 2) = *((void *)v17 + 2);
  swift_bridgeObjectRelease();
  if (*((void *)v18 + 4) <= 5uLL)
  {
    *(_OWORD *)(v18 + 24) = *(_OWORD *)(v17 + 24);
  }
  else if (*((void *)v17 + 4) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(v18 + 24) = *(_OWORD *)(v17 + 24);
  }
  else
  {
    *((void *)v18 + 3) = *((void *)v17 + 3);
    *((void *)v18 + 4) = *((void *)v17 + 4);
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = type metadata accessor for Mailbox();
  __dst = &v18[*(int *)(v5 + 28)];
  __src = &v17[*(int *)(v5 + 28)];
  uint64_t v14 = sub_1000895A0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (((unsigned int (*)(char *, uint64_t))v16)(__dst, 1))
  {
    if (v16(__src, 1, v14))
    {
      uint64_t v7 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, __src, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
  }
  else if (v16(__src, 1, v14))
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(__dst, v14);
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 40))(__dst, __src, v14);
  }
  uint64_t v8 = type metadata accessor for Snapshot();
  uint64_t v10 = &v18[*(int *)(v8 + 20)];
  uint64_t v11 = &v17[*(int *)(v8 + 20)];
  if (*(void *)v10 < 2uLL)
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
  }
  else if (*(void *)v11 < 2uLL)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
  }
  else
  {
    *(void *)uint64_t v10 = *(void *)v11;
    swift_bridgeObjectRelease();
    *((void *)v10 + 1) = *((void *)v11 + 1);
    v10[16] = v11[16];
    v10[17] = v11[17] & 1;
  }
  return a1;
}

uint64_t sub_10006322C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_100063254(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v9 = sub_100009334(&qword_1000A3EF8);
  if (a2 == *(_DWORD *)(*(void *)(v9 - 8) + 84))
  {
    return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 48))(a1, a2, v9);
  }
  else
  {
    uint64_t v4 = type metadata accessor for Snapshot();
    if (a2 == *(_DWORD *)(*(void *)(v4 - 8) + 84)) {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v4);
    }
    else {
      __break(1u);
    }
  }
  return v5;
}

uint64_t sub_1000633B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1000633DC(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v9 = sub_100009334(&qword_1000A3EF8);
  if (a3 == *(_DWORD *)(*(void *)(v9 - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(v9 - 8) + 56))(a1, a2, a2, v9);
  }
  uint64_t result = type metadata accessor for Snapshot();
  if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  }
  __break(1u);
  return result;
}

uint64_t sub_10006353C()
{
  uint64_t v3 = sub_10004FE78();
  if (v0 <= 0x3F)
  {
    uint64_t v3 = type metadata accessor for Snapshot();
    if (v1 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v3;
}

uint64_t sub_100063674()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000636D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000637C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100063848()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006387C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000638B0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000638E4()
{
  uint64_t v2 = qword_1000A45F0;
  if (!qword_1000A45F0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A45F0);
    return WitnessTable;
  }
  return v2;
}

_OWORD *sub_100063964(_OWORD *a1, _OWORD *a2)
{
  uint64_t v21 = sub_100009334(&qword_1000A4558);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a2, a1, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *a2 = *a1;
    *((void *)a2 + 2) = *((void *)a1 + 2);
    *(_OWORD *)((char *)a2 + 24) = *(_OWORD *)((char *)a1 + 24);
    uint64_t v2 = type metadata accessor for Mailbox();
    __dst = (char *)a2 + *(int *)(v2 + 28);
    uint64_t v16 = (char *)a1 + *(int *)(v2 + 28);
    uint64_t v17 = sub_1000895A0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v18 + 48))(v16, 1))
    {
      uint64_t v3 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, v16, *(void *)(*(void *)(v3 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v4 = type metadata accessor for Snapshot();
    uint64_t v13 = (char *)a2 + *(int *)(v4 + 20);
    uint64_t v14 = (char *)a1 + *(int *)(v4 + 20);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_WORD *)v13 + 8) = *((_WORD *)v14 + 8);
    uint64_t v9 = (int *)type metadata accessor for MessagesContentView();
    uint64_t v10 = (char *)a2 + v9[5];
    __src = (char *)a1 + v9[5];
    uint64_t v12 = sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_100089EF0();
      (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 32))(v10, __src);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, __src, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v6 = (char *)a2 + v9[6];
    uint64_t v7 = (char *)a1 + v9[6];
    *(void *)uint64_t v6 = *(void *)v7;
    v6[8] = v7[8];
    *(_OWORD *)((char *)a2 + v9[7]) = *(_OWORD *)((char *)a1 + v9[7]);
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

void *sub_100063D20(void *a1, void *a2)
{
  uint64_t v30 = sub_100009334(&qword_1000A4558);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a2, a1, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    *a2 = *a1;
    uint64_t v26 = a1[1];
    swift_bridgeObjectRetain();
    a2[1] = v26;
    uint64_t v27 = a1[2];
    swift_bridgeObjectRetain();
    a2[2] = v27;
    if (a1[4] <= 5uLL)
    {
      *(_OWORD *)(a2 + 3) = *(_OWORD *)(a1 + 3);
    }
    else
    {
      a2[3] = a1[3];
      uint64_t v25 = a1[4];
      swift_bridgeObjectRetain();
      a2[4] = v25;
    }
    uint64_t v2 = type metadata accessor for Mailbox();
    uint64_t v21 = (char *)a2 + *(int *)(v2 + 28);
    uint64_t v22 = (char *)a1 + *(int *)(v2 + 28);
    uint64_t v23 = sub_1000895A0();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v24 + 48))(v22, 1))
    {
      uint64_t v3 = sub_100009334(&qword_1000A3B40);
      memcpy(v21, v22, *(void *)(*(void *)(v3 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v4 = type metadata accessor for Snapshot();
    uint64_t v19 = (char *)a2 + *(int *)(v4 + 20);
    uint64_t v20 = (char *)a1 + *(int *)(v4 + 20);
    if (*(void *)v20 < 2uLL)
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    }
    else
    {
      uint64_t v18 = *(void *)v20;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v19 = v18;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      v19[16] = v20[16];
      v19[17] = v20[17];
    }
    uint64_t v15 = (int *)type metadata accessor for MessagesContentView();
    uint64_t v16 = (void *)((char *)a2 + v15[5]);
    uint64_t v17 = (void *)((char *)a1 + v15[5]);
    sub_100009334(&qword_1000A3F00);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_100089EF0();
      (*(void (**)(void *, uint64_t *))(*(void *)(v5 - 8) + 16))(v16, v17);
    }
    else
    {
      uint64_t v14 = *v17;
      swift_retain();
      *uint64_t v16 = v14;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = (char *)a2 + v15[6];
    uint64_t v6 = (char *)a1 + v15[6];
    uint64_t v9 = *(void *)v6;
    char v10 = v6[8];
    sub_1000520F8(*(void *)v6, v10 & 1);
    *(void *)uint64_t v11 = v9;
    v11[8] = v10 & 1;
    uint64_t v7 = v15[7];
    uint64_t v12 = (char *)a2 + v7;
    *(void *)((char *)a2 + v7) = *(void *)((char *)a1 + v7);
    uint64_t v13 = *(void *)((char *)a1 + v7 + 8);
    swift_retain();
    *((void *)v12 + 1) = v13;
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

void *sub_100064198(const void *a1, void *a2)
{
  uint64_t v6 = sub_100009334(&qword_1000A3F00);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EF0();
    (*(void (**)(void *, const void *))(*(void *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(void *)(*(void *)(v6 - 8) + 64));
  }
  return a2;
}

unint64_t sub_100064268()
{
  uint64_t v2 = qword_1000A45F8;
  if (!qword_1000A45F8)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A45F8);
    return ObjCClassMetadata;
  }
  return v2;
}

void *sub_1000642D0@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = sub_10008A480();
  return sub_100079894(a1, a3, a2, v3);
}

uint64_t sub_10006431C()
{
  return sub_100089730();
}

uint64_t sub_100064350@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v39 = a5;
  uint64_t v24 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  int v28 = a4;
  uint64_t v33 = sub_100009334(&qword_1000A3FF8);
  uint64_t v29 = *(void *)(v33 - 8);
  uint64_t v30 = v33 - 8;
  unint64_t v25 = (*(void *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v24);
  uint64_t v32 = (char *)&v24 - v25;
  sub_100042584(v5, v6);
  uint64_t v38 = (int *)type metadata accessor for MessageView();
  sub_1000346C8(v26, (char *)(v39 + v38[5]));
  char v7 = v28;
  uint64_t v8 = (uint64_t)v32;
  uint64_t v9 = v39;
  char v10 = v38;
  *(void *)(v39 + v38[6]) = v27;
  *(unsigned char *)(v9 + v10[7]) = v7 & 1;
  uint64_t v31 = v10[8];
  sub_100064600(v8, 16.0);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v39 + v31, v32, v33);
  uint64_t v34 = v38[9];
  uint64_t v36 = 0;
  uint64_t v11 = sub_100045C88();
  uint64_t v12 = v38;
  uint64_t v13 = (void *)(v39 + v34);
  *uint64_t v13 = v14;
  v13[1] = v11;
  uint64_t v35 = v12[10];
  uint64_t v15 = sub_100045C88();
  uint64_t v16 = v38;
  uint64_t v17 = (void *)(v39 + v35);
  *uint64_t v17 = v18;
  v17[1] = v15;
  uint64_t v37 = v16[11];
  uint64_t v19 = sub_100045C88();
  uint64_t v20 = v38;
  uint64_t v21 = (void *)(v39 + v37);
  *uint64_t v21 = v22;
  v21[1] = v19;
  uint64_t v40 = v20[12];
  swift_getKeyPath();
  return sub_100089730();
}

uint64_t sub_100064548@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1;
  uint64_t v8 = 0;
  uint64_t v6 = sub_100009334(&qword_1000A3C50);
  unint64_t v4 = (*(void *)(*(void *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  uint64_t v7 = (uint64_t)&v3 - v4;
  uint64_t v8 = v1;
  sub_100038B04(v1, (uint64_t *)((char *)&v3 - v4));
  sub_100089710();
  return sub_100038BD4(v7);
}

uint64_t sub_100064600@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v7 = a1;
  double v4 = a2;
  double v11 = 0.0;
  uint64_t v2 = sub_100089AB0();
  uint64_t v6 = *(void *)(v2 - 8);
  unint64_t v5 = (*(void *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = (char *)&v4 - v5;
  double v11 = __chkstk_darwin(v2);
  uint64_t v9 = &v10;
  double v10 = v11;
  (*(void (**)(char *))(v6 + 104))((char *)&v4 - v5);
  sub_10006D5C4();
  return sub_100089740();
}

double sub_1000646E8()
{
  uint64_t v7 = sub_100009334(&qword_1000A3FF8);
  uint64_t v4 = *(void *)(v7 - 8);
  uint64_t v5 = v7 - 8;
  v3[0] = (*(void *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v7);
  unint64_t v0 = (char *)v3 - v3[0];
  uint64_t v6 = (char *)v3 - v3[0];
  uint64_t v1 = type metadata accessor for MessageView();
  (*(void (**)(char *, void, uint64_t))(v4 + 16))(v0, v3[1] + *(int *)(v1 + 32), v7);
  sub_100089750();
  double v8 = v9;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v7);
  return v8;
}

double sub_100064800()
{
  type metadata accessor for MessageView();
  swift_retain();
  swift_retain();
  sub_100009334(&qword_1000A3F08);
  sub_100089D30();
  sub_100045D64();
  swift_release();
  return v1;
}

double sub_100064898()
{
  type metadata accessor for MessageView();
  swift_retain();
  swift_retain();
  sub_100009334(&qword_1000A3F08);
  sub_100089D40();
  sub_100045D64();
  swift_release();
  return v1;
}

double sub_100064948()
{
  type metadata accessor for MessageView();
  swift_retain();
  swift_retain();
  sub_100009334(&qword_1000A3F08);
  sub_100089D30();
  sub_100045D64();
  swift_release();
  return v1;
}

double sub_1000649E0()
{
  type metadata accessor for MessageView();
  swift_retain();
  swift_retain();
  sub_100009334(&qword_1000A3F08);
  sub_100089D40();
  sub_100045D64();
  swift_release();
  return v1;
}

double sub_100064A90()
{
  type metadata accessor for MessageView();
  swift_retain();
  swift_retain();
  sub_100009334(&qword_1000A3F08);
  sub_100089D30();
  sub_100045D64();
  swift_release();
  return v1;
}

double sub_100064B28()
{
  type metadata accessor for MessageView();
  swift_retain();
  swift_retain();
  sub_100009334(&qword_1000A3F08);
  sub_100089D40();
  sub_100045D64();
  swift_release();
  return v1;
}

uint64_t sub_100064BD8()
{
  uint64_t v15 = 0;
  uint64_t v6 = 0;
  uint64_t v8 = type metadata accessor for MessageView();
  unint64_t v7 = (*(void *)(*(void *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v12 = (uint64_t *)((char *)&v3 - v7);
  uint64_t v10 = type metadata accessor for Message();
  unint64_t v9 = (*(void *)(*(void *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t)&v3 - v9;
  uint64_t v15 = v0;
  sub_100014B98((char *)(v0 + *(int *)(v1 + 20)), (char *)&v3 - v9);
  int v14 = *(unsigned __int8 *)(v11 + *(int *)(v10 + 36));
  sub_100014EC0(v11);
  sub_10004C658(v13, v12);
  if (v14) {
    int v5 = *((unsigned __int8 *)v12 + *(int *)(v8 + 28)) ^ 1;
  }
  else {
    int v5 = 0;
  }
  int v4 = v5;
  sub_10004CC64((uint64_t)v12);
  return v4 & 1;
}

double sub_100064D44()
{
  uint64_t v29 = 0;
  uint64_t v6 = sub_100009334(&qword_1000A3FF8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v6 - 8;
  unint64_t v9 = (*(void *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v4 - v9;
  uint64_t v18 = sub_100009334(&qword_1000A4608);
  unint64_t v11 = (*(void *)(*(void *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v18);
  uint64_t v0 = (void *)((char *)&v4 - v11);
  uint64_t v19 = (uint64_t)&v4 - v11;
  uint64_t v12 = 0;
  uint64_t v24 = sub_100089940();
  uint64_t v20 = *(void *)(v24 - 8);
  uint64_t v21 = v24 - 8;
  uint64_t v14 = *(void *)(v20 + 64);
  unint64_t v13 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v12);
  uint64_t v22 = (uint64_t)&v4 - v13;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  uint64_t v23 = (uint64_t)&v4 - v15;
  uint64_t v29 = v2;
  uint64_t v17 = type metadata accessor for MessageView();
  sub_10006D6B8((uint64_t *)(v16 + *(int *)(v17 + 48)), v0);
  sub_100089710();
  sub_10006D788(v19);
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v22, enum case for ContentSizeCategory.extraExtraLarge(_:), v24);
  BOOL v27 = sub_10006511C(v23, v22);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  uint64_t v25 = v20 + 8;
  v26(v22, v24);
  v26(v23, v24);
  if (v27) {
    return 20.0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v16 + *(int *)(v17 + 32), v6);
  sub_100089750();
  double v4 = v28;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v4;
}

uint64_t sub_100065064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = a1;
  uint64_t v8 = sub_100009334(&qword_1000A4608);
  unint64_t v5 = (*(void *)(*(void *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  uint64_t v1 = (uint64_t *)((char *)&v4 - v5);
  uint64_t v9 = (uint64_t)&v4 - v5;
  uint64_t v2 = type metadata accessor for MessageView();
  sub_10006D6B8((uint64_t *)(v6 + *(int *)(v2 + 48)), v1);
  sub_100089710();
  return sub_10006D788(v9);
}

BOOL sub_10006511C(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a1;
  uint64_t v10 = a2;
  uint64_t v9 = 3;
  uint64_t v19 = sub_100089940();
  uint64_t v17 = *(void *)(v19 - 8);
  uint64_t v18 = v19 - 8;
  uint64_t v12 = *(void *)(v17 + 64);
  unint64_t v11 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v19);
  unint64_t v13 = (char *)&v4 - v11;
  unint64_t v14 = v11;
  double v2 = __chkstk_darwin((char *)&v4 - v11);
  uint64_t v20 = (char *)&v4 - v14;
  unint64_t v15 = *(void (**)(double))(v17 + 16);
  uint64_t v16 = v17 + 16;
  v15(v2);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v17 + 88);
  uint64_t v22 = v17 + 88;
  int v23 = v21(v20, v19);
  if (v23 == enum case for ContentSizeCategory.extraSmall(_:))
  {
    uint64_t v7 = 0;
  }
  else if (v23 == enum case for ContentSizeCategory.small(_:))
  {
    uint64_t v7 = 1;
  }
  else if (v23 == enum case for ContentSizeCategory.medium(_:))
  {
    uint64_t v7 = 2;
  }
  else if (v23 == enum case for ContentSizeCategory.large(_:))
  {
    uint64_t v7 = v9;
  }
  else if (v23 == enum case for ContentSizeCategory.extraLarge(_:))
  {
    uint64_t v7 = 4;
  }
  else if (v23 == enum case for ContentSizeCategory.extraExtraLarge(_:))
  {
    uint64_t v7 = 5;
  }
  else if (v23 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    uint64_t v7 = 6;
  }
  else if (v23 == enum case for ContentSizeCategory.accessibilityMedium(_:))
  {
    uint64_t v7 = 7;
  }
  else if (v23 == enum case for ContentSizeCategory.accessibilityLarge(_:))
  {
    uint64_t v7 = 8;
  }
  else if (v23 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
  {
    uint64_t v7 = 9;
  }
  else if (v23 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
  {
    uint64_t v7 = 10;
  }
  else if (v23 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
  {
    uint64_t v7 = 11;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v19);
    uint64_t v7 = v9;
  }
  uint64_t v5 = v7;
  ((void (*)(char *, uint64_t, uint64_t))v15)(v13, v8, v19);
  int v6 = v21(v13, v19);
  if (v6 == enum case for ContentSizeCategory.extraSmall(_:))
  {
    uint64_t v4 = 0;
  }
  else if (v6 == enum case for ContentSizeCategory.small(_:))
  {
    uint64_t v4 = 1;
  }
  else if (v6 == enum case for ContentSizeCategory.medium(_:))
  {
    uint64_t v4 = 2;
  }
  else if (v6 == enum case for ContentSizeCategory.large(_:))
  {
    uint64_t v4 = v9;
  }
  else if (v6 == enum case for ContentSizeCategory.extraLarge(_:))
  {
    uint64_t v4 = 4;
  }
  else if (v6 == enum case for ContentSizeCategory.extraExtraLarge(_:))
  {
    uint64_t v4 = 5;
  }
  else if (v6 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    uint64_t v4 = 6;
  }
  else if (v6 == enum case for ContentSizeCategory.accessibilityMedium(_:))
  {
    uint64_t v4 = 7;
  }
  else if (v6 == enum case for ContentSizeCategory.accessibilityLarge(_:))
  {
    uint64_t v4 = 8;
  }
  else if (v6 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
  {
    uint64_t v4 = 9;
  }
  else if (v6 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
  {
    uint64_t v4 = 10;
  }
  else if (v6 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
  {
    uint64_t v4 = 11;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v19);
    uint64_t v4 = v9;
  }
  return v5 < v4;
}

uint64_t sub_100065744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  unint64_t v14 = sub_10006E0C8;
  BOOL v27 = 0;
  uint64_t v22 = &v25;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v6 = *(void *)(type metadata accessor for MessageView() - 8);
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v6 + 64);
  unint64_t v7 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5[1]);
  unint64_t v11 = (char *)v5 - v7;
  BOOL v27 = v1;
  sub_10004C658(v1, (void *)((char *)v5 - v7));
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  sub_10006DBBC(v11, (char *)(v12 + v10));
  uint64_t v13 = sub_100009334(&qword_1000A4610);
  sub_10006E14C();
  uint64_t v2 = sub_1000897D0();
  unint64_t v15 = v24;
  v24[0] = v2;
  v24[1] = v3;
  uint64_t v19 = sub_100009334(&qword_1000A4630);
  unint64_t v20 = sub_10006E270();
  sub_100039F6C((uint64_t)v15, v19, (uint64_t)v22);
  sub_100045D64();
  uint64_t v16 = v25;
  uint64_t v17 = v26;
  swift_retain();
  uint64_t v21 = v23;
  v23[0] = v16;
  v23[1] = v17;
  sub_100039F6C((uint64_t)v23, v19, v18);
  sub_100045D64();
  uint64_t result = (uint64_t)v22;
  sub_100045D64();
  return result;
}

uint64_t sub_10006593C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v24 = a1;
  uint64_t v17 = a2;
  uint64_t v19 = sub_1000724B0;
  uint64_t v40 = 0;
  uint64_t v39 = 0;
  uint64_t v38 = 0;
  uint64_t v4 = type metadata accessor for MessageView();
  unint64_t v13 = (*(void *)(*(void *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  int v23 = (uint64_t *)((char *)&v12 - v13);
  uint64_t v28 = sub_100009334(&qword_1000A4628);
  unint64_t v14 = (*(void *)(*(void *)(v28 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t)&v12 - v14;
  uint64_t v32 = sub_100009334(&qword_1000A4610);
  unint64_t v15 = (*(void *)(*(void *)(v32 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v24);
  uint64_t v34 = (uint64_t)&v12 - v15;
  unint64_t v16 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  uint64_t v35 = (uint64_t)&v12 - v16;
  uint64_t v40 = (char *)&v12 - v16;
  uint64_t v39 = v7;
  uint64_t v38 = a2;
  uint64_t v22 = sub_100089960();
  sub_100065C20(v24);
  uint64_t v18 = v8;
  sub_10004C658(v17, v23);
  unint64_t v20 = &v36;
  uint64_t v37 = v23;
  uint64_t v21 = sub_100009334(&qword_1000A47B8);
  sub_1000724B8();
  int v27 = 0;
  sub_100089D70();
  sub_10004CC64((uint64_t)v23);
  sub_100089790();
  uint64_t v25 = v9;
  sub_100089790();
  uint64_t v26 = v10;
  unint64_t v29 = sub_10006E1EC();
  sub_10004B274();
  sub_100089C20();
  sub_10007253C(v30);
  unint64_t v33 = sub_10006E14C();
  sub_100039F6C(v34, v32, v35);
  sub_10007253C(v34);
  sub_1000734EC(v35, v34);
  sub_100039F6C(v34, v32, v31);
  sub_10007253C(v34);
  return sub_10007253C(v35);
}

uint64_t sub_100065C20(uint64_t a1)
{
  uint64_t v15 = a1;
  uint64_t v2 = v1;
  uint64_t v24 = v2;
  uint64_t v49 = 0;
  uint64_t v48 = 0;
  uint64_t v19 = 0;
  uint64_t v41 = sub_10008A660();
  uint64_t v39 = *(void *)(v41 - 8);
  uint64_t v40 = v41 - 8;
  uint64_t v17 = *(void *)(v39 + 64);
  unint64_t v16 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v41);
  uint64_t v42 = (char *)v13 - v16;
  unint64_t v18 = v16;
  __chkstk_darwin((char *)v13 - v16);
  uint64_t v38 = (char *)v13 - v18;
  uint64_t v49 = a1;
  uint64_t v48 = v4;
  sub_100089790();
  uint64_t v5 = v24;
  double v36 = v6;
  unint64_t v29 = (int *)type metadata accessor for MessageView();
  uint64_t v7 = (uint64_t *)(v5 + v29[9]);
  uint64_t v20 = *v7;
  uint64_t v22 = v7[1];
  swift_retain();
  swift_retain();
  uint64_t v21 = v47;
  v47[0] = v20;
  v47[1] = v22;
  uint64_t v30 = sub_100009334(&qword_1000A3F08);
  sub_100089D30();
  uint64_t v8 = v24;
  sub_100045D64();
  double v28 = *(double *)&v47[2];
  swift_release();
  uint64_t v9 = (uint64_t *)(v8 + v29[10]);
  uint64_t v23 = *v9;
  uint64_t v26 = v9[1];
  swift_retain();
  swift_retain();
  uint64_t v25 = v46;
  v46[0] = v23;
  v46[1] = v26;
  sub_100089D30();
  uint64_t v10 = v24;
  sub_100045D64();
  double v27 = *(double *)&v46[2];
  swift_release();
  double v35 = v28 + v27;
  unint64_t v11 = (uint64_t *)(v10 + v29[11]);
  uint64_t v31 = *v11;
  uint64_t v33 = v11[1];
  swift_retain();
  swift_retain();
  uint64_t v32 = v45;
  v45[0] = v31;
  v45[1] = v33;
  sub_100089D30();
  sub_100045D64();
  double v34 = *(double *)&v45[2];
  swift_release();
  double v37 = (v36 - (v35 + v34)) * 0.16;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, enum case for FloatingPointRoundingRule.down(_:), v41);
  double v44 = v37;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v42, v38, v41);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v42, v41);
  int v43 = result;
  if (result == enum case for FloatingPointRoundingRule.toNearestOrAwayFromZero(_:))
  {
    double v44 = round(v37);
    goto LABEL_15;
  }
  if (v43 == enum case for FloatingPointRoundingRule.toNearestOrEven(_:))
  {
    double v44 = rint(v37);
    goto LABEL_15;
  }
  if (v43 == enum case for FloatingPointRoundingRule.up(_:)) {
    goto LABEL_13;
  }
  if (v43 == enum case for FloatingPointRoundingRule.down(_:))
  {
LABEL_14:
    double v44 = floor(v37);
    goto LABEL_15;
  }
  if (v43 == enum case for FloatingPointRoundingRule.towardZero(_:))
  {
    double v44 = trunc(v37);
    goto LABEL_15;
  }
  if (v43 != enum case for FloatingPointRoundingRule.awayFromZero(_:))
  {
    sub_10008A240();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v41);
LABEL_15:
    *(double *)&v13[1] = v44;
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v38, v41);
  }
  uint64_t v14 = *(void *)&v37 >> 63;
  if (v37 >= 0.0)
  {
LABEL_13:
    double v44 = ceil(v37);
    goto LABEL_15;
  }
  if (v14 == 1) {
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000661A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v105 = a1;
  uint64_t v104 = 0;
  uint64_t v64 = sub_1000753F0;
  char v83 = sub_100076074;
  uint64_t v32 = &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>;
  unint64_t v118 = 0;
  uint64_t v117 = 0;
  uint64_t v116 = 0;
  uint64_t v115 = 0;
  uint64_t v114 = 0;
  uint64_t v33 = sub_100009334(&qword_1000A4848);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = v33 - 8;
  unint64_t v36 = (*(void *)(v34 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v33);
  uint64_t v37 = (uint64_t)v20 - v36;
  uint64_t v38 = sub_100009334(&qword_1000A4840);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = v38 - 8;
  unint64_t v41 = (*(void *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v38);
  uint64_t v42 = (uint64_t)v20 - v41;
  unint64_t v43 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v20 - v41);
  uint64_t v44 = (uint64_t)v20 - v43;
  unint64_t v118 = (char *)v20 - v43;
  uint64_t v45 = sub_100009334(&qword_1000A4878);
  unint64_t v46 = (*(void *)(*(void *)(v45 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)v20 - v46;
  unint64_t v48 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v20 - v46);
  uint64_t v49 = (char *)v20 - v48;
  unint64_t v50 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v20 - v48);
  uint64_t v51 = (char *)v20 - v50;
  uint64_t v117 = (char *)v20 - v50;
  uint64_t v94 = sub_100009334(&qword_1000A4880);
  unint64_t v52 = (*(void *)(*(void *)(v94 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v94);
  uint64_t v98 = (uint64_t)v20 - v52;
  uint64_t v100 = sub_100009334(&qword_1000A4838);
  unint64_t v53 = (*(void *)(*(void *)(v100 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v104);
  uint64_t v54 = (uint64_t)v20 - v53;
  unint64_t v55 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  uint64_t v102 = (uint64_t)v20 - v55;
  unint64_t v56 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  uint64_t v99 = (uint64_t)v20 - v56;
  uint64_t v116 = (char *)v20 - v56;
  uint64_t v103 = (int *)type metadata accessor for MessageView();
  unint64_t v57 = (*(void *)(*((void *)v103 - 1) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v103);
  char v87 = (uint64_t *)((char *)v20 - v57);
  unint64_t v58 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v20 - v57);
  uint64_t v68 = (uint64_t *)((char *)v20 - v58);
  uint64_t v73 = sub_100009334(&qword_1000A4888);
  unint64_t v59 = (*(void *)(*(void *)(v73 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v73);
  uint64_t v77 = (uint64_t)v20 - v59;
  uint64_t v79 = sub_100009334(&qword_1000A4810);
  unint64_t v60 = (*(void *)(*(void *)(v79 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v105);
  uint64_t v61 = (uint64_t)v20 - v60;
  unint64_t v62 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v11);
  uint64_t v81 = (uint64_t)v20 - v62;
  unint64_t v63 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v13);
  uint64_t v78 = (uint64_t)v20 - v63;
  uint64_t v115 = (char *)v20 - v63;
  uint64_t v114 = v14;
  uint64_t v67 = sub_100089920();
  sub_10004C658(v105, v68);
  int v65 = v107;
  void v107[2] = v68;
  uint64_t v66 = sub_100009334(&qword_1000A4890);
  sub_1000753F8();
  int v82 = 0;
  sub_100089D50();
  sub_10004CC64((uint64_t)v68);
  uint64_t v88 = &unk_10008C508;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = (void *)((char *)v105 + v103[9]);
  uint64_t v69 = *v15;
  uint64_t v71 = v15[1];
  swift_retain();
  swift_retain();
  uint64_t v70 = v113;
  v113[0] = v69;
  v113[1] = v71;
  uint64_t v89 = sub_100009334(&qword_1000A3F08);
  sub_100089D40();
  sub_100045D64();
  uint64_t v74 = v113[2];
  uint64_t v75 = v113[3];
  double v72 = *(double *)&v113[4];
  swift_release();
  sub_10007547C();
  sub_100083480(KeyPath, v74, v75, v73, v72);
  swift_release();
  swift_release();
  swift_release();
  sub_100075500(v77);
  unint64_t v80 = sub_100075A4C();
  sub_100039F6C(v81, v79, v78);
  sub_100075AF0(v81);
  uint64_t v86 = sub_100089920();
  sub_10004C658(v105, v87);
  char v84 = v106;
  void v106[2] = v87;
  uint64_t v85 = sub_100009334(&qword_1000A48B0);
  sub_10007607C();
  sub_100089D50();
  sub_10004CC64((uint64_t)v87);
  uint64_t v97 = swift_getKeyPath();
  unint64_t v16 = (void *)((char *)v105 + v103[10]);
  uint64_t v90 = *v16;
  uint64_t v92 = v16[1];
  swift_retain();
  swift_retain();
  uint64_t v91 = v112;
  v112[0] = v90;
  v112[1] = v92;
  sub_100089D40();
  sub_100045D64();
  uint64_t v95 = v112[2];
  uint64_t v96 = v112[3];
  double v93 = *(double *)&v112[4];
  swift_release();
  sub_100076100();
  sub_100083480(v97, v95, v96, v94, v93);
  swift_release();
  swift_release();
  swift_release();
  sub_100076184(v98);
  unint64_t v101 = sub_100076AB8();
  sub_100039F6C(v102, v100, v99);
  sub_100076B5C(v102);
  if (v104 >= *(void *)((char *)v105 + v103[6]))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v47, 1, 1, v38);
    sub_1000774C0();
    sub_1000642D0(v47, v38, v49);
    sub_1000775AC((uint64_t)v47);
    sub_10007768C(v49, v51);
  }
  else
  {
    sub_10006BE38(v37);
    uint64_t v29 = swift_getKeyPath();
    uint64_t v17 = (void *)((char *)v105 + v103[11]);
    uint64_t v22 = *v17;
    uint64_t v24 = v17[1];
    swift_retain();
    swift_retain();
    uint64_t v23 = v108;
    v108[0] = v22;
    v108[1] = v24;
    sub_100089D40();
    sub_100045D64();
    uint64_t v27 = v108[2];
    uint64_t v28 = v108[3];
    double v26 = *(double *)&v108[4];
    swift_release();
    uint64_t v25 = sub_1000096C0(&qword_1000A46E8);
    unint64_t v18 = sub_10006F470();
    v107[3] = v25;
    v107[4] = v18;
    swift_getOpaqueTypeConformance2();
    sub_100083480(v29, v27, v28, v33, v26);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v33);
    unint64_t v30 = sub_1000774C0();
    sub_100039F6C(v42, v38, v44);
    sub_100079704(v42);
    sub_100079798(v44, v42);
    sub_100039F6C(v42, v38, (uint64_t)v47);
    sub_100079704(v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v47, 0, 1, v38);
    sub_1000642D0(v47, v38, v49);
    sub_1000775AC((uint64_t)v47);
    sub_10007768C(v49, v51);
    sub_100079704(v44);
  }
  sub_1000777EC(v78, v61);
  uint64_t v21 = v111;
  v111[0] = v61;
  sub_1000782C4(v99, v54);
  v111[1] = v54;
  sub_1000794B4(v51, v49);
  v111[2] = v49;
  v20[0] = (uint64_t)v110;
  v110[0] = v79;
  v110[1] = v100;
  v110[2] = v45;
  v20[1] = (uint64_t)v109;
  v109[0] = v80;
  v109[1] = v101;
  v109[2] = sub_100079670();
  sub_10003ED48((uint64_t)v21, 3uLL, v20[0], v31);
  sub_1000775AC((uint64_t)v49);
  sub_100076B5C(v54);
  sub_100075AF0(v61);
  sub_1000775AC((uint64_t)v51);
  sub_100076B5C(v99);
  return sub_100075AF0(v78);
}

uint64_t sub_100066D08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v22 = 0;
  uint64_t v17 = sub_10007BD70;
  uint64_t v25 = &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>;
  unint64_t v57 = 0;
  unint64_t v56 = 0;
  unint64_t v55 = 0;
  uint64_t v23 = &v53;
  uint64_t v53 = 0;
  char v54 = 0;
  uint64_t v29 = sub_100009334(&qword_1000A4808);
  uint64_t v26 = *(void *)(v29 - 8);
  uint64_t v27 = v29 - 8;
  unint64_t v11 = (*(void *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v29);
  uint64_t v28 = (uint64_t)&v10 - v11;
  uint64_t v32 = sub_100009334(&qword_1000A4858);
  unint64_t v12 = (*(void *)(*(void *)(v32 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v22);
  uint64_t v38 = (uint64_t)&v10 - v12;
  unint64_t v13 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v40 = (uint64_t)&v10 - v13;
  unint64_t v57 = (char *)&v10 - v13;
  uint64_t v5 = type metadata accessor for MessageView();
  unint64_t v14 = (*(void *)(*(void *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  uint64_t v21 = (uint64_t *)((char *)&v10 - v14);
  uint64_t v30 = sub_100009334(&qword_1000A4900);
  unint64_t v15 = (*(void *)(*(void *)(v30 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v30);
  uint64_t v39 = (uint64_t)&v10 - v15;
  unint64_t v16 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v10 - v15);
  uint64_t v41 = (uint64_t)&v10 - v16;
  unint64_t v56 = (char *)&v10 - v16;
  unint64_t v55 = a1;
  uint64_t v20 = sub_100089920();
  sub_10004C658(a1, v21);
  unint64_t v18 = &v42;
  unint64_t v43 = v21;
  uint64_t v19 = sub_100009334(&qword_1000A4908);
  sub_10007BD78();
  sub_100089D50();
  sub_10004CC64((uint64_t)v21);
  unint64_t v33 = sub_10007BDFC();
  sub_100039F6C(v39, v30, v41);
  sub_10007BE80(v39);
  uint64_t v51 = sub_100089D60();
  char v52 = v7 & 1;
  uint64_t v31 = &type metadata for Spacer;
  uint64_t v34 = &protocol witness table for Spacer;
  sub_100039F6C((uint64_t)&v51, (uint64_t)&type metadata for Spacer, (uint64_t)v23);
  sub_100068D7C(v28);
  uint64_t v24 = sub_1000096C0(&qword_1000A46C0);
  unint64_t v8 = sub_10006EA0C();
  v50[3] = v24;
  v50[4] = v8;
  swift_getOpaqueTypeConformance2();
  sub_100089BA0();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v29);
  unint64_t v35 = sub_10007C334();
  sub_100039F6C(v38, v32, v40);
  sub_10007C420(v38);
  sub_10007C480(v41, v39);
  uint64_t v37 = v50;
  v50[0] = v39;
  uint64_t v48 = v53;
  char v49 = v54;
  v50[1] = &v48;
  sub_10007CD60(v40, v38);
  void v50[2] = v38;
  v47[0] = v30;
  v47[1] = v31;
  v47[2] = v32;
  unint64_t v44 = v33;
  uint64_t v45 = v34;
  unint64_t v46 = v35;
  sub_10003ED48((uint64_t)v37, 3uLL, (uint64_t)v47, v36);
  sub_10007C420(v38);
  sub_10007BE80(v39);
  sub_10007C420(v40);
  return sub_10007BE80(v41);
}

uint64_t sub_100067280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v39 = 0;
  uint64_t v38 = &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>;
  uint64_t v75 = 0;
  uint64_t v74 = 0;
  uint64_t v73 = 0;
  uint64_t v72 = 0;
  uint64_t v67 = 0;
  uint64_t v40 = sub_100009334(&qword_1000A47F8);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = v40 - 8;
  unint64_t v43 = (*(void *)(v41 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v44 = (uint64_t)&v14 - v43;
  unint64_t v45 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v46 = (uint64_t)&v14 - v45;
  uint64_t v75 = (char *)&v14 - v45;
  uint64_t v47 = type metadata accessor for Message();
  unint64_t v48 = (*(void *)(*(void *)(v47 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v47);
  char v49 = (char *)&v14 - v48;
  uint64_t v50 = sub_100009334(&qword_1000A3CA8);
  unint64_t v51 = (*(void *)(*(void *)(v50 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v50);
  uint64_t v52 = (uint64_t)&v14 - v51;
  uint64_t v53 = sub_100009334(&qword_1000A4828);
  unint64_t v54 = (*(void *)(*(void *)(v53 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v53);
  unint64_t v55 = (char *)&v14 - v54;
  unint64_t v56 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v14 - v54);
  uint64_t v57 = (uint64_t)&v14 - v56;
  unint64_t v58 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v14 - v56);
  unint64_t v59 = (char *)&v14 - v58;
  uint64_t v74 = (char *)&v14 - v58;
  uint64_t v60 = sub_100009334(&qword_1000A4850);
  unint64_t v61 = (*(void *)(*(void *)(v60 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v60);
  unint64_t v62 = (char *)&v14 - v61;
  unint64_t v63 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v14 - v61);
  uint64_t v64 = (uint64_t *)((char *)&v14 - v63);
  unint64_t v65 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v14 - v63);
  uint64_t v66 = (uint64_t *)((char *)&v14 - v65);
  uint64_t v73 = (char *)&v14 - v65;
  uint64_t v72 = a1;
  if (sub_100064BD8())
  {
    sub_100067C4C(v52);
    double v29 = sub_100064D44();
    uint64_t v30 = sub_100089DC0();
    uint64_t v31 = v9;
    sub_100042D0C();
    unsigned int v33 = 0;
    unsigned int v34 = 1;
    sub_100089C20();
    sub_100042E34(v52);
    unint64_t v32 = sub_1000799AC();
    sub_100039F6C(v57, v53, (uint64_t)v59);
    sub_100042E34(v57);
    sub_10007B9BC(v59, v55);
    sub_100039F6C((uint64_t)v55, v53, v57);
    sub_100042E34((uint64_t)v55);
    sub_10003AED8(v57, v53, v53, v32, v32, (uint64_t)v62);
    sub_100042E34(v57);
    uint64_t v35 = sub_100009334(&qword_1000A47E0);
    (*(void (**)(char *, void, void))(*(void *)(v35 - 8) + 56))(v62, v33, v34);
    sub_10007CDEC();
    sub_1000642D0(v62, v35, v64);
    sub_10007CE88((uint64_t)v62);
    sub_10007D2A0(v64, v66);
    sub_100042E34((uint64_t)v59);
  }
  else
  {
    uint64_t v10 = type metadata accessor for MessageView();
    sub_100014B98((char *)(v37 + *(int *)(v10 + 20)), v49);
    int v28 = v49[*(int *)(v47 + 40)];
    sub_100014EC0((uint64_t)v49);
    if (v28)
    {
      uint64_t v67 = v59;
      sub_100068350(v52);
      double v21 = sub_100064D44();
      uint64_t v22 = sub_100089DC0();
      uint64_t v23 = v11;
      sub_100042D0C();
      unsigned int v25 = 0;
      unsigned int v26 = 1;
      sub_100089C20();
      sub_100042E34(v52);
      unint64_t v24 = sub_1000799AC();
      sub_100039F6C(v57, v53, (uint64_t)v59);
      sub_100042E34(v57);
      sub_10007B9BC(v59, v55);
      sub_100039F6C((uint64_t)v55, v53, v57);
      sub_100042E34((uint64_t)v55);
      sub_10003AFD0(v57, v53, v53, v24, v24, (uint64_t)v62);
      sub_100042E34(v57);
      uint64_t v27 = sub_100009334(&qword_1000A47E0);
      (*(void (**)(char *, void, void))(*(void *)(v27 - 8) + 56))(v62, v25, v26);
      sub_10007CDEC();
      sub_1000642D0(v62, v27, v64);
      sub_10007CE88((uint64_t)v62);
      sub_10007D2A0(v64, v66);
      sub_100042E34((uint64_t)v59);
    }
    else
    {
      uint64_t v20 = sub_100009334(&qword_1000A47E0);
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 56))(v62, 1);
      sub_10007CDEC();
      sub_1000642D0(v62, v20, v64);
      sub_10007CE88((uint64_t)v62);
      sub_10007D2A0(v64, v66);
    }
  }
  sub_100068AA4(v44);
  uint64_t v14 = sub_1000096C0(&qword_1000A4670);
  unint64_t v12 = sub_10006E5D4();
  v71[2] = v14;
  v71[3] = v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100039F6C(v44, v40, v46);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  uint64_t v18 = v41 + 8;
  v19(v44, v40);
  sub_10007D914(v66, v64);
  uint64_t v17 = v71;
  v71[0] = v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v44, v46, v40);
  v71[1] = v44;
  unint64_t v16 = v70;
  v70[0] = v60;
  v70[1] = v40;
  unint64_t v68 = sub_10007E0D0();
  uint64_t v69 = OpaqueTypeConformance2;
  sub_10003ED48((uint64_t)v17, 2uLL, (uint64_t)v16, v36);
  v19(v44, v40);
  sub_10007CE88((uint64_t)v64);
  v19(v46, v40);
  return sub_10007CE88((uint64_t)v66);
}

uint64_t sub_100067C4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v11 = a1;
  uint64_t v48 = 0;
  uint64_t v2 = sub_100009334(&qword_1000A3CE0);
  unint64_t v12 = (*(void *)(*(void *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  uint64_t v13 = (uint64_t)&v8 - v12;
  uint64_t v16 = 0;
  uint64_t v43 = sub_100089EC0();
  uint64_t v39 = *(void *)(v43 - 8);
  uint64_t v40 = v43 - 8;
  unint64_t v14 = (*(void *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v16);
  uint64_t v41 = (char *)&v8 - v14;
  unint64_t v15 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v8 - v15;
  uint64_t v32 = sub_100089A80();
  uint64_t v30 = *(void *)(v32 - 8);
  uint64_t v31 = v32 - 8;
  unint64_t v17 = (*(void *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v16);
  unsigned int v33 = (char *)&v8 - v17;
  uint64_t v28 = sub_100089D10();
  uint64_t v25 = *(void *)(v28 - 8);
  uint64_t v26 = v28 - 8;
  unint64_t v18 = (*(void *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v8 - v18;
  uint64_t v36 = sub_100009334(&qword_1000A3C88);
  unint64_t v19 = (*(void *)(*(void *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v36);
  uint64_t v38 = (uint64_t)&v8 - v19;
  uint64_t v20 = sub_100009334(&qword_1000A3C98);
  unint64_t v21 = (*(void *)(*(void *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v20);
  uint64_t v35 = (uint64_t)&v8 - v21;
  uint64_t v22 = sub_100009334(&qword_1000A3CA0);
  unint64_t v23 = (*(void *)(*(void *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t)&v8 - v23;
  uint64_t v48 = v1;
  sub_10008A0B0("star.fill", 9uLL, 1);
  uint64_t v5 = sub_100089D00();
  double v29 = &v47;
  uint64_t v47 = v5;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, enum case for Image.Scale.small(_:), v28);
  sub_100089B50();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v28);
  sub_10001F4C8();
  uint64_t v34 = sub_100089A50();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v33, enum case for Font.Leading.tight(_:), v32);
  uint64_t v37 = sub_100089A90();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v32);
  swift_release();
  sub_100042654();
  sub_100089C10();
  swift_release();
  sub_100042778(v38);
  sub_100064548((uint64_t)v42);
  sub_100089EB0();
  int v46 = sub_100089EA0();
  unint64_t v45 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v44 = v39 + 8;
  v45(v41, v43);
  v45(v42, v43);
  if (v46) {
    uint64_t v10 = sub_100089CB0();
  }
  else {
    uint64_t v10 = sub_100089CC0();
  }
  uint64_t v8 = v10;
  sub_100042820();
  sub_100089BC0();
  swift_release();
  sub_100042948(v35);
  sub_100064548((uint64_t)v42);
  sub_100089EB0();
  int v9 = sub_100089EA0();
  v45(v41, v43);
  v45(v42, v43);
  if (v9) {
    sub_100089980();
  }
  else {
    sub_100089970();
  }
  uint64_t v6 = sub_100089990();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 56))(v13, 0, 1);
  sub_100042A24();
  sub_100089BF0();
  sub_100042B4C(v13);
  return sub_100042BFC(v24);
}

uint64_t sub_100068350@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v49 = 0;
  uint64_t v2 = sub_100009334(&qword_1000A3CE0);
  unint64_t v18 = (*(void *)(*(void *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  uint64_t v19 = (uint64_t)v8 - v18;
  uint64_t v27 = 0;
  uint64_t v20 = sub_100089EC0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = v20 - 8;
  unint64_t v23 = (*(void *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v27);
  uint64_t v24 = (char *)v8 - v23;
  unint64_t v25 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v26 = (char *)v8 - v25;
  uint64_t v28 = sub_100089A80();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = v28 - 8;
  unint64_t v31 = (*(void *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v27);
  uint64_t v32 = (char *)v8 - v31;
  uint64_t v46 = sub_100089D10();
  uint64_t v43 = *(void *)(v46 - 8);
  uint64_t v44 = v46 - 8;
  unint64_t v33 = (*(void *)(v43 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v46);
  unint64_t v45 = (char *)v8 - v33;
  uint64_t v34 = sub_100009334(&qword_1000A3C88);
  unint64_t v35 = (*(void *)(*(void *)(v34 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v34);
  uint64_t v42 = (uint64_t)v8 - v35;
  uint64_t v36 = sub_100009334(&qword_1000A3C98);
  unint64_t v37 = (*(void *)(*(void *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v36);
  uint64_t v38 = (uint64_t)v8 - v37;
  uint64_t v39 = sub_100009334(&qword_1000A3CA0);
  unint64_t v40 = (*(void *)(*(void *)(v39 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v39);
  uint64_t v41 = (uint64_t)v8 - v40;
  uint64_t v49 = v1;
  sub_10008A0B0("circlebadge.fill", 0x10uLL, 1);
  uint64_t v5 = sub_100089D00();
  uint64_t v47 = &v48;
  uint64_t v48 = v5;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v45, enum case for Image.Scale.small(_:), v46);
  sub_100089B50();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v46);
  sub_10001F4C8();
  if (sub_100064BD8()) {
    uint64_t v16 = sub_100089AA0();
  }
  else {
    uint64_t v16 = sub_100089A50();
  }
  uint64_t v11 = v16;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v32, enum case for Font.Leading.tight(_:), v28);
  uint64_t v12 = sub_100089A90();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
  swift_release();
  sub_100042654();
  sub_100089C10();
  swift_release();
  sub_100042778(v42);
  sub_100064548((uint64_t)v26);
  sub_100089EB0();
  int v15 = sub_100089EA0();
  unint64_t v14 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v13 = v21 + 8;
  v14(v24, v20);
  v14(v26, v20);
  if (v15) {
    uint64_t v10 = sub_100089C90();
  }
  else {
    uint64_t v10 = sub_100089CC0();
  }
  v8[1] = v10;
  sub_100042820();
  sub_100089BC0();
  swift_release();
  sub_100042948(v38);
  sub_100064548((uint64_t)v26);
  sub_100089EB0();
  int v9 = sub_100089EA0();
  v14(v24, v20);
  v14(v26, v20);
  if (v9) {
    sub_100089980();
  }
  else {
    sub_100089970();
  }
  uint64_t v6 = sub_100089990();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 56))(v19, 0, 1);
  sub_100042A24();
  sub_100089BF0();
  sub_100042B4C(v19);
  return sub_100042BFC(v41);
}

uint64_t *sub_100068AA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v7 = sub_10006E2F4;
  unint64_t v58 = 0;
  unint64_t v4 = (*(void *)(*(void *)(type metadata accessor for MessageView() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3[1]);
  uint64_t v8 = (uint64_t)v3 - v4;
  unint64_t v58 = v1;
  sub_10004C658(v1, (void *)((char *)v3 - v4));
  uint64_t v5 = v20;
  uint64_t v20[2] = v8;
  uint64_t v6 = sub_100009334(&qword_1000A4640);
  sub_10006E2FC();
  sub_100089CF0();
  sub_10004CC64(v8);
  uint64_t v10 = v33;
  v33[0] = v35;
  v33[1] = v36;
  v33[2] = v37;
  v33[3] = v38;
  int v15 = 1;
  char v34 = v39 & 1;
  uint64_t v9 = sub_100009334(&qword_1000A4650);
  sub_10006E394();
  sub_100089C60();
  sub_10006E428(v10);
  unint64_t v14 = v28;
  v28[0] = v40;
  v28[1] = v41;
  v28[2] = v42;
  v28[3] = v43;
  char v29 = v44 & 1 & v15;
  uint64_t v30 = v45;
  uint64_t v31 = v46;
  char v32 = v47 & 1 & v15;
  uint64_t v11 = sub_100089A50();
  sub_100089A60();
  uint64_t v13 = sub_100089A70();
  swift_release();
  uint64_t v12 = sub_100009334(&qword_1000A4660);
  sub_10006E4E0();
  sub_100089C10();
  swift_release();
  sub_10006E584(v14);
  uint64_t v19 = v21;
  v21[0] = v48;
  v21[1] = v49;
  v21[2] = v50;
  void v21[3] = v51;
  char v22 = v52 & 1 & v15;
  uint64_t v23 = v53;
  uint64_t v24 = v54;
  char v25 = v55 & 1 & v15;
  uint64_t v26 = v56;
  uint64_t v27 = v57;
  uint64_t v17 = sub_100009334(&qword_1000A4670);
  unint64_t v18 = sub_10006E5D4();
  sub_1000458D8();
  sub_100089B10();
  return sub_10006E678(v19);
}

uint64_t sub_100068D7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v102 = 0;
  uint64_t v9 = 0;
  unint64_t v10 = (*(void *)(*(void *)(type metadata accessor for Message() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v1 = (char *)&v9 - v10;
  uint64_t v12 = (uint64_t)&v9 - v10;
  uint64_t v102 = v2;
  uint64_t v3 = type metadata accessor for MessageView();
  sub_100014B98((char *)(v11 + *(int *)(v3 + 20)), v1);
  uint64_t v14 = sub_100035570();
  uint64_t v13 = v4;
  sub_100014EC0(v12);
  int v15 = v68;
  v68[0] = v14;
  v68[1] = v13;
  sub_100043030();
  uint64_t v64 = sub_100089B00();
  uint64_t v65 = v5;
  char v66 = v6;
  uint64_t v67 = v7;
  uint64_t v16 = v61;
  v61[0] = v64;
  v61[1] = v5;
  int v25 = 1;
  char v62 = v6 & 1;
  uint64_t v63 = v7;
  sub_100089BA0();
  sub_1000430AC((uint64_t)v16);
  unint64_t v18 = v57;
  v57[0] = v68[2];
  v57[1] = v68[3];
  char v58 = v69 & 1 & v25;
  uint64_t v59 = v70;
  uint64_t v60 = v71;
  uint64_t v17 = sub_100009334(&qword_1000A4680);
  sub_10006E6E0();
  sub_100089C60();
  sub_1000430AC((uint64_t)v18);
  uint64_t v21 = v50;
  v50[0] = v72;
  v50[1] = v73;
  char v51 = v74 & 1 & v25;
  uint64_t v52 = v75;
  uint64_t v53 = v76;
  uint64_t v54 = v77;
  uint64_t v55 = v78;
  char v56 = v79 & 1 & v25;
  uint64_t v20 = sub_100089AA0();
  uint64_t v19 = sub_100009334(&qword_1000A46A0);
  sub_10006E804();
  sub_100089C10();
  swift_release();
  sub_10006E8A8((uint64_t)v21);
  uint64_t v24 = v41;
  v41[0] = v80;
  v41[1] = v81;
  char v42 = v82 & 1 & v25;
  uint64_t v43 = v83;
  uint64_t v44 = v84;
  uint64_t v45 = v85;
  uint64_t v46 = v86;
  char v47 = v87 & 1 & v25;
  uint64_t v48 = v88;
  uint64_t v49 = v89;
  uint64_t v23 = sub_100089CD0();
  uint64_t v22 = sub_100009334(&qword_1000A46B0);
  sub_10006E8FC();
  sub_100089BC0();
  swift_release();
  sub_10006E9A0((uint64_t)v24);
  char v29 = v30;
  v30[0] = v90;
  v30[1] = v91;
  char v31 = v92 & 1 & v25;
  uint64_t v32 = v93;
  uint64_t v33 = v94;
  uint64_t v34 = v95;
  uint64_t v35 = v96;
  char v36 = v97 & 1 & v25;
  uint64_t v37 = v98;
  uint64_t v38 = v99;
  uint64_t v39 = v100;
  uint64_t v40 = v101;
  uint64_t v27 = sub_100009334(&qword_1000A46C0);
  unint64_t v28 = sub_10006EA0C();
  sub_1000458D8();
  sub_100089B10();
  return sub_10006EAB0((uint64_t)v29);
}

uint64_t sub_100069164@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v113 = a1;
  uint64_t v97 = 0;
  uint64_t v52 = &opaque type descriptor for <<opaque return type of View.widgetAccentable(_:)>>;
  uint32_t v139 = 0;
  uint64_t v138 = 0;
  unint64_t v137 = 0;
  uint64_t v136 = 0;
  id v135 = 0;
  uint64_t v134 = 0;
  uint64_t v133 = 0;
  uint32_t v132 = 0;
  uint64_t v128 = 0;
  char v129 = 0;
  uint64_t v117 = 0;
  uint64_t v116 = 0;
  uint64_t v115 = 0;
  uint64_t v53 = sub_100009334(&qword_1000A46D0);
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = v53 - 8;
  unint64_t v56 = (*(void *)(v54 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v53);
  uint64_t v57 = (uint64_t *)((char *)&v24 - v56);
  unint64_t v58 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v56);
  uint64_t v59 = (uint64_t *)((char *)&v24 - v58);
  uint32_t v139 = (char *)&v24 - v58;
  uint64_t v60 = sub_100009334(&qword_1000A4870);
  unint64_t v61 = (*(void *)(*(void *)(v60 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v60);
  char v62 = (char *)&v24 - v61;
  unint64_t v63 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v61);
  uint64_t v64 = (uint64_t *)((char *)&v24 - v63);
  unint64_t v65 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v63);
  char v66 = (uint64_t *)((char *)&v24 - v65);
  uint64_t v138 = (char *)&v24 - v65;
  uint64_t v67 = sub_100009334(&qword_1000A4868);
  unint64_t v68 = (*(void *)(*(void *)(v67 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v67);
  char v69 = (uint64_t *)((char *)&v24 - v68);
  unint64_t v137 = (char *)&v24 - v68;
  unint64_t v70 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v7);
  uint64_t v71 = (uint64_t *)((char *)&v24 - v70);
  unint64_t v72 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v70);
  uint64_t v73 = (uint64_t *)((char *)&v24 - v72);
  unint64_t v74 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v72);
  uint64_t v75 = (uint64_t *)((char *)&v24 - v74);
  uint64_t v136 = (char *)&v24 - v74;
  uint64_t v76 = sub_100009334(&qword_1000A47F8);
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v78 = v76 - 8;
  unint64_t v79 = (*(void *)(v77 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v76);
  uint64_t v80 = (uint64_t)&v24 - v79;
  unint64_t v81 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v79);
  uint64_t v82 = (uint64_t)&v24 - v81;
  id v135 = (char *)&v24 - v81;
  uint64_t v83 = sub_100009334(&qword_1000A3CA8);
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v85 = v83 - 8;
  unint64_t v86 = (*(void *)(v84 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v83);
  char v87 = (char *)&v24 - v86;
  unint64_t v88 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v86);
  uint64_t v89 = (char *)&v24 - v88;
  uint64_t v90 = sub_100009334(&qword_1000A4828);
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v92 = v90 - 8;
  unint64_t v93 = (*(void *)(v91 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v97);
  uint64_t v94 = (char *)&v24 - v93;
  unint64_t v95 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v13);
  uint64_t v96 = (char *)&v24 - v95;
  uint64_t v134 = (char *)&v24 - v95;
  uint64_t v98 = (int *)type metadata accessor for Message();
  unint64_t v99 = (*(void *)(*((void *)v98 - 1) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v97);
  uint64_t v100 = (char *)&v24 - v99;
  unint64_t v101 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v15);
  uint64_t v102 = (char *)&v24 - v101;
  uint64_t v103 = type metadata accessor for MessageView();
  unint64_t v104 = (*(void *)(*(void *)(v103 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v103);
  uint64_t v112 = (char *)&v24 - v104;
  uint64_t v105 = sub_100009334(&qword_1000A4860);
  unint64_t v106 = (*(void *)(*(void *)(v105 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v105);
  uint64_t v107 = (char *)&v24 - v106;
  unint64_t v108 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v106);
  uint64_t v109 = (uint64_t *)((char *)&v24 - v108);
  unint64_t v110 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v108);
  unsigned int v111 = (uint64_t *)((char *)&v24 - v110);
  uint64_t v133 = (char *)&v24 - v110;
  uint32_t v132 = a1;
  int v114 = sub_100064BD8();
  sub_10004C658(v113, v112);
  if (v114)
  {
    sub_100014B98(&v112[*(int *)(v103 + 20)], v102);
    int v49 = v102[v98[10]];
    sub_100014EC0((uint64_t)v102);
    int v50 = v49;
  }
  else
  {
    int v50 = 0;
  }
  int v48 = v50;
  sub_10004CC64((uint64_t)v112);
  if (v48)
  {
    sub_100068350((uint64_t)v89);
    double v42 = sub_100064D44();
    uint64_t v43 = sub_100089DC0();
    uint64_t v44 = v18;
    sub_100042D0C();
    unsigned int v45 = 0;
    unsigned int v46 = 1;
    sub_100089C20();
    sub_100042E34((uint64_t)v89);
    unint64_t v47 = sub_1000799AC();
    sub_100039F6C((uint64_t)v94, v90, (uint64_t)v96);
    sub_100042E34((uint64_t)v94);
    sub_10007B9BC(v96, v94);
    sub_100039F6C((uint64_t)v94, v90, (uint64_t)v107);
    sub_100042E34((uint64_t)v94);
    (*(void (**)(char *, void, void, uint64_t))(v91 + 56))(v107, v45, v46, v90);
    sub_1000642D0(v107, v90, v109);
    sub_100079A4C((uint64_t)v107);
    sub_100079C7C(v109, v111);
    sub_100042E34((uint64_t)v96);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v107, 1, 1, v90);
    sub_1000799AC();
    sub_1000642D0(v107, v90, v109);
    sub_100079A4C((uint64_t)v107);
    sub_100079C7C(v109, v111);
  }
  sub_10006A144(v80);
  uint64_t v37 = sub_1000096C0(&qword_1000A4670);
  unint64_t v19 = sub_10006E5D4();
  uint64_t v130 = v37;
  unint64_t v131 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100039F6C(v80, v76, v82);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  uint64_t v40 = v77 + 8;
  v39(v80, v76);
  uint64_t v126 = sub_100089D60();
  char v127 = v20 & 1;
  sub_100039F6C((uint64_t)&v126, (uint64_t)&type metadata for Spacer, (uint64_t)&v128);
  sub_100014B98(&v113[*(int *)(v103 + 20)], v102);
  int v41 = v102[v98[11]];
  sub_100014EC0((uint64_t)v102);
  if (v41)
  {
    uint64_t v115 = v89;
    sub_10006A400((uint64_t)v87);
    unint64_t v36 = sub_100042D0C();
    sub_100039F6C((uint64_t)v87, v83, (uint64_t)v89);
    sub_100042E34((uint64_t)v87);
    sub_100043E90(v89, v87);
    sub_100039F6C((uint64_t)v87, v83, (uint64_t)v71);
    sub_100042E34((uint64_t)v87);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v71, 0, 1, v83);
    sub_1000642D0(v71, v83, v73);
    sub_100079FF8((uint64_t)v71);
    sub_10007A224(v73, v75);
    sub_100042E34((uint64_t)v89);
  }
  else
  {
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v71, 1, 1, v83);
    sub_100042D0C();
    sub_1000642D0(v71, v83, v73);
    sub_100079FF8((uint64_t)v71);
    sub_10007A224(v73, v75);
  }
  sub_100014B98(&v113[*(int *)(v103 + 20)], v102);
  int v35 = v102[v98[12]];
  sub_100014EC0((uint64_t)v102);
  if (v35)
  {
    uint64_t v116 = v89;
    sub_10006AB24((uint64_t)v87);
    unint64_t v34 = sub_100042D0C();
    sub_100039F6C((uint64_t)v87, v83, (uint64_t)v89);
    sub_100042E34((uint64_t)v87);
    sub_100043E90(v89, v87);
    sub_100039F6C((uint64_t)v87, v83, (uint64_t)v71);
    sub_100042E34((uint64_t)v87);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v71, 0, 1, v83);
    sub_1000642D0(v71, v83, v73);
    sub_100079FF8((uint64_t)v71);
    sub_10007A224(v73, v69);
    sub_100042E34((uint64_t)v89);
  }
  else
  {
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v71, 1, 1, v83);
    sub_100042D0C();
    sub_1000642D0(v71, v83, v73);
    sub_100079FF8((uint64_t)v71);
    sub_10007A224(v73, v69);
  }
  sub_100014B98(&v113[*(int *)(v103 + 20)], v100);
  uint64_t v21 = &v100[v98[13]];
  uint64_t v32 = *(void *)v21;
  int v33 = v21[8];
  sub_100014EC0((uint64_t)v100);
  if ((v33 & 1) != 0
    || (uint64_t v31 = v32,
        uint64_t v29 = v32,
        uint64_t v117 = v32,
        sub_100014B98(&v113[*(int *)(v103 + 20)], v102),
        int v30 = v102[v98[14]],
        sub_100014EC0((uint64_t)v102),
        (v30 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v62, 1, 1, v53);
    sub_10006F1C0();
    sub_1000642D0(v62, v53, v64);
    sub_10007A568((uint64_t)v62);
    sub_10007A7C4(v64, v66);
  }
  else
  {
    sub_10006B228(v29, (uint64_t)v57);
    unint64_t v28 = sub_10006F1C0();
    sub_100039F6C((uint64_t)v57, v53, (uint64_t)v59);
    sub_10006F260((uint64_t)v57);
    sub_10006EE2C(v59, v57);
    sub_100039F6C((uint64_t)v57, v53, (uint64_t)v62);
    sub_10006F260((uint64_t)v57);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v62, 0, 1, v53);
    sub_1000642D0(v62, v53, v64);
    sub_10007A568((uint64_t)v62);
    sub_10007A7C4(v64, v66);
    sub_10006F260((uint64_t)v59);
  }
  sub_10007AB84(v111, v109);
  uint64_t v27 = v125;
  v125[0] = v109;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v80, v82, v76);
  v125[1] = v80;
  uint64_t v123 = v128;
  char v124 = v129;
  v125[2] = &v123;
  sub_10007AFA4(v75, v73);
  v125[3] = v73;
  sub_10007AFA4(v69, v71);
  v125[4] = v71;
  sub_10007B394(v66, v64);
  v125[5] = v64;
  int v25 = v122;
  v122[0] = v105;
  v122[1] = v76;
  v122[2] = &type metadata for Spacer;
  v122[3] = v67;
  v122[4] = v67;
  v122[5] = v60;
  unint64_t v22 = sub_10007B800();
  uint64_t v26 = v118;
  v118[0] = v22;
  v118[1] = OpaqueTypeConformance2;
  void v118[2] = &protocol witness table for Spacer;
  unint64_t v119 = sub_10007B894();
  unint64_t v120 = v119;
  unint64_t v121 = sub_10007B928();
  sub_10003ED48((uint64_t)v27, 6uLL, (uint64_t)v25, v51);
  sub_10007A568((uint64_t)v64);
  sub_100079FF8((uint64_t)v71);
  sub_100079FF8((uint64_t)v73);
  v39(v80, v76);
  sub_100079A4C((uint64_t)v109);
  sub_10007A568((uint64_t)v66);
  sub_100079FF8((uint64_t)v69);
  sub_100079FF8((uint64_t)v75);
  v39(v82, v76);
  return sub_100079A4C((uint64_t)v111);
}

uint64_t *sub_10006A144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v7 = sub_10006EB34;
  uint64_t v57 = 0;
  unint64_t v4 = (*(void *)(*(void *)(type metadata accessor for MessageView() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  uint64_t v8 = (uint64_t)&v3 - v4;
  uint64_t v57 = v1;
  sub_10004C658(v1, (uint64_t *)((char *)&v3 - v4));
  uint64_t v5 = v19;
  v19[2] = v8;
  uint64_t v6 = sub_100009334(&qword_1000A4640);
  sub_10006E2FC();
  sub_100089CF0();
  sub_10004CC64(v8);
  uint64_t v10 = v32;
  v32[0] = v34;
  v32[1] = v35;
  v32[2] = v36;
  v32[3] = v37;
  int v14 = 1;
  char v33 = v38 & 1;
  uint64_t v9 = sub_100009334(&qword_1000A4650);
  sub_10006E394();
  sub_100089C60();
  sub_10006E428(v10);
  uint64_t v13 = v27;
  v27[0] = v39;
  v27[1] = v40;
  v27[2] = v41;
  v27[3] = v42;
  char v28 = v43 & 1 & v14;
  uint64_t v29 = v44;
  uint64_t v30 = v45;
  char v31 = v46 & 1 & v14;
  uint64_t v12 = sub_100089AA0();
  uint64_t v11 = sub_100009334(&qword_1000A4660);
  sub_10006E4E0();
  sub_100089C10();
  swift_release();
  sub_10006E584(v13);
  uint64_t v18 = v20;
  v20[0] = v47;
  v20[1] = v48;
  uint64_t v20[2] = v49;
  void v20[3] = v50;
  char v21 = v51 & 1 & v14;
  uint64_t v22 = v52;
  uint64_t v23 = v53;
  char v24 = v54 & 1 & v14;
  uint64_t v25 = v55;
  uint64_t v26 = v56;
  uint64_t v16 = sub_100009334(&qword_1000A4670);
  unint64_t v17 = sub_10006E5D4();
  sub_1000458D8();
  sub_100089B10();
  return sub_10006E678(v18);
}

uint64_t sub_10006A400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v12 = a1;
  uint64_t v49 = 0;
  uint64_t v2 = sub_100009334(&qword_1000A3CE0);
  unint64_t v13 = (*(void *)(*(void *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  uint64_t v14 = (uint64_t)&v9 - v13;
  uint64_t v17 = 0;
  uint64_t v44 = sub_100089EC0();
  uint64_t v40 = *(void *)(v44 - 8);
  uint64_t v41 = v44 - 8;
  unint64_t v15 = (*(void *)(v40 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v17);
  uint64_t v42 = (char *)&v9 - v15;
  unint64_t v16 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  char v43 = (char *)&v9 - v16;
  uint64_t v33 = sub_100089A80();
  uint64_t v31 = *(void *)(v33 - 8);
  uint64_t v32 = v33 - 8;
  unint64_t v18 = (*(void *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v17);
  uint64_t v34 = (char *)&v9 - v18;
  uint64_t v29 = sub_100089D10();
  uint64_t v26 = *(void *)(v29 - 8);
  uint64_t v27 = v29 - 8;
  unint64_t v19 = (*(void *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v29);
  char v28 = (char *)&v9 - v19;
  uint64_t v37 = sub_100009334(&qword_1000A3C88);
  unint64_t v20 = (*(void *)(*(void *)(v37 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v37);
  uint64_t v39 = (uint64_t)&v9 - v20;
  uint64_t v21 = sub_100009334(&qword_1000A3C98);
  unint64_t v22 = (*(void *)(*(void *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  uint64_t v36 = (uint64_t)&v9 - v22;
  uint64_t v23 = sub_100009334(&qword_1000A3CA0);
  unint64_t v24 = (*(void *)(*(void *)(v23 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v23);
  uint64_t v25 = (uint64_t)&v9 - v24;
  uint64_t v49 = v1;
  sub_10008A0B0("paperclip", 9uLL, 1);
  uint64_t v5 = sub_100089D00();
  uint64_t v30 = &v48;
  uint64_t v48 = v5;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, enum case for Image.Scale.small(_:), v29);
  sub_100089B50();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v29);
  sub_10001F4C8();
  uint64_t v35 = sub_100089AA0();
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v34, enum case for Font.Leading.tight(_:), v33);
  uint64_t v38 = sub_100089A90();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v33);
  swift_release();
  sub_100042654();
  sub_100089C10();
  swift_release();
  sub_100042778(v39);
  sub_100064548((uint64_t)v43);
  sub_100089EB0();
  int v47 = sub_100089EA0();
  char v46 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v45 = v40 + 8;
  v46(v42, v44);
  v46(v43, v44);
  if (v47)
  {
    id v6 = [self tertiaryLabelColor];
    uint64_t v11 = sub_100089CE0();
  }
  else
  {
    uint64_t v11 = sub_100089CC0();
  }
  uint64_t v9 = v11;
  sub_100042820();
  sub_100089BC0();
  swift_release();
  sub_100042948(v36);
  sub_100064548((uint64_t)v43);
  sub_100089EB0();
  int v10 = sub_100089EA0();
  v46(v42, v44);
  v46(v43, v44);
  if (v10) {
    sub_100089980();
  }
  else {
    sub_100089970();
  }
  uint64_t v7 = sub_100089990();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 56))(v14, 0, 1);
  sub_100042A24();
  sub_100089BF0();
  sub_100042B4C(v14);
  return sub_100042BFC(v25);
}

uint64_t sub_10006AB24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v11 = a1;
  uint64_t v48 = 0;
  uint64_t v2 = sub_100009334(&qword_1000A3CE0);
  unint64_t v12 = (*(void *)(*(void *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  uint64_t v13 = (uint64_t)&v8 - v12;
  uint64_t v16 = 0;
  uint64_t v43 = sub_100089EC0();
  uint64_t v39 = *(void *)(v43 - 8);
  uint64_t v40 = v43 - 8;
  unint64_t v14 = (*(void *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v16);
  uint64_t v41 = (char *)&v8 - v14;
  unint64_t v15 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v8 - v15;
  uint64_t v32 = sub_100089A80();
  uint64_t v30 = *(void *)(v32 - 8);
  uint64_t v31 = v32 - 8;
  unint64_t v17 = (*(void *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v16);
  uint64_t v33 = (char *)&v8 - v17;
  uint64_t v28 = sub_100089D10();
  uint64_t v25 = *(void *)(v28 - 8);
  uint64_t v26 = v28 - 8;
  unint64_t v18 = (*(void *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v8 - v18;
  uint64_t v36 = sub_100009334(&qword_1000A3C88);
  unint64_t v19 = (*(void *)(*(void *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v36);
  uint64_t v38 = (uint64_t)&v8 - v19;
  uint64_t v20 = sub_100009334(&qword_1000A3C98);
  unint64_t v21 = (*(void *)(*(void *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v20);
  uint64_t v35 = (uint64_t)&v8 - v21;
  uint64_t v22 = sub_100009334(&qword_1000A3CA0);
  unint64_t v23 = (*(void *)(*(void *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t)&v8 - v23;
  uint64_t v48 = v1;
  sub_10008A0B0("nosign", 6uLL, 1);
  uint64_t v5 = sub_100089D00();
  uint64_t v29 = &v47;
  uint64_t v47 = v5;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, enum case for Image.Scale.small(_:), v28);
  sub_100089B50();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v28);
  sub_10001F4C8();
  uint64_t v34 = sub_100089AA0();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v33, enum case for Font.Leading.tight(_:), v32);
  uint64_t v37 = sub_100089A90();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v32);
  swift_release();
  sub_100042654();
  sub_100089C10();
  swift_release();
  sub_100042778(v38);
  sub_100064548((uint64_t)v42);
  sub_100089EB0();
  int v46 = sub_100089EA0();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v44 = v39 + 8;
  v45(v41, v43);
  v45(v42, v43);
  if (v46) {
    uint64_t v10 = sub_100089C80();
  }
  else {
    uint64_t v10 = sub_100089CC0();
  }
  uint64_t v8 = v10;
  sub_100042820();
  sub_100089BC0();
  swift_release();
  sub_100042948(v35);
  sub_100064548((uint64_t)v42);
  sub_100089EB0();
  int v9 = sub_100089EA0();
  v45(v41, v43);
  v45(v42, v43);
  if (v9) {
    sub_100089980();
  }
  else {
    sub_100089970();
  }
  uint64_t v6 = sub_100089990();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 56))(v13, 0, 1);
  sub_100042A24();
  sub_100089BF0();
  sub_100042B4C(v13);
  return sub_100042BFC(v24);
}

uint64_t sub_10006B228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v78 = a1;
  unint64_t v93 = 0;
  uint64_t v92 = 0;
  uint64_t v91 = 0;
  uint64_t v90 = 0;
  uint64_t v88 = 0;
  uint64_t v89 = 0;
  uint64_t v49 = 0;
  uint64_t v40 = sub_100089EC0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = v40 - 8;
  unint64_t v43 = (*(void *)(v41 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v15 - v43;
  unint64_t v45 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v43);
  int v46 = (char *)&v15 - v45;
  unint64_t v47 = (*(void *)(*(void *)(sub_100009334(&qword_1000A3CE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v49);
  uint64_t v48 = (uint64_t)&v15 - v47;
  uint64_t v50 = sub_100089A80();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = v50 - 8;
  unint64_t v53 = (*(void *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v49);
  char v54 = (char *)&v15 - v53;
  uint64_t v55 = sub_100089D10();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = v55 - 8;
  unint64_t v58 = (*(void *)(v56 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v55);
  uint64_t v59 = (char *)&v15 - v58;
  uint64_t v60 = sub_100009334(&qword_1000A3C88);
  unint64_t v61 = (*(void *)(*(void *)(v60 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v60);
  uint64_t v62 = (uint64_t)&v15 - v61;
  uint64_t v63 = sub_100009334(&qword_1000A3C98);
  unint64_t v64 = (*(void *)(*(void *)(v63 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v63);
  uint64_t v65 = (uint64_t)&v15 - v64;
  uint64_t v66 = sub_100009334(&qword_1000A3CA0);
  unint64_t v67 = (*(void *)(*(void *)(v66 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v66);
  uint64_t v68 = (uint64_t)&v15 - v67;
  uint64_t v69 = sub_100009334(&qword_1000A3CA8);
  unint64_t v70 = (*(void *)(*(void *)(v69 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v69);
  uint64_t v71 = (char *)&v15 - v70;
  unint64_t v72 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v70);
  uint64_t v73 = (uint64_t)&v15 - v72;
  unint64_t v74 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v72);
  uint64_t v75 = (uint64_t)&v15 - v74;
  unint64_t v76 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v74);
  uint64_t v77 = (char *)&v15 - v76;
  unint64_t v93 = (char *)&v15 - v76;
  uint64_t v79 = sub_100009334(&qword_1000A46D0);
  unint64_t v80 = (*(void *)(*(void *)(v79 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v78);
  unint64_t v81 = (uint64_t *)((char *)&v15 - v80);
  unint64_t v82 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  uint64_t v83 = (uint64_t *)((char *)&v15 - v82);
  uint64_t v92 = (char *)&v15 - v82;
  uint64_t v91 = v9;
  uint64_t v90 = v2;
  id v84 = (id)MUIImageNameForBucket();
  if (v84)
  {
    id v38 = v84;
    id v33 = v84;
    uint64_t v34 = sub_10008A080();
    uint64_t v35 = v10;

    uint64_t v36 = v34;
    uint64_t v37 = v35;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
  }
  uint64_t v31 = v37;
  uint64_t v32 = v36;
  if (v37)
  {
    uint64_t v29 = v32;
    uint64_t v30 = v31;
    uint64_t v25 = v31;
    uint64_t v24 = v32;
    uint64_t v88 = v32;
    uint64_t v89 = v31;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100089D00();
    uint64_t v26 = &v87;
    uint64_t v87 = v11;
    (*(void (**)(char *, void, uint64_t))(v56 + 104))(v59, enum case for Image.Scale.small(_:), v55);
    sub_100089B50();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v55);
    sub_10001F4C8();
    uint64_t v27 = sub_100089AA0();
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v54, enum case for Font.Leading.tight(_:), v50);
    uint64_t v28 = sub_100089A90();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v50);
    swift_release();
    sub_100042654();
    sub_100089C10();
    swift_release();
    sub_100042778(v62);
    id v85 = (id)MUIPlatformColorForBucket();
    if (v85)
    {
      id v86 = v85;
    }
    else
    {
      id v86 = [self tertiaryLabelColor];
      sub_1000137A8(&v85);
    }
    uint64_t v20 = sub_100089CE0();
    sub_100042820();
    sub_100089BC0();
    swift_release();
    sub_100042948(v65);
    sub_100064548((uint64_t)v46);
    sub_100089EB0();
    int v23 = sub_100089EA0();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v41 + 8);
    uint64_t v21 = v41 + 8;
    v22(v44, v40);
    v22(v46, v40);
    if (v23) {
      sub_100089980();
    }
    else {
      sub_100089970();
    }
    uint64_t v12 = sub_100089990();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 56))(v48, 0, 1);
    sub_100042A24();
    sub_100089BF0();
    sub_100042B4C(v48);
    sub_100042BFC(v68);
    unint64_t v19 = sub_100042D0C();
    sub_100039F6C(v75, v69, (uint64_t)v77);
    sub_100042E34(v75);
    sub_100043E90(v77, v71);
    sub_100039F6C((uint64_t)v71, v69, v73);
    sub_100042E34((uint64_t)v71);
    sub_10003AED8(v73, v69, (uint64_t)&type metadata for EmptyView, v19, (uint64_t)&protocol witness table for EmptyView, (uint64_t)v81);
    sub_100042E34(v73);
    sub_10006EB3C(v81, v83);
    sub_100042E34((uint64_t)v77);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100089DD0();
    uint64_t v16 = &type metadata for EmptyView;
    unint64_t v17 = &protocol witness table for EmptyView;
    sub_100039F6C(v18, (uint64_t)&type metadata for EmptyView, v18);
    sub_100039F6C(v18, (uint64_t)v16, v18);
    unint64_t v13 = sub_100042D0C();
    sub_10003AFD0(v18, v69, (uint64_t)v16, v13, (uint64_t)v17, (uint64_t)v81);
    sub_10006EB3C(v81, v83);
  }
  sub_10006EE2C(v83, v81);
  sub_10006F1C0();
  sub_100039F6C((uint64_t)v81, v79, v39);
  sub_10006F260((uint64_t)v81);
  return sub_10006F260((uint64_t)v83);
}

uint64_t *sub_10006BE38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v7 = sub_10006F468;
  id v84 = 0;
  uint64_t v10 = type metadata accessor for MessageView();
  unint64_t v4 = (*(void *)(*(void *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v9);
  uint64_t v8 = (uint64_t)&v3 - v4;
  id v84 = v1;
  sub_10004C658(v1, (uint64_t *)((char *)&v3 - v4));
  uint64_t v5 = v25;
  v25[2] = v8;
  uint64_t v6 = sub_100009334(&qword_1000A4640);
  sub_10006E2FC();
  sub_100089CF0();
  sub_10004CC64(v8);
  unint64_t v13 = v47;
  v47[0] = v49;
  v47[1] = v50;
  v47[2] = v51;
  void v47[3] = v52;
  int v20 = 1;
  char v48 = v53 & 1;
  uint64_t v12 = *(void *)(v9 + *(int *)(v10 + 24));
  uint64_t v11 = sub_100009334(&qword_1000A4650);
  sub_10006E394();
  sub_100089C60();
  sub_10006E428(v13);
  uint64_t v16 = v42;
  v42[0] = v54;
  v42[1] = v55;
  v42[2] = v56;
  v42[3] = v57;
  char v43 = v58 & 1 & v20;
  uint64_t v44 = v59;
  uint64_t v45 = v60;
  char v46 = v61 & 1 & v20;
  uint64_t v15 = sub_100089AA0();
  uint64_t v14 = sub_100009334(&qword_1000A4660);
  sub_10006E4E0();
  sub_100089C10();
  swift_release();
  sub_10006E584(v16);
  unint64_t v19 = v35;
  v35[0] = v62;
  v35[1] = v63;
  v35[2] = v64;
  v35[3] = v65;
  char v36 = v66 & 1 & v20;
  uint64_t v37 = v67;
  uint64_t v38 = v68;
  char v39 = v69 & 1 & v20;
  uint64_t v40 = v70;
  uint64_t v41 = v71;
  uint64_t v18 = sub_100089CD0();
  uint64_t v17 = sub_100009334(&qword_1000A4670);
  sub_10006E5D4();
  sub_100089BC0();
  swift_release();
  sub_10006E678(v19);
  uint64_t v24 = v26;
  v26[0] = v72;
  v26[1] = v73;
  v26[2] = v74;
  v26[3] = v75;
  char v27 = v76 & 1 & v20;
  uint64_t v28 = v77;
  uint64_t v29 = v78;
  char v30 = v79 & 1 & v20;
  uint64_t v31 = v80;
  uint64_t v32 = v81;
  uint64_t v33 = v82;
  uint64_t v34 = v83;
  uint64_t v22 = sub_100009334(&qword_1000A46E8);
  unint64_t v23 = sub_10006F470();
  sub_1000458D8();
  sub_100089B10();
  return sub_10006F514(v24);
}

uint64_t *sub_10006C1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v47 = &v73;
  uint64_t v45 = a2;
  uint64_t v50 = a1;
  char v46 = "Placeholder when no sender is available for the given message";
  uint64_t v103 = 0;
  memset(__b, 0, 0x21uLL);
  long long v100 = 0u;
  long long v101 = 0u;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  long long v73 = 0u;
  long long v74 = 0u;
  uint64_t v48 = 0;
  unint64_t v49 = (*(void *)(*(void *)(type metadata accessor for Message() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v52 = (char *)&v11 - v49;
  uint64_t v103 = v2;
  uint64_t v3 = type metadata accessor for MessageView();
  sub_100014B98((char *)(v50 + *(int *)(v3 + 20)), v52);
  uint64_t v51 = *((void *)v52 + 2);
  uint64_t v53 = *((void *)v52 + 3);
  swift_bridgeObjectRetain();
  sub_100014EC0((uint64_t)v52);
  if (v53)
  {
    uint64_t v43 = v51;
    uint64_t v44 = v53;
    uint64_t v42 = v53;
    uint64_t v30 = v51;
    uint64_t v75 = v51;
    uint64_t v76 = v53;
    swift_bridgeObjectRetain();
    uint64_t v31 = v72;
    v72[0] = v30;
    v72[1] = v42;
    sub_100043030();
    uint64_t v68 = sub_100089B00();
    uint64_t v69 = v4;
    char v70 = v5;
    uint64_t v71 = v6;
    uint64_t v32 = v65;
    v65[0] = v68;
    v65[1] = v4;
    int v40 = 1;
    char v66 = v5 & 1;
    uint64_t v67 = v6;
    uint64_t v41 = &v73;
    uint64_t v37 = &type metadata for Text;
    uint64_t v38 = &protocol witness table for Text;
    sub_100039F6C((uint64_t)v65, (uint64_t)&type metadata for Text, (uint64_t)&v73);
    sub_1000430AC((uint64_t)v32);
    long long v33 = v73;
    int v34 = v74;
    uint64_t v35 = *((void *)&v74 + 1);
    sub_100051F7C(v73, *((uint64_t *)&v73 + 1), v74 & 1);
    swift_bridgeObjectRetain();
    char v36 = &v57;
    long long v57 = v33;
    char v58 = v34 & 1 & v40;
    uint64_t v59 = v35;
    sub_100039F6C((uint64_t)&v57, (uint64_t)v37, (uint64_t)v60);
    sub_1000430AC((uint64_t)v36);
    char v39 = v54;
    v54[0] = v60[0];
    v54[1] = v60[1];
    char v55 = v61 & 1 & v40;
    uint64_t v56 = v62;
    sub_10003AED8((uint64_t)v54, (uint64_t)v37, (uint64_t)v37, (uint64_t)v38, (uint64_t)v38, (uint64_t)v63);
    sub_1000430AC((uint64_t)v39);
    __b[0] = v63[0];
    __b[1] = v63[1];
    __b[2] = v63[2];
    __b[3] = v63[3];
    LOBYTE(__b[4]) = v64 & 1 & v40;
    sub_1000430AC((uint64_t)v41);
    swift_bridgeObjectRelease();
  }
  else
  {
    int v28 = 1;
    sub_10008A0B0("NO_SENDER", 9uLL, 1);
    sub_100089930();
    uint64_t v97 = v46;
    uint64_t v98 = 61;
    __int16 v99 = 2;
    uint64_t v93 = sub_100089AF0();
    uint64_t v94 = v7;
    char v95 = v8;
    uint64_t v96 = v9;
    int v20 = v90;
    v90[0] = v93;
    v90[1] = v7;
    char v91 = v8 & 1 & v28;
    uint64_t v92 = v9;
    uint64_t v29 = &v100;
    uint64_t v25 = &type metadata for Text;
    uint64_t v26 = &protocol witness table for Text;
    sub_100039F6C((uint64_t)v90, (uint64_t)&type metadata for Text, (uint64_t)&v100);
    sub_1000430AC((uint64_t)v20);
    long long v21 = v100;
    int v22 = v101;
    uint64_t v23 = *((void *)&v101 + 1);
    sub_100051F7C(v100, *((uint64_t *)&v100 + 1), v101 & 1);
    swift_bridgeObjectRetain();
    uint64_t v24 = &v82;
    long long v82 = v21;
    char v83 = v22 & 1 & v28;
    uint64_t v84 = v23;
    sub_100039F6C((uint64_t)&v82, (uint64_t)v25, (uint64_t)v85);
    sub_1000430AC((uint64_t)v24);
    char v27 = v79;
    v79[0] = v85[0];
    v79[1] = v85[1];
    char v80 = v86 & 1 & v28;
    uint64_t v81 = v87;
    sub_10003AFD0((uint64_t)v79, (uint64_t)v25, (uint64_t)v25, (uint64_t)v26, (uint64_t)v26, (uint64_t)v88);
    sub_1000430AC((uint64_t)v27);
    __b[0] = v88[0];
    __b[1] = v88[1];
    __b[2] = v88[2];
    __b[3] = v88[3];
    LOBYTE(__b[4]) = v89 & 1 & v28;
    sub_1000430AC((uint64_t)v29);
  }
  unint64_t v19 = __b;
  uint64_t v12 = __b[0];
  uint64_t v13 = __b[1];
  uint64_t v14 = __b[2];
  uint64_t v15 = __b[3];
  int v16 = LOBYTE(__b[4]);
  sub_10007243C(__b[0], __b[1], __b[2]);
  uint64_t v18 = v77;
  v77[0] = v12;
  v77[1] = v13;
  v77[2] = v14;
  v77[3] = v15;
  char v78 = v16 & 1;
  uint64_t v17 = sub_100009334(&qword_1000A4640);
  sub_10006E2FC();
  sub_100039F6C((uint64_t)v18, v17, v45);
  sub_10006E428(v18);
  return sub_10006E428(v19);
}

uint64_t *sub_10006C794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v47 = &v73;
  uint64_t v45 = a2;
  uint64_t v50 = a1;
  char v46 = "Placeholder when no subject is available for the given message";
  uint64_t v103 = 0;
  memset(__b, 0, 0x21uLL);
  long long v100 = 0u;
  long long v101 = 0u;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  long long v73 = 0u;
  long long v74 = 0u;
  uint64_t v48 = 0;
  unint64_t v49 = (*(void *)(*(void *)(type metadata accessor for Message() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v52 = (char *)&v11 - v49;
  uint64_t v103 = v2;
  uint64_t v3 = type metadata accessor for MessageView();
  sub_100014B98((char *)(v50 + *(int *)(v3 + 20)), v52);
  uint64_t v51 = *((void *)v52 + 4);
  uint64_t v53 = *((void *)v52 + 5);
  swift_bridgeObjectRetain();
  sub_100014EC0((uint64_t)v52);
  if (v53)
  {
    uint64_t v43 = v51;
    uint64_t v44 = v53;
    uint64_t v42 = v53;
    uint64_t v30 = v51;
    uint64_t v75 = v51;
    uint64_t v76 = v53;
    swift_bridgeObjectRetain();
    uint64_t v31 = v72;
    v72[0] = v30;
    v72[1] = v42;
    sub_100043030();
    uint64_t v68 = sub_100089B00();
    uint64_t v69 = v4;
    char v70 = v5;
    uint64_t v71 = v6;
    uint64_t v32 = v65;
    v65[0] = v68;
    v65[1] = v4;
    int v40 = 1;
    char v66 = v5 & 1;
    uint64_t v67 = v6;
    uint64_t v41 = &v73;
    uint64_t v37 = &type metadata for Text;
    uint64_t v38 = &protocol witness table for Text;
    sub_100039F6C((uint64_t)v65, (uint64_t)&type metadata for Text, (uint64_t)&v73);
    sub_1000430AC((uint64_t)v32);
    long long v33 = v73;
    int v34 = v74;
    uint64_t v35 = *((void *)&v74 + 1);
    sub_100051F7C(v73, *((uint64_t *)&v73 + 1), v74 & 1);
    swift_bridgeObjectRetain();
    char v36 = &v57;
    long long v57 = v33;
    char v58 = v34 & 1 & v40;
    uint64_t v59 = v35;
    sub_100039F6C((uint64_t)&v57, (uint64_t)v37, (uint64_t)v60);
    sub_1000430AC((uint64_t)v36);
    char v39 = v54;
    v54[0] = v60[0];
    v54[1] = v60[1];
    char v55 = v61 & 1 & v40;
    uint64_t v56 = v62;
    sub_10003AED8((uint64_t)v54, (uint64_t)v37, (uint64_t)v37, (uint64_t)v38, (uint64_t)v38, (uint64_t)v63);
    sub_1000430AC((uint64_t)v39);
    __b[0] = v63[0];
    __b[1] = v63[1];
    __b[2] = v63[2];
    __b[3] = v63[3];
    LOBYTE(__b[4]) = v64 & 1 & v40;
    sub_1000430AC((uint64_t)v41);
    swift_bridgeObjectRelease();
  }
  else
  {
    int v28 = 1;
    sub_10008A0B0("NO_SUBJECT", 0xAuLL, 1);
    sub_100089930();
    uint64_t v97 = v46;
    uint64_t v98 = 62;
    __int16 v99 = 2;
    uint64_t v93 = sub_100089AF0();
    uint64_t v94 = v7;
    char v95 = v8;
    uint64_t v96 = v9;
    int v20 = v90;
    v90[0] = v93;
    v90[1] = v7;
    char v91 = v8 & 1 & v28;
    uint64_t v92 = v9;
    uint64_t v29 = &v100;
    uint64_t v25 = &type metadata for Text;
    uint64_t v26 = &protocol witness table for Text;
    sub_100039F6C((uint64_t)v90, (uint64_t)&type metadata for Text, (uint64_t)&v100);
    sub_1000430AC((uint64_t)v20);
    long long v21 = v100;
    int v22 = v101;
    uint64_t v23 = *((void *)&v101 + 1);
    sub_100051F7C(v100, *((uint64_t *)&v100 + 1), v101 & 1);
    swift_bridgeObjectRetain();
    uint64_t v24 = &v82;
    long long v82 = v21;
    char v83 = v22 & 1 & v28;
    uint64_t v84 = v23;
    sub_100039F6C((uint64_t)&v82, (uint64_t)v25, (uint64_t)v85);
    sub_1000430AC((uint64_t)v24);
    char v27 = v79;
    v79[0] = v85[0];
    v79[1] = v85[1];
    char v80 = v86 & 1 & v28;
    uint64_t v81 = v87;
    sub_10003AFD0((uint64_t)v79, (uint64_t)v25, (uint64_t)v25, (uint64_t)v26, (uint64_t)v26, (uint64_t)v88);
    sub_1000430AC((uint64_t)v27);
    __b[0] = v88[0];
    __b[1] = v88[1];
    __b[2] = v88[2];
    __b[3] = v88[3];
    LOBYTE(__b[4]) = v89 & 1 & v28;
    sub_1000430AC((uint64_t)v29);
  }
  unint64_t v19 = __b;
  uint64_t v12 = __b[0];
  uint64_t v13 = __b[1];
  uint64_t v14 = __b[2];
  uint64_t v15 = __b[3];
  int v16 = LOBYTE(__b[4]);
  sub_10007243C(__b[0], __b[1], __b[2]);
  uint64_t v18 = v77;
  v77[0] = v12;
  v77[1] = v13;
  v77[2] = v14;
  v77[3] = v15;
  char v78 = v16 & 1;
  uint64_t v17 = sub_100009334(&qword_1000A4640);
  sub_10006E2FC();
  sub_100039F6C((uint64_t)v18, v17, v45);
  sub_10006E428(v18);
  return sub_10006E428(v19);
}

uint64_t *sub_10006CD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v47 = &v73;
  uint64_t v45 = a2;
  uint64_t v50 = a1;
  char v46 = "Placeholder when no summary is available for the given message";
  uint64_t v103 = 0;
  memset(__b, 0, 0x21uLL);
  long long v100 = 0u;
  long long v101 = 0u;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  long long v73 = 0u;
  long long v74 = 0u;
  uint64_t v48 = 0;
  unint64_t v49 = (*(void *)(*(void *)(type metadata accessor for Message() - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v52 = (char *)&v11 - v49;
  uint64_t v103 = v2;
  uint64_t v3 = type metadata accessor for MessageView();
  sub_100014B98((char *)(v50 + *(int *)(v3 + 20)), v52);
  uint64_t v51 = *((void *)v52 + 6);
  uint64_t v53 = *((void *)v52 + 7);
  swift_bridgeObjectRetain();
  sub_100014EC0((uint64_t)v52);
  if (v53)
  {
    uint64_t v43 = v51;
    uint64_t v44 = v53;
    uint64_t v42 = v53;
    uint64_t v30 = v51;
    uint64_t v75 = v51;
    uint64_t v76 = v53;
    swift_bridgeObjectRetain();
    uint64_t v31 = v72;
    v72[0] = v30;
    v72[1] = v42;
    sub_100043030();
    uint64_t v68 = sub_100089B00();
    uint64_t v69 = v4;
    char v70 = v5;
    uint64_t v71 = v6;
    uint64_t v32 = v65;
    v65[0] = v68;
    v65[1] = v4;
    int v40 = 1;
    char v66 = v5 & 1;
    uint64_t v67 = v6;
    uint64_t v41 = &v73;
    uint64_t v37 = &type metadata for Text;
    uint64_t v38 = &protocol witness table for Text;
    sub_100039F6C((uint64_t)v65, (uint64_t)&type metadata for Text, (uint64_t)&v73);
    sub_1000430AC((uint64_t)v32);
    long long v33 = v73;
    int v34 = v74;
    uint64_t v35 = *((void *)&v74 + 1);
    sub_100051F7C(v73, *((uint64_t *)&v73 + 1), v74 & 1);
    swift_bridgeObjectRetain();
    char v36 = &v57;
    long long v57 = v33;
    char v58 = v34 & 1 & v40;
    uint64_t v59 = v35;
    sub_100039F6C((uint64_t)&v57, (uint64_t)v37, (uint64_t)v60);
    sub_1000430AC((uint64_t)v36);
    char v39 = v54;
    v54[0] = v60[0];
    v54[1] = v60[1];
    char v55 = v61 & 1 & v40;
    uint64_t v56 = v62;
    sub_10003AED8((uint64_t)v54, (uint64_t)v37, (uint64_t)v37, (uint64_t)v38, (uint64_t)v38, (uint64_t)v63);
    sub_1000430AC((uint64_t)v39);
    __b[0] = v63[0];
    __b[1] = v63[1];
    __b[2] = v63[2];
    __b[3] = v63[3];
    LOBYTE(__b[4]) = v64 & 1 & v40;
    sub_1000430AC((uint64_t)v41);
    swift_bridgeObjectRelease();
  }
  else
  {
    int v28 = 1;
    sub_10008A0B0("NO_BODY", 7uLL, 1);
    sub_100089930();
    uint64_t v97 = v46;
    uint64_t v98 = 62;
    __int16 v99 = 2;
    uint64_t v93 = sub_100089AF0();
    uint64_t v94 = v7;
    char v95 = v8;
    uint64_t v96 = v9;
    int v20 = v90;
    v90[0] = v93;
    v90[1] = v7;
    char v91 = v8 & 1 & v28;
    uint64_t v92 = v9;
    uint64_t v29 = &v100;
    uint64_t v25 = &type metadata for Text;
    uint64_t v26 = &protocol witness table for Text;
    sub_100039F6C((uint64_t)v90, (uint64_t)&type metadata for Text, (uint64_t)&v100);
    sub_1000430AC((uint64_t)v20);
    long long v21 = v100;
    int v22 = v101;
    uint64_t v23 = *((void *)&v101 + 1);
    sub_100051F7C(v100, *((uint64_t *)&v100 + 1), v101 & 1);
    swift_bridgeObjectRetain();
    uint64_t v24 = &v82;
    long long v82 = v21;
    char v83 = v22 & 1 & v28;
    uint64_t v84 = v23;
    sub_100039F6C((uint64_t)&v82, (uint64_t)v25, (uint64_t)v85);
    sub_1000430AC((uint64_t)v24);
    char v27 = v79;
    v79[0] = v85[0];
    v79[1] = v85[1];
    char v80 = v86 & 1 & v28;
    uint64_t v81 = v87;
    sub_10003AFD0((uint64_t)v79, (uint64_t)v25, (uint64_t)v25, (uint64_t)v26, (uint64_t)v26, (uint64_t)v88);
    sub_1000430AC((uint64_t)v27);
    __b[0] = v88[0];
    __b[1] = v88[1];
    __b[2] = v88[2];
    __b[3] = v88[3];
    LOBYTE(__b[4]) = v89 & 1 & v28;
    sub_1000430AC((uint64_t)v29);
  }
  unint64_t v19 = __b;
  uint64_t v12 = __b[0];
  uint64_t v13 = __b[1];
  uint64_t v14 = __b[2];
  uint64_t v15 = __b[3];
  int v16 = LOBYTE(__b[4]);
  sub_10007243C(__b[0], __b[1], __b[2]);
  uint64_t v18 = v77;
  v77[0] = v12;
  v77[1] = v13;
  v77[2] = v14;
  v77[3] = v15;
  char v78 = v16 & 1;
  uint64_t v17 = sub_100009334(&qword_1000A4640);
  sub_10006E2FC();
  sub_100039F6C((uint64_t)v18, v17, v45);
  sub_10006E428(v18);
  return sub_10006E428(v19);
}

uint64_t sub_10006D334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v10 = a2;
  uint64_t v6 = a1;
  v4[1] = 0;
  uint64_t v12 = sub_100089940();
  uint64_t v8 = *(void *)(v12 - 8);
  uint64_t v9 = v12 - 8;
  unint64_t v5 = (*(void *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v11 = (char *)v4 - v5;
  uint64_t v15 = sub_100089910();
  uint64_t v13 = *(void *)(v15 - 8);
  uint64_t v14 = v15 - 8;
  unint64_t v7 = (*(void *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  double v2 = __chkstk_darwin(v15);
  int v16 = (char *)v4 - v7;
  (*(void (**)(char *, double))(v13 + 16))((char *)v4 - v7, v2);
  sub_100089880();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v10, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v15);
}

uint64_t sub_10006D4C4(uint64_t a1)
{
  uint64_t v4 = a1;
  uint64_t v1 = sub_100089940();
  uint64_t v6 = *(void *)(v1 - 8);
  unint64_t v5 = (*(void *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  double v2 = __chkstk_darwin(v1);
  unint64_t v7 = (char *)&v4 - v5;
  (*(void (**)(double))(v6 + 16))(v2);
  return sub_100089890();
}

uint64_t sub_10006D57C@<X0>(uint64_t a1@<X8>)
{
  return sub_100065744(a1);
}

uint64_t sub_10006D594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003F980(a1, a2);
}

uint64_t sub_10006D5AC(uint64_t a1)
{
  return sub_10003FB28(a1);
}

unint64_t sub_10006D5C4()
{
  uint64_t v2 = qword_1000A4600;
  if (!qword_1000A4600)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4600);
    return WitnessTable;
  }
  return v2;
}

uint64_t type metadata accessor for MessageView()
{
  uint64_t v1 = qword_1000A4750;
  if (!qword_1000A4750) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

void *sub_10006D6B8(uint64_t *a1, void *a2)
{
  sub_100009334(&qword_1000A4000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089940();
    (*(void (**)(void *, uint64_t *))(*(void *)(v2 - 8) + 16))(a2, a1);
  }
  else
  {
    uint64_t v4 = *a1;
    swift_retain();
    *a2 = v4;
  }
  swift_storeEnumTagMultiPayload();
  return a2;
}

uint64_t sub_10006D788(uint64_t a1)
{
  sub_100009334(&qword_1000A4000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089940();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  return a1;
}

uint64_t sub_10006D820()
{
  uint64_t v15 = (int *)type metadata accessor for MessageView();
  uint64_t v0 = *(unsigned __int8 *)(*((void *)v15 - 1) + 80);
  uint64_t v16 = (v0 + 16) & ~v0;
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = sub_100089EC0();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v14 + v16);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v14 + v16 + v15[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for Message();
  uint64_t v8 = v10 + *(int *)(v9 + 32);
  uint64_t v2 = sub_100089630();
  (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v8);
  uint64_t v11 = v10 + *(int *)(v9 + 60);
  uint64_t v12 = sub_1000895A0();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v11, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v6 = v14 + v16 + v15[8];
  uint64_t v3 = sub_100009334(&qword_1000A3FF8);
  (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v6);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v14 + v16 + v15[12];
  sub_100009334(&qword_1000A4000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100089940();
    (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

char *sub_10006DBBC(char *a1, char *a2)
{
  uint64_t v27 = sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a2, a1, *(void *)(*(void *)(v27 - 8) + 64));
  }
  uint64_t v15 = (int *)type metadata accessor for MessageView();
  uint64_t v18 = &a2[v15[5]];
  int v20 = &a1[v15[5]];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
  *((_OWORD *)v18 + 1) = *((_OWORD *)v20 + 1);
  *((_OWORD *)v18 + 2) = *((_OWORD *)v20 + 2);
  *((_OWORD *)v18 + 3) = *((_OWORD *)v20 + 3);
  unint64_t v19 = (int *)type metadata accessor for Message();
  uint64_t v17 = &v18[v19[8]];
  uint64_t v16 = &v20[v19[8]];
  uint64_t v3 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(v17, v16);
  v18[v19[9]] = v20[v19[9]];
  v18[v19[10]] = v20[v19[10]];
  v18[v19[11]] = v20[v19[11]];
  v18[v19[12]] = v20[v19[12]];
  uint64_t v4 = &v18[v19[13]];
  unint64_t v5 = &v20[v19[13]];
  *(void *)uint64_t v4 = *(void *)v5;
  v4[8] = v5[8];
  v18[v19[14]] = v20[v19[14]];
  long long v21 = &v18[v19[15]];
  int v22 = &v20[v19[15]];
  uint64_t v23 = sub_1000895A0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v24 + 48))(v22, 1))
  {
    uint64_t v6 = sub_100009334(&qword_1000A3B40);
    memcpy(v21, v22, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(void *)&a2[v15[6]] = *(void *)&a1[v15[6]];
  a2[v15[7]] = a1[v15[7]];
  uint64_t v11 = &a2[v15[8]];
  uint64_t v10 = &a1[v15[8]];
  uint64_t v7 = sub_100009334(&qword_1000A3FF8);
  (*(void (**)(char *, char *))(*(void *)(v7 - 8) + 32))(v11, v10);
  *(_OWORD *)&a2[v15[9]] = *(_OWORD *)&a1[v15[9]];
  *(_OWORD *)&a2[v15[10]] = *(_OWORD *)&a1[v15[10]];
  *(_OWORD *)&a2[v15[11]] = *(_OWORD *)&a1[v15[11]];
  __dst = &a2[v15[12]];
  __src = &a1[v15[12]];
  uint64_t v14 = sub_100009334(&qword_1000A4000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100089940();
    (*(void (**)(char *, char *))(*(void *)(v8 - 8) + 32))(__dst, __src);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(__dst, __src, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a2;
}

uint64_t sub_10006E0C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = type metadata accessor for MessageView();
  uint64_t v4 = (void *)(v2
                + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)));

  return sub_10006593C(a1, v4, a2);
}

unint64_t sub_10006E14C()
{
  uint64_t v2 = qword_1000A4618;
  if (!qword_1000A4618)
  {
    sub_1000096C0(&qword_1000A4610);
    sub_10006E1EC();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4618);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10006E1EC()
{
  uint64_t v2 = qword_1000A4620;
  if (!qword_1000A4620)
  {
    sub_1000096C0(&qword_1000A4628);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4620);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10006E270()
{
  uint64_t v2 = qword_1000A4638;
  if (!qword_1000A4638)
  {
    sub_1000096C0(&qword_1000A4630);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4638);
    return WitnessTable;
  }
  return v2;
}

uint64_t *sub_10006E2F4@<X0>(uint64_t a1@<X8>)
{
  return sub_10006C1C4(*(void *)(v1 + 16), a1);
}

unint64_t sub_10006E2FC()
{
  uint64_t v2 = qword_1000A4648;
  if (!qword_1000A4648)
  {
    sub_1000096C0(&qword_1000A4640);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4648);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10006E394()
{
  uint64_t v2 = qword_1000A4658;
  if (!qword_1000A4658)
  {
    sub_1000096C0(&qword_1000A4650);
    sub_10006E2FC();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4658);
    return WitnessTable;
  }
  return v2;
}

uint64_t *sub_10006E428(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10006E46C(uint64_t a1, uint64_t a2, char a3)
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_10006E4E0()
{
  uint64_t v2 = qword_1000A4668;
  if (!qword_1000A4668)
  {
    sub_1000096C0(&qword_1000A4660);
    sub_10006E394();
    sub_1000431D8();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4668);
    return WitnessTable;
  }
  return v2;
}

uint64_t *sub_10006E584(uint64_t *a1)
{
  return a1;
}

unint64_t sub_10006E5D4()
{
  uint64_t v2 = qword_1000A4678;
  if (!qword_1000A4678)
  {
    sub_1000096C0(&qword_1000A4670);
    sub_10006E4E0();
    sub_1000428C4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4678);
    return WitnessTable;
  }
  return v2;
}

uint64_t *sub_10006E678(uint64_t *a1)
{
  return a1;
}

unint64_t sub_10006E6E0()
{
  uint64_t v2 = qword_1000A4688;
  if (!qword_1000A4688)
  {
    sub_1000096C0(&qword_1000A4680);
    sub_10006E780();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4688);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10006E780()
{
  uint64_t v2 = qword_1000A4690;
  if (!qword_1000A4690)
  {
    sub_1000096C0(&qword_1000A4698);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4690);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10006E804()
{
  uint64_t v2 = qword_1000A46A8;
  if (!qword_1000A46A8)
  {
    sub_1000096C0(&qword_1000A46A0);
    sub_10006E6E0();
    sub_1000431D8();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A46A8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10006E8A8(uint64_t a1)
{
  return a1;
}

unint64_t sub_10006E8FC()
{
  uint64_t v2 = qword_1000A46B8;
  if (!qword_1000A46B8)
  {
    sub_1000096C0(&qword_1000A46B0);
    sub_10006E804();
    sub_1000428C4();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A46B8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10006E9A0(uint64_t a1)
{
  return a1;
}

unint64_t sub_10006EA0C()
{
  uint64_t v2 = qword_1000A46C8;
  if (!qword_1000A46C8)
  {
    sub_1000096C0(&qword_1000A46C0);
    sub_10006E8FC();
    sub_100042AC8();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A46C8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10006EAB0(uint64_t a1)
{
  return a1;
}

uint64_t *sub_10006EB34@<X0>(uint64_t a1@<X8>)
{
  return sub_10006C794(*(void *)(v1 + 16), a1);
}

void *sub_10006EB3C(void *a1, void *a2)
{
  uint64_t v23 = sub_100009334(&qword_1000A46D8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a2, a1, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *a2 = *a1;
    uint64_t v2 = sub_100009334(&qword_1000A3C88);
    uint64_t v11 = (void *)((char *)a2 + *(int *)(v2 + 36));
    uint64_t v12 = (void *)((char *)a1 + *(int *)(v2 + 36));
    *uint64_t v11 = *v12;
    uint64_t v3 = sub_100009334(&qword_1000A3C90);
    uint64_t v14 = (char *)v11 + *(int *)(v3 + 28);
    uint64_t v13 = (char *)v12 + *(int *)(v3 + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(v14, v13);
    uint64_t v5 = sub_100009334(&qword_1000A3C98);
    *(_OWORD *)((char *)a2 + *(int *)(v5 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v5 + 36));
    uint64_t v6 = sub_100009334(&qword_1000A3CA0);
    *(_OWORD *)((char *)a2 + *(int *)(v6 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v6 + 36));
    uint64_t v7 = sub_100009334(&qword_1000A3CA8);
    uint64_t v15 = (void *)((char *)a2 + *(int *)(v7 + 36));
    uint64_t v16 = (void *)((char *)a1 + *(int *)(v7 + 36));
    *uint64_t v15 = *v16;
    uint64_t v8 = sub_100009334(&qword_1000A3CB0);
    __dst = (char *)v15 + *(int *)(v8 + 28);
    uint64_t v18 = (char *)v16 + *(int *)(v8 + 28);
    uint64_t v19 = sub_100089990();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v20 + 48))(v18, 1))
    {
      uint64_t v9 = sub_100009334(&qword_1000A3CE0);
      memcpy(__dst, v18, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

void *sub_10006EE2C(uint64_t *a1, void *a2)
{
  uint64_t v34 = sub_100009334(&qword_1000A46D8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a2, a1, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    uint64_t v11 = *a1;
    swift_retain();
    *a2 = v11;
    uint64_t v2 = sub_100009334(&qword_1000A3C88);
    uint64_t v13 = (void *)((char *)a2 + *(int *)(v2 + 36));
    uint64_t v14 = (uint64_t *)((char *)a1 + *(int *)(v2 + 36));
    uint64_t v12 = *v14;
    swift_retain();
    *uint64_t v13 = v12;
    uint64_t v3 = sub_100009334(&qword_1000A3C90);
    uint64_t v16 = (char *)v13 + *(int *)(v3 + 28);
    uint64_t v15 = (char *)v14 + *(int *)(v3 + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v16, v15);
    uint64_t v5 = sub_100009334(&qword_1000A3C98);
    uint64_t v19 = (void *)((char *)a2 + *(int *)(v5 + 36));
    uint64_t v18 = (uint64_t *)((char *)a1 + *(int *)(v5 + 36));
    uint64_t v17 = *v18;
    swift_retain();
    void *v19 = v17;
    uint64_t v20 = v18[1];
    swift_retain();
    v19[1] = v20;
    uint64_t v6 = sub_100009334(&qword_1000A3CA0);
    uint64_t v23 = (void *)((char *)a2 + *(int *)(v6 + 36));
    int v22 = (uint64_t *)((char *)a1 + *(int *)(v6 + 36));
    uint64_t v21 = *v22;
    swift_retain();
    void *v23 = v21;
    uint64_t v24 = v22[1];
    swift_retain();
    v23[1] = v24;
    uint64_t v7 = sub_100009334(&qword_1000A3CA8);
    uint64_t v26 = (void *)((char *)a2 + *(int *)(v7 + 36));
    uint64_t v27 = (uint64_t *)((char *)a1 + *(int *)(v7 + 36));
    uint64_t v25 = *v27;
    swift_retain();
    void *v26 = v25;
    uint64_t v8 = sub_100009334(&qword_1000A3CB0);
    int v28 = (char *)v26 + *(int *)(v8 + 28);
    uint64_t v29 = (char *)v27 + *(int *)(v8 + 28);
    uint64_t v30 = sub_100089990();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v31 + 48))(v29, 1))
    {
      uint64_t v9 = sub_100009334(&qword_1000A3CE0);
      memcpy(v28, v29, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a2;
}

unint64_t sub_10006F1C0()
{
  uint64_t v2 = qword_1000A46E0;
  if (!qword_1000A46E0)
  {
    sub_1000096C0(&qword_1000A46D0);
    sub_100042D0C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A46E0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10006F260(uint64_t a1)
{
  sub_100009334(&qword_1000A46D8);
  if (!swift_getEnumCaseMultiPayload())
  {
    swift_release();
    uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v4 = v3 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v1 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v4);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
    swift_release();
    uint64_t v6 = v5 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v7 = sub_100089990();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return a1;
}

uint64_t *sub_10006F468@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CD64(*(void *)(v1 + 16), a1);
}

unint64_t sub_10006F470()
{
  uint64_t v2 = qword_1000A46F0;
  if (!qword_1000A46F0)
  {
    sub_1000096C0(&qword_1000A46E8);
    sub_10006E5D4();
    sub_100042AC8();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A46F0);
    return WitnessTable;
  }
  return v2;
}

uint64_t *sub_10006F514(uint64_t *a1)
{
  return a1;
}

unint64_t sub_10006F594(void *a1, void *a2, int *a3)
{
  int v45 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v45 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    swift_retain();
    *a1 = v40;
    return *a1 + ((v45 + 16) & ~(unint64_t)v45);
  }
  else
  {
    sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EC0();
      (*(void (**)(void *, void *))(*(void *)(v3 - 8) + 16))(a1, a2);
    }
    else
    {
      uint64_t v39 = *a2;
      swift_retain();
      *a1 = v39;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v4 = a3[5];
    uint64_t v32 = (void *)((char *)a1 + v4);
    uint64_t v34 = (void *)((char *)a2 + v4);
    *(void *)((char *)a1 + v4) = *(void *)((char *)a2 + v4);
    uint64_t v26 = *(void *)((char *)a2 + v4 + 8);
    swift_bridgeObjectRetain();
    v32[1] = v26;
    v32[2] = v34[2];
    uint64_t v27 = v34[3];
    swift_bridgeObjectRetain();
    v32[3] = v27;
    void v32[4] = v34[4];
    uint64_t v28 = v34[5];
    swift_bridgeObjectRetain();
    v32[5] = v28;
    v32[6] = v34[6];
    uint64_t v29 = v34[7];
    swift_bridgeObjectRetain();
    v32[7] = v29;
    long long v33 = (int *)type metadata accessor for Message();
    uint64_t v31 = (char *)v32 + v33[8];
    uint64_t v30 = (char *)v34 + v33[8];
    uint64_t v5 = sub_100089630();
    (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 16))(v31, v30);
    *((unsigned char *)v32 + v33[9]) = *((unsigned char *)v34 + v33[9]);
    *((unsigned char *)v32 + v33[10]) = *((unsigned char *)v34 + v33[10]);
    *((unsigned char *)v32 + v33[11]) = *((unsigned char *)v34 + v33[11]);
    *((unsigned char *)v32 + v33[12]) = *((unsigned char *)v34 + v33[12]);
    uint64_t v6 = (char *)v32 + v33[13];
    uint64_t v7 = (char *)v34 + v33[13];
    *(void *)uint64_t v6 = *(void *)v7;
    v6[8] = v7[8];
    *((unsigned char *)v32 + v33[14]) = *((unsigned char *)v34 + v33[14]);
    uint64_t v35 = (char *)v32 + v33[15];
    char v36 = (char *)v34 + v33[15];
    uint64_t v37 = sub_1000895A0();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v38 + 48))(v36, 1))
    {
      uint64_t v8 = sub_100009334(&qword_1000A3B40);
      memcpy(v35, v36, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v17 = (char *)a1 + a3[8];
    uint64_t v16 = (char *)a2 + a3[8];
    uint64_t v9 = sub_100009334(&qword_1000A3FF8);
    (*(void (**)(char *, char *))(*(void *)(v9 - 8) + 16))(v17, v16);
    uint64_t v10 = a3[9];
    uint64_t v18 = (char *)a1 + v10;
    *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
    uint64_t v19 = *(void *)((char *)a2 + v10 + 8);
    swift_retain();
    *((void *)v18 + 1) = v19;
    uint64_t v11 = a3[10];
    uint64_t v20 = (char *)a1 + v11;
    *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
    uint64_t v21 = *(void *)((char *)a2 + v11 + 8);
    swift_retain();
    *((void *)v20 + 1) = v21;
    uint64_t v12 = a3[11];
    int v22 = (char *)a1 + v12;
    *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
    uint64_t v23 = *(void *)((char *)a2 + v12 + 8);
    swift_retain();
    *((void *)v22 + 1) = v23;
    uint64_t v24 = (void *)((char *)a1 + a3[12]);
    uint64_t v25 = (void *)((char *)a2 + a3[12]);
    sub_100009334(&qword_1000A4000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_100089940();
      (*(void (**)(void *, uint64_t *))(*(void *)(v13 - 8) + 16))(v24, v25);
    }
    else
    {
      uint64_t v15 = *v25;
      swift_retain();
      *uint64_t v24 = v15;
    }
    swift_storeEnumTagMultiPayload();
    return (unint64_t)a1;
  }
}

uint64_t sub_10006FC24(uint64_t a1, int *a2)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100089EC0();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for Message();
  uint64_t v9 = v11 + *(int *)(v10 + 32);
  uint64_t v3 = sub_100089630();
  (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v9);
  uint64_t v12 = v11 + *(int *)(v10 + 60);
  uint64_t v13 = sub_1000895A0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(v12, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v7 = a1 + a2[8];
  uint64_t v4 = sub_100009334(&qword_1000A3FF8);
  (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v7);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = a1 + a2[12];
  sub_100009334(&qword_1000A4000);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return swift_release();
  }
  uint64_t v6 = sub_100089940();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v6 - 8) + 8))(v8);
}

void *sub_10006FF18(void *a1, void *a2, int *a3)
{
  sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_100089EC0();
    (*(void (**)(void *, void *))(*(void *)(v3 - 8) + 16))(a1, a2);
  }
  else
  {
    uint64_t v39 = *a2;
    swift_retain();
    *a1 = v39;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = a3[5];
  uint64_t v32 = (void *)((char *)a1 + v4);
  uint64_t v34 = (void *)((char *)a2 + v4);
  *(void *)((char *)a1 + v4) = *(void *)((char *)a2 + v4);
  uint64_t v26 = *(void *)((char *)a2 + v4 + 8);
  swift_bridgeObjectRetain();
  v32[1] = v26;
  v32[2] = v34[2];
  uint64_t v27 = v34[3];
  swift_bridgeObjectRetain();
  v32[3] = v27;
  void v32[4] = v34[4];
  uint64_t v28 = v34[5];
  swift_bridgeObjectRetain();
  v32[5] = v28;
  v32[6] = v34[6];
  uint64_t v29 = v34[7];
  swift_bridgeObjectRetain();
  v32[7] = v29;
  long long v33 = (int *)type metadata accessor for Message();
  uint64_t v31 = (char *)v32 + v33[8];
  uint64_t v30 = (char *)v34 + v33[8];
  uint64_t v5 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 16))(v31, v30);
  *((unsigned char *)v32 + v33[9]) = *((unsigned char *)v34 + v33[9]);
  *((unsigned char *)v32 + v33[10]) = *((unsigned char *)v34 + v33[10]);
  *((unsigned char *)v32 + v33[11]) = *((unsigned char *)v34 + v33[11]);
  *((unsigned char *)v32 + v33[12]) = *((unsigned char *)v34 + v33[12]);
  uint64_t v6 = (char *)v32 + v33[13];
  uint64_t v7 = (char *)v34 + v33[13];
  *(void *)uint64_t v6 = *(void *)v7;
  v6[8] = v7[8];
  *((unsigned char *)v32 + v33[14]) = *((unsigned char *)v34 + v33[14]);
  uint64_t v35 = (char *)v32 + v33[15];
  char v36 = (char *)v34 + v33[15];
  uint64_t v37 = sub_1000895A0();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v38 + 48))(v36, 1))
  {
    uint64_t v8 = sub_100009334(&qword_1000A3B40);
    memcpy(v35, v36, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v17 = (char *)a1 + a3[8];
  uint64_t v16 = (char *)a2 + a3[8];
  uint64_t v9 = sub_100009334(&qword_1000A3FF8);
  (*(void (**)(char *, char *))(*(void *)(v9 - 8) + 16))(v17, v16);
  uint64_t v10 = a3[9];
  uint64_t v18 = (char *)a1 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v19 = *(void *)((char *)a2 + v10 + 8);
  swift_retain();
  *((void *)v18 + 1) = v19;
  uint64_t v11 = a3[10];
  uint64_t v20 = (char *)a1 + v11;
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v21 = *(void *)((char *)a2 + v11 + 8);
  swift_retain();
  *((void *)v20 + 1) = v21;
  uint64_t v12 = a3[11];
  int v22 = (char *)a1 + v12;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v23 = *(void *)((char *)a2 + v12 + 8);
  swift_retain();
  *((void *)v22 + 1) = v23;
  uint64_t v24 = (void *)((char *)a1 + a3[12]);
  uint64_t v25 = (void *)((char *)a2 + a3[12]);
  sub_100009334(&qword_1000A4000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_100089940();
    (*(void (**)(void *, uint64_t *))(*(void *)(v13 - 8) + 16))(v24, v25);
  }
  else
  {
    uint64_t v15 = *v25;
    swift_retain();
    *uint64_t v24 = v15;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100070520(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100038BD4((uint64_t)a1);
    sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EC0();
      (*(void (**)(void *, void *))(*(void *)(v3 - 8) + 16))(a1, a2);
    }
    else
    {
      uint64_t v41 = *a2;
      swift_retain();
      *a1 = v41;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v4 = a3[5];
  long long v33 = (void *)((char *)a1 + v4);
  uint64_t v35 = (void *)((char *)a2 + v4);
  *(void *)((char *)a1 + v4) = *(void *)((char *)a2 + v4);
  uint64_t v27 = *(void *)((char *)a2 + v4 + 8);
  swift_bridgeObjectRetain();
  v33[1] = v27;
  swift_bridgeObjectRelease();
  v33[2] = v35[2];
  uint64_t v28 = v35[3];
  swift_bridgeObjectRetain();
  v33[3] = v28;
  swift_bridgeObjectRelease();
  void v33[4] = v35[4];
  uint64_t v29 = v35[5];
  swift_bridgeObjectRetain();
  v33[5] = v29;
  swift_bridgeObjectRelease();
  v33[6] = v35[6];
  uint64_t v30 = v35[7];
  swift_bridgeObjectRetain();
  v33[7] = v30;
  swift_bridgeObjectRelease();
  uint64_t v34 = (int *)type metadata accessor for Message();
  uint64_t v32 = (char *)v33 + v34[8];
  uint64_t v31 = (char *)v35 + v34[8];
  uint64_t v5 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 24))(v32, v31);
  *((unsigned char *)v33 + v34[9]) = *((unsigned char *)v35 + v34[9]) & 1;
  *((unsigned char *)v33 + v34[10]) = *((unsigned char *)v35 + v34[10]) & 1;
  *((unsigned char *)v33 + v34[11]) = *((unsigned char *)v35 + v34[11]) & 1;
  *((unsigned char *)v33 + v34[12]) = *((unsigned char *)v35 + v34[12]) & 1;
  uint64_t v6 = (char *)v33 + v34[13];
  uint64_t v7 = (char *)v35 + v34[13];
  *(void *)uint64_t v6 = *(void *)v7;
  v6[8] = v7[8];
  *((unsigned char *)v33 + v34[14]) = *((unsigned char *)v35 + v34[14]) & 1;
  uint64_t v37 = (char *)v33 + v34[15];
  char v36 = (char *)v35 + v34[15];
  uint64_t v38 = sub_1000895A0();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  if (((unsigned int (*)(char *, uint64_t))v40)(v37, 1))
  {
    if (v40(v36, 1, v38))
    {
      uint64_t v9 = sub_100009334(&qword_1000A3B40);
      memcpy(v37, v36, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v37, v36, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v37, 0, 1, v38);
    }
  }
  else if (v40(v36, 1, v38))
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
    uint64_t v8 = sub_100009334(&qword_1000A3B40);
    memcpy(v37, v36, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v37, v36, v38);
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]) & 1;
  uint64_t v18 = (char *)a1 + a3[8];
  uint64_t v17 = (char *)a2 + a3[8];
  uint64_t v10 = sub_100009334(&qword_1000A3FF8);
  (*(void (**)(char *, char *))(*(void *)(v10 - 8) + 24))(v18, v17);
  uint64_t v19 = (void *)((char *)a1 + a3[9]);
  uint64_t v11 = (void *)((char *)a2 + a3[9]);
  void *v19 = *v11;
  uint64_t v20 = v11[1];
  swift_retain();
  v19[1] = v20;
  swift_release();
  uint64_t v21 = (void *)((char *)a1 + a3[10]);
  uint64_t v12 = (void *)((char *)a2 + a3[10]);
  *uint64_t v21 = *v12;
  uint64_t v22 = v12[1];
  swift_retain();
  v21[1] = v22;
  swift_release();
  uint64_t v23 = (void *)((char *)a1 + a3[11]);
  uint64_t v13 = (void *)((char *)a2 + a3[11]);
  void *v23 = *v13;
  uint64_t v24 = v13[1];
  swift_retain();
  v23[1] = v24;
  swift_release();
  uint64_t v25 = (void *)((char *)a1 + a3[12]);
  uint64_t v26 = (void *)((char *)a2 + a3[12]);
  if (v25 != v26)
  {
    sub_10006D788((uint64_t)v25);
    sub_100009334(&qword_1000A4000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_100089940();
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v14 - 8) + 16))(v25, v26);
    }
    else
    {
      uint64_t v16 = *v26;
      swift_retain();
      uint64_t *v25 = v16;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100070CB8(char *a1, char *a2, int *a3)
{
  uint64_t v28 = sub_100009334(&qword_1000A3C58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_100089EC0();
    (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
  }
  uint64_t v18 = &a1[a3[5]];
  uint64_t v20 = &a2[a3[5]];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
  *((_OWORD *)v18 + 1) = *((_OWORD *)v20 + 1);
  *((_OWORD *)v18 + 2) = *((_OWORD *)v20 + 2);
  *((_OWORD *)v18 + 3) = *((_OWORD *)v20 + 3);
  uint64_t v19 = (int *)type metadata accessor for Message();
  uint64_t v17 = &v18[v19[8]];
  uint64_t v16 = &v20[v19[8]];
  uint64_t v4 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(v17, v16);
  v18[v19[9]] = v20[v19[9]];
  v18[v19[10]] = v20[v19[10]];
  v18[v19[11]] = v20[v19[11]];
  v18[v19[12]] = v20[v19[12]];
  uint64_t v5 = &v18[v19[13]];
  uint64_t v6 = &v20[v19[13]];
  *(void *)uint64_t v5 = *(void *)v6;
  v5[8] = v6[8];
  v18[v19[14]] = v20[v19[14]];
  uint64_t v21 = &v18[v19[15]];
  uint64_t v22 = &v20[v19[15]];
  uint64_t v23 = sub_1000895A0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v24 + 48))(v22, 1))
  {
    uint64_t v7 = sub_100009334(&qword_1000A3B40);
    memcpy(v21, v22, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v12 = &a1[a3[8]];
  uint64_t v11 = &a2[a3[8]];
  uint64_t v8 = sub_100009334(&qword_1000A3FF8);
  (*(void (**)(char *, char *))(*(void *)(v8 - 8) + 32))(v12, v11);
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  __dst = &a1[a3[12]];
  __src = &a2[a3[12]];
  uint64_t v15 = sub_100009334(&qword_1000A4000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_100089940();
    (*(void (**)(char *, char *))(*(void *)(v9 - 8) + 32))(__dst, __src);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(__dst, __src, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

char *sub_1000711BC(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100038BD4((uint64_t)a1);
    uint64_t v34 = sub_100009334(&qword_1000A3C58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_100089EC0();
      (*(void (**)(char *, char *))(*(void *)(v3 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v34 - 8) + 64));
    }
  }
  uint64_t v4 = a3[5];
  uint64_t v26 = &a1[v4];
  uint64_t v28 = &a2[v4];
  *(void *)uint64_t v26 = *(void *)&a2[v4];
  *((void *)v26 + 1) = *(void *)&a2[v4 + 8];
  swift_bridgeObjectRelease();
  *((void *)v26 + 2) = *((void *)v28 + 2);
  *((void *)v26 + 3) = *((void *)v28 + 3);
  swift_bridgeObjectRelease();
  *((void *)v26 + 4) = *((void *)v28 + 4);
  *((void *)v26 + 5) = *((void *)v28 + 5);
  swift_bridgeObjectRelease();
  *((void *)v26 + 6) = *((void *)v28 + 6);
  *((void *)v26 + 7) = *((void *)v28 + 7);
  swift_bridgeObjectRelease();
  uint64_t v27 = (int *)type metadata accessor for Message();
  uint64_t v25 = &v26[v27[8]];
  uint64_t v24 = &v28[v27[8]];
  uint64_t v5 = sub_100089630();
  (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 40))(v25, v24);
  v26[v27[9]] = v28[v27[9]] & 1;
  v26[v27[10]] = v28[v27[10]] & 1;
  v26[v27[11]] = v28[v27[11]] & 1;
  v26[v27[12]] = v28[v27[12]] & 1;
  uint64_t v6 = &v26[v27[13]];
  uint64_t v7 = &v28[v27[13]];
  *(void *)uint64_t v6 = *(void *)v7;
  v6[8] = v7[8];
  v26[v27[14]] = v28[v27[14]] & 1;
  uint64_t v30 = &v26[v27[15]];
  __src = &v28[v27[15]];
  uint64_t v31 = sub_1000895A0();
  uint64_t v32 = *(void *)(v31 - 8);
  long long v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (((unsigned int (*)(char *, uint64_t))v33)(v30, 1))
  {
    if (v33(__src, 1, v31))
    {
      uint64_t v9 = sub_100009334(&qword_1000A3B40);
      memcpy(v30, __src, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v30, __src, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v31);
    }
  }
  else if (v33(__src, 1, v31))
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
    uint64_t v8 = sub_100009334(&qword_1000A3B40);
    memcpy(v30, __src, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v30, __src, v31);
  }
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  a1[a3[7]] = a2[a3[7]] & 1;
  uint64_t v21 = &a1[a3[8]];
  uint64_t v20 = &a2[a3[8]];
  uint64_t v10 = sub_100009334(&qword_1000A3FF8);
  (*(void (**)(char *, char *))(*(void *)(v10 - 8) + 40))(v21, v20);
  uint64_t v11 = &a1[a3[9]];
  uint64_t v12 = &a2[a3[9]];
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_release();
  uint64_t v13 = &a1[a3[10]];
  uint64_t v14 = &a2[a3[10]];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  uint64_t v15 = &a1[a3[11]];
  uint64_t v16 = &a2[a3[11]];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  __dst = &a1[a3[12]];
  uint64_t v23 = &a2[a3[12]];
  if (__dst != v23)
  {
    sub_10006D788((uint64_t)__dst);
    uint64_t v19 = sub_100009334(&qword_1000A4000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_100089940();
      (*(void (**)(char *, char *))(*(void *)(v17 - 8) + 32))(__dst, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(__dst, v23, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000718B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1000718E0(uint64_t a1, unsigned int a2, int *a3)
{
  uint64_t v13 = sub_100009334(&qword_1000A3C50);
  if (a2 == *(_DWORD *)(*(void *)(v13 - 8) + 84))
  {
    return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 48))(a1, a2, v13);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Message();
    if (a2 == *(_DWORD *)(*(void *)(v8 - 8) + 84))
    {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 48))(a1 + a3[5], a2, v8);
    }
    else
    {
      uint64_t v7 = sub_100009334(&qword_1000A3FF8);
      if (a2 == *(_DWORD *)(*(void *)(v7 - 8) + 84))
      {
        return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 48))(a1 + a3[8], a2, v7);
      }
      else if (a2 == 2147483646)
      {
        int v6 = -1;
        if (*(void *)(a1 + a3[9] + 8) < (unint64_t)&_mh_execute_header) {
          int v6 = *(void *)(a1 + a3[9] + 8);
        }
        int v3 = v6 - 1;
        if (v6 - 1 < 0) {
          int v3 = -1;
        }
        return (v3 + 1);
      }
      else
      {
        uint64_t v5 = sub_100009334(&qword_1000A4608);
        if (a2 == *(_DWORD *)(*(void *)(v5 - 8) + 84)) {
          return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 48))(a1 + a3[12], a2, v5);
        }
        else {
          __break(1u);
        }
      }
    }
  }
  return v9;
}

uint64_t sub_100071C00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_100071C28(uint64_t a1, unsigned int a2, int a3, int *a4)
{
  uint64_t v10 = sub_100009334(&qword_1000A3C50);
  if (a3 == *(_DWORD *)(*(void *)(v10 - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(v10 - 8) + 56))(a1, a2, a2, v10);
  }
  uint64_t v5 = type metadata accessor for Message();
  if (a3 == *(_DWORD *)(*(void *)(v5 - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(v5 - 8) + 56))(a1 + a4[5], a2, a2, v5);
  }
  uint64_t result = sub_100009334(&qword_1000A3FF8);
  if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(a1 + a4[8], a2, a2, result);
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[9] + 8) = a2;
  }
  else
  {
    uint64_t result = sub_100009334(&qword_1000A4608);
    if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
      return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(a1 + a4[12], a2, a2, result);
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100071F08()
{
  uint64_t v5 = sub_1000422FC();
  if (v0 <= 0x3F)
  {
    uint64_t v5 = type metadata accessor for Message();
    if (v1 <= 0x3F)
    {
      uint64_t v5 = sub_100072138();
      if (v2 <= 0x3F)
      {
        uint64_t v5 = sub_1000721E0();
        if (v3 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return v5;
}

uint64_t sub_100072138()
{
  uint64_t v4 = qword_1000A4760;
  if (!qword_1000A4760)
  {
    sub_10006D5C4();
    unint64_t v3 = sub_100089760();
    uint64_t v4 = v3;
    if (!v0)
    {
      unint64_t v1 = v3;
      atomic_store(v3, (unint64_t *)&qword_1000A4760);
      return v1;
    }
  }
  return v4;
}

uint64_t sub_1000721E0()
{
  uint64_t v4 = qword_1000A4768;
  if (!qword_1000A4768)
  {
    sub_100089940();
    unint64_t v3 = sub_100089720();
    uint64_t v4 = v3;
    if (!v0)
    {
      unint64_t v1 = v3;
      atomic_store(v3, (unint64_t *)&qword_1000A4768);
      return v1;
    }
  }
  return v4;
}

unint64_t sub_100072288()
{
  return sub_10006E270();
}

unint64_t sub_1000722A0()
{
  return sub_100042D0C();
}

unint64_t sub_1000722B8()
{
  return sub_10006F1C0();
}

uint64_t sub_1000722D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100072338()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000723A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100072408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007243C(uint64_t a1, uint64_t a2, char a3)
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000724B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000661A0(*(void **)(v1 + 16), a1);
}

unint64_t sub_1000724B8()
{
  uint64_t v2 = qword_1000A47C0;
  if (!qword_1000A47C0)
  {
    sub_1000096C0(&qword_1000A47B8);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A47C0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10007253C(uint64_t a1)
{
  uint64_t v67 = *(int *)(sub_100009334(&qword_1000A47C8) + 44);
  uint64_t v68 = *(int *)(sub_100009334(&qword_1000A47D0) + 44);
  uint64_t v69 = *(int *)(sub_100009334(&qword_1000A47D8) + 44);
  uint64_t v1 = sub_100009334(&qword_1000A47E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1 + v67 + v68 + v69, 1))
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v55 = a1 + v67 + v68 + v69;
      swift_release();
      uint64_t v53 = v55 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v54 = v53 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v3 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v54);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v56 = v55 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v57 = v56 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v58 = sub_100089990();
      uint64_t v59 = *(void *)(v58 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v59 + 48))(v57, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
      }
    }
    else
    {
      uint64_t v62 = a1 + v67 + v68 + v69;
      swift_release();
      uint64_t v60 = v62 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v61 = v60 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v2 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v61);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v63 = v62 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v64 = v63 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v65 = sub_100089990();
      uint64_t v66 = *(void *)(v65 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v66 + 48))(v64, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
      }
    }
  }
  uint64_t v48 = a1 + v67 + v68;
  uint64_t v45 = v48 + v69 + *(int *)(sub_100009334(&qword_1000A47F0) + 48);
  uint64_t v46 = sub_100009334(&qword_1000A47F8);
  unint64_t v47 = *(void (**)(uint64_t))(*(void *)(v46 - 8) + 8);
  v47(v45);
  uint64_t v49 = v48 + *(int *)(sub_100009334(&qword_1000A4800) + 64);
  uint64_t v4 = sub_100009334(&qword_1000A4808);
  (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v49);
  sub_100009334(&qword_1000A4810);
  swift_release();
  swift_release();
  uint64_t v50 = sub_100009334(&qword_1000A4818);
  uint64_t v51 = a1 + v67 + *(int *)(v50 + 48);
  uint64_t v52 = v51 + *(int *)(sub_100009334(&qword_1000A4820) + 44);
  uint64_t v5 = sub_100009334(&qword_1000A4828);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v52, 1))
  {
    swift_release();
    uint64_t v39 = v52 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v40 = v39 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v6 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v6 - 8) + 8))(v40);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v41 = v52 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
    swift_release();
    uint64_t v42 = v41 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v43 = sub_100089990();
    uint64_t v44 = *(void *)(v43 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v44 + 48))(v42, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    }
  }
  uint64_t v35 = (int *)sub_100009334(&qword_1000A4830);
  ((void (*)(uint64_t, uint64_t))v47)(v52 + v35[12], v46);
  uint64_t v36 = v52 + v35[20];
  uint64_t v37 = sub_100009334(&qword_1000A3CA8);
  uint64_t v38 = *(unsigned int (**)(void))(*(void *)(v37 - 8) + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t))v38)(v36, 1))
  {
    swift_release();
    uint64_t v29 = v36 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v30 = v29 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v7 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v7 - 8) + 8))(v30);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v31 = v36 + *(int *)(v37 + 36);
    swift_release();
    uint64_t v32 = v31 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v33 = sub_100089990();
    uint64_t v34 = *(void *)(v33 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v34 + 48))(v32, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
  }
  uint64_t v28 = v52 + v35[24];
  if (!v38())
  {
    swift_release();
    uint64_t v22 = v28 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v23 = v22 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v8 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v8 - 8) + 8))(v23);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v24 = v28 + *(int *)(v37 + 36);
    swift_release();
    uint64_t v25 = v24 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v26 = sub_100089990();
    uint64_t v27 = *(void *)(v26 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v27 + 48))(v25, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
  }
  uint64_t v21 = v52 + v35[28];
  uint64_t v9 = sub_100009334(&qword_1000A46D0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v21, 1))
  {
    sub_100009334(&qword_1000A46D8);
    if (!swift_getEnumCaseMultiPayload())
    {
      swift_release();
      uint64_t v15 = v21 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v16 = v15 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v10 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v10 - 8) + 8))(v16);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v17 = v21 + *(int *)(v37 + 36);
      swift_release();
      uint64_t v18 = v17 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v19 = sub_100089990();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v20 + 48))(v18, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
    }
  }
  sub_100009334(&qword_1000A4838);
  swift_release();
  swift_release();
  uint64_t v13 = a1 + v67 + *(int *)(v50 + 64);
  uint64_t v14 = sub_100009334(&qword_1000A4840);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1))
  {
    uint64_t v11 = sub_100009334(&qword_1000A4848);
    (*(void (**)(uint64_t))(*(void *)(v11 - 8) + 8))(v13);
    swift_release();
    swift_release();
  }
  return a1;
}

uint64_t sub_1000734EC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v251 = *(int *)(sub_100009334(&qword_1000A47C8) + 44);
  uint64_t v252 = a2 + v251;
  *(_OWORD *)uint64_t v252 = *(_OWORD *)(a1 + v251);
  *(unsigned char *)(v252 + 16) = *(unsigned char *)(a1 + v251 + 16);
  uint64_t v253 = *(int *)(sub_100009334(&qword_1000A47D0) + 44);
  uint64_t v255 = a1 + v251 + v253;
  uint64_t v2 = a2 + v251 + v253;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)v255;
  *(unsigned char *)(v2 + 16) = *(unsigned char *)(v255 + 16);
  uint64_t v254 = *(int *)(sub_100009334(&qword_1000A47D8) + 44);
  uint64_t v256 = sub_100009334(&qword_1000A47E0);
  uint64_t v257 = *(void *)(v256 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v257 + 48))(v255 + v254, 1))
  {
    uint64_t v20 = sub_100009334(&qword_1000A4850);
    memcpy((void *)(a2 + v251 + v253 + v254), (const void *)(a1 + v251 + v253 + v254), *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v218 = (uint64_t *)(a1 + v251 + v253 + v254);
      uint64_t v203 = *v218;
      swift_retain();
      uint64_t v217 = (void *)(a2 + v251 + v253 + v254);
      void *v217 = v203;
      uint64_t v11 = sub_100009334(&qword_1000A3C88);
      uint64_t v205 = (void *)((char *)v217 + *(int *)(v11 + 36));
      unint64_t v206 = (uint64_t *)((char *)v218 + *(int *)(v11 + 36));
      uint64_t v204 = *v206;
      swift_retain();
      *uint64_t v205 = v204;
      uint64_t v12 = sub_100009334(&qword_1000A3C90);
      unint64_t v208 = (char *)v205 + *(int *)(v12 + 28);
      uint64_t v207 = (char *)v206 + *(int *)(v12 + 28);
      uint64_t v13 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v13 - 8) + 16))(v208, v207);
      uint64_t v14 = sub_100009334(&qword_1000A3C98);
      uint64_t v211 = (void *)((char *)v217 + *(int *)(v14 + 36));
      unint64_t v210 = (uint64_t *)((char *)v218 + *(int *)(v14 + 36));
      uint64_t v209 = *v210;
      swift_retain();
      void *v211 = v209;
      uint64_t v212 = v210[1];
      swift_retain();
      v211[1] = v212;
      uint64_t v15 = sub_100009334(&qword_1000A3CA0);
      v215 = (void *)((char *)v217 + *(int *)(v15 + 36));
      v214 = (uint64_t *)((char *)v218 + *(int *)(v15 + 36));
      uint64_t v213 = *v214;
      swift_retain();
      void *v215 = v213;
      uint64_t v216 = v214[1];
      swift_retain();
      v215[1] = v216;
      uint64_t v16 = sub_100009334(&qword_1000A3CA8);
      v220 = (void *)((char *)v217 + *(int *)(v16 + 36));
      v221 = (uint64_t *)((char *)v218 + *(int *)(v16 + 36));
      uint64_t v219 = *v221;
      swift_retain();
      void *v220 = v219;
      uint64_t v17 = sub_100009334(&qword_1000A3CB0);
      __dst = (char *)v220 + *(int *)(v17 + 28);
      __src = (char *)v221 + *(int *)(v17 + 28);
      uint64_t v224 = sub_100089990();
      uint64_t v225 = *(void *)(v224 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v225 + 48))(__src, 1))
      {
        uint64_t v18 = sub_100009334(&qword_1000A3CE0);
        memcpy(__dst, __src, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v225 + 16))(__dst, __src, v224);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v225 + 56))(__dst, 0, 1, v224);
      }
    }
    else
    {
      uint64_t v241 = (uint64_t *)(a1 + v251 + v253 + v254);
      uint64_t v226 = *v241;
      swift_retain();
      unint64_t v240 = (void *)(a2 + v251 + v253 + v254);
      *unint64_t v240 = v226;
      uint64_t v3 = sub_100009334(&qword_1000A3C88);
      uint64_t v228 = (void *)((char *)v240 + *(int *)(v3 + 36));
      uint64_t v229 = (uint64_t *)((char *)v241 + *(int *)(v3 + 36));
      uint64_t v227 = *v229;
      swift_retain();
      *uint64_t v228 = v227;
      uint64_t v4 = sub_100009334(&qword_1000A3C90);
      v231 = (char *)v228 + *(int *)(v4 + 28);
      v230 = (char *)v229 + *(int *)(v4 + 28);
      uint64_t v5 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 16))(v231, v230);
      uint64_t v6 = sub_100009334(&qword_1000A3C98);
      uint64_t v234 = (void *)((char *)v240 + *(int *)(v6 + 36));
      uint64_t v233 = (uint64_t *)((char *)v241 + *(int *)(v6 + 36));
      uint64_t v232 = *v233;
      swift_retain();
      *uint64_t v234 = v232;
      uint64_t v235 = v233[1];
      swift_retain();
      v234[1] = v235;
      uint64_t v7 = sub_100009334(&qword_1000A3CA0);
      uint64_t v238 = (void *)((char *)v240 + *(int *)(v7 + 36));
      uint64_t v237 = (uint64_t *)((char *)v241 + *(int *)(v7 + 36));
      uint64_t v236 = *v237;
      swift_retain();
      *uint64_t v238 = v236;
      uint64_t v239 = v237[1];
      swift_retain();
      v238[1] = v239;
      uint64_t v8 = sub_100009334(&qword_1000A3CA8);
      uint64_t v243 = (void *)((char *)v240 + *(int *)(v8 + 36));
      uint64_t v244 = (uint64_t *)((char *)v241 + *(int *)(v8 + 36));
      uint64_t v242 = *v244;
      swift_retain();
      void *v243 = v242;
      uint64_t v9 = sub_100009334(&qword_1000A3CB0);
      uint64_t v245 = (char *)v243 + *(int *)(v9 + 28);
      uint64_t v246 = (char *)v244 + *(int *)(v9 + 28);
      uint64_t v247 = sub_100089990();
      uint64_t v248 = *(void *)(v247 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v248 + 48))(v246, 1))
      {
        uint64_t v10 = sub_100009334(&qword_1000A3CE0);
        memcpy(v245, v246, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v248 + 16))(v245, v246, v247);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v248 + 56))(v245, 0, 1, v247);
      }
    }
    uint64_t v19 = sub_100009334(&qword_1000A4828);
    memcpy((void *)(a2 + v251 + v253 + v254 + *(int *)(v19 + 36)), (const void *)(a1 + v251 + v253 + v254 + *(int *)(v19 + 36)), 0x30uLL);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v257 + 56))(a2 + v251 + v253 + v254, 0, 1, v256);
  }
  uint64_t v21 = sub_100009334(&qword_1000A47F0);
  uint64_t v186 = a2 + v251 + v253;
  uint64_t v183 = v186 + v254 + *(int *)(v21 + 48);
  uint64_t v187 = a1 + v251 + v253;
  uint64_t v182 = v187 + v254 + *(int *)(v21 + 48);
  uint64_t v184 = sub_100009334(&qword_1000A47F8);
  uint64_t v185 = *(void (**)(uint64_t, uint64_t))(*(void *)(v184 - 8) + 16);
  v185(v183, v182);
  uint64_t v22 = sub_100009334(&qword_1000A4800);
  uint64_t v23 = v186 + *(int *)(v22 + 48);
  uint64_t v24 = v187 + *(int *)(v22 + 48);
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  uint64_t v189 = v186 + *(int *)(v22 + 64);
  uint64_t v188 = v187 + *(int *)(v22 + 64);
  uint64_t v25 = sub_100009334(&qword_1000A4808);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v189, v188);
  uint64_t v26 = sub_100009334(&qword_1000A4858);
  *(void *)(v189 + *(int *)(v26 + 36)) = *(void *)(v188 + *(int *)(v26 + 36));
  uint64_t v27 = sub_100009334(&qword_1000A4810);
  uint64_t v195 = a2 + v251 + *(int *)(v27 + 36);
  uint64_t v194 = (uint64_t *)(a1 + v251 + *(int *)(v27 + 36));
  uint64_t v190 = *v194;
  uint64_t v191 = v194[1];
  swift_retain();
  *(void *)uint64_t v195 = v190;
  *(void *)(v195 + 8) = v191;
  uint64_t v192 = v194[2];
  uint64_t v193 = v194[3];
  swift_retain();
  *(void *)(v195 + 16) = v192;
  *(void *)(v195 + 24) = v193;
  *(_OWORD *)(v195 + 32) = *((_OWORD *)v194 + 2);
  uint64_t v196 = sub_100009334(&qword_1000A4818);
  uint64_t v197 = a2 + v251 + *(int *)(v196 + 48);
  uint64_t v198 = a1 + v251 + *(int *)(v196 + 48);
  *(_OWORD *)uint64_t v197 = *(_OWORD *)v198;
  *(unsigned char *)(v197 + 16) = *(unsigned char *)(v198 + 16);
  uint64_t v28 = sub_100009334(&qword_1000A4820);
  unint64_t v199 = (void *)(v197 + *(int *)(v28 + 44));
  unint64_t v200 = (uint64_t *)(v198 + *(int *)(v28 + 44));
  uint64_t v201 = sub_100009334(&qword_1000A4828);
  uint64_t v202 = *(void *)(v201 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v202 + 48))(v200, 1))
  {
    uint64_t v37 = sub_100009334(&qword_1000A4860);
    memcpy(v199, v200, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    uint64_t v161 = *v200;
    swift_retain();
    *unint64_t v199 = v161;
    uint64_t v29 = sub_100009334(&qword_1000A3C88);
    id v163 = (void *)((char *)v199 + *(int *)(v29 + 36));
    uint64_t v164 = (uint64_t *)((char *)v200 + *(int *)(v29 + 36));
    uint64_t v162 = *v164;
    swift_retain();
    void *v163 = v162;
    uint64_t v30 = sub_100009334(&qword_1000A3C90);
    uint64_t v166 = (char *)v163 + *(int *)(v30 + 28);
    uint64_t v165 = (char *)v164 + *(int *)(v30 + 28);
    uint64_t v31 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v31 - 8) + 16))(v166, v165);
    uint64_t v32 = sub_100009334(&qword_1000A3C98);
    uint32_t v169 = (void *)((char *)v199 + *(int *)(v32 + 36));
    uint64_t v168 = (uint64_t *)((char *)v200 + *(int *)(v32 + 36));
    uint64_t v167 = *v168;
    swift_retain();
    void *v169 = v167;
    uint64_t v170 = v168[1];
    swift_retain();
    v169[1] = v170;
    uint64_t v33 = sub_100009334(&qword_1000A3CA0);
    unint64_t v173 = (void *)((char *)v199 + *(int *)(v33 + 36));
    int v172 = (uint64_t *)((char *)v200 + *(int *)(v33 + 36));
    uint64_t v171 = *v172;
    swift_retain();
    *unint64_t v173 = v171;
    uint64_t v174 = v172[1];
    swift_retain();
    v173[1] = v174;
    uint64_t v34 = sub_100009334(&qword_1000A3CA8);
    uint64_t v176 = (void *)((char *)v199 + *(int *)(v34 + 36));
    uint64_t v177 = (uint64_t *)((char *)v200 + *(int *)(v34 + 36));
    uint64_t v175 = *v177;
    swift_retain();
    *uint64_t v176 = v175;
    uint64_t v35 = sub_100009334(&qword_1000A3CB0);
    uint64_t v178 = (char *)v176 + *(int *)(v35 + 28);
    char v179 = (char *)v177 + *(int *)(v35 + 28);
    uint64_t v180 = sub_100089990();
    uint64_t v181 = *(void *)(v180 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v181 + 48))(v179, 1))
    {
      uint64_t v36 = sub_100009334(&qword_1000A3CE0);
      memcpy(v178, v179, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v178, v179, v180);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v181 + 56))(v178, 0, 1, v180);
    }
    memcpy((char *)v199 + *(int *)(v201 + 36), (char *)v200 + *(int *)(v201 + 36), 0x30uLL);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v202 + 56))(v199, 0, 1, v201);
  }
  uint64_t v155 = (int *)sub_100009334(&qword_1000A4830);
  ((void (*)(char *, char *, uint64_t))v185)((char *)v199 + v155[12], (char *)v200 + v155[12], v184);
  uint64_t v38 = (char *)v199 + v155[16];
  uint64_t v39 = (char *)v200 + v155[16];
  *(void *)uint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  uint64_t v156 = (void *)((char *)v199 + v155[20]);
  unint64_t v157 = (uint64_t *)((char *)v200 + v155[20]);
  uint64_t v158 = sub_100009334(&qword_1000A3CA8);
  uint64_t v159 = *(void *)(v158 - 8);
  uint64_t v160 = *(unsigned int (**)(void))(v159 + 48);
  if (((unsigned int (*)(uint64_t *, uint64_t))v160)(v157, 1))
  {
    uint64_t v47 = sub_100009334(&qword_1000A4868);
    memcpy(v156, v157, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    uint64_t v134 = *v157;
    swift_retain();
    *uint64_t v156 = v134;
    uint64_t v40 = sub_100009334(&qword_1000A3C88);
    uint64_t v136 = (void *)((char *)v156 + *(int *)(v40 + 36));
    unint64_t v137 = (uint64_t *)((char *)v157 + *(int *)(v40 + 36));
    uint64_t v135 = *v137;
    swift_retain();
    void *v136 = v135;
    uint64_t v41 = sub_100009334(&qword_1000A3C90);
    uint32_t v139 = (char *)v136 + *(int *)(v41 + 28);
    uint64_t v138 = (char *)v137 + *(int *)(v41 + 28);
    uint64_t v42 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v42 - 8) + 16))(v139, v138);
    uint64_t v43 = sub_100009334(&qword_1000A3C98);
    uint64_t v142 = (void *)((char *)v156 + *(int *)(v43 + 36));
    uint64_t v141 = (uint64_t *)((char *)v157 + *(int *)(v43 + 36));
    uint64_t v140 = *v141;
    swift_retain();
    *uint64_t v142 = v140;
    uint64_t v143 = v141[1];
    swift_retain();
    v142[1] = v143;
    uint64_t v44 = sub_100009334(&qword_1000A3CA0);
    uint64_t v146 = (void *)((char *)v156 + *(int *)(v44 + 36));
    uint64_t v145 = (uint64_t *)((char *)v157 + *(int *)(v44 + 36));
    uint64_t v144 = *v145;
    swift_retain();
    void *v146 = v144;
    uint64_t v147 = v145[1];
    swift_retain();
    v146[1] = v147;
    unint64_t v149 = (void *)((char *)v156 + *(int *)(v158 + 36));
    uint64_t v150 = (uint64_t *)((char *)v157 + *(int *)(v158 + 36));
    uint64_t v148 = *v150;
    swift_retain();
    *unint64_t v149 = v148;
    uint64_t v45 = sub_100009334(&qword_1000A3CB0);
    unint64_t v151 = (char *)v149 + *(int *)(v45 + 28);
    uint64_t v152 = (char *)v150 + *(int *)(v45 + 28);
    uint64_t v153 = sub_100089990();
    uint64_t v154 = *(void *)(v153 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v154 + 48))(v152, 1))
    {
      uint64_t v46 = sub_100009334(&qword_1000A3CE0);
      memcpy(v151, v152, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v151, v152, v153);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v151, 0, 1, v153);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v159 + 56))(v156, 0, 1, v158);
  }
  uint32_t v132 = (void *)((char *)v199 + v155[24]);
  uint64_t v133 = (uint64_t *)((char *)v200 + v155[24]);
  if (v160())
  {
    uint64_t v55 = sub_100009334(&qword_1000A4868);
    memcpy(v132, v133, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    uint64_t v111 = *v133;
    swift_retain();
    *uint32_t v132 = v111;
    uint64_t v48 = sub_100009334(&qword_1000A3C88);
    uint64_t v113 = (void *)((char *)v132 + *(int *)(v48 + 36));
    int v114 = (uint64_t *)((char *)v133 + *(int *)(v48 + 36));
    uint64_t v112 = *v114;
    swift_retain();
    *uint64_t v113 = v112;
    uint64_t v49 = sub_100009334(&qword_1000A3C90);
    uint64_t v116 = (char *)v113 + *(int *)(v49 + 28);
    uint64_t v115 = (char *)v114 + *(int *)(v49 + 28);
    uint64_t v50 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v50 - 8) + 16))(v116, v115);
    uint64_t v51 = sub_100009334(&qword_1000A3C98);
    unint64_t v119 = (void *)((char *)v132 + *(int *)(v51 + 36));
    unint64_t v118 = (uint64_t *)((char *)v133 + *(int *)(v51 + 36));
    uint64_t v117 = *v118;
    swift_retain();
    void *v119 = v117;
    uint64_t v120 = v118[1];
    swift_retain();
    v119[1] = v120;
    uint64_t v52 = sub_100009334(&qword_1000A3CA0);
    uint64_t v123 = (void *)((char *)v132 + *(int *)(v52 + 36));
    int v122 = (uint64_t *)((char *)v133 + *(int *)(v52 + 36));
    uint64_t v121 = *v122;
    swift_retain();
    void *v123 = v121;
    uint64_t v124 = v122[1];
    swift_retain();
    v123[1] = v124;
    uint64_t v126 = (void *)((char *)v132 + *(int *)(v158 + 36));
    char v127 = (uint64_t *)((char *)v133 + *(int *)(v158 + 36));
    uint64_t v125 = *v127;
    swift_retain();
    *uint64_t v126 = v125;
    uint64_t v53 = sub_100009334(&qword_1000A3CB0);
    uint64_t v128 = (char *)v126 + *(int *)(v53 + 28);
    char v129 = (char *)v127 + *(int *)(v53 + 28);
    uint64_t v130 = sub_100089990();
    uint64_t v131 = *(void *)(v130 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v131 + 48))(v129, 1))
    {
      uint64_t v54 = sub_100009334(&qword_1000A3CE0);
      memcpy(v128, v129, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v128, v129, v130);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v159 + 56))(v132, 0, 1, v158);
  }
  uint64_t v107 = (void *)((char *)v199 + v155[28]);
  unint64_t v108 = (uint64_t *)((char *)v200 + v155[28]);
  uint64_t v109 = sub_100009334(&qword_1000A46D0);
  uint64_t v110 = *(void *)(v109 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v110 + 48))(v108, 1))
  {
    uint64_t v63 = sub_100009334(&qword_1000A4870);
    memcpy(v107, v108, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    uint64_t v106 = sub_100009334(&qword_1000A46D8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v107, v108, *(void *)(*(void *)(v106 - 8) + 64));
    }
    else
    {
      uint64_t v85 = *v108;
      swift_retain();
      *uint64_t v107 = v85;
      uint64_t v56 = sub_100009334(&qword_1000A3C88);
      uint64_t v87 = (void *)((char *)v107 + *(int *)(v56 + 36));
      uint64_t v88 = (uint64_t *)((char *)v108 + *(int *)(v56 + 36));
      uint64_t v86 = *v88;
      swift_retain();
      void *v87 = v86;
      uint64_t v57 = sub_100009334(&qword_1000A3C90);
      uint64_t v90 = (char *)v87 + *(int *)(v57 + 28);
      char v89 = (char *)v88 + *(int *)(v57 + 28);
      uint64_t v58 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v58 - 8) + 16))(v90, v89);
      uint64_t v59 = sub_100009334(&qword_1000A3C98);
      uint64_t v93 = (void *)((char *)v107 + *(int *)(v59 + 36));
      uint64_t v92 = (uint64_t *)((char *)v108 + *(int *)(v59 + 36));
      uint64_t v91 = *v92;
      swift_retain();
      *uint64_t v93 = v91;
      uint64_t v94 = v92[1];
      swift_retain();
      v93[1] = v94;
      uint64_t v60 = sub_100009334(&qword_1000A3CA0);
      uint64_t v97 = (void *)((char *)v107 + *(int *)(v60 + 36));
      uint64_t v96 = (uint64_t *)((char *)v108 + *(int *)(v60 + 36));
      uint64_t v95 = *v96;
      swift_retain();
      *uint64_t v97 = v95;
      uint64_t v98 = v96[1];
      swift_retain();
      v97[1] = v98;
      long long v100 = (void *)((char *)v107 + *(int *)(v158 + 36));
      long long v101 = (uint64_t *)((char *)v108 + *(int *)(v158 + 36));
      uint64_t v99 = *v101;
      swift_retain();
      *long long v100 = v99;
      uint64_t v61 = sub_100009334(&qword_1000A3CB0);
      uint64_t v102 = (char *)v100 + *(int *)(v61 + 28);
      uint64_t v103 = (char *)v101 + *(int *)(v61 + 28);
      uint64_t v104 = sub_100089990();
      uint64_t v105 = *(void *)(v104 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v105 + 48))(v103, 1))
      {
        uint64_t v62 = sub_100009334(&qword_1000A3CE0);
        memcpy(v102, v103, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v102, v103, v104);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
      }
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
  }
  uint64_t v64 = sub_100009334(&qword_1000A4838);
  uint64_t v80 = v197 + *(int *)(v64 + 36);
  char v79 = (uint64_t *)(v198 + *(int *)(v64 + 36));
  uint64_t v75 = *v79;
  uint64_t v76 = v79[1];
  swift_retain();
  *(void *)uint64_t v80 = v75;
  *(void *)(v80 + 8) = v76;
  uint64_t v77 = v79[2];
  uint64_t v78 = v79[3];
  swift_retain();
  *(void *)(v80 + 16) = v77;
  *(void *)(v80 + 24) = v78;
  *(_OWORD *)(v80 + 32) = *((_OWORD *)v79 + 2);
  uint64_t v81 = (char *)(a2 + v251 + *(int *)(v196 + 64));
  long long v82 = (char *)(a1 + v251 + *(int *)(v196 + 64));
  uint64_t v83 = sub_100009334(&qword_1000A4840);
  uint64_t v84 = *(void *)(v83 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v84 + 48))(v82, 1))
  {
    uint64_t v66 = sub_100009334(&qword_1000A4878);
    memcpy(v81, v82, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    uint64_t v65 = sub_100009334(&qword_1000A4848);
    (*(void (**)(char *, char *))(*(void *)(v65 - 8) + 16))(v81, v82);
    long long v74 = &v81[*(int *)(v83 + 36)];
    long long v73 = &v82[*(int *)(v83 + 36)];
    uint64_t v69 = *(void *)v73;
    uint64_t v70 = *((void *)v73 + 1);
    swift_retain();
    *(void *)long long v74 = v69;
    *((void *)v74 + 1) = v70;
    uint64_t v71 = *((void *)v73 + 2);
    uint64_t v72 = *((void *)v73 + 3);
    swift_retain();
    *((void *)v74 + 2) = v71;
    *((void *)v74 + 3) = v72;
    *((_OWORD *)v74 + 2) = *((_OWORD *)v73 + 2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
  }
  uint64_t v67 = sub_100009334(&qword_1000A4610);
  memcpy((void *)(a2 + *(int *)(v67 + 36)), (const void *)(a1 + *(int *)(v67 + 36)), 0x30uLL);
  return a2;
}

uint64_t sub_1000753F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100066D08(*(void **)(v1 + 16), a1);
}

unint64_t sub_1000753F8()
{
  uint64_t v2 = qword_1000A4898;
  if (!qword_1000A4898)
  {
    sub_1000096C0(&qword_1000A4890);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4898);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10007547C()
{
  uint64_t v2 = qword_1000A48A0;
  if (!qword_1000A48A0)
  {
    sub_1000096C0(&qword_1000A4888);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48A0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100075500(uint64_t a1)
{
  uint64_t v23 = *(int *)(sub_100009334(&qword_1000A47D0) + 44);
  uint64_t v24 = *(int *)(sub_100009334(&qword_1000A47D8) + 44);
  uint64_t v1 = sub_100009334(&qword_1000A47E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1 + v23 + v24, 1))
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = a1 + v23 + v24;
      swift_release();
      uint64_t v9 = v11 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v10 = v9 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v3 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v10);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v12 = v11 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v13 = v12 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v14 = sub_100089990();
      uint64_t v15 = *(void *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v15 + 48))(v13, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      }
    }
    else
    {
      uint64_t v18 = a1 + v23 + v24;
      swift_release();
      uint64_t v16 = v18 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v17 = v16 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v2 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v17);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v19 = v18 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v20 = v19 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v21 = sub_100089990();
      uint64_t v22 = *(void *)(v21 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(v20, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
      }
    }
  }
  uint64_t v7 = a1 + v23 + v24 + *(int *)(sub_100009334(&qword_1000A47F0) + 48);
  uint64_t v4 = sub_100009334(&qword_1000A47F8);
  (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v7);
  uint64_t v8 = a1 + v23 + *(int *)(sub_100009334(&qword_1000A4800) + 64);
  uint64_t v5 = sub_100009334(&qword_1000A4808);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v8);
  return a1;
}

unint64_t sub_100075A4C()
{
  uint64_t v2 = qword_1000A48A8;
  if (!qword_1000A48A8)
  {
    sub_1000096C0(&qword_1000A4810);
    sub_10007547C();
    sub_100050D7C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48A8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100075AF0(uint64_t a1)
{
  uint64_t v23 = *(int *)(sub_100009334(&qword_1000A47D0) + 44);
  uint64_t v24 = *(int *)(sub_100009334(&qword_1000A47D8) + 44);
  uint64_t v1 = sub_100009334(&qword_1000A47E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1 + v23 + v24, 1))
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = a1 + v23 + v24;
      swift_release();
      uint64_t v9 = v11 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v10 = v9 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v3 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v10);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v12 = v11 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v13 = v12 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v14 = sub_100089990();
      uint64_t v15 = *(void *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v15 + 48))(v13, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      }
    }
    else
    {
      uint64_t v18 = a1 + v23 + v24;
      swift_release();
      uint64_t v16 = v18 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v17 = v16 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v2 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v17);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v19 = v18 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v20 = v19 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v21 = sub_100089990();
      uint64_t v22 = *(void *)(v21 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(v20, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
      }
    }
  }
  uint64_t v7 = a1 + v23 + v24 + *(int *)(sub_100009334(&qword_1000A47F0) + 48);
  uint64_t v4 = sub_100009334(&qword_1000A47F8);
  (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v7);
  uint64_t v8 = a1 + v23 + *(int *)(sub_100009334(&qword_1000A4800) + 64);
  uint64_t v5 = sub_100009334(&qword_1000A4808);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v8);
  sub_100009334(&qword_1000A4810);
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100076074@<X0>(uint64_t a1@<X8>)
{
  return sub_100069164(*(char **)(v1 + 16), a1);
}

unint64_t sub_10007607C()
{
  uint64_t v2 = qword_1000A48B8;
  if (!qword_1000A48B8)
  {
    sub_1000096C0(&qword_1000A48B0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48B8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100076100()
{
  uint64_t v2 = qword_1000A48C0;
  if (!qword_1000A48C0)
  {
    sub_1000096C0(&qword_1000A4880);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48C0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100076184(uint64_t a1)
{
  uint64_t v40 = *(int *)(sub_100009334(&qword_1000A4820) + 44);
  uint64_t v1 = sub_100009334(&qword_1000A4828);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1 + v40, 1))
  {
    swift_release();
    uint64_t v34 = a1 + v40 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v35 = v34 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v2 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v35);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v36 = a1 + v40 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
    swift_release();
    uint64_t v37 = v36 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v38 = sub_100089990();
    uint64_t v39 = *(void *)(v38 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v39 + 48))(v37, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    }
  }
  uint64_t v30 = (int *)sub_100009334(&qword_1000A4830);
  uint64_t v29 = a1 + v40 + v30[12];
  uint64_t v3 = sub_100009334(&qword_1000A47F8);
  (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v29);
  uint64_t v31 = a1 + v40 + v30[20];
  uint64_t v32 = sub_100009334(&qword_1000A3CA8);
  uint64_t v33 = *(unsigned int (**)(void))(*(void *)(v32 - 8) + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t))v33)(v31, 1))
  {
    swift_release();
    uint64_t v23 = v31 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v24 = v23 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v24);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v25 = v31 + *(int *)(v32 + 36);
    swift_release();
    uint64_t v26 = v25 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v27 = sub_100089990();
    uint64_t v28 = *(void *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v28 + 48))(v26, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
  }
  uint64_t v22 = a1 + v40 + v30[24];
  if (!v33())
  {
    swift_release();
    uint64_t v16 = v22 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v17 = v16 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v5 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v17);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v18 = v22 + *(int *)(v32 + 36);
    swift_release();
    uint64_t v19 = v18 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v20 = sub_100089990();
    uint64_t v21 = *(void *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v21 + 48))(v19, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    }
  }
  uint64_t v15 = a1 + v40 + v30[28];
  uint64_t v6 = sub_100009334(&qword_1000A46D0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v15, 1))
  {
    sub_100009334(&qword_1000A46D8);
    if (!swift_getEnumCaseMultiPayload())
    {
      swift_release();
      uint64_t v9 = v15 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v10 = v9 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v7 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v7 - 8) + 8))(v10);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v11 = v15 + *(int *)(v32 + 36);
      swift_release();
      uint64_t v12 = v11 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v13 = sub_100089990();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(v12, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      }
    }
  }
  return a1;
}

unint64_t sub_100076AB8()
{
  uint64_t v2 = qword_1000A48C8;
  if (!qword_1000A48C8)
  {
    sub_1000096C0(&qword_1000A4838);
    sub_100076100();
    sub_100050D7C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48C8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100076B5C(uint64_t a1)
{
  uint64_t v40 = *(int *)(sub_100009334(&qword_1000A4820) + 44);
  uint64_t v1 = sub_100009334(&qword_1000A4828);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1 + v40, 1))
  {
    swift_release();
    uint64_t v34 = a1 + v40 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v35 = v34 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v2 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v35);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v36 = a1 + v40 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
    swift_release();
    uint64_t v37 = v36 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v38 = sub_100089990();
    uint64_t v39 = *(void *)(v38 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v39 + 48))(v37, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    }
  }
  uint64_t v30 = (int *)sub_100009334(&qword_1000A4830);
  uint64_t v29 = a1 + v40 + v30[12];
  uint64_t v3 = sub_100009334(&qword_1000A47F8);
  (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v29);
  uint64_t v31 = a1 + v40 + v30[20];
  uint64_t v32 = sub_100009334(&qword_1000A3CA8);
  uint64_t v33 = *(unsigned int (**)(void))(*(void *)(v32 - 8) + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t))v33)(v31, 1))
  {
    swift_release();
    uint64_t v23 = v31 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v24 = v23 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v24);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v25 = v31 + *(int *)(v32 + 36);
    swift_release();
    uint64_t v26 = v25 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v27 = sub_100089990();
    uint64_t v28 = *(void *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v28 + 48))(v26, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
  }
  uint64_t v22 = a1 + v40 + v30[24];
  if (!v33())
  {
    swift_release();
    uint64_t v16 = v22 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v17 = v16 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v5 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v17);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v18 = v22 + *(int *)(v32 + 36);
    swift_release();
    uint64_t v19 = v18 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v20 = sub_100089990();
    uint64_t v21 = *(void *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v21 + 48))(v19, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    }
  }
  uint64_t v15 = a1 + v40 + v30[28];
  uint64_t v6 = sub_100009334(&qword_1000A46D0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v15, 1))
  {
    sub_100009334(&qword_1000A46D8);
    if (!swift_getEnumCaseMultiPayload())
    {
      swift_release();
      uint64_t v9 = v15 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v10 = v9 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v7 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v7 - 8) + 8))(v10);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v11 = v15 + *(int *)(v32 + 36);
      swift_release();
      uint64_t v12 = v11 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v13 = sub_100089990();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(v12, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      }
    }
  }
  sub_100009334(&qword_1000A4838);
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_1000774C0()
{
  uint64_t v2 = qword_1000A48D0;
  if (!qword_1000A48D0)
  {
    sub_1000096C0(&qword_1000A4840);
    sub_1000096C0(&qword_1000A46E8);
    sub_10006F470();
    swift_getOpaqueTypeConformance2();
    sub_100050D7C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48D0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000775AC(uint64_t a1)
{
  uint64_t v4 = sub_100009334(&qword_1000A4840);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1))
  {
    uint64_t v1 = sub_100009334(&qword_1000A4848);
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
    swift_release();
    swift_release();
  }
  return a1;
}

char *sub_10007768C(char *a1, char *a2)
{
  uint64_t v7 = sub_100009334(&qword_1000A4840);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 48))(a1, 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A4878);
    memcpy(a2, a1, *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    uint64_t v2 = sub_100009334(&qword_1000A4848);
    (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 32))(a2, a1);
    memcpy(&a2[*(int *)(v7 + 36)], &a1[*(int *)(v7 + 36)], 0x30uLL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
  return a2;
}

__n128 sub_1000777EC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v88 = *(int *)(sub_100009334(&qword_1000A47D0) + 44);
  uint64_t v2 = a2 + v88;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(a1 + v88);
  *(unsigned char *)(v2 + 16) = *(unsigned char *)(a1 + v88 + 16);
  uint64_t v89 = *(int *)(sub_100009334(&qword_1000A47D8) + 44);
  uint64_t v90 = sub_100009334(&qword_1000A47E0);
  uint64_t v91 = *(void *)(v90 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v91 + 48))(a1 + v88 + v89, 1))
  {
    uint64_t v20 = sub_100009334(&qword_1000A4850);
    memcpy((void *)(a2 + v88 + v89), (const void *)(a1 + v88 + v89), *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v55 = (uint64_t *)(a1 + v88 + v89);
      uint64_t v40 = *v55;
      swift_retain();
      uint64_t v54 = (void *)(a2 + v88 + v89);
      *uint64_t v54 = v40;
      uint64_t v11 = sub_100009334(&qword_1000A3C88);
      uint64_t v42 = (void *)((char *)v54 + *(int *)(v11 + 36));
      uint64_t v43 = (uint64_t *)((char *)v55 + *(int *)(v11 + 36));
      uint64_t v41 = *v43;
      swift_retain();
      *uint64_t v42 = v41;
      uint64_t v12 = sub_100009334(&qword_1000A3C90);
      uint64_t v45 = (char *)v42 + *(int *)(v12 + 28);
      uint64_t v44 = (char *)v43 + *(int *)(v12 + 28);
      uint64_t v13 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v13 - 8) + 16))(v45, v44);
      uint64_t v14 = sub_100009334(&qword_1000A3C98);
      uint64_t v48 = (void *)((char *)v54 + *(int *)(v14 + 36));
      uint64_t v47 = (uint64_t *)((char *)v55 + *(int *)(v14 + 36));
      uint64_t v46 = *v47;
      swift_retain();
      *uint64_t v48 = v46;
      uint64_t v49 = v47[1];
      swift_retain();
      v48[1] = v49;
      uint64_t v15 = sub_100009334(&qword_1000A3CA0);
      uint64_t v52 = (void *)((char *)v54 + *(int *)(v15 + 36));
      uint64_t v51 = (uint64_t *)((char *)v55 + *(int *)(v15 + 36));
      uint64_t v50 = *v51;
      swift_retain();
      *uint64_t v52 = v50;
      uint64_t v53 = v51[1];
      swift_retain();
      v52[1] = v53;
      uint64_t v16 = sub_100009334(&qword_1000A3CA8);
      uint64_t v57 = (void *)((char *)v54 + *(int *)(v16 + 36));
      uint64_t v58 = (uint64_t *)((char *)v55 + *(int *)(v16 + 36));
      uint64_t v56 = *v58;
      swift_retain();
      *uint64_t v57 = v56;
      uint64_t v17 = sub_100009334(&qword_1000A3CB0);
      __dst = (char *)v57 + *(int *)(v17 + 28);
      __src = (char *)v58 + *(int *)(v17 + 28);
      uint64_t v61 = sub_100089990();
      uint64_t v62 = *(void *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v62 + 48))(__src, 1))
      {
        uint64_t v18 = sub_100009334(&qword_1000A3CE0);
        memcpy(__dst, __src, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(__dst, __src, v61);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(__dst, 0, 1, v61);
      }
    }
    else
    {
      uint64_t v78 = (uint64_t *)(a1 + v88 + v89);
      uint64_t v63 = *v78;
      swift_retain();
      uint64_t v77 = (void *)(a2 + v88 + v89);
      *uint64_t v77 = v63;
      uint64_t v3 = sub_100009334(&qword_1000A3C88);
      uint64_t v65 = (void *)((char *)v77 + *(int *)(v3 + 36));
      uint64_t v66 = (uint64_t *)((char *)v78 + *(int *)(v3 + 36));
      uint64_t v64 = *v66;
      swift_retain();
      *uint64_t v65 = v64;
      uint64_t v4 = sub_100009334(&qword_1000A3C90);
      uint64_t v68 = (char *)v65 + *(int *)(v4 + 28);
      uint64_t v67 = (char *)v66 + *(int *)(v4 + 28);
      uint64_t v5 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 16))(v68, v67);
      uint64_t v6 = sub_100009334(&qword_1000A3C98);
      uint64_t v71 = (void *)((char *)v77 + *(int *)(v6 + 36));
      uint64_t v70 = (uint64_t *)((char *)v78 + *(int *)(v6 + 36));
      uint64_t v69 = *v70;
      swift_retain();
      *uint64_t v71 = v69;
      uint64_t v72 = v70[1];
      swift_retain();
      v71[1] = v72;
      uint64_t v7 = sub_100009334(&qword_1000A3CA0);
      uint64_t v75 = (void *)((char *)v77 + *(int *)(v7 + 36));
      long long v74 = (uint64_t *)((char *)v78 + *(int *)(v7 + 36));
      uint64_t v73 = *v74;
      swift_retain();
      *uint64_t v75 = v73;
      uint64_t v76 = v74[1];
      swift_retain();
      v75[1] = v76;
      uint64_t v8 = sub_100009334(&qword_1000A3CA8);
      uint64_t v80 = (void *)((char *)v77 + *(int *)(v8 + 36));
      uint64_t v81 = (uint64_t *)((char *)v78 + *(int *)(v8 + 36));
      uint64_t v79 = *v81;
      swift_retain();
      *uint64_t v80 = v79;
      uint64_t v9 = sub_100009334(&qword_1000A3CB0);
      long long v82 = (char *)v80 + *(int *)(v9 + 28);
      uint64_t v83 = (char *)v81 + *(int *)(v9 + 28);
      uint64_t v84 = sub_100089990();
      uint64_t v85 = *(void *)(v84 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v85 + 48))(v83, 1))
      {
        uint64_t v10 = sub_100009334(&qword_1000A3CE0);
        memcpy(v82, v83, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      }
    }
    uint64_t v19 = sub_100009334(&qword_1000A4828);
    memcpy((void *)(a2 + v88 + v89 + *(int *)(v19 + 36)), (const void *)(a1 + v88 + v89 + *(int *)(v19 + 36)), 0x30uLL);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(a2 + v88 + v89, 0, 1, v90);
  }
  uint64_t v21 = sub_100009334(&qword_1000A47F0);
  uint64_t v31 = a2 + v88 + v89 + *(int *)(v21 + 48);
  uint64_t v30 = a1 + v88 + v89 + *(int *)(v21 + 48);
  uint64_t v22 = sub_100009334(&qword_1000A47F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v31, v30);
  uint64_t v23 = sub_100009334(&qword_1000A4800);
  uint64_t v24 = a2 + v88 + *(int *)(v23 + 48);
  uint64_t v25 = a1 + v88 + *(int *)(v23 + 48);
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v33 = a2 + v88 + *(int *)(v23 + 64);
  uint64_t v32 = a1 + v88 + *(int *)(v23 + 64);
  uint64_t v26 = sub_100009334(&qword_1000A4808);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v33, v32);
  uint64_t v27 = sub_100009334(&qword_1000A4858);
  *(void *)(v33 + *(int *)(v27 + 36)) = *(void *)(v32 + *(int *)(v27 + 36));
  uint64_t v28 = sub_100009334(&qword_1000A4810);
  uint64_t v39 = (__n128 *)(a2 + *(int *)(v28 + 36));
  uint64_t v38 = (__n128 *)(a1 + *(int *)(v28 + 36));
  unint64_t v34 = v38->n128_u64[0];
  unint64_t v35 = v38->n128_u64[1];
  swift_retain();
  v39->n128_u64[0] = v34;
  v39->n128_u64[1] = v35;
  unint64_t v36 = v38[1].n128_u64[0];
  unint64_t v37 = v38[1].n128_u64[1];
  swift_retain();
  v39[1].n128_u64[0] = v36;
  v39[1].n128_u64[1] = v37;
  __n128 result = v38[2];
  v39[2] = result;
  return result;
}

__n128 sub_1000782C4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v146 = *(int *)(sub_100009334(&qword_1000A4820) + 44);
  uint64_t v148 = sub_100009334(&qword_1000A4828);
  uint64_t v149 = *(void *)(v148 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v149 + 48))(a1 + v146, 1))
  {
    uint64_t v10 = sub_100009334(&qword_1000A4860);
    memcpy((void *)(a2 + v146), (const void *)(a1 + v146), *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v124 = *(void *)(a1 + v146);
    swift_retain();
    *(void *)(a2 + v146) = v124;
    uint64_t v2 = sub_100009334(&qword_1000A3C88);
    uint64_t v126 = (void *)(a2 + v146 + *(int *)(v2 + 36));
    char v127 = (uint64_t *)(a1 + v146 + *(int *)(v2 + 36));
    uint64_t v125 = *v127;
    swift_retain();
    *uint64_t v126 = v125;
    uint64_t v3 = sub_100009334(&qword_1000A3C90);
    char v129 = (char *)v126 + *(int *)(v3 + 28);
    uint64_t v128 = (char *)v127 + *(int *)(v3 + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v129, v128);
    uint64_t v5 = sub_100009334(&qword_1000A3C98);
    uint32_t v132 = (void *)(a2 + v146 + *(int *)(v5 + 36));
    uint64_t v131 = (uint64_t *)(a1 + v146 + *(int *)(v5 + 36));
    uint64_t v130 = *v131;
    swift_retain();
    *uint32_t v132 = v130;
    uint64_t v133 = v131[1];
    swift_retain();
    v132[1] = v133;
    uint64_t v6 = sub_100009334(&qword_1000A3CA0);
    uint64_t v136 = (void *)(a2 + v146 + *(int *)(v6 + 36));
    uint64_t v135 = (uint64_t *)(a1 + v146 + *(int *)(v6 + 36));
    uint64_t v134 = *v135;
    swift_retain();
    void *v136 = v134;
    uint64_t v137 = v135[1];
    swift_retain();
    v136[1] = v137;
    uint64_t v7 = sub_100009334(&qword_1000A3CA8);
    uint32_t v139 = (void *)(a2 + v146 + *(int *)(v7 + 36));
    uint64_t v140 = (uint64_t *)(a1 + v146 + *(int *)(v7 + 36));
    uint64_t v138 = *v140;
    swift_retain();
    *uint32_t v139 = v138;
    uint64_t v8 = sub_100009334(&qword_1000A3CB0);
    uint64_t v141 = (char *)v139 + *(int *)(v8 + 28);
    uint64_t v142 = (char *)v140 + *(int *)(v8 + 28);
    uint64_t v143 = sub_100089990();
    uint64_t v144 = *(void *)(v143 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v144 + 48))(v142, 1))
    {
      uint64_t v9 = sub_100009334(&qword_1000A3CE0);
      memcpy(v141, v142, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v141, v142, v143);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
    }
    memcpy((void *)(a2 + v146 + *(int *)(v148 + 36)), (const void *)(a1 + v146 + *(int *)(v148 + 36)), 0x30uLL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v149 + 56))(a2 + v146, 0, 1, v148);
  }
  unint64_t v118 = (int *)sub_100009334(&qword_1000A4830);
  uint64_t v117 = a2 + v146 + v118[12];
  uint64_t v116 = a1 + v146 + v118[12];
  uint64_t v11 = sub_100009334(&qword_1000A47F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v117, v116);
  uint64_t v12 = a2 + v146 + v118[16];
  uint64_t v13 = a1 + v146 + v118[16];
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  unint64_t v119 = (void *)(a2 + v146 + v118[20]);
  uint64_t v120 = (uint64_t *)(a1 + v146 + v118[20]);
  uint64_t v121 = sub_100009334(&qword_1000A3CA8);
  uint64_t v122 = *(void *)(v121 - 8);
  uint64_t v123 = *(unsigned int (**)(void))(v122 + 48);
  if (((unsigned int (*)(uint64_t *, uint64_t))v123)(v120, 1))
  {
    uint64_t v21 = sub_100009334(&qword_1000A4868);
    memcpy(v119, v120, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v95 = *v120;
    swift_retain();
    void *v119 = v95;
    uint64_t v14 = sub_100009334(&qword_1000A3C88);
    uint64_t v97 = (void *)((char *)v119 + *(int *)(v14 + 36));
    uint64_t v98 = (uint64_t *)((char *)v120 + *(int *)(v14 + 36));
    uint64_t v96 = *v98;
    swift_retain();
    *uint64_t v97 = v96;
    uint64_t v15 = sub_100009334(&qword_1000A3C90);
    long long v100 = (char *)v97 + *(int *)(v15 + 28);
    uint64_t v99 = (char *)v98 + *(int *)(v15 + 28);
    uint64_t v16 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v16 - 8) + 16))(v100, v99);
    uint64_t v17 = sub_100009334(&qword_1000A3C98);
    uint64_t v103 = (void *)((char *)v119 + *(int *)(v17 + 36));
    uint64_t v102 = (uint64_t *)((char *)v120 + *(int *)(v17 + 36));
    uint64_t v101 = *v102;
    swift_retain();
    *uint64_t v103 = v101;
    uint64_t v104 = v102[1];
    swift_retain();
    v103[1] = v104;
    uint64_t v18 = sub_100009334(&qword_1000A3CA0);
    uint64_t v107 = (void *)((char *)v119 + *(int *)(v18 + 36));
    uint64_t v106 = (uint64_t *)((char *)v120 + *(int *)(v18 + 36));
    uint64_t v105 = *v106;
    swift_retain();
    *uint64_t v107 = v105;
    uint64_t v108 = v106[1];
    swift_retain();
    v107[1] = v108;
    uint64_t v110 = (void *)((char *)v119 + *(int *)(v121 + 36));
    uint64_t v111 = (uint64_t *)((char *)v120 + *(int *)(v121 + 36));
    uint64_t v109 = *v111;
    swift_retain();
    void *v110 = v109;
    uint64_t v19 = sub_100009334(&qword_1000A3CB0);
    __dst = (char *)v110 + *(int *)(v19 + 28);
    __src = (char *)v111 + *(int *)(v19 + 28);
    uint64_t v114 = sub_100089990();
    uint64_t v115 = *(void *)(v114 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v115 + 48))(__src, 1))
    {
      uint64_t v20 = sub_100009334(&qword_1000A3CE0);
      memcpy(__dst, __src, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(__dst, __src, v114);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(__dst, 0, 1, v114);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
  }
  uint64_t v93 = (void *)(a2 + v146 + v118[24]);
  uint64_t v94 = (uint64_t *)(a1 + v146 + v118[24]);
  if (v123())
  {
    uint64_t v29 = sub_100009334(&qword_1000A4868);
    memcpy(v93, v94, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v72 = *v94;
    swift_retain();
    *uint64_t v93 = v72;
    uint64_t v22 = sub_100009334(&qword_1000A3C88);
    long long v74 = (void *)((char *)v93 + *(int *)(v22 + 36));
    uint64_t v75 = (uint64_t *)((char *)v94 + *(int *)(v22 + 36));
    uint64_t v73 = *v75;
    swift_retain();
    void *v74 = v73;
    uint64_t v23 = sub_100009334(&qword_1000A3C90);
    uint64_t v77 = (char *)v74 + *(int *)(v23 + 28);
    uint64_t v76 = (char *)v75 + *(int *)(v23 + 28);
    uint64_t v24 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v24 - 8) + 16))(v77, v76);
    uint64_t v25 = sub_100009334(&qword_1000A3C98);
    uint64_t v80 = (void *)((char *)v93 + *(int *)(v25 + 36));
    uint64_t v79 = (uint64_t *)((char *)v94 + *(int *)(v25 + 36));
    uint64_t v78 = *v79;
    swift_retain();
    *uint64_t v80 = v78;
    uint64_t v81 = v79[1];
    swift_retain();
    v80[1] = v81;
    uint64_t v26 = sub_100009334(&qword_1000A3CA0);
    uint64_t v84 = (void *)((char *)v93 + *(int *)(v26 + 36));
    uint64_t v83 = (uint64_t *)((char *)v94 + *(int *)(v26 + 36));
    uint64_t v82 = *v83;
    swift_retain();
    void *v84 = v82;
    uint64_t v85 = v83[1];
    swift_retain();
    v84[1] = v85;
    uint64_t v87 = (void *)((char *)v93 + *(int *)(v121 + 36));
    uint64_t v88 = (uint64_t *)((char *)v94 + *(int *)(v121 + 36));
    uint64_t v86 = *v88;
    swift_retain();
    void *v87 = v86;
    uint64_t v27 = sub_100009334(&qword_1000A3CB0);
    uint64_t v89 = (char *)v87 + *(int *)(v27 + 28);
    uint64_t v90 = (char *)v88 + *(int *)(v27 + 28);
    uint64_t v91 = sub_100089990();
    uint64_t v92 = *(void *)(v91 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v92 + 48))(v90, 1))
    {
      uint64_t v28 = sub_100009334(&qword_1000A3CE0);
      memcpy(v89, v90, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v89, v90, v91);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v122 + 56))(v93, 0, 1, v121);
  }
  uint64_t v68 = (void *)(a2 + v146 + v118[28]);
  uint64_t v69 = (uint64_t *)(a1 + v146 + v118[28]);
  uint64_t v70 = sub_100009334(&qword_1000A46D0);
  uint64_t v71 = *(void *)(v70 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v71 + 48))(v69, 1))
  {
    uint64_t v37 = sub_100009334(&qword_1000A4870);
    memcpy(v68, v69, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    uint64_t v67 = sub_100009334(&qword_1000A46D8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v68, v69, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      uint64_t v46 = *v69;
      swift_retain();
      void *v68 = v46;
      uint64_t v30 = sub_100009334(&qword_1000A3C88);
      uint64_t v48 = (void *)((char *)v68 + *(int *)(v30 + 36));
      uint64_t v49 = (uint64_t *)((char *)v69 + *(int *)(v30 + 36));
      uint64_t v47 = *v49;
      swift_retain();
      *uint64_t v48 = v47;
      uint64_t v31 = sub_100009334(&qword_1000A3C90);
      uint64_t v51 = (char *)v48 + *(int *)(v31 + 28);
      uint64_t v50 = (char *)v49 + *(int *)(v31 + 28);
      uint64_t v32 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v32 - 8) + 16))(v51, v50);
      uint64_t v33 = sub_100009334(&qword_1000A3C98);
      uint64_t v54 = (void *)((char *)v68 + *(int *)(v33 + 36));
      uint64_t v53 = (uint64_t *)((char *)v69 + *(int *)(v33 + 36));
      uint64_t v52 = *v53;
      swift_retain();
      *uint64_t v54 = v52;
      uint64_t v55 = v53[1];
      swift_retain();
      v54[1] = v55;
      uint64_t v34 = sub_100009334(&qword_1000A3CA0);
      uint64_t v58 = (void *)((char *)v68 + *(int *)(v34 + 36));
      uint64_t v57 = (uint64_t *)((char *)v69 + *(int *)(v34 + 36));
      uint64_t v56 = *v57;
      swift_retain();
      *uint64_t v58 = v56;
      uint64_t v59 = v57[1];
      swift_retain();
      v58[1] = v59;
      uint64_t v61 = (void *)((char *)v68 + *(int *)(v121 + 36));
      uint64_t v62 = (uint64_t *)((char *)v69 + *(int *)(v121 + 36));
      uint64_t v60 = *v62;
      swift_retain();
      *uint64_t v61 = v60;
      uint64_t v35 = sub_100009334(&qword_1000A3CB0);
      uint64_t v63 = (char *)v61 + *(int *)(v35 + 28);
      uint64_t v64 = (char *)v62 + *(int *)(v35 + 28);
      uint64_t v65 = sub_100089990();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v66 + 48))(v64, 1))
      {
        uint64_t v36 = sub_100009334(&qword_1000A3CE0);
        memcpy(v63, v64, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  uint64_t v38 = sub_100009334(&qword_1000A4838);
  uint64_t v45 = (__n128 *)(a2 + *(int *)(v38 + 36));
  uint64_t v44 = (__n128 *)(a1 + *(int *)(v38 + 36));
  unint64_t v40 = v44->n128_u64[0];
  unint64_t v41 = v44->n128_u64[1];
  swift_retain();
  v45->n128_u64[0] = v40;
  v45->n128_u64[1] = v41;
  unint64_t v42 = v44[1].n128_u64[0];
  unint64_t v43 = v44[1].n128_u64[1];
  swift_retain();
  v45[1].n128_u64[0] = v42;
  v45[1].n128_u64[1] = v43;
  __n128 result = v44[2];
  v45[2] = result;
  return result;
}

char *sub_1000794B4(char *a1, char *a2)
{
  uint64_t v14 = sub_100009334(&qword_1000A4840);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 48))(a1, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A4878);
    memcpy(a2, a1, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v2 = sub_100009334(&qword_1000A4848);
    (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 16))(a2, a1);
    uint64_t v3 = *(int *)(v14 + 36);
    uint64_t v11 = &a2[v3];
    uint64_t v10 = &a1[v3];
    uint64_t v6 = *(void *)&a1[v3];
    uint64_t v7 = *(void *)&a1[v3 + 8];
    swift_retain();
    *(void *)uint64_t v11 = v6;
    *((void *)v11 + 1) = v7;
    uint64_t v8 = *((void *)v10 + 2);
    uint64_t v9 = *((void *)v10 + 3);
    swift_retain();
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = v9;
    *((_OWORD *)v11 + 2) = *((_OWORD *)v10 + 2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
  }
  return a2;
}

unint64_t sub_100079670()
{
  uint64_t v2 = qword_1000A48D8;
  if (!qword_1000A48D8)
  {
    sub_1000096C0(&qword_1000A4878);
    sub_1000774C0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48D8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100079704(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A4848);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  sub_100009334(&qword_1000A4840);
  swift_release();
  swift_release();
  return a1;
}

__n128 sub_100079798(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_100009334(&qword_1000A4848);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a2, a1);
  uint64_t v6 = *(int *)(sub_100009334(&qword_1000A4840) + 36);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  swift_retain();
  uint64_t v3 = (void *)(a2 + v6);
  uint64_t v12 = (__n128 *)(a2 + v6);
  *uint64_t v3 = v7;
  v3[1] = v8;
  unint64_t v10 = *(void *)(a1 + v6 + 16);
  unint64_t v11 = *(void *)(a1 + v6 + 24);
  swift_retain();
  v12[1].n128_u64[0] = v10;
  v12[1].n128_u64[1] = v11;
  __n128 result = *(__n128 *)(a1 + v6 + 32);
  v12[2] = result;
  return result;
}

void *sub_100079894(const void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a3 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v9 + 48))(a1, 1))
  {
    memcpy(a2, a1, *(void *)(*(void *)(a4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a2, a1, a3);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, a3);
  }
  return a2;
}

unint64_t sub_1000799AC()
{
  uint64_t v2 = qword_1000A48E0;
  if (!qword_1000A48E0)
  {
    sub_1000096C0(&qword_1000A4828);
    sub_100042D0C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48E0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100079A4C(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A4828);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1, 1))
  {
    swift_release();
    uint64_t v4 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v5 = v4 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v2 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v5);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v6 = a1 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
    swift_release();
    uint64_t v7 = v6 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v8 = sub_100089990();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v9 + 48))(v7, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  return a1;
}

void *sub_100079C7C(void *a1, void *a2)
{
  uint64_t v24 = sub_100009334(&qword_1000A4828);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v25 + 48))(a1, 1))
  {
    uint64_t v10 = sub_100009334(&qword_1000A4860);
    memcpy(a2, a1, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *a2 = *a1;
    uint64_t v2 = sub_100009334(&qword_1000A3C88);
    uint64_t v12 = (void *)((char *)a2 + *(int *)(v2 + 36));
    uint64_t v13 = (void *)((char *)a1 + *(int *)(v2 + 36));
    *uint64_t v12 = *v13;
    uint64_t v3 = sub_100009334(&qword_1000A3C90);
    uint64_t v15 = (char *)v12 + *(int *)(v3 + 28);
    uint64_t v14 = (char *)v13 + *(int *)(v3 + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(v15, v14);
    uint64_t v5 = sub_100009334(&qword_1000A3C98);
    *(_OWORD *)((char *)a2 + *(int *)(v5 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v5 + 36));
    uint64_t v6 = sub_100009334(&qword_1000A3CA0);
    *(_OWORD *)((char *)a2 + *(int *)(v6 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v6 + 36));
    uint64_t v7 = sub_100009334(&qword_1000A3CA8);
    uint64_t v16 = (void *)((char *)a2 + *(int *)(v7 + 36));
    uint64_t v17 = (void *)((char *)a1 + *(int *)(v7 + 36));
    *uint64_t v16 = *v17;
    uint64_t v8 = sub_100009334(&qword_1000A3CB0);
    __dst = (char *)v16 + *(int *)(v8 + 28);
    __src = (char *)v17 + *(int *)(v8 + 28);
    uint64_t v20 = sub_100089990();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v21 + 48))(__src, 1))
    {
      uint64_t v9 = sub_100009334(&qword_1000A3CE0);
      memcpy(__dst, __src, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, __src, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    memcpy((char *)a2 + *(int *)(v24 + 36), (char *)a1 + *(int *)(v24 + 36), 0x30uLL);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(a2, 0, 1, v24);
  }
  return a2;
}

uint64_t sub_100079FF8(uint64_t a1)
{
  uint64_t v10 = sub_100009334(&qword_1000A3CA8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(a1, 1))
  {
    swift_release();
    uint64_t v3 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
    swift_release();
    uint64_t v4 = v3 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
    uint64_t v1 = sub_100089D10();
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v4);
    sub_100009334(&qword_1000A3C98);
    swift_release();
    swift_release();
    sub_100009334(&qword_1000A3CA0);
    swift_release();
    swift_release();
    uint64_t v5 = a1 + *(int *)(v10 + 36);
    swift_release();
    uint64_t v6 = v5 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
    uint64_t v7 = sub_100089990();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t))(v8 + 48))(v6, 1)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return a1;
}

void *sub_10007A224(void *a1, void *a2)
{
  uint64_t v23 = sub_100009334(&qword_1000A3CA8);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v24 + 48))(a1, 1))
  {
    uint64_t v9 = sub_100009334(&qword_1000A4868);
    memcpy(a2, a1, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    *a2 = *a1;
    uint64_t v2 = sub_100009334(&qword_1000A3C88);
    unint64_t v11 = (void *)((char *)a2 + *(int *)(v2 + 36));
    uint64_t v12 = (void *)((char *)a1 + *(int *)(v2 + 36));
    *unint64_t v11 = *v12;
    uint64_t v3 = sub_100009334(&qword_1000A3C90);
    uint64_t v14 = (char *)v11 + *(int *)(v3 + 28);
    uint64_t v13 = (char *)v12 + *(int *)(v3 + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(v14, v13);
    uint64_t v5 = sub_100009334(&qword_1000A3C98);
    *(_OWORD *)((char *)a2 + *(int *)(v5 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v5 + 36));
    uint64_t v6 = sub_100009334(&qword_1000A3CA0);
    *(_OWORD *)((char *)a2 + *(int *)(v6 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v6 + 36));
    uint64_t v15 = (void *)((char *)a2 + *(int *)(v23 + 36));
    uint64_t v16 = (void *)((char *)a1 + *(int *)(v23 + 36));
    *uint64_t v15 = *v16;
    uint64_t v7 = sub_100009334(&qword_1000A3CB0);
    __dst = (char *)v15 + *(int *)(v7 + 28);
    __src = (char *)v16 + *(int *)(v7 + 28);
    uint64_t v19 = sub_100089990();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v20 + 48))(__src, 1))
    {
      uint64_t v8 = sub_100009334(&qword_1000A3CE0);
      memcpy(__dst, __src, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, __src, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(a2, 0, 1, v23);
  }
  return a2;
}

uint64_t sub_10007A568(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A46D0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1, 1))
  {
    sub_100009334(&qword_1000A46D8);
    if (!swift_getEnumCaseMultiPayload())
    {
      swift_release();
      uint64_t v4 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v5 = v4 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v2 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v5);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v6 = a1 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v7 = v6 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v8 = sub_100089990();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v9 + 48))(v7, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
    }
  }
  return a1;
}

void *sub_10007A7C4(void *a1, void *a2)
{
  uint64_t v25 = sub_100009334(&qword_1000A46D0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v26 + 48))(a1, 1))
  {
    uint64_t v10 = sub_100009334(&qword_1000A4870);
    memcpy(a2, a1, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_100009334(&qword_1000A46D8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a2, a1, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *a2 = *a1;
      uint64_t v2 = sub_100009334(&qword_1000A3C88);
      uint64_t v12 = (void *)((char *)a2 + *(int *)(v2 + 36));
      uint64_t v13 = (void *)((char *)a1 + *(int *)(v2 + 36));
      *uint64_t v12 = *v13;
      uint64_t v3 = sub_100009334(&qword_1000A3C90);
      uint64_t v15 = (char *)v12 + *(int *)(v3 + 28);
      uint64_t v14 = (char *)v13 + *(int *)(v3 + 28);
      uint64_t v4 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(v15, v14);
      uint64_t v5 = sub_100009334(&qword_1000A3C98);
      *(_OWORD *)((char *)a2 + *(int *)(v5 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v5 + 36));
      uint64_t v6 = sub_100009334(&qword_1000A3CA0);
      *(_OWORD *)((char *)a2 + *(int *)(v6 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v6 + 36));
      uint64_t v7 = sub_100009334(&qword_1000A3CA8);
      uint64_t v16 = (void *)((char *)a2 + *(int *)(v7 + 36));
      uint64_t v17 = (void *)((char *)a1 + *(int *)(v7 + 36));
      *uint64_t v16 = *v17;
      uint64_t v8 = sub_100009334(&qword_1000A3CB0);
      __dst = (char *)v16 + *(int *)(v8 + 28);
      __src = (char *)v17 + *(int *)(v8 + 28);
      uint64_t v20 = sub_100089990();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v21 + 48))(__src, 1))
      {
        uint64_t v9 = sub_100009334(&qword_1000A3CE0);
        memcpy(__dst, __src, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, __src, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(a2, 0, 1, v25);
  }
  return a2;
}

void *sub_10007AB84(uint64_t *a1, void *a2)
{
  uint64_t v35 = sub_100009334(&qword_1000A4828);
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v36 + 48))(a1, 1))
  {
    uint64_t v10 = sub_100009334(&qword_1000A4860);
    memcpy(a2, a1, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v12 = *a1;
    swift_retain();
    *a2 = v12;
    uint64_t v2 = sub_100009334(&qword_1000A3C88);
    uint64_t v14 = (void *)((char *)a2 + *(int *)(v2 + 36));
    uint64_t v15 = (uint64_t *)((char *)a1 + *(int *)(v2 + 36));
    uint64_t v13 = *v15;
    swift_retain();
    *uint64_t v14 = v13;
    uint64_t v3 = sub_100009334(&qword_1000A3C90);
    uint64_t v17 = (char *)v14 + *(int *)(v3 + 28);
    uint64_t v16 = (char *)v15 + *(int *)(v3 + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v17, v16);
    uint64_t v5 = sub_100009334(&qword_1000A3C98);
    uint64_t v20 = (void *)((char *)a2 + *(int *)(v5 + 36));
    uint64_t v19 = (uint64_t *)((char *)a1 + *(int *)(v5 + 36));
    uint64_t v18 = *v19;
    swift_retain();
    *uint64_t v20 = v18;
    uint64_t v21 = v19[1];
    swift_retain();
    v20[1] = v21;
    uint64_t v6 = sub_100009334(&qword_1000A3CA0);
    uint64_t v24 = (void *)((char *)a2 + *(int *)(v6 + 36));
    uint64_t v23 = (uint64_t *)((char *)a1 + *(int *)(v6 + 36));
    uint64_t v22 = *v23;
    swift_retain();
    *uint64_t v24 = v22;
    uint64_t v25 = v23[1];
    swift_retain();
    v24[1] = v25;
    uint64_t v7 = sub_100009334(&qword_1000A3CA8);
    uint64_t v27 = (void *)((char *)a2 + *(int *)(v7 + 36));
    uint64_t v28 = (uint64_t *)((char *)a1 + *(int *)(v7 + 36));
    uint64_t v26 = *v28;
    swift_retain();
    *uint64_t v27 = v26;
    uint64_t v8 = sub_100009334(&qword_1000A3CB0);
    uint64_t v29 = (char *)v27 + *(int *)(v8 + 28);
    uint64_t v30 = (char *)v28 + *(int *)(v8 + 28);
    uint64_t v31 = sub_100089990();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v32 + 48))(v30, 1))
    {
      uint64_t v9 = sub_100009334(&qword_1000A3CE0);
      memcpy(v29, v30, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    memcpy((char *)a2 + *(int *)(v35 + 36), (char *)a1 + *(int *)(v35 + 36), 0x30uLL);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(a2, 0, 1, v35);
  }
  return a2;
}

void *sub_10007AFA4(uint64_t *a1, void *a2)
{
  uint64_t v34 = sub_100009334(&qword_1000A3CA8);
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v35 + 48))(a1, 1))
  {
    uint64_t v9 = sub_100009334(&qword_1000A4868);
    memcpy(a2, a1, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v11 = *a1;
    swift_retain();
    *a2 = v11;
    uint64_t v2 = sub_100009334(&qword_1000A3C88);
    uint64_t v13 = (void *)((char *)a2 + *(int *)(v2 + 36));
    uint64_t v14 = (uint64_t *)((char *)a1 + *(int *)(v2 + 36));
    uint64_t v12 = *v14;
    swift_retain();
    *uint64_t v13 = v12;
    uint64_t v3 = sub_100009334(&qword_1000A3C90);
    uint64_t v16 = (char *)v13 + *(int *)(v3 + 28);
    uint64_t v15 = (char *)v14 + *(int *)(v3 + 28);
    uint64_t v4 = sub_100089D10();
    (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v16, v15);
    uint64_t v5 = sub_100009334(&qword_1000A3C98);
    uint64_t v19 = (void *)((char *)a2 + *(int *)(v5 + 36));
    uint64_t v18 = (uint64_t *)((char *)a1 + *(int *)(v5 + 36));
    uint64_t v17 = *v18;
    swift_retain();
    void *v19 = v17;
    uint64_t v20 = v18[1];
    swift_retain();
    v19[1] = v20;
    uint64_t v6 = sub_100009334(&qword_1000A3CA0);
    uint64_t v23 = (void *)((char *)a2 + *(int *)(v6 + 36));
    uint64_t v22 = (uint64_t *)((char *)a1 + *(int *)(v6 + 36));
    uint64_t v21 = *v22;
    swift_retain();
    void *v23 = v21;
    uint64_t v24 = v22[1];
    swift_retain();
    v23[1] = v24;
    uint64_t v26 = (void *)((char *)a2 + *(int *)(v34 + 36));
    uint64_t v27 = (uint64_t *)((char *)a1 + *(int *)(v34 + 36));
    uint64_t v25 = *v27;
    swift_retain();
    void *v26 = v25;
    uint64_t v7 = sub_100009334(&qword_1000A3CB0);
    uint64_t v28 = (char *)v26 + *(int *)(v7 + 28);
    uint64_t v29 = (char *)v27 + *(int *)(v7 + 28);
    uint64_t v30 = sub_100089990();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v31 + 48))(v29, 1))
    {
      uint64_t v8 = sub_100009334(&qword_1000A3CE0);
      memcpy(v28, v29, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(a2, 0, 1, v34);
  }
  return a2;
}

void *sub_10007B394(uint64_t *a1, void *a2)
{
  uint64_t v36 = sub_100009334(&qword_1000A46D0);
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v37 + 48))(a1, 1))
  {
    uint64_t v10 = sub_100009334(&qword_1000A4870);
    memcpy(a2, a1, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v33 = sub_100009334(&qword_1000A46D8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a2, a1, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v12 = *a1;
      swift_retain();
      *a2 = v12;
      uint64_t v2 = sub_100009334(&qword_1000A3C88);
      uint64_t v14 = (void *)((char *)a2 + *(int *)(v2 + 36));
      uint64_t v15 = (uint64_t *)((char *)a1 + *(int *)(v2 + 36));
      uint64_t v13 = *v15;
      swift_retain();
      *uint64_t v14 = v13;
      uint64_t v3 = sub_100009334(&qword_1000A3C90);
      uint64_t v17 = (char *)v14 + *(int *)(v3 + 28);
      uint64_t v16 = (char *)v15 + *(int *)(v3 + 28);
      uint64_t v4 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v17, v16);
      uint64_t v5 = sub_100009334(&qword_1000A3C98);
      uint64_t v20 = (void *)((char *)a2 + *(int *)(v5 + 36));
      uint64_t v19 = (uint64_t *)((char *)a1 + *(int *)(v5 + 36));
      uint64_t v18 = *v19;
      swift_retain();
      *uint64_t v20 = v18;
      uint64_t v21 = v19[1];
      swift_retain();
      v20[1] = v21;
      uint64_t v6 = sub_100009334(&qword_1000A3CA0);
      uint64_t v24 = (void *)((char *)a2 + *(int *)(v6 + 36));
      uint64_t v23 = (uint64_t *)((char *)a1 + *(int *)(v6 + 36));
      uint64_t v22 = *v23;
      swift_retain();
      *uint64_t v24 = v22;
      uint64_t v25 = v23[1];
      swift_retain();
      v24[1] = v25;
      uint64_t v7 = sub_100009334(&qword_1000A3CA8);
      uint64_t v27 = (void *)((char *)a2 + *(int *)(v7 + 36));
      uint64_t v28 = (uint64_t *)((char *)a1 + *(int *)(v7 + 36));
      uint64_t v26 = *v28;
      swift_retain();
      *uint64_t v27 = v26;
      uint64_t v8 = sub_100009334(&qword_1000A3CB0);
      uint64_t v29 = (char *)v27 + *(int *)(v8 + 28);
      uint64_t v30 = (char *)v28 + *(int *)(v8 + 28);
      uint64_t v31 = sub_100089990();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v32 + 48))(v30, 1))
      {
        uint64_t v9 = sub_100009334(&qword_1000A3CE0);
        memcpy(v29, v30, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(a2, 0, 1, v36);
  }
  return a2;
}

unint64_t sub_10007B800()
{
  uint64_t v2 = qword_1000A48E8;
  if (!qword_1000A48E8)
  {
    sub_1000096C0(&qword_1000A4860);
    sub_1000799AC();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48E8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10007B894()
{
  uint64_t v2 = qword_1000A48F0;
  if (!qword_1000A48F0)
  {
    sub_1000096C0(&qword_1000A4868);
    sub_100042D0C();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48F0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10007B928()
{
  uint64_t v2 = qword_1000A48F8;
  if (!qword_1000A48F8)
  {
    sub_1000096C0(&qword_1000A4870);
    sub_10006F1C0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A48F8);
    return WitnessTable;
  }
  return v2;
}

char *sub_10007B9BC(char *a1, char *a2)
{
  uint64_t v6 = *(void *)a1;
  swift_retain();
  *(void *)a2 = v6;
  uint64_t v7 = *(int *)(sub_100009334(&qword_1000A3C88) + 36);
  uint64_t v8 = *(void *)&a1[v7];
  swift_retain();
  *(void *)&a2[v7] = v8;
  uint64_t v9 = *(int *)(sub_100009334(&qword_1000A3C90) + 28);
  uint64_t v2 = sub_100089D10();
  (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 16))(&a2[v7 + v9], &a1[v7 + v9]);
  uint64_t v10 = *(int *)(sub_100009334(&qword_1000A3C98) + 36);
  uint64_t v11 = *(void *)&a1[v10];
  swift_retain();
  *(void *)&a2[v10] = v11;
  uint64_t v12 = *(void *)&a1[v10 + 8];
  swift_retain();
  *(void *)&a2[v10 + 8] = v12;
  uint64_t v13 = *(int *)(sub_100009334(&qword_1000A3CA0) + 36);
  uint64_t v14 = *(void *)&a1[v13];
  swift_retain();
  *(void *)&a2[v13] = v14;
  uint64_t v15 = *(void *)&a1[v13 + 8];
  swift_retain();
  *(void *)&a2[v13 + 8] = v15;
  uint64_t v17 = *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
  uint64_t v19 = *(void *)&a1[v17];
  swift_retain();
  *(void *)&a2[v17] = v19;
  uint64_t v20 = *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
  uint64_t v21 = sub_100089990();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v22 + 48))(&a1[v17 + v20], 1))
  {
    uint64_t v3 = sub_100009334(&qword_1000A3CE0);
    memcpy(&a2[v17 + v20], &a1[v17 + v20], *(void *)(*(void *)(v3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void))(v22 + 16))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(&a2[v17 + v20], 0, 1, v21);
  }
  uint64_t v4 = sub_100009334(&qword_1000A4828);
  memcpy(&a2[*(int *)(v4 + 36)], &a1[*(int *)(v4 + 36)], 0x30uLL);
  return a2;
}

uint64_t sub_10007BD70@<X0>(uint64_t a1@<X8>)
{
  return sub_100067280(*(void *)(v1 + 16), a1);
}

unint64_t sub_10007BD78()
{
  uint64_t v2 = qword_1000A4910;
  if (!qword_1000A4910)
  {
    sub_1000096C0(&qword_1000A4908);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4910);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10007BDFC()
{
  uint64_t v2 = qword_1000A4918;
  if (!qword_1000A4918)
  {
    sub_1000096C0(&qword_1000A4900);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4918);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10007BE80(uint64_t a1)
{
  uint64_t v19 = *(int *)(sub_100009334(&qword_1000A47D8) + 44);
  uint64_t v1 = sub_100009334(&qword_1000A47E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1 + v19, 1))
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
      uint64_t v7 = a1 + v19 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v8 = v7 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v3 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v8);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v9 = a1 + v19 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v10 = v9 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v11 = sub_100089990();
      uint64_t v12 = *(void *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(v10, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      }
    }
    else
    {
      swift_release();
      uint64_t v13 = a1 + v19 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v14 = v13 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v2 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v14);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v15 = a1 + v19 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v16 = v15 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v17 = sub_100089990();
      uint64_t v18 = *(void *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v16, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      }
    }
  }
  uint64_t v6 = a1 + v19 + *(int *)(sub_100009334(&qword_1000A47F0) + 48);
  uint64_t v4 = sub_100009334(&qword_1000A47F8);
  (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v6);
  return a1;
}

unint64_t sub_10007C334()
{
  uint64_t v2 = qword_1000A4920;
  if (!qword_1000A4920)
  {
    sub_1000096C0(&qword_1000A4858);
    sub_1000096C0(&qword_1000A46C0);
    sub_10006EA0C();
    swift_getOpaqueTypeConformance2();
    sub_10006E780();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4920);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10007C420(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A4808);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(a1);
  return a1;
}

uint64_t sub_10007C480(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v68 = *(int *)(sub_100009334(&qword_1000A47D8) + 44);
  uint64_t v70 = sub_100009334(&qword_1000A47E0);
  uint64_t v71 = *(void *)(v70 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v71 + 48))(a1 + v68, 1))
  {
    uint64_t v19 = sub_100009334(&qword_1000A4850);
    memcpy((void *)(a2 + v68), (const void *)(a1 + v68), *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = *(void *)(a1 + v68);
      swift_retain();
      *(void *)(a2 + v68) = v25;
      uint64_t v10 = sub_100009334(&qword_1000A3C88);
      uint64_t v27 = (void *)(a2 + v68 + *(int *)(v10 + 36));
      uint64_t v28 = (uint64_t *)(a1 + v68 + *(int *)(v10 + 36));
      uint64_t v26 = *v28;
      swift_retain();
      *uint64_t v27 = v26;
      uint64_t v11 = sub_100009334(&qword_1000A3C90);
      uint64_t v30 = (char *)v27 + *(int *)(v11 + 28);
      uint64_t v29 = (char *)v28 + *(int *)(v11 + 28);
      uint64_t v12 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v12 - 8) + 16))(v30, v29);
      uint64_t v13 = sub_100009334(&qword_1000A3C98);
      uint64_t v33 = (void *)(a2 + v68 + *(int *)(v13 + 36));
      uint64_t v32 = (uint64_t *)(a1 + v68 + *(int *)(v13 + 36));
      uint64_t v31 = *v32;
      swift_retain();
      void *v33 = v31;
      uint64_t v34 = v32[1];
      swift_retain();
      v33[1] = v34;
      uint64_t v14 = sub_100009334(&qword_1000A3CA0);
      uint64_t v37 = (void *)(a2 + v68 + *(int *)(v14 + 36));
      uint64_t v36 = (uint64_t *)(a1 + v68 + *(int *)(v14 + 36));
      uint64_t v35 = *v36;
      swift_retain();
      void *v37 = v35;
      uint64_t v38 = v36[1];
      swift_retain();
      v37[1] = v38;
      uint64_t v15 = sub_100009334(&qword_1000A3CA8);
      unint64_t v40 = (void *)(a2 + v68 + *(int *)(v15 + 36));
      unint64_t v41 = (uint64_t *)(a1 + v68 + *(int *)(v15 + 36));
      uint64_t v39 = *v41;
      swift_retain();
      void *v40 = v39;
      uint64_t v16 = sub_100009334(&qword_1000A3CB0);
      __dst = (char *)v40 + *(int *)(v16 + 28);
      __src = (char *)v41 + *(int *)(v16 + 28);
      uint64_t v44 = sub_100089990();
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v45 + 48))(__src, 1))
      {
        uint64_t v17 = sub_100009334(&qword_1000A3CE0);
        memcpy(__dst, __src, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dst, __src, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
      }
    }
    else
    {
      uint64_t v46 = *(void *)(a1 + v68);
      swift_retain();
      *(void *)(a2 + v68) = v46;
      uint64_t v2 = sub_100009334(&qword_1000A3C88);
      uint64_t v48 = (void *)(a2 + v68 + *(int *)(v2 + 36));
      uint64_t v49 = (uint64_t *)(a1 + v68 + *(int *)(v2 + 36));
      uint64_t v47 = *v49;
      swift_retain();
      *uint64_t v48 = v47;
      uint64_t v3 = sub_100009334(&qword_1000A3C90);
      uint64_t v51 = (char *)v48 + *(int *)(v3 + 28);
      uint64_t v50 = (char *)v49 + *(int *)(v3 + 28);
      uint64_t v4 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v51, v50);
      uint64_t v5 = sub_100009334(&qword_1000A3C98);
      uint64_t v54 = (void *)(a2 + v68 + *(int *)(v5 + 36));
      uint64_t v53 = (uint64_t *)(a1 + v68 + *(int *)(v5 + 36));
      uint64_t v52 = *v53;
      swift_retain();
      *uint64_t v54 = v52;
      uint64_t v55 = v53[1];
      swift_retain();
      v54[1] = v55;
      uint64_t v6 = sub_100009334(&qword_1000A3CA0);
      uint64_t v58 = (void *)(a2 + v68 + *(int *)(v6 + 36));
      uint64_t v57 = (uint64_t *)(a1 + v68 + *(int *)(v6 + 36));
      uint64_t v56 = *v57;
      swift_retain();
      *uint64_t v58 = v56;
      uint64_t v59 = v57[1];
      swift_retain();
      v58[1] = v59;
      uint64_t v7 = sub_100009334(&qword_1000A3CA8);
      uint64_t v61 = (void *)(a2 + v68 + *(int *)(v7 + 36));
      uint64_t v62 = (uint64_t *)(a1 + v68 + *(int *)(v7 + 36));
      uint64_t v60 = *v62;
      swift_retain();
      *uint64_t v61 = v60;
      uint64_t v8 = sub_100009334(&qword_1000A3CB0);
      uint64_t v63 = (char *)v61 + *(int *)(v8 + 28);
      uint64_t v64 = (char *)v62 + *(int *)(v8 + 28);
      uint64_t v65 = sub_100089990();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v66 + 48))(v64, 1))
      {
        uint64_t v9 = sub_100009334(&qword_1000A3CE0);
        memcpy(v63, v64, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
    }
    uint64_t v18 = sub_100009334(&qword_1000A4828);
    memcpy((void *)(a2 + v68 + *(int *)(v18 + 36)), (const void *)(a1 + v68 + *(int *)(v18 + 36)), 0x30uLL);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(a2 + v68, 0, 1, v70);
  }
  uint64_t v20 = sub_100009334(&qword_1000A47F0);
  uint64_t v24 = a2 + v68 + *(int *)(v20 + 48);
  uint64_t v23 = a1 + v68 + *(int *)(v20 + 48);
  uint64_t v21 = sub_100009334(&qword_1000A47F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v24, v23);
  return a2;
}

uint64_t sub_10007CD60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_100009334(&qword_1000A4808);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a2, a1);
  uint64_t v3 = sub_100009334(&qword_1000A4858);
  uint64_t result = a2;
  *(void *)(a2 + *(int *)(v3 + 36)) = *(void *)(a1 + *(int *)(v3 + 36));
  return result;
}

unint64_t sub_10007CDEC()
{
  uint64_t v2 = qword_1000A4928;
  if (!qword_1000A4928)
  {
    sub_1000096C0(&qword_1000A47E0);
    sub_1000799AC();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4928);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10007CE88(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A47E0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1, 1))
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
      uint64_t v5 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v6 = v5 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v3 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 8))(v6);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v7 = a1 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v8 = v7 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v9 = sub_100089990();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v10 + 48))(v8, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
    }
    else
    {
      swift_release();
      uint64_t v11 = a1 + *(int *)(sub_100009334(&qword_1000A3C88) + 36);
      swift_release();
      uint64_t v12 = v11 + *(int *)(sub_100009334(&qword_1000A3C90) + 28);
      uint64_t v2 = sub_100089D10();
      (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8))(v12);
      sub_100009334(&qword_1000A3C98);
      swift_release();
      swift_release();
      sub_100009334(&qword_1000A3CA0);
      swift_release();
      swift_release();
      uint64_t v13 = a1 + *(int *)(sub_100009334(&qword_1000A3CA8) + 36);
      swift_release();
      uint64_t v14 = v13 + *(int *)(sub_100009334(&qword_1000A3CB0) + 28);
      uint64_t v15 = sub_100089990();
      uint64_t v16 = *(void *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v14, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      }
    }
  }
  return a1;
}

void *sub_10007D2A0(void *a1, void *a2)
{
  uint64_t v43 = sub_100009334(&qword_1000A47E0);
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v44 + 48))(a1, 1))
  {
    uint64_t v19 = sub_100009334(&qword_1000A4850);
    memcpy(a2, a1, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a2 = *a1;
      uint64_t v10 = sub_100009334(&qword_1000A3C88);
      uint64_t v21 = (void *)((char *)a2 + *(int *)(v10 + 36));
      uint64_t v22 = (void *)((char *)a1 + *(int *)(v10 + 36));
      *uint64_t v21 = *v22;
      uint64_t v11 = sub_100009334(&qword_1000A3C90);
      uint64_t v24 = (char *)v21 + *(int *)(v11 + 28);
      uint64_t v23 = (char *)v22 + *(int *)(v11 + 28);
      uint64_t v12 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v12 - 8) + 32))(v24, v23);
      uint64_t v13 = sub_100009334(&qword_1000A3C98);
      *(_OWORD *)((char *)a2 + *(int *)(v13 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v13 + 36));
      uint64_t v14 = sub_100009334(&qword_1000A3CA0);
      *(_OWORD *)((char *)a2 + *(int *)(v14 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v14 + 36));
      uint64_t v15 = sub_100009334(&qword_1000A3CA8);
      uint64_t v25 = (void *)((char *)a2 + *(int *)(v15 + 36));
      uint64_t v26 = (void *)((char *)a1 + *(int *)(v15 + 36));
      void *v25 = *v26;
      uint64_t v16 = sub_100009334(&qword_1000A3CB0);
      __dst = (char *)v25 + *(int *)(v16 + 28);
      __src = (char *)v26 + *(int *)(v16 + 28);
      uint64_t v29 = sub_100089990();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v30 + 48))(__src, 1))
      {
        uint64_t v17 = sub_100009334(&qword_1000A3CE0);
        memcpy(__dst, __src, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(__dst, __src, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
      }
    }
    else
    {
      *a2 = *a1;
      uint64_t v2 = sub_100009334(&qword_1000A3C88);
      uint64_t v31 = (void *)((char *)a2 + *(int *)(v2 + 36));
      uint64_t v32 = (void *)((char *)a1 + *(int *)(v2 + 36));
      *uint64_t v31 = *v32;
      uint64_t v3 = sub_100009334(&qword_1000A3C90);
      uint64_t v34 = (char *)v31 + *(int *)(v3 + 28);
      uint64_t v33 = (char *)v32 + *(int *)(v3 + 28);
      uint64_t v4 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(v34, v33);
      uint64_t v5 = sub_100009334(&qword_1000A3C98);
      *(_OWORD *)((char *)a2 + *(int *)(v5 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v5 + 36));
      uint64_t v6 = sub_100009334(&qword_1000A3CA0);
      *(_OWORD *)((char *)a2 + *(int *)(v6 + 36)) = *(_OWORD *)((char *)a1 + *(int *)(v6 + 36));
      uint64_t v7 = sub_100009334(&qword_1000A3CA8);
      uint64_t v35 = (void *)((char *)a2 + *(int *)(v7 + 36));
      uint64_t v36 = (void *)((char *)a1 + *(int *)(v7 + 36));
      *uint64_t v35 = *v36;
      uint64_t v8 = sub_100009334(&qword_1000A3CB0);
      uint64_t v37 = (char *)v35 + *(int *)(v8 + 28);
      uint64_t v38 = (char *)v36 + *(int *)(v8 + 28);
      uint64_t v39 = sub_100089990();
      uint64_t v40 = *(void *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v40 + 48))(v38, 1))
      {
        uint64_t v9 = sub_100009334(&qword_1000A3CE0);
        memcpy(v37, v38, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
    }
    uint64_t v18 = sub_100009334(&qword_1000A4828);
    memcpy((char *)a2 + *(int *)(v18 + 36), (char *)a1 + *(int *)(v18 + 36), 0x30uLL);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(a2, 0, 1, v43);
  }
  return a2;
}

void *sub_10007D914(uint64_t *a1, void *a2)
{
  uint64_t v65 = sub_100009334(&qword_1000A47E0);
  uint64_t v66 = *(void *)(v65 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v66 + 48))(a1, 1))
  {
    uint64_t v19 = sub_100009334(&qword_1000A4850);
    memcpy(a2, a1, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    sub_100009334(&qword_1000A47E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = *a1;
      swift_retain();
      *a2 = v21;
      uint64_t v10 = sub_100009334(&qword_1000A3C88);
      uint64_t v23 = (void *)((char *)a2 + *(int *)(v10 + 36));
      uint64_t v24 = (uint64_t *)((char *)a1 + *(int *)(v10 + 36));
      uint64_t v22 = *v24;
      swift_retain();
      void *v23 = v22;
      uint64_t v11 = sub_100009334(&qword_1000A3C90);
      uint64_t v26 = (char *)v23 + *(int *)(v11 + 28);
      uint64_t v25 = (char *)v24 + *(int *)(v11 + 28);
      uint64_t v12 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v12 - 8) + 16))(v26, v25);
      uint64_t v13 = sub_100009334(&qword_1000A3C98);
      uint64_t v29 = (void *)((char *)a2 + *(int *)(v13 + 36));
      uint64_t v28 = (uint64_t *)((char *)a1 + *(int *)(v13 + 36));
      uint64_t v27 = *v28;
      swift_retain();
      void *v29 = v27;
      uint64_t v30 = v28[1];
      swift_retain();
      v29[1] = v30;
      uint64_t v14 = sub_100009334(&qword_1000A3CA0);
      uint64_t v33 = (void *)((char *)a2 + *(int *)(v14 + 36));
      uint64_t v32 = (uint64_t *)((char *)a1 + *(int *)(v14 + 36));
      uint64_t v31 = *v32;
      swift_retain();
      void *v33 = v31;
      uint64_t v34 = v32[1];
      swift_retain();
      v33[1] = v34;
      uint64_t v15 = sub_100009334(&qword_1000A3CA8);
      uint64_t v36 = (void *)((char *)a2 + *(int *)(v15 + 36));
      uint64_t v37 = (uint64_t *)((char *)a1 + *(int *)(v15 + 36));
      uint64_t v35 = *v37;
      swift_retain();
      void *v36 = v35;
      uint64_t v16 = sub_100009334(&qword_1000A3CB0);
      __dst = (char *)v36 + *(int *)(v16 + 28);
      __src = (char *)v37 + *(int *)(v16 + 28);
      uint64_t v40 = sub_100089990();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v41 + 48))(__src, 1))
      {
        uint64_t v17 = sub_100009334(&qword_1000A3CE0);
        memcpy(__dst, __src, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(__dst, __src, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
      }
    }
    else
    {
      uint64_t v42 = *a1;
      swift_retain();
      *a2 = v42;
      uint64_t v2 = sub_100009334(&qword_1000A3C88);
      uint64_t v44 = (void *)((char *)a2 + *(int *)(v2 + 36));
      uint64_t v45 = (uint64_t *)((char *)a1 + *(int *)(v2 + 36));
      uint64_t v43 = *v45;
      swift_retain();
      *uint64_t v44 = v43;
      uint64_t v3 = sub_100009334(&qword_1000A3C90);
      uint64_t v47 = (char *)v44 + *(int *)(v3 + 28);
      uint64_t v46 = (char *)v45 + *(int *)(v3 + 28);
      uint64_t v4 = sub_100089D10();
      (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(v47, v46);
      uint64_t v5 = sub_100009334(&qword_1000A3C98);
      uint64_t v50 = (void *)((char *)a2 + *(int *)(v5 + 36));
      uint64_t v49 = (uint64_t *)((char *)a1 + *(int *)(v5 + 36));
      uint64_t v48 = *v49;
      swift_retain();
      *uint64_t v50 = v48;
      uint64_t v51 = v49[1];
      swift_retain();
      v50[1] = v51;
      uint64_t v6 = sub_100009334(&qword_1000A3CA0);
      uint64_t v54 = (void *)((char *)a2 + *(int *)(v6 + 36));
      uint64_t v53 = (uint64_t *)((char *)a1 + *(int *)(v6 + 36));
      uint64_t v52 = *v53;
      swift_retain();
      *uint64_t v54 = v52;
      uint64_t v55 = v53[1];
      swift_retain();
      v54[1] = v55;
      uint64_t v7 = sub_100009334(&qword_1000A3CA8);
      uint64_t v57 = (void *)((char *)a2 + *(int *)(v7 + 36));
      uint64_t v58 = (uint64_t *)((char *)a1 + *(int *)(v7 + 36));
      uint64_t v56 = *v58;
      swift_retain();
      *uint64_t v57 = v56;
      uint64_t v8 = sub_100009334(&qword_1000A3CB0);
      uint64_t v59 = (char *)v57 + *(int *)(v8 + 28);
      uint64_t v60 = (char *)v58 + *(int *)(v8 + 28);
      uint64_t v61 = sub_100089990();
      uint64_t v62 = *(void *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v62 + 48))(v60, 1))
      {
        uint64_t v9 = sub_100009334(&qword_1000A3CE0);
        memcpy(v59, v60, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
    }
    uint64_t v18 = sub_100009334(&qword_1000A4828);
    memcpy((char *)a2 + *(int *)(v18 + 36), (char *)a1 + *(int *)(v18 + 36), 0x30uLL);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(a2, 0, 1, v65);
  }
  return a2;
}

unint64_t sub_10007E0D0()
{
  uint64_t v2 = qword_1000A4930;
  if (!qword_1000A4930)
  {
    sub_1000096C0(&qword_1000A4850);
    sub_10007CDEC();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4930);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10007E164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006D334(a1, a2);
}

uint64_t sub_10007E17C(uint64_t a1)
{
  return sub_10006D4C4(a1);
}

uint64_t sub_10007E194()
{
  id v10 = [v0 serializedRepresentations];
  if (v10)
  {
    uint64_t v8 = sub_10008A190();

    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v9 = 0;
  }
  if (v9)
  {
    sub_100009334(&qword_1000A35B0);
    sub_10007E420();
    sub_10008A100();
    uint64_t v4 = sub_100009334(&qword_1000A4940);
    unint64_t v5 = sub_100015650();
    unint64_t v1 = sub_10007E520();
    uint64_t v7 = sub_10001D15C((void (*)(char *, char *))sub_10007E4A4, 0, v4, v5, (uint64_t)&type metadata for Never, v1, (uint64_t)&protocol witness table for Never, v6);
    sub_10000ADA0();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    sub_100015650();
    return sub_10008A6C0();
  }
}

uint64_t sub_10007E3B8@<X0>(uint64_t *a1@<X8>)
{
  variable initialization expression of MFGetAccountsIntentResponse.code();
  uint64_t result = sub_1000895B0();
  *a1 = result;
  a1[1] = v2;
  return result;
}

unint64_t sub_10007E420()
{
  uint64_t v2 = qword_1000A4938;
  if (!qword_1000A4938)
  {
    sub_1000096C0(&qword_1000A35B0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4938);
    return WitnessTable;
  }
  return v2;
}

id sub_10007E4A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  sub_100015650();
  sub_10007E5A4(v3, v4);
  id result = sub_10007E630(v3, v4);
  *a2 = result;
  return result;
}

unint64_t sub_10007E520()
{
  uint64_t v2 = qword_1000A4948;
  if (!qword_1000A4948)
  {
    sub_1000096C0(&qword_1000A4940);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4948);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10007E5A4(uint64_t a1, unint64_t a2)
{
  if (((a2 >> 62) & 3) == 1) {
    return swift_retain();
  }
  if (((a2 >> 62) & 3) == 2)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

id sub_10007E630(uint64_t a1, unint64_t a2)
{
  Class isa = sub_1000895C0().super.isa;
  id v6 = [(id)swift_getObjCClassFromMetadata() objectIDFromSerializedRepresentation:isa];

  sub_10007E6A4(a1, a2);
  return v6;
}

uint64_t sub_10007E6A4(uint64_t a1, unint64_t a2)
{
  if (((a2 >> 62) & 3) == 1) {
    return swift_release();
  }
  if (((a2 >> 62) & 3) == 2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_10007E730(void *a1)
{
  unint64_t v36 = a1[4];
  sub_1000154C0(a1[3], v36);
  if (v36)
  {
    unint64_t v2 = v36;
    char v1 = 1;
  }
  else
  {
    unint64_t v2 = 0;
    char v1 = 0;
  }
  if (v1)
  {
    uint64_t v34 = (void *)sub_100019B94();
    if (v34)
    {
      id v32 = [self predicateForMessagesInMailboxWithObjectID:v34];

      swift_bridgeObjectRelease();
      return v32;
    }
    else
    {
      sub_10001F33C();
      id v31 = sub_10007EE98(0);
      swift_bridgeObjectRelease();
      return v31;
    }
  }
  else
  {
    switch(v2)
    {
      case 0uLL:
        uint64_t v26 = a1[2];
        swift_bridgeObjectRetain();
        if (!v26) {
          goto LABEL_22;
        }
        swift_bridgeObjectRetain();
        sub_100009334(&qword_1000A35C8);
        sub_10001AE7C();
        char v25 = sub_10008A340();
        sub_10000ADA0();
        if (v25)
        {
          swift_bridgeObjectRelease();
LABEL_22:
          id v33 = [self predicateForMessagesInMailboxWithType:7];
        }
        else
        {
          id v22 = self;
          swift_bridgeObjectRetain();
          sub_100015650();
          sub_10007F408();
          sub_10008A570();
          Class isa = sub_10008A180().super.isa;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v24 = [v22 predicateForMessagesInMailboxesWithObjectIDs:isa];

          if (sub_10001A878())
          {
            sub_10001F2D4();
            sub_10001F33C();
            sub_10008A6C0();
            uint64_t v20 = v5;
            id v6 = v24;
            *uint64_t v20 = v24;
            v20[1] = [self predicateForPrimaryMessages];
            sub_100007A04();
            id v21 = sub_100024450();

            swift_bridgeObjectRelease();
            id v33 = v21;
          }
          else
          {
            swift_bridgeObjectRelease();
            id v33 = v24;
          }
        }
        break;
      case 1uLL:
        uint64_t v30 = (void *)sub_100019B94();
        if (v30)
        {
          id v29 = [self predicateForMessagesInMailboxWithObjectID:v30];
          if (sub_10001A878())
          {
            sub_10001F2D4();
            sub_10001F33C();
            sub_10008A6C0();
            uint64_t v27 = v3;
            id v4 = v29;
            *uint64_t v27 = v29;
            v27[1] = [self predicateForPrimaryMessages];
            sub_100007A04();
            id v28 = sub_100024450();

            return v28;
          }
          else
          {

            return v29;
          }
        }
        else
        {
          sub_10001F33C();
          return sub_10007EE98(0);
        }
      case 2uLL:
        id v18 = [self predicateForFlaggedMessages];
        type metadata accessor for ECMailboxType();
        sub_10008A6C0();
        *uint64_t v7 = 5;
        v7[1] = 6;
        void v7[2] = 4;
        v7[3] = 3;
        void v7[4] = 1;
        sub_100007A04();
        id v19 = sub_10007EEE8();
        swift_bridgeObjectRelease();

        return v19;
      case 3uLL:
        id v16 = [self predicateForUnreadMessages];
        type metadata accessor for ECMailboxType();
        sub_10008A6C0();
        *uint64_t v8 = 7;
        sub_100007A04();
        id v17 = sub_10007F178();
        swift_bridgeObjectRelease();

        return v17;
      case 4uLL:
        id v14 = [self predicateForIsVIP:1];
        type metadata accessor for ECMailboxType();
        sub_10008A6C0();
        *uint64_t v9 = 7;
        sub_100007A04();
        id v15 = sub_10007F178();
        swift_bridgeObjectRelease();

        return v15;
      case 5uLL:
        id v12 = [self predicateForTodayMessages];
        type metadata accessor for ECMailboxType();
        sub_10008A6C0();
        *id v10 = 7;
        sub_100007A04();
        id v13 = sub_10007F178();
        swift_bridgeObjectRelease();

        return v13;
      default:
        JUMPOUT(0);
    }
  }
  return v33;
}

id sub_10007EE98(char a1)
{
  id v1 = [(id)swift_getObjCClassFromMetadata() predicateWithValue:a1 & 1];

  return v1;
}

id sub_10007EEE8()
{
  id v14 = self;
  sub_100026C2C();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v16 = sub_100009334(&qword_1000A4958);
  unint64_t v0 = sub_10007F628();
  sub_10001D15C((void (*)(char *, char *))sub_10007F5F4, KeyPath, v16, (uint64_t)&type metadata for Int, (uint64_t)&type metadata for Never, v0, (uint64_t)&protocol witness table for Never, v17);
  swift_release();
  swift_release();
  uint64_t v10 = sub_100009334(&qword_1000A4968);
  unint64_t v11 = sub_10007F6AC();
  unint64_t v1 = sub_10007F714();
  uint64_t v12 = sub_10001D15C((void (*)(char *, char *))sub_10007F4D0, 0, v10, v11, (uint64_t)&type metadata for Never, v1, (uint64_t)&protocol witness table for Never, v17);
  sub_10000ADA0();
  id v6 = sub_10007F56C(v12, 1);
  id v8 = [v14 predicateForMessagesWithMailboxScope:];

  sub_10001F2D4();
  sub_10001F33C();
  sub_10008A6C0();
  uint64_t v7 = v2;
  id v3 = v13;
  *uint64_t v7 = v13;
  id v4 = v8;
  v7[1] = v8;
  sub_100007A04();
  id v9 = sub_100024450();

  return v9;
}

id sub_10007F178()
{
  id v14 = self;
  sub_100026C2C();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v16 = sub_100009334(&qword_1000A4958);
  unint64_t v0 = sub_10007F628();
  sub_10001D15C((void (*)(char *, char *))sub_10007F5F4, KeyPath, v16, (uint64_t)&type metadata for Int, (uint64_t)&type metadata for Never, v0, (uint64_t)&protocol witness table for Never, v17);
  swift_release();
  swift_release();
  uint64_t v10 = sub_100009334(&qword_1000A4968);
  unint64_t v11 = sub_10007F6AC();
  unint64_t v1 = sub_10007F714();
  uint64_t v12 = sub_10001D15C((void (*)(char *, char *))sub_10007F4D0, 0, v10, v11, (uint64_t)&type metadata for Never, v1, (uint64_t)&protocol witness table for Never, v17);
  sub_10000ADA0();
  id v6 = sub_10007F56C(v12, 0);
  id v8 = [v14 predicateForMessagesWithMailboxScope:];

  sub_10001F2D4();
  sub_10001F33C();
  sub_10008A6C0();
  uint64_t v7 = v2;
  id v3 = v13;
  *uint64_t v7 = v13;
  id v4 = v8;
  v7[1] = v8;
  sub_100007A04();
  id v9 = sub_100024450();

  return v9;
}

unint64_t sub_10007F408()
{
  uint64_t v2 = qword_1000A4950;
  if (!qword_1000A4950)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A4950);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_10007F470()
{
  return swift_release();
}

id sub_10007F4D0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_10007F6AC();
  id result = sub_10007F52C(v3);
  *a2 = result;
  return result;
}

id sub_10007F52C(uint64_t a1)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_10007F798(a1);
}

id sub_10007F56C(uint64_t a1, char a2)
{
  sub_10007F6AC();
  Class isa = sub_10008A180().super.isa;
  id v5 = [(id)swift_getObjCClassFromMetadata() mailboxScopeForMailboxTypes:isa forExclusion:a2 & 1];

  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10007F5F4()
{
  return sub_10007F470();
}

unint64_t sub_10007F628()
{
  uint64_t v2 = qword_1000A4960;
  if (!qword_1000A4960)
  {
    sub_1000096C0(&qword_1000A4958);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4960);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10007F6AC()
{
  uint64_t v2 = qword_1000A4970;
  if (!qword_1000A4970)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A4970);
    return ObjCClassMetadata;
  }
  return v2;
}

unint64_t sub_10007F714()
{
  uint64_t v2 = qword_1000A4978;
  if (!qword_1000A4978)
  {
    sub_1000096C0(&qword_1000A4968);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4978);
    return WitnessTable;
  }
  return v2;
}

id sub_10007F798(uint64_t a1)
{
  return [v1 initWithInteger:a1];
}

uint64_t sub_10007F7C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
}

uint64_t sub_10007F804@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v49 = 0;
  uint64_t v34 = sub_100080928;
  uint64_t v35 = sub_100080DCC;
  uint64_t v70 = 0;
  uint64_t v69 = 0;
  unint64_t v67 = 0;
  uint64_t v36 = 0;
  char v65 = 0;
  char v63 = 0;
  uint64_t v37 = sub_1000896A0();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = v37 - 8;
  unint64_t v40 = (*(void *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(0);
  uint64_t v41 = (char *)v14 - v40;
  uint64_t v42 = sub_1000896B0();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = v42 - 8;
  unint64_t v45 = (*(void *)(v43 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)v14 - v45;
  unint64_t v47 = (*(void *)(*(void *)(sub_100009334(&qword_1000A4980) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v49);
  uint64_t v48 = (uint64_t)v14 - v47;
  uint64_t v50 = sub_100089630();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = v50 - 8;
  unint64_t v53 = (*(void *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = __chkstk_darwin(v49);
  uint64_t v54 = (char *)v14 - v53;
  unint64_t v55 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v56 = (char *)v14 - v55;
  unint64_t v57 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  uint64_t v58 = (char *)v14 - v57;
  uint64_t v70 = (char *)v14 - v57;
  uint64_t v69 = v1;
  unint64_t v59 = *(void *)(v1 + *(int *)(type metadata accessor for Snapshot() + 20));
  sub_100032ED4(v59);
  if (v59 < 2)
  {
    v14[0] = sub_1000830FC();
    v14[1] = &v68;
    swift_beginAccess();
    uint64_t v13 = sub_100089F80();
    (*(void (**)(uint64_t, void))(*(void *)(v13 - 8) + 16))(v33, v14[0]);
    return swift_endAccess();
  }
  unint64_t v32 = v59;
  uint64_t v6 = v36;
  unint64_t v27 = v59;
  unint64_t v67 = v59;
  unint64_t v66 = v59;
  uint64_t v28 = sub_100009334(&qword_1000A35A0);
  unint64_t v29 = sub_100080A18();
  uint64_t result = sub_10008A130();
  uint64_t v30 = v6;
  int v31 = result;
  if (v6)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  char v65 = v31 & 1;
  if (v31)
  {
    uint64_t v25 = sub_100083274();
    uint64_t v26 = &v60;
    swift_beginAccess();
    uint64_t v8 = sub_100089F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v33, v25);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  sub_100089690();
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v41, enum case for Calendar.Component.hour(_:), v37);
  sub_100089620();
  sub_10003ECDC();
  unsigned int v24 = 1;
  sub_100089680();
  id v22 = *(void (**)(char *, uint64_t))(v51 + 8);
  uint64_t v23 = v51 + 8;
  v22(v56, v50);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v42);
  if ((*(unsigned int (**)(uint64_t, void, uint64_t))(v51 + 48))(v48, v24, v50) == 1)
  {
    sub_1000895E0();
    sub_100080A9C(v48);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v58, v48, v50);
  }
  uint64_t v9 = v30;
  unint64_t v64 = v27;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v54, v58, v50);
  uint64_t v20 = v14;
  __chkstk_darwin(v35);
  v14[-2] = v10;
  uint64_t result = sub_10008A130();
  int v21 = result;
  if (v9) {
    goto LABEL_15;
  }
  int v19 = v21;
  v22(v54, v50);
  char v63 = v19 & 1;
  if (v19)
  {
    uint64_t v17 = sub_1000832E4();
    id v18 = &v61;
    swift_beginAccess();
    uint64_t v11 = sub_100089F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v33, v17);
  }
  else
  {
    uint64_t v15 = sub_1000830FC();
    uint64_t v16 = &v62;
    swift_beginAccess();
    uint64_t v12 = sub_100089F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v33, v15);
  }
  swift_endAccess();
  v22(v58, v50);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Snapshot()
{
  uint64_t v1 = qword_1000A49F8;
  if (!qword_1000A49F8) {
    return swift_getSingletonMetadata();
  }
  return v1;
}

uint64_t sub_1000801D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X8>)
{
  sub_10000E8F8(a1, a5);
  uint64_t result = type metadata accessor for Snapshot();
  uint64_t v6 = a5 + *(int *)(result + 20);
  *(void *)uint64_t v6 = a2;
  *(void *)(v6 + 8) = a3;
  *(_WORD *)(v6 + 16) = a4;
  return result;
}

uint64_t sub_10008023C(unint64_t a1, uint64_t a2, unsigned __int16 a3)
{
  if (a1 < 2) {
    LOBYTE(v4) = 0;
  }
  else {
    int v4 = HIBYTE(a3);
  }
  return v4 & 1;
}

uint64_t sub_1000802D0(unint64_t a1, uint64_t a2)
{
  if (a1 < 2) {
    return 0;
  }
  return a2;
}

unint64_t sub_100080384(unint64_t a1)
{
  if (a1 < 2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return a1;
}

BOOL sub_10008041C(unint64_t a1, uint64_t a2, __int16 a3)
{
  return sub_1000804B0(a1, a2, a3, 0, 0, 0);
}

BOOL sub_100080464(unint64_t a1, uint64_t a2, __int16 a3)
{
  return sub_1000804B0(a1, a2, a3, 1uLL, 0, 0);
}

BOOL sub_1000804B0(unint64_t a1, uint64_t a2, __int16 a3, unint64_t a4, uint64_t a5, __int16 a6)
{
  unint64_t v23 = a1;
  uint64_t v24 = a2;
  __int16 v25 = a3;
  unint64_t v20 = a4;
  uint64_t v21 = a5;
  __int16 v22 = a6;
  sub_100032ED4(a1);
  sub_100032ED4(a4);
  if (!a1)
  {
    if (!a4)
    {
      sub_1000433C0(0);
      sub_1000433C0(0);
      return 1;
    }
LABEL_22:
    sub_1000433C0(a1);
    sub_1000433C0(a4);
    return 0;
  }
  if (a1 == 1)
  {
    if (a4 == 1)
    {
      sub_1000433C0(1uLL);
      sub_1000433C0(1uLL);
      return 1;
    }
    goto LABEL_22;
  }
  if (a4 < 2) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  type metadata accessor for Message();
  sub_100082FF4();
  if ((sub_10008A210() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000433C0(a1);
    sub_1000433C0(a4);
    return 0;
  }
  uint64_t v16 = a2;
  char v17 = a3 & 1;
  uint64_t v18 = a5;
  char v19 = a6 & 1;
  if ((a3 & 1) == 0)
  {
    sub_100038904((uint64_t)&v16, (uint64_t)&v15);
    if ((v19 & 1) == 0)
    {
      BOOL v8 = v15 == v18;
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  if ((v19 & 1) == 0)
  {
LABEL_13:
    BOOL v8 = 0;
    goto LABEL_11;
  }
  BOOL v8 = 1;
LABEL_11:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000433C0(a1);
  sub_1000433C0(a4);
  return v8 && (HIBYTE(a3) & 1) == (HIBYTE(a6) & 1);
}

BOOL sub_1000808EC(uint64_t a1, uint64_t a2)
{
  return sub_1000804B0(*(void *)a1, *(void *)(a1 + 8), *(_WORD *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(_WORD *)(a2 + 16));
}

uint64_t sub_100080928(uint64_t a1)
{
  uint64_t v5 = a1;
  uint64_t v10 = 0;
  uint64_t v6 = type metadata accessor for Message();
  unint64_t v7 = (*(void *)(*(void *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = (uint64_t)&v3 - v7;
  uint64_t v10 = (char *)__chkstk_darwin(v5);
  int v9 = v10[*(int *)(v1 + 36)];
  sub_100014B98(v10, (char *)&v3 - v7);
  if (v9) {
    int v4 = *(unsigned __int8 *)(v8 + *(int *)(v6 + 40));
  }
  else {
    int v4 = 0;
  }
  int v3 = v4;
  sub_100014EC0(v8);
  return v3 & 1;
}

unint64_t sub_100080A18()
{
  uint64_t v2 = qword_1000A4988;
  if (!qword_1000A4988)
  {
    sub_1000096C0(&qword_1000A35A0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4988);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100080A9C(uint64_t a1)
{
  uint64_t v3 = sub_100089630();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return a1;
}

uint64_t sub_100080B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a1;
  uint64_t v21 = a2;
  uint64_t v28 = 0;
  uint64_t v27 = 0;
  uint64_t v11 = 0;
  uint64_t v22 = sub_100089630();
  uint64_t v19 = *(void *)(v22 - 8);
  uint64_t v20 = v22 - 8;
  unint64_t v12 = (*(void *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = __chkstk_darwin(0);
  uint64_t v13 = &v7[-v12];
  unint64_t v14 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  unint64_t v23 = &v7[-v14];
  uint64_t v16 = type metadata accessor for Message();
  unint64_t v17 = (*(void *)(*(void *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v4 = (char *)__chkstk_darwin(v15);
  uint64_t v18 = &v7[-v17];
  uint64_t v28 = v4;
  uint64_t v27 = v21;
  int v26 = v4[*(int *)(v5 + 40)];
  sub_100014B98(v4, &v7[-v17]);
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v25 = v19 + 16;
  v24(v23, v21, v22);
  if (v26)
  {
    v24(v13, (uint64_t)&v18[*(int *)(v16 + 32)], v22);
    sub_100083078();
    int v9 = sub_10008A050();
    (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v13, v22);
    int v10 = v9;
  }
  else
  {
    int v10 = 0;
  }
  int v8 = v10;
  sub_100014EC0((uint64_t)v18);
  (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v23, v22);
  return v8 & 1;
}

uint64_t sub_100080DCC(uint64_t a1)
{
  return sub_100080B4C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100080DF8(uint64_t a1)
{
  if (!a1) {
    return sub_10008A0B0("Empty", 5uLL, 1);
  }
  if (a1 == 1) {
    return sub_10008A0B0("Error", 5uLL, 1);
  }
  swift_bridgeObjectRetain();
  sub_10008A6B0();
  v4._countAndFlagsBits = sub_10008A0B0("Content: messages:", 0x12uLL, 1);
  sub_10008A6A0(v4);
  swift_bridgeObjectRelease();
  sub_100009334(&qword_1000A35A0);
  sub_1000810FC();
  sub_10008A680();
  v5._countAndFlagsBits = sub_10008A0B0(", unreadCount:", 0xEuLL, 1);
  sub_10008A6A0(v5);
  swift_bridgeObjectRelease();
  sub_100009334(&qword_1000A4998);
  sub_10008A090();
  sub_10008A690();
  sub_100009A54();
  v6._countAndFlagsBits = sub_10008A0B0("", 0, 1);
  sub_10008A6A0(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100009A54();
  uint64_t v2 = sub_10008A0A0();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1000810FC()
{
  uint64_t v2 = qword_1000A4990;
  if (!qword_1000A4990)
  {
    sub_1000096C0(&qword_1000A35A0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4990);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100081180()
{
  return sub_100080DF8(*v0);
}

unint64_t sub_1000811A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v21 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v21 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    swift_retain();
    *(void *)a1 = v16;
    return *(void *)a1 + ((v21 + 16) & ~(unint64_t)v21);
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v14 = a2[1];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 8) = v14;
    uint64_t v15 = a2[2];
    swift_bridgeObjectRetain();
    *(void *)(a1 + 16) = v15;
    if ((unint64_t)a2[4] <= 5)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    }
    else
    {
      *(void *)(a1 + 24) = a2[3];
      uint64_t v13 = a2[4];
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v13;
    }
    uint64_t v3 = type metadata accessor for Mailbox();
    __dst = (void *)(a1 + *(int *)(v3 + 28));
    __src = (char *)a2 + *(int *)(v3 + 28);
    uint64_t v11 = sub_1000895A0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 48))(__src, 1))
    {
      uint64_t v4 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, __src, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v7 = a1 + *(int *)(a3 + 20);
    int v8 = (uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    if ((unint64_t)*v8 < 2)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *(_WORD *)(v7 + 16) = *((_WORD *)v8 + 8);
    }
    else
    {
      uint64_t v6 = *v8;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v7 = v6;
      *(void *)(v7 + 8) = v8[1];
      *(unsigned char *)(v7 + 16) = *((unsigned char *)v8 + 16);
      *(unsigned char *)(v7 + 17) = *((unsigned char *)v8 + 17);
    }
    return a1;
  }
}

uint64_t sub_1000814D0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) > 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = a1 + *(int *)(type metadata accessor for Mailbox() + 28);
  uint64_t v4 = sub_1000895A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 48))(v3, 1);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  if (*(void *)(a1 + *(int *)(a2 + 20)) >= 2uLL) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100081630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v15 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v15;
  uint64_t v17 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v17;
  if (*(void *)(a2 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v13 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v13;
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = (void *)(a1 + *(int *)(v3 + 28));
  __src = (void *)(a2 + *(int *)(v3 + 28));
  uint64_t v11 = sub_1000895A0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v12 + 48))(__src, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(__dst, __src, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v7 = a1 + *(int *)(a3 + 20);
  int v8 = (uint64_t *)(a2 + *(int *)(a3 + 20));
  if ((unint64_t)*v8 < 2)
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_WORD *)(v7 + 16) = *((_WORD *)v8 + 8);
  }
  else
  {
    uint64_t v6 = *v8;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v7 = v6;
    *(void *)(v7 + 8) = v8[1];
    *(unsigned char *)(v7 + 16) = *((unsigned char *)v8 + 16);
    *(unsigned char *)(v7 + 17) = *((unsigned char *)v8 + 17);
  }
  return a1;
}

uint64_t sub_1000818CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v19 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 8) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = v21;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    if (*(void *)(a2 + 32) <= 5uLL)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      *(void *)(a1 + 32) = v16;
    }
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v17 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)(a1 + 32) = v17;
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = (void *)(a1 + *(int *)(v3 + 28));
  __src = (void *)(a2 + *(int *)(v3 + 28));
  uint64_t v13 = sub_1000895A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48);
  if (((unsigned int (*)(void *, uint64_t))v15)(__dst, 1))
  {
    if (v15(__src, 1, v13))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(__dst, __src, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
  }
  else if (v15(__src, 1, v13))
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(__dst, v13);
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v14 + 24))(__dst, __src, v13);
  }
  uint64_t v9 = a1 + *(int *)(a3 + 20);
  int v10 = (uint64_t *)(a2 + *(int *)(a3 + 20));
  if (*(void *)v9 < 2uLL)
  {
    if ((unint64_t)*v10 < 2)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *(_WORD *)(v9 + 16) = *((_WORD *)v10 + 8);
    }
    else
    {
      uint64_t v7 = *v10;
      swift_bridgeObjectRetain();
      *(void *)uint64_t v9 = v7;
      *(void *)(v9 + 8) = v10[1];
      *(unsigned char *)(v9 + 16) = *((unsigned char *)v10 + 16);
      *(unsigned char *)(v9 + 17) = *((unsigned char *)v10 + 17);
    }
  }
  else if ((unint64_t)*v10 < 2)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(_WORD *)(v9 + 16) = *((_WORD *)v10 + 8);
  }
  else
  {
    uint64_t v8 = *v10;
    swift_bridgeObjectRetain();
    *(void *)uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    *(void *)(v9 + 8) = v10[1];
    *(unsigned char *)(v9 + 16) = *((unsigned char *)v10 + 16);
    *(unsigned char *)(v9 + 17) = *((unsigned char *)v10 + 17) & 1;
  }
  return a1;
}

uint64_t sub_100081DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = (void *)(a1 + *(int *)(v3 + 28));
  __src = (void *)(a2 + *(int *)(v3 + 28));
  uint64_t v10 = sub_1000895A0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v11 + 48))(__src, 1))
  {
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v11 + 32))(__dst, __src, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v6 = a1 + *(int *)(a3 + 20);
  uint64_t v7 = a2 + *(int *)(a3 + 20);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
  *(_WORD *)(v6 + 16) = *(_WORD *)(v7 + 16);
  return a1;
}

uint64_t sub_10008201C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) <= 5uLL)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else if (*(void *)(a2 + 32) <= 5uLL)
  {
    sub_100009A54();
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = type metadata accessor for Mailbox();
  __dst = (void *)(a1 + *(int *)(v3 + 28));
  __src = (void *)(a2 + *(int *)(v3 + 28));
  uint64_t v11 = sub_1000895A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
  if (((unsigned int (*)(void *, uint64_t))v13)(__dst, 1))
  {
    if (v13(__src, 1, v11))
    {
      uint64_t v5 = sub_100009334(&qword_1000A3B40);
      memcpy(__dst, __src, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(__dst, __src, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
  }
  else if (v13(__src, 1, v11))
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(__dst, v11);
    uint64_t v4 = sub_100009334(&qword_1000A3B40);
    memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 40))(__dst, __src, v11);
  }
  uint64_t v7 = a1 + *(int *)(a3 + 20);
  uint64_t v8 = a2 + *(int *)(a3 + 20);
  if (*(void *)v7 < 2uLL)
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_WORD *)(v7 + 16) = *(_WORD *)(v8 + 16);
  }
  else if (*(void *)v8 < 2uLL)
  {
    sub_10000ADA0();
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_WORD *)(v7 + 16) = *(_WORD *)(v8 + 16);
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    swift_bridgeObjectRelease();
    *(void *)(v7 + 8) = *(void *)(v8 + 8);
    *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
    *(unsigned char *)(v7 + 17) = *(unsigned char *)(v8 + 17) & 1;
  }
  return a1;
}

uint64_t sub_1000824C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1000824E8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v10 = type metadata accessor for Mailbox();
  if (a2 == *(_DWORD *)(*(void *)(v10 - 8) + 84))
  {
    return (*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 48))(a1, a2, v10);
  }
  else if (a2 == 2147483645)
  {
    int v5 = -1;
    if (*(void *)(a1 + *(int *)(a3 + 20)) < (unint64_t)&_mh_execute_header) {
      int v5 = *(void *)(a1 + *(int *)(a3 + 20));
    }
    int v3 = v5 - 2;
    if (v5 - 2 < 0) {
      int v3 = -1;
    }
    return (v3 + 1);
  }
  else
  {
    __break(1u);
  }
  return v6;
}

uint64_t sub_100082628()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_100082650(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Mailbox();
  if (a3 == *(_DWORD *)(*(void *)(result - 8) + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(*(void *)(result - 8) + 56))(a1, a2, a2, result);
  }
  if (a3 == 2147483645) {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_100082750()
{
  uint64_t v2 = type metadata accessor for Mailbox();
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return v2;
}

uint64_t sub_100082830(uint64_t a1, uint64_t *a2)
{
  if ((unint64_t)*a2 < 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  }
  else
  {
    uint64_t v3 = *a2;
    swift_bridgeObjectRetain();
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
  }
  return a1;
}

void *sub_1000828DC(void *result)
{
  if (*result >= 2uLL) {
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100082938(uint64_t a1, uint64_t *a2)
{
  if (*(void *)a1 < 2uLL)
  {
    if ((unint64_t)*a2 < 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    }
    else
    {
      uint64_t v3 = *a2;
      swift_bridgeObjectRetain();
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = a2[1];
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
    }
  }
  else if ((unint64_t)*a2 < 2)
  {
    sub_10000ADA0();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  }
  else
  {
    uint64_t v4 = *a2;
    swift_bridgeObjectRetain();
    *(void *)a1 = v4;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17) & 1;
  }
  return a1;
}

__n128 sub_100082AB4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  return result;
}

uint64_t sub_100082AC8(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 2uLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  }
  else if (*(void *)a2 < 2uLL)
  {
    sub_10000ADA0();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17) & 1;
  }
  return a1;
}

uint64_t sub_100082C18(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 18))
    {
      int v5 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      int v4 = -1;
      if (!HIDWORD(*(void *)a1)) {
        int v4 = *(void *)a1;
      }
      int v2 = v4 - 2;
      if (v4 - 2 < 0) {
        int v2 = -1;
      }
      int v5 = v2;
    }
  }
  else
  {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_100082D4C(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = (unsigned char *)(result + 18);
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 2147483646;
    *(_WORD *)(result + 16) = 0;
    if (a3 >= 0x7FFFFFFE) {
      *uint64_t v3 = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *uint64_t v3 = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100082F18(uint64_t a1)
{
  uint64_t v1 = sub_100009334(&qword_1000A4A30);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(a1, 2);
}

uint64_t sub_100082F78(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = sub_100009334(&qword_1000A4A30);
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 56))(a1, a2, 2);
}

void *type metadata accessor for Snapshot.State()
{
  return &unk_10009C660;
}

unint64_t sub_100082FF4()
{
  uint64_t v2 = qword_1000A4A38;
  if (!qword_1000A4A38)
  {
    type metadata accessor for Message();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4A38);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100083078()
{
  uint64_t v2 = qword_1000A4A40;
  if (!qword_1000A4A40)
  {
    sub_100089630();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4A40);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1000830FC()
{
  if (qword_1000A2DD8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100089F80();
  return sub_100003160(v0, (uint64_t)qword_1000A6428);
}

uint64_t sub_10008316C()
{
  sub_10008A6B0();
  v1._countAndFlagsBits = sub_10008A0B0("", 0, 1);
  sub_10008A6A0(v1);
  swift_bridgeObjectRelease();
  sub_100089F70();
  sub_10008A690();
  v2._countAndFlagsBits = sub_10008A0B0("", 0, 1);
  sub_10008A6A0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100009A54();
  return sub_10008A0A0();
}

uint64_t sub_100083274()
{
  if (qword_1000A2DE8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100089F80();
  return sub_100003160(v0, (uint64_t)qword_1000A6458);
}

uint64_t sub_1000832E4()
{
  if (qword_1000A2DE0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100089F80();
  return sub_100003160(v0, (uint64_t)qword_1000A6440);
}

uint64_t sub_100083354()
{
  uint64_t v1 = sub_100089F80();
  sub_1000030B8(v1, qword_1000A6428);
  sub_100003160(v1, (uint64_t)qword_1000A6428);
  sub_1000544DC();
  return sub_100089F60();
}

uint64_t sub_1000833B0()
{
  uint64_t v1 = sub_100089F80();
  sub_1000030B8(v1, qword_1000A6440);
  sub_100003160(v1, (uint64_t)qword_1000A6440);
  sub_1000544DC();
  return sub_100089F60();
}

uint64_t sub_10008340C()
{
  uint64_t v1 = sub_100089F80();
  sub_1000030B8(v1, qword_1000A6458);
  sub_100003160(v1, (uint64_t)qword_1000A6458);
  sub_1000544DC();
  return sub_100089F60();
}

uint64_t sub_100083468()
{
  return sub_10008316C();
}

void *sub_100083480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  v12[10] = 0;
  v12[15] = a4;
  v12[14] = a1;
  v12[11] = a2;
  v12[12] = a3;
  *(double *)&v12[13] = a5;
  sub_100009334(&qword_1000A4A58);
  sub_1000839F4();
  void v12[4] = sub_1000897D0();
  v12[5] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  *(double *)(v11 + 32) = a5;
  *(void *)(v11 + 40) = a1;
  sub_100009334(&qword_1000A4A78);
  sub_100083C84();
  sub_100083D08();
  sub_100083D88();
  sub_100089BD0();
  swift_release();
  sub_100045D64();
  v12[0] = v12[6];
  v12[1] = v12[7];
  v12[2] = v12[8];
  v12[3] = v12[9];
  sub_100009334(&qword_1000A4A98);
  sub_100083E0C();
  sub_100060E9C();
  sub_100089B40();
  __n128 result = v12;
  sub_100083F34();
  return result;
}

void sub_1000836A4()
{
  qword_1000A4A48 = sub_100083F6C(0);
  qword_1000A4A50 = qword_1000A4A48;
}

uint64_t *sub_1000836D4()
{
  if (qword_1000A2DF0 != -1) {
    swift_once();
  }
  return &qword_1000A4A48;
}

double sub_100083738()
{
  return *(double *)sub_1000836D4();
}

uint64_t sub_100083758(uint64_t a1, double (*a2)(void))
{
  double v2 = a2();
  uint64_t result = a1;
  *(double *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  return result;
}

void sub_1000837B8(uint64_t a1@<X8>)
{
  *(double *)a1 = sub_100083738();
  *(void *)(a1 + 8) = v1;
}

uint64_t sub_1000837E8(uint64_t a1)
{
  return sub_100083758(a1, sub_100083F74);
}

double sub_100083830(void (*a1)(double *__return_ptr))
{
  a1(&v2);
  return v2;
}

uint64_t sub_10008386C()
{
  return sub_1000897C0() & 1;
}

uint64_t sub_100083888()
{
  return sub_1000897B0() & 1;
}

void *sub_1000838A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v12[3] = a1;
  v11[5] = sub_100089CA0();
  sub_100089790();
  v11[3] = v2;
  v11[4] = v3;
  sub_100083D08();
  sub_100089B60();
  sub_10001F4C8();
  v11[0] = v11[6];
  v11[1] = v11[7];
  void v11[2] = v11[8];
  uint64_t v9 = sub_100009334(&qword_1000A4A58);
  sub_1000839F4();
  sub_100039F6C((uint64_t)v11, v9, (uint64_t)v12);
  sub_10001F4C8();
  uint64_t v5 = v12[0];
  uint64_t v6 = v12[1];
  uint64_t v7 = v12[2];
  swift_retain();
  v10[0] = v5;
  v10[1] = v6;
  v10[2] = v7;
  sub_100039F6C((uint64_t)v10, v9, a2);
  sub_10001F4C8();
  uint64_t result = v12;
  sub_10001F4C8();
  return result;
}

unint64_t sub_1000839F4()
{
  uint64_t v2 = qword_1000A4A60;
  if (!qword_1000A4A60)
  {
    sub_1000096C0(&qword_1000A4A58);
    sub_100083A94();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4A60);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100083A94()
{
  uint64_t v2 = qword_1000A4A68;
  if (!qword_1000A4A68)
  {
    sub_1000096C0(&qword_1000A4A70);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4A68);
    return WitnessTable;
  }
  return v2;
}

void *sub_100083B18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  double v14 = 0.0;
  uint64_t v11 = 0;
  uint64_t v9 = a1[1];
  uint64_t v15 = *a1;
  uint64_t v16 = v9;
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  double v14 = a5;
  uint64_t v11 = a4;
  swift_retain();
  swift_retain();
  v10[0] = a2;
  v10[1] = a3;
  *(double *)&v10[2] = a5;
  swift_retain();
  swift_getAtKeyPath();
  sub_100009334(&qword_1000A4AB8);
  sub_100089D80();
  swift_release();
  uint64_t result = v10;
  sub_100084020();
  return result;
}

uint64_t sub_100083C20()
{
  return swift_deallocObject();
}

void *sub_100083C70(uint64_t *a1)
{
  return sub_100083B18(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 40), *(double *)(v1 + 32));
}

unint64_t sub_100083C84()
{
  uint64_t v2 = qword_1000A4A80;
  if (!qword_1000A4A80)
  {
    sub_1000096C0(&qword_1000A4A78);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4A80);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100083D08()
{
  uint64_t v2 = qword_1000A4A88;
  if (!qword_1000A4A88)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4A88);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100083D88()
{
  uint64_t v2 = qword_1000A4A90;
  if (!qword_1000A4A90)
  {
    type metadata accessor for CGSize();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4A90);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100083E0C()
{
  uint64_t v2 = qword_1000A4AA0;
  if (!qword_1000A4AA0)
  {
    sub_1000096C0(&qword_1000A4A98);
    sub_100083C84();
    sub_100083EB0();
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4AA0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100083EB0()
{
  uint64_t v2 = qword_1000A4AA8;
  if (!qword_1000A4AA8)
  {
    sub_1000096C0(&qword_1000A4AB0);
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4AA8);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100083F34()
{
}

double sub_100083F6C(uint64_t a1)
{
  return (double)a1;
}

double sub_100083F74()
{
  return sub_100083830(*(void (**)(double *__return_ptr))(v0 + 16));
}

void *type metadata accessor for SyncedSizePreferenceKey()
{
  return &unk_10009C6B8;
}

uint64_t sub_100083F94()
{
  return swift_getWitnessTable();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100084020()
{
}

id MFGetAccountsIntentResponse.__allocating_init()()
{
  return [objc_allocWithZone(v0) init];
}

id MFGetMailboxIntent.init()()
{
  id v4 = 0;
  v3.receiver = 0;
  v3.super_class = (Class)type metadata accessor for MFGetMailboxIntent();
  [super init];
  id v0 = v2;
  id v4 = v2;

  return v2;
}

uint64_t type metadata accessor for MFGetMailboxIntent()
{
  return self;
}

id MFGetAccountsIntentResponse.__allocating_init(coder:)(void *a1)
{
  id v4 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v4;
}

id MFGetMailboxIntent.init(coder:)(void *a1)
{
  id v8 = 0;
  uint64_t v7 = a1;
  v6.receiver = 0;
  v6.super_class = (Class)type metadata accessor for MFGetMailboxIntent();
  [super initWithCoder:a1];
  if (v5)
  {
    id v1 = v5;
    id v8 = v5;

    return v5;
  }
  else
  {

    return 0;
  }
}

id MFGetAccountsIntent.__allocating_init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v10 = objc_allocWithZone(v3);
  if (a2)
  {
    NSString v6 = sub_10008A070();
    swift_bridgeObjectRelease();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v5 = [v10 initWithIdentifier:backingStore:];

  return v5;
}

id MFGetMailboxIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v14 = 0;
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  uint64_t v11 = a3;
  swift_bridgeObjectRetain();
  if (a2)
  {
    NSString v6 = sub_10008A070();
    swift_bridgeObjectRelease();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
  v10.receiver = 0;
  v10.super_class = (Class)type metadata accessor for MFGetMailboxIntent();
  [super initWithIdentifier:v7 backingStore:a3];

  id v3 = v5;
  id v14 = v5;

  swift_bridgeObjectRelease();
  return v5;
}

id MFGetAccountsIntent.__allocating_init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  NSString v12 = sub_10008A070();
  NSString v14 = sub_10008A070();
  if (a5)
  {
    Class isa = sub_100089FE0().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [v11 initWithDomain:v12 verb:v14 parametersByName:isa];
  }
  else
  {
    id v6 = [v11 initWithDomain:v12 verb:v14 parametersByName:0];
  }
  id v9 = v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

id MFGetMailboxIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v19 = 0;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  uint64_t v14 = a5;
  swift_bridgeObjectRetain();
  NSString v10 = sub_10008A070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  NSString v11 = sub_10008A070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (a5)
  {
    Class isa = sub_100089FE0().super.isa;
    swift_bridgeObjectRelease();
    Class v9 = isa;
  }
  else
  {
    Class v9 = 0;
  }
  v13.receiver = 0;
  v13.super_class = (Class)type metadata accessor for MFGetMailboxIntent();
  id v7 = [super initWithDomain:v10 verb:v11 parametersByName:v9];

  id v5 = v7;
  id v19 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v7;
}

id MFGetMailboxIntent.__deallocating_deinit()
{
  id v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFGetMailboxIntent();
  [super dealloc];
}

uint64_t MFGetAccountsIntentResponseCode.init(rawValue:)(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0;
    case 1:
      return 1;
    case 2:
      return 2;
    case 3:
      return 3;
    case 4:
      return 4;
    case 5:
      return 5;
    case 6:
      return 6;
  }
  return 0;
}

uint64_t sub_100084AD8()
{
  return sub_10008A6E0() & 1;
}

uint64_t sub_100084B24()
{
  return sub_10008A150();
}

uint64_t sub_100084B64()
{
  return sub_10008A170();
}

uint64_t sub_100084BAC()
{
  return sub_10008A160();
}

uint64_t sub_100084BF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = MFGetAccountsIntentResponseCode.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v3 & 1;
  return result;
}

uint64_t MFGetMailboxIntentResponse.code.getter()
{
  objc_super v2 = (uint64_t *)(v0 + OBJC_IVAR___MFGetMailboxIntentResponse_code);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_endAccess();
  return v3;
}

uint64_t sub_100084D28(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___MFGetMailboxIntentResponse_code);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_endAccess();
}

uint64_t (*sub_100084D94())()
{
  return sub_100084E00;
}

uint64_t sub_100084E00()
{
  return swift_endAccess();
}

void sub_100084E40(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id v2 = *a1;
  *a2 = MFGetMailboxIntentResponse.code.getter();
}

void sub_100084E9C(uint64_t *a1, id *a2)
{
  uint64_t v4 = *a1;
  id v3 = *a2;
  id v2 = *a2;
  sub_100084D28(v4);
}

char *MFGetMailboxIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  id v3 = objc_allocWithZone(v2);
  return MFGetMailboxIntentResponse.init(code:userActivity:)(a1, a2);
}

char *MFGetMailboxIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  Class v9 = (char *)[v10 init];
  id v2 = v9;
  id v3 = v9;
  uint64_t v4 = v9;
  id v6 = &v9[OBJC_IVAR___MFGetMailboxIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  swift_endAccess();

  [v9 setUserActivity:a2];
  return v9;
}

id MFGetMailboxIntentResponse.init()()
{
  uint64_t v1 = v0;
  id v6 = v0;
  *(void *)&v0[OBJC_IVAR___MFGetMailboxIntentResponse_code] = 0;

  v5.receiver = v6;
  v5.super_class = (Class)type metadata accessor for MFGetMailboxIntentResponse();
  [super init];
  id v2 = v4;
  id v6 = v4;

  return v4;
}

uint64_t type metadata accessor for MFGetMailboxIntentResponse()
{
  return self;
}

id MFGetMailboxIntentResponse.init(coder:)(void *a1)
{
  Class v9 = a1;
  id v2 = v1;
  id v10 = v1;
  *(void *)&v1[OBJC_IVAR___MFGetMailboxIntentResponse_code] = 0;

  v8.receiver = v10;
  v8.super_class = (Class)type metadata accessor for MFGetMailboxIntentResponse();
  [super initWithCoder:a1];
  if (v7)
  {
    id v3 = v7;
    id v10 = v7;

    return v7;
  }
  else
  {

    return 0;
  }
}

id MFGetAccountsIntentResponse.__allocating_init(backingStore:)(void *a1)
{
  id v4 = [objc_allocWithZone(v1) initWithBackingStore:a1];

  return v4;
}

id MFGetMailboxIntentResponse.init(backingStore:)(void *a1)
{
  Class v9 = a1;
  id v2 = v1;
  id v10 = v1;
  *(void *)&v1[OBJC_IVAR___MFGetMailboxIntentResponse_code] = 0;

  v8.receiver = v10;
  v8.super_class = (Class)type metadata accessor for MFGetMailboxIntentResponse();
  [super initWithBackingStore:a1];
  if (v7)
  {
    id v3 = v7;
    id v10 = v7;

    return v7;
  }
  else
  {

    return 0;
  }
}

id MFGetAccountsIntentResponse.__allocating_init(propertiesByName:)(uint64_t a1)
{
  id v8 = objc_allocWithZone(v1);
  if (a1)
  {
    Class isa = sub_100089FE0().super.isa;
    swift_bridgeObjectRelease();
    id v2 = [v8 initWithPropertiesByName:isa];
  }
  else
  {
    id v2 = [v8 initWithPropertiesByName:0];
  }
  id v5 = v2;

  return v5;
}

id MFGetMailboxIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  uint64_t v11 = a1;
  id v2 = v1;
  id v12 = v1;
  *(void *)&v1[OBJC_IVAR___MFGetMailboxIntentResponse_code] = 0;

  swift_bridgeObjectRetain();
  if (a1)
  {
    Class isa = sub_100089FE0().super.isa;
    swift_bridgeObjectRelease();
    Class v8 = isa;
  }
  else
  {
    Class v8 = 0;
  }
  v10.receiver = v12;
  v10.super_class = (Class)type metadata accessor for MFGetMailboxIntentResponse();
  [super initWithPropertiesByName:v8];

  if (v6)
  {
    id v3 = v6;
    id v12 = v6;
    swift_bridgeObjectRelease();

    return v6;
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
}

id MFGetMailboxIntentResponse.__deallocating_deinit()
{
  id v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFGetMailboxIntentResponse();
  return [super dealloc];
}

unint64_t sub_100085778()
{
  return sub_100085790();
}

unint64_t sub_100085790()
{
  uint64_t v2 = qword_1000A4AC8;
  if (!qword_1000A4AC8)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4AC8);
    return WitnessTable;
  }
  return v2;
}

void sub_100085810(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_100085828(uint64_t *a1, id *a2)
{
}

ValueMetadata *type metadata accessor for MFGetMailboxIntentResponseCode()
{
  return &type metadata for MFGetMailboxIntentResponseCode;
}

unint64_t sub_100085854()
{
  uint64_t v2 = qword_1000A4B20;
  if (!qword_1000A4B20)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4B20);
    return WitnessTable;
  }
  return v2;
}

id MFGetAccountsIntent.init()()
{
  id v4 = 0;
  v3.receiver = 0;
  v3.super_class = (Class)type metadata accessor for MFGetAccountsIntent();
  [super init];
  id v0 = v2;
  id v4 = v2;

  return v2;
}

uint64_t type metadata accessor for MFGetAccountsIntent()
{
  return self;
}

id MFGetAccountsIntent.init(coder:)(void *a1)
{
  id v8 = 0;
  id v7 = a1;
  v6.receiver = 0;
  v6.super_class = (Class)type metadata accessor for MFGetAccountsIntent();
  [super initWithCoder:a1];
  if (v5)
  {
    id v1 = v5;
    id v8 = v5;

    return v5;
  }
  else
  {

    return 0;
  }
}

id MFGetAccountsIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v14 = 0;
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  uint64_t v11 = a3;
  swift_bridgeObjectRetain();
  if (a2)
  {
    NSString v6 = sub_10008A070();
    swift_bridgeObjectRelease();
    id v7 = v6;
  }
  else
  {
    id v7 = 0;
  }
  v10.receiver = 0;
  v10.super_class = (Class)type metadata accessor for MFGetAccountsIntent();
  id v5 = [super initWithIdentifier:v7 backingStore:a3];

  id v3 = v5;
  id v14 = v5;

  swift_bridgeObjectRelease();
  return v5;
}

id MFGetAccountsIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v19 = 0;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  uint64_t v14 = a5;
  swift_bridgeObjectRetain();
  NSString v10 = sub_10008A070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  NSString v11 = sub_10008A070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (a5)
  {
    Class isa = sub_100089FE0().super.isa;
    swift_bridgeObjectRelease();
    Class v9 = isa;
  }
  else
  {
    Class v9 = 0;
  }
  v13.receiver = 0;
  v13.super_class = (Class)type metadata accessor for MFGetAccountsIntent();
  id v7 = [super initWithDomain:v10 verb:v11 parametersByName:v9];

  id v5 = v7;
  id v19 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v7;
}

id MFGetAccountsIntent.__deallocating_deinit()
{
  id v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFGetAccountsIntent();
  return [super dealloc];
}

uint64_t sub_100085FAC()
{
  return sub_10008A6E0() & 1;
}

uint64_t sub_100085FF8()
{
  return sub_10008A150();
}

uint64_t sub_100086038()
{
  return sub_10008A170();
}

uint64_t sub_100086080()
{
  return sub_10008A160();
}

uint64_t MFGetAccountsIntentResponse.code.getter()
{
  objc_super v2 = (uint64_t *)(v0 + OBJC_IVAR___MFGetAccountsIntentResponse_code);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_endAccess();
  return v3;
}

uint64_t sub_1000861C0(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___MFGetAccountsIntentResponse_code);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_endAccess();
}

uint64_t (*sub_10008622C())()
{
  return sub_100084E00;
}

void sub_100086298(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id v2 = *a1;
  *a2 = MFGetAccountsIntentResponse.code.getter();
}

void sub_1000862F4(uint64_t *a1, id *a2)
{
  uint64_t v4 = *a1;
  id v3 = *a2;
  id v2 = *a2;
  sub_1000861C0(v4);
}

char *MFGetAccountsIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  id v3 = objc_allocWithZone(v2);
  return MFGetAccountsIntentResponse.init(code:userActivity:)(a1, a2);
}

char *MFGetAccountsIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  Class v9 = (char *)[v10 init];
  id v2 = v9;
  id v3 = v9;
  uint64_t v4 = v9;
  NSString v6 = &v9[OBJC_IVAR___MFGetAccountsIntentResponse_code];
  swift_beginAccess();
  *(void *)NSString v6 = a1;
  swift_endAccess();

  [v9 setUserActivity:a2];
  return v9;
}

id MFGetAccountsIntentResponse.init()()
{
  uint64_t v1 = v0;
  NSString v6 = v0;
  *(void *)&v0[OBJC_IVAR___MFGetAccountsIntentResponse_code] = 0;

  v5.receiver = v6;
  v5.super_class = (Class)type metadata accessor for MFGetAccountsIntentResponse();
  [super init];
  id v2 = v4;
  NSString v6 = v4;

  return v4;
}

uint64_t type metadata accessor for MFGetAccountsIntentResponse()
{
  return self;
}

id MFGetAccountsIntentResponse.init(coder:)(void *a1)
{
  Class v9 = a1;
  id v2 = v1;
  id v10 = v1;
  *(void *)&v1[OBJC_IVAR___MFGetAccountsIntentResponse_code] = 0;

  v8.receiver = v10;
  v8.super_class = (Class)type metadata accessor for MFGetAccountsIntentResponse();
  [super initWithCoder:a1];
  if (v7)
  {
    id v3 = v7;
    id v10 = v7;

    return v7;
  }
  else
  {

    return 0;
  }
}

id MFGetAccountsIntentResponse.init(backingStore:)(void *a1)
{
  Class v9 = a1;
  id v2 = v1;
  id v10 = v1;
  *(void *)&v1[OBJC_IVAR___MFGetAccountsIntentResponse_code] = 0;

  v8.receiver = v10;
  v8.super_class = (Class)type metadata accessor for MFGetAccountsIntentResponse();
  [super initWithBackingStore:a1];
  if (v7)
  {
    id v3 = v7;
    id v10 = v7;

    return v7;
  }
  else
  {

    return 0;
  }
}

id MFGetAccountsIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  uint64_t v11 = a1;
  id v2 = v1;
  id v12 = v1;
  *(void *)&v1[OBJC_IVAR___MFGetAccountsIntentResponse_code] = 0;

  swift_bridgeObjectRetain();
  if (a1)
  {
    Class isa = sub_100089FE0().super.isa;
    swift_bridgeObjectRelease();
    Class v8 = isa;
  }
  else
  {
    Class v8 = 0;
  }
  v10.receiver = v12;
  v10.super_class = (Class)type metadata accessor for MFGetAccountsIntentResponse();
  [super initWithPropertiesByName:v8];

  if (v6)
  {
    id v3 = v6;
    id v12 = v6;
    swift_bridgeObjectRelease();

    return v6;
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
}

id MFGetAccountsIntentResponse.__deallocating_deinit()
{
  id v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFGetAccountsIntentResponse();
  return [super dealloc];
}

unint64_t sub_100086AB8()
{
  return sub_100086AD0();
}

unint64_t sub_100086AD0()
{
  uint64_t v2 = qword_1000A4B30;
  if (!qword_1000A4B30)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4B30);
    return WitnessTable;
  }
  return v2;
}

void sub_100086B50(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_100086B68(uint64_t *a1, id *a2)
{
}

ValueMetadata *type metadata accessor for MFGetAccountsIntentResponseCode()
{
  return &type metadata for MFGetAccountsIntentResponseCode;
}

unint64_t sub_100086B94()
{
  uint64_t v2 = qword_1000A4B88;
  if (!qword_1000A4B88)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4B88);
    return WitnessTable;
  }
  return v2;
}

uint64_t MFIntentMailboxKind.init(rawValue:)(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0;
    case 1:
      return 1;
    case 2:
      return 2;
    case 3:
      return 3;
    case 4:
      return 4;
    case 5:
      return 5;
    case 6:
      return 6;
    case 7:
      return 7;
  }
  return 0;
}

uint64_t sub_100086D78()
{
  return sub_10008A6E0() & 1;
}

uint64_t sub_100086DC4()
{
  return sub_10008A150();
}

uint64_t sub_100086E04()
{
  return sub_10008A170();
}

uint64_t sub_100086E4C()
{
  return sub_10008A160();
}

uint64_t sub_100086E94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = MFIntentMailboxKind.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v3 & 1;
  return result;
}

id static MFIntentMailboxKindResolutionResult.success(with:)()
{
  id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  MFGetAccountsIntentResponseCode.rawValue.getter();
  id v1 = [ObjCClassFromMetadata successWithResolvedValue:v0];

  return v1;
}

id static MFIntentMailboxKindResolutionResult.confirmationRequired(with:)()
{
  id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  MFGetAccountsIntentResponseCode.rawValue.getter();
  id v1 = [ObjCClassFromMetadata confirmationRequiredWithValueToConfirm:v0];

  return v1;
}

id MFIntentMailboxKindResolutionResult.__allocating_init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone(v2);
  Class isa = sub_100089FE0().super.isa;
  id v7 = [v4 initWithJSONDictionary:forIntent:];

  swift_bridgeObjectRelease();
  return v7;
}

id MFIntentMailboxKindResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  id v11 = 0;
  uint64_t v10 = a1;
  Class v9 = a2;
  swift_bridgeObjectRetain();
  Class isa = sub_100089FE0().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = 0;
  v8.super_class = (Class)type metadata accessor for MFIntentMailboxKindResolutionResult();
  [v8 initWithJSONDictionary:isa forIntent:a2];

  if (v7)
  {
    id v2 = v7;
    id v11 = v7;

    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t type metadata accessor for MFIntentMailboxKindResolutionResult()
{
  return self;
}

id MFIntentMailboxKindResolutionResult.__deallocating_deinit()
{
  char v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFIntentMailboxKindResolutionResult();
  return [super dealloc];
}

unint64_t sub_100087340()
{
  return sub_100087358();
}

unint64_t sub_100087358()
{
  uint64_t v2 = qword_1000A4B90;
  if (!qword_1000A4B90)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4B90);
    return WitnessTable;
  }
  return v2;
}

ValueMetadata *type metadata accessor for MFIntentMailboxKind()
{
  return &type metadata for MFIntentMailboxKind;
}

unint64_t sub_1000873EC()
{
  uint64_t v2 = qword_1000A4BC0;
  if (!qword_1000A4BC0)
  {
    unint64_t WitnessTable = swift_getWitnessTable();
    atomic_store(WitnessTable, (unint64_t *)&qword_1000A4BC0);
    return WitnessTable;
  }
  return v2;
}

uint64_t static MFIntentMailbox.supportsSecureCoding.getter()
{
  return 1;
}

id MFIntentMailbox.__allocating_init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v16 = objc_allocWithZone(v6);
  if (a2)
  {
    NSString v12 = sub_10008A070();
    swift_bridgeObjectRelease();
    objc_super v13 = v12;
  }
  else
  {
    objc_super v13 = 0;
  }
  NSString v11 = sub_10008A070();
  if (a6)
  {
    NSString v9 = sub_10008A070();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v8 = [v16 initWithIdentifier:v13 displayString:v11];

  swift_bridgeObjectRelease();
  return v8;
}

id MFIntentMailbox.init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v23 = 0;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  swift_bridgeObjectRetain();
  if (a2)
  {
    NSString v12 = sub_10008A070();
    swift_bridgeObjectRelease();
    objc_super v13 = v12;
  }
  else
  {
    objc_super v13 = 0;
  }
  swift_bridgeObjectRetain();
  NSString v11 = sub_10008A070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (a6)
  {
    NSString v9 = sub_10008A070();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0;
  }
  v16.receiver = 0;
  v16.super_class = (Class)type metadata accessor for MFIntentMailbox();
  id v8 = [super initWithIdentifier:v13 displayString:v11 pronunciationHint:v10];

  id v6 = v8;
  id v23 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t type metadata accessor for MFIntentMailbox()
{
  return self;
}

id MFIntentMailbox.init(coder:)(void *a1)
{
  id v8 = 0;
  id v7 = a1;
  v6.receiver = 0;
  v6.super_class = (Class)type metadata accessor for MFIntentMailbox();
  [super initWithCoder:a1];
  if (v5)
  {
    id v1 = v5;
    id v8 = v5;

    return v5;
  }
  else
  {

    return 0;
  }
}

id MFIntentMailbox.__deallocating_deinit()
{
  char v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFIntentMailbox();
  return [super dealloc];
}

id static MFIntentMailboxResolutionResult.success(with:)(uint64_t a1)
{
  uint64_t v7 = a1;
  uint64_t v6 = v1;
  v5.receiver = (id)swift_getObjCClassFromMetadata();
  v5.super_class = (Class)&OBJC_METACLASS___MFIntentMailboxResolutionResult;
  [super successWithResolvedObject:a1];

  return v2;
}

id static MFIntentMailboxResolutionResult.disambiguation(with:)(uint64_t a1)
{
  uint64_t v8 = a1;
  uint64_t v7 = v1;
  id ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain();
  type metadata accessor for MFIntentMailbox();
  sub_100087D14();
  sub_10008A570();
  Class isa = sub_10008A180().super.isa;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6.receiver = ObjCClassFromMetadata;
  v6.super_class = (Class)&OBJC_METACLASS___MFIntentMailboxResolutionResult;
  [super disambiguationWithObjectsToDisambiguate:isa];

  return v5;
}

unint64_t sub_100087D14()
{
  uint64_t v2 = qword_1000A4BF0;
  if (!qword_1000A4BF0)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A4BF0);
    return ObjCClassMetadata;
  }
  return v2;
}

id static MFIntentMailboxResolutionResult.confirmationRequired(with:)(void *a1)
{
  NSString v11 = a1;
  uint64_t v10 = v1;
  id ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v2 = a1;
  if (a1) {
    objc_super v6 = a1;
  }
  else {
    objc_super v6 = 0;
  }
  v9.receiver = ObjCClassFromMetadata;
  v9.super_class = (Class)&OBJC_METACLASS___MFIntentMailboxResolutionResult;
  [super confirmationRequiredWithObjectToConfirm:v6];

  return v5;
}

void static MFIntentMailboxResolutionResult.success(with:)()
{
}

id sub_100088014(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return a1;
}

void static MFIntentMailboxResolutionResult.disambiguation(with:)()
{
}

id sub_100088120(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  swift_bridgeObjectRelease();

  return a1;
}

void static MFIntentMailboxResolutionResult.confirmationRequired(with:)()
{
}

id sub_100088218(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return a1;
}

id MFIntentMailboxResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  id v11 = 0;
  uint64_t v10 = a1;
  objc_super v9 = a2;
  swift_bridgeObjectRetain();
  Class isa = sub_100089FE0().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = 0;
  v8.super_class = (Class)type metadata accessor for MFIntentMailboxResolutionResult();
  [v8 initWithJSONDictionary:isa forIntent:a2];

  if (v7)
  {
    id v2 = v7;
    id v11 = v7;

    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
}

id MFIntentMailboxResolutionResult.__deallocating_deinit()
{
  char v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFIntentMailboxResolutionResult();
  return [super dealloc];
}

uint64_t sub_100088454()
{
  return 0;
}

uint64_t type metadata accessor for MFIntentMailboxResolutionResult()
{
  return self;
}

id MFIntentAccount.init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v23 = 0;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  swift_bridgeObjectRetain();
  if (a2)
  {
    NSString v12 = sub_10008A070();
    swift_bridgeObjectRelease();
    objc_super v13 = v12;
  }
  else
  {
    objc_super v13 = 0;
  }
  swift_bridgeObjectRetain();
  NSString v11 = sub_10008A070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (a6)
  {
    NSString v9 = sub_10008A070();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0;
  }
  v16.receiver = 0;
  v16.super_class = (Class)type metadata accessor for MFIntentAccount();
  [super initWithIdentifier:v13 displayString:v11 pronunciationHint:v10];

  id v6 = v8;
  id v23 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t type metadata accessor for MFIntentAccount()
{
  return self;
}

id MFIntentAccount.init(coder:)(void *a1)
{
  id v8 = 0;
  id v7 = a1;
  v6.receiver = 0;
  v6.super_class = (Class)type metadata accessor for MFIntentAccount();
  id v5 = [super initWithCoder:a1];
  if (v5)
  {
    id v1 = v5;
    id v8 = v5;

    return v5;
  }
  else
  {

    return 0;
  }
}

id MFIntentAccount.__deallocating_deinit()
{
  char v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFIntentAccount();
  return [super dealloc];
}

id static MFIntentAccountResolutionResult.success(with:)(uint64_t a1)
{
  uint64_t v7 = a1;
  uint64_t v6 = v1;
  v5.receiver = (id)swift_getObjCClassFromMetadata();
  v5.super_class = (Class)&OBJC_METACLASS___MFIntentAccountResolutionResult;
  [super successWithResolvedObject:a1];

  return v2;
}

id static MFIntentAccountResolutionResult.disambiguation(with:)(uint64_t a1)
{
  uint64_t v8 = a1;
  uint64_t v7 = v1;
  id ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain();
  type metadata accessor for MFIntentAccount();
  sub_100087D14();
  sub_10008A570();
  Class isa = sub_10008A180().super.isa;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6.receiver = ObjCClassFromMetadata;
  v6.super_class = (Class)&OBJC_METACLASS___MFIntentAccountResolutionResult;
  [super disambiguationWithObjectsToDisambiguate:isa];

  return v5;
}

id static MFIntentAccountResolutionResult.confirmationRequired(with:)(void *a1)
{
  NSString v11 = a1;
  uint64_t v10 = v1;
  id ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v2 = a1;
  if (a1) {
    objc_super v6 = a1;
  }
  else {
    objc_super v6 = 0;
  }
  v9.receiver = ObjCClassFromMetadata;
  v9.super_class = (Class)&OBJC_METACLASS___MFIntentAccountResolutionResult;
  [super confirmationRequiredWithObjectToConfirm:v6];

  return v5;
}

void static MFIntentAccountResolutionResult.success(with:)()
{
}

id sub_100088E74(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return a1;
}

void static MFIntentAccountResolutionResult.disambiguation(with:)()
{
}

id sub_100088F80(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  swift_bridgeObjectRelease();

  return a1;
}

void static MFIntentAccountResolutionResult.confirmationRequired(with:)()
{
}

id sub_100089078(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return a1;
}

id MFIntentAccountResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  id v11 = 0;
  uint64_t v10 = a1;
  objc_super v9 = a2;
  swift_bridgeObjectRetain();
  Class isa = sub_100089FE0().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = 0;
  v8.super_class = (Class)type metadata accessor for MFIntentAccountResolutionResult();
  [super initWithJSONDictionary:isa forIntent:a2];

  if (v7)
  {
    id v2 = v7;
    id v11 = v7;

    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
}

id MFIntentAccountResolutionResult.__deallocating_deinit()
{
  char v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MFIntentAccountResolutionResult();
  return [super dealloc];
}

uint64_t type metadata accessor for MFIntentAccountResolutionResult()
{
  return self;
}

uint64_t sub_1000892DC()
{
  return v0;
}

uint64_t sub_100089300()
{
  return swift_deallocClassInstance();
}

uint64_t sub_100089340()
{
  return sub_1000892DC();
}

id sub_10008937C()
{
  sub_1000894A8();
  type metadata accessor for ResourceBundleClass();
  id result = sub_1000893C4();
  qword_1000A4C70 = (uint64_t)result;
  return result;
}

id sub_1000893C4()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v0 = [(id)swift_getObjCClassFromMetadata() bundleForClass:ObjCClassFromMetadata];

  return v0;
}

uint64_t *sub_10008941C()
{
  if (qword_1000A2DF8 != -1) {
    swift_once();
  }
  return &qword_1000A4C70;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

unint64_t sub_1000894A8()
{
  uint64_t v2 = qword_1000A4D10;
  if (!qword_1000A4D10)
  {
    self;
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1000A4D10);
    return ObjCClassMetadata;
  }
  return v2;
}

uint64_t sub_100089510()
{
  return URLComponents.url.getter();
}

uint64_t sub_100089520()
{
  return URLComponents.host.setter();
}

uint64_t sub_100089530()
{
  return URLComponents.scheme.setter();
}

uint64_t sub_100089540()
{
  return URLComponents.init()();
}

uint64_t sub_100089550()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_100089560(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_100089570()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_100089580()
{
  return URL.absoluteString.getter();
}

uint64_t sub_100089590()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000895A0()
{
  return type metadata accessor for URL();
}

uint64_t sub_1000895B0()
{
  return Data.init(base64Encoded:options:)();
}

NSData sub_1000895C0()
{
  return Data._bridgeToObjectiveC()();
}

NSDate sub_1000895D0()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_1000895E0()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t sub_1000895F0()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_100089600()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_100089610()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100089620()
{
  return Date.init()();
}

uint64_t sub_100089630()
{
  return type metadata accessor for Date();
}

uint64_t sub_100089640()
{
  return UUID.uuidString.getter();
}

uint64_t sub_100089650()
{
  return UUID.init()();
}

uint64_t sub_100089660()
{
  return type metadata accessor for UUID();
}

uint64_t sub_100089670()
{
  return Calendar.isDateInToday(_:)();
}

uint64_t sub_100089680()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t sub_100089690()
{
  return static Calendar.current.getter();
}

uint64_t sub_1000896A0()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_1000896B0()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1000896C0()
{
  return _convertBoolToObjCBool(_:)();
}

uint64_t sub_1000896D0()
{
  return _convertObjCBoolToBool(_:)();
}

uint64_t sub_1000896E0()
{
  return Logger.logObject.getter();
}

uint64_t sub_1000896F0()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100089700()
{
  return type metadata accessor for Logger();
}

uint64_t sub_100089710()
{
  return Environment.wrappedValue.getter();
}

uint64_t sub_100089720()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_100089730()
{
  return Environment.init(_:)();
}

uint64_t sub_100089740()
{
  return ScaledMetric.init(wrappedValue:relativeTo:)();
}

uint64_t sub_100089750()
{
  return ScaledMetric.wrappedValue.getter();
}

uint64_t sub_100089760()
{
  return type metadata accessor for ScaledMetric();
}

uint64_t sub_100089770()
{
  return static WidgetBundle.main()();
}

uint64_t sub_100089780()
{
  return AnyTransition.init<A>(_:)();
}

uint64_t sub_100089790()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_1000897A0()
{
  return type metadata accessor for GeometryProxy();
}

uint64_t sub_1000897B0()
{
  return static PreferenceKey._isReadableByHost.getter();
}

uint64_t sub_1000897C0()
{
  return static PreferenceKey._includesRemovedValues.getter();
}

uint64_t sub_1000897D0()
{
  return GeometryReader.init(content:)();
}

uint64_t sub_1000897E0()
{
  return PushTransition.init(edge:)();
}

uint64_t sub_1000897F0()
{
  return type metadata accessor for PushTransition();
}

uint64_t sub_100089800()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t sub_100089810()
{
  return static PreviewProvider.platform.getter();
}

uint64_t sub_100089820()
{
  return static PreviewProvider._platform.getter();
}

uint64_t sub_100089830()
{
  return static PreviewProvider._previews.getter();
}

uint64_t sub_100089840()
{
  return static RedactionReasons.placeholder.getter();
}

uint64_t sub_100089850()
{
  return type metadata accessor for RedactionReasons();
}

uint64_t sub_100089860()
{
  return static ContentTransition.numericText(countsDown:)();
}

uint64_t sub_100089870()
{
  return type metadata accessor for ContentTransition();
}

uint64_t sub_100089880()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100089890()
{
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t sub_1000898A0()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_1000898B0()
{
  return EnvironmentValues.contentTransition.setter();
}

uint64_t sub_1000898C0()
{
  return EnvironmentValues.showsWidgetBackground.getter();
}

uint64_t sub_1000898D0()
{
  return EnvironmentValues.showsWidgetBackground.setter();
}

uint64_t sub_1000898E0()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_1000898F0()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100089900()
{
  return EnvironmentValues.widgetRenderingMode.setter();
}

uint64_t sub_100089910()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_100089920()
{
  return static VerticalAlignment.firstTextBaseline.getter();
}

uint64_t sub_100089930()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_100089940()
{
  return type metadata accessor for ContentSizeCategory();
}

uint64_t sub_100089950()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_100089960()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_100089970()
{
  return static SymbolRenderingMode.monochrome.getter();
}

uint64_t sub_100089980()
{
  return static SymbolRenderingMode.palette.getter();
}

uint64_t sub_100089990()
{
  return type metadata accessor for SymbolRenderingMode();
}

uint64_t sub_1000899A0()
{
  return static WidgetBundleBuilder.buildBlock<A>(_:)();
}

uint64_t sub_1000899B0()
{
  return WidgetConfiguration.description(_:)();
}

uint64_t sub_1000899C0()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_1000899D0()
{
  return WidgetConfiguration.configurationDisplayName(_:)();
}

uint64_t sub_1000899E0()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t sub_1000899F0()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100089A00()
{
  return static ContainerBackgroundPlacement.widget.getter();
}

uint64_t sub_100089A10()
{
  return type metadata accessor for ContainerBackgroundPlacement();
}

uint64_t sub_100089A20()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_100089A30()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_100089A40()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_100089A50()
{
  return static Font.subheadline.getter();
}

uint64_t sub_100089A60()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_100089A70()
{
  return Font.weight(_:)();
}

uint64_t sub_100089A80()
{
  return type metadata accessor for Font.Leading();
}

uint64_t sub_100089A90()
{
  return Font.leading(_:)();
}

uint64_t sub_100089AA0()
{
  return static Font.footnote.getter();
}

uint64_t sub_100089AB0()
{
  return type metadata accessor for Font.TextStyle();
}

uint64_t sub_100089AC0()
{
  return Link.init(destination:label:)();
}

uint64_t sub_100089AD0()
{
  return Text.foregroundColor(_:)();
}

uint64_t sub_100089AE0()
{
  return Text.font(_:)();
}

uint64_t sub_100089AF0()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100089B00()
{
  return Text.init<A>(_:)();
}

uint64_t sub_100089B10()
{
  return View.widgetAccentable(_:)();
}

uint64_t sub_100089B20()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_100089B30()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_100089B40()
{
  return View.background<A>(_:alignment:)();
}

uint64_t sub_100089B50()
{
  return View.imageScale(_:)();
}

uint64_t sub_100089B60()
{
  return View.preference<A>(key:value:)();
}

uint64_t sub_100089B70()
{
  return View.transition(_:)();
}

uint64_t sub_100089B80()
{
  return View.environment<A>(_:_:)();
}

uint64_t sub_100089B90()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100089BA0()
{
  return View.layoutPriority(_:)();
}

uint64_t sub_100089BB0()
{
  return View.previewContext<A>(_:)();
}

uint64_t sub_100089BC0()
{
  return View.foregroundColor(_:)();
}

uint64_t sub_100089BD0()
{
  return View.onPreferenceChange<A>(_:perform:)();
}

uint64_t sub_100089BE0()
{
  return View.containerBackground<A>(for:alignment:content:)();
}

uint64_t sub_100089BF0()
{
  return View.symbolRenderingMode(_:)();
}

uint64_t sub_100089C00()
{
  return View.multilineTextAlignment(_:)();
}

uint64_t sub_100089C10()
{
  return View.font(_:)();
}

uint64_t sub_100089C20()
{
  return View.frame(width:height:alignment:)();
}

uint64_t sub_100089C30()
{
  return View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_100089C40()
{
  return View.padding(_:_:)();
}

uint64_t sub_100089C50()
{
  return View.redacted(reason:)();
}

uint64_t sub_100089C60()
{
  return View.lineLimit(_:)();
}

uint64_t sub_100089C70()
{
  return static Color.accentColor.getter();
}

uint64_t sub_100089C80()
{
  return static Color.red.getter();
}

uint64_t sub_100089C90()
{
  return static Color.blue.getter();
}

uint64_t sub_100089CA0()
{
  return static Color.clear.getter();
}

uint64_t sub_100089CB0()
{
  return static Color.yellow.getter();
}

uint64_t sub_100089CC0()
{
  return static Color.primary.getter();
}

uint64_t sub_100089CD0()
{
  return static Color.secondary.getter();
}

uint64_t sub_100089CE0()
{
  return Color.init(_:)();
}

uint64_t sub_100089CF0()
{
  return Group<A>.init(content:)();
}

uint64_t sub_100089D00()
{
  return Image.init(systemName:)();
}

uint64_t sub_100089D10()
{
  return type metadata accessor for Image.Scale();
}

uint64_t sub_100089D20()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_100089D30()
{
  return State.wrappedValue.getter();
}

uint64_t sub_100089D40()
{
  return State.projectedValue.getter();
}

uint64_t sub_100089D50()
{
  return HStack.init(alignment:spacing:content:)();
}

uint64_t sub_100089D60()
{
  return Spacer.init(minLength:)();
}

uint64_t sub_100089D70()
{
  return VStack.init(alignment:spacing:content:)();
}

uint64_t sub_100089D80()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_100089D90()
{
  return Divider.init()();
}

uint64_t sub_100089DA0()
{
  return type metadata accessor for Divider();
}

uint64_t sub_100089DB0()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100089DC0()
{
  return static Alignment.center.getter();
}

uint64_t sub_100089DD0()
{
  return EmptyView.init()();
}

uint64_t sub_100089DE0()
{
  return TupleView.init(_:)();
}

uint64_t sub_100089DF0()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_100089E00()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_100089E10()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_100089E20()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_100089E30()
{
  return static DispatchTime.now()();
}

uint64_t sub_100089E40()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_100089E50()
{
  return DispatchWorkItem.__allocating_init(flags:block:)();
}

uint64_t sub_100089E60()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t sub_100089E70()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t sub_100089E80()
{
  return + infix(_:_:)();
}

uint64_t sub_100089E90()
{
  return + infix(_:_:)();
}

uint64_t sub_100089EA0()
{
  return static WidgetRenderingMode.== infix(_:_:)();
}

uint64_t sub_100089EB0()
{
  return static WidgetRenderingMode.fullColor.getter();
}

uint64_t sub_100089EC0()
{
  return type metadata accessor for WidgetRenderingMode();
}

uint64_t sub_100089ED0()
{
  return WidgetPreviewContext.init(family:)();
}

uint64_t sub_100089EE0()
{
  return type metadata accessor for WidgetPreviewContext();
}

uint64_t sub_100089EF0()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_100089F00()
{
  return IntentConfiguration.init<A>(kind:intent:provider:content:)();
}

uint64_t sub_100089F10()
{
  return static TimelineReloadPolicy.never.getter();
}

uint64_t sub_100089F20()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_100089F40()
{
  return IntentTimelineProvider.recommendations()();
}

uint64_t sub_100089F60()
{
  return TimelineEntryRelevance.init(score:duration:)();
}

uint64_t sub_100089F70()
{
  return TimelineEntryRelevance.score.getter();
}

uint64_t sub_100089F80()
{
  return type metadata accessor for TimelineEntryRelevance();
}

uint64_t sub_100089F90()
{
  return TimelineProviderContext.family.getter();
}

uint64_t sub_100089FA0()
{
  return TimelineProviderContext.isPreview.getter();
}

uint64_t sub_100089FB0()
{
  return type metadata accessor for TimelineProviderContext();
}

uint64_t sub_100089FC0()
{
  return Timeline.init(entries:policy:)();
}

uint64_t sub_100089FD0()
{
  return static BinaryFloatingPoint<>._convert<A>(from:)();
}

NSDictionary sub_100089FE0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_100089FF0()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008A000()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10008A010()
{
  return Dictionary.subscript.getter();
}

uint64_t sub_10008A020()
{
  return Dictionary.subscript.setter();
}

Swift::Int sub_10008A030(Swift::Int seed)
{
  return Hashable._rawHashValue(seed:)(seed);
}

uint64_t sub_10008A040()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10008A050()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t sub_10008A060()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_10008A070()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10008A080()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008A090()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10008A0A0()
{
  return String.init(stringInterpolation:)();
}

uint64_t sub_10008A0B0(Builtin::RawPointer _builtinStringLiteral, Builtin::Word utf8CodeUnitCount, Builtin::Int1 isASCII)
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(_builtinStringLiteral, utf8CodeUnitCount, isASCII)._countAndFlagsBits;
}

uint64_t sub_10008A0C0()
{
  return static String.== infix(_:_:)();
}

void sub_10008A0D0(Swift::String a1)
{
}

Swift::Int sub_10008A0E0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_10008A0F0()
{
  return String.init<A>(_:)();
}

uint64_t sub_10008A100()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t sub_10008A110()
{
  return Sequence.enumerated()();
}

uint64_t sub_10008A120()
{
  return Sequence.forEach(_:)();
}

uint64_t sub_10008A130()
{
  return Sequence.contains(where:)();
}

uint64_t sub_10008A140()
{
  return UnsignedInteger<>.init<A>(_:)();
}

uint64_t sub_10008A150()
{
  return RawRepresentable<>.hashValue.getter();
}

uint64_t sub_10008A160()
{
  return RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t sub_10008A170()
{
  return RawRepresentable<>.hash(into:)();
}

NSArray sub_10008A180()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10008A190()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008A1A0()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_10008A1B0()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_10008A1C0()
{
  return Array.count.getter();
}

uint64_t sub_10008A1D0()
{
  return Array.append<A>(contentsOf:)();
}

uint64_t sub_10008A1E0()
{
  return Array.append(_:)();
}

void sub_10008A1F0(Swift::Bool keepingCapacity)
{
}

uint64_t sub_10008A200()
{
  return type metadata accessor for Array();
}

uint64_t sub_10008A210()
{
  return static Array<A>.== infix(_:_:)();
}

uint64_t sub_10008A220()
{
  return Array.init<A>(_:)();
}

uint64_t sub_10008A230()
{
  return Array.subscript.getter();
}

uint64_t sub_10008A240()
{
  return Double._roundSlowPath(_:)();
}

uint64_t sub_10008A250()
{
  return static Double.infinity.getter();
}

double sub_10008A260(Swift::Double a1)
{
  return Double.init(_:)(a1);
}

NSSet sub_10008A270()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_10008A280()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008A290()
{
  return Set.init(arrayLiteral:)();
}

uint64_t sub_10008A2A0()
{
  return Set.count.getter();
}

uint64_t sub_10008A2B0()
{
  return Set.isEmpty.getter();
}

uint64_t sub_10008A2C0()
{
  return Set.init<A>(_:)();
}

NSNumber sub_10008A2D0()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_10008A2E0()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_10008A2F0()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_10008A300()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_10008A310()
{
  return Collection.firstIndex(where:)();
}

uint64_t sub_10008A320()
{
  return Collection.first.getter();
}

uint64_t sub_10008A330()
{
  return Collection.prefix(_:)();
}

uint64_t sub_10008A340()
{
  return Collection.isEmpty.getter();
}

uint64_t sub_10008A350()
{
  return Collection<>.makeIterator()();
}

uint64_t sub_10008A360()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_10008A370()
{
  return RangeReplaceableCollection.insert<A>(contentsOf:at:)();
}

uint64_t sub_10008A380()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_10008A390()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_10008A3A0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10008A3B0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10008A3C0()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t sub_10008A3D0()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_10008A3E0()
{
  return OS_dispatch_queue.asyncAfter(deadline:execute:)();
}

uint64_t sub_10008A3F0()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_10008A400()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_10008A410()
{
  return OS_dispatch_queue.async(execute:)();
}

uint64_t sub_10008A420()
{
  return type metadata accessor for MSBucketBarConfigurationController();
}

uint64_t sub_10008A430()
{
  return MSUserDefaultsBucketBarConfigurationProvider.init()();
}

uint64_t sub_10008A440()
{
  return type metadata accessor for MSUserDefaultsBucketBarConfigurationProvider();
}

void sub_10008A450()
{
}

uint64_t sub_10008A460()
{
  return UnsafeMutablePointer.deinitialize(count:)();
}

uint64_t sub_10008A470()
{
  return static UnsafeMutablePointer.allocate(capacity:)();
}

uint64_t sub_10008A480()
{
  return type metadata accessor for Optional();
}

uint64_t sub_10008A490()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10008A4A0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10008A4B0()
{
  return dispatch thunk of BinaryInteger._lowWord.getter();
}

uint64_t sub_10008A4C0()
{
  return dispatch thunk of BinaryInteger.bitWidth.getter();
}

uint64_t sub_10008A4D0()
{
  return dispatch thunk of static BinaryInteger.isSigned.getter();
}

uint64_t sub_10008A4E0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10008A4F0()
{
  return _expectEnd<A>(of:is:)();
}

uint64_t sub_10008A500()
{
  return _hashValue<A>(for:)();
}

uint64_t sub_10008A510()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10008A520()
{
  return _StringObject.sharedUTF8.getter();
}

void sub_10008A530(Swift::Int a1)
{
}

uint64_t sub_10008A540()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_10008A550()
{
  return ContiguousArray.init()();
}

uint64_t sub_10008A560()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_10008A570()
{
  return _arrayForceCast<A, B>(_:)();
}

uint64_t sub_10008A580()
{
  return IndexingIterator.next()();
}

uint64_t sub_10008A590()
{
  return dispatch thunk of static FixedWidthInteger.bitWidth.getter();
}

uint64_t sub_10008A5A0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10008A5B0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10008A5C0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_10008A5D0()
{
  return _SwiftNewtypeWrapper<>.hashValue.getter();
}

uint64_t sub_10008A5E0()
{
  return _SwiftNewtypeWrapper<>._rawHashValue(seed:)();
}

uint64_t sub_10008A5F0()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10008A600()
{
  return _SwiftNewtypeWrapper<>.hash(into:)();
}

uint64_t sub_10008A610()
{
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10008A620()
{
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10008A630()
{
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008A640()
{
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()();
}

uint64_t sub_10008A650()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10008A660()
{
  return type metadata accessor for FloatingPointRoundingRule();
}

uint64_t sub_10008A670()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_10008A680()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_10008A690()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

void sub_10008A6A0(Swift::String a1)
{
}

uint64_t sub_10008A6B0()
{
  return DefaultStringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10008A6C0()
{
  return _allocateUninitializedArray<A>(_:)();
}

uint64_t sub_10008A6D0()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_10008A6E0()
{
  return == infix<A>(_:_:)();
}

uint64_t sub_10008A6F0()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t sub_10008A700()
{
  return min<A>(_:_:)();
}

uint64_t sub_10008A710()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_10008A720()
{
  return Error._code.getter();
}

uint64_t sub_10008A730()
{
  return Error._domain.getter();
}

uint64_t sub_10008A740()
{
  return Error._userInfo.getter();
}

uint64_t sub_10008A750()
{
  return Hasher.combine<A>(_:)();
}

uint64_t sub_10008A760()
{
  return _typeName(_:qualified:)();
}

uint64_t EMBlackPearlIsFeatureEnabled()
{
  return _EMBlackPearlIsFeatureEnabled();
}

uint64_t MUIBucketFromEMCategoryType()
{
  return _MUIBucketFromEMCategoryType();
}

uint64_t MUIImageNameForBucket()
{
  return _MUIImageNameForBucket();
}

uint64_t MUIPlatformColorForBucket()
{
  return _MUIPlatformColorForBucket();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

uint64_t NSStringFromEMSmartMailboxType()
{
  return _NSStringFromEMSmartMailboxType();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializerInFile()
{
  return __swift_stdlib_reportUnimplementedInitializerInFile();
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocObject()
{
  return _swift_deallocObject();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return _swift_getEnumTagSinglePayloadGeneric();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return _swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}