uint64_t sub_1003702C8(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  a2();
  v10 = a3(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v10) {
    return 0;
  }
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    swift_retain();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_10038FA20(v11, v10);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    return v12;
  }
  v13 = ((uint64_t (*)(void))a2)();
  v14 = a4(v10, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    swift_release();
    return 0;
  }
  ((void (*)(uint64_t))a2)(v15);
  v17 = v16;
  if (*(void *)(v16 + 16) && (v18 = a5(v10), (v19 & 1) != 0)) {
    v12 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
  }
  else {
    v12 = 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100370498@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v8 - 8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a2, (uint64_t)v13, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    uint64_t v40 = a3;
    sub_100398360((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000890D8();
    v26 = (void *)v25;
    uint64_t v27 = sub_100091DF0((uint64_t)v17, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v27)
    {
      sub_100034624((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      uint64_t v23 = v40;
LABEL_22:
      uint64_t v24 = 1;
      return v22(v23, v24, 1, v14);
    }
    a3 = v40;
    if (*(unsigned char *)(v27 + 72))
    {
      if (*(unsigned char *)(v27 + 72) == 1)
      {
        uint64_t v28 = *(void *)(v4 + qword_10078DEB0);
        if (v28)
        {
          v29 = *(uint64_t (**)(uint64_t))(v28 + 16);
          uint64_t v30 = swift_retain();
          if (v29(v30))
          {
            Strong = (void *)swift_unknownObjectUnownedLoadStrong();
            sub_100034240((uint64_t)v17, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            v39 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
            v39(v10, 0, 1, v14);
            uint64_t v32 = v40;
            (*(void (**)(void *, unint64_t, char *))(v28 + 48))(Strong, a1, v10);
            swift_release();
            swift_release();

            sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_100788DC0);
            sub_100034624((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v39)(v32, 0, 1, v14);
          }
          swift_release();
          a3 = v40;
        }
      }
      else
      {
        v18 = (void *)(v27 + 64);
        swift_beginAccess();
        unint64_t v34 = *(void *)(v27 + 64);
        if (v34 >> 62)
        {
LABEL_27:
          v26 = v18;
          swift_bridgeObjectRetain();
          unint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if ((v35 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_29:
            uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_19:
            swift_endAccess();
            swift_release();
            sub_100034624((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v38 = v37 + *(void *)(*(void *)v37 + 144);
            swift_beginAccess();
            sub_100034240(v38, a3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            goto LABEL_5;
          }
          while (1)
          {
            v18 = v26;
            a3 = v40;
            if ((a1 & 0x8000000000000000) != 0) {
              goto LABEL_21;
            }
LABEL_15:
            if (v35 <= a1) {
              goto LABEL_21;
            }
            swift_beginAccess();
            uint64_t v36 = *v18;
            if ((*v18 & 0xC000000000000001) != 0) {
              goto LABEL_29;
            }
            if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
            {
              uint64_t v37 = *(void *)(v36 + 8 * a1 + 32);
              swift_retain();
              goto LABEL_19;
            }
            __break(1u);
          }
        }
        unint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if ((a1 & 0x8000000000000000) == 0) {
          goto LABEL_15;
        }
      }
    }
LABEL_21:
    swift_release();
    sub_100034624((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v23 = a3;
    goto LABEL_22;
  }
  sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_100788DC0);
  v18 = (void *)sub_1000890D8();
  v17 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v18[2] <= a1)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v20 = v18[2 * a1 + 4];
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v20 + *(void *)(*(void *)v20 + 144);
  swift_beginAccess();
  sub_100034240(v21, a3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_5:
  swift_release();
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v23 = a3;
  uint64_t v24 = 0;
  return v22(v23, v24, 1, v14);
}

uint64_t sub_100370A04(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788D10);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v9, (uint64_t *)&unk_100788D10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    sub_100398360((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100089354();
    uint64_t v17 = sub_100091FDC((uint64_t)v13, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v17)
    {
      sub_100034624((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      return 0;
    }
    if (*(unsigned char *)(v17 + 72))
    {
      if (*(unsigned char *)(v17 + 72) != 1)
      {
        swift_beginAccess();
        unint64_t v23 = *(void *)(v17 + 64);
        if (v23 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v15 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_release();
        }
        goto LABEL_12;
      }
      uint64_t v18 = *(void *)(v2 + qword_10078DEB0);
      if (v18)
      {
        v19 = *(uint64_t (**)(uint64_t))(v18 + 16);
        uint64_t v20 = swift_retain();
        if (v19(v20))
        {
          Strong = (void *)swift_unknownObjectUnownedLoadStrong();
          uint64_t v22 = v17 + *(void *)(*(void *)v17 + 144);
          swift_beginAccess();
          sub_100034240(v22, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
          uint64_t v15 = (*(uint64_t (**)(void *, char *))(v18 + 32))(Strong, v7);
          swift_release();
          swift_release();

          sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788D10);
LABEL_12:
          sub_100034624((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          return v15;
        }
        swift_release();
      }
    }
    swift_release();
    sub_100034624((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return 0;
  }
  sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788D10);
  uint64_t v14 = sub_100089354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100370DE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v9, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    sub_100398360((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000890D8();
    uint64_t v17 = sub_100091DF0((uint64_t)v13, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v17)
    {
      sub_100034624((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return 0;
    }
    if (*(unsigned char *)(v17 + 72))
    {
      if (*(unsigned char *)(v17 + 72) != 1)
      {
        swift_beginAccess();
        unint64_t v23 = *(void *)(v17 + 64);
        if (v23 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v15 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_release();
        }
        goto LABEL_12;
      }
      uint64_t v18 = *(void *)(v2 + qword_10078DEB0);
      if (v18)
      {
        v19 = *(uint64_t (**)(uint64_t))(v18 + 16);
        uint64_t v20 = swift_retain();
        if (v19(v20))
        {
          Strong = (void *)swift_unknownObjectUnownedLoadStrong();
          uint64_t v22 = v17 + *(void *)(*(void *)v17 + 144);
          swift_beginAccess();
          sub_100034240(v22, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
          uint64_t v15 = (*(uint64_t (**)(void *, char *))(v18 + 32))(Strong, v6);
          swift_release();
          swift_release();

          sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
LABEL_12:
          sub_100034624((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          return v15;
        }
        swift_release();
      }
    }
    swift_release();
    sub_100034624((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 0;
  }
  sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
  uint64_t v14 = sub_1000890D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1003711CC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_10078E8F0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v70 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v60 - v18;
  sub_10003B694(a1, (uint64_t)v14, (uint64_t *)&unk_100788D10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) != 1)
  {
    sub_100398360((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    uint64_t v21 = sub_100089354();
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    char v27 = v26;
    uint64_t v28 = (uint64_t)v11;
    uint64_t v69 = sub_100091FDC((uint64_t)v11, v22);
    if (!v69)
    {
      uint64_t v46 = type metadata accessor for IndexPath();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v19, 1, 1, v46);
LABEL_45:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100034624(v28, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      goto LABEL_46;
    }
    if (!*(void *)(v25 + 16) || (v67 = v21, uint64_t result = sub_10035C1D0(v69), (v30 & 1) == 0))
    {
      uint64_t v45 = type metadata accessor for IndexPath();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v19, 1, 1, v45);
LABEL_44:
      swift_release();
      goto LABEL_45;
    }
    unint64_t v31 = *(void *)(*(void *)(v25 + 56) + 8 * result);
    uint64_t v68 = v25;
    unint64_t v65 = v31;
    if (v27)
    {
      v60 = v11;
      v62 = v19;
      int v63 = a2;
      uint64_t v64 = a3;
      uint64_t v32 = v69;
      uint64_t Strong = swift_weakLoadStrong();
      uint64_t result = swift_retain();
      uint64_t v61 = v4;
      uint64_t v34 = 0;
      if (Strong)
      {
        uint64_t v66 = v23;
        do
        {
          BOOL v35 = __OFADD__(v34++, 1);
          if (v35)
          {
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          uint64_t v36 = Strong;
          swift_beginAccess();
          unint64_t v37 = *(void *)(Strong + 64);
          if (v37 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t result = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v38 = result;
            if (!result)
            {
LABEL_9:
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_10;
            }
          }
          else
          {
            uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            uint64_t result = swift_bridgeObjectRetain();
            if (!v38) {
              goto LABEL_9;
            }
          }
          if ((v37 & 0xC000000000000001) != 0)
          {
            uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v39 = result;
            if (result != v32) {
              goto LABEL_17;
            }
          }
          else
          {
            if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_57;
            }
            uint64_t v39 = *(void *)(v37 + 32);
            uint64_t result = swift_retain();
            if (v39 != v32)
            {
LABEL_17:
              uint64_t v40 = 0;
              uint64_t v41 = v38 - 1;
              while (1)
              {
                BOOL v35 = __OFADD__(v34, 1);
                uint64_t v42 = v34 + 1;
                if (v35) {
                  break;
                }
                if (*(unsigned char *)(v39 + 48))
                {
                  uint64_t v71 = 0;
                  sub_10020B4F8(v39, &v71);
                  uint64_t v43 = v71;
                  *(void *)(v39 + 40) = v71;
                  *(unsigned char *)(v39 + 48) = 0;
                }
                else
                {
                  uint64_t v43 = *(void *)(v39 + 40);
                }
                uint64_t result = swift_release();
                BOOL v35 = __OFADD__(v42, v43);
                uint64_t v34 = v42 + v43;
                if (v35) {
                  goto LABEL_53;
                }
                if (v41 == v40) {
                  goto LABEL_9;
                }
                unint64_t v44 = v40 + 1;
                if ((v37 & 0xC000000000000001) != 0)
                {
                  uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  uint64_t v39 = result;
                  if (__OFADD__(v44, 1)) {
                    goto LABEL_54;
                  }
                }
                else
                {
                  if (v44 >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_55;
                  }
                  uint64_t v39 = *(void *)(v37 + 8 * v40 + 40);
                  uint64_t result = swift_retain();
                  if (__OFADD__(v44, 1)) {
                    goto LABEL_54;
                  }
                }
                ++v40;
                if (v39 == v32) {
                  goto LABEL_31;
                }
              }
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
              goto LABEL_56;
            }
          }
LABEL_31:
          swift_bridgeObjectRelease();
          swift_release_n();
LABEL_10:
          uint64_t Strong = swift_weakLoadStrong();
          uint64_t result = swift_release();
          uint64_t v32 = v36;
        }
        while (Strong);
      }
      swift_release();
      uint64_t result = v34 - 1;
      if (!__OFSUB__(v34, 1))
      {
        a3 = v64;
        LOBYTE(a2) = v63;
        uint64_t v4 = v61;
        v19 = v62;
        uint64_t v28 = (uint64_t)v60;
        if (result < 0) {
          goto LABEL_43;
        }
LABEL_42:
        IndexPath.init(row:section:)();
        uint64_t v51 = type metadata accessor for IndexPath();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v19, 0, 1, v51);
        goto LABEL_44;
      }
    }
    else
    {
      if ((v31 & 0x8000000000000000) != 0) {
        goto LABEL_58;
      }
      uint64_t v47 = v69;
      if (v31 < *(void *)(v67 + 16))
      {
        unint64_t v48 = swift_bridgeObjectRetain();
        sub_100091DD8(v48, v47);
        char v50 = v49;
        swift_bridgeObjectRelease();
        if (v50)
        {
LABEL_43:
          uint64_t v52 = type metadata accessor for IndexPath();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v19, 1, 1, v52);
          goto LABEL_44;
        }
        goto LABEL_42;
      }
LABEL_59:
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v20 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
LABEL_46:
  v53 = *(void **)(v4 + qword_10078DEA0);
  uint64_t v54 = v70;
  sub_10003B694((uint64_t)v19, v70, &qword_10078E8F0);
  uint64_t v55 = type metadata accessor for IndexPath();
  uint64_t v56 = *(void *)(v55 - 8);
  int v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55);
  id v58 = v53;
  Class isa = 0;
  if (v57 != 1)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
  }
  [v58 selectRowAtIndexPath:isa animated:a2 & 1 scrollPosition:a3];

  return sub_10003B6F8((uint64_t)v19, &qword_10078E8F0);
}

uint64_t sub_1003719A8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v15 - 8);
  uint64_t v70 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v60 - v18;
  sub_10003B694(a1, (uint64_t)v14, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) != 1)
  {
    sub_100398360((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v21 = sub_1000890D8();
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    char v27 = v26;
    uint64_t v28 = (uint64_t)v11;
    uint64_t v69 = sub_100091DF0((uint64_t)v11, v22);
    if (!v69)
    {
      uint64_t v46 = type metadata accessor for IndexPath();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v19, 1, 1, v46);
LABEL_45:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100034624(v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_46;
    }
    if (!*(void *)(v25 + 16) || (v67 = v21, uint64_t result = sub_10035C1D0(v69), (v30 & 1) == 0))
    {
      uint64_t v45 = type metadata accessor for IndexPath();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v19, 1, 1, v45);
LABEL_44:
      swift_release();
      goto LABEL_45;
    }
    unint64_t v31 = *(void *)(*(void *)(v25 + 56) + 8 * result);
    uint64_t v68 = v25;
    unint64_t v65 = v31;
    if (v27)
    {
      v60 = v11;
      v62 = v19;
      int v63 = a2;
      uint64_t v64 = a3;
      uint64_t v32 = v69;
      uint64_t Strong = swift_weakLoadStrong();
      uint64_t result = swift_retain();
      uint64_t v61 = v4;
      uint64_t v34 = 0;
      if (Strong)
      {
        uint64_t v66 = v23;
        do
        {
          BOOL v35 = __OFADD__(v34++, 1);
          if (v35)
          {
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          uint64_t v36 = Strong;
          swift_beginAccess();
          unint64_t v37 = *(void *)(Strong + 64);
          if (v37 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t result = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v38 = result;
            if (!result)
            {
LABEL_9:
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_10;
            }
          }
          else
          {
            uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            uint64_t result = swift_bridgeObjectRetain();
            if (!v38) {
              goto LABEL_9;
            }
          }
          if ((v37 & 0xC000000000000001) != 0)
          {
            uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v39 = result;
            if (result != v32) {
              goto LABEL_17;
            }
          }
          else
          {
            if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_57;
            }
            uint64_t v39 = *(void *)(v37 + 32);
            uint64_t result = swift_retain();
            if (v39 != v32)
            {
LABEL_17:
              uint64_t v40 = 0;
              uint64_t v41 = v38 - 1;
              while (1)
              {
                BOOL v35 = __OFADD__(v34, 1);
                uint64_t v42 = v34 + 1;
                if (v35) {
                  break;
                }
                if (*(unsigned char *)(v39 + 48))
                {
                  uint64_t v71 = 0;
                  sub_10020B4F8(v39, &v71);
                  uint64_t v43 = v71;
                  *(void *)(v39 + 40) = v71;
                  *(unsigned char *)(v39 + 48) = 0;
                }
                else
                {
                  uint64_t v43 = *(void *)(v39 + 40);
                }
                uint64_t result = swift_release();
                BOOL v35 = __OFADD__(v42, v43);
                uint64_t v34 = v42 + v43;
                if (v35) {
                  goto LABEL_53;
                }
                if (v41 == v40) {
                  goto LABEL_9;
                }
                unint64_t v44 = v40 + 1;
                if ((v37 & 0xC000000000000001) != 0)
                {
                  uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  uint64_t v39 = result;
                  if (__OFADD__(v44, 1)) {
                    goto LABEL_54;
                  }
                }
                else
                {
                  if (v44 >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_55;
                  }
                  uint64_t v39 = *(void *)(v37 + 8 * v40 + 40);
                  uint64_t result = swift_retain();
                  if (__OFADD__(v44, 1)) {
                    goto LABEL_54;
                  }
                }
                ++v40;
                if (v39 == v32) {
                  goto LABEL_31;
                }
              }
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
              goto LABEL_56;
            }
          }
LABEL_31:
          swift_bridgeObjectRelease();
          swift_release_n();
LABEL_10:
          uint64_t Strong = swift_weakLoadStrong();
          uint64_t result = swift_release();
          uint64_t v32 = v36;
        }
        while (Strong);
      }
      swift_release();
      uint64_t result = v34 - 1;
      if (!__OFSUB__(v34, 1))
      {
        a3 = v64;
        LOBYTE(a2) = v63;
        uint64_t v4 = v61;
        v19 = v62;
        uint64_t v28 = (uint64_t)v60;
        if (result < 0) {
          goto LABEL_43;
        }
LABEL_42:
        IndexPath.init(row:section:)();
        uint64_t v51 = type metadata accessor for IndexPath();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v19, 0, 1, v51);
        goto LABEL_44;
      }
    }
    else
    {
      if ((v31 & 0x8000000000000000) != 0) {
        goto LABEL_58;
      }
      uint64_t v47 = v69;
      if (v31 < *(void *)(v67 + 16))
      {
        unint64_t v48 = swift_bridgeObjectRetain();
        sub_100091DD8(v48, v47);
        char v50 = v49;
        swift_bridgeObjectRelease();
        if (v50)
        {
LABEL_43:
          uint64_t v52 = type metadata accessor for IndexPath();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v19, 1, 1, v52);
          goto LABEL_44;
        }
        goto LABEL_42;
      }
LABEL_59:
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v20 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
LABEL_46:
  v53 = *(void **)(v4 + qword_10078DEA0);
  uint64_t v54 = v70;
  sub_10003B694((uint64_t)v19, v70, &qword_10078E8F0);
  uint64_t v55 = type metadata accessor for IndexPath();
  uint64_t v56 = *(void *)(v55 - 8);
  int v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55);
  id v58 = v53;
  Class isa = 0;
  if (v57 != 1)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
  }
  [v58 selectRowAtIndexPath:isa animated:a2 & 1 scrollPosition:a3];

  return sub_10003B6F8((uint64_t)v19, &qword_10078E8F0);
}

void *sub_100372184(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000890D8();
  uint64_t v10 = sub_100091DF0(a1, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v10) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v11 = sub_1000890D8();
  sub_1003CDB00(v10, v11, v13, v12 & 1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_release();
    sub_10003B6F8((uint64_t)v4, &qword_10078E8F0);
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = (void *)(*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    uint64_t v20 = 0;
    uint64_t result = (void *)sub_10020B4F8(v10, &v20);
    uint64_t v16 = v20;
    *(void *)(v10 + 40) = v20;
    *(unsigned char *)(v10 + 48) = 0;
  }
  else
  {
    uint64_t v16 = *(void *)(v10 + 40);
  }
  if ((v16 & 0x8000000000000000) == 0)
  {
    __chkstk_darwin(result);
    *(&v19 - 2) = (uint64_t)v8;
    sub_1005882DC((void (*)(uint64_t *))sub_1003955FC, (uint64_t)(&v19 - 4), 0, v17);
    uint64_t v14 = v18;
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (void *)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100372424(uint64_t a1, int a2)
{
  return sub_10037248C(a1, a2, (uint64_t (*)(double))sub_100089354, (uint64_t (*)(uint64_t))sub_100091FDC, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, uint64_t *))sub_10020B4F8);
}

uint64_t sub_10037248C(uint64_t a1, int a2, uint64_t (*a3)(double), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t), void (*a6)(uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t *))
{
  uint64_t v64 = a7;
  uint64_t v14 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for IndexPath();
  uint64_t v18 = *(void *)(v17 - 8);
  double v19 = __chkstk_darwin(v17);
  v59 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v7;
  uint64_t v21 = a3(v19);
  uint64_t v61 = v22;
  uint64_t v62 = v21;
  uint64_t v24 = v23;
  char v26 = v25;
  uint64_t v27 = a4(a1);
  uint64_t v63 = v24;
  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    uint64_t v46 = (uint64_t)v16;
    goto LABEL_42;
  }
  uint64_t v28 = v27;
  id v58 = v16;
  if (!*(void *)(v24 + 16)) {
    goto LABEL_40;
  }
  uint64_t result = a5(v27);
  if ((v30 & 1) == 0) {
    goto LABEL_40;
  }
  uint64_t v31 = *(void *)(v63 + 56);
  unint64_t v32 = *(void *)(v31 + 8 * result);
  if (v26)
  {
    v53[1] = *(void *)(v31 + 8 * result);
    uint64_t v54 = v18;
    uint64_t v55 = v17;
    int v56 = a2;
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t result = swift_retain();
    uint64_t v34 = 0;
    if (Strong)
    {
      uint64_t v35 = v28;
      uint64_t v57 = v28;
      do
      {
        BOOL v36 = __OFADD__(v34++, 1);
        if (v36)
        {
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        uint64_t v37 = Strong;
        swift_beginAccess();
        unint64_t v38 = *(void *)(Strong + 64);
        if (v38 >> 62)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t result = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v39 = result;
          if (!result)
          {
LABEL_7:
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
        }
        else
        {
          uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          uint64_t result = swift_bridgeObjectRetain();
          if (!v39) {
            goto LABEL_7;
          }
        }
        if ((v38 & 0xC000000000000001) != 0)
        {
          uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v40 = result;
          if (result != v35) {
            goto LABEL_15;
          }
        }
        else
        {
          if (!*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_54;
          }
          uint64_t v40 = *(void *)(v38 + 32);
          uint64_t result = swift_retain();
          if (v40 != v35)
          {
LABEL_15:
            uint64_t v41 = 0;
            uint64_t v42 = v39 - 1;
            while (1)
            {
              BOOL v36 = __OFADD__(v34, 1);
              uint64_t v43 = v34 + 1;
              if (v36) {
                break;
              }
              if (*(unsigned char *)(v40 + 48))
              {
                uint64_t v65 = 0;
                v64(v40, &v65);
                uint64_t v44 = v65;
                *(void *)(v40 + 40) = v65;
                *(unsigned char *)(v40 + 48) = 0;
              }
              else
              {
                uint64_t v44 = *(void *)(v40 + 40);
              }
              uint64_t result = swift_release();
              BOOL v36 = __OFADD__(v43, v44);
              uint64_t v34 = v43 + v44;
              if (v36) {
                goto LABEL_50;
              }
              if (v42 == v41) {
                goto LABEL_7;
              }
              unint64_t v45 = v41 + 1;
              if ((v38 & 0xC000000000000001) != 0)
              {
                uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
                uint64_t v40 = result;
                if (__OFADD__(v45, 1)) {
                  goto LABEL_51;
                }
              }
              else
              {
                if (v45 >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_52;
                }
                uint64_t v40 = *(void *)(v38 + 8 * v41 + 40);
                uint64_t result = swift_retain();
                if (__OFADD__(v45, 1)) {
                  goto LABEL_51;
                }
              }
              ++v41;
              if (v40 == v35) {
                goto LABEL_29;
              }
            }
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
            goto LABEL_53;
          }
        }
LABEL_29:
        swift_bridgeObjectRelease();
        swift_release_n();
LABEL_8:
        uint64_t Strong = swift_weakLoadStrong();
        uint64_t result = swift_release();
        uint64_t v35 = v37;
      }
      while (Strong);
    }
    swift_release();
    uint64_t result = v34 - 1;
    LOBYTE(a2) = v56;
    if (!__OFSUB__(v34, 1))
    {
      uint64_t v18 = v54;
      uint64_t v17 = v55;
      uint64_t v46 = (uint64_t)v58;
      if (result < 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v58, 1, 1, v55);
      }
      else
      {
        IndexPath.init(row:section:)();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v46, 0, 1, v17);
      }
      goto LABEL_41;
    }
LABEL_57:
    __break(1u);
    return result;
  }
  if ((v32 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  if (v32 >= *(void *)(v62 + 16))
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v47 = swift_bridgeObjectRetain();
  a6(v47, v28);
  char v49 = v48;
  swift_bridgeObjectRelease();
  if ((v49 & 1) == 0)
  {
    uint64_t v46 = (uint64_t)v58;
    IndexPath.init(row:section:)();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v46, 0, 1, v17);
  }
  else
  {
LABEL_40:
    uint64_t v46 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v58, 1, 1, v17);
  }
LABEL_41:
  swift_release();
LABEL_42:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v46, 1, v17) == 1) {
    return sub_10003B6F8(v46, &qword_10078E8F0);
  }
  char v50 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v59, v46, v17);
  id v51 = *(id *)(v60 + qword_10078DEA0);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v51 deselectRowAtIndexPath:isa animated:a2 & 1];

  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v50, v17);
}

uint64_t sub_100372A4C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v77 = a4;
  uint64_t v71 = a3;
  uint64_t v7 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v62 - v11;
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v73 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v62 - v17;
  uint64_t v78 = v4;
  uint64_t v19 = sub_1000890D8();
  uint64_t v21 = v20;
  char v23 = v22;
  v72 = (void (*)(char *, char *, uint64_t))v24;
  char v25 = (unsigned int (*)(void, void, void))sub_100091DF0(a1, v24);
  v79 = v9;
  v74 = v25;
  uint64_t v75 = v21;
  if (!v25)
  {
    uint64_t v76 = *(void *)(v14 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v76)(v12, 1, 1, v13);
    goto LABEL_44;
  }
  if (!*(void *)(v21 + 16) || (v70 = v19, uint64_t result = sub_10035C1D0(v74), (v27 & 1) == 0))
  {
    uint64_t v76 = *(void *)(v14 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v76)(v12, 1, 1, v13);
    swift_release();
    goto LABEL_44;
  }
  unint64_t v28 = *(void *)(*(void *)(v75 + 56) + 8 * result);
  uint64_t v68 = (void *)v28;
  if (v23)
  {
    uint64_t v63 = v12;
    uint64_t v69 = v14;
    uint64_t v67 = v13;
    v29 = v74;
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t result = swift_retain();
    uint64_t v66 = a1;
    int v65 = a2;
    uint64_t v64 = v18;
    uint64_t v31 = 0;
    if (!Strong)
    {
LABEL_6:
      swift_release();
      uint64_t result = v31 - 1;
      if (!__OFSUB__(v31, 1))
      {
        a1 = v66;
        uint64_t v13 = v67;
        uint64_t v14 = v69;
        LOBYTE(a2) = v65;
        uint64_t v18 = v64;
        char v12 = v63;
        if (result < 0)
        {
          unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56);
          v33 = v63;
          uint64_t v34 = 1;
        }
        else
        {
          IndexPath.init(row:section:)();
          unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
          v33 = v12;
          uint64_t v34 = 0;
        }
        uint64_t v76 = (uint64_t)v32;
        v32(v33, v34, 1, v13);
        swift_release();
        goto LABEL_44;
      }
LABEL_65:
      __break(1u);
      return result;
    }
    while (1)
    {
      if (__OFADD__(v31++, 1))
      {
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      BOOL v36 = (unsigned int (*)(void, void, void))Strong;
      swift_beginAccess();
      unint64_t v37 = *(void *)(Strong + 64);
      if (v37 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v38 = result;
        if (!result)
        {
LABEL_9:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        uint64_t result = swift_bridgeObjectRetain();
        if (!v38) {
          goto LABEL_9;
        }
      }
      if ((v37 & 0xC000000000000001) != 0)
      {
        uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v39 = result;
        if ((unsigned int (*)(void, void, void))result != v29) {
          goto LABEL_17;
        }
      }
      else
      {
        if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_62;
        }
        uint64_t v39 = *(void *)(v37 + 32);
        uint64_t result = swift_retain();
        if ((unsigned int (*)(void, void, void))v39 != v29)
        {
LABEL_17:
          uint64_t v40 = 0;
          uint64_t v76 = v37 & 0xFFFFFFFFFFFFFF8;
          uint64_t v41 = v38 - 1;
          while (1)
          {
            uint64_t v42 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              break;
            }
            if (*(unsigned char *)(v39 + 48))
            {
              uint64_t v80 = 0;
              sub_10020B4F8(v39, &v80);
              uint64_t v43 = v80;
              *(void *)(v39 + 40) = v80;
              *(unsigned char *)(v39 + 48) = 0;
            }
            else
            {
              uint64_t v43 = *(void *)(v39 + 40);
            }
            uint64_t result = swift_release();
            uint64_t v31 = v42 + v43;
            if (__OFADD__(v42, v43)) {
              goto LABEL_58;
            }
            if (v41 == v40) {
              goto LABEL_9;
            }
            unint64_t v44 = v40 + 1;
            if ((v37 & 0xC000000000000001) != 0)
            {
              uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v39 = result;
              if (__OFADD__(v44, 1)) {
                goto LABEL_59;
              }
            }
            else
            {
              if (v44 >= *(void *)(v76 + 16)) {
                goto LABEL_60;
              }
              uint64_t v39 = *(void *)(v37 + 8 * v40 + 40);
              uint64_t result = swift_retain();
              if (__OFADD__(v44, 1)) {
                goto LABEL_59;
              }
            }
            ++v40;
            if ((unsigned int (*)(void, void, void))v39 == v29) {
              goto LABEL_31;
            }
          }
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
      }
LABEL_31:
      swift_bridgeObjectRelease();
      swift_release_n();
LABEL_10:
      uint64_t Strong = swift_weakLoadStrong();
      uint64_t result = swift_release();
      v29 = v36;
      uint64_t v9 = v79;
      if (!Strong) {
        goto LABEL_6;
      }
    }
  }
  if ((v28 & 0x8000000000000000) != 0) {
    goto LABEL_63;
  }
  if (v28 >= *(void *)(v70 + 16))
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  unint64_t v45 = swift_bridgeObjectRetain();
  sub_100091DD8(v45, (uint64_t)v74);
  char v47 = v46;
  swift_bridgeObjectRelease();
  if (v47)
  {
    char v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    char v49 = v12;
    uint64_t v50 = 1;
  }
  else
  {
    IndexPath.init(row:section:)();
    char v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    char v49 = v12;
    uint64_t v50 = 0;
  }
  uint64_t v76 = (uint64_t)v48;
  v48(v49, v50, 1, v13);
  swift_release();
  uint64_t v9 = v79;
LABEL_44:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v74 = *(unsigned int (**)(void, void, void))(v14 + 48);
  uint64_t v75 = v14 + 48;
  if (v74(v12, 1, v13) == 1)
  {
    uint64_t result = sub_10003B6F8((uint64_t)v12, &qword_10078E8F0);
    if ((a2 & 1) == 0) {
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
    id v51 = *(id *)(v78 + qword_10078DEA0);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v51 highlightRowAtIndexPath:isa animated:v77 & 1 scrollPosition:v71];

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    if ((a2 & 1) == 0) {
      return result;
    }
  }
  uint64_t v69 = v14;
  uint64_t v68 = sub_100372184(a1);
  uint64_t v53 = v68[2];
  if (v53)
  {
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
    uint64_t v71 = qword_10078DEA0;
    v72 = v54;
    uint64_t v55 = (char *)v68 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
    uint64_t v70 = *(void *)(v69 + 72);
    int v56 = (void (**)(char *, char *, uint64_t))(v69 + 32);
    uint64_t v57 = (void (**)(char *, uint64_t))(v69 + 8);
    id v58 = v73;
    while (1)
    {
      v72(v9, v55, v13);
      ((void (*)(char *, void, uint64_t, uint64_t))v76)(v9, 0, 1, v13);
      if (v74(v9, 1, v13) == 1) {
        break;
      }
      v59 = *(void **)(v78 + v71);
      (*v56)(v58, v9, v13);
      id v60 = v59;
      Class v61 = IndexPath._bridgeToObjectiveC()().super.isa;
      (*v57)(v58, v13);
      [v60 highlightRowAtIndexPath:v61 animated:v77 & 1 scrollPosition:0];

      uint64_t v9 = v79;
      v55 += v70;
      if (!--v53) {
        goto LABEL_52;
      }
    }
  }
  else
  {
LABEL_52:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v76)(v9, 1, 1, v13);
  }
  return swift_bridgeObjectRelease();
}

void sub_100373204(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_10078DE60);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRITreeViewTableAdapter: updating for collapsed states change", v10, 2u);
      swift_slowDealloc();
    }

    a3(a1, 1);
  }
}

uint64_t sub_100373334(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v142 = a3;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5 - 8);
  uint64_t v130 = (uint64_t)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v129 = (uint64_t)&v128 - v8;
  __chkstk_darwin(v9);
  uint64_t v132 = (uint64_t)&v128 - v10;
  __chkstk_darwin(v11);
  uint64_t v131 = (uint64_t)&v128 - v12;
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v146 = *(void *)(v13 - 8);
  __chkstk_darwin(v13 - 8);
  uint64_t v147 = (uint64_t)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v140 = (uint64_t)&v128 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v128 - v18;
  __chkstk_darwin(v20);
  uint64_t v141 = (uint64_t)&v128 - v21;
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v133 = a1 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  uint64_t v145 = qword_10078DED8;
  uint64_t v26 = a2 + qword_10078DED0;
  int64_t v139 = (unint64_t)(v23 + 63) >> 6;
  int64_t v143 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v28 = 0;
  uint64_t v144 = a2;
  uint64_t v148 = v26;
  v135 = v19;
  while (1)
  {
    if (v25)
    {
      unint64_t v29 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v30 = v29 | (v28 << 6);
      goto LABEL_21;
    }
    int64_t v31 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    if (v31 >= v139) {
      goto LABEL_59;
    }
    unint64_t v32 = *(void *)(v133 + 8 * v31);
    ++v28;
    if (!v32)
    {
      int64_t v28 = v31 + 1;
      if (v31 + 1 >= v139) {
        goto LABEL_59;
      }
      unint64_t v32 = *(void *)(v133 + 8 * v28);
      if (!v32) {
        break;
      }
    }
LABEL_20:
    unint64_t v25 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v28 << 6);
LABEL_21:
    uint64_t v34 = v141;
    sub_100034240(*(void *)(v143 + 48) + *(void *)(v146 + 72) * v30, v141, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_100398360(v34, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (*(unsigned char *)(a2 + v145) == 1)
    {
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      sub_100018BF8(v35, (uint64_t)qword_10078DE60);
      BOOL v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Attempting to read sectionMetadata while it is being modified", v38, 2u);
        swift_slowDealloc();
      }
    }
    uint64_t v39 = *(void *)(v26 + 8);
    uint64_t v40 = *(void *)(v26 + 16);
    if (*(void *)v26)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!*(void *)(v39 + 16)) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v137 = *(void *)(v26 + 16);
      uint64_t v138 = v39;
      int v136 = *(unsigned __int8 *)(v26 + 24);
      sub_10003B754((uint64_t *)&unk_10078E3A0);
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        if (result)
        {
          uint64_t v72 = result;
          if (result < 1) {
            goto LABEL_122;
          }
          v73 = &_swiftEmptyArrayStorage[4];
          uint64_t v26 = v148;
          do
          {
            uint64_t v74 = *v73++;
            swift_weakAssign();
            swift_beginAccess();
            *(void *)(v74 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease();
            --v72;
          }
          while (v72);
        }
      }
      sub_10008EDE8(v41);
      uint64_t v43 = v42;
      uint64_t v39 = v44;
      uint64_t v40 = v45;
      char v47 = v46;
      swift_release();
      char v48 = v47 & 1;
      uint64_t v49 = *(void *)v26;
      *(void *)uint64_t v26 = v43;
      *(void *)(v26 + 8) = v39;
      *(void *)(v26 + 16) = v40;
      *(unsigned char *)(v26 + 24) = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a2 = v144;
      sub_1000349CC(v49);
      sub_1000349CC(0);
      uint64_t v19 = v135;
      if (!*(void *)(v39 + 16))
      {
LABEL_4:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    unint64_t v50 = sub_10035C1D4((uint64_t)v19);
    if ((v51 & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v138 = v40;
    uint64_t v52 = *(void *)(*(void *)(v39 + 56) + 8 * v50);
    unint64_t v53 = v52 & 0xC000000000000001;
    int64_t v134 = v28;
    if ((v52 & 0xC000000000000001) != 0)
    {
      uint64_t v54 = __CocoaSet.startIndex.getter();
      uint64_t v56 = v55;
      __CocoaSet.endIndex.getter();
      char v57 = static __CocoaSet.Index.== infix(_:_:)();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v58 = v54;
      if (v57) {
        goto LABEL_53;
      }
    }
    else
    {
      char v59 = *(unsigned char *)(v52 + 32);
      uint64_t v54 = 1 << v59;
      unint64_t v60 = *(void *)(v52 + 56);
      if (v60)
      {
        uint64_t v61 = 0;
      }
      else
      {
        unsigned int v68 = v59 & 0x3F;
        if (v68 < 7) {
          goto LABEL_52;
        }
        unint64_t v60 = *(void *)(v52 + 64);
        if (v60)
        {
          uint64_t v61 = 1;
        }
        else
        {
          if (v68 < 8) {
            goto LABEL_52;
          }
          unint64_t v60 = *(void *)(v52 + 72);
          if (!v60)
          {
            uint64_t v69 = 0;
            unint64_t v70 = (unint64_t)(v54 + 63) >> 6;
            if (v70 <= 3) {
              unint64_t v70 = 3;
            }
            unint64_t v71 = v70 - 3;
            while (v71 != v69)
            {
              unint64_t v60 = *(void *)(v52 + 80 + 8 * v69++);
              if (v60)
              {
                uint64_t v61 = v69 + 2;
                goto LABEL_38;
              }
            }
LABEL_52:
            uint64_t v56 = *(unsigned int *)(v52 + 36);
            swift_bridgeObjectRetain();
LABEL_53:
            sub_1000205F8(v54, v56, v53 != 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a2 = v144;
            uint64_t v26 = v148;
            uint64_t v19 = v135;
            int64_t v28 = v134;
LABEL_5:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
          uint64_t v61 = 2;
        }
      }
LABEL_38:
      uint64_t v58 = __clz(__rbit64(v60)) + (v61 << 6);
      uint64_t v56 = *(unsigned int *)(v52 + 36);
      swift_bridgeObjectRetain();
      if (v58 == v54) {
        goto LABEL_53;
      }
    }
    uint64_t v62 = sub_100598760(v58, v56, v53 != 0, v52);
    sub_1000205F8(v58, v56, v53 != 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = v62 + *(void *)(*(void *)v62 + 144);
    swift_beginAccess();
    uint64_t v64 = v63;
    uint64_t v65 = v132;
    sub_100034240(v64, v132, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    uint64_t v66 = v65;
    uint64_t v67 = v131;
    sub_100398360(v66, v131, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    a2 = v144;
    sub_100095D78(v67, 5);
    sub_100034624(v67, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v26 = v148;
    uint64_t v19 = v135;
    int64_t v28 = v134;
LABEL_6:
    uint64_t result = sub_100034624((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  int64_t v33 = v31 + 2;
  if (v33 < v139)
  {
    unint64_t v32 = *(void *)(v133 + 8 * v33);
    if (!v32)
    {
      while (1)
      {
        int64_t v28 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          break;
        }
        if (v28 >= v139) {
          goto LABEL_59;
        }
        unint64_t v32 = *(void *)(v133 + 8 * v28);
        ++v33;
        if (v32) {
          goto LABEL_20;
        }
      }
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    int64_t v28 = v33;
    goto LABEL_20;
  }
LABEL_59:
  swift_release();
  uint64_t v75 = *(void *)(v142 + 56);
  uint64_t v138 = v142 + 56;
  uint64_t v76 = 1 << *(unsigned char *)(v142 + 32);
  uint64_t v77 = -1;
  if (v76 < 64) {
    uint64_t v77 = ~(-1 << v76);
  }
  unint64_t v78 = v77 & v75;
  int64_t v139 = (unint64_t)(v76 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v79 = 0;
  while (2)
  {
    if (v78)
    {
      unint64_t v80 = __clz(__rbit64(v78));
      v78 &= v78 - 1;
      unint64_t v81 = v80 | (v79 << 6);
      goto LABEL_79;
    }
    int64_t v82 = v79 + 1;
    if (__OFADD__(v79, 1)) {
      goto LABEL_119;
    }
    if (v82 >= v139) {
      return swift_release();
    }
    unint64_t v83 = *(void *)(v138 + 8 * v82);
    ++v79;
    if (v83) {
      goto LABEL_78;
    }
    int64_t v79 = v82 + 1;
    if (v82 + 1 >= v139) {
      return swift_release();
    }
    unint64_t v83 = *(void *)(v138 + 8 * v79);
    if (v83)
    {
LABEL_78:
      unint64_t v78 = (v83 - 1) & v83;
      unint64_t v81 = __clz(__rbit64(v83)) + (v79 << 6);
LABEL_79:
      uint64_t v85 = v140;
      sub_100034240(*(void *)(v142 + 48) + *(void *)(v146 + 72) * v81, v140, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_100398360(v85, v147, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if (*(unsigned char *)(a2 + v145) == 1)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v86 = type metadata accessor for Logger();
        sub_100018BF8(v86, (uint64_t)qword_10078DE60);
        v87 = Logger.logObject.getter();
        os_log_type_t v88 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v87, v88))
        {
          v89 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v89 = 0;
          _os_log_impl((void *)&_mh_execute_header, v87, v88, "Attempting to read sectionMetadata while it is being modified", v89, 2u);
          swift_slowDealloc();
        }
      }
      uint64_t v90 = *(void *)(v26 + 8);
      if (*(void *)v26)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v91 = v90;
        if (!*(void *)(v90 + 16)) {
          goto LABEL_62;
        }
      }
      else
      {
        int64_t v143 = v79;
        LODWORD(v141) = *(unsigned __int8 *)(v26 + 24);
        sub_10003B754((uint64_t *)&unk_10078E3A0);
        uint64_t v92 = swift_allocObject();
        *(void *)(v92 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          uint64_t result = _CocoaArrayWrapper.endIndex.getter();
          if (result)
          {
            uint64_t v125 = result;
            if (result < 1) {
              goto LABEL_123;
            }
            v126 = &_swiftEmptyArrayStorage[4];
            do
            {
              uint64_t v127 = *v126++;
              swift_weakAssign();
              swift_beginAccess();
              *(void *)(v127 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease();
              --v125;
            }
            while (v125);
          }
        }
        sub_10008EDE8(v92);
        uint64_t v94 = v93;
        uint64_t v91 = v95;
        uint64_t v97 = v96;
        char v99 = v98;
        swift_release();
        char v100 = v99 & 1;
        uint64_t v101 = *(void *)v26;
        *(void *)uint64_t v148 = v94;
        *(void *)(v148 + 8) = v91;
        *(void *)(v148 + 16) = v97;
        *(unsigned char *)(v148 + 24) = v100;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v26 = v148;
        a2 = v144;
        sub_1000349CC(v101);
        sub_1000349CC(0);
        int64_t v79 = v143;
        if (!*(void *)(v91 + 16)) {
          goto LABEL_62;
        }
      }
      unint64_t v102 = sub_10035C1D4(v147);
      if ((v103 & 1) == 0)
      {
LABEL_62:
        swift_bridgeObjectRelease();
LABEL_63:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_64:
        uint64_t result = sub_100034624(v147, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        continue;
      }
      uint64_t v104 = *(void *)(*(void *)(v91 + 56) + 8 * v102);
      unint64_t v105 = v104 & 0xC000000000000001;
      int64_t v143 = v79;
      if ((v104 & 0xC000000000000001) != 0)
      {
        uint64_t v106 = __CocoaSet.startIndex.getter();
        uint64_t v108 = v107;
        __CocoaSet.endIndex.getter();
        char v109 = static __CocoaSet.Index.== infix(_:_:)();
        swift_bridgeObjectRetain();
        unint64_t v105 = v104 & 0xC000000000000001;
        swift_bridgeObjectRelease();
        uint64_t v110 = v106;
        if (v109) {
          goto LABEL_111;
        }
LABEL_97:
        char v114 = v105 != 0;
        uint64_t v115 = sub_100598760(v110, v108, v105 != 0, v104);
        sub_1000205F8(v110, v108, v114);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v116 = v115 + *(void *)(*(void *)v115 + 144);
        swift_beginAccess();
        uint64_t v117 = v116;
        uint64_t v118 = v130;
        sub_100034240(v117, v130, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_release();
        uint64_t v119 = v118;
        uint64_t v120 = v129;
        sub_100398360(v119, v129, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        a2 = v144;
        sub_100095830(v120, 5);
        sub_100034624(v120, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v26 = v148;
        int64_t v79 = v143;
        goto LABEL_64;
      }
      char v111 = *(unsigned char *)(v104 + 32);
      uint64_t v106 = 1 << v111;
      unint64_t v112 = *(void *)(v104 + 56);
      if (v112)
      {
        uint64_t v113 = 0;
        goto LABEL_96;
      }
      unsigned int v121 = v111 & 0x3F;
      if (v121 >= 7)
      {
        unint64_t v112 = *(void *)(v104 + 64);
        if (v112)
        {
          uint64_t v113 = 1;
          goto LABEL_96;
        }
        if (v121 >= 8)
        {
          unint64_t v112 = *(void *)(v104 + 72);
          if (v112)
          {
            uint64_t v113 = 2;
LABEL_96:
            uint64_t v110 = __clz(__rbit64(v112)) + (v113 << 6);
            uint64_t v108 = *(unsigned int *)(v104 + 36);
            swift_bridgeObjectRetain();
            if (v110 != v106) {
              goto LABEL_97;
            }
LABEL_111:
            sub_1000205F8(v106, v108, v105 != 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int64_t v79 = v143;
            a2 = v144;
            uint64_t v26 = v148;
            goto LABEL_63;
          }
          uint64_t v122 = 0;
          unint64_t v123 = (unint64_t)(v106 + 63) >> 6;
          if (v123 <= 3) {
            unint64_t v123 = 3;
          }
          unint64_t v124 = v123 - 3;
          while (v124 != v122)
          {
            unint64_t v112 = *(void *)(v104 + 80 + 8 * v122++);
            if (v112)
            {
              uint64_t v113 = v122 + 2;
              goto LABEL_96;
            }
          }
        }
      }
      uint64_t v108 = *(unsigned int *)(v104 + 36);
      swift_bridgeObjectRetain();
      goto LABEL_111;
    }
    break;
  }
  int64_t v84 = v82 + 2;
  if (v84 >= v139) {
    return swift_release();
  }
  unint64_t v83 = *(void *)(v138 + 8 * v84);
  if (v83)
  {
    int64_t v79 = v84;
    goto LABEL_78;
  }
  while (1)
  {
    int64_t v79 = v84 + 1;
    if (__OFADD__(v84, 1)) {
      break;
    }
    if (v79 >= v139) {
      return swift_release();
    }
    unint64_t v83 = *(void *)(v138 + 8 * v79);
    ++v84;
    if (v83) {
      goto LABEL_78;
    }
  }
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
  return result;
}

uint64_t sub_100374288(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v147 = a3;
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v137 = (uint64_t)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v136 = (uint64_t)&v135 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v139 = (uint64_t)&v135 - v11;
  __chkstk_darwin(v10);
  uint64_t v138 = (uint64_t)&v135 - v12;
  uint64_t v13 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v153 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v154 = (uint64_t)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v144 = (uint64_t)&v135 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v135 - v19;
  __chkstk_darwin(v18);
  uint64_t v145 = (uint64_t)&v135 - v21;
  uint64_t v22 = *(void *)(a1 + 56);
  int64_t v140 = a1 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  uint64_t v152 = qword_10078DED8;
  uint64_t v155 = a2 + qword_10078DED0;
  int64_t v142 = (unint64_t)(v23 + 63) >> 6;
  int64_t v146 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v27 = 0;
  uint64_t v149 = a2;
  uint64_t v141 = v20;
  while (1)
  {
    if (v25)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      uint64_t v29 = (v25 - 1) & v25;
      unint64_t v30 = v28 | (v27 << 6);
      goto LABEL_23;
    }
    int64_t v31 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (v31 >= v142) {
      goto LABEL_61;
    }
    unint64_t v32 = *(void *)(v140 + 8 * v31);
    ++v27;
    if (!v32)
    {
      int64_t v27 = v31 + 1;
      if (v31 + 1 >= v142) {
        goto LABEL_61;
      }
      unint64_t v32 = *(void *)(v140 + 8 * v27);
      if (!v32)
      {
        int64_t v27 = v31 + 2;
        if (v31 + 2 >= v142) {
          goto LABEL_61;
        }
        unint64_t v32 = *(void *)(v140 + 8 * v27);
        if (!v32) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v27 << 6);
LABEL_23:
    uint64_t v34 = v145;
    sub_100034240(*(void *)(v146 + 48) + *(void *)(v153 + 72) * v30, v145, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_100398360(v34, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    if (*(unsigned char *)(a2 + v152) == 1)
    {
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      sub_100018BF8(v35, (uint64_t)qword_10078DE60);
      BOOL v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Attempting to read sectionMetadata while it is being modified", v38, 2u);
        swift_slowDealloc();
      }
    }
    uint64_t v39 = *(void *)v155;
    uint64_t v40 = *(void *)(v155 + 8);
    uint64_t v41 = *(void *)(v155 + 16);
    int v42 = *(unsigned __int8 *)(v155 + 24);
    unint64_t v151 = v29;
    if (v39)
    {
      uint64_t v43 = v40;
      uint64_t v150 = v41;
    }
    else
    {
      LODWORD(v143) = v42;
      int64_t v148 = v27;
      sub_10003B754((uint64_t *)&unk_100788D20);
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = sub_100090290((unint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        if (result)
        {
          uint64_t v77 = result;
          if (result < 1) {
            goto LABEL_126;
          }
          unint64_t v78 = &_swiftEmptyArrayStorage[4];
          do
          {
            uint64_t v79 = *v78++;
            swift_weakAssign();
            swift_beginAccess();
            *(void *)(v79 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease();
            --v77;
          }
          while (v77);
        }
      }
      sub_10008F2F8(inited);
      uint64_t v46 = v45;
      uint64_t v43 = v47;
      uint64_t v49 = v48;
      char v51 = v50;
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      uint64_t v52 = v155;
      uint64_t v53 = *(void *)v155;
      *(void *)uint64_t v155 = v46;
      *(void *)(v52 + 8) = v43;
      *(void *)(v52 + 16) = v49;
      *(unsigned char *)(v52 + 24) = v51 & 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v150 = v49;
      swift_bridgeObjectRetain();
      a2 = v149;
      sub_1000349CC(v53);
      uint64_t v20 = v141;
      int64_t v27 = v148;
    }
    uint64_t v54 = *(void *)(v43 + 16);
    sub_100032FE8(v39);
    if (!v54 || (unint64_t v55 = sub_10035C64C((uint64_t)v20), (v56 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    int64_t v148 = v27;
    uint64_t v57 = *(void *)(*(void *)(v43 + 56) + 8 * v55);
    unint64_t v58 = v57 & 0xC000000000000001;
    if ((v57 & 0xC000000000000001) != 0)
    {
      uint64_t v59 = __CocoaSet.startIndex.getter();
      uint64_t v61 = v60;
      __CocoaSet.endIndex.getter();
      char v62 = static __CocoaSet.Index.== infix(_:_:)();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v63 = v59;
      if (v62) {
        goto LABEL_55;
      }
    }
    else
    {
      char v64 = *(unsigned char *)(v57 + 32);
      uint64_t v59 = 1 << v64;
      unint64_t v65 = *(void *)(v57 + 56);
      if (v65)
      {
        uint64_t v66 = 0;
      }
      else
      {
        unsigned int v73 = v64 & 0x3F;
        if (v73 < 7) {
          goto LABEL_54;
        }
        unint64_t v65 = *(void *)(v57 + 64);
        if (v65)
        {
          uint64_t v66 = 1;
        }
        else
        {
          if (v73 < 8) {
            goto LABEL_54;
          }
          unint64_t v65 = *(void *)(v57 + 72);
          if (!v65)
          {
            uint64_t v74 = 0;
            unint64_t v75 = (unint64_t)(v59 + 63) >> 6;
            if (v75 <= 3) {
              unint64_t v75 = 3;
            }
            unint64_t v76 = v75 - 3;
            while (v76 != v74)
            {
              unint64_t v65 = *(void *)(v57 + 80 + 8 * v74++);
              if (v65)
              {
                uint64_t v66 = v74 + 2;
                goto LABEL_40;
              }
            }
LABEL_54:
            uint64_t v61 = *(unsigned int *)(v57 + 36);
            swift_bridgeObjectRetain();
LABEL_55:
            sub_1000205F8(v59, v61, v58 != 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v20 = v141;
            int64_t v27 = v148;
LABEL_5:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
          uint64_t v66 = 2;
        }
      }
LABEL_40:
      uint64_t v63 = __clz(__rbit64(v65)) + (v66 << 6);
      uint64_t v61 = *(unsigned int *)(v57 + 36);
      swift_bridgeObjectRetain();
      if (v63 == v59) {
        goto LABEL_55;
      }
    }
    uint64_t v67 = sub_1005989E4(v63, v61, v58 != 0, v57);
    sub_1000205F8(v63, v61, v58 != 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v68 = v67 + *(void *)(*(void *)v67 + 144);
    swift_beginAccess();
    uint64_t v69 = v68;
    uint64_t v70 = v139;
    sub_100034240(v69, v139, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_release();
    uint64_t v71 = v70;
    uint64_t v72 = v138;
    sub_100398360(v71, v138, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_1000926D8(v72, 5);
    sub_100034624(v72, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    uint64_t v20 = v141;
    int64_t v27 = v148;
LABEL_6:
    unint64_t v25 = v151;
    uint64_t result = sub_100034624((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  int64_t v33 = v31 + 3;
  if (v33 < v142)
  {
    unint64_t v32 = *(void *)(v140 + 8 * v33);
    if (!v32)
    {
      while (1)
      {
        int64_t v27 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          break;
        }
        if (v27 >= v142) {
          goto LABEL_61;
        }
        unint64_t v32 = *(void *)(v140 + 8 * v27);
        ++v33;
        if (v32) {
          goto LABEL_22;
        }
      }
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
    int64_t v27 = v33;
    goto LABEL_22;
  }
LABEL_61:
  swift_release();
  uint64_t v80 = *(void *)(v147 + 56);
  uint64_t v145 = v147 + 56;
  uint64_t v81 = 1 << *(unsigned char *)(v147 + 32);
  uint64_t v82 = -1;
  if (v81 < 64) {
    uint64_t v82 = ~(-1 << v81);
  }
  unint64_t v83 = v82 & v80;
  int64_t v146 = (unint64_t)(v81 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v84 = 0;
  while (2)
  {
    if (v83)
    {
      unint64_t v85 = __clz(__rbit64(v83));
      v83 &= v83 - 1;
      unint64_t v86 = v85 | (v84 << 6);
      goto LABEL_83;
    }
    int64_t v87 = v84 + 1;
    if (__OFADD__(v84, 1)) {
      goto LABEL_123;
    }
    if (v87 >= v146) {
      return swift_release();
    }
    unint64_t v88 = *(void *)(v145 + 8 * v87);
    ++v84;
    if (v88) {
      goto LABEL_82;
    }
    int64_t v84 = v87 + 1;
    if (v87 + 1 >= v146) {
      return swift_release();
    }
    unint64_t v88 = *(void *)(v145 + 8 * v84);
    if (v88) {
      goto LABEL_82;
    }
    int64_t v84 = v87 + 2;
    if (v87 + 2 >= v146) {
      return swift_release();
    }
    unint64_t v88 = *(void *)(v145 + 8 * v84);
    if (v88)
    {
LABEL_82:
      unint64_t v83 = (v88 - 1) & v88;
      unint64_t v86 = __clz(__rbit64(v88)) + (v84 << 6);
LABEL_83:
      uint64_t v90 = v144;
      sub_100034240(*(void *)(v147 + 48) + *(void *)(v153 + 72) * v86, v144, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      sub_100398360(v90, v154, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      if (*(unsigned char *)(a2 + v152) == 1)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v91 = type metadata accessor for Logger();
        sub_100018BF8(v91, (uint64_t)qword_10078DE60);
        uint64_t v92 = Logger.logObject.getter();
        os_log_type_t v93 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v92, v93))
        {
          uint64_t v94 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v94 = 0;
          _os_log_impl((void *)&_mh_execute_header, v92, v93, "Attempting to read sectionMetadata while it is being modified", v94, 2u);
          swift_slowDealloc();
        }
      }
      uint64_t v96 = *(void *)v155;
      uint64_t v95 = *(void *)(v155 + 8);
      if (*(void *)v155)
      {
        uint64_t v97 = *(void *)(v155 + 8);
      }
      else
      {
        LODWORD(v148) = *(unsigned __int8 *)(v155 + 24);
        uint64_t v150 = v95;
        unint64_t v151 = v83;
        sub_10003B754((uint64_t *)&unk_100788D20);
        uint64_t v98 = swift_initStackObject();
        *(void *)(v98 + 16) = sub_100090290((unint64_t)_swiftEmptyArrayStorage);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          uint64_t result = _CocoaArrayWrapper.endIndex.getter();
          if (result)
          {
            uint64_t v132 = result;
            if (result < 1) {
              goto LABEL_127;
            }
            uint64_t v133 = &_swiftEmptyArrayStorage[4];
            do
            {
              uint64_t v134 = *v133++;
              swift_weakAssign();
              swift_beginAccess();
              *(void *)(v134 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease();
              --v132;
            }
            while (v132);
          }
        }
        sub_10008F2F8(v98);
        uint64_t v100 = v99;
        uint64_t v97 = v101;
        uint64_t v103 = v102;
        char v105 = v104;
        swift_setDeallocating();
        swift_bridgeObjectRelease();
        char v106 = v105 & 1;
        uint64_t v107 = v155;
        uint64_t v108 = *(void *)v155;
        *(void *)uint64_t v155 = v100;
        *(void *)(v107 + 8) = v97;
        *(void *)(v107 + 16) = v103;
        *(unsigned char *)(v107 + 24) = v106;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000349CC(v108);
        unint64_t v83 = v151;
      }
      uint64_t v109 = *(void *)(v97 + 16);
      sub_100032FE8(v96);
      if (!v109 || (unint64_t v110 = sub_10035C64C(v154), (v111 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_65:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v149;
LABEL_66:
        uint64_t result = sub_100034624(v154, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        continue;
      }
      uint64_t v112 = *(void *)(*(void *)(v97 + 56) + 8 * v110);
      unint64_t v113 = v112 & 0xC000000000000001;
      unint64_t v151 = v83;
      int64_t v143 = v84;
      if ((v112 & 0xC000000000000001) != 0)
      {
        uint64_t v114 = __CocoaSet.startIndex.getter();
        uint64_t v116 = v115;
        __CocoaSet.endIndex.getter();
        char v117 = static __CocoaSet.Index.== infix(_:_:)();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v118 = v114;
        if (v117) {
          goto LABEL_115;
        }
LABEL_101:
        uint64_t v122 = sub_1005989E4(v118, v116, v113 != 0, v112);
        sub_1000205F8(v118, v116, v113 != 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v123 = v122 + *(void *)(*(void *)v122 + 144);
        swift_beginAccess();
        uint64_t v124 = v123;
        uint64_t v125 = v137;
        sub_100034240(v124, v137, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_release();
        uint64_t v126 = v125;
        uint64_t v127 = v136;
        sub_100398360(v126, v136, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        a2 = v149;
        sub_1000920D8(v127, 5);
        sub_100034624(v127, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        int64_t v84 = v143;
        unint64_t v83 = v151;
        goto LABEL_66;
      }
      char v119 = *(unsigned char *)(v112 + 32);
      uint64_t v114 = 1 << v119;
      unint64_t v120 = *(void *)(v112 + 56);
      if (v120)
      {
        uint64_t v121 = 0;
        goto LABEL_100;
      }
      unsigned int v128 = v119 & 0x3F;
      if (v128 >= 7)
      {
        unint64_t v120 = *(void *)(v112 + 64);
        if (v120)
        {
          uint64_t v121 = 1;
          goto LABEL_100;
        }
        if (v128 >= 8)
        {
          unint64_t v120 = *(void *)(v112 + 72);
          if (v120)
          {
            uint64_t v121 = 2;
LABEL_100:
            uint64_t v118 = __clz(__rbit64(v120)) + (v121 << 6);
            uint64_t v116 = *(unsigned int *)(v112 + 36);
            swift_bridgeObjectRetain();
            if (v118 != v114) {
              goto LABEL_101;
            }
LABEL_115:
            sub_1000205F8(v114, v116, v113 != 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int64_t v84 = v143;
            unint64_t v83 = v151;
            goto LABEL_65;
          }
          uint64_t v129 = 0;
          unint64_t v130 = (unint64_t)(v114 + 63) >> 6;
          if (v130 <= 3) {
            unint64_t v130 = 3;
          }
          unint64_t v131 = v130 - 3;
          while (v131 != v129)
          {
            unint64_t v120 = *(void *)(v112 + 80 + 8 * v129++);
            if (v120)
            {
              uint64_t v121 = v129 + 2;
              goto LABEL_100;
            }
          }
        }
      }
      uint64_t v116 = *(unsigned int *)(v112 + 36);
      swift_bridgeObjectRetain();
      goto LABEL_115;
    }
    break;
  }
  int64_t v89 = v87 + 3;
  if (v89 >= v146) {
    return swift_release();
  }
  unint64_t v88 = *(void *)(v145 + 8 * v89);
  if (v88)
  {
    int64_t v84 = v89;
    goto LABEL_82;
  }
  while (1)
  {
    int64_t v84 = v89 + 1;
    if (__OFADD__(v89, 1)) {
      break;
    }
    if (v84 >= v146) {
      return swift_release();
    }
    unint64_t v88 = *(void *)(v145 + 8 * v84);
    ++v89;
    if (v88) {
      goto LABEL_82;
    }
  }
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
  return result;
}

NSObject *sub_1003752A8(uint64_t a1, double a2, double a3, double a4, double a5)
{
  *(void *)&v5[qword_1007A59E8] = 0;
  *(void *)&v5[qword_1007A59F0] = 0;
  *(void *)&v5[qword_1007A59F8] = 0;
  v5[qword_1007A5A00] = 0;
  v29.receiver = v5;
  v29.super_class = (Class)sub_10003B754(&qword_10079C808);
  uint64_t v11 = [super initWithFrame:a2, a3, a4, a5];
  uint64_t v12 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v11) + 0x90);
  uint64_t v13 = v11;
  uint64_t v14 = (void *)v12(a1);
  uint64_t v15 = *(void **)((char *)v13 + qword_1007A59E8);
  *(void *)((char *)v13 + qword_1007A59E8) = v14;
  id v16 = v14;

  [v16 setAutoresizingMask:18];
  [v16 setPreservesSuperviewLayoutMargins:1];
  [v13 addSubview:v16];
  objc_allocWithZone((Class)sub_10003B754((uint64_t *)&unk_10079C810));
  uint64_t v17 = v13;
  uint64_t v18 = v16;
  uint64_t v19 = sub_10036FD98(v17, v18);
  uint64_t v20 = qword_1007A59F0;
  uint64_t v21 = *(Class *)((char *)&v17->isa + qword_1007A59F0);
  *(Class *)((char *)&v17->isa + qword_1007A59F0) = (Class)v19;

  type metadata accessor for TTRITreeTableView();
  uint64_t v22 = swift_dynamicCastClass();
  if (v22)
  {
    uint64_t v23 = &off_10073B0A0;
    if (!*(Class *)((char *)&v17->isa + v20)) {
      uint64_t v23 = 0;
    }
    *(void *)(v22 + OBJC_IVAR____TtC9Reminders17TTRITreeTableView_contextMenuDelegate + 8) = v23;
    swift_unknownObjectWeakAssign();
    uint64_t v24 = v17;
  }
  else
  {
    if (qword_1007856D0 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_100018BF8(v25, (uint64_t)qword_1007A59D0);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v26))
    {
      int64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v26, "UITableView contained in TTRITreeView is not a subclass of TTRITreeTableView", v27, 2u);
      swift_slowDealloc();
    }

    uint64_t v18 = v17;
  }

  return v17;
}

id sub_100375548(char a1)
{
  v1[qword_1007A5A00] = 0;
  if ((a1 & 1) == 0)
  {
    uint64_t v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_100390D6C;
    *(void *)(v5 + 24) = v4;
    v9[4] = sub_1000499FC;
    v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_100021888;
    v9[3] = &unk_1007477F8;
    uint64_t v6 = _Block_copy(v9);
    uint64_t v7 = v1;
    swift_retain();
    swift_release();
    [v3 performWithoutAnimation:v6];
    _Block_release(v6);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  id result = *(id *)&v1[qword_1007A59E8];
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }

  return [result performBatchUpdates:0 completion:0];
}

void sub_100375704(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void **)(v2 + qword_1007A59F0);
  if (v4)
  {
    id v12 = v4;
    sub_1000890D8();
    uint64_t v7 = sub_100091DF0(a1, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7 && (uint64_t Strong = swift_weakLoadStrong(), swift_release(), Strong))
    {
      uint64_t v9 = Strong + *(void *)(*(void *)Strong + 144);
      swift_beginAccess();
      sub_100034240(v9, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
      uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 0, 1, v10);
    }
    else
    {
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 1, 1, v11);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1003758B8(double a1, double a2)
{
  uint64_t v5 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = qword_1007A59E8;
  id result = *(id *)(v2 + qword_1007A59E8);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  [result convertPoint:v2 fromCoordinateSpace:a1, a2];
  id result = *(id *)(v2 + v15);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v17 = [result indexPathForRowAtPoint:];
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  uint64_t v18 = v17;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v19(v7, v12, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:
    sub_10003B6F8((uint64_t)v7, &qword_10078E8F0);
    return 0;
  }
  id result = (id)((uint64_t (*)(char *, char *, uint64_t))v19)(v14, v7, v8);
  uint64_t v20 = *(void **)(v2 + v15);
  if (v20)
  {
    id v21 = v20;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v23 = [v21 cellForRowAtIndexPath:isa];

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return v23;
  }
LABEL_12:
  __break(1u);
  return result;
}

void *sub_100375B68(void *result)
{
  uint64_t v2 = *(char **)(v1 + qword_1007A59F0);
  if (v2)
  {
    char v3 = (char)result;
    uint64_t v4 = *(void **)&v2[qword_10078DEA0];
    uint64_t v5 = v2;
    id v6 = [v4 indexPathsForSelectedRows];
    if (v6)
    {
      uint64_t v7 = v6;
      type metadata accessor for IndexPath();
      uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v12 = v8;
      if (v3) {
        sub_10012F030((unint64_t *)&v12);
      }
      uint64_t v9 = v5;
      uint64_t v10 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_10038F1F0(v10, (uint64_t)v9);
      swift_bridgeObjectRelease_n();
    }
    else
    {

      return _swiftEmptyArrayStorage;
    }
    return (void *)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100375C60(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
    uint64_t v6 = *(void *)(v5 + 48);
    uint64_t v7 = *(void *)(v5 + 56);
    uint64_t ObjectType = swift_getObjectType();
    v13[0] = v6;
    uint64_t v9 = sub_100421DA8(ObjectType, v7);
    uint64_t v10 = *(void *)(v9 + 24);
    uint64_t v11 = *(void *)(v9 + 32);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    uint64_t v14 = swift_getObjectType();
    uint64_t v15 = *(void *)(v11 + 8);
    v13[0] = v10;
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(a2, v14);
    sub_100038CD8((uint64_t)v13);

    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100375D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
    uint64_t v8 = *(void *)(v7 + 48);
    uint64_t v9 = *(void *)(v7 + 56);
    uint64_t ObjectType = swift_getObjectType();
    v14[0] = v8;
    uint64_t v11 = sub_100421DA8(ObjectType, v9);
    uint64_t v12 = *(void *)(v11 + 24);
    uint64_t v13 = *(void *)(v11 + 32);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    uint64_t v15 = swift_getObjectType();
    uint64_t v16 = *(void *)(v13 + 8);
    v14[0] = v12;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(a2, a3, v15);
    sub_100038CD8((uint64_t)v14);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100375E50(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    JUMPOUT(0x100375EF4);
  }
  uint64_t v4 = (void *)Strong;
  uint64_t v5 = *(void *)(*(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter)
                 + 56);
  uint64_t ObjectType = swift_getObjectType();
  sub_100421DA8(ObjectType, v5);
  char v7 = sub_10045BCF4(a2);

  swift_unknownObjectRelease();
  return v7 & 1;
}

uint64_t sub_100375F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = (void *)result;
    char v9 = a4(a1, a2);

    return v9 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100375FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    JUMPOUT(0x10037619CLL);
  }
  char v7 = (void *)Strong;
  sub_100034240(a2, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v8 = 1;
      goto LABEL_9;
    case 5u:
      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_retain();
      uint64_t v9 = TTRAccountsListsViewModel.remCustomSmartList(for:)();
      goto LABEL_5;
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v8 = 0;
      goto LABEL_9;
    default:
      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_retain();
      uint64_t v9 = TTRAccountsListsViewModel.remList(for:)();
LABEL_5:
      uint64_t v10 = (void *)v9;
      swift_release();

      if (!v10) {
        return 0;
      }
      uint64_t v8 = 1;
      char v7 = v10;
LABEL_9:

      return v8;
  }
}

uint64_t sub_1003761D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v7 = (char *)result;
    uint64_t v8 = *(void *)(result
                   + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_canMoveItemReturnValueTempOverrides);
    swift_beginAccess();
    uint64_t v9 = *(void *)(v8 + 24);
    swift_bridgeObjectRetain();
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    char v10 = sub_100456D84((uint64_t)v5, v9);
    swift_bridgeObjectRelease();
    sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (v10)
    {
      char v11 = 0;
    }
    else
    {
      uint64_t v12 = *(void *)&v7[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
      uint64_t ObjectType = swift_getObjectType();
      char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 + 8) + 488))(a2, ObjectType);
    }

    return v11 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10037633C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    *(unsigned char *)(*(void *)(Strong
                         + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker)
             + 16) = 0;
    sub_10003B754(&qword_10078EA10);
    uint64_t v14 = type metadata accessor for TTRAccountsListsViewModel.Item();
    uint64_t v15 = *(void *)(v14 - 8);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10066C6F0;
    sub_100034240(a2, v17 + v16, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100034240(a5, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    sub_100405794(v17, (uint64_t)v11, a6, 1, 1);
    swift_bridgeObjectRelease();
    sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_100788D10);
  }
  else
  {
    __break(1u);
  }
}

void sub_100376534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v11 = (void *)Strong;
    uint64_t v12 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_10003B754((uint64_t *)&unk_10078E960);
    uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v15 = *(void *)(v14 - 8);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10066C6F0;
    sub_100034240(a2, v17 + v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100034240(v19, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 8) + 520))(v17, v9, v20, 1, 1, ObjectType);
    swift_bridgeObjectRelease();
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
  }
  else
  {
    __break(1u);
  }
}

void sub_100376748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_100376760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    a5(a2, a3);
  }
  else
  {
    __break(1u);
  }
}

void sub_1003767DC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 432))(a2, ObjectType);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100376874@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_10078E8F0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v53 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v48 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = sub_10003B754((uint64_t *)&unk_100788D10);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v48 - v21;
  id v55 = a1;
  id v23 = [a1 sourceIndexPath];
  if (v23)
  {
    uint64_t v24 = v23;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    os_log_type_t v26 = v17;
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    os_log_type_t v26 = v17;
    uint64_t v27 = 1;
  }
  uint64_t v52 = v25;
  v25((uint64_t)v26, v27, 1, v6);
  sub_10003B694((uint64_t)v17, (uint64_t)v15, &qword_10078E8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    uint64_t v28 = type metadata accessor for TTRAccountsListsViewModel.Item();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v22, 1, 1, v28);
  }
  else
  {
    uint64_t v49 = a3;
    uint64_t v50 = v3;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
    uint64_t v29 = sub_100089354();
    uint64_t v30 = sub_1001347D0(v9, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30)
    {
      uint64_t v31 = v30 + *(void *)(*(void *)v30 + 144);
      swift_beginAccess();
      sub_100034240(v31, (uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_release();
      uint64_t v32 = type metadata accessor for TTRAccountsListsViewModel.Item();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v22, 0, 1, v32);
    }
    else
    {
      uint64_t v33 = type metadata accessor for TTRAccountsListsViewModel.Item();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v22, 1, 1, v33);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a3 = v49;
  }
  sub_10003B6F8((uint64_t)v17, &qword_10078E8F0);
  id v34 = v55;
  id v35 = [v55 dragItem];
  id v36 = [v34 sourceIndexPath];
  if (v36)
  {
    os_log_type_t v37 = v36;
    uint64_t v38 = (uint64_t)v53;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = 1;
    uint64_t v38 = (uint64_t)v53;
  }
  v52(v38, v39, 1, v6);
  uint64_t v40 = v54;
  sub_10003B694((uint64_t)v22, v54, (uint64_t *)&unk_100788D10);
  [v34 previewSize];
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  sub_10003B6F8((uint64_t)v22, (uint64_t *)&unk_100788D10);
  *a3 = v35;
  uint64_t v45 = (int *)sub_10003B754(&qword_100788F10);
  sub_100028C3C(v38, (uint64_t)a3 + v45[9], &qword_10078E8F0);
  uint64_t result = sub_100028C3C(v40, (uint64_t)a3 + v45[10], (uint64_t *)&unk_100788D10);
  uint64_t v47 = (void *)((char *)a3 + v45[11]);
  *uint64_t v47 = v42;
  v47[1] = v44;
  return result;
}

uint64_t sub_100376DA4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v54 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v49 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t v18 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v18 - 8);
  uint64_t v55 = (uint64_t)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = __chkstk_darwin(v20);
  id v23 = (char *)&v49 - v22;
  id v56 = a1;
  id v24 = [a1 sourceIndexPath];
  if (v24)
  {
    uint64_t v25 = v24;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    os_log_type_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v27 = v17;
    uint64_t v28 = 0;
  }
  else
  {
    os_log_type_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v27 = v17;
    uint64_t v28 = 1;
  }
  uint64_t v53 = v26;
  v26((uint64_t)v27, v28, 1, v6);
  sub_10003B694((uint64_t)v17, (uint64_t)v14, &qword_10078E8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
  {
    uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v23, 1, 1, v29);
  }
  else
  {
    uint64_t v50 = a3;
    uint64_t v51 = v3;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v14, v6);
    uint64_t v30 = sub_1000890D8();
    uint64_t v31 = sub_1001347D0(v9, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v31)
    {
      uint64_t v32 = v31 + *(void *)(*(void *)v31 + 144);
      swift_beginAccess();
      sub_100034240(v32, (uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
      uint64_t v33 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v23, 0, 1, v33);
    }
    else
    {
      uint64_t v34 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v23, 1, 1, v34);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a3 = v50;
  }
  sub_10003B6F8((uint64_t)v17, &qword_10078E8F0);
  id v35 = v56;
  id v36 = [v56 dragItem];
  id v37 = [v35 sourceIndexPath];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = (uint64_t)v54;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v40 = 1;
    uint64_t v39 = (uint64_t)v54;
  }
  v53(v39, v40, 1, v6);
  uint64_t v41 = v55;
  sub_10003B694((uint64_t)v23, v55, (uint64_t *)&unk_100788DC0);
  [v35 previewSize];
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_10003B6F8((uint64_t)v23, (uint64_t *)&unk_100788DC0);
  *a3 = v36;
  uint64_t v46 = (int *)sub_10003B754(&qword_10079C9B8);
  sub_100028C3C(v39, (uint64_t)a3 + v46[9], &qword_10078E8F0);
  uint64_t result = sub_100028C3C(v41, (uint64_t)a3 + v46[10], (uint64_t *)&unk_100788DC0);
  uint64_t v48 = (void *)((char *)a3 + v46[11]);
  *uint64_t v48 = v43;
  v48[1] = v45;
  return result;
}

void *sub_1003772D4(uint64_t (*a1)(void))
{
  uint64_t v2 = (void *)a1(0);
  if (v2[2]) {
    return v2;
  }
  swift_bridgeObjectRelease();
  id v3 = [*(id *)(v1 + qword_10079BD18) items];
  sub_10003B754(&qword_100788F20);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_4:
  uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void **)(v4 + 8 * v7 + 32);
        swift_unknownObjectRetain();
      }
      ++v7;
      id v9 = [v8 dragItem];
      swift_unknownObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v5 != v7);
    uint64_t v2 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    return v2;
  }
  __break(1u);
  return result;
}

Swift::Int sub_1003774A4(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), void (*a4)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v8 = *(void *)(sub_10003B754(a2) - 8);
  uint64_t v9 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = a3(v9);
  }
  uint64_t v10 = *(void *)(v9 + 16);
  v12[0] = v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  Swift::Int result = sub_10038DD64(v12, a2, a4);
  *a1 = v9;
  return result;
}

void sub_100377578(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    a4(a1, a2);
  }
}

uint64_t sub_1003775F0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 480))(a2, ObjectType);
  }
  else
  {
    char v7 = 1;
  }
  return v7 & 1;
}

void sub_100377694()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = (void *)sub_10037A35C();
    if (v2)
    {
      id v3 = v2;
      [v2 endEditing:1];

      uint64_t v1 = v3;
    }
  }
}

uint64_t sub_100377708@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = sub_10003B754(qword_10079C020);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    HIBYTE(v15) = 0;
    swift_retain();
    uint64_t v9 = v8;
    sub_100145420(a1, a1, (unsigned char *)&v15 + 7, v9, v6);
    if (*v6 == 1) {
      *(unsigned char *)(*(void *)&v9[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker]
    }
               + 16) = (*(unsigned char *)(*(void *)&v9[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker]
                                   + 16) | HIBYTE(v15)) & 1;

    uint64_t v10 = type metadata accessor for TTRITreeViewDropProposal(0);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
    return sub_100398360((uint64_t)v6, (uint64_t)a2, type metadata accessor for TTRITreeViewDropProposal);
  }
  else
  {
    uint64_t v12 = type metadata accessor for TTRITreeViewDropProposal(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    uint64_t v13 = (char *)a2 + *(int *)(v12 + 20);
    uint64_t v14 = sub_10003B754(&qword_10079BEF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 4, v14);
    *a2 = 0;
    return sub_10003B6F8((uint64_t)v6, qword_10079C020);
  }
}

uint64_t sub_100377910@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    swift_retain();
    id v9 = v8;
    sub_100145CFC(a1, a1, v9, v6);

    return sub_100398360((uint64_t)v6, (uint64_t)a2, type metadata accessor for TTRITreeViewDropProposal);
  }
  else
  {
    uint64_t v11 = (char *)a2 + *(int *)(v4 + 20);
    uint64_t v12 = sub_10003B754(&qword_10079BEF0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 4, v12);
    *a2 = 0;
  }
  return result;
}

void sub_100377A60()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker;
    uint64_t v3 = *(void *)(Strong
                   + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker);
    if (*(unsigned char *)(v3 + 16) == 1)
    {
      sub_100409600();
      uint64_t v3 = *(void *)&v1[v2];
    }
    *(unsigned char *)(v3 + 16) = 0;
  }
}

void sub_100377AE8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController);
    if (v2)
    {
      id v3 = v2;
      sub_1005FD7DC();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100377B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10078EEE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v7 = (void *)Strong;
    uint64_t v8 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 + 8) + 424))(a2, ObjectType);
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Reminder();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) != 1)
    {
      uint64_t v11 = TTRRemindersListViewModel.Reminder.title.getter();
      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);

      return v11;
    }
    sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_10078EEE0);
  }
  return 0;
}

uint64_t sub_100377CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  char v7 = (void *)Strong;
  uint64_t v8 = a4(a2);

  return v8;
}

uint64_t sub_100377D6C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {

  }
  return 0;
}

uint64_t sub_100377DC0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079C3F0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079C3F0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100377EB0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_100377F30();
  uint64_t v4 = *(Class *)((char *)&v3->isa + qword_1007A59F0);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_100370108();

    uint64_t v3 = v5;
  }

  v7.receiver = v1;
  v7.super_class = ObjectType;
  [super dealloc];
}

NSObject *sub_100377F30()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___treeView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___treeView);
  if (v2)
  {
    uint64_t v3 = *(NSObject **)(v0
                      + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___treeView);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = (double *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_initialFrameForLoadingView);
    if ((*(unsigned char *)(v0
                   + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_initialFrameForLoadingView
                   + 32) & 1) != 0)
    {
      id v6 = [self mainScreen];
      [v6 bounds];
      double v8 = v7;
      double v10 = v9;
      double v12 = v11;
      double v14 = v13;
    }
    else
    {
      double v12 = v5[2];
      double v14 = v5[3];
      double v8 = *v5;
      double v10 = v5[1];
    }
    id v15 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListTreeView());
    uint64_t v16 = sub_1003752A8(0, v8, v10, v12, v14);
    sub_100169E00();

    uint64_t v17 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v16;
    uint64_t v3 = v16;

    uint64_t v2 = 0;
  }
  id v18 = v2;
  return v3;
}

uint64_t sub_100378200()
{
  return type metadata accessor for TTRIRemindersListContentViewController();
}

uint64_t type metadata accessor for TTRIRemindersListContentViewController()
{
  uint64_t result = qword_10079C4C8;
  if (!qword_10079C4C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003782EC()
{
  v26.receiver = v0;
  v26.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  sub_100378670();
  uint64_t v1 = [(char *)objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListBackgroundView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_delegate + 8] = &off_100747530;
  swift_unknownObjectWeakAssign();
  uint64_t v2 = sub_100377F30();
  uint64_t v3 = *(Class *)((char *)&v2->isa + qword_1007A59E8);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  [v3 setBackgroundView:v1];

  uint64_t v4 = sub_100377F30();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListScrollingController());
  id v6 = v0;
  id v7 = sub_1005FE93C((uint64_t)v6, v4, (uint64_t)sub_100396CEC, v5);

  swift_release();
  uint64_t v8 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController;
  double v9 = *(void **)&v6[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController];
  *(void *)&v6[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController] = v7;

  double v10 = sub_100377F30();
  if (!*(Class *)((char *)&v10->isa + qword_1007A59F0))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  double v11 = v10;
  swift_unknownObjectWeakAssign();

  double v12 = *(void **)&v6[v8];
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v13 = v12;
  sub_1005FD154();

  double v14 = sub_100377F30();
  id v15 = *(Class *)((char *)&v14->isa + qword_1007A59E8);
  if (v15)
  {
    uint64_t v16 = v14;
    id v17 = v15;

    type metadata accessor for TTRIChromelessToolbarUpdater();
    swift_allocObject();
    uint64_t v18 = TTRIChromelessToolbarUpdater.init(scrollView:)();
    swift_beginAccess();
    *(void *)(v18 + 32) = &off_100747568;
    swift_unknownObjectWeakAssign();
    *(void *)&v6[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_chromelessToolbarUpdater] = v18;
    swift_retain();
    swift_release();
    id v19 = [objc_allocWithZone((Class)PKHoverInteraction) initWithDelegate:v6];
    uint64_t v20 = sub_100377F30();
    [v20 addInteraction:v19];

    swift_release();
    uint64_t v21 = *(void *)&v6[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter];
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for TTRIRemindersListAutomaticSubtaskSelectionController();
    id v23 = (void *)swift_allocObject();
    id v24 = (char *)v23
        + OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession;
    uint64_t v25 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
    v23[2] = v21;
    v23[3] = &off_100749F40;
    v23[4] = sub_100396CF4;
    v23[5] = v22;
    *(void *)&v6[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController] = v23;
    swift_unknownObjectRetain();
    swift_release();
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100378670()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100377F30();
  TTRAccesibility.RemindersList.ID.RemindersTable.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setAccessibilityIdentifier:v3];

  uint64_t v4 = sub_100377F30();
  id v5 = [objc_allocWithZone((Class)UIView) init];
  id v6 = *(Class *)((char *)&v4->isa + qword_1007A59E8);
  if (!v6)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v7 = v5;
  id v8 = v6;
  [v8 setTableFooterView:v7];

  double v9 = sub_100377F30();
  double v10 = *(Class *)((char *)&v9->isa + qword_1007A59E8);
  if (!v10)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  [v10 setRowHeight:UITableViewAutomaticDimension];

  double v11 = sub_100377F30();
  double v12 = *(Class *)((char *)&v11->isa + qword_1007A59E8);
  if (!v12)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  [v12 setEstimatedRowHeight:46.0];

  id v13 = sub_100377F30();
  double v14 = *(Class *)((char *)&v13->isa + qword_1007A59E8);
  if (!v14)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  [v14 setSectionHeaderTopPadding:0.0];

  id v15 = sub_100377F30();
  uint64_t v16 = *(Class *)((char *)&v15->isa + qword_1007A59E8);
  if (!v16)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  [v16 setSectionHeaderHeight:28.0];

  id v17 = sub_100377F30();
  uint64_t v18 = *(Class *)((char *)&v17->isa + qword_1007A59E8);
  if (!v18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  [v18 setSectionFooterHeight:28.0];

  id v19 = sub_100377F30();
  uint64_t v20 = *(Class *)((char *)&v19->isa + qword_1007A59E8);
  if (!v20)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v21 = v19;
  id v22 = v20;

  [v22 setKeyboardDismissMode:4];
  id v23 = sub_100377F30();
  id v24 = *(Class *)((char *)&v23->isa + qword_1007A59E8);
  if (!v24)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  [v24 setAllowsSelectionDuringEditing:1];

  uint64_t v25 = sub_100377F30();
  objc_super v26 = *(Class *)((char *)&v25->isa + qword_1007A59E8);
  if (!v26)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  [v26 setAllowsMultipleSelectionDuringEditing:1];

  uint64_t v27 = sub_100377F30();
  uint64_t v28 = *(Class *)((char *)&v27->isa + qword_1007A59E8);
  if (!v28)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  [v28 setAlwaysBounceVertical:1];

  uint64_t v29 = sub_100377F30();
  uint64_t v30 = *(Class *)((char *)&v29->isa + qword_1007A59E8);
  if (!v30) {
    goto LABEL_38;
  }
  [v30 setDragInteractionEnabled:1];

  sub_10038DD04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100672190;
  *(void *)(inited + 32) = type metadata accessor for TTRIRemindersListReminderCell();
  *(void *)(inited + 40) = type metadata accessor for TTRIRemindersListSharingStatusCellTableViewCell();
  *(void *)(inited + 48) = type metadata accessor for TTRIRemindersListCompletedCell();
  *(void *)(inited + 56) = type metadata accessor for TTRIRemindersListHashtagCollectionCell();
  *(void *)(inited + 64) = type metadata accessor for TTRIRemindersListTemplateStatusCell();
  *(void *)(inited + 72) = type metadata accessor for TTRIRemindersListPublicTemplatePreviewStatusCell();
  *(void *)(inited + 80) = type metadata accessor for TTRIRemindersListTipCell();
  *(void *)(inited + 88) = type metadata accessor for TTRIRemindersListEditableSectionCell();
  *(void *)(inited + 96) = type metadata accessor for TTRIRemindersListRecentlyDeletedDisclaimerCell();
  sub_10038DCA4();
  uint64_t v91 = swift_initStackObject();
  *(void *)(v91 + 32) = type metadata accessor for TTRIRemindersListSectionHeader();
  for (uint64_t i = 32; i != 104; i += 8)
  {
    uint64_t v33 = sub_100377F30();
    static UITableViewCell.tableViewCellIdentifier.getter();
    uint64_t v34 = *(Class *)((char *)&v33->isa + qword_1007A59E8);
    if (!v34)
    {
      __break(1u);
      goto LABEL_28;
    }
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v36 = v34;
    NSString v37 = String._bridgeToObjectiveC()();
    [v36 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v37];

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_100377F30();
  static UITableViewHeaderFooterView.headerFooterViewIdentifier.getter();
  uint64_t v39 = *(Class *)((char *)&v38->isa + qword_1007A59E8);
  if (!v39) {
    goto LABEL_39;
  }
  uint64_t v40 = swift_getObjCClassFromMetadata();
  id v41 = v39;
  NSString v42 = String._bridgeToObjectiveC()();
  [v41 registerClass:v40 forHeaderFooterViewReuseIdentifier:v42];

  swift_bridgeObjectRelease();
  swift_setDeallocating();
  uint64_t v43 = sub_100377F30();
  uint64_t v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_100169AF4();
  if (v45)
  {
    uint64_t v46 = v45;
    uint64_t v47 = (id (**)())&v45[OBJC_IVAR____TtC9Reminders30TTRIRemindersListTreeTableView_ownerViewControllerFor52010514];
    uint64_t v48 = *(void *)&v45[OBJC_IVAR____TtC9Reminders30TTRIRemindersListTreeTableView_ownerViewControllerFor52010514];
    *uint64_t v47 = sub_100396D5C;
    v47[1] = (id (*)())v44;
    sub_1000499C4(v48);

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v49 = sub_100377F30();
  sub_10003B754(&qword_10079C948);
  swift_allocObject();
  id v50 = v1;
  uint64_t v51 = sub_100390DBC();

  uint64_t v52 = *(char **)((char *)&v49->isa + qword_1007A59F0);
  if (!v52) {
    goto LABEL_40;
  }
  *(void *)&v52[qword_10078DEB0] = v51;
  uint64_t v53 = v52;
  swift_retain();
  swift_release();
  uint64_t v54 = *(void **)&v53[qword_10078DEA0];
  uint64_t v55 = (uint64_t (*)(void))v51[2];
  swift_retain();
  id v56 = v54;
  char v57 = v55();
  swift_release();
  if (v57) {
    unint64_t v58 = v53;
  }
  else {
    unint64_t v58 = 0;
  }
  [v56 setDataSource:v58, v91];

  uint64_t v59 = &v53[qword_10078DED0];
  uint64_t v60 = *(void *)&v53[qword_10078DED0];
  *(void *)uint64_t v59 = 0;
  *((void *)v59 + 1) = 0;
  *((void *)v59 + 2) = 0;
  v59[24] = 0;
  sub_1000349CC(v60);

  swift_release();
  uint64_t v61 = sub_100377F30();
  sub_10003B754(&qword_10079C950);
  char v62 = (void *)swift_allocObject();
  uint64_t v63 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v62[2] = sub_100032A4C;
  v62[3] = v63;
  uint64_t v64 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v62[4] = sub_100396D64;
  v62[5] = v64;
  uint64_t v65 = *(uint64_t *)((char *)&v61->isa + qword_1007A59F0);
  if (!v65)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  *(void *)(v65 + qword_10078DEB8) = v62;

  swift_release();
  uint64_t v66 = sub_100377F30();
  sub_10003B754(&qword_10079C958);
  uint64_t v67 = (void *)swift_allocObject();
  uint64_t v68 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v67[2] = sub_100032A4C;
  v67[3] = v68;
  uint64_t v69 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v67[4] = sub_100396D94;
  v67[5] = v69;
  sub_10000D084((uint64_t)v67, &qword_10078DEC0, (SEL *)&selRef_setPrefetchDataSource_);

  uint64_t v70 = sub_100377F30();
  sub_10003B754(&qword_10079C960);
  swift_allocObject();
  id v71 = v50;
  uint64_t v72 = sub_10038FC28();
  sub_10003B754(&qword_10079C968);
  swift_allocObject();
  unsigned int v73 = sub_100390AA4();

  *(void *)(v72 + 592) = v73;
  swift_release();
  sub_10000D084(v72, &qword_10078DEC8, (SEL *)&selRef_setDelegate_);

  uint64_t v74 = sub_100377F30();
  id v75 = objc_allocWithZone((Class)sub_10003B754(&qword_10079C970));
  id v76 = v71;
  id v77 = sub_100392ED8();

  unint64_t v78 = *(Class *)((char *)&v74->isa + qword_1007A59F0);
  if (!v78) {
    goto LABEL_42;
  }
  id v79 = v78;
  sub_1000217FC(v77, &qword_10078DE78, (uint64_t)&qword_1007A38B8, (const char **)&selRef_setDragDelegate_);

  uint64_t v80 = sub_100377F30();
  id v81 = objc_allocWithZone((Class)sub_10003B754(&qword_10079C978));
  id v82 = v76;
  id v83 = sub_100392938();

  int64_t v84 = *(Class *)((char *)&v80->isa + qword_1007A59F0);
  if (v84)
  {
    id v85 = v84;
    sub_1000217FC(v83, &qword_10078DE80, (uint64_t)&qword_10079BDA8, (const char **)&selRef_setDropDelegate_);

    unint64_t v86 = sub_100377F30();
    sub_10003B754((uint64_t *)&unk_10079C980);
    int64_t v87 = (objc_class *)swift_allocObject();
    uint64_t v88 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *((void *)v87 + 2) = sub_100032A4C;
    *((void *)v87 + 3) = v88;
    uint64_t v89 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *((void *)v87 + 4) = sub_100396D9C;
    *((void *)v87 + 5) = v89;
    uint64_t v90 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *((void *)v87 + 6) = sub_100396DA4;
    *((void *)v87 + 7) = v90;
    *(Class *)((char *)&v86->isa + qword_1007A59F8) = v87;

    swift_release();
    return;
  }
LABEL_43:
  __break(1u);
}

uint64_t sub_1003790A0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    NSString v3 = (void *)result;
    uint64_t v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = a1;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_100396D3C;
    *(void *)(v6 + 24) = v5;
    aBlock[4] = sub_1000499FC;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021888;
    aBlock[3] = &unk_100747D48;
    id v7 = _Block_copy(aBlock);
    id v8 = v3;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v4 performWithoutAnimation:v7];
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

void sub_100379244(void (*a1)(char *, char *, uint64_t), char a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (void *)Strong;
    sub_1003792BC(a2 & 1, a1, a3 & 1);
  }
}

void sub_1003792BC(char a1, void (*a2)(char *, char *, uint64_t), int a3)
{
  LODWORD(v55) = a3;
  id v56 = a2;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v59 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v58 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v11 = (char *)v48 - v10;
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v51 = (void *)((char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v15 - 8);
  id v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v48 - v19;
  uint64_t v21 = sub_100377F30();
  id v22 = v21;
  if (a1)
  {
    sub_100034240((uint64_t)v56, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
    id v23 = *(Class *)((char *)&v22->isa + qword_1007A59F0);
    if (v23)
    {
      char v57 = v23;
      sub_1003719A8((uint64_t)v20, 1, 0);
      if (v55)
      {
        sub_10003B694((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_100788DC0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12) == 1)
        {
          sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_100788DC0);
        }
        else
        {
          unint64_t v49 = (unint64_t)v20;
          id v50 = v22;
          uint64_t v37 = (uint64_t)v51;
          sub_100398360((uint64_t)v17, (uint64_t)v51, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v38 = sub_100372184(v37);
          uint64_t v39 = v38[2];
          v48[2] = v38;
          if (v39)
          {
            uint64_t v40 = v58;
            id v56 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
            id v41 = (char *)v38
                + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
            uint64_t v53 = *(void *)(v59 + 72);
            uint64_t v54 = qword_10078DEA0;
            NSString v42 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
            uint64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
            uint64_t v52 = (void (**)(char *, char *, uint64_t))(v59 + 32);
            v59 += 16;
            uint64_t v43 = (void (**)(char *, uint64_t))(v59 - 8);
            v48[1] = (v59 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
            while (1)
            {
              v56(v11, v41, v4);
              uint64_t v44 = *v42;
              (*v42)(v11, 0, 1, v4);
              if ((*v55)(v11, 1, v4) == 1) {
                break;
              }
              uint64_t v45 = *(void **)&v57[v54];
              (*v52)(v40, v11, v4);
              id v46 = v45;
              Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
              (*v43)(v40, v4);
              [v46 selectRowAtIndexPath:isa animated:1 scrollPosition:0];

              v41 += v53;
              if (!--v39) {
                goto LABEL_25;
              }
            }
          }
          else
          {
            uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
LABEL_25:
            v44(v11, 1, 1, v4);
          }
          swift_bridgeObjectRelease();
          sub_100034624((uint64_t)v51, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v20 = (char *)v49;
          id v22 = v50;
        }
      }

      sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_100788DC0);
      return;
    }
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  id v24 = v56;
  uint64_t v25 = *(Class *)((char *)&v21->isa + qword_1007A59F0);
  if (!v25) {
    goto LABEL_29;
  }
  char v57 = v25;
  sub_10037248C((uint64_t)v24, 1, (uint64_t (*)(double))sub_1000890D8, (uint64_t (*)(uint64_t))sub_100091DF0, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, uint64_t *))sub_10020B4F8);
  if (v55)
  {
    id v50 = v22;
    objc_super v26 = sub_100372184((uint64_t)v24);
    uint64_t v27 = v26[2];
    uint64_t v51 = v26;
    if (v27)
    {
      uint64_t v28 = v58;
      id v56 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
      uint64_t v29 = (char *)v26 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
      uint64_t v53 = *(void *)(v59 + 72);
      uint64_t v54 = qword_10078DEA0;
      uint64_t v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
      uint64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      uint64_t v52 = (void (**)(char *, char *, uint64_t))(v59 + 32);
      v59 += 16;
      uint64_t v31 = (void (**)(char *, uint64_t))(v59 - 8);
      unint64_t v49 = (v59 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        v56(v8, v29, v4);
        uint64_t v32 = *v30;
        (*v30)(v8, 0, 1, v4);
        if ((*v55)(v8, 1, v4) == 1) {
          break;
        }
        uint64_t v33 = *(void **)&v57[v54];
        (*v52)(v28, v8, v4);
        id v34 = v33;
        Class v35 = IndexPath._bridgeToObjectiveC()().super.isa;
        (*v31)(v28, v4);
        [v34 deselectRowAtIndexPath:v35 animated:1];

        v29 += v53;
        if (!--v27) {
          goto LABEL_22;
        }
      }
    }
    else
    {
      uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
LABEL_22:
      v32(v8, 1, 1, v4);
    }

    swift_bridgeObjectRelease();
  }
  else
  {

    id v36 = v57;
  }
}

void sub_100379A60(char a1, char a2)
{
  NSString v3 = v2;
  uint64_t v6 = a1 & 1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if ([v3 isEditing] != v6)
  {
    v23.receiver = v3;
    v23.super_class = ObjectType;
    [super setEditing:v6 animated:a2 & 1];
    if (a1)
    {
      id v8 = sub_100377F30();
      uint64_t v9 = *(Class *)((char *)&v8->isa + qword_1007A59E8);
      if (!v9) {
        goto LABEL_17;
      }
      unsigned int v10 = [v9 isEditing];

      if (v10
        && *((unsigned char *)v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_treeViewHasSwipedItem) == 1)
      {
        double v11 = sub_100377F30();
        uint64_t v12 = *(Class *)((char *)&v11->isa + qword_1007A59E8);
        if (!v12)
        {
LABEL_20:
          __break(1u);
          return;
        }
        [v12 setEditing:0 animated:a2 & 1];
      }
    }
    uint64_t v13 = sub_100377F30();
    uint64_t v14 = *(Class *)((char *)&v13->isa + qword_1007A59E8);
    if (v14)
    {
      [v14 setEditing:a1 & 1 animated:a2 & 1];

      uint64_t v15 = sub_100377F30();
      uint64_t v16 = v15;
      if ((a1 & 1) == 0)
      {
        uint64_t v19 = *(Class *)((char *)&v15->isa + qword_1007A59F0);
        if (v19)
        {
          id v20 = v19;
          sub_10008D248();

          goto LABEL_14;
        }
        goto LABEL_19;
      }
      __chkstk_darwin(v15);
      v22[2] = v3;
      id v17 = *(Class *)((char *)&v16->isa + qword_1007A59F0);
      if (v17)
      {
        id v18 = v17;
        sub_10008BEEC((uint64_t)sub_100396CE4, (uint64_t)v22);

LABEL_14:
        uint64_t v21 = sub_100377F30();
        sub_100375548(a2 & 1);

        return;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

uint64_t sub_100379C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unsigned int v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(void *)(v11 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 464))(a1, ObjectType, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
    char v14 = 0;
  }
  else
  {
    sub_100398360((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    char v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 456))(v10, ObjectType, v13);
    sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v14 & 1;
}

NSObject *sub_100379E9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v19[-v6];
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_firstVisibleItemToRestore;
  swift_beginAccess();
  sub_10003B694(v12, (uint64_t)v7, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788DC0);
  }
  sub_100398360((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
  swift_beginAccess();
  sub_10000A550((uint64_t)v4, v12, (uint64_t *)&unk_100788DC0);
  swift_endAccess();
  if ([v1 isViewLoaded])
  {
    char v14 = sub_100377F30();
    [v14 layoutBelowIfNeeded];

    uint64_t v15 = sub_100377F30();
    sub_1003F928C((uint64_t)v11, 1, 0);

    uint64_t result = sub_100377F30();
    uint64_t v16 = *(Class *)((char *)&result->isa + qword_1007A59E8);
    if (!v16)
    {
      __break(1u);
      return result;
    }
    id v17 = result;
    id v18 = v16;

    UIViewController.scrollContentScrollViewToAvoidPartiallyCollapsedNavBarIfNeeded(_:animated:wantsDispatchAsync:)((UIScrollView)v18, 0, 1);
  }
  return sub_100034624((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_10037A194(char a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  [super viewDidDisappear:a1 & 1];
  uint64_t v3 = sub_100377F30();
  uint64_t v4 = *(Class *)((char *)&v3->isa + qword_1007A59E8);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  unsigned int v5 = [v4 isEditing];

  if (!v5) {
    return;
  }
  uint64_t v6 = sub_100377F30();
  uint64_t v7 = *(Class *)((char *)&v6->isa + qword_1007A59E8);
  if (!v7)
  {
LABEL_7:
    __break(1u);
    return;
  }
  [v7 setEditing:0 animated:0];
}

uint64_t sub_10037A35C()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v20[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v8 + 8) + 208))(v20, ObjectType);
  sub_100038D28(v20, v20[3]);
  TTRRemindersListEditingState.editingItem.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788DC0);
    sub_100038CD8((uint64_t)v20);
    return 0;
  }
  sub_100398360((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100038CD8((uint64_t)v20);
  uint64_t result = (uint64_t)sub_100377F30();
  uint64_t v11 = *(void **)(result + qword_1007A59F0);
  if (v11)
  {
    uint64_t v12 = (void *)result;
    id v13 = v11;
    uint64_t v14 = sub_1000890D8();
    id v18 = (void *)sub_10008E820((uint64_t)v7, v14, v16, v17, v15 & 1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100034624((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t result = 0;
    if (v18)
    {
      type metadata accessor for TTRIRemindersListReminderCell();
      uint64_t result = swift_dynamicCastClass();
      if (!result)
      {

        return 0;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10037A5D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  sub_10003B754(&qword_10079C8E8);
  uint64_t v6 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10066C6F0;
  uint64_t v9 = v8 + v7;
  sub_100034240(a1, v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(unsigned char *)(v9 + *(int *)(v6 + 20)) = 0;
  sub_10037AFCC(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v10 = sub_100377F30();
  uint64_t v11 = *(Class *)((char *)&v10->isa + qword_1007A59F0);
  if (!v11)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v12 = v10;
  uint64_t v13 = a2 & 1;
  id v14 = v11;
  uint64_t v15 = sub_1000890D8();
  uint64_t v19 = (void *)sub_10008E820(a1, v15, v17, v18, v16 & 1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_getObjectType();
    uint64_t v20 = swift_conformsToProtocol2();
    if (v20) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 0;
    }
    if (v20) {
      id v22 = v19;
    }
    else {
      id v22 = 0;
    }
    if (v22 && (sub_10037A900() & 1) != 0)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v13, ObjectType, v21);
      sub_10003B754(&qword_10079C8F8);
      swift_allocObject();
      Promise.init(value:)();
      return;
    }
  }
  uint64_t v24 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController;
  uint64_t v25 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController);
  if (!v25) {
    goto LABEL_18;
  }
  id v26 = v25;
  sub_1005FD4B4(a1);

  *(unsigned char *)(swift_allocObject() + 16) = v13;
  uint64_t v27 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079C8F0);
  uint64_t v28 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  uint64_t v29 = *(void **)(v3 + v24);
  if (!v29)
  {
LABEL_19:
    __break(1u);
    return;
  }
  id v30 = v29;
  sub_10037ACB4(a1, 0, 1, v28);
  swift_release();
}

NSObject *sub_10037A900()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v21[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v5 = &v21[-v4];
  uint64_t result = sub_100377F30();
  unint64_t v7 = *(char **)((char *)&result->isa + qword_1007A59F0);
  if (v7)
  {
    uint64_t v8 = (char *)result;
    uint64_t v9 = *(void **)&v7[qword_10078DEA0];
    uint64_t v10 = v7;
    id v11 = [v9 indexPathsForVisibleRows];
    if (v11)
    {
      uint64_t v12 = v11;
      type metadata accessor for IndexPath();
      uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v14 = v10;
      uint64_t v15 = (void *)sub_10038F1F0(v13, (uint64_t)v14);

      swift_bridgeObjectRelease();
      uint64_t v8 = v14;
    }
    else
    {
      uint64_t v15 = _swiftEmptyArrayStorage;
    }

    uint64_t v16 = v15[2];
    if (v16)
    {
      uint64_t v17 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
      uint64_t v18 = (char *)v15 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v19 = *(void *)(v17 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        char v20 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
        sub_100034624((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if (v20) {
          break;
        }
        v18 += v19;
        if (!--v16)
        {
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      swift_bridgeObjectRelease_n();
      return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037AB58(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  if (qword_1007854E0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_10079C3F0);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "TTRIRemindersListViewController: Begin editing title of cell of item-to-edit.", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void, uint64_t, uint64_t))(v4 + 16))(a2 & 1, ObjectType, v4);
  sub_10003B754(&qword_10079C8F8);
  swift_allocObject();
  id v10 = v3;
  return Promise.init(value:)();
}

uint64_t sub_10037ACB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = sub_100388A5C(a1, (uint64_t (*)(uint64_t, void))sub_100398494, v9, (uint64_t (**)(void))sub_1003956E0, v10, a3, a4);
  swift_release();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v12 = (void *)zalgo.getter();
  dispatch thunk of Promise.always(on:closure:)();
  swift_release();
  swift_release();
  swift_release_n();

  return v11;
}

uint64_t sub_10037AE40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = sub_1003898A4(a1, (uint64_t (*)(uint64_t, void))sub_1003956D8, v9, (uint64_t (**)(void))sub_1003956E0, v10, a3, a4);
  swift_release();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v12 = (void *)zalgo.getter();
  dispatch thunk of Promise.always(on:closure:)();
  swift_release();
  swift_release();
  swift_release_n();

  return v11;
}

void sub_10037AFCC(uint64_t a1)
{
  uint64_t v37 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem();
  uint64_t v3 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10003B754(&qword_10079C8D8);
  uint64_t v6 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v1;
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  uint64_t v10 = *(void *)(v9 + 48);
  uint64_t v11 = *(void *)(v9 + 56);
  uint64_t ObjectType = swift_getObjectType();
  v39[0] = v10;
  uint64_t v13 = sub_100421DA8(ObjectType, v11);
  uint64_t v15 = *(void *)(v13 + 24);
  uint64_t v14 = *(void *)(v13 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v16 = swift_getObjectType();
  v34[2] = v16;
  v39[3] = v16;
  uint64_t v17 = *(void *)(v14 + 8);
  v39[4] = v17;
  v39[0] = v15;
  int64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    v34[1] = v17;
    uint64_t v38 = _swiftEmptyArrayStorage;
    sub_1004D34D4(0, v18, 0);
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v20 = *(void *)(v3 + 72);
    uint64_t v21 = v38;
    do
    {
      sub_100034240(v19, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
      uint64_t v22 = *(int *)(v36 + 48);
      sub_100034240((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v8[v22] = v5[*(int *)(v37 + 20)];
      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D34D4(0, v21[2] + 1, 1);
        uint64_t v21 = v38;
      }
      unint64_t v24 = v21[2];
      unint64_t v23 = v21[3];
      if (v24 >= v23 >> 1)
      {
        sub_1004D34D4(v23 > 1, v24 + 1, 1);
        uint64_t v21 = v38;
      }
      v21[2] = v24 + 1;
      uint64_t v16 = sub_100028C3C((uint64_t)v8, (uint64_t)v21+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v24, &qword_10079C8D8);
      v19 += v20;
      --v18;
    }
    while (v18);
  }
  __chkstk_darwin(v16);
  type metadata accessor for TTRRemindersListViewModel.Item();
  sub_1003889DC(&qword_10079C8E0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v25 = TTRTreeContentsQueryable.ancestorsToExpand<A>(forRevealing:transform:isExpanded:itemExpandedStateIsUnknownIfParentIsCollapsed:)();
  swift_bridgeObjectRelease();
  sub_100038CD8((uint64_t)v39);
  if (*(void *)(v25 + 16))
  {
    if (qword_1007854E0 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100018BF8(v26, (uint64_t)qword_10079C3F0);
    swift_bridgeObjectRetain();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134217984;
      v39[0] = *(void *)(v25 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "TTRIRemindersListContentViewController: expand ancestors to reveal target item {count: %ld}", v29, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    id v30 = sub_100377F30();
    __chkstk_darwin(v30);
    uint64_t v32 = *(void **)(v31 + qword_1007A59F0);
    if (v32)
    {
      id v33 = v32;
      sub_100136390(0, 0, 0, 0, (uint64_t)v33, (void (*)(uint64_t))sub_100395D5C);
      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10037B534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100034240(a1, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

NSObject *sub_10037B564(uint64_t a1)
{
  uint64_t result = sub_100377F30();
  uint64_t v3 = *(Class *)((char *)&result->isa + qword_1007A59F0);
  if (v3)
  {
    uint64_t v4 = result;
    id v5 = v3;
    sub_1000890D8();
    uint64_t v7 = sub_100091DF0(a1, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7)
    {
      int v8 = *(unsigned __int8 *)(v7 + 72);

      swift_release();
      return (v8 == 2);
    }
    else
    {

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10037B620(uint64_t a1, uint64_t a2, int a3)
{
  int v29 = a3;
  uint64_t v30 = a2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  uint64_t v6 = *(void *)(v31 + 64);
  __chkstk_darwin(v5);
  uint64_t v7 = v3;
  int v8 = sub_100377F30();
  uint64_t v9 = *(Class *)((char *)&v8->isa + qword_1007A59F0);
  if (v9)
  {
    uint64_t v10 = v8;
    id v11 = v9;
    uint64_t v12 = sub_1000890D8();
    uint64_t v16 = sub_10008E820(a1, v12, v14, v15, v13 & 1);

    uint64_t v17 = (void *)v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v34 = (unint64_t)_swiftEmptyArrayStorage;
    if (v16)
    {
      type metadata accessor for TTRIRemindersListReminderCell();
      uint64_t v18 = v31;
      uint64_t v19 = v7;
      if (swift_dynamicCastClass())
      {
        id v20 = v17;
        if (TTRIRemindersListReminderCell.isViewModelValid.getter())
        {
        }
        else
        {
          TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)();
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          swift_release();
          uint64_t v19 = v7;
        }
      }
    }
    else
    {
      uint64_t v19 = v7;
      TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
      uint64_t v18 = v31;
    }
    uint64_t v21 = v17;
    sub_10003B754(&qword_10078AD88);
    unint64_t v33 = v34;
    sub_10003B754(&qword_10079C870);
    sub_100037EA0((unint64_t *)&unk_10079C878, &qword_10079C870);
    static Promise.all<A>(_:)();
    sub_100034240(a1, (uint64_t)&v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v23 = swift_allocObject();
    sub_100398360((uint64_t)&v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v23 + v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    unint64_t v24 = (void *)zalgo.getter();
    uint64_t v25 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    uint64_t v26 = *(void **)(v19 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController);
    if (v26)
    {
      id v27 = v26;
      swift_bridgeObjectRelease();
      sub_10037AE40(a1, v30, v29 & 1, v25);
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10037BA04()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = Strong;
  id v2 = [Strong parentViewController];

  return v2;
}

id sub_10037BA78()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___completedTasksRotor;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___completedTasksRotor);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___completedTasksRotor);
  }
  else
  {
    uint64_t v4 = sub_100377F30();
    TTRAccesibility.RemindersList.Rotor.CompletedTasks.unsafeMutableAddressor();
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    v7[3] = sub_100393E34;
    v7[4] = v5;
    id v8 = objc_allocWithZone((Class)UIAccessibilityCustomRotor);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    NSString v9 = String._bridgeToObjectiveC()();
    v15[4] = sub_10039840C;
    v15[5] = v7;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10027A0C4;
    v15[3] = &unk_100747938;
    uint64_t v10 = _Block_copy(v15);
    id v11 = [v8 initWithName:v9 itemSearchBlock:v10];

    _Block_release(v10);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v12 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v11;
    id v3 = v11;

    id v2 = 0;
  }
  id v13 = v2;
  return v3;
}

id sub_10037BC68()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___incompleteTasksRotor;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___incompleteTasksRotor);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___incompleteTasksRotor);
  }
  else
  {
    uint64_t v4 = sub_100377F30();
    TTRAccesibility.RemindersList.Rotor.IncompleteTasks.unsafeMutableAddressor();
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    v7[3] = sub_100393E28;
    v7[4] = v5;
    id v8 = objc_allocWithZone((Class)UIAccessibilityCustomRotor);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    NSString v9 = String._bridgeToObjectiveC()();
    v15[4] = sub_10039840C;
    v15[5] = v7;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10027A0C4;
    v15[3] = &unk_1007478E8;
    uint64_t v10 = _Block_copy(v15);
    id v11 = [v8 initWithName:v9 itemSearchBlock:v10];

    _Block_release(v10);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v12 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v11;
    id v3 = v11;

    id v2 = 0;
  }
  id v13 = v2;
  return v3;
}

id sub_10037BE58()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___overdueTasksRotor;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___overdueTasksRotor);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___overdueTasksRotor);
  }
  else
  {
    uint64_t v4 = sub_100377F30();
    TTRAccesibility.RemindersList.Rotor.OverdueTasks.unsafeMutableAddressor();
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    v7[3] = sub_100393DB8;
    v7[4] = v5;
    id v8 = objc_allocWithZone((Class)UIAccessibilityCustomRotor);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    NSString v9 = String._bridgeToObjectiveC()();
    v15[4] = sub_100393DFC;
    v15[5] = v7;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10027A0C4;
    v15[3] = &unk_100747898;
    uint64_t v10 = _Block_copy(v15);
    id v11 = [v8 initWithName:v9 itemSearchBlock:v10];

    _Block_release(v10);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v12 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v11;
    id v3 = v11;

    id v2 = 0;
  }
  id v13 = v2;
  return v3;
}

uint64_t sub_10037C048(uint64_t a1)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  LOBYTE(a1) = sub_10037C088(a1);

  return a1 & 1;
}

uint64_t sub_10037C088(uint64_t a1)
{
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10078EEE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Reminder();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 + 8) + 424))(a1, ObjectType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_10078EEE0);
  }
  else
  {
    sub_100398360((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    if ((v9[*(int *)(v6 + 24)] & 0xFE) != 2 && (v9[*(int *)(v6 + 24)] & 1) == 0)
    {
      uint64_t v13 = v9[*(int *)(v6 + 32)];
      sub_100034624((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      return v13;
    }
    sub_100034624((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  }
  return 2;
}

BOOL sub_10037C280(uint64_t a1)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  char v3 = sub_10037C088(a1);

  return (v3 & 1) == 0 && v3 != 2;
}

uint64_t sub_10037C2D4(uint64_t a1)
{
  uint64_t v3 = sub_10003B754(&qword_1007927B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10078EEE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Reminder();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 + 8) + 424))(a1, ObjectType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_10078EEE0);
    return 0;
  }
  else
  {
    sub_100398360((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    sub_10003B694((uint64_t)&v12[*(int *)(v9 + 44)], (uint64_t)v5, &qword_1007927B0);
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.DisplayDate();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16) == 1)
    {
      sub_10003B6F8((uint64_t)v5, &qword_1007927B0);
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = v5[*(int *)(v16 + 28)];
      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
    }
    sub_100034624((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  }
  return v15;
}

void sub_10037C5A0()
{
  sub_1000DF808();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void *sub_10037C67C()
{
  unint64_t v0 = sub_100377F30();
  uint64_t result = *(Class *)((char *)&v0->isa + qword_1007A59E8);
  if (!result)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unsigned __int8 v2 = [result hasActiveDrag];

  if (v2) {
    return 0;
  }
  uint64_t v3 = sub_100377F30();
  uint64_t result = *(Class *)((char *)&v3->isa + qword_1007A59E8);
  if (!result) {
    goto LABEL_9;
  }
  unsigned __int8 v4 = [result hasActiveDrop];

  if (v4) {
    return 0;
  }
  uint64_t v5 = sub_100377F30();
  uint64_t result = *(Class *)((char *)&v5->isa + qword_1007A59E8);
  if (result)
  {
    unsigned int v6 = [result isEditing];

    return (void *)(v6 ^ 1);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10037C73C()
{
  uint64_t v1 = v0;
  if (qword_1007854E0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_10079C3F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TTRIRemindersListViewController: Cancel any hover detection once the cell starts being edited", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilHoverCleanupAction);
  if (*(void *)(v6 + 56))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v6 + 56) = 0;

  return swift_release();
}

uint64_t sub_10037C860()
{
  uint64_t v0 = sub_100377F30();
  *((unsigned char *)&v0->isa + qword_1007A5A00) = 0;
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100390D6C;
  *(void *)(v3 + 24) = v2;
  v7[4] = sub_1000218B0;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100021888;
  v7[3] = &unk_100747780;
  os_log_type_t v4 = _Block_copy(v7);
  uint64_t v5 = v0;
  swift_retain();
  swift_release();
  [(id)v1 performWithoutAnimation:v4];
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

void sub_10037C9DC()
{
  uint64_t v0 = sub_100377F30();
  uint64_t v1 = *(Class *)((char *)&v0->isa + qword_1007A59E8);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = v0;
  id v3 = v1;

  [v3 contentInset];
  [v3 setContentInset:];

  os_log_type_t v4 = sub_100377F30();
  uint64_t v5 = *(Class *)((char *)&v4->isa + qword_1007A59E8);
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v6 = v4;
  id v7 = v5;

  [v7 verticalScrollIndicatorInsets];
  [v7 setVerticalScrollIndicatorInsets:];
}

NSObject *sub_10037CAC4(uint64_t a1)
{
  uint64_t result = sub_100377F30();
  id v3 = *(Class *)((char *)&result->isa + qword_1007A59F0);
  if (v3)
  {
    os_log_type_t v4 = result;
    id v5 = v3;
    sub_1000890D8();
    uint64_t v7 = sub_100091DF0(a1, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7)
    {
      int v8 = *(unsigned __int8 *)(v7 + 72);

      swift_release();
      return (v8 == 2);
    }
    else
    {

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10037CB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v88 = a2;
  uint64_t v3 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v80 = (char *)v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v77 = (char *)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item() - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = *(void *)(a1 + 16);
  if (!v87) {
    return;
  }
  uint64_t v86 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  unint64_t v78 = (uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v79 = v5;
  id v75 = (void (**)(char *, uint64_t))(v6 + 8);
  id v76 = (uint64_t (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v85 = *(void *)(v12 + 72);
  v74[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  id v81 = v14;
  id v82 = v10;
  while (1)
  {
    sub_100034240(v86 + v85 * v15, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v16 = sub_100377F30();
    uint64_t v17 = *(Class *)((char *)&v16->isa + qword_1007A59F0);
    if (!v17) {
      break;
    }
    char v18 = v17[qword_10078DED8];
    uint64_t v90 = v16;
    if (v18)
    {
      uint64_t v19 = qword_1007852B8;
      id v20 = v17;
      if (v19 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_100018BF8(v21, (uint64_t)qword_10078DE60);
      unint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v22, v23))
      {
        unint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Attempting to read sectionMetadata while it is being modified", v24, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v25 = v17;
    }
    uint64_t v26 = &v17[qword_10078DED0];
    uint64_t v27 = *(void *)&v17[qword_10078DED0 + 8];
    if (*(void *)&v17[qword_10078DED0])
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v84 = *(void *)&v17[qword_10078DED0 + 8];
      uint64_t v89 = v15;
      int v83 = v26[24];
      sub_10003B754((uint64_t *)&unk_10078E3A0);
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
        if (v70)
        {
          uint64_t v71 = v70;
          if (v70 < 1) {
            goto LABEL_54;
          }
          uint64_t v72 = &_swiftEmptyArrayStorage[4];
          do
          {
            uint64_t v73 = *v72++;
            swift_weakAssign();
            swift_beginAccess();
            *(void *)(v73 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease();
            --v71;
          }
          while (v71);
        }
      }
      sub_10008EDE8(v28);
      uint64_t v30 = v29;
      uint64_t v27 = v31;
      uint64_t v32 = v17;
      uint64_t v34 = v33;
      char v36 = v35;
      swift_release();
      char v37 = v36 & 1;
      uint64_t v38 = *(void *)v26;
      *(void *)uint64_t v26 = v30;
      *((void *)v26 + 1) = v27;
      *((void *)v26 + 2) = v34;
      v26[24] = v37;
      uint64_t v17 = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000349CC(v38);
      sub_1000349CC(0);
      uint64_t v14 = v81;
      uint64_t v10 = v82;
      uint64_t v15 = v89;
    }
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    if (*(void *)(v27 + 16))
    {
      unint64_t v39 = sub_10035C1D4((uint64_t)v10);
      if (v40)
      {
        uint64_t v89 = v15;
        uint64_t v41 = *(void *)(*(void *)(v27 + 56) + 8 * v39);
        swift_bridgeObjectRetain();
        sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        unint64_t v42 = v41 & 0xC000000000000001;
        if ((v41 & 0xC000000000000001) != 0)
        {
          unint64_t v43 = __CocoaSet.startIndex.getter();
          uint64_t v45 = v44;
          __CocoaSet.endIndex.getter();
          char v46 = static __CocoaSet.Index.== infix(_:_:)();
          swift_bridgeObjectRelease();
          uint64_t v47 = v43;
          if (v46)
          {
LABEL_44:
            sub_1000205F8(v47, v45, v42 != 0);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_45:
            uint64_t v14 = v81;
            uint64_t v10 = v82;
            uint64_t v15 = v89;
            goto LABEL_4;
          }
LABEL_25:
          uint64_t v51 = sub_100598760(v43, v45, v42 != 0, v41);
          sub_1000205F8(v43, v45, v42 != 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(unsigned char *)(v51 + 72) == 2)
          {
            uint64_t v52 = sub_1000890D8();
            uint64_t v54 = v80;
            sub_1003CDB00(v51, v52, v55, v53 & 1, v80);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v56 = v54;
            swift_bridgeObjectRelease();
            uint64_t v57 = v79;
            int v58 = (*v78)(v54, 1, v79);
            uint64_t v14 = v81;
            uint64_t v10 = v82;
            uint64_t v15 = v89;
            if (v58 == 1)
            {
              sub_10003B6F8((uint64_t)v54, &qword_10078E8F0);
              if (qword_1007852B8 != -1) {
                swift_once();
              }
              uint64_t v59 = type metadata accessor for Logger();
              sub_100018BF8(v59, (uint64_t)qword_10078DE60);
              uint64_t v60 = Logger.logObject.getter();
              os_log_type_t v61 = static os_log_type_t.fault.getter();
              BOOL v62 = os_log_type_enabled(v60, v61);
              uint64_t v63 = v90;
              if (v62)
              {
                uint64_t v64 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v64 = 0;
                _os_log_impl((void *)&_mh_execute_header, v60, v61, "Unable to find index path", v64, 2u);
                swift_slowDealloc();

                swift_release();
              }
              else
              {

                swift_release();
              }
            }
            else
            {
              uint64_t v65 = v77;
              uint64_t v66 = (*v76)(v77, v56, v57);
              __chkstk_darwin(v66);
              v74[-4] = v51;
              v74[-3] = v17;
              v74[-2] = v65;
              v74[-1] = 100;
              sub_1003CE654((void (*)(uint64_t))sub_1000960DC, (uint64_t)&v74[-6], 0, 0, 0, 0);
              swift_release();
              (*v75)(v65, v57);
            }
            goto LABEL_4;
          }

          swift_release();
          goto LABEL_45;
        }
        char v48 = *(unsigned char *)(v41 + 32);
        uint64_t v47 = 1 << v48;
        unint64_t v49 = *(void *)(v41 + 56);
        if (v49)
        {
          uint64_t v50 = 0;
          goto LABEL_24;
        }
        if ((v48 & 0x3Fu) >= 7)
        {
          unint64_t v49 = *(void *)(v41 + 64);
          if (v49)
          {
            uint64_t v50 = 1;
LABEL_24:
            unint64_t v43 = __clz(__rbit64(v49)) + (v50 << 6);
            uint64_t v45 = *(unsigned int *)(v41 + 36);
            if (v43 == v47) {
              goto LABEL_44;
            }
            goto LABEL_25;
          }
          uint64_t v67 = 0;
          unint64_t v68 = (unint64_t)(v47 + 63) >> 6;
          if (v68 <= 2) {
            unint64_t v68 = 2;
          }
          unint64_t v69 = v68 - 2;
          while (v69 != v67)
          {
            unint64_t v49 = *(void *)(v41 + 72 + 8 * v67++);
            if (v49)
            {
              uint64_t v50 = v67 + 1;
              goto LABEL_24;
            }
          }
        }
        uint64_t v45 = *(unsigned int *)(v41 + 36);
        goto LABEL_44;
      }
    }
    sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    ++v15;
    sub_100034624((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v15 == v87)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_54:
  __break(1u);
}

void sub_10037D4C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item() - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v8 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100034240(v7, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v9 = sub_100377F30();
      uint64_t v10 = *(Class *)((char *)&v9->isa + qword_1007A59F0);
      if (!v10) {
        break;
      }
      uint64_t v11 = v9;
      id v12 = v10;
      sub_100095830((uint64_t)v5, 100);

      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v7 += v8;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

NSObject *sub_10037D630(uint64_t a1)
{
  uint64_t result = sub_100377F30();
  uint64_t v3 = *(char **)((char *)&result->isa + qword_1007A59F0);
  if (v3)
  {
    uint64_t v4 = result;
    *(void *)&v3[qword_10078DE90] = a1;
    swift_retain_n();
    uint64_t v5 = v3;
    swift_release();
    sub_10001232C((uint64_t)&unk_100747718, &qword_10079C800, &qword_10078CAC0);

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037D6F4(uint64_t a1)
{
  return sub_100028C3C(a1, v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_initialFrameForLoadingView, (uint64_t *)&unk_10079C840);
}

uint64_t sub_10037D720()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController))
  {
    swift_unknownObjectWeakAssign();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037D780()
{
  return swift_retain();
}

uint64_t sub_10037D790()
{
  return sub_10037A35C();
}

void *sub_10037D7B8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_internalFocusedCell);
  id v2 = v1;
  return v1;
}

uint64_t sub_10037D7FC()
{
  sub_10003B754(&qword_10079C828);
  uint64_t v1 = *(void *)(sub_10003B754((uint64_t *)&unk_100788DC0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10066C6F0;
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem;
  swift_beginAccess();
  sub_10003B694(v4, v3 + v2, (uint64_t *)&unk_100788DC0);
  sub_10003B754(&qword_10079C830);
  type metadata accessor for TTRRemindersListViewModel.Item();
  sub_100037EA0(&qword_10079C838, &qword_10079C830);
  uint64_t v5 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_10037D958(void *a1)
{
  unint64_t v2 = sub_100377F30();
  uint64_t v3 = *(Class *)((char *)&v2->isa + qword_1007A59E8);
  if (v3)
  {
    uint64_t v4 = v2;
    id v5 = v3;

    [a1 setContentScrollView:v5 forEdge:5];
  }
  else
  {
    __break(1u);
  }
}

double sub_10037D9D8()
{
  uint64_t v0 = sub_100377F30();
  unint64_t v2 = *(Class *)((char *)&v0->isa + qword_1007A59E8);
  if (v2)
  {
    uint64_t v3 = v0;
    id v4 = v2;

    [v4 frame];
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    uint64_t v12 = v11;

    uint64_t v13 = v6;
    uint64_t v14 = v8;
    uint64_t v15 = v10;
    uint64_t v16 = v12;
    return CGRectGetHeight(*(CGRect *)&v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_10037DA74(char a1)
{
  unint64_t v2 = sub_100377F30();
  uint64_t v3 = sub_100375B68((void *)(a1 & 1));

  return v3;
}

void sub_10037DAB0(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController);
  if (v4)
  {
    uint64_t v7 = TTRIShowRemindersEditableCellScrollingTarget.resolvedTargetsToTry.getter();
    __chkstk_darwin(v7);
    v10[2] = v8;
    v10[3] = a2;
    id v9 = v4;
    sub_1005FDD68((uint64_t (*)(id))sub_100390D2C, (uint64_t)v10, a3 & 1);

    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_10037DB60()
{
  uint64_t v0 = sub_100377F30();
  uint64_t v1 = *(Class *)((char *)&v0->isa + qword_1007A59E8);
  if (v1)
  {
    unint64_t v2 = v0;
    id v3 = v1;

    UIScrollView.bottomContentInset(forAvoidingKeyboardFrame:)();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10037DBE8()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_chromelessToolbarUpdater))
  {
    swift_retain();
    TTRIChromelessToolbarUpdater.updateForToolbarVisibilityChange()();
    return swift_release();
  }
  return result;
}

void sub_10037DC44()
{
  uint64_t v0 = sub_100377F30();
  uint64_t v1 = *(Class *)((char *)&v0->isa + qword_1007A59F0);
  if (v1)
  {
    unint64_t v2 = v0;
    id v3 = v1;
    sub_100136390(0, 0, 0, 0, (uint64_t)v3, (void (*)(uint64_t))sub_100398408);
  }
  else
  {
    __break(1u);
  }
}

void sub_10037DCD4()
{
  uint64_t v0 = sub_100377F30();
  uint64_t v1 = *(Class *)((char *)&v0->isa + qword_1007A59F0);
  if (v1)
  {
    unint64_t v2 = v0;
    id v3 = v1;
    sub_100136390(0, 0, 0, 0, (uint64_t)v3, (void (*)(uint64_t))sub_100390D24);
  }
  else
  {
    __break(1u);
  }
}

void sub_10037DD68(uint64_t a1)
{
  if ([v1 isViewLoaded])
  {
    id v3 = sub_100377F30();
    uint64_t v4 = sub_100028C3C(a1, (uint64_t)&v9, (uint64_t *)&unk_10079C918);
    if (!v9)
    {
      uint64_t v7 = *(Class *)((char *)&v3->isa + qword_1007A59F0);
      if (v7)
      {
        id v8 = v7;
        sub_1000890BC();

        return;
      }
      goto LABEL_11;
    }
    long long v13 = v10;
    long long v14 = v11;
    uint64_t v15 = v12;
    if (*(void *)(v9 + 16))
    {
      __chkstk_darwin(v4);
      uint64_t v5 = *(Class *)((char *)&v3->isa + qword_1007A59F0);
      if (v5)
      {
        id v6 = v5;
        sub_100136390(0, 0, 0, 0, (uint64_t)v6, (void (*)(uint64_t))sub_100396C6C);

        return;
      }
      __break(1u);
LABEL_11:
      __break(1u);
      return;
    }
  }
}

uint64_t sub_10037DEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a2;
  uint64_t v37 = sub_10003B754(&qword_10079C900);
  __chkstk_darwin(v37);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v38 = (uint64_t)&v35 - v6;
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_10079C908);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v35 - v14;
  unint64_t v16 = *(void *)(a1 + 16);
  uint64_t v35 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v40 = 0;
  for (i = v16; ; unint64_t v16 = i)
  {
    if (v40 == v16)
    {
      uint64_t v18 = sub_10003B754(&qword_10079C910);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
      unint64_t v40 = v16;
      goto LABEL_6;
    }
    if (v40 >= v16) {
      break;
    }
    uint64_t v19 = sub_10003B754(&qword_10079C910);
    uint64_t v20 = *(void *)(v19 - 8);
    unint64_t v21 = v40;
    sub_10003B694(v35+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v40, (uint64_t)v12, &qword_10079C910);
    unint64_t v40 = v21 + 1;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
LABEL_6:
    sub_100028C3C((uint64_t)v12, (uint64_t)v15, &qword_10079C908);
    uint64_t v22 = sub_10003B754(&qword_10079C910);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v15, 1, v22) == 1) {
      return swift_bridgeObjectRelease();
    }
    os_log_type_t v23 = v12;
    uint64_t v24 = (uint64_t)&v15[*(int *)(v22 + 48)];
    uint64_t v25 = (uint64_t)&v15[*(int *)(v22 + 64)];
    sub_100398360((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v26 = v38;
    sub_100028C3C(v24, v38, &qword_10079C900);
    sub_100028C3C(v25, (uint64_t)v4, &qword_10079C900);
    uint64_t result = (uint64_t)sub_100377F30();
    uint64_t v27 = *(void **)(result + qword_1007A59F0);
    if (!v27) {
      goto LABEL_11;
    }
    uint64_t v28 = (void *)result;
    uint64_t v29 = *(int *)(v37 + 36);
    uint64_t v30 = *(void *)&v4[v29];
    uint64_t v31 = (uint64_t)v4;
    unint64_t v32 = *(void *)(v26 + v29);
    id v33 = v27;
    unint64_t v34 = v32;
    uint64_t v4 = (char *)v31;
    sub_1003D6690((uint64_t)v9, v34, v26, v30, v31);

    sub_10003B6F8(v31, &qword_10079C900);
    sub_10003B6F8(v26, &qword_10079C900);
    uint64_t result = sub_100034624((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v12 = v23;
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *sub_10037E2AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100377F30();
  uint64_t result = *(Class *)((char *)&v6->isa + qword_1007A59E8);
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  unsigned int v8 = [result isEditing];

  if (v8)
  {
    if ([v3 isEditing])
    {
      if (qword_1007854E0 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_100018BF8(v9, (uint64_t)qword_10079C3F0);
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRIShowRemindersViewController: trying to start editing a reminder while in edit mode", v12, 2u);
        swift_slowDealloc();
      }
      goto LABEL_10;
    }
    uint64_t v10 = sub_100377F30();
    uint64_t result = *(Class *)((char *)&v10->isa + qword_1007A59E8);
    if (result)
    {
      [result setEditing:0 animated:1];
LABEL_10:

      goto LABEL_11;
    }
LABEL_15:
    __break(1u);
    return result;
  }
LABEL_11:
  sub_10037A5D8(a1, a2 & 1);

  return (void *)swift_release();
}

void sub_10037E438(uint64_t a1)
{
  unint64_t v2 = sub_100377F30();
  uint64_t v3 = *(Class *)((char *)&v2->isa + qword_1007A59F0);
  if (!v3)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = v2;
  id v5 = v3;
  uint64_t v6 = sub_1000890D8();
  uint64_t v13 = sub_10008E820(a1, v6, v8, v9, v7 & 1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_6;
  }
  type metadata accessor for TTRIRemindersListReminderCell();
  if (!swift_dynamicCastClass())
  {

LABEL_6:
    if (qword_1007854E0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_10079C3F0);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v11, "Tried createAndStartEditingNewHashtag but there is no cell containing the Reminder Item specified", v12, 2u);
      swift_slowDealloc();
    }
    goto LABEL_10;
  }
  TTRIRemindersListReminderCell.createAndStartEditingNewHashtag()();
LABEL_10:
}

NSObject *sub_10037E5D8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - v9;
  os_log_type_t v11 = sub_100377F30();
  sub_1003F928C(a1, a2, a3);

  uint64_t result = sub_100377F30();
  uint64_t v13 = *(Class *)((char *)&result->isa + qword_1007A59F0);
  if (!v13)
  {
    __break(1u);
    return result;
  }
  uint64_t v14 = result;
  id v15 = v13;
  uint64_t v16 = sub_1000890D8();
  uint64_t v20 = (void *)sub_10008E820(a1, v16, v18, v19, v17 & 1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v20) {
    return TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)();
  }
  type metadata accessor for TTRIRemindersListReminderCell();
  uint64_t v21 = swift_dynamicCastClass();
  if (!v21 || (uint64_t v22 = v21, (TTRIRemindersListReminderCell.isViewModelValid.getter() & 1) == 0))
  {

    return TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)();
  }
  if (qword_1007854E0 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_100018BF8(v23, (uint64_t)qword_10079C3F0);
  sub_100034240(a1, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  id v24 = v20;
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.info.getter();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v28 = (uint64_t)v37;
  if (v27)
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v35 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v39 = v36;
    *(_DWORD *)uint64_t v29 = 136315394;
    sub_100034240((uint64_t)v10, v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v38 = sub_1000385A8(v30, v31, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_WORD *)(v29 + 12) = 2112;
    uint64_t v38 = v22;
    id v32 = v24;
    uint64_t v28 = (uint64_t)v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v35 = v22;

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Target scroll item cell already loaded {item: %s, cell: %@}", (uint8_t *)v29, 0x16u);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  sub_100034240(a1, v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10003B754(&qword_10078AD88);
  swift_allocObject();
  uint64_t v33 = Promise.init(value:)();

  return v33;
}

uint64_t sub_10037EA24(uint64_t a1, int a2)
{
  int v36 = a2;
  uint64_t v4 = type metadata accessor for TTRRemindersListHighlightTarget();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v37 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v38 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = TTRRemindersListHighlightTarget.targetItems.getter();
  uint64_t v14 = v13;
  if (*(void *)(v13 + 16))
  {
    uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v35 = &type metadata accessor for TTRRemindersListHighlightTarget.TargetItem;
    sub_100034240(v13 + ((v15 + 32) & ~v15), (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
    sub_10037AFCC(v14);
    if (v12[*(int *)(v7 + 20)]) {
      uint64_t v16 = 2;
    }
    else {
      uint64_t v16 = 0;
    }
    v36 &= 1u;
    uint64_t v34 = v2;
    sub_10037B620((uint64_t)v12, v16, v36);
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100034240(a1, (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget);
    unint64_t v18 = (*(unsigned __int8 *)(v37 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    unint64_t v19 = (v5 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v17;
    sub_100398360((uint64_t)v6, v20 + v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget);
    unint64_t v21 = v20 + v19;
    *(void *)unint64_t v21 = v14;
    char v22 = v36;
    *(unsigned char *)(v21 + 8) = v36;
    uint64_t v23 = (void *)zalgo.getter();
    uint64_t v24 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    uint64_t v25 = v38;
    sub_100034240((uint64_t)v12, v38, (uint64_t (*)(void))v35);
    uint64_t v26 = (v15 + 24) & ~v15;
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v34;
    *(void *)(v27 + 16) = v34;
    sub_100398360(v25, v27 + v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
    *(unsigned char *)(v27 + v26 + v9) = v22;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_100394EDC;
    *(void *)(v29 + 24) = v27;
    id v30 = v28;
    unint64_t v31 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    sub_100034624((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
    return v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10003B754(&qword_10079F3B0);
    swift_allocObject();
    return Promise.init(value:)();
  }
}

void sub_10037EE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v6) = a5;
  uint64_t v38 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem();
  uint64_t v9 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListHighlightTarget();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v36 = v9;
    if (qword_1007854E0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100018BF8(v15, (uint64_t)qword_10079C3F0);
    sub_100034240(a3, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v37 = v5;
    if (v18)
    {
      uint64_t v19 = swift_slowAlloc();
      LODWORD(v35) = v6;
      uint64_t v6 = (uint8_t *)v19;
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v34 = v6 + 4;
      uint64_t v20 = TTRRemindersListHighlightTarget.description.getter();
      uint64_t v40 = sub_1000385A8(v20, v21, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100034624((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "TTRIRemindersListContentViewController: highlight item briefly {target: %s}", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      LOBYTE(v6) = v35;
      swift_slowDealloc();
    }
    else
    {
      sub_100034624((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget);
    }

    uint64_t v22 = v36;
    uint64_t v23 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_isHighlightingItemsProgrammatically;
    *(unsigned char *)(Strong
             + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_isHighlightingItemsProgrammatically) = 1;
    uint64_t v24 = *(void *)(a4 + 16);
    if (v24)
    {
      uint64_t v35 = v23;
      uint64_t v36 = a4;
      uint64_t v25 = a4 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
      uint64_t v26 = *(void *)(v22 + 72);
      swift_bridgeObjectRetain();
      int v27 = v6 & 1;
      while (1)
      {
        sub_100034240(v25, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
        uint64_t v28 = sub_100377F30();
        uint64_t v29 = *(Class *)((char *)&v28->isa + qword_1007A59F0);
        if (!v29) {
          break;
        }
        id v30 = v28;
        int v31 = v11[*(int *)(v38 + 20)];
        id v32 = v29;
        sub_100372A4C((uint64_t)v11, v31, 0, v27);

        sub_100034624((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
        v25 += v26;
        if (!--v24)
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = v35;
          goto LABEL_12;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_12:
      uint64_t v33 = (void *)Strong;
      *(unsigned char *)(Strong + v23) = 0;
    }
  }
}

uint64_t sub_10037F208(uint64_t a1, uint64_t a2, int a3)
{
  int v29 = a3;
  v24[1] = a1;
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem();
  v24[0] = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v24[0] + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v28 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  os_log_type_t v17 = (char *)v24 - v16;
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  uint64_t v26 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  int v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  v27(v14, v11);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100034240(v25, (uint64_t)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
  unint64_t v19 = (*(unsigned __int8 *)(v24[0] + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v24[0] + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  sub_100398360((uint64_t)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
  *(unsigned char *)(v20 + v19 + v10) = v29;
  aBlock[4] = sub_100395548;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000AD88;
  aBlock[3] = &unk_100747A28;
  unint64_t v21 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003889DC((unint64_t *)&qword_10078C6E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10003B754((uint64_t *)&unk_100788E50);
  sub_100037EA0((unint64_t *)&qword_10078C6F0, (uint64_t *)&unk_100788E50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v22 = (void *)v26;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v31);
  return ((uint64_t (*)(char *, uint64_t))v27)(v17, v28);
}

void sub_10037F6BC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    HIDWORD(v29) = a3;
    uint64_t v11 = sub_100377F30();
    uint64_t v12 = *(Class *)((char *)&v11->isa + qword_1007A59F0);
    if (v12)
    {
      uint64_t v13 = v11;
      id v14 = v12;
      uint64_t v15 = sub_1000890D8();
      unint64_t v19 = (void *)sub_10008E820(a2, v15, v17, v18, v16 & 1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19)
      {
        type metadata accessor for TTRIRemindersListReminderCell();
        uint64_t v20 = swift_dynamicCastClass();
        if (v20)
        {
          unint64_t v21 = (void *)v20;
          if (TTRIRemindersListReminderCell.isViewModelValid.getter()) {
            UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v21);
          }
        }
      }
      uint64_t v22 = sub_100377F30();
      uint64_t v23 = *(char **)((char *)&v22->isa + qword_1007A59F0);
      if (v23)
      {
        uint64_t v24 = v22;
        uint64_t v25 = *(void **)&v23[qword_10078DEA0];
        uint64_t v26 = v23;
        id v27 = v25;
        NSNotFound.getter();
        NSNotFound.getter();
        IndexPath.init(row:section:)();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        [v27 highlightRowAtIndexPath:isa animated:BYTE4(v29) & 1 scrollPosition:0];

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10037F914()
{
  uint64_t v0 = sub_100377F30();
  uint64_t v1 = *(Class *)((char *)&v0->isa + qword_1007A59F0);
  if (v1)
  {
    unint64_t v2 = v0;
    id v3 = v1;
    sub_100136390(0, 0, 0, 0, (uint64_t)v3, (void (*)(uint64_t))sub_100396D54);
  }
  else
  {
    __break(1u);
  }
}

void sub_10037F9A8(uint64_t a1, uint64_t a2)
{
  v17[1] = a2;
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v12 = (void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v13 = *(void *)(v7 + 72);
    v17[0] = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100034240(v11, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      id v14 = sub_100377F30();
      sub_100034240((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*v12)(v5, 0, 1, v6);
      uint64_t v15 = *(Class *)((char *)&v14->isa + qword_1007A59F0);
      if (!v15) {
        break;
      }
      id v16 = v15;
      sub_1003D97AC((uint64_t)v5, 0, 5);

      sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_100788DC0);
      sub_100034624((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v11 += v13;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void *sub_10037FBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void **)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem();
  __chkstk_darwin(v14);
  id v16 = (id *)((char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_10;
    case 2u:
    case 3u:
    case 4u:
      sub_100034624((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
      type metadata accessor for TTRIRemindersListReminderCell();
      uint64_t v17 = *(void **)(a1 + qword_1007A59E8);
      if (!v17)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        sub_100034624((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
LABEL_29:
        if (qword_1007854E0 != -1) {
          swift_once();
        }
        uint64_t v35 = sub_100018BF8(v4, (uint64_t)qword_10079C3F0);
        ((void (*)(char *, uint64_t, uint64_t))v5[2])(v7, v35, v4);
        uint64_t v5 = _swiftEmptyArrayStorage;
        sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
        sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
        sub_1003AA010((uint64_t)"Unexpected item type for cellForItem", 36, 2);
        __break(1u);
LABEL_32:
        if (qword_1007854E0 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_100018BF8(v4, (uint64_t)qword_10079C3F0);
        ((void (*)(char *, uint64_t, uint64_t))v5[2])(v10, v36, v4);
        sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
        sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
        sub_1003AA010((uint64_t)"Unexpected sectionID type for cellForItem", 41, 2);
        __break(1u);
        JUMPOUT(0x1003801BCLL);
      }
      id v18 = v17;
      unint64_t v19 = (void *)UITableView.dequeueReusableCell<A>(_:)();

      uint64_t v20 = v19;
      NSString v21 = String._bridgeToObjectiveC()();
      [v20 setTtrFocusGroupIdentifier:v21];

      break;
    case 5u:

      type metadata accessor for TTRIRemindersListCompletedCell();
      id v27 = *(void **)(a1 + qword_1007A59E8);
      if (v27) {
        goto LABEL_21;
      }
      __break(1u);
LABEL_15:

      type metadata accessor for TTRIRemindersListSharingStatusCellTableViewCell();
      id v27 = *(void **)(a1 + qword_1007A59E8);
      if (v27) {
        goto LABEL_21;
      }
      __break(1u);
LABEL_17:
      type metadata accessor for TTRIRemindersListTemplateStatusCell();
      uint64_t v26 = *(void **)(a1 + qword_1007A59E8);
      if (!v26) {
        goto LABEL_26;
      }
LABEL_18:
      id v32 = v26;
      uint64_t v20 = (void *)UITableView.dequeueReusableCell<A>(_:)();

LABEL_19:
      sub_100034624((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
      break;
    case 6u:
      goto LABEL_15;
    case 7u:
      type metadata accessor for TTRIRemindersListHashtagCollectionCell();
      uint64_t v22 = *(void **)(a1 + qword_1007A59E8);
      if (!v22) {
        goto LABEL_24;
      }
      id v23 = v22;
      uint64_t v24 = (void *)UITableView.dequeueReusableCell<A>(_:)();

      uint64_t v20 = v24;
      NSString v25 = String._bridgeToObjectiveC()();
      [v20 setTtrFocusGroupIdentifier:v25];

      goto LABEL_19;
    case 8u:
      goto LABEL_17;
    case 9u:
      type metadata accessor for TTRIRemindersListTipCell();
      uint64_t v26 = *(void **)(a1 + qword_1007A59E8);
      if (v26) {
        goto LABEL_18;
      }
      __break(1u);
LABEL_8:
      type metadata accessor for TTRIRemindersListRecentlyDeletedDisclaimerCell();
      id v27 = *(void **)(a1 + qword_1007A59E8);
      if (v27)
      {
LABEL_21:
        id v33 = v27;
        uint64_t v20 = (void *)UITableView.dequeueReusableCell<A>(_:)();

        break;
      }
      __break(1u);
LABEL_10:
      sub_100398360((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v28 = (void *)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
      if (v29 > 2u) {
        goto LABEL_32;
      }

      type metadata accessor for TTRIRemindersListEditableSectionCell();
      uint64_t v30 = *(void **)(a1 + qword_1007A59E8);
      if (!v30) {
        goto LABEL_25;
      }
      id v31 = v30;
      uint64_t v20 = (void *)UITableView.dequeueReusableCell<A>(_:)();

      sub_100034624((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      break;
    case 0xAu:
      type metadata accessor for TTRIRemindersListPublicTemplatePreviewStatusCell();
      id v27 = *(void **)(a1 + qword_1007A59E8);
      if (v27) {
        goto LABEL_21;
      }
      goto LABEL_27;
    case 0xBu:
      goto LABEL_8;
    case 0xCu:
      goto LABEL_29;
    default:
      goto LABEL_28;
  }
  sub_10039102C(v20, a2);
  return v20;
}

uint64_t sub_1003801F0()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    swift_unknownObjectRetain();

    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = (uint64_t *)TTRITipKitSignalContext.RemindersList.keyboardShortcut.unsafeMutableAddressor();
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    uint64_t v7 = *(void *)(v2 + 8);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 808);
    swift_bridgeObjectRetain();
    v8(v5, v6, ObjectType, v7);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1003802C4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v1 = (void *)Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    swift_unknownObjectRetain();

    uint64_t ObjectType = swift_getObjectType();
    uint64_t v1 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 160))(ObjectType);
    swift_unknownObjectRelease();
  }
  return v1;
}

uint64_t sub_100380364(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v72 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v70 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v70 - v10;
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_10078EEE0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v74 = (uint64_t)&v70 - v16;
  type metadata accessor for TTRIRemindersListReminderCell();
  uint64_t v17 = swift_dynamicCastClass();
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v71 = v14;
    uint64_t v19 = *(void *)&v75[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 424);
    id v23 = a2;
    v22(a1, ObjectType, v21);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 880))(a1, ObjectType, v21)) {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 776))(a1, ObjectType, v21);
    }
    uint64_t v24 = v18 + direct field offset for TTRIRemindersListReminderCell.delegate;
    swift_beginAccess();
    *(void *)(v24 + 8) = &off_100747468;
    swift_unknownObjectWeakAssign();
    NSString v25 = (void *)(v18 + direct field offset for TTRIRemindersListReminderCell.titleModule);
    swift_beginAccess();
    if (*v25)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      TTRIReminderCellTitleModuleInterface.item.getter();
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v33 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 1, 1, v33);
    }
    uint64_t v73 = *(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v21 + 224);
    char v34 = v73(a1, v11, ObjectType, v21);
    sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_100788DC0);
    if ((v34 & 1) == 0)
    {
LABEL_27:
      uint64_t v41 = (void *)(v18 + direct field offset for TTRIRemindersListReminderCell.notesModule);
      swift_beginAccess();
      if (*v41)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        TTRIReminderCellNotesModuleInterface.item.getter();
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.Item();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v8, 1, 1, v42);
      }
      char v43 = v73(a1, v8, ObjectType, v21);
      sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
      if ((v43 & 1) == 0)
      {
LABEL_44:
        uint64_t v50 = (void *)(v18 + direct field offset for TTRIRemindersListReminderCell.hashtagModule);
        swift_beginAccess();
        if (*v50)
        {
          uint64_t v51 = v50[1];
          uint64_t v52 = swift_getObjectType();
          uint64_t v70 = v21;
          uint64_t v53 = a1;
          uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
          swift_unknownObjectRetain();
          uint64_t v55 = v52;
          uint64_t v56 = (uint64_t)v72;
          v54(v55, v51);
          a1 = v53;
          uint64_t v21 = v70;
          swift_unknownObjectRelease();
          uint64_t v57 = type metadata accessor for TTRRemindersListViewModel.Item();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
        }
        else
        {
          uint64_t v58 = type metadata accessor for TTRRemindersListViewModel.Item();
          uint64_t v56 = (uint64_t)v72;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v72, 1, 1, v58);
        }
        uint64_t v59 = (uint64_t)v71;
        char v60 = v73(a1, (char *)v56, ObjectType, v21);
        sub_10003B6F8(v56, (uint64_t *)&unk_100788DC0);
        if ((v60 & 1) == 0) {
          goto LABEL_61;
        }
        id v61 = [v75 parentViewController];
        if (v61)
        {
          BOOL v62 = v61;
          swift_getObjectType();
          uint64_t v63 = swift_conformsToProtocol2();
          if (v63) {
            uint64_t v64 = v63;
          }
          else {
            uint64_t v64 = 0;
          }
          if (v63) {
            uint64_t v65 = v62;
          }
          else {
            uint64_t v65 = 0;
          }
          if (v65)
          {
            uint64_t v66 = *(void *)(v64 + 16);
LABEL_60:
            (*(void (**)(long long *__return_ptr, uint64_t, void *, uint64_t, char *, uint64_t, uint64_t))(v21 + 248))(&v76, a1, v65, v66, v75, ObjectType, v21);
            swift_unknownObjectRelease();
            TTRIRemindersListReminderCell.hashtagModule.setter();
LABEL_61:
            sub_10003B694(v74, v59, (uint64_t *)&unk_10078EEE0);
            uint64_t v67 = type metadata accessor for TTRRemindersListViewModel.Reminder();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48))(v59, 1, v67) == 1)
            {
              sub_10003B6F8(v59, (uint64_t *)&unk_10078EEE0);
              long long v76 = 0u;
              long long v77 = 0u;
              unint64_t v78 = 0;
            }
            else
            {
              *((void *)&v77 + 1) = v67;
              unint64_t v78 = protocol witness table for TTRRemindersListViewModel.Reminder;
              unint64_t v68 = sub_1000394A8((uint64_t *)&v76);
              sub_100398360(v59, (uint64_t)v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
            }
            TTRIRemindersListReminderCell.viewModel.setter();
            if (TTRIRemindersListReminderCell.isViewModelValid.getter()) {
              TTRRemindersListItemStateTracker.fullfil(_:of:)();
            }
            sub_10003B6F8(v74, (uint64_t *)&unk_10078EEE0);
            return v18;
          }
        }
        else
        {
          uint64_t v65 = 0;
        }
        uint64_t v66 = 0;
        goto LABEL_60;
      }
      id v44 = [v75 parentViewController];
      if (v44)
      {
        uint64_t v45 = v44;
        swift_getObjectType();
        uint64_t v46 = swift_conformsToProtocol2();
        if (v46) {
          uint64_t v47 = v46;
        }
        else {
          uint64_t v47 = 0;
        }
        if (v46) {
          char v48 = v45;
        }
        else {
          char v48 = 0;
        }
        if (v48)
        {
          uint64_t v49 = *(void *)(v47 + 24);
LABEL_43:
          (*(void (**)(long long *__return_ptr, uint64_t, void *, uint64_t, char *, uint64_t, uint64_t))(v21 + 240))(&v76, a1, v48, v49, v75, ObjectType, v21);
          swift_unknownObjectRelease();
          TTRIRemindersListReminderCell.notesModule.setter();
          goto LABEL_44;
        }
      }
      else
      {
        char v48 = 0;
      }
      uint64_t v49 = 0;
      goto LABEL_43;
    }
    id v35 = [v75 parentViewController];
    if (v35)
    {
      uint64_t v36 = v35;
      swift_getObjectType();
      uint64_t v37 = swift_conformsToProtocol2();
      if (v37) {
        uint64_t v38 = v37;
      }
      else {
        uint64_t v38 = 0;
      }
      if (v37) {
        uint64_t v39 = v36;
      }
      else {
        uint64_t v39 = 0;
      }
      if (v39)
      {
        uint64_t v40 = *(void *)(v38 + 32);
LABEL_26:
        (*(void (**)(long long *__return_ptr, uint64_t, void *, uint64_t, char *, uint64_t, uint64_t))(v21 + 232))(&v76, a1, v39, v40, v75, ObjectType, v21);
        swift_unknownObjectRelease();
        TTRIRemindersListReminderCell.titleModule.setter();
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v39 = 0;
    }
    uint64_t v40 = 0;
    goto LABEL_26;
  }
  if (qword_1007854E0 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_100018BF8(v26, (uint64_t)qword_10079C3F0);
  id v27 = a2;
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    id v31 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 138412290;
    *(void *)&long long v76 = v27;
    id v32 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v31 = v27;

    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to cast cell to reminderListCell {cell: %@}", v30, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_100380D2C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(v2
                 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_isHighlightingItemsProgrammatically) & 1) != 0)
  {
LABEL_2:
    uint64_t v5 = 1;
    uint64_t v6 = 3;
  }
  else
  {
    uint64_t v7 = qword_1007A59E8;
    uint64_t v8 = *(void **)(a1 + qword_1007A59E8);
    if (!v8)
    {
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
      JUMPOUT(0x100380E98);
    }
    uint64_t v6 = 3;
    uint64_t v5 = 0;
    switch(sub_1003F4AE4(a2, (char)[v8 isEditing]))
    {
      case 1u:
        goto LABEL_2;
      case 2u:
        uint64_t v9 = *(void **)(a1 + v7);
        if (!v9) {
          goto LABEL_15;
        }
        if ([v9 hasActiveDrop]) {
          uint64_t v6 = 3;
        }
        else {
          uint64_t v6 = 0;
        }
LABEL_10:
        uint64_t v5 = 1;
        break;
      case 3u:
        uint64_t v6 = 0;
        goto LABEL_10;
      default:
        break;
    }
  }
  uint64_t v10 = *(void **)(a1 + qword_1007A59F0);
  if (!v10)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v11 = v10;
  uint64_t v12 = sub_1000890D8();
  uint64_t v16 = (void *)sub_10008E820(a2, v12, v14, v15, v13 & 1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  [v16 setSelectionStyle:v6];

  return v5;
}

uint64_t sub_100380EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(void **)(a1 + qword_1007A59E8);
  if (!v11)
  {
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    JUMPOUT(0x1003812E4);
  }
  uint64_t v12 = *(void *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  switch(sub_1003F4AE4(a2, (char)[v11 isEditing]))
  {
    case 1u:
      uint64_t v14 = *(void **)(a1 + qword_1007A59F0);
      if (!v14) {
        goto LABEL_33;
      }
      id v15 = v14;
      uint64_t v16 = sub_1000890D8();
      uint64_t v20 = (void *)sub_10008E820(a2, v16, v18, v19, v17 & 1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20)
      {
        [v20 setSelectionStyle:3];
      }
      sub_100034240(a2, a3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.Item();
      uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
      uint64_t v23 = v21;
      uint64_t v24 = a3;
      uint64_t v25 = 0;
      goto LABEL_27;
    case 2u:
      uint64_t v48 = ObjectType;
      uint64_t v49 = a3;
      uint64_t v26 = *(void **)(a1 + qword_1007A59F0);
      if (!v26) {
        goto LABEL_34;
      }
      id v27 = v26;
      uint64_t v28 = sub_1000890D8();
      id v32 = (void *)sub_10008E820(a2, v28, v30, v31, v29 & 1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v32) {
        goto LABEL_25;
      }
      swift_getObjectType();
      uint64_t v33 = swift_conformsToProtocol2();
      if (v33) {
        uint64_t v34 = v33;
      }
      else {
        uint64_t v34 = 0;
      }
      if (v33) {
        id v35 = v32;
      }
      else {
        id v35 = 0;
      }
      if (v35)
      {
        uint64_t v36 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_internalFocusedCell);
        if (v36
          && ((type metadata accessor for TTRIRemindersListReminderCell(), (uint64_t v37 = swift_dynamicCastClass()) != 0)
            ? (BOOL v38 = v37 == (void)v36)
            : (BOOL v38 = 0),
              v38))
        {
          uint64_t v43 = *(void *)(v12 + 8);
          id v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 312);
          id v45 = v36;
          id v46 = v32;
          v44(a2, v48, v43);

          sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_100788DC0);
        }
        else
        {
          uint64_t v39 = swift_getObjectType();
          (*(void (**)(void, uint64_t, uint64_t))(v34 + 16))(0, v39, v34);
        }
        uint64_t v47 = type metadata accessor for TTRRemindersListViewModel.Item();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v49, 1, 1, v47);
      }
      else
      {

LABEL_25:
        uint64_t v41 = type metadata accessor for TTRRemindersListViewModel.Item();
        uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
        uint64_t v23 = v41;
        uint64_t v24 = v49;
LABEL_26:
        uint64_t v25 = 1;
LABEL_27:
        return v22(v24, v25, 1, v23);
      }
    case 3u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 + 8) + 680))(a2, ObjectType);
      goto LABEL_23;
    default:
LABEL_23:
      uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.Item();
      uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
      uint64_t v23 = v40;
      uint64_t v24 = a3;
      goto LABEL_26;
  }
}

void sub_1003812F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  double v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)(a1 + qword_1007A59E8);
  if (!v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (!objc_msgSend(v9, "isEditing", v6)) {
    return;
  }
  if (!*(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController])
  {
LABEL_13:
    __break(1u);
    return;
  }
  sub_100034240(a2, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_10004A918((uint64_t)v8);
  sub_100034624((uint64_t)v8, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
  swift_release();
  id v10 = [v2 parentViewController];
  if (v10)
  {
    id v11 = v10;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    if (v12)
    {
      sub_10033C13C(1, 0);
      sub_10033D6DC();
    }
  }
}

id sub_10038147C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  sub_10022263C(a2);
  BOOL v7 = a2 == 10 || a2 == 0;
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100034240(a1, (uint64_t)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(unsigned char *)(v10 + 24) = a2;
  sub_100398360((uint64_t)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100397E24;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003687EC;
  aBlock[3] = &unk_100747ED8;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = [self contextualActionWithStyle:v7 title:v11 handler:v12];

  _Block_release(v12);
  swift_release();
  swift_release();
  uint64_t v14 = sub_1002226BC(a2);
  if (v14)
  {
    id v15 = (void *)v14;
    [v13 setBackgroundColor:v14];
  }
  id v16 = v13;
  sub_1003F7500(a2);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setAccessibilityLabel:v17];

  return v16;
}

uint64_t sub_10038172C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = type metadata accessor for TTRRemindersListViewModel.Item();
  a2[4] = (uint64_t)&protocol witness table for TTRRemindersListViewModel.Item;
  uint64_t v4 = sub_1000394A8(a2);
  return sub_100034240(a1, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_10038178C(char *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(void **)&a1[qword_1007A59F0];
  if (!v13)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v14 = v13;
  uint64_t v15 = sub_1000890D8();
  uint64_t v19 = (void *)sub_10008E820(a2, v15, v17, v18, v16 & 1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v19) {
    return;
  }
  type metadata accessor for TTRIRemindersListReminderCell();
  uint64_t v20 = swift_dynamicCastClass();
  if (!v20)
  {

    return;
  }
  uint64_t v21 = v20;
  [a1 convertPoint:v20 toCoordinateSpace:a3];
  double v23 = v22;
  double v25 = v24;
  uint64_t v26 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  id v27 = sub_100375B68((void *)1);
  uint64_t v28 = *(void **)&a1[qword_1007A59E8];
  if (!v28)
  {
LABEL_14:
    __break(1u);
    return;
  }
  char v29 = v27;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t, void *, id, uint64_t, double, double))(*(void *)(v26 + 8) + 736))(a2, v21, v29, [v28 isEditing], ObjectType, v23, v25);
  uint64_t v33 = v32;
  char v35 = v34;
  swift_bridgeObjectRelease();

  if (v31)
  {
    if (v35)
    {
      sub_1003971A0(v33, 1);
      uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v12, 1, 1, v37);
    }
    else
    {
      sub_1003971A0(v33, 0);
      sub_100034240(a2, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v12, 0, 1, v36);
    }
    uint64_t v38 = v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem;
    swift_beginAccess();
    sub_10000A550((uint64_t)v12, v38, (uint64_t *)&unk_100788DC0);
    swift_endAccess();
  }
}

void sub_100381A80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = (void *)Strong;
    sub_100381B10(a6, a7, a2, a3, a4);
  }
}

uint64_t sub_100381B10(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = a4;
  switch(a1)
  {
    case 1:
      id v46 = sub_100377F30();
      uint64_t v47 = *(Class *)((char *)&v46->isa + qword_1007A59F0);
      if (!v47) {
        goto LABEL_37;
      }
      uint64_t v48 = v46;
      id v49 = v47;
      uint64_t v50 = sub_1000890D8();
      uint64_t v54 = sub_10008E820(a2, v50, v52, v53, v51 & 1);

      swift_bridgeObjectRelease();
      char v35 = (void *)v54;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v54)
      {
        char v19 = 0;
        return v8(v19 & 1);
      }
      type metadata accessor for TTRIRemindersListReminderCell();
      if (!swift_dynamicCastClass()) {
        goto LABEL_26;
      }
      uint64_t v55 = *(void *)(v6 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v56 = (void *)TTRIRemindersListReminderCell.attributedTitle.getter();
      uint64_t v57 = v56;
      if (v56)
      {
        id v58 = [v56 string];

        uint64_t v57 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v60 = v59;
      }
      else
      {
        uint64_t v60 = 0;
      }
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t (*)(void), uint64_t, uint64_t))(*(void *)(v55 + 8) + 104))(a2, v57, v60, a3, v8, a5, ObjectType);
      goto LABEL_33;
    case 2:
      uint64_t v14 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v15 = swift_getObjectType();
      char v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 8) + 88))(1, a2, v15);
      goto LABEL_5;
    case 3:
      uint64_t v17 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v18 = swift_getObjectType();
      char v16 = (*(uint64_t (**)(void, uint64_t, uint64_t))(*(void *)(v17 + 8) + 88))(0, a2, v18);
LABEL_5:
      char v19 = v16;
      return v8(v19 & 1);
    case 4:
      uint64_t v20 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v21 = swift_getObjectType();
      sub_10003B754((uint64_t *)&unk_10078E960);
      uint64_t v22 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
      unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_10066C6F0;
      sub_100034240(a2, v24 + v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 + 8) + 664))(v24, v21);
      goto LABEL_20;
    case 5:
      uint64_t v61 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v62 = swift_getObjectType();
      sub_10003B754((uint64_t *)&unk_10078E960);
      uint64_t v63 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
      unint64_t v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_10066C6F0;
      sub_100034240(a2, v65 + v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v61 + 8) + 672))(v65, v62);
LABEL_20:
      char v19 = v25;
      swift_bridgeObjectRelease();
      return v8(v19 & 1);
    case 6:
      uint64_t v66 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v67 = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(void), uint64_t, uint64_t))(*(void *)(v66 + 8) + 632))(a2, 2, v8, a5, v67);
    case 7:
    case 8:
      uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v12 = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(void), uint64_t, uint64_t))(*(void *)(v11 + 8) + 632))(a2, 3, v8, a5, v12);
    case 9:
      uint64_t v26 = sub_100377F30();
      id v27 = *(Class *)((char *)&v26->isa + qword_1007A59F0);
      if (!v27)
      {
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x1003821FCLL);
      }
      uint64_t v28 = v26;
      id v29 = v27;
      uint64_t v30 = sub_1000890D8();
      uint64_t v34 = sub_10008E820(a2, v30, v32, v33, v31 & 1);

      swift_bridgeObjectRelease();
      char v35 = (void *)v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v34) {
        return a4(0);
      }
      type metadata accessor for TTRIRemindersListReminderCell();
      uint64_t v8 = a4;
      if (swift_dynamicCastClass())
      {
        uint64_t v36 = *(void *)(v6 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
        uint64_t v37 = (void *)TTRIRemindersListReminderCell.attributedTitle.getter();
        uint64_t v38 = v37;
        if (v37)
        {
          id v39 = [v37 string];

          uint64_t v38 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v41 = v40;
        }
        else
        {
          uint64_t v41 = 0;
        }
        uint64_t v70 = swift_getObjectType();
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t (*)(void), uint64_t, uint64_t))(*(void *)(v36 + 8) + 136))(a2, v38, v41, a3, a4, a5, v70);
LABEL_33:

        return swift_bridgeObjectRelease();
      }
      else
      {
LABEL_26:

        char v19 = 0;
        return v8(v19 & 1);
      }
    case 10:
      uint64_t v68 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v69 = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t (*)(void), uint64_t, uint64_t))(*(void *)(v68 + 8)
                                                                                                  + 192))(a2, v8, a5, v69);
    case 11:
      uint64_t v42 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v43 = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(void), uint64_t, uint64_t))(*(void *)(v42 + 8) + 200))(a2, a3, v8, a5, v43);
    default:
      uint64_t v44 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v45 = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t (*)(void), uint64_t, uint64_t))(*(void *)(v44 + 8)
                                                                                                  + 80))(a2, v8, a5, v45);
  }
}

uint64_t sub_10038222C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v20 = 0;
    if (EnumCaseMultiPayload != 1) {
      return (uint64_t)v20;
    }
    sub_100398360((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    if (v12[v10[6]] == 1)
    {
      uint64_t result = type metadata accessor for TTRIRemindersListSectionHeader();
      uint64_t v22 = *(void **)(a1 + qword_1007A59E8);
      if (v22)
      {
        unint64_t v23 = (objc_class *)result;
        id v24 = v22;
        uint64_t v20 = (unsigned char *)UITableView.dequeueReusableHeaderFooterView<A>(_:)();

        sub_100028C3C((uint64_t)&v12[v10[5]], (uint64_t)v48, (uint64_t *)&unk_10079CA00);
        sub_100396EB4((uint64_t)v48);
        sub_1002618B0((uint64_t)v48);
        sub_100034240((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 0, 1, v25);
        uint64_t v26 = (uint64_t)&v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID];
        swift_beginAccess();
        sub_10000A550((uint64_t)v9, v26, &qword_10078C890);
        swift_endAccess();
        int v27 = a3 == 0;
        uint64_t v28 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection;
        int v29 = v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection];
        v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection] = v27;
        if (v27 != v29)
        {
          if (v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState] == 2
            || (v47.receiver = v20, v47.super_class = v23, (objc_msgSendSuper2(&v47, "floating") & 1) != 0))
          {
            uint64_t v30 = 1;
          }
          else
          {
            uint64_t v30 = v20[v28];
          }
          [*(id *)&v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator] setHidden:v30];
          sub_1002625A0(0);
        }
        if (v12[v10[7]])
        {
          id v41 = v4;
          uint64_t v42 = &off_100747458;
        }
        else
        {
          uint64_t v42 = 0;
        }
        *(void *)&v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_delegate + 8] = v42;
        swift_unknownObjectWeakAssign();
        sub_100260B10();
        swift_unknownObjectRelease();
        uint64_t v43 = (uint64_t)v12;
LABEL_30:
        sub_100034624(v43, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        return (uint64_t)v20;
      }
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v40 = (uint64_t)v12;
LABEL_17:
    sub_100034624(v40, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    return 0;
  }
  sub_100398360((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (v15[v10[6]] != 1)
  {
    uint64_t v40 = (uint64_t)v15;
    goto LABEL_17;
  }
  uint64_t result = type metadata accessor for TTRIRemindersListSectionHeader();
  char v31 = *(void **)(a1 + qword_1007A59E8);
  if (v31)
  {
    uint64_t v32 = (objc_class *)result;
    id v33 = v31;
    uint64_t v20 = (unsigned char *)UITableView.dequeueReusableHeaderFooterView<A>(_:)();

    sub_100028C3C((uint64_t)&v15[v10[5]], (uint64_t)v48, (uint64_t *)&unk_10079CA00);
    sub_100396EB4((uint64_t)v48);
    sub_1002618B0((uint64_t)v48);
    sub_100034240((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    uint64_t v34 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v9, 0, 1, v34);
    uint64_t v35 = (uint64_t)&v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID];
    swift_beginAccess();
    sub_10000A550((uint64_t)v9, v35, &qword_10078C890);
    swift_endAccess();
    int v36 = a3 == 0;
    uint64_t v37 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection;
    int v38 = v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection];
    v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection] = v36;
    if (v36 != v38)
    {
      if (v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState] == 2
        || (v46.receiver = v20, v46.super_class = v32, (objc_msgSendSuper2(&v46, "floating") & 1) != 0))
      {
        uint64_t v39 = 1;
      }
      else
      {
        uint64_t v39 = v20[v37];
      }
      [*(id *)&v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator] setHidden:v39];
      sub_1002625A0(0);
    }
    if (v15[v10[7]])
    {
      id v44 = v4;
      uint64_t v45 = &off_100747458;
    }
    else
    {
      uint64_t v45 = 0;
    }
    *(void *)&v20[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_delegate + 8] = v45;
    swift_unknownObjectWeakAssign();
    sub_100260B10();
    swift_unknownObjectRelease();
    uint64_t v43 = (uint64_t)v15;
    goto LABEL_30;
  }
LABEL_33:
  __break(1u);
  return result;
}

unint64_t sub_100382834(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - v13;
  [a2 locationInView:a1];
  id v15 = [a1 hitTest:0];
  if (v15
    && (uint64_t v16 = v15,
        type metadata accessor for TTRIRemindersListReminderCell(),
        char v17 = static TTRIRemindersListReminderCell.ignoreDragging(view:)(),
        v16,
        (v17 & 1) != 0))
  {
    unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v19 = *(void *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 + 8) + 472))(a3, ObjectType);
  }
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v23) {
      return v18;
    }
    goto LABEL_7;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    swift_beginAccess();
    sub_1005A2CAC((uint64_t)v14, (uint64_t)v10);
    swift_endAccess();
    sub_100034624((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v21._countAndFlagsBits = 0x5F28747265736E69;
    v21._object = (void *)0xEA0000000000293ALL;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v21);
  }
  return v18;
}

uint64_t sub_100382A44(uint64_t a1, uint64_t a2)
{
  uint64_t v321 = a2;
  uint64_t v316 = a1;
  uint64_t v2 = sub_10003B754(&qword_10079C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v292 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (void **)((char *)v292 - v6);
  __chkstk_darwin(v8);
  v302 = (char *)v292 - v9;
  __chkstk_darwin(v10);
  double v12 = (char **)((char *)v292 - v11);
  uint64_t v13 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v13 - 8);
  v310 = (void *)((char *)v292 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10003B754(&qword_10079C9B8);
  uint64_t v313 = *(void *)(v15 - 8);
  __chkstk_darwin(v15 - 8);
  char v17 = (id *)((char *)v292 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v18 - 8);
  v303 = (char *)v292 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v304 = (char *)v292 - v21;
  uint64_t v22 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v22 - 8);
  v307 = (char *)v292 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v306 = (char *)v292 - v25;
  uint64_t v317 = type metadata accessor for IndexPath();
  v299 = *(void **)(v317 - 8);
  __chkstk_darwin(v317);
  v296 = (char *)v292 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v297 = (char *)v292 - v28;
  uint64_t v320 = sub_10003B754((uint64_t *)&unk_10079C9C0);
  v308 = *(void **)(v320 - 8);
  __chkstk_darwin(v320);
  v305 = (id *)((char *)v292 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)v292 - v31;
  unint64_t v309 = type metadata accessor for TTRRemindersListViewModel.Item();
  unint64_t v33 = *(void *)(v309 - 8);
  __chkstk_darwin(v309);
  uint64_t v319 = (uint64_t)v292 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v311 = (char *)v292 - v36;
  __chkstk_darwin(v37);
  v312 = (char *)v292 - v38;
  __chkstk_darwin(v39);
  uint64_t v318 = (uint64_t)v292 - v40;
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)v292 - v42;
  __chkstk_darwin(v44);
  uint64_t v314 = (uint64_t)v292 - v45;
  uint64_t v46 = sub_10003B754((uint64_t *)&unk_10079C990);
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)v292 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100368968((uint64_t *)&unk_10078E920, (uint64_t *)&unk_10079C9F0, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t (*)(void))sub_10036D604, (void (*)(void))sub_100146BF4, (uint64_t *)&unk_10078E948, (void (*)(char *))sub_10014AC00, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)v48, (uint64_t *)&unk_10079C990);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100398360((uint64_t)v48, v314, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v61 = v321;
      uint64_t v62 = (char *)sub_10036A388(1);
      int64_t v63 = *((void *)v62 + 2);
      if (!v63)
      {
        swift_bridgeObjectRelease();
        id v223 = [*(id *)(v61 + qword_10079BD18) items];
        sub_10003B754(&qword_100788F20);
        unint64_t v224 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        swift_retain();
        uint64_t v225 = sub_10038EFB0(v224, v61);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v226 = *(void *)(v225 + 16);
        if (v226)
        {
          v323 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          uint64_t v227 = v225 + ((*(unsigned __int8 *)(v313 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v313 + 80));
          uint64_t v228 = *(void *)(v313 + 72);
          do
          {
            sub_10003B694(v227, (uint64_t)v17, &qword_10079C9B8);
            id v229 = *v17;
            sub_10003B6F8((uint64_t)v17, &qword_10079C9B8);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            v227 += v228;
            --v226;
          }
          while (v226);
          v230 = v323;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v230 = _swiftEmptyArrayStorage;
        }
        uint64_t v260 = *(void *)&v315[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void **__return_ptr, void *, uint64_t))(*(void *)(v260 + 8) + 536))(&v323, v230, ObjectType);
        swift_bridgeObjectRelease();
        uint64_t v262 = v324;
        uint64_t v263 = v325;
        sub_100038D28(&v323, v324);
        uint64_t v264 = v314;
        uint64_t v265 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v263 + 56))(v314, v262, v263);
        v266 = *(void **)(v316 + qword_1007A59F0);
        if (!v266) {
          goto LABEL_285;
        }
        unint64_t v267 = v265;
        id v268 = v266;
        uint64_t v269 = sub_1000890D8();
        v273 = (void *)sub_10008E820(v264, v269, v271, v272, v270 & 1);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v273)
        {
          sub_100034624(v264, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_242:
          swift_bridgeObjectRelease();
          return sub_100038CD8((uint64_t)&v323);
        }
        [v273 bounds];
        CGRect.center.getter();
        double v275 = v274;
        double v277 = v276;
        if (v267 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v278 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v278) {
            goto LABEL_235;
          }
        }
        else
        {
          uint64_t v278 = *(void *)((v267 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v278)
          {
LABEL_235:
            if (v278 < 1)
            {
LABEL_280:
              __break(1u);
LABEL_281:
              __break(1u);
LABEL_282:
              __break(1u);
LABEL_283:
              __break(1u);
LABEL_284:
              __break(1u);
LABEL_285:
              __break(1u);
LABEL_286:
              __break(1u);
              JUMPOUT(0x100385770);
            }
            for (uint64_t i = 0; i != v278; ++i)
            {
              if ((v267 & 0xC000000000000001) != 0) {
                id v280 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v280 = *(id *)(v267 + 8 * i + 32);
              }
              v281 = v280;
              sub_10036C3B0((uint64_t)v280, v264, v275, v277, 0.0, 0.0);
            }
          }
        }
        swift_bridgeObjectRelease();

        uint64_t v236 = v264;
LABEL_272:
        sub_100034624(v236, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return sub_100038CD8((uint64_t)&v323);
      }
      v323 = _swiftEmptyArrayStorage;
      sub_1004D3504(0, v63, 0);
      unint64_t v64 = (*((unsigned __int8 *)v308 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v308 + 80);
      v302 = v62;
      uint64_t v65 = (uint64_t)&v62[v64];
      uint64_t v319 = v308[9];
      uint64_t v66 = v323;
      uint64_t v301 = v65;
      int64_t v300 = v63;
      do
      {
        sub_10003B694(v65, (uint64_t)v32, (uint64_t *)&unk_10079C9C0);
        sub_100034240((uint64_t)&v32[*(int *)(v320 + 40)], (uint64_t)v43, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10003B6F8((uint64_t)v32, (uint64_t *)&unk_10079C9C0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004D3504(0, v66[2] + 1, 1);
          uint64_t v66 = v323;
        }
        unint64_t v68 = v66[2];
        unint64_t v67 = v66[3];
        if (v68 >= v67 >> 1)
        {
          sub_1004D3504(v67 > 1, v68 + 1, 1);
          uint64_t v66 = v323;
        }
        v66[2] = v68 + 1;
        sub_100398360((uint64_t)v43, (uint64_t)v66+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        v65 += v319;
        --v63;
      }
      while (v63);
      uint64_t v89 = *(void *)&v315[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
      uint64_t v90 = swift_getObjectType();
      unint64_t v33 = v314;
      char v91 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v89 + 8) + 528))(v66, v314, v90);
      swift_release();
      if ((v91 & 1) == 0)
      {
        sub_100034624(v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return swift_bridgeObjectRelease();
      }
      unint64_t j = 0;
      v292[0] = 0;
      v311 = (char *)qword_1007A59F0;
      v310 = v299 + 7;
      v295 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v299 + 6);
      v294 = (void (**)(char *, uint64_t, uint64_t))(v299 + 4);
      v293 = (void (**)(char *, uint64_t))(v299 + 1);
      uint64_t v4 = v303;
      uint64_t v92 = (uint64_t)v305;
      unint64_t v51 = (unint64_t)v302;
      while (1)
      {
        if (j >= *(void *)(v51 + 16))
        {
LABEL_260:
          __break(1u);
LABEL_261:
          __break(1u);
LABEL_262:
          __break(1u);
LABEL_263:
          __break(1u);
LABEL_264:
          __break(1u);
LABEL_265:
          __break(1u);
LABEL_266:
          __break(1u);
          goto LABEL_267;
        }
        sub_10003B694(v301 + j * v319, v92, (uint64_t *)&unk_10079C9C0);
        sub_100034240(v92 + *(int *)(v320 + 40), v318, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v101 = *(char **)&v311[v316];
        if (!v101) {
          goto LABEL_281;
        }
        if (v101[qword_10078DED8] == 1)
        {
          uint64_t v102 = qword_1007852B8;
          uint64_t v103 = v101;
          if (v102 != -1) {
            swift_once();
          }
          uint64_t v104 = type metadata accessor for Logger();
          sub_100018BF8(v104, (uint64_t)qword_10078DE60);
          char v105 = Logger.logObject.getter();
          os_log_type_t v106 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v105, v106))
          {
            uint64_t v107 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v107 = 0;
            _os_log_impl((void *)&_mh_execute_header, v105, v106, "Attempting to read sectionMetadata while it is being modified", v107, 2u);
            swift_slowDealloc();
          }
        }
        else
        {
          uint64_t v108 = v101;
        }
        v315 = v101;
        uint64_t v109 = &v101[qword_10078DED0];
        uint64_t v110 = *(void *)&v101[qword_10078DED0];
        char v111 = *(void **)&v101[qword_10078DED0 + 8];
        unint64_t v112 = *(void *)&v101[qword_10078DED0 + 16];
        int v113 = v101[qword_10078DED0 + 24];
        v312 = (char *)j;
        if (v110)
        {
          unint64_t j = v113 & 1;
          uint64_t v313 = v110;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v114 = v112;
        }
        else
        {
          sub_10003B754((uint64_t *)&unk_10078E3A0);
          uint64_t v115 = swift_allocObject();
          *(void *)(v115 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
          LODWORD(v309) = v113;
          v308 = v111;
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
          {
            uint64_t v210 = _CocoaArrayWrapper.endIndex.getter();
            if (v210)
            {
              uint64_t v211 = v210;
              if (v210 < 1) {
                goto LABEL_283;
              }
              v212 = &_swiftEmptyArrayStorage[4];
              do
              {
                uint64_t v213 = *v212++;
                swift_weakAssign();
                swift_beginAccess();
                *(void *)(v213 + 64) = _swiftEmptyArrayStorage;
                swift_bridgeObjectRelease();
                --v211;
              }
              while (v211);
            }
          }
          sub_10008EDE8(v115);
          uint64_t v117 = v116;
          char v119 = v118;
          unint64_t v114 = v120;
          unint64_t v122 = v121;
          swift_release();
          uint64_t v123 = *(void *)v109;
          *(void *)uint64_t v109 = v117;
          *((void *)v109 + 1) = v119;
          *((void *)v109 + 2) = v114;
          v109[24] = v122 & 1;
          uint64_t v313 = v117;
          char v111 = v119;
          unint64_t j = v122;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1000349CC(v123);
          sub_1000349CC(0);
          unint64_t v33 = v314;
          uint64_t v4 = v303;
        }
        uint64_t v124 = (uint64_t)v304;
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        uint64_t v125 = (uint64_t)v306;
        uint64_t v126 = v317;
        if (!v111[2] || (unint64_t v127 = sub_10035C1D4(v124), (v128 & 1) == 0))
        {
          sub_100034624(v124, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_53:
          unint64_t v309 = *v310;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v309)(v125, 1, 1, v126);
LABEL_54:
          sub_10003B6F8(v125, &qword_10078E8F0);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_55;
        }
        uint64_t v129 = *(void *)(v111[7] + 8 * v127);
        swift_bridgeObjectRetain();
        sub_100034624(v124, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        unint64_t v51 = sub_1000FFBF8(v129);
        swift_bridgeObjectRelease();
        if (!v51) {
          goto LABEL_53;
        }
        if (!*(void *)(v114 + 16)) {
          goto LABEL_165;
        }
        uint64_t v130 = sub_10035C1D0(v51);
        if ((v131 & 1) == 0) {
          goto LABEL_165;
        }
        unint64_t v309 = *(void *)(*(void *)(v114 + 56) + 8 * v130);
        v308 = (void *)v51;
        if (j)
        {
          unint64_t v298 = v114;
          uint64_t Strong = swift_weakLoadStrong();
          swift_retain();
          uint64_t v4 = 0;
          if (Strong)
          {
            unint64_t v133 = v51;
            v299 = v111;
            do
            {
              BOOL v167 = __OFADD__(v4++, 1);
              if (v167) {
                goto LABEL_263;
              }
              uint64_t v168 = Strong;
              swift_beginAccess();
              unint64_t j = *(void *)(Strong + 64);
              if (j >> 62)
              {
                swift_retain();
                swift_bridgeObjectRetain();
                uint64_t v169 = _CocoaArrayWrapper.endIndex.getter();
                if (!v169)
                {
LABEL_78:
                  swift_release();
                  swift_bridgeObjectRelease();
                  goto LABEL_79;
                }
              }
              else
              {
                uint64_t v169 = *(void *)((j & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_retain();
                swift_bridgeObjectRetain();
                if (!v169) {
                  goto LABEL_78;
                }
              }
              unint64_t v33 = j & 0xC000000000000001;
              if ((j & 0xC000000000000001) != 0)
              {
                uint64_t v170 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                if (v170 != v133) {
                  goto LABEL_86;
                }
              }
              else
              {
                if (!*(void *)((j & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_265;
                }
                uint64_t v170 = *(void *)(j + 32);
                swift_retain();
                if (v170 != v133)
                {
LABEL_86:
                  uint64_t v171 = 0;
                  unint64_t v51 = j & 0xFFFFFFFFFFFFFF8;
                  uint64_t v172 = v169 - 1;
                  while (1)
                  {
                    v173 = v4 + 1;
                    if (__OFADD__(v4, 1)) {
                      break;
                    }
                    if (*(unsigned char *)(v170 + 48))
                    {
                      uint64_t v322 = 0;
                      sub_10020B4F8(v170, &v322);
                      uint64_t v174 = v322;
                      *(void *)(v170 + 40) = v322;
                      *(unsigned char *)(v170 + 48) = 0;
                    }
                    else
                    {
                      uint64_t v174 = *(void *)(v170 + 40);
                    }
                    swift_release();
                    BOOL v167 = __OFADD__(v173, v174);
                    uint64_t v4 = &v173[v174];
                    if (v167) {
                      goto LABEL_253;
                    }
                    if (v172 == v171)
                    {
                      swift_release();
                      swift_bridgeObjectRelease();
                      goto LABEL_105;
                    }
                    unint64_t v175 = v171 + 1;
                    if (v33)
                    {
                      uint64_t v170 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                      if (__OFADD__(v175, 1)) {
                        goto LABEL_254;
                      }
                    }
                    else
                    {
                      if (v175 >= *(void *)((j & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                        goto LABEL_259;
                      }
                      uint64_t v170 = *(void *)(j + 8 * v171 + 40);
                      swift_retain();
                      if (__OFADD__(v175, 1)) {
                        goto LABEL_254;
                      }
                    }
                    ++v171;
                    if (v170 == v133) {
                      goto LABEL_104;
                    }
                  }
                  __break(1u);
LABEL_253:
                  __break(1u);
LABEL_254:
                  __break(1u);
LABEL_255:
                  __break(1u);
LABEL_256:
                  __break(1u);
LABEL_257:
                  __break(1u);
LABEL_258:
                  __break(1u);
LABEL_259:
                  __break(1u);
                  goto LABEL_260;
                }
              }
LABEL_104:
              swift_bridgeObjectRelease();
              swift_release_n();
LABEL_105:
              unint64_t v33 = v314;
              unint64_t v51 = (unint64_t)v308;
LABEL_79:
              uint64_t Strong = swift_weakLoadStrong();
              swift_release();
              unint64_t v133 = v168;
            }
            while (Strong);
          }
          swift_release();
          v195 = v4 - 1;
          if (__OFSUB__(v4, 1)) {
            goto LABEL_278;
          }
          uint64_t v4 = v303;
          uint64_t v125 = (uint64_t)v306;
          uint64_t v126 = v317;
          if (((unint64_t)v195 & 0x8000000000000000) != 0)
          {
LABEL_165:
            v196 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v310;
            uint64_t v197 = v125;
            uint64_t v198 = 1;
          }
          else
          {
            IndexPath.init(row:section:)();
            v196 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v310;
            uint64_t v197 = v125;
            uint64_t v198 = 0;
          }
          unint64_t v309 = (unint64_t)v196;
          v196(v197, v198, 1, v126);
          goto LABEL_167;
        }
        if ((v309 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_275:
          __break(1u);
LABEL_276:
          __break(1u);
LABEL_277:
          __break(1u);
LABEL_278:
          __break(1u);
LABEL_279:
          __break(1u);
          goto LABEL_280;
        }
        if (v309 >= *(void *)(v313 + 16)) {
          goto LABEL_275;
        }
        unint64_t j = v114;
        unint64_t v181 = *(void *)(v313 + 16 * v309 + 40);
        if (v181 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v182 = _CocoaArrayWrapper.endIndex.getter();
          if (!v182) {
            goto LABEL_149;
          }
        }
        else
        {
          uint64_t v182 = *(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v182) {
            goto LABEL_149;
          }
        }
        unint64_t v51 = v181 & 0xC000000000000001;
        if ((v181 & 0xC000000000000001) != 0)
        {
          v218 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_unknownObjectRelease();
          if (v218 == v308)
          {
LABEL_196:
            swift_bridgeObjectRelease();
            uint64_t v125 = (uint64_t)v306;
            IndexPath.init(row:section:)();
            v187 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v310;
            v188 = (char *)v125;
            uint64_t v189 = 0;
            goto LABEL_197;
          }
        }
        else if (*(void **)(v181 + 32) == v308)
        {
          goto LABEL_196;
        }
        if (v182 != 1) {
          break;
        }
LABEL_149:
        swift_bridgeObjectRelease();
        v187 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v310;
        uint64_t v125 = (uint64_t)v306;
        v188 = v306;
        uint64_t v189 = 1;
LABEL_197:
        uint64_t v126 = v317;
        unint64_t v309 = (unint64_t)v187;
        v187(v188, v189, 1, v317);
LABEL_167:
        swift_release();
        if ((*v295)(v125, 1, v126) == 1) {
          goto LABEL_54;
        }
        os_log_type_t v93 = v297;
        (*v294)(v297, v125, v126);
        id v94 = v315;
        id v95 = *(id *)&v315[qword_10078DEA0];
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v97 = [v95 cellForRowAtIndexPath:isa v292[0]];

        (*v293)(v93, v126);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v97)
        {
          uint64_t v92 = (uint64_t)v305;
          id v98 = *v305;
          sub_10036B350((uint64_t)v98, v318);

          goto LABEL_29;
        }
LABEL_55:
        uint64_t v134 = *(char **)&v311[v316];
        if (!v134) {
          goto LABEL_282;
        }
        if (v134[qword_10078DED8] == 1)
        {
          uint64_t v135 = qword_1007852B8;
          uint64_t v136 = v134;
          if (v135 != -1) {
            swift_once();
          }
          uint64_t v137 = type metadata accessor for Logger();
          sub_100018BF8(v137, (uint64_t)qword_10078DE60);
          uint64_t v138 = Logger.logObject.getter();
          os_log_type_t v139 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v138, v139))
          {
            int64_t v140 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int64_t v140 = 0;
            _os_log_impl((void *)&_mh_execute_header, v138, v139, "Attempting to read sectionMetadata while it is being modified", v140, 2u);
            swift_slowDealloc();
          }
        }
        else
        {
          uint64_t v141 = v134;
        }
        int64_t v142 = &v134[qword_10078DED0];
        uint64_t v143 = *(void *)&v134[qword_10078DED0];
        unint64_t v144 = *(void *)&v134[qword_10078DED0 + 8];
        uint64_t v145 = *(char **)&v134[qword_10078DED0 + 16];
        int v146 = v134[qword_10078DED0 + 24];
        v308 = v134;
        if (v143)
        {
          unint64_t j = v146 & 1;
          uint64_t v313 = v143;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v315 = v145;
        }
        else
        {
          sub_10003B754((uint64_t *)&unk_10078E3A0);
          uint64_t v147 = swift_allocObject();
          *(void *)(v147 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
          LODWORD(v299) = v146;
          unint64_t v298 = v144;
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
          {
            uint64_t v214 = _CocoaArrayWrapper.endIndex.getter();
            if (v214)
            {
              uint64_t v215 = v214;
              if (v214 < 1) {
                goto LABEL_284;
              }
              v216 = &_swiftEmptyArrayStorage[4];
              do
              {
                uint64_t v217 = *v216++;
                swift_weakAssign();
                swift_beginAccess();
                *(void *)(v217 + 64) = _swiftEmptyArrayStorage;
                swift_bridgeObjectRelease();
                --v215;
              }
              while (v215);
            }
          }
          sub_10008EDE8(v147);
          uint64_t v149 = v148;
          unint64_t v151 = v150;
          uint64_t v153 = v152;
          unint64_t v155 = v154;
          swift_release();
          uint64_t v156 = *(void *)v142;
          *(void *)int64_t v142 = v149;
          *((void *)v142 + 1) = v151;
          *((void *)v142 + 2) = v153;
          v142[24] = v155 & 1;
          uint64_t v313 = v149;
          unint64_t v144 = v151;
          unint64_t j = v155;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v315 = v153;
          swift_bridgeObjectRetain();
          sub_1000349CC(v156);
          sub_1000349CC(0);
          unint64_t v33 = v314;
          uint64_t v4 = v303;
        }
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        uint64_t v157 = (uint64_t)v307;
        uint64_t v158 = v317;
        if (!*(void *)(v144 + 16) || (unint64_t v159 = sub_10035C1D4((uint64_t)v4), (v160 & 1) == 0))
        {
          sub_100034624((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_76:
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v309)(v157, 1, 1, v158);
LABEL_77:
          uint64_t v92 = (uint64_t)v305;
          unint64_t v51 = (unint64_t)v302;
          int64_t v99 = v300;
          uint64_t v100 = (uint64_t)v312;
          sub_10003B6F8(v157, &qword_10078E8F0);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        uint64_t v161 = *(void *)(*(void *)(v144 + 56) + 8 * v159);
        swift_bridgeObjectRetain();
        sub_100034624((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        uint64_t v162 = sub_1000FFBF8(v161);
        swift_bridgeObjectRelease();
        if (!v162) {
          goto LABEL_76;
        }
        v163 = v315;
        if (!*((void *)v315 + 2) || (uint64_t v164 = sub_10035C1D0(v162), (v165 & 1) == 0))
        {
LABEL_171:
          uint64_t v194 = 1;
          goto LABEL_172;
        }
        unint64_t v51 = *(void *)(*((void *)v163 + 7) + 8 * v164);
        unint64_t v298 = v144;
        v299 = (void *)v162;
        if (j)
        {
          v292[1] = v51;
          unint64_t v51 = swift_weakLoadStrong();
          swift_retain();
          uint64_t v4 = 0;
          if (v51)
          {
            uint64_t v166 = v162;
            do
            {
              BOOL v167 = __OFADD__(v4++, 1);
              if (v167) {
                goto LABEL_264;
              }
              unint64_t v176 = v51;
              swift_beginAccess();
              unint64_t j = *(void *)(v51 + 64);
              if (j >> 62)
              {
                swift_retain();
                swift_bridgeObjectRetain();
                unint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
                if (v51)
                {
LABEL_111:
                  unint64_t v33 = j & 0xC000000000000001;
                  if ((j & 0xC000000000000001) != 0)
                  {
                    uint64_t v177 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                    if (v177 != v166) {
                      goto LABEL_114;
                    }
                  }
                  else
                  {
                    if (!*(void *)((j & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                      goto LABEL_266;
                    }
                    uint64_t v177 = *(void *)(j + 32);
                    swift_retain();
                    if (v177 != v166)
                    {
LABEL_114:
                      uint64_t v178 = 0;
                      unint64_t v179 = v51 - 1;
                      while (1)
                      {
                        unint64_t v51 = (unint64_t)(v4 + 1);
                        if (__OFADD__(v4, 1)) {
                          goto LABEL_255;
                        }
                        if (*(unsigned char *)(v177 + 48))
                        {
                          uint64_t v322 = 0;
                          sub_10020B4F8(v177, &v322);
                          uint64_t v180 = v322;
                          *(void *)(v177 + 40) = v322;
                          *(unsigned char *)(v177 + 48) = 0;
                        }
                        else
                        {
                          uint64_t v180 = *(void *)(v177 + 40);
                        }
                        swift_release();
                        BOOL v167 = __OFADD__(v51, v180);
                        uint64_t v4 = (char *)(v51 + v180);
                        if (v167) {
                          goto LABEL_256;
                        }
                        if (v179 == v178) {
                          break;
                        }
                        unint64_t v51 = v178 + 1;
                        if (v33)
                        {
                          uint64_t v177 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                          if (__OFADD__(v51, 1)) {
                            goto LABEL_257;
                          }
                        }
                        else
                        {
                          if (v51 >= *(void *)((j & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                            goto LABEL_261;
                          }
                          uint64_t v177 = *(void *)(j + 8 * v178 + 40);
                          swift_retain();
                          if (__OFADD__(v51, 1)) {
                            goto LABEL_257;
                          }
                        }
                        ++v178;
                        if (v177 == v166) {
                          goto LABEL_132;
                        }
                      }
                      swift_release();
                      swift_bridgeObjectRelease();
                      goto LABEL_133;
                    }
                  }
LABEL_132:
                  swift_bridgeObjectRelease();
                  swift_release_n();
LABEL_133:
                  unint64_t v33 = v314;
                  uint64_t v157 = (uint64_t)v307;
                  goto LABEL_107;
                }
              }
              else
              {
                unint64_t v51 = *(void *)((j & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_retain();
                swift_bridgeObjectRetain();
                if (v51) {
                  goto LABEL_111;
                }
              }
              swift_release();
              swift_bridgeObjectRelease();
LABEL_107:
              unint64_t v51 = swift_weakLoadStrong();
              swift_release();
              uint64_t v166 = v176;
            }
            while (v51);
          }
          swift_release();
          v199 = v4 - 1;
          if (__OFSUB__(v4, 1)) {
            goto LABEL_279;
          }
          uint64_t v4 = v303;
          uint64_t v158 = v317;
          if (((unint64_t)v199 & 0x8000000000000000) != 0) {
            goto LABEL_171;
          }
        }
        else
        {
          if ((v51 & 0x8000000000000000) != 0) {
            goto LABEL_276;
          }
          if (v51 >= *(void *)(v313 + 16)) {
            goto LABEL_277;
          }
          unint64_t v190 = *(void *)(v313 + 16 * v51 + 40);
          if (v190 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v191 = _CocoaArrayWrapper.endIndex.getter();
            if (!v191) {
              goto LABEL_161;
            }
          }
          else
          {
            uint64_t v191 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v191) {
              goto LABEL_161;
            }
          }
          if ((v190 & 0xC000000000000001) != 0)
          {
            uint64_t v219 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_unknownObjectRelease();
            if (v219 != v162)
            {
              unint64_t v33 = v314;
              uint64_t v4 = v303;
              uint64_t v157 = (uint64_t)v307;
              if (v191 == 1)
              {
LABEL_161:
                swift_bridgeObjectRelease();
                uint64_t v194 = 1;
                uint64_t v158 = v317;
                goto LABEL_172;
              }
              uint64_t v220 = 1;
              while (1)
              {
                uint64_t v221 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                swift_unknownObjectRelease();
                if ((void *)v221 == v299) {
                  break;
                }
                uint64_t v222 = v220 + 1;
                if (__OFADD__(v220, 1)) {
                  goto LABEL_286;
                }
                ++v220;
                if (v222 == v191)
                {
                  swift_bridgeObjectRelease();
                  unint64_t v33 = v314;
                  uint64_t v4 = v303;
                  uint64_t v157 = (uint64_t)v307;
                  uint64_t v158 = v317;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v309)(v307, 1, 1, v317);
                  goto LABEL_173;
                }
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v33 = v314;
            uint64_t v4 = v303;
            uint64_t v157 = (uint64_t)v307;
            uint64_t v158 = v317;
          }
          else
          {
            if (*(void *)(v190 + 32) != v162)
            {
              if (v191 == 1) {
                goto LABEL_161;
              }
              uint64_t v192 = 5;
              while (1)
              {
                unint64_t j = v192 - 4;
                if (*(void *)(v190 + 8 * v192) == v162) {
                  break;
                }
                uint64_t v193 = v192 - 3;
                if (__OFADD__(j, 1)) {
                  goto LABEL_268;
                }
                ++v192;
                if (v193 == v191) {
                  goto LABEL_161;
                }
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v158 = v317;
          }
        }
        IndexPath.init(row:section:)();
        uint64_t v194 = 0;
LABEL_172:
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v309)(v157, v194, 1, v158);
LABEL_173:
        swift_release();
        if ((*v295)(v157, 1, v158) == 1) {
          goto LABEL_77;
        }
        v200 = v296;
        (*v294)(v296, v157, v158);
        id v201 = v308;
        id v202 = *(id *)((char *)v308 + qword_10078DEA0);
        Class v203 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v204 = [v202 cellForRowAtIndexPath:v203];

        (*v293)(v200, v158);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v204)
        {
          [v204 bounds];
          CGRect.center.getter();
          double v206 = v205;
          double v208 = v207;
          uint64_t v92 = (uint64_t)v305;
          id v209 = *v305;
          sub_10036C3B0((uint64_t)v209, v33, v206, v208, 0.0, 0.0);
        }
        else
        {
          uint64_t v92 = (uint64_t)v305;
        }
LABEL_29:
        unint64_t v51 = (unint64_t)v302;
        int64_t v99 = v300;
        uint64_t v100 = (uint64_t)v312;
LABEL_30:
        unint64_t j = v100 + 1;
        sub_100034624(v318, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10003B6F8(v92, (uint64_t *)&unk_10079C9C0);
        if (j == v99)
        {
          swift_bridgeObjectRelease();
          return sub_100034624(v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        }
      }
      uint64_t v183 = 5;
      while (1)
      {
        if (v51)
        {
          v184 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_unknownObjectRelease();
          BOOL v185 = v184 == v308;
          uint64_t v4 = v303;
          if (v185) {
            goto LABEL_196;
          }
        }
        else if (*(void **)(v181 + 8 * v183) == v308)
        {
          goto LABEL_196;
        }
        uint64_t v186 = v183 - 3;
        if (__OFADD__(v183 - 4, 1)) {
          break;
        }
        ++v183;
        if (v186 == v182) {
          goto LABEL_149;
        }
      }
LABEL_267:
      __break(1u);
LABEL_268:
      __break(1u);
LABEL_269:
      swift_once();
LABEL_5:
      uint64_t v53 = type metadata accessor for Logger();
      sub_100018BF8(v53, (uint64_t)qword_10079C3F0);
      uint64_t v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "Unexpected: handling single item move in treeView(_:performDropWith:)", v56, 2u);
        swift_slowDealloc();
      }

LABEL_8:
      uint64_t v57 = *(void *)&v315[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
      uint64_t v58 = swift_getObjectType();
      uint64_t v59 = v310;
      sub_100034240((uint64_t)v4, (uint64_t)v310, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(unint64_t *, void, uint64_t, unint64_t))(v33 + 56))(v59, 0, 1, v309);
      (*(void (**)(unint64_t, unint64_t *, unint64_t, void, void, uint64_t))(*(void *)(v57 + 8) + 520))(v51, v59, j, 0, 0, v58);
      swift_bridgeObjectRelease();
      sub_10003B6F8((uint64_t)v59, (uint64_t *)&unk_100788DC0);
      return sub_100034624((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    case 2u:
      uint64_t v69 = *(void *)&v48[*(int *)(sub_10003B754((uint64_t *)&unk_10078E948) + 48)];
      sub_100398360((uint64_t)v48, v319, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v70 = v321;
      id v71 = [*(id *)(v321 + qword_10079BD18) items];
      sub_10003B754(&qword_100788F20);
      unint64_t v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_retain();
      uint64_t v73 = sub_10038EFB0(v72, v70);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v74 = *(void *)(v73 + 16);
      if (v74)
      {
        v323 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v75 = v73 + ((*(unsigned __int8 *)(v313 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v313 + 80));
        uint64_t v76 = *(void *)(v313 + 72);
        do
        {
          sub_10003B694(v75, (uint64_t)v17, &qword_10079C9B8);
          id v77 = *v17;
          sub_10003B6F8((uint64_t)v17, &qword_10079C9B8);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v75 += v76;
          --v74;
        }
        while (v74);
        unint64_t v78 = v323;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v78 = _swiftEmptyArrayStorage;
      }
      uint64_t v231 = *(void *)&v315[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
      uint64_t v232 = swift_getObjectType();
      (*(void (**)(void **__return_ptr, void *, uint64_t))(*(void *)(v231 + 8) + 536))(&v323, v78, v232);
      swift_bridgeObjectRelease();
      uint64_t v233 = v324;
      uint64_t v234 = v325;
      sub_100038D28(&v323, v324);
      uint64_t v235 = v319;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v234 + 72))(v319, v69, v233, v234);
      uint64_t v236 = v235;
      goto LABEL_272;
    case 3u:
      uint64_t v79 = v321;
      id v80 = [*(id *)(v321 + qword_10079BD18) items];
      sub_10003B754(&qword_100788F20);
      unint64_t v81 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_retain();
      uint64_t v82 = sub_10038EFB0(v81, v79);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v83 = *(void *)(v82 + 16);
      if (v83)
      {
        v323 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        unint64_t v84 = (*(unsigned __int8 *)(v313 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v313 + 80);
        uint64_t v320 = v82;
        uint64_t v85 = v82 + v84;
        uint64_t v86 = *(void *)(v313 + 72);
        do
        {
          sub_10003B694(v85, (uint64_t)v17, &qword_10079C9B8);
          id v87 = *v17;
          sub_10003B6F8((uint64_t)v17, &qword_10079C9B8);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v85 += v86;
          --v83;
        }
        while (v83);
        uint64_t v88 = v323;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v88 = _swiftEmptyArrayStorage;
      }
      uint64_t v237 = *(void *)&v315[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
      uint64_t v238 = swift_getObjectType();
      (*(void (**)(void **__return_ptr, void *, uint64_t))(*(void *)(v237 + 8) + 536))(&v323, v88, v238);
      swift_bridgeObjectRelease();
      uint64_t v239 = v324;
      uint64_t v240 = v325;
      sub_100038D28(&v323, v324);
      char v241 = (*(uint64_t (**)(uint64_t, uint64_t))(v240 + 24))(v239, v240);
      uint64_t v242 = v324;
      uint64_t v243 = v325;
      sub_100038D28(&v323, v324);
      uint64_t v244 = (uint64_t)v311;
      if (v241)
      {
        unint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v243 + 64))(v242, v243);
        unint64_t j = 0;
        unint64_t v33 = *(void *)(v51 + 16);
        if (v33) {
          goto LABEL_217;
        }
        while (1)
        {
          uint64_t v248 = sub_10003B754((uint64_t *)&unk_10079C9D0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v248 - 8) + 56))(v4, 1, 1, v248);
          for (unint64_t j = v33; ; ++j)
          {
            sub_100028C3C((uint64_t)v4, (uint64_t)v7, &qword_10079C9B0);
            uint64_t v249 = sub_10003B754((uint64_t *)&unk_10079C9D0);
            if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v249 - 8) + 48))(v7, 1, v249) == 1)goto LABEL_242; {
            v245 = *v7;
            }
            sub_100398360((uint64_t)v7 + *(int *)(v249 + 48), v244, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            sub_10036B350((uint64_t)v245, v244);

            sub_100034624(v244, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            if (j == v33) {
              break;
            }
LABEL_217:
            if (j >= *(void *)(v51 + 16)) {
              goto LABEL_258;
            }
            uint64_t v246 = sub_10003B754((uint64_t *)&unk_10079C9D0);
            uint64_t v247 = *(void *)(v246 - 8);
            sub_10003B694(v51+ ((*(unsigned __int8 *)(v247 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v247 + 80))+ *(void *)(v247 + 72) * j, (uint64_t)v4, (uint64_t *)&unk_10079C9D0);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v247 + 56))(v4, 0, 1, v246);
          }
        }
      }
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v243 + 40))(v242, v243))
      {
        uint64_t v250 = v324;
        uint64_t v251 = v325;
        sub_100038D28(&v323, v324);
        (*(void (**)(uint64_t, uint64_t))(v251 + 80))(v250, v251);
      }
      return sub_100038CD8((uint64_t)&v323);
    default:
      unint64_t j = *(void *)&v48[*(int *)(sub_10003B754((uint64_t *)&unk_10078E948) + 48)];
      uint64_t v4 = v312;
      sub_100398360((uint64_t)v48, (uint64_t)v312, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v50 = v321;
      unint64_t v51 = (unint64_t)sub_10036D604(1);
      uint64_t v52 = *(void *)(v51 + 16);
      if (v52)
      {
        if (v52 != 1) {
          goto LABEL_8;
        }
        if (qword_1007854E0 != -1) {
          goto LABEL_269;
        }
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      id v252 = [*(id *)(v50 + qword_10079BD18) items];
      sub_10003B754(&qword_100788F20);
      unint64_t v253 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_retain();
      uint64_t v254 = sub_10038EFB0(v253, v50);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v255 = *(void *)(v254 + 16);
      if (v255)
      {
        uint64_t v320 = j;
        v323 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v256 = v254 + ((*(unsigned __int8 *)(v313 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v313 + 80));
        uint64_t v257 = *(void *)(v313 + 72);
        do
        {
          sub_10003B694(v256, (uint64_t)v17, &qword_10079C9B8);
          id v258 = *v17;
          sub_10003B6F8((uint64_t)v17, &qword_10079C9B8);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v256 += v257;
          --v255;
        }
        while (v255);
        v259 = v323;
        swift_bridgeObjectRelease();
        uint64_t v4 = v312;
        unint64_t j = v320;
      }
      else
      {
        swift_bridgeObjectRelease();
        v259 = _swiftEmptyArrayStorage;
      }
      uint64_t v282 = *(void *)&v315[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
      uint64_t v283 = swift_getObjectType();
      (*(void (**)(void **__return_ptr, void *, uint64_t))(*(void *)(v282 + 8) + 536))(&v323, v259, v283);
      swift_bridgeObjectRelease();
      uint64_t v284 = v324;
      uint64_t v285 = v325;
      sub_100038D28(&v323, v324);
      unint64_t v51 = (*(uint64_t (**)(char *, unint64_t, uint64_t, uint64_t))(v285 + 48))(v4, j, v284, v285);
      unint64_t v33 = 0;
      unint64_t v286 = *(void *)(v51 + 16);
      unint64_t j = (unint64_t)v311;
      uint64_t v287 = (uint64_t)v302;
      if (!v286) {
        goto LABEL_249;
      }
      while (1)
      {
        if (v33 >= *(void *)(v51 + 16)) {
          goto LABEL_262;
        }
        uint64_t v288 = sub_10003B754((uint64_t *)&unk_10079C9D0);
        uint64_t v289 = *(void *)(v288 - 8);
        sub_10003B694(v51+ ((*(unsigned __int8 *)(v289 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v289 + 80))+ *(void *)(v289 + 72) * v33++, v287, (uint64_t *)&unk_10079C9D0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v289 + 56))(v287, 0, 1, v288);
        while (1)
        {
          sub_100028C3C(v287, (uint64_t)v12, &qword_10079C9B0);
          uint64_t v291 = sub_10003B754((uint64_t *)&unk_10079C9D0);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(*(void *)(v291 - 8) + 48))(v12, 1, v291) == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v236 = (uint64_t)v312;
            goto LABEL_272;
          }
          uint64_t v4 = *v12;
          sub_100398360((uint64_t)v12 + *(int *)(v291 + 48), j, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10036B350((uint64_t)v4, j);

          sub_100034624(j, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          if (v33 != v286) {
            break;
          }
LABEL_249:
          uint64_t v290 = sub_10003B754((uint64_t *)&unk_10079C9D0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v290 - 8) + 56))(v287, 1, 1, v290);
          unint64_t v33 = v286;
        }
      }
  }
}

uint64_t sub_100385780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v56 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v56 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = sub_10003B754((uint64_t *)&unk_10079C990);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v19, (uint64_t *)&unk_10079C990);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100398360((uint64_t)v19, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v26 = sub_100145094();
      if (v27)
      {
        uint64_t v45 = *(void *)(v57 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v45 + 8) + 536))(v61, v26, ObjectType);
        swift_bridgeObjectRelease();
        uint64_t v47 = v62;
        uint64_t v48 = v63;
        sub_100038D28(v61, v62);
        char v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 16))(v13, v47, v48);
        sub_100034624((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_16;
      }
      uint64_t v28 = *(void *)(v57 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v29 = swift_getObjectType();
      char v25 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v28 + 8) + 512))(v26, v13, v29);
      swift_bridgeObjectRelease();
      sub_100034624((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return v25 & 1;
    case 2u:
      uint64_t v30 = *(void *)&v19[*(int *)(sub_10003B754((uint64_t *)&unk_10078E948) + 48)];
      sub_100398360((uint64_t)v19, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v31 = (id *)(a2 + qword_1007BBA48);
      swift_beginAccess();
      uint64_t v32 = sub_10003B754((uint64_t *)&unk_10079C9A0);
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32) == 1)
      {
        __break(1u);
        JUMPOUT(0x100385EC8);
      }
      id v33 = [*v31 items];
      sub_1000368FC(0, (unint64_t *)&qword_100791B50);
      uint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v35 = *(void *)(v57 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v36 = swift_getObjectType();
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v35 + 8) + 536))(v61, v34, v36);
      swift_bridgeObjectRelease();
      uint64_t v37 = v62;
      uint64_t v38 = v63;
      sub_100038D28(v61, v62);
      char v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 32))(v10, v30, v37, v38);
      sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_16;
    case 3u:
      uint64_t v39 = sub_100145094();
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        char v25 = 0;
        return v25 & 1;
      }
      uint64_t v49 = *(void *)(v57 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      uint64_t v50 = swift_getObjectType();
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v49 + 8) + 536))(v61, v39, v50);
      swift_bridgeObjectRelease();
      uint64_t v51 = v62;
      uint64_t v52 = v63;
      sub_100038D28(v61, v62);
      LOBYTE(v51) = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 24))(v51, v52);
      sub_1000145EC((uint64_t)v61, (uint64_t)v58);
      if (v51)
      {
        char v25 = 1;
      }
      else
      {
        uint64_t v53 = v59;
        uint64_t v54 = v60;
        sub_100038D28(v58, v59);
        char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 40))(v53, v54);
      }
      sub_100038CD8((uint64_t)v58);
      goto LABEL_16;
    default:
      uint64_t v20 = *(void *)&v19[*(int *)(sub_10003B754((uint64_t *)&unk_10078E948) + 48)];
      sub_100398360((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v21 = sub_100145094();
      if (v22)
      {
        uint64_t v41 = *(void *)(v57 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
        uint64_t v42 = swift_getObjectType();
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(v41 + 8) + 536))(v61, v21, v42);
        swift_bridgeObjectRelease();
        uint64_t v43 = v62;
        uint64_t v44 = v63;
        sub_100038D28(v61, v62);
        char v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 8))(v16, v20, v43, v44);
        sub_100034624((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_16:
        sub_100038CD8((uint64_t)v61);
      }
      else
      {
        uint64_t v23 = *(void *)(v57 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
        uint64_t v24 = swift_getObjectType();
        sub_100034240((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v7, 0, 1, v8);
        char v25 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(*(void *)(v23 + 8) + 496))(v21, v7, v20, v24);
        swift_bridgeObjectRelease();
        sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788DC0);
        sub_100034624((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      return v25 & 1;
  }
}

NSObject *sub_100385ED8(uint64_t a1)
{
  uint64_t result = sub_100377F30();
  uint64_t v3 = *(Class *)((char *)&result->isa + qword_1007A59F0);
  if (v3)
  {
    uint64_t v4 = result;
    id v5 = v3;
    uint64_t v6 = sub_1000890D8();
    uint64_t v10 = (void *)sub_10008E820(a1, v6, v8, v9, v7 & 1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10)
    {
      type metadata accessor for TTRIRemindersListReminderCell();
      uint64_t v11 = swift_dynamicCastClass();
      if (v11)
      {
        uint64_t v12 = (void **)(v11 + direct field offset for TTRIRemindersListReminderCell.customAccessibilityElement);
        swift_beginAccess();
        uint64_t v13 = *v12;
        id v14 = v13;

        return v13;
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

id sub_100385FDC()
{
  id v1 = [v0 parentViewController];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  if (v3) {
    id v3 = sub_10033A304();
  }

  return v3;
}

uint64_t sub_100386058()
{
  return sub_10039311C();
}

uint64_t sub_100386150(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (char *)Strong;
    type metadata accessor for TTRIRemindersListReminderCell();
    uint64_t v9 = swift_dynamicCastClass();
    uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilAutoCommitTracker];
    if (v9)
    {
      id v11 = v6;
      swift_retain();
      sub_1002F2700(a3, a4);
      swift_release();
      TTRIRemindersListReminderCell.inputViewForPencilInput.getter();
      sub_10003B754(&qword_10079C938);
      swift_allocObject();
      uint64_t v12 = Promise.init(value:)();
    }
    else
    {
      *(void *)(v10 + 16) = 0;
      *(void *)(v10 + 24) = 0;
      swift_unknownObjectRelease();
      uint64_t v15 = type metadata accessor for PromiseError();
      sub_1003889DC((unint64_t *)&qword_10078AD80, (void (*)(uint64_t))&type metadata accessor for PromiseError);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v16, enum case for PromiseError.cancelled(_:), v15);
      sub_10003B754(&qword_10079C938);
      swift_allocObject();
      uint64_t v12 = Promise.init(error:)();
    }
  }
  else
  {
    uint64_t v13 = type metadata accessor for PromiseError();
    sub_1003889DC((unint64_t *)&qword_10078AD80, (void (*)(uint64_t))&type metadata accessor for PromiseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, enum case for PromiseError.cancelled(_:), v13);
    sub_10003B754(&qword_10079C938);
    swift_allocObject();
    return Promise.init(error:)();
  }
  return v12;
}

uint64_t sub_1003863E4()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v1 = (void *)result;
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilAutoCommitTracker);
    swift_retain();

    *(void *)(v2 + 16) = 0;
    *(void *)(v2 + 24) = 0;
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100386460(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v30[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30[-1] - v9;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v11 = v31;
  if (!v31) {
    return sub_10003B6F8((uint64_t)v30, (uint64_t *)&unk_10079C850);
  }
  uint64_t v12 = v32;
  uint64_t v13 = sub_100038D28(v30, v31);
  uint64_t v14 = *(void *)(v11 - 8);
  double v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v30[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v14 + 16))(v17, v15);
  sub_10003B6F8((uint64_t)v30, (uint64_t *)&unk_10079C850);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v11);
  sub_100398360((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v18 = *(void *)&v3[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void, char *, uint64_t))(*(void *)(v18 + 8) + 40))(a2 & 1, v10, ObjectType);
  uint64_t v20 = (char *)[v3 parentViewController];
  if (v20)
  {
    uint64_t v21 = v20;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      char v22 = v21;
    }
    else {
      char v22 = 0;
    }
    if (v22) {
      id v23 = *(id *)&v22[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator];
    }
    else {
      id v23 = 0;
    }
  }
  else
  {
    id v23 = 0;
  }
  [v23 impactOccurred];

  char v25 = (char *)[v3 parentViewController];
  if (v25)
  {
    uint64_t v26 = v25;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      char v27 = v26;
    }
    else {
      char v27 = 0;
    }
    if (v27)
    {
      uint64_t v28 = (char *)*(id *)&v27[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator];

      [v28 prepare];
      uint64_t v26 = v28;
    }
  }
  return sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_10038679C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v7 = (char *)&v19[-1] - v6;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v8 = v20;
  if (!v20) {
    return sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10079C850);
  }
  uint64_t v9 = v21;
  uint64_t v10 = sub_100038D28(v19, v20);
  uint64_t v11 = *(void *)(v8 - 8);
  double v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v14, v12);
  sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10079C850);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v8);
  sub_100398360((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 + 8) + 48))(v7, ObjectType);
  return sub_100034624((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1003869C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27[-1] - v9;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v11 = v28;
  if (!v28) {
    return sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_10079C850);
  }
  uint64_t v12 = v29;
  uint64_t v13 = sub_100038D28(v27, v28);
  uint64_t v14 = *(void *)(v11 - 8);
  double v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v14 + 16))(v17, v15);
  sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_10079C850);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v11);
  sub_100398360((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t v19 = (void *)TTRIRemindersListReminderCell.attributedTitle.getter();
  uint64_t v20 = v19;
  if (v19)
  {
    id v21 = [v19 string];

    uint64_t v20 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, void *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 8) + 96))(v10, v20, v23, a2, ObjectType);
  swift_bridgeObjectRelease();
  return sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100386C68()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v7 = (char *)&v19[-1] - v6;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v8 = v20;
  if (!v20) {
    return sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10079C850);
  }
  uint64_t v9 = v21;
  uint64_t v10 = sub_100038D28(v19, v20);
  uint64_t v11 = *(void *)(v8 - 8);
  double v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v14, v12);
  sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10079C850);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v8);
  sub_100398360((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 + 8) + 120))(v7, ObjectType);
  return sub_100034624((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100386E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27[-1] - v9;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v11 = v28;
  if (!v28) {
    return sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_10079C850);
  }
  uint64_t v12 = v29;
  uint64_t v13 = sub_100038D28(v27, v28);
  uint64_t v14 = *(void *)(v11 - 8);
  double v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v14 + 16))(v17, v15);
  sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_10079C850);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v11);
  sub_100398360((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t v19 = (void *)TTRIRemindersListReminderCell.attributedTitle.getter();
  uint64_t v20 = v19;
  if (v19)
  {
    id v21 = [v19 string];

    uint64_t v20 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, void *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 8) + 128))(v10, v20, v23, a2, ObjectType);
  swift_bridgeObjectRelease();
  return sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100387134()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v7 = (char *)&v19[-1] - v6;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v8 = v20;
  if (!v20) {
    return sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10079C850);
  }
  uint64_t v9 = v21;
  uint64_t v10 = sub_100038D28(v19, v20);
  uint64_t v11 = *(void *)(v8 - 8);
  double v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v14, v12);
  sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10079C850);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v8);
  sub_100398360((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 + 8) + 144))(v7, ObjectType);
  return sub_100034624((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100387360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v9 = v22;
  if (!v22) {
    return sub_10003B6F8((uint64_t)v21, (uint64_t *)&unk_10079C850);
  }
  uint64_t v10 = v23;
  uint64_t v11 = sub_100038D28(v21, v22);
  uint64_t v12 = *(void *)(v9 - 8);
  double v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v21[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v15, v13);
  sub_10003B6F8((uint64_t)v21, (uint64_t *)&unk_10079C850);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 112))(v9, v10);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v9);
  if (v16)
  {
    uint64_t v18 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 8) + 152))(v16, a2, a3, a4, ObjectType);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100387518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24[-1] - v11;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v13 = v25;
  if (!v25) {
    return sub_10003B6F8((uint64_t)v24, (uint64_t *)&unk_10079C850);
  }
  uint64_t v14 = v26;
  uint64_t v15 = sub_100038D28(v24, v25);
  uint64_t v16 = *(void *)(v13 - 8);
  double v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v24[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v16 + 16))(v19, v17);
  sub_10003B6F8((uint64_t)v24, (uint64_t *)&unk_10079C850);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v13);
  sub_100398360((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v20 = *(void *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 + 8) + 888))(v12, a2, a3, ObjectType);
  return sub_100034624((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_10038775C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v5 = v23;
  if (v23)
  {
    uint64_t v6 = v24;
    uint64_t v7 = sub_100038D28(v22, v23);
    uint64_t v8 = *(void *)(v5 - 8);
    double v9 = __chkstk_darwin(v7);
    uint64_t v11 = (char *)&v22[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    sub_10003B6F8((uint64_t)v22, (uint64_t *)&unk_10079C850);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v5);
    sub_1003889DC((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v12 = TTRTreeStorageItem.treeItemDescription.getter();
    unint64_t v14 = v13;
    sub_100034624((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    sub_10003B6F8((uint64_t)v22, (uint64_t *)&unk_10079C850);
    unint64_t v14 = 0xEC0000006C6C6563;
    uint64_t v12 = 0x206E776F6E6B6E75;
  }
  sub_1002F2510(v12, v14);
  swift_bridgeObjectRelease();
  if (qword_1007854E0 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100018BF8(v15, (uint64_t)qword_10079C3F0);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "TTRIRemindersListViewController: Cancel any hover detection once scribbling begins, before the cells is actually edited", v18, 2u);
    swift_slowDealloc();
  }

  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilHoverCleanupAction);
  if (*(void *)(v19 + 56))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v19 + 56) = 0;
  return swift_release();
}

uint64_t sub_100387A90()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v15[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v3 = v16;
  if (v16)
  {
    uint64_t v4 = v17;
    uint64_t v5 = sub_100038D28(v15, v16);
    uint64_t v6 = *(void *)(v3 - 8);
    double v7 = __chkstk_darwin(v5);
    double v9 = (char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v6 + 16))(v9, v7);
    sub_10003B6F8((uint64_t)v15, (uint64_t *)&unk_10079C850);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v3);
    sub_1003889DC((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v10 = TTRTreeStorageItem.treeItemDescription.getter();
    unint64_t v12 = v11;
    sub_100034624((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    sub_10003B6F8((uint64_t)v15, (uint64_t *)&unk_10079C850);
    unint64_t v12 = 0xEC0000006C6C6563;
    uint64_t v10 = 0x206E776F6E6B6E75;
  }
  sub_1002F2CD8(v10, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100387CD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v7 = (char *)&v19[-1] - v6;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v8 = v20;
  if (!v20) {
    return sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10079C850);
  }
  uint64_t v9 = v21;
  uint64_t v10 = sub_100038D28(v19, v20);
  uint64_t v11 = *(void *)(v8 - 8);
  double v12 = __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v14, v12);
  sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10079C850);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v8);
  sub_100398360((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *)(Swift::OpaquePointer), void, uint64_t))(*(void *)(v15 + 8) + 80))(v7, TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, ObjectType);
  return sub_100034624((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

id sub_100387F18()
{
  uint64_t v0 = sub_100377F30();
  id result = *(Class *)((char *)&v0->isa + qword_1007A59E8);
  if (result)
  {
    id v2 = [result isEditing];

    if (!v2) {
      return v2;
    }
    uint64_t v3 = sub_100377F30();
    id result = *(Class *)((char *)&v3->isa + qword_1007A59E8);
    if (result)
    {
      [result setEditing:0 animated:1];

      return v2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100387FA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v7 = (char *)&v20[-1] - v6;
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v8 = v21;
  if (v21)
  {
    uint64_t v9 = v22;
    uint64_t v10 = sub_100038D28(v20, v21);
    uint64_t v11 = *(void *)(v8 - 8);
    double v12 = __chkstk_darwin(v10);
    unint64_t v14 = (char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v11 + 16))(v14, v12);
    sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_10079C850);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v8);
    sub_100398360((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v15 + 8) + 920))(v7, ObjectType);
    sub_100034624((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_10079C850);
    return 0;
  }
  return v17;
}

uint64_t sub_1003881E8(uint64_t a1)
{
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  if (!a1) {
    goto LABEL_5;
  }
  TTRIRemindersListReminderCell.viewModel.getter();
  uint64_t v7 = v21;
  if (!v21)
  {
    sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_10079C850);
LABEL_5:
    uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v5, 1, 1, v15);
    goto LABEL_6;
  }
  uint64_t v8 = v22;
  uint64_t v9 = sub_100038D28(v20, v21);
  uint64_t v10 = *(void *)(v7 - 8);
  double v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v10 + 16))(v13, v11);
  sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_10079C850);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v7);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 0, 1, v14);
LABEL_6:
  uint64_t ObjectType = swift_getObjectType();
  char v17 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 + 8) + 928))(v5, ObjectType);
  sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_100788DC0);
  return v17 & 1;
}

uint64_t sub_10038848C()
{
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10066D460;
  *(void *)(v0 + 32) = sub_10037BA78();
  *(void *)(v0 + 40) = sub_10037BC68();
  *(void *)(v0 + 48) = sub_10037BE58();
  specialized Array._endMutation()();
  return v0;
}

uint64_t sub_100388504()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 288))(ObjectType);
}

id sub_100388560()
{
  uint64_t v0 = sub_100377F30();
  id result = *(Class *)((char *)&v0->isa + qword_1007A59E8);
  if (result)
  {
    id v2 = [result hasActiveDrag];

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003885B0(uint64_t a1)
{
  uint64_t v3 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID;
  swift_beginAccess();
  sub_10003B694(v10, (uint64_t)v5, &qword_10078C890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_10003B6F8((uint64_t)v5, &qword_10078C890);
  }
  sub_100398360((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  uint64_t v13 = *(void *)(v12 + 48);
  uint64_t v14 = *(void *)(v12 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v19 = v13;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(ObjectType, v14);
  uint64_t v17 = v16;
  uint64_t v18 = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 656))(v9, v18, v17);
  swift_unknownObjectRelease();
  return sub_100034624((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
}

uint64_t sub_1003887C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)&v3[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
  id v6 = [v3 parentViewController];
  if (v6)
  {
    swift_getObjectType();
    uint64_t v7 = swift_conformsToProtocol2();
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v7) {
      id v9 = v6;
    }
    else {
      id v9 = 0;
    }
    if (v9)
    {
      id v6 = *(id *)(v8 + 8);
    }
    else
    {

      id v6 = 0;
    }
  }
  else
  {
    id v9 = 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, id, id, char *, uint64_t))(*(void *)(v5 + 8) + 256))(a3, v9, v6, v3, ObjectType);

  return swift_unknownObjectRelease();
}

uint64_t sub_1003888CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + 224))(a3, a4, ObjectType) & 1;
}

uint64_t sub_10038893C()
{
  return sub_1003889DC(&qword_10079C540, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100388984(uint64_t a1)
{
  uint64_t result = sub_1003889DC(&qword_10079C620, (void (*)(uint64_t))type metadata accessor for TTRIRemindersListContentViewController);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003889DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100388A24()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100388A5C(uint64_t a1, uint64_t (*a2)(uint64_t, void), uint64_t a3, uint64_t (**a4)(void), uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v88 = a7;
  int v96 = a6;
  uint64_t v86 = a5;
  uint64_t v97 = a3;
  id v98 = a2;
  uint64_t v81 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v93 = *(void *)(v81 - 8);
  uint64_t v11 = *(void *)(v93 + 64);
  __chkstk_darwin(v81);
  uint64_t v89 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v99 = (uint64_t)&v80 - v13;
  uint64_t v14 = sub_10003B754(&qword_100791B80);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_10079C888);
  id v94 = *(uint64_t (***)(void))(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10003B754(&qword_10079C890);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  id v95 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v7 + 24);
  uint64_t v90 = v11;
  uint64_t v85 = a4;
  if (v21 && *(unsigned char *)(v21 + 24) == 1)
  {
    uint64_t v22 = qword_100785630;
    swift_retain();
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100018BF8(v23, (uint64_t)qword_1007A1BD0);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "scrollWithCompensationTo: cancel existing treeViewDidEndScrollingAnimationCancellable", v26, 2u);
      swift_slowDealloc();
    }

    if (*(unsigned char *)(v21 + 24) == 1)
    {
      *(unsigned char *)(v21 + 24) = 0;
      if (*(void *)(v21 + 16))
      {
        swift_retain();
        AnyCancellable.cancel()();
        swift_release();
      }
      uint64_t v27 = type metadata accessor for PromiseError();
      sub_1003889DC((unint64_t *)&qword_10078AD80, (void (*)(uint64_t))&type metadata accessor for PromiseError);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, enum case for PromiseError.cancelled(_:), v27);
      DeferredPromise.reject(_:)();
      swift_errorRelease();
      uint64_t v11 = v90;
    }
    swift_release();
  }
  uint64_t v100 = a1;
  type metadata accessor for ScrollWithCompensationSession();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = 0;
  *(_WORD *)(v29 + 24) = 1;
  sub_10003B754((uint64_t *)&unk_10079C898);
  swift_allocObject();
  *(void *)(v29 + 32) = DeferredPromise.init()();
  *(void *)(v8 + 24) = v29;
  swift_retain();
  swift_release();
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = 0;
  id v87 = (unsigned char *)(v30 + 16);
  uint64_t v91 = swift_allocObject();
  *(void *)(v91 + 16) = 0;
  v102[0] = *(id *)(v8 + 16);
  swift_retain();
  uint64_t v92 = v30;
  swift_retain();
  sub_10003B754(&qword_10078EF00);
  sub_100037EA0(&qword_10078EF20, &qword_10078EF00);
  Publisher.drop(while:)();
  swift_release();
  swift_release();
  v102[0] = [self mainRunLoop];
  uint64_t v31 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v16, 1, 1, v31);
  sub_1000368FC(0, (unint64_t *)&qword_10078AC90);
  sub_100037EA0((unint64_t *)&unk_10079C8A8, &qword_10079C888);
  sub_1000C7F30();
  Publisher.receive<A>(on:options:)();
  sub_10003B6F8((uint64_t)v16, &qword_100791B80);

  ((void (*)(char *, uint64_t))v94[1])(v19, v17);
  uint64_t v32 = swift_allocObject();
  uint64_t v82 = v8;
  swift_weakInit();
  id v94 = &type metadata accessor for TTRRemindersListViewModel.Item;
  uint64_t v33 = v99;
  sub_100034240(a1, v99, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v34 = *(unsigned __int8 *)(v93 + 80);
  uint64_t v35 = (v34 + 48) & ~v34;
  uint64_t v93 = v34 | 7;
  unint64_t v36 = (v35 + v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v29;
  v37[3] = v32;
  uint64_t v38 = v86;
  v37[4] = v85;
  v37[5] = v38;
  uint64_t v85 = &type metadata accessor for TTRRemindersListViewModel.Item;
  sub_100398360(v33, (uint64_t)v37 + v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v39 = (char *)v37 + ((v35 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = v91;
  *(void *)uint64_t v39 = v92;
  v39[8] = v96 & 1;
  *(void *)((char *)v37 + v36) = v40;
  uint64_t v41 = (void *)((char *)v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v42 = v97;
  *uint64_t v41 = v98;
  v41[1] = v42;
  sub_100037EA0(&qword_10079C8B8, &qword_10079C890);
  uint64_t v43 = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v44 = v84;
  uint64_t v45 = v95;
  uint64_t v46 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v45, v44);
  *(void *)(v29 + 16) = v46;
  uint64_t v86 = v46;
  swift_retain();
  swift_release();
  uint64_t v47 = v99;
  uint64_t v48 = v94;
  sub_100034240(v100, v99, (uint64_t (*)(void))v94);
  uint64_t v49 = (v34 + 16) & ~v34;
  unint64_t v50 = (v90 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v95 = (char *)(v50 + 8);
  uint64_t v51 = swift_allocObject();
  uint64_t v52 = v85;
  sub_100398360(v47, v51 + v49, (uint64_t (*)(void))v85);
  *(void *)(v51 + v50) = v43;
  swift_retain();
  uint64_t v53 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();

  sub_100034240(v100, v47, (uint64_t (*)(void))v48);
  uint64_t v54 = swift_allocObject();
  sub_100398360(v47, v54 + v49, (uint64_t (*)(void))v52);
  *(void *)(v54 + v50) = v43;
  swift_retain();
  os_log_type_t v55 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();

  uint64_t v56 = v100;
  swift_release();
  sub_100034240(v56, v47, (uint64_t (*)(void))v94);
  uint64_t v57 = swift_allocObject();
  sub_100398360(v47, v57 + v49, (uint64_t (*)(void))v52);
  *(void *)(v57 + v50) = v43;
  swift_retain();
  uint64_t v58 = (void *)zalgo.getter();
  uint64_t v59 = dispatch thunk of Promise.cancelled(on:closure:)();
  swift_release();

  swift_release();
  if (qword_100785630 != -1) {
    swift_once();
  }
  uint64_t v60 = type metadata accessor for Logger();
  sub_100018BF8(v60, (uint64_t)qword_1007A1BD0);
  uint64_t v61 = v89;
  sub_100034240(v56, v89, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v62 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v62, v63))
  {
    unint64_t v64 = (uint8_t *)swift_slowAlloc();
    uint64_t v65 = (void *)swift_slowAlloc();
    id v95 = (char *)v59;
    v102[0] = v65;
    *(_DWORD *)unint64_t v64 = 136315138;
    sub_100034240(v61, v99, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v66 = String.init<A>(describing:)();
    uint64_t v101 = sub_1000385A8(v66, v67, (uint64_t *)v102);
    uint64_t v56 = v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100034624(v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "scrollWithCompensationTo: Performing initial scroll {item: %s}", v64, 0xCu);
    swift_arrayDestroy();
    uint64_t v59 = (uint64_t)v95;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100034624(v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  unint64_t v68 = v87;
  swift_beginAccess();
  *unint64_t v68 = 1;
  char v69 = v98(v56, v96 & 1);
  *unint64_t v68 = 0;
  if ((v69 & 1) == 0)
  {
    uint64_t v70 = Logger.logObject.getter();
    os_log_type_t v71 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v70, v71))
    {
      unint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "scrollWithCompensationTo: no animation after scroll", v72, 2u);
      swift_slowDealloc();
    }

    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
  }
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_10066C430;
  *(void *)(v73 + 32) = v59;
  swift_retain();
  uint64_t result = DeferredPromise.promise.getter();
  if (result)
  {
    uint64_t v75 = result;
    sub_10003B754(&qword_10079C8C0);
    *(void *)(v73 + 40) = v75;
    uint64_t v101 = v73;
    specialized Array._endMutation()();
    sub_10003B754(&qword_10079C8C8);
    sub_100037EA0(&qword_10079C8D0, &qword_10079C8C8);
    static Promise.all<A>(_:)();
    swift_bridgeObjectRelease();
    uint64_t v76 = (void *)zalgo.getter();
    sub_10003B754(&qword_10079C8F0);
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();

    swift_retain();
    id v77 = (void *)zalgo.getter();
    uint64_t v78 = dispatch thunk of Promise.always(on:closure:)();
    swift_release();
    swift_release();

    uint64_t result = DeferredPromise.promise.getter();
    if (result)
    {
      uint64_t v79 = (void *)zalgo.getter();
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      return v78;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003898A4(uint64_t a1, uint64_t (*a2)(uint64_t, void), uint64_t a3, uint64_t (**a4)(void), uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v88 = a7;
  int v96 = a6;
  uint64_t v85 = a4;
  uint64_t v86 = a5;
  uint64_t v97 = a3;
  id v98 = a2;
  uint64_t v91 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v94 = *(void *)(v91 - 8);
  uint64_t v10 = *(void *)(v94 + 64);
  __chkstk_darwin(v91);
  uint64_t v89 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v99 = (uint64_t)&v80 - v12;
  uint64_t v13 = sub_10003B754(&qword_100791B80);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v95 = (uint64_t (**)(void))sub_10003B754(&qword_10079C888);
  uint64_t v82 = (uint64_t)*(v95 - 1);
  __chkstk_darwin(v95);
  uint64_t v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10003B754(&qword_10079C890);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v19 = *(void *)(v7 + 24);
  uint64_t v90 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v19 && *(unsigned char *)(v19 + 24) == 1)
  {
    uint64_t v20 = qword_100785630;
    swift_retain();
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100018BF8(v21, (uint64_t)qword_1007A1BD0);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "scrollWithCompensationTo: cancel existing treeViewDidEndScrollingAnimationCancellable", v24, 2u);
      swift_slowDealloc();
    }

    if (*(unsigned char *)(v19 + 24) == 1)
    {
      *(unsigned char *)(v19 + 24) = 0;
      if (*(void *)(v19 + 16))
      {
        swift_retain();
        AnyCancellable.cancel()();
        swift_release();
      }
      uint64_t v25 = type metadata accessor for PromiseError();
      sub_1003889DC((unint64_t *)&qword_10078AD80, (void (*)(uint64_t))&type metadata accessor for PromiseError);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, enum case for PromiseError.cancelled(_:), v25);
      DeferredPromise.reject(_:)();
      swift_errorRelease();
    }
    swift_release();
  }
  uint64_t v80 = v10;
  uint64_t v100 = a1;
  type metadata accessor for ScrollWithCompensationSession();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  *(_WORD *)(v27 + 24) = 1;
  sub_10003B754((uint64_t *)&unk_10079C898);
  swift_allocObject();
  uint64_t v28 = DeferredPromise.init()();
  uint64_t v81 = v27;
  *(void *)(v27 + 32) = v28;
  *(void *)(v8 + 24) = v27;
  swift_retain();
  swift_release();
  uint64_t v29 = swift_allocObject();
  *(unsigned char *)(v29 + 16) = 0;
  id v87 = (unsigned char *)(v29 + 16);
  uint64_t v92 = swift_allocObject();
  *(void *)(v92 + 16) = 0;
  v102[0] = *(id *)(v8 + 16);
  swift_retain();
  uint64_t v93 = v29;
  swift_retain();
  sub_10003B754(&qword_10078EF00);
  sub_100037EA0(&qword_10078EF20, &qword_10078EF00);
  Publisher.drop(while:)();
  swift_release();
  swift_release();
  v102[0] = [self mainRunLoop];
  uint64_t v30 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v15, 1, 1, v30);
  sub_1000368FC(0, (unint64_t *)&qword_10078AC90);
  sub_100037EA0((unint64_t *)&unk_10079C8A8, &qword_10079C888);
  sub_1000C7F30();
  uint64_t v31 = v95;
  Publisher.receive<A>(on:options:)();
  sub_10003B6F8((uint64_t)v15, &qword_100791B80);

  (*(void (**)(char *, uint64_t (**)(void)))(v82 + 8))(v17, v31);
  uint64_t v32 = swift_allocObject();
  uint64_t v82 = v8;
  swift_weakInit();
  id v95 = &type metadata accessor for TTRRemindersListViewModel.Item;
  uint64_t v33 = v99;
  sub_100034240(a1, v99, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v34 = *(unsigned __int8 *)(v94 + 80);
  uint64_t v35 = (v34 + 48) & ~v34;
  uint64_t v94 = v34 | 7;
  unint64_t v36 = (v35 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v35 + v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = (void *)swift_allocObject();
  uint64_t v39 = v81;
  v38[2] = v81;
  v38[3] = v32;
  uint64_t v40 = v86;
  v38[4] = v85;
  v38[5] = v40;
  uint64_t v85 = &type metadata accessor for TTRRemindersListViewModel.Item;
  sub_100398360(v33, (uint64_t)v38 + v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v41 = (char *)v38 + v36;
  uint64_t v42 = v92;
  *(void *)uint64_t v41 = v93;
  v41[8] = v96 & 1;
  *(void *)((char *)v38 + v37) = v42;
  uint64_t v43 = (void *)((char *)v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v44 = v97;
  *uint64_t v43 = v98;
  v43[1] = v44;
  sub_100037EA0(&qword_10079C8B8, &qword_10079C890);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v45 = v84;
  uint64_t v46 = v90;
  uint64_t v47 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v46, v45);
  *(void *)(v39 + 16) = v47;
  uint64_t v90 = (char *)v47;
  swift_retain();
  swift_release();
  uint64_t v48 = v95;
  sub_100034240(v100, v33, (uint64_t (*)(void))v95);
  uint64_t v49 = (v34 + 16) & ~v34;
  unint64_t v50 = (v80 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v51 = swift_allocObject();
  uint64_t v52 = v85;
  sub_100398360(v33, v51 + v49, (uint64_t (*)(void))v85);
  *(void *)(v51 + v50) = v39;
  swift_retain();
  uint64_t v53 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();

  uint64_t v54 = v99;
  sub_100034240(v100, v99, (uint64_t (*)(void))v48);
  uint64_t v55 = swift_allocObject();
  sub_100398360(v54, v55 + v49, (uint64_t (*)(void))v52);
  *(void *)(v55 + v50) = v39;
  swift_retain();
  uint64_t v56 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();

  uint64_t v57 = v100;
  swift_release();
  sub_100034240(v57, v54, (uint64_t (*)(void))v95);
  uint64_t v58 = swift_allocObject();
  sub_100398360(v54, v58 + v49, (uint64_t (*)(void))v52);
  *(void *)(v58 + v50) = v39;
  swift_retain();
  uint64_t v59 = (void *)zalgo.getter();
  uint64_t v60 = (uint64_t (**)(void))dispatch thunk of Promise.cancelled(on:closure:)();
  swift_release();

  swift_release();
  if (qword_100785630 != -1) {
    swift_once();
  }
  uint64_t v61 = type metadata accessor for Logger();
  sub_100018BF8(v61, (uint64_t)qword_1007A1BD0);
  uint64_t v62 = v89;
  sub_100034240(v57, v89, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  os_log_type_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v63, v64))
  {
    id v95 = v60;
    uint64_t v65 = (uint8_t *)swift_slowAlloc();
    v102[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 136315138;
    sub_100034240(v62, v99, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v66 = String.init<A>(describing:)();
    uint64_t v101 = sub_1000385A8(v66, v67, (uint64_t *)v102);
    uint64_t v57 = v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v60 = v95;
    swift_bridgeObjectRelease();
    sub_100034624(v62, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "scrollWithCompensationTo: Performing initial scroll {item: %s}", v65, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100034624(v62, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  unint64_t v68 = v87;
  swift_beginAccess();
  *unint64_t v68 = 1;
  char v69 = v98(v57, v96 & 1);
  *unint64_t v68 = 0;
  if ((v69 & 1) == 0)
  {
    uint64_t v70 = Logger.logObject.getter();
    os_log_type_t v71 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v70, v71))
    {
      unint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "scrollWithCompensationTo: no animation after scroll", v72, 2u);
      swift_slowDealloc();
    }

    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
  }
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_10066C430;
  *(void *)(v73 + 32) = v60;
  swift_retain();
  uint64_t result = DeferredPromise.promise.getter();
  if (result)
  {
    uint64_t v75 = result;
    sub_10003B754(&qword_10079C8C0);
    *(void *)(v73 + 40) = v75;
    uint64_t v101 = v73;
    specialized Array._endMutation()();
    sub_10003B754(&qword_10079C8C8);
    sub_100037EA0(&qword_10079C8D0, &qword_10079C8C8);
    static Promise.all<A>(_:)();
    swift_bridgeObjectRelease();
    uint64_t v76 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();

    swift_retain();
    id v77 = (void *)zalgo.getter();
    uint64_t v78 = dispatch thunk of Promise.always(on:closure:)();
    swift_release();
    swift_release();

    uint64_t result = DeferredPromise.promise.getter();
    if (result)
    {
      uint64_t v79 = (void *)zalgo.getter();
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      return v78;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10038A6F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v25 - v13;
  if (qword_100785630 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100018BF8(v15, (uint64_t)qword_1007A1BD0);
  sub_100034240(a3, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v26 = a2;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v28 = v4;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v27 = a1;
    v29[0] = v20;
    uint64_t v25 = a4;
    *(_DWORD *)uint64_t v19 = 136315138;
    sub_100034240((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v21 = String.init<A>(describing:)();
    v29[5] = sub_1000385A8(v21, v22, v29);
    a4 = v25;
    a2 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100034624((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "scrollWithCompensationTo: cellReadyTracker finishes {item: %s}", v19, 0xCu);
    swift_arrayDestroy();
    a1 = v27;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100034624((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  if (*(unsigned char *)(a4 + 24) == 1 && (*(unsigned char *)(a4 + 25) & 1) == 0) {
    *(unsigned char *)(a4 + 25) = 1;
  }
  v29[3] = sub_10003B754(&qword_10079C8F0);
  v29[0] = (uint64_t)a1;
  v29[1] = a2;
  sub_10003B754(&qword_10079C8C0);
  swift_allocObject();
  id v23 = a1;
  return Promise.init(value:)();
}

uint64_t sub_10038A9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - v10;
  if (qword_100785630 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100018BF8(v12, (uint64_t)qword_1007A1BD0);
  sub_100034240(a2, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v22 = a1;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v3;
    uint64_t v16 = (uint8_t *)v15;
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    sub_100034240((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v17 = String.init<A>(describing:)();
    v25[5] = sub_1000385A8(v17, v18, v25);
    a1 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100034624((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "scrollWithCompensationTo: cellReadyTracker finishes {item: %s}", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100034624((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  if (*(unsigned char *)(a3 + 24) == 1 && (*(unsigned char *)(a3 + 25) & 1) == 0) {
    *(unsigned char *)(a3 + 25) = 1;
  }
  v25[3] = v24;
  uint64_t v19 = sub_1000394A8(v25);
  sub_100034240(a1, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10003B754(&qword_10079C8C0);
  swift_allocObject();
  return Promise.init(value:)();
}

void sub_10038ACEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - v9;
  if (qword_100785630 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100018BF8(v11, (uint64_t)qword_1007A1BD0);
  sub_100034240(a2, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v14 = 136315138;
    sub_100034240((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v19 = sub_1000385A8(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "scrollWithCompensationTo: cellReadyTracker error {item: %s}", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  if (*(unsigned char *)(a3 + 24) == 1)
  {
    *(unsigned char *)(a3 + 24) = 0;
    if (*(void *)(a3 + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    uint64_t v17 = type metadata accessor for PromiseError();
    sub_1003889DC((unint64_t *)&qword_10078AD80, (void (*)(uint64_t))&type metadata accessor for PromiseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, enum case for PromiseError.cancelled(_:), v17);
    DeferredPromise.reject(_:)();
    swift_errorRelease();
  }
}

void sub_10038B038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - v8;
  if (qword_100785630 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100018BF8(v10, (uint64_t)qword_1007A1BD0);
  sub_100034240(a1, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v13 = 136315138;
    sub_100034240((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t v18 = sub_1000385A8(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100034624((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "scrollWithCompensationTo: cellReadyTracker is cancelled {item: %s}", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100034624((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  if (*(unsigned char *)(a2 + 24) == 1)
  {
    *(unsigned char *)(a2 + 24) = 0;
    if (*(void *)(a2 + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    uint64_t v16 = type metadata accessor for PromiseError();
    sub_1003889DC((unint64_t *)&qword_10078AD80, (void (*)(uint64_t))&type metadata accessor for PromiseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, enum case for PromiseError.cancelled(_:), v16);
    DeferredPromise.reject(_:)();
    swift_errorRelease();
  }
}

uint64_t sub_10038B384(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    sub_100038DC0(a1 + 32, (uint64_t)v5);
  }
  else {
    memset(v5, 0, sizeof(v5));
  }
  sub_10003B754(&qword_100788D60);
  sub_10003B754(&qword_10079C8F0);
  if (swift_dynamicCast() && (void)v4)
  {
    v5[0] = v4;
    sub_10003B754(&qword_10079C8F8);
    swift_allocObject();
    return Promise.init(value:)();
  }
  else
  {
    id v2 = self;
    NSString v3 = String._bridgeToObjectiveC()();
    [v2 internalErrorWithDebugDescription:v3];

    return swift_willThrow();
  }
}

void *sub_10038B49C(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  long long v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v17 - v10;
  if (*(void *)(a1 + 16)) {
    sub_100038DC0(a1 + 32, (uint64_t)v17);
  }
  else {
    memset(v17, 0, sizeof(v17));
  }
  sub_10003B754(&qword_100788D60);
  char v12 = swift_dynamicCast();
  os_log_type_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if (v12)
  {
    v13(v4, 0, 1, v5);
    sub_100398360((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100034240((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10003B754(&qword_10078AD88);
    swift_allocObject();
    uint64_t v14 = (void *)Promise.init(value:)();
    sub_100034624((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    v13(v4, 1, 1, v5);
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100788DC0);
    unint64_t v15 = self;
    uint64_t v14 = String._bridgeToObjectiveC()();
    [v15 internalErrorWithDebugDescription:v14];

    swift_willThrow();
  }
  return v14;
}

void sub_10038B740(void *a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    type metadata accessor for TTRIRemindersListReminderCellAccessibilityElement();
    if (swift_dynamicCastClass())
    {
      id v6 = a1;
      uint64_t v7 = TTRIRemindersListReminderCellAccessibilityElement.cell.getter();
      if (v7)
      {
        uint64_t v9 = (void *)v7;
        uint64_t v10 = v8;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 32))(v16, ObjectType, v10);
        uint64_t v12 = v17;
        if (v17)
        {
          uint64_t v13 = v18;
          sub_100038D28(v16, v17);
          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);

          uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
          sub_100038CD8((uint64_t)v16);
LABEL_9:

          return;
        }

        sub_10003B6F8((uint64_t)v16, (uint64_t *)&unk_10079C850);
      }
      else
      {
      }
    }
    uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_10038B900(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    long long v4 = sub_100385ED8(a1);

    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10038B968(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v8 = (void *)sub_10038B9F8(a1, a3, a4);

  if (!v8) {
    return 0;
  }
  id v9 = [objc_allocWithZone((Class)UIAccessibilityCustomRotorItemResult) initWithTargetElement:v8 targetRange:0];

  return v9;
}

uint64_t sub_10038B9F8(void *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v76 = a2;
  uint64_t v77 = a3;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v75 = (uint64_t)&v70 - v9;
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v73 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v70 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v70 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v70 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v70 - v22;
  __chkstk_darwin(v24);
  unint64_t v72 = (char *)&v70 - v25;
  double v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v70 - v28;
  uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56);
  uint64_t v79 = v5 + 56;
  v78((char *)&v70 - v28, 1, 1, v4, v27);
  id v80 = a1;
  id v30 = [a1 currentItem];
  id v31 = [v30 targetElement];

  uint64_t v82 = v29;
  if (!v31) {
    goto LABEL_10;
  }
  self;
  uint64_t v32 = swift_dynamicCastObjCClass();
  if (v32)
  {
    uint64_t v33 = *(void *)(v81 + qword_1007A59F8);
    if (v33)
    {
      uint64_t v70 = v32;
      uint64_t v71 = v5;
      uint64_t v34 = *(uint64_t (**)(uint64_t))(v33 + 16);
      uint64_t v35 = v33;
      uint64_t v36 = swift_retain();
      if (v34(v36))
      {
        uint64_t v37 = (uint64_t)v72;
        (*(void (**)(uint64_t))(v35 + 32))(v70);
        uint64_t v38 = v37;
        swift_unknownObjectRelease();
        swift_release();
        uint64_t v29 = v82;
        sub_10003B6F8((uint64_t)v82, (uint64_t *)&unk_100788DC0);
        uint64_t v5 = v71;
LABEL_9:
        sub_100028C3C(v38, (uint64_t)v29, (uint64_t *)&unk_100788DC0);
        goto LABEL_10;
      }
      swift_release();
      uint64_t v29 = v82;
      uint64_t v5 = v71;
    }
    sub_10003B6F8((uint64_t)v29, (uint64_t *)&unk_100788DC0);
    swift_unknownObjectRelease();
    uint64_t v38 = (uint64_t)v72;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v78)(v72, 1, 1, v4);
    goto LABEL_9;
  }
  swift_unknownObjectRelease();
LABEL_10:
  unint64_t v72 = v7;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v78)(v23, 1, 1, v4);
  uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v74 = v17;
  uint64_t v40 = (uint64_t)v82;
  while (1)
  {
    sub_10038C150(v40, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))[v80 searchDirection], (uint64_t)v20);
    sub_10000A550((uint64_t)v20, (uint64_t)v23, (uint64_t *)&unk_100788DC0);
    sub_10003B694((uint64_t)v23, (uint64_t)v17, (uint64_t *)&unk_100788DC0);
    uint64_t v42 = *v39;
    if ((*v39)(v17, 1, v4) != 1) {
      break;
    }
    sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_100788DC0);
LABEL_12:
    sub_10003B694((uint64_t)v23, (uint64_t)v14, (uint64_t *)&unk_100788DC0);
    unsigned int v41 = v42(v14, 1, v4);
    sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100788DC0);
    if (v41 == 1) {
      goto LABEL_15;
    }
  }
  sub_10003B6F8(v40, (uint64_t *)&unk_100788DC0);
  uint64_t v43 = (uint64_t)v17;
  uint64_t v44 = v14;
  uint64_t v45 = v20;
  uint64_t v46 = v23;
  uint64_t v47 = v75;
  sub_100398360(v43, v75, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100034240(v47, v40, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v78)(v40, 0, 1, v4);
  char v48 = v76(v47);
  uint64_t v49 = v47;
  uint64_t v23 = v46;
  uint64_t v20 = v45;
  uint64_t v14 = v44;
  uint64_t v17 = v74;
  sub_100034624(v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((v48 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_15:
  uint64_t v50 = v73;
  sub_10003B694((uint64_t)v23, v73, (uint64_t *)&unk_100788DC0);
  if (v42((char *)v50, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v23, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8((uint64_t)v82, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8(v50, (uint64_t *)&unk_100788DC0);
    return 0;
  }
  uint64_t v52 = (uint64_t)v72;
  uint64_t result = sub_100398360(v50, (uint64_t)v72, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v54 = v81;
  uint64_t v55 = *(char **)(v81 + qword_1007A59F0);
  if (v55)
  {
    uint64_t v56 = *(void **)&v55[qword_10078DEA0];
    uint64_t v57 = v55;
    id v58 = [v56 indexPathsForVisibleRows];
    if (!v58)
    {

      goto LABEL_22;
    }
    uint64_t v59 = v58;
    type metadata accessor for IndexPath();
    uint64_t v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v61 = v57;
    uint64_t v62 = sub_10038F1F0(v60, (uint64_t)v61);
    swift_bridgeObjectRelease();

    __chkstk_darwin(v63);
    *(&v70 - 2) = v52;
    sub_1004E4960((uint64_t (*)(char *))sub_100393E08, (uint64_t)(&v70 - 4), v62);
    uint64_t v65 = *(void *)(v64 + 16);
    swift_bridgeObjectRelease();
    if (!v65)
    {
LABEL_22:
      if ([v80 searchDirection] == (id)1) {
        uint64_t v66 = 3;
      }
      else {
        uint64_t v66 = 1;
      }
      sub_1003F928C(v52, v66, 0);
    }
    uint64_t v67 = *(void *)(v54 + qword_1007A59F8);
    if (v67)
    {
      unint64_t v68 = *(uint64_t (**)(uint64_t))(v67 + 16);
      uint64_t v69 = swift_retain();
      if (v68(v69)) {
        uint64_t v51 = (*(uint64_t (**)(uint64_t))(v67 + 48))(v52);
      }
      else {
        uint64_t v51 = 0;
      }
      swift_release();
    }
    else
    {
      uint64_t v51 = 0;
    }
    sub_10003B6F8((uint64_t)v23, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8((uint64_t)v82, (uint64_t *)&unk_100788DC0);
    sub_100034624(v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return v51;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10038C150(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v107 = a2;
  uint64_t v108 = (char *)a3;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v98 = *(void *)(v6 - 8);
  uint64_t v99 = v6;
  __chkstk_darwin(v6);
  uint64_t v100 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v105 = (uint64_t)&v93 - v12;
  __chkstk_darwin(v13);
  uint64_t v101 = (uint64_t)&v93 - v14;
  __chkstk_darwin(v15);
  uint64_t v103 = (uint64_t)&v93 - v16;
  __chkstk_darwin(v17);
  uint64_t v106 = (uint64_t)&v93 - v18;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v93 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v93 - v23;
  __chkstk_darwin(v25);
  double v27 = (char *)&v93 - v26;
  uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v104 = (uint64_t)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v102 = (uint64_t)&v93 - v32;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v93 - v34;
  sub_10003B694(a1, (uint64_t)v27, (uint64_t *)&unk_100788DC0);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v36(v27, 1, v28) == 1)
  {
    sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_100788DC0);
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v37(v21, 1, 1, v28);
    uint64_t v38 = sub_10038CDCC((uint64_t)v21);
    sub_10003B6F8((uint64_t)v21, (uint64_t *)&unk_100788DC0);
    if (v38 <= 0)
    {
      v37(v108, 1, 1, v28);
      return;
    }
    v37(v10, 1, 1, v28);
    uint64_t v39 = *(void **)(v4 + qword_1007A59F0);
    if (v39)
    {
      id v40 = v39;
      sub_100370498(0, (uint64_t)v10, (uint64_t)v108);

      sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_100788DC0);
      return;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v94 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v36;
  uint64_t v96 = v28;
  sub_100398360((uint64_t)v27, (uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100375704((uint64_t)v35, (uint64_t)v24);
  uint64_t v41 = (uint64_t)v24;
  uint64_t v97 = v4;
  uint64_t v42 = sub_10038CDCC((uint64_t)v24);
  if (v42 <= 0) {
    goto LABEL_13;
  }
  id v95 = v35;
  uint64_t v43 = qword_1007A59F0;
  uint64_t v44 = *(void **)(v97 + qword_1007A59F0);
  if (!v44)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v45 = v42;
  id v46 = v44;
  uint64_t v35 = v95;
  uint64_t v47 = sub_1003702C8((uint64_t)v95, (void (*)(void))sub_1000890D8, (uint64_t (*)(uint64_t))sub_100091DF0, (uint64_t (*)(uint64_t, uint64_t))sub_100136378, sub_10035C1D0);
  char v49 = v48;

  if (v49)
  {
LABEL_13:
    sub_10003B6F8(v41, (uint64_t *)&unk_100788DC0);
    sub_100034624((uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
    uint64_t v56 = (uint64_t)v108;
    uint64_t v57 = 1;
    uint64_t v58 = v96;
    goto LABEL_14;
  }
  if (!v107)
  {
    uint64_t v50 = (uint64_t)v95;
    if (v47 <= 0)
    {
      sub_100034624((uint64_t)v95, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_100028C3C(v41, (uint64_t)v108, (uint64_t *)&unk_100788DC0);
      return;
    }
    uint64_t v51 = *(void **)(v97 + v43);
    if (!v51) {
      goto LABEL_39;
    }
    id v52 = v51;
    uint64_t v53 = v105;
    sub_100370498(v47 - 1, v41, v105);

    uint64_t v54 = v96;
    if (v94(v53, 1, v96) == 1)
    {
      sub_10003B6F8(v41, (uint64_t *)&unk_100788DC0);
      sub_100034624(v50, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10003B6F8(v53, (uint64_t *)&unk_100788DC0);
      uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
      uint64_t v56 = (uint64_t)v108;
      uint64_t v57 = 1;
    }
    else
    {
      uint64_t v70 = v53;
      uint64_t v71 = v104;
      sub_100398360(v70, v104, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v72 = (uint64_t)v108;
      sub_10038D024(v71, (uint64_t)v108);
      sub_100034624(v71, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10003B6F8(v41, (uint64_t *)&unk_100788DC0);
      sub_100034624(v50, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
      uint64_t v56 = v72;
      uint64_t v57 = 0;
    }
    uint64_t v58 = v54;
LABEL_14:
    v55(v56, v57, 1, v58);
    return;
  }
  uint64_t v105 = v43;
  if (v107 == (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))1)
  {
    sub_100034240((uint64_t)v95, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
    uint64_t v60 = v96;
    v59((uint64_t)v21, 0, 1, v96);
    uint64_t v61 = v97;
    uint64_t v62 = sub_10038CDCC((uint64_t)v21);
    sub_10003B6F8((uint64_t)v21, (uint64_t *)&unk_100788DC0);
    if (v62 > 0)
    {
      uint64_t v63 = (uint64_t)v95;
      uint64_t v64 = v106;
      sub_100034240((uint64_t)v95, v106, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v59(v64, 0, 1, v60);
      uint64_t v65 = *(void **)(v61 + v105);
      if (v65)
      {
        id v66 = v65;
        sub_100370498(0, v64, (uint64_t)v108);

        sub_10003B6F8(v64, (uint64_t *)&unk_100788DC0);
        sub_10003B6F8(v41, (uint64_t *)&unk_100788DC0);
        sub_100034624(v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return;
      }
      goto LABEL_40;
    }
    uint64_t v67 = (uint64_t)v95;
    uint64_t v107 = v59;
    if (v47 < v45 - 1)
    {
      unint64_t v68 = *(void **)(v97 + v105);
      if (v68)
      {
        id v69 = v68;
        sub_100370498(v47 + 1, v41, (uint64_t)v108);

        sub_10003B6F8(v41, (uint64_t *)&unk_100788DC0);
        sub_100034624(v67, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return;
      }
      goto LABEL_41;
    }
    uint64_t v73 = v41;
    uint64_t v74 = v103;
    sub_10003B694(v41, v103, (uint64_t *)&unk_100788DC0);
    uint64_t v75 = v60;
    unsigned int v76 = v94(v74, 1, v60);
    uint64_t v77 = v105;
    if (v76 == 1)
    {
      sub_10003B6F8(v73, (uint64_t *)&unk_100788DC0);
      sub_100034624(v67, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10003B6F8(v74, (uint64_t *)&unk_100788DC0);
      v107((uint64_t)v108, 1, 1, v60);
      return;
    }
    uint64_t v78 = v102;
    sub_100398360(v74, v102, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v79 = *(void **)(v97 + v77);
    if (!v79) {
      goto LABEL_42;
    }
    id v80 = v79;
    uint64_t v81 = sub_1003702C8(v78, (void (*)(void))sub_1000890D8, (uint64_t (*)(uint64_t))sub_100091DF0, (uint64_t (*)(uint64_t, uint64_t))sub_100136378, sub_10035C1D0);
    char v83 = v82;

    if (v83)
    {
      sub_100034624(v78, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10003B6F8(v73, (uint64_t *)&unk_100788DC0);
      sub_100034624((uint64_t)v95, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v107((uint64_t)v108, 1, 1, v75);
      return;
    }
    sub_100375704(v78, (uint64_t)v21);
    uint64_t v84 = sub_10038CDCC((uint64_t)v21);
    sub_10003B6F8((uint64_t)v21, (uint64_t *)&unk_100788DC0);
    if (!__OFSUB__(v84, 1))
    {
      uint64_t v85 = (uint64_t)v95;
      uint64_t v86 = v107;
      if (v81 >= v84 - 1)
      {
        sub_100034624(v78, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10003B6F8(v73, (uint64_t *)&unk_100788DC0);
        sub_100034624(v85, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        v86((uint64_t)v108, 1, 1, v96);
        return;
      }
      uint64_t v87 = v101;
      uint64_t v88 = v97;
      sub_100375704(v78, v101);
      uint64_t v89 = *(void **)(v88 + v77);
      if (v89)
      {
        id v90 = v89;
        sub_100370498(v81 + 1, v87, (uint64_t)v108);

        sub_10003B6F8(v87, (uint64_t *)&unk_100788DC0);
        sub_100034624(v78, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10003B6F8(v73, (uint64_t *)&unk_100788DC0);
        sub_100034624(v85, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return;
      }
      goto LABEL_43;
    }
    __break(1u);
    goto LABEL_37;
  }
LABEL_44:
  if (qword_100785668 != -1) {
    swift_once();
  }
  uint64_t v91 = v99;
  uint64_t v92 = sub_100018BF8(v99, (uint64_t)qword_1007A2C60);
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v100, v92, v91);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_1003AA010((uint64_t)"unknown direction", 17, 2);
  __break(1u);
}

uint64_t sub_10038CCD4()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v8 - v4;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  char v6 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
  sub_100034624((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  return v6 & 1;
}

uint64_t sub_10038CDCC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v6, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t result = sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
    goto LABEL_6;
  }
  uint64_t result = sub_100398360((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v12 = *(void **)(v2 + qword_1007A59F0);
  if (!v12)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  id v13 = v12;
  sub_1000890D8();
  uint64_t v15 = sub_100091DF0((uint64_t)v10, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v15)
  {

    sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 0;
  }
  int v16 = *(unsigned __int8 *)(v15 + 72);

  swift_release();
  uint64_t result = sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (v16 != 2) {
    return 0;
  }
LABEL_6:
  uint64_t v17 = *(void **)(v2 + qword_1007A59F0);
  if (!v17)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v18 = v17;
  uint64_t v19 = sub_100370DE8(a1);
  char v21 = v20;

  if (v21) {
    return 0;
  }
  else {
    return v19;
  }
}

uint64_t sub_10038D024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v84 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v73 - v11;
  uint64_t v13 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v13 - 8);
  uint64_t v81 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v73 - v16;
  __chkstk_darwin(v18);
  char v20 = (char *)&v73 - v19;
  __chkstk_darwin(v21);
  uint64_t v82 = (uint64_t)&v73 - v22;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v73 - v24;
  sub_100034240(v88, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v87 = a2;
  uint64_t v26 = a2;
  uint64_t v27 = v2;
  uint64_t v28 = (uint64_t)v6;
  sub_100034240(v26, (uint64_t)v25, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v85 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
  uint64_t v86 = v8 + 56;
  v85(v25, 0, 1, v7);
  uint64_t v29 = sub_10038CDCC((uint64_t)v25);
  uint64_t result = sub_10003B6F8((uint64_t)v25, (uint64_t *)&unk_100788DC0);
  if (v29 < 1) {
    return result;
  }
  uint64_t v88 = qword_1007A59F0;
  uint64_t v79 = v7;
  id v80 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v77 = v17;
  uint64_t v78 = v12;
  char v83 = v20;
  uint64_t v73 = v6;
  uint64_t v74 = v27;
  while (1)
  {
    sub_100034240(v87, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t result = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v85)(v20, 0, 1, v7);
    uint64_t v31 = *(void **)(v27 + v88);
    if (!v31) {
      break;
    }
    unint64_t v32 = v29 - 1;
    id v33 = v31;
    unint64_t v34 = v32;
    uint64_t v35 = v82;
    sub_100370498(v34, (uint64_t)v20, v82);

    sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_100788DC0);
    uint64_t v36 = *v80;
    if ((*v80)(v35, 1, v7) == 1) {
      return sub_10003B6F8(v35, (uint64_t *)&unk_100788DC0);
    }
    uint64_t v37 = v28;
    uint64_t v38 = v87;
    sub_100034624(v87, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100398360(v35, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100034240((uint64_t)v12, v38, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100034240(v38, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    v85(v17, 0, 1, v7);
    uint64_t v39 = v81;
    sub_10003B694((uint64_t)v17, v81, (uint64_t *)&unk_100788DC0);
    if (v36(v39, 1, v7) == 1)
    {
      uint64_t result = sub_10003B6F8(v39, (uint64_t *)&unk_100788DC0);
      uint64_t v28 = v37;
    }
    else
    {
      uint64_t result = sub_100398360(v39, v84, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v45 = *(char **)(v27 + v88);
      if (!v45) {
        goto LABEL_42;
      }
      uint64_t v28 = v37;
      if (v45[qword_10078DED8] == 1)
      {
        uint64_t v46 = qword_1007852B8;
        uint64_t v47 = v45;
        if (v46 != -1) {
          swift_once();
        }
        uint64_t v48 = type metadata accessor for Logger();
        sub_100018BF8(v48, (uint64_t)qword_10078DE60);
        char v49 = Logger.logObject.getter();
        os_log_type_t v50 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v49, v50))
        {
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v51 = 0;
          _os_log_impl((void *)&_mh_execute_header, v49, v50, "Attempting to read sectionMetadata while it is being modified", v51, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        id v52 = v45;
      }
      uint64_t v53 = &v45[qword_10078DED0];
      uint64_t v54 = *(void *)&v45[qword_10078DED0 + 8];
      if (*(void *)&v45[qword_10078DED0])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v75 = *(void *)&v45[qword_10078DED0 + 16];
        uint64_t v76 = v54;
        sub_10003B754((uint64_t *)&unk_10078E3A0);
        uint64_t v55 = swift_allocObject();
        *(void *)(v55 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          uint64_t result = _CocoaArrayWrapper.endIndex.getter();
          if (result)
          {
            uint64_t v70 = result;
            if (result < 1) {
              goto LABEL_43;
            }
            uint64_t v71 = &_swiftEmptyArrayStorage[4];
            do
            {
              uint64_t v72 = *v71++;
              swift_weakAssign();
              swift_beginAccess();
              *(void *)(v72 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease();
              --v70;
            }
            while (v70);
          }
        }
        sub_10008EDE8(v55);
        uint64_t v57 = v56;
        uint64_t v54 = v58;
        uint64_t v60 = v59;
        char v62 = v61;
        swift_release();
        char v63 = v62 & 1;
        uint64_t v64 = *(void *)v53;
        *(void *)uint64_t v53 = v57;
        *((void *)v53 + 1) = v54;
        *((void *)v53 + 2) = v60;
        v53[24] = v63;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000349CC(v64);
        sub_1000349CC(0);
        uint64_t v28 = (uint64_t)v73;
        uint64_t v27 = v74;
      }
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      char v20 = v83;
      if (!*(void *)(v54 + 16) || (unint64_t v65 = sub_10035C1D4(v28), (v66 & 1) == 0))
      {
        sub_100034624(v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v78;
        uint64_t v7 = v79;
LABEL_4:
        sub_100034624(v84, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v29 = 0;
        uint64_t v17 = v77;
        goto LABEL_5;
      }
      uint64_t v67 = *(void *)(*(void *)(v54 + 56) + 8 * v65);
      swift_bridgeObjectRetain();
      sub_100034624(v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      uint64_t v68 = sub_1000FFBF8(v67);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v68)
      {

        uint64_t v12 = v78;
        uint64_t v7 = v79;
        char v20 = v83;
        goto LABEL_4;
      }
      int v69 = *(unsigned __int8 *)(v68 + 72);

      swift_release();
      uint64_t v12 = v78;
      uint64_t v7 = v79;
      char v20 = v83;
      if (v69 != 2) {
        goto LABEL_4;
      }
      uint64_t result = sub_100034624(v84, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v17 = v77;
    }
    id v40 = *(void **)(v27 + v88);
    if (!v40) {
      goto LABEL_41;
    }
    id v41 = v40;
    uint64_t v42 = sub_100370DE8((uint64_t)v17);
    char v44 = v43;

    if (v44) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = v42;
    }
    char v20 = v83;
LABEL_5:
    sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_100788DC0);
    uint64_t result = sub_100034624((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v29 <= 0) {
      return result;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

void *sub_10038D88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = (void *)Strong;
  char v6 = sub_100415944(a3);

  return v6;
}

void *sub_10038D8FC(void *a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v7 = (void *)Strong;
  unint64_t v8 = sub_100382834(a1, a2, a3);

  return (void *)v8;
}

void *sub_10038D988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = (void *)Strong;
  uint64_t v6 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 + 8) + 472))(a3, ObjectType);

  return (void *)v8;
}

uint64_t sub_10038DA30()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {

  }
  return 0;
}

uint64_t sub_10038DA80(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return 0;
  }
  uint64_t v5 = *(void **)(a1 + qword_1007A59F0);
  if (v5)
  {
    uint64_t v6 = (void *)result;
    id v7 = v5;
    uint64_t v8 = sub_1000890D8();
    uint64_t v12 = (void *)sub_10008E820(a2, v8, v10, v11, v9 & 1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_getObjectType();
      if (swift_conformsToProtocol2()) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      if (v13)
      {
        swift_getObjectType();
        uint64_t v14 = TTRIShowRemindersDragPreviewParametersProvidingCell.dragPreviewParameters.getter();

        return v14;
      }
    }
    else
    {
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_10038DBB8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {
}
  }

uint64_t sub_10038DC04()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {

  }
  return 1;
}

uint64_t sub_10038DC54()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {

  }
  return 0;
}

uint64_t sub_10038DCA4()
{
  uint64_t v0 = sub_10003B754(&qword_10079CA40);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = (uint64_t *)&unk_1007894B0;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_10079CA48;
  }

  return sub_10003B754(v2);
}

uint64_t sub_10038DD04()
{
  uint64_t v0 = sub_10003B754(&qword_10079CA50);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = (uint64_t *)&unk_1007894B0;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_10079CA58;
  }

  return sub_10003B754(v2);
}

Swift::Int sub_10038DD64(void *a1, uint64_t *a2, void (*a3)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v134 = a3;
  uint64_t v5 = v3;
  uint64_t v142 = sub_10003B754(a2);
  uint64_t v135 = *(void *)(v142 - 8);
  uint64_t v7 = __chkstk_darwin(v142);
  uint64_t v131 = (uint64_t)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v143 = (uint64_t)&v125 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v139 = (uint64_t)&v125 - v12;
  __chkstk_darwin(v11);
  uint64_t v138 = (uint64_t)&v125 - v13;
  Swift::Int v14 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v14);
  if (result >= v14)
  {
    if (v14 < 0) {
      goto LABEL_141;
    }
    if (v14) {
      return sub_10038E7C8(0, v14, 1, a1, a2);
    }
    return result;
  }
  if (v14 >= 0) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v14 + 1;
  }
  if (v14 < -1) {
    goto LABEL_149;
  }
  uint64_t v145 = a2;
  Swift::Int v127 = result;
  if (v14 < 2)
  {
    char v20 = (char *)_swiftEmptyArrayStorage;
    unint64_t v133 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
    uint64_t v126 = _swiftEmptyArrayStorage;
    if (v14 != 1)
    {
      unint64_t v22 = _swiftEmptyArrayStorage[2];
LABEL_107:
      if (v22 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v22 - 2;
          if (v22 < 2) {
            goto LABEL_136;
          }
          if (!v118) {
            goto LABEL_148;
          }
          unint64_t v120 = v20;
          uint64_t v121 = *(void *)&v20[16 * v119 + 32];
          uint64_t v122 = *(void *)&v20[16 * v22 + 24];
          sub_10038EA4C(v118 + *(void *)(v135 + 72) * v121, v118 + *(void *)(v135 + 72) * *(void *)&v20[16 * v22 + 16], v118 + *(void *)(v135 + 72) * v122, v133, v145, v134);
          if (v5) {
            break;
          }
          if (v122 < v121) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v120 = sub_10047596C((uint64_t)v20);
          }
          if (v119 >= *((void *)v120 + 2)) {
            goto LABEL_138;
          }
          uint64_t v123 = &v120[16 * v119 + 32];
          *(void *)uint64_t v123 = v121;
          *((void *)v123 + 1) = v122;
          unint64_t v124 = *((void *)v120 + 2);
          if (v22 > v124) {
            goto LABEL_139;
          }
          memmove(&v120[16 * v22 + 16], &v120[16 * v22 + 32], 16 * (v124 - v22));
          *((void *)v120 + 2) = v124 - 1;
          unint64_t v22 = v124 - 1;
          char v20 = v120;
        }
        while (v124 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v126[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v17 = v16 >> 1;
    uint64_t v18 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v18 + 16) = v17;
    uint64_t v19 = *(unsigned __int8 *)(v135 + 80);
    uint64_t v126 = (void *)v18;
    unint64_t v133 = v18 + ((v19 + 32) & ~v19);
  }
  Swift::Int v21 = 0;
  char v20 = (char *)_swiftEmptyArrayStorage;
  int64_t v140 = a1;
  while (1)
  {
    Swift::Int v23 = v21;
    Swift::Int v24 = v21 + 1;
    if (v21 + 1 >= v14)
    {
      Swift::Int v31 = v21 + 1;
      break;
    }
    uint64_t v129 = v5;
    Swift::Int v25 = *a1;
    Swift::Int v26 = *(void *)(v135 + 72);
    uint64_t v27 = v138;
    uint64_t v28 = v145;
    sub_10003B694(*a1 + v26 * v24, v138, v145);
    Swift::Int v137 = v14;
    uint64_t v29 = v139;
    sub_10003B694(v25 + v26 * v23, v139, v28);
    LODWORD(v136) = static IndexPath.< infix(_:_:)();
    uint64_t v30 = v29;
    Swift::Int v14 = v137;
    sub_10003B6F8(v30, v28);
    sub_10003B6F8(v27, v28);
    Swift::Int v31 = v23 + 2;
    Swift::Int v130 = v25;
    Swift::Int v144 = v26;
    if (v23 + 2 >= v14)
    {
      uint64_t v5 = v129;
      if ((v136 & 1) == 0) {
        break;
      }
    }
    else
    {
      Swift::Int v132 = v23;
      char v128 = v20;
      uint64_t v32 = v26 * v24;
      Swift::Int v33 = v25;
      Swift::Int v34 = v23 + 2;
      Swift::Int v35 = v26 * v31;
      do
      {
        uint64_t v36 = v138;
        uint64_t v37 = v145;
        sub_10003B694(v33 + v35, v138, v145);
        uint64_t v38 = v139;
        sub_10003B694(v33 + v32, v139, v37);
        int v39 = static IndexPath.< infix(_:_:)();
        sub_10003B6F8(v38, v37);
        sub_10003B6F8(v36, v37);
        if ((v136 ^ v39))
        {
          char v20 = v128;
          uint64_t v5 = v129;
          Swift::Int v31 = v34;
          Swift::Int v23 = v132;
          Swift::Int v14 = v137;
          if ((v136 & 1) == 0) {
            goto LABEL_23;
          }
          goto LABEL_43;
        }
        v33 += v144;
        ++v34;
      }
      while (v137 != v34);
      Swift::Int v14 = v137;
      Swift::Int v31 = v137;
      char v20 = v128;
      uint64_t v5 = v129;
      Swift::Int v23 = v132;
      if ((v136 & 1) == 0) {
        break;
      }
    }
LABEL_43:
    Swift::Int v57 = v144;
    if (v31 < v23) {
      goto LABEL_142;
    }
    if (v23 >= v31) {
      break;
    }
    char v128 = v20;
    uint64_t v129 = v5;
    Swift::Int v58 = v31;
    uint64_t v59 = 0;
    uint64_t v60 = v144 * (v31 - 1);
    Swift::Int v61 = v31 * v144;
    Swift::Int v132 = v23;
    uint64_t v62 = v23 * v144;
    id v40 = v145;
    Swift::Int v141 = v31;
    do
    {
      if (v23 != v58 + v59 - 1)
      {
        Swift::Int v63 = v130;
        if (!v130) {
          goto LABEL_147;
        }
        unint64_t v64 = v130 + v62;
        uint64_t v65 = v130 + v60;
        sub_100028C3C(v130 + v62, v131, v145);
        if (v62 < v60 || v64 >= v63 + v61)
        {
          swift_arrayInitWithTakeFrontToBack();
          Swift::Int v57 = v144;
        }
        else
        {
          Swift::Int v57 = v144;
          if (v62 != v60) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        id v40 = v145;
        sub_100028C3C(v131, v65, v145);
      }
      ++v23;
      --v59;
      Swift::Int v58 = v141;
      v60 -= v57;
      v61 -= v57;
      v62 += v57;
    }
    while (v23 < v141 + v59);
    char v20 = v128;
    uint64_t v5 = v129;
    Swift::Int v31 = v141;
    Swift::Int v23 = v132;
    Swift::Int v14 = v137;
    if (v141 < v137) {
      goto LABEL_24;
    }
LABEL_58:
    if (v31 < v23) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v20 = sub_100475454(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v67 = *((void *)v20 + 2);
    unint64_t v66 = *((void *)v20 + 3);
    unint64_t v22 = v67 + 1;
    uint64_t v68 = v5;
    if (v67 >= v66 >> 1) {
      char v20 = sub_100475454((char *)(v66 > 1), v67 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v22;
    int v69 = v20 + 32;
    uint64_t v70 = &v20[16 * v67 + 32];
    *(void *)uint64_t v70 = v23;
    *((void *)v70 + 1) = v31;
    Swift::Int v141 = v31;
    if (v67)
    {
      while (1)
      {
        unint64_t v71 = v22 - 1;
        if (v22 >= 4)
        {
          uint64_t v76 = &v69[16 * v22];
          uint64_t v77 = *((void *)v76 - 8);
          uint64_t v78 = *((void *)v76 - 7);
          BOOL v82 = __OFSUB__(v78, v77);
          uint64_t v79 = v78 - v77;
          if (v82) {
            goto LABEL_124;
          }
          uint64_t v81 = *((void *)v76 - 6);
          uint64_t v80 = *((void *)v76 - 5);
          BOOL v82 = __OFSUB__(v80, v81);
          uint64_t v74 = v80 - v81;
          char v75 = v82;
          if (v82) {
            goto LABEL_125;
          }
          unint64_t v83 = v22 - 2;
          uint64_t v84 = &v69[16 * v22 - 32];
          uint64_t v86 = *(void *)v84;
          uint64_t v85 = *((void *)v84 + 1);
          BOOL v82 = __OFSUB__(v85, v86);
          uint64_t v87 = v85 - v86;
          if (v82) {
            goto LABEL_127;
          }
          BOOL v82 = __OFADD__(v74, v87);
          uint64_t v88 = v74 + v87;
          if (v82) {
            goto LABEL_130;
          }
          if (v88 >= v79)
          {
            uint64_t v106 = &v69[16 * v71];
            uint64_t v108 = *(void *)v106;
            uint64_t v107 = *((void *)v106 + 1);
            BOOL v82 = __OFSUB__(v107, v108);
            uint64_t v109 = v107 - v108;
            if (v82) {
              goto LABEL_134;
            }
            BOOL v99 = v74 < v109;
            goto LABEL_95;
          }
        }
        else
        {
          if (v22 != 3)
          {
            uint64_t v100 = *((void *)v20 + 4);
            uint64_t v101 = *((void *)v20 + 5);
            BOOL v82 = __OFSUB__(v101, v100);
            uint64_t v93 = v101 - v100;
            char v94 = v82;
            goto LABEL_89;
          }
          uint64_t v73 = *((void *)v20 + 4);
          uint64_t v72 = *((void *)v20 + 5);
          BOOL v82 = __OFSUB__(v72, v73);
          uint64_t v74 = v72 - v73;
          char v75 = v82;
        }
        if (v75) {
          goto LABEL_126;
        }
        unint64_t v83 = v22 - 2;
        uint64_t v89 = &v69[16 * v22 - 32];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v92 = __OFSUB__(v90, v91);
        uint64_t v93 = v90 - v91;
        char v94 = v92;
        if (v92) {
          goto LABEL_129;
        }
        id v95 = &v69[16 * v71];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v82 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v82) {
          goto LABEL_132;
        }
        if (__OFADD__(v93, v98)) {
          goto LABEL_133;
        }
        if (v93 + v98 >= v74)
        {
          BOOL v99 = v74 < v98;
LABEL_95:
          if (v99) {
            unint64_t v71 = v83;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v94) {
          goto LABEL_128;
        }
        uint64_t v102 = &v69[16 * v71];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v82 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v82) {
          goto LABEL_131;
        }
        if (v105 < v93) {
          goto LABEL_14;
        }
LABEL_97:
        uint64_t v110 = v20;
        unint64_t v111 = v71 - 1;
        if (v71 - 1 >= v22)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        uint64_t v112 = *a1;
        if (!*a1) {
          goto LABEL_146;
        }
        int v113 = &v69[16 * v111];
        uint64_t v114 = *(void *)v113;
        uint64_t v115 = &v69[16 * v71];
        uint64_t v116 = *((void *)v115 + 1);
        sub_10038EA4C(v112 + *(void *)(v135 + 72) * *(void *)v113, v112 + *(void *)(v135 + 72) * *(void *)v115, v112 + *(void *)(v135 + 72) * v116, v133, v145, v134);
        if (v68) {
          goto LABEL_118;
        }
        if (v116 < v114) {
          goto LABEL_121;
        }
        if (v71 > *((void *)v110 + 2)) {
          goto LABEL_122;
        }
        *(void *)int v113 = v114;
        *(void *)&v69[16 * v111 + 8] = v116;
        unint64_t v117 = *((void *)v110 + 2);
        if (v71 >= v117) {
          goto LABEL_123;
        }
        char v20 = v110;
        unint64_t v22 = v117 - 1;
        memmove(&v69[16 * v71], v115 + 16, 16 * (v117 - 1 - v71));
        *((void *)v110 + 2) = v117 - 1;
        a1 = v140;
        if (v117 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v22 = 1;
LABEL_14:
    Swift::Int v14 = a1[1];
    Swift::Int v21 = v141;
    uint64_t v5 = v68;
    if (v141 >= v14) {
      goto LABEL_107;
    }
  }
LABEL_23:
  id v40 = v145;
  if (v31 >= v14) {
    goto LABEL_58;
  }
LABEL_24:
  if (__OFSUB__(v31, v23)) {
    goto LABEL_140;
  }
  if (v31 - v23 >= v127) {
    goto LABEL_58;
  }
  if (__OFADD__(v23, v127)) {
    goto LABEL_143;
  }
  if (v23 + v127 >= v14) {
    Swift::Int v41 = v14;
  }
  else {
    Swift::Int v41 = v23 + v127;
  }
  if (v41 >= v23)
  {
    if (v31 != v41)
    {
      Swift::Int v132 = v23;
      char v128 = v20;
      uint64_t v129 = v5;
      uint64_t v42 = *(void *)(v135 + 72);
      uint64_t v43 = v42 * (v31 - 1);
      uint64_t v136 = v42;
      Swift::Int v44 = v31 * v42;
      uint64_t v45 = v40;
      Swift::Int v130 = v41;
      do
      {
        uint64_t v47 = 0;
        Swift::Int v48 = v132;
        Swift::Int v141 = v31;
        Swift::Int v137 = v44;
        while (1)
        {
          Swift::Int v144 = v48;
          uint64_t v49 = *a1;
          uint64_t v50 = v44 + v47 + *a1;
          uint64_t v51 = v138;
          sub_10003B694(v50, v138, v45);
          uint64_t v52 = v43;
          uint64_t v53 = v43 + v47 + v49;
          uint64_t v54 = v139;
          sub_10003B694(v53, v139, v45);
          LOBYTE(v49) = static IndexPath.< infix(_:_:)();
          sub_10003B6F8(v54, v45);
          sub_10003B6F8(v51, v45);
          if ((v49 & 1) == 0) {
            break;
          }
          uint64_t v55 = *a1;
          if (!*a1) {
            goto LABEL_145;
          }
          Swift::Int v44 = v137;
          uint64_t v43 = v52;
          uint64_t v56 = v55 + v52 + v47;
          sub_100028C3C(v55 + v137 + v47, v143, v145);
          Swift::Int v46 = v141;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v45 = v145;
          sub_100028C3C(v143, v56, v145);
          v47 -= v136;
          Swift::Int v48 = v144 + 1;
          a1 = v140;
          if (v46 == v144 + 1) {
            goto LABEL_34;
          }
        }
        Swift::Int v46 = v141;
        uint64_t v43 = v52;
        Swift::Int v44 = v137;
LABEL_34:
        Swift::Int v31 = v46 + 1;
        v43 += v136;
        v44 += v136;
      }
      while (v31 != v130);
      Swift::Int v31 = v130;
      char v20 = v128;
      uint64_t v5 = v129;
      Swift::Int v23 = v132;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10038E7C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v27 = a1;
  uint64_t v31 = sub_10003B754(a5);
  uint64_t v9 = __chkstk_darwin(v31);
  uint64_t v32 = (uint64_t)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v28 = (uint64_t)&v25 - v12;
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v30 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v17 = *(void *)(v14 + 72);
    uint64_t v34 = v17 * (v30 - 1);
    uint64_t v29 = v17;
    uint64_t v33 = v17 * v30;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v19 = v27;
    while (1)
    {
      uint64_t v20 = *a4;
      sub_10003B694(v33 + v18 + *a4, (uint64_t)v16, a5);
      uint64_t v21 = v28;
      sub_10003B694(v34 + v18 + v20, v28, a5);
      LOBYTE(v20) = static IndexPath.< infix(_:_:)();
      sub_10003B6F8(v21, a5);
      uint64_t result = sub_10003B6F8((uint64_t)v16, a5);
      if ((v20 & 1) == 0)
      {
LABEL_4:
        v34 += v29;
        v33 += v29;
        if (++v30 == v26) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      Swift::Int v23 = a4;
      uint64_t v24 = v22 + v34 + v18;
      sub_100028C3C(v22 + v33 + v18, v32, a5);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100028C3C(v32, v24, a5);
      v18 -= v29;
      ++v19;
      a4 = v23;
      if (v30 == v19) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10038EA4C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5, void (*a6)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v49 = a5;
  uint64_t v51 = sub_10003B754(a5);
  uint64_t v11 = __chkstk_darwin(v51);
  uint64_t v50 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v45 - v13;
  uint64_t v16 = *(void *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_62;
  }
  int64_t v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_63;
  }
  uint64_t v18 = (uint64_t)(a2 - a1) / v16;
  unint64_t v54 = a1;
  unint64_t v53 = a4;
  uint64_t v19 = v17 / v16;
  Swift::Int v46 = a6;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      uint64_t v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v21;
      unint64_t v52 = a4 + v21;
      unint64_t v54 = a2;
      if (v21 >= 1 && a1 < a2)
      {
        uint64_t v31 = -v16;
        unint64_t v47 = a4;
        unint64_t v48 = a1;
        do
        {
          unint64_t v32 = a3 + v31;
          uint64_t v33 = v49;
          sub_10003B694(v29 + v31, (uint64_t)v14, v49);
          unint64_t v34 = a2 + v31;
          unint64_t v35 = a3;
          uint64_t v36 = (uint64_t)v14;
          uint64_t v37 = v50;
          sub_10003B694(a2 + v31, v50, v33);
          char v38 = static IndexPath.< infix(_:_:)();
          uint64_t v39 = v37;
          uint64_t v14 = (char *)v36;
          sub_10003B6F8(v39, v33);
          sub_10003B6F8(v36, v33);
          if (v38)
          {
            if (v35 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = v47;
              unint64_t v41 = v48;
            }
            else
            {
              BOOL v40 = v35 == a2;
              unint64_t v42 = v47;
              unint64_t v41 = v48;
              if (!v40) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v54 += v31;
          }
          else
          {
            unint64_t v43 = v52;
            v52 += v31;
            if (v35 < v43 || v32 >= v43)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v34 = a2;
              unint64_t v42 = v47;
              unint64_t v41 = v48;
            }
            else
            {
              unint64_t v42 = v47;
              if (v35 != v43) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v34 = a2;
              unint64_t v41 = v48;
            }
          }
          unint64_t v29 = v52;
          if (v52 <= v42) {
            break;
          }
          a2 = v34;
          a3 = v32;
        }
        while (v34 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v48 = a4 + v20;
    unint64_t v52 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      Swift::Int v23 = v49;
      do
      {
        sub_10003B694(a2, (uint64_t)v14, v23);
        uint64_t v24 = v50;
        sub_10003B694(a4, v50, v23);
        char v25 = static IndexPath.< infix(_:_:)();
        sub_10003B6F8(v24, v23);
        sub_10003B6F8((uint64_t)v14, v23);
        unint64_t v26 = v54;
        if (v25)
        {
          unint64_t v27 = a2 + v16;
          if (v54 < a2 || v54 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v54 == a2)
          {
            unint64_t v26 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v28 = v53 + v16;
          if (v54 < v53 || v54 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v54 != v53)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v53 = v28;
          unint64_t v27 = a2;
        }
        unint64_t v54 = v26 + v16;
        a4 = v53;
        if (v53 >= v48) {
          break;
        }
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_60:
    v46(&v54, &v53, &v52);
    return 1;
  }
LABEL_64:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10038EF38(uint64_t *a1)
{
  sub_100373204(*a1, v1, (void (*)(uint64_t, uint64_t))sub_10036F960);
}

uint64_t sub_10038EF6C()
{
  return sub_100373334(v0[2], v0[3], v0[4]);
}

uint64_t sub_10038EF78(uint64_t *a1)
{
  return sub_10038B384(*a1);
}

void *sub_10038EF94(uint64_t *a1)
{
  return sub_10038B49C(*a1);
}

uint64_t sub_10038EFB0(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v18 = a2;
  uint64_t v5 = sub_10003B754(&qword_10079C9B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    if (!v9) {
      return (uint64_t)v10;
    }
    uint64_t v19 = _swiftEmptyArrayStorage;
    uint64_t result = sub_1004D3BFC(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v10 = v19;
    unint64_t v17 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v17)
      {
        uint64_t v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v13 = *(void **)(a1 + 8 * v12 + 32);
        swift_unknownObjectRetain();
      }
      sub_100376DA4(v13, v18, v8);
      if (v3)
      {
        swift_release();
        swift_unknownObjectRelease();
        return (uint64_t)v10;
      }
      uint64_t v3 = 0;
      swift_unknownObjectRelease();
      uint64_t v19 = v10;
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_1004D3BFC(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v19;
      }
      ++v12;
      v10[2] = v15 + 1;
      sub_100028C3C((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, &qword_10079C9B8);
      if (v9 == v12) {
        return (uint64_t)v10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10038F1D8(uint64_t a1, uint64_t a2)
{
  return sub_10038F1F0(a1, a2);
}

uint64_t sub_10038F1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v8 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v71 = (uint64_t)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v53 = (uint64_t)v49 - v11;
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v75 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = *(void *)(a1 + 16);
  if (v70)
  {
    v49[1] = v2;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v18 = v13 + 16;
    uint64_t v68 = a1 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
    int v69 = v19;
    uint64_t v65 = (uint64_t *)(a2 + qword_10078DED0);
    uint64_t v73 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 40);
    uint64_t v66 = *(void *)(v18 + 56);
    unint64_t v67 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 32);
    uint64_t v60 = (void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v61 = qword_10078DED8;
    uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    Swift::Int v58 = (void (**)(char *, uint64_t))(v18 - 8);
    uint64_t v52 = v8;
    Swift::Int v57 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    v49[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    uint64_t v74 = _swiftEmptyArrayStorage;
    uint64_t v51 = a2;
    uint64_t v50 = v7;
    uint64_t v63 = v18;
    uint64_t v64 = v12;
    uint64_t v62 = v17;
    while (1)
    {
      v69(v17, v68 + v66 * v20, v12);
      uint64_t v56 = *v73;
      v56(v17, 0, 1, v12);
      if ((*v67)(v17, 1, v12) == 1) {
        break;
      }
      (*v60)(v75, v17, v12);
      if (*(unsigned char *)(a2 + v61) == 1)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_100018BF8(v21, (uint64_t)qword_10078DE60);
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Attempting to read sectionMetadata while it is being modified", v24, 2u);
          swift_slowDealloc();
        }
      }
      char v25 = v65;
      uint64_t v26 = *v65;
      if (*v65)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v55 = v65[1];
        int v54 = *((unsigned __int8 *)v65 + 24);
        sub_10003B754((uint64_t *)&unk_10078E3A0);
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          uint64_t result = _CocoaArrayWrapper.endIndex.getter();
          if (result)
          {
            uint64_t v45 = result;
            if (result < 1)
            {
              __break(1u);
              return result;
            }
            Swift::Int v46 = &_swiftEmptyArrayStorage[4];
            char v25 = v65;
            do
            {
              uint64_t v47 = *v46++;
              swift_weakAssign();
              swift_beginAccess();
              *(void *)(v47 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease();
              --v45;
            }
            while (v45);
          }
        }
        sub_10008EDE8(v27);
        uint64_t v26 = v28;
        uint64_t v30 = v29;
        uint64_t v32 = v31;
        char v34 = v33;
        swift_release();
        uint64_t v35 = *v25;
        *char v25 = v26;
        v25[1] = v30;
        v25[2] = v32;
        *((unsigned char *)v25 + 24) = v34 & 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a2 = v51;
        sub_1000349CC(v35);
        sub_1000349CC(0);
        uint64_t v7 = v50;
      }
      uint64_t v36 = sub_1001347D0(v75, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v17 = v62;
      if (v36)
      {
        uint64_t v37 = v36 + *(void *)(*(void *)v36 + 144);
        swift_beginAccess();
        sub_100034240(v37, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_release();
        uint64_t v38 = 0;
      }
      else
      {
        uint64_t v38 = 1;
      }
      uint64_t v39 = v72;
      (*v59)(v7, v38, 1, v72);
      uint64_t v12 = v64;
      (*v58)(v75, v64);
      if ((*v57)(v7, 1, v39) == 1)
      {
        sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788DC0);
      }
      else
      {
        uint64_t v40 = v53;
        sub_100398360((uint64_t)v7, v53, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_100398360(v40, v71, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v74 = (void *)sub_10056F4F4(0, v74[2] + 1, 1, (unint64_t)v74);
        }
        unint64_t v42 = v74[2];
        unint64_t v41 = v74[3];
        if (v42 >= v41 >> 1) {
          uint64_t v74 = (void *)sub_10056F4F4(v41 > 1, v42 + 1, 1, (unint64_t)v74);
        }
        unint64_t v43 = v74;
        void v74[2] = v42 + 1;
        sub_100398360(v71, (uint64_t)v43+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      if (++v20 == v70)
      {
        v56(v17, 1, 1, v12);
        break;
      }
    }
  }
  else
  {
    unint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    swift_bridgeObjectRetain();
    uint64_t v74 = _swiftEmptyArrayStorage;
    v48(v17, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v74;
}

uint64_t sub_10038FA20(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = *(void *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 16);
        uint64_t v7 = *(void *)(a2 + 16);
        swift_unknownObjectRelease();
        if (v6 == v7) {
          return v5;
        }
      }
      else if (*(void *)(*(void *)(a1 + 8 * v5 + 32) + 16) == *(void *)(a2 + 16))
      {
        return v5;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_10038FB1C()
{
  uint64_t v1 = v0;
  if (qword_1007854E0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_10079C3F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TTRIRemindersListViewController: Pencil hover interaction ended -- removing uncommitted reminder if it has not input", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 320))(ObjectType);
}

uint64_t sub_10038FC28()
{
  *(void *)(v0 + 608) = 0;
  *(_OWORD *)(v0 + 592) = 0u;
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 16) = sub_100032A4C;
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 32) = sub_100396F18;
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 48) = sub_100396F20;
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 64) = sub_100396F20;
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 80) = sub_100033114;
  *(void *)(v0 + 88) = v5;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 96) = sub_100033114;
  *(void *)(v0 + 104) = v6;
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 112) = sub_100396F3C;
  *(void *)(v0 + 120) = v7;
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 128) = sub_100396F58;
  *(void *)(v0 + 136) = v8;
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 144) = sub_100396F3C;
  *(void *)(v0 + 152) = v9;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 160) = sub_100396F3C;
  *(void *)(v0 + 168) = v10;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 176) = sub_100396F60;
  *(void *)(v0 + 184) = v11;
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 192) = sub_100396F68;
  *(void *)(v0 + 200) = v12;
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 208) = sub_100396FAC;
  *(void *)(v0 + 216) = v13;
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 224) = sub_100396FCC;
  *(void *)(v0 + 232) = v14;
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 240) = sub_100396F3C;
  *(void *)(v0 + 248) = v15;
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 256) = sub_100396FEC;
  *(void *)(v0 + 264) = v16;
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 272) = sub_100396FF4;
  *(void *)(v0 + 280) = v17;
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 288) = sub_100397024;
  *(void *)(v0 + 296) = v18;
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 304) = sub_100397054;
  *(void *)(v0 + 312) = v19;
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 320) = sub_10039705C;
  *(void *)(v0 + 328) = v20;
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 336) = sub_100397064;
  *(void *)(v0 + 344) = v21;
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 352) = sub_10039706C;
  *(void *)(v0 + 360) = v22;
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 368) = sub_100397090;
  *(void *)(v0 + 376) = v23;
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 384) = sub_10039709C;
  *(void *)(v0 + 392) = v24;
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 400) = sub_1003970BC;
  *(void *)(v0 + 408) = v25;
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 416) = sub_1003970DC;
  *(void *)(v0 + 424) = v26;
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 432) = sub_1003970F8;
  *(void *)(v0 + 440) = v27;
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 448) = sub_100397100;
  *(void *)(v0 + 456) = v28;
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 464) = sub_100397130;
  *(void *)(v0 + 472) = v29;
  uint64_t v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 480) = sub_100397138;
  *(void *)(v0 + 488) = v30;
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 496) = sub_100397140;
  *(void *)(v0 + 504) = v31;
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 512) = sub_100397140;
  *(void *)(v0 + 520) = v32;
  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 528) = sub_10039715C;
  *(void *)(v0 + 536) = v33;
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 544) = sub_100396F20;
  *(void *)(v0 + 552) = v34;
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 560) = sub_100397164;
  *(void *)(v0 + 568) = v35;
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 576) = sub_10039716C;
  *(void *)(v0 + 584) = v36;
  return v0;
}

id sub_1003903CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  uint64_t v5 = *(void *)(v4 + 48);
  uint64_t v6 = *(void *)(v4 + 56);
  uint64_t ObjectType = swift_getObjectType();
  v12[7] = v5;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
  uint64_t v8 = sub_10022C888(a1);
  swift_release();
  void v12[2] = v2;
  v12[3] = a1;
  sub_1005881EC((void (*)(uint64_t *__return_ptr, char *))sub_1003971AC, (uint64_t)v12, (uint64_t)v8);
  swift_bridgeObjectRelease();
  sub_1000368FC(0, (unint64_t *)&unk_10079CA10);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self configurationWithActions:isa];

  return v10;
}

id sub_1003904E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  uint64_t v8 = *(void **)(v7 + 48);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v22 = v8;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
  uint64_t v11 = sub_10022CF5C(a1);
  swift_release();
  uint64_t v20 = v2;
  uint64_t v21 = a1;
  uint64_t v12 = sub_1005881EC((void (*)(uint64_t *__return_ptr, char *))sub_1003971AC, (uint64_t)v19, (uint64_t)v11);
  swift_bridgeObjectRelease();
  uint64_t v22 = v12;
  sub_100034240(a1, (uint64_t)&v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  sub_100398360((uint64_t)&v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v14 + v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  unint64_t v15 = static TTRDebugMenuUtilities.objectIDContextualActions(provideObjectID:)();
  swift_release();
  sub_100569FB8(v15);
  sub_1000368FC(0, (unint64_t *)&unk_10079CA10);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [self configurationWithActions:isa];

  return v17;
}

void sub_100390724()
{
  uint64_t v1 = sub_10003B754(qword_10079F4F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_10037A35C();
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 endEditing:1];
  }
  uint64_t v6 = *(void *)(v0
                 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController);
  if (v6)
  {
    type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 0, 1, v7);
    uint64_t v8 = v6
       + OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession;
    swift_beginAccess();
    swift_retain();
    sub_10000A550((uint64_t)v3, v8, qword_10079F4F0);
    swift_endAccess();
    swift_release();
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v9 + 8) + 264))(ObjectType);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003908A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem();
  __chkstk_darwin(v4);
  uint64_t v6 = (id *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 2:
    case 3:
    case 4:
      sub_100034624((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
      uint64_t v9 = *(void **)(a1 + qword_1007A59F0);
      if (!v9)
      {
        __break(1u);
        JUMPOUT(0x100390A70);
      }
      id v10 = v9;
      uint64_t v11 = sub_1000890D8();
      unint64_t v15 = (void *)sub_10008E820(a2, v11, v13, v14, v12 & 1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15)
      {
        type metadata accessor for TTRIRemindersListReminderCell();
        if (swift_dynamicCastClass())
        {
          id v16 = v15;
          id v17 = (void *)UIView.firstResponderDescendant.getter();

          if (v17)
          {

            return 0;
          }
        }
        else
        {
        }
      }
      return 1;
    case 5:

      return 0;
    case 6:

      return 0;
    case 10:
    case 11:
    case 12:
      return result;
    default:
      sub_100034624((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
      return 0;
  }
}

void *sub_100390AA4()
{
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[2] = sub_10003FE84;
  v0[3] = v1;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[4] = sub_100396E9C;
  v0[5] = v2;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[6] = sub_100396EA4;
  v0[7] = v3;
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[8] = sub_100396EAC;
  v0[9] = v4;
  return v0;
}

double sub_100390BA8()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - v4;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    double v10 = 0.0;
    if (EnumCaseMultiPayload != 1) {
      return v10;
    }
    uint64_t v5 = v2;
  }
  sub_100398360((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (v5[*(int *)(v0 + 24)]) {
    double v10 = UITableViewAutomaticDimension;
  }
  else {
    double v10 = 0.0;
  }
  sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  return v10;
}

void sub_100390D24()
{
  sub_10037CB7C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void *sub_100390D2C(uint64_t a1)
{
  return sub_1005FDC84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100390D34()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100390D70()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100390D80()
{
  id result = *(id *)(*(void *)(v0 + 16) + qword_1007A59E8);
  if (result) {
    return [result performBatchUpdates:0 completion:0];
  }
  __break(1u);
  return result;
}

uint64_t sub_100390DAC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_100390DBC()
{
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[2] = sub_100032A4C;
  v0[3] = v1;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[4] = sub_100398080;
  v0[5] = v2;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[6] = sub_100398088;
  v0[7] = v3;
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[8] = sub_100398090;
  v0[9] = v4;
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[10] = sub_100398098;
  v0[11] = v5;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[12] = sub_100396F20;
  v0[13] = v6;
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[14] = sub_1003980C8;
  v0[15] = v7;
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[16] = sub_10003EF08;
  v0[17] = v8;
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[18] = sub_10003EF08;
  v0[19] = v9;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[20] = sub_1003980FC;
  v0[21] = v10;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[22] = sub_100398104;
  v0[23] = v11;
  return v0;
}

void sub_10039102C(void *a1, uint64_t a2)
{
  void (*v98)(void *__return_ptr, objc_class *, uint64_t, uint64_t);
  id v99;
  id v100;
  uint64_t v101;
  id v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  void *v106;
  id v107;
  uint64_t v108;
  id v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v113;
  void *v114;
  id v115;
  uint64_t v116;
  id v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  void *v121;
  id v122;
  uint64_t v123;
  id v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  id v128;
  uint64_t v129;
  id v130;
  NSObject *v131;
  os_log_type_t v132;
  uint8_t *v133;
  void *v134;
  id v135;
  uint64_t (**v136)(void);
  uint64_t (**v137)(void);
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  id v142;
  uint64_t ObjectType;
  uint64_t v144;
  char v145;
  id v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char v169;
  objc_class *v170;
  unsigned int v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  objc_class *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  void *v194;
  void v195[8];
  char v196;
  unsigned __int8 v197;
  unsigned __int8 v198;
  unsigned __int8 v199;
  unsigned __int8 v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unsigned __int8 v207;
  unsigned __int8 v208;
  objc_super v209;
  objc_super v210;
  objc_super v211;
  void v212[16];
  void v213[2];
  unsigned __int16 v214;
  unsigned __int8 v215;
  uint64_t v216;
  uint64_t v217;

  uint64_t v194 = a1;
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v182 = *(void *)(v3 - 8);
  uint64_t v183 = v3;
  __chkstk_darwin(v3);
  v184 = (uint64_t)&v172 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  uint64_t v186 = *(void *)(v5 - 8);
  v187 = v5;
  __chkstk_darwin(v5);
  unint64_t v179 = (uint64_t)&v172 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10079CA20);
  __chkstk_darwin(v7 - 8);
  BOOL v185 = (uint64_t)&v172 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v180 = (uint64_t)&v172 - v10;
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v11 - 8);
  unint64_t v181 = (uint64_t)&v172 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v190 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v190);
  uint64_t v191 = (uint64_t)&v172 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListTip();
  __chkstk_darwin(v14 - 8);
  uint64_t v189 = (objc_class *)((char *)&v172 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for TTRTemplatePublicLinkData();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v172 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v172 - v20;
  uint64_t v22 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v172 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v172 - v26;
  uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  v188 = (char *)&v172 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem();
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v172 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = a2;
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v34 = v191;
      sub_100398360((uint64_t)v33, v191, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v35 = (objc_class *)type metadata accessor for TTRIRemindersListEditableSectionCell();
      uint64_t v36 = v194;
      uint64_t v37 = swift_dynamicCastClass();
      if (v37)
      {
        uint64_t v38 = v37;
        uint64_t v189 = v35;
        *(void *)(v37 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_delegate + 8) = &off_100747440;
        uint64_t v39 = v193;
        swift_unknownObjectWeakAssign();
        uint64_t v40 = *(void *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
        unint64_t v41 = (uint64_t *)(v38 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule);
        swift_beginAccess();
        uint64_t v42 = *v41;
        if (v42)
        {
          uint64_t v43 = v42 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
          swift_beginAccess();
          uint64_t v44 = v180;
          sub_10003B694(v43, v180, (uint64_t *)&unk_10079CA20);
          int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v186 + 48))(v44, 1, v187);
          uint64_t v46 = v192;
          if (v45)
          {
            id v47 = v36;
            swift_unknownObjectRetain();
            sub_10003B6F8(v44, (uint64_t *)&unk_10079CA20);
            uint64_t v48 = v181;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56))(v181, 1, 1, v183);
          }
          else
          {
            Swift::Int v141 = v179;
            sub_100034240(v44, v179, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
            uint64_t v142 = v36;
            swift_unknownObjectRetain();
            sub_10003B6F8(v44, (uint64_t *)&unk_10079CA20);
            uint64_t v48 = v181;
            sub_100034240(v141, v181, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            sub_100034624(v141, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v182 + 56))(v48, 0, 1, v183);
          }
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v139 = v181;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v182 + 56))(v181, 1, 1, v183);
          int64_t v140 = v36;
          uint64_t v48 = v139;
          uint64_t v46 = v192;
        }
        uint64_t ObjectType = swift_getObjectType();
        Swift::Int v144 = *(void *)(v40 + 8);
        uint64_t v145 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 224))(v46, v48, ObjectType, v144);
        sub_10003B6F8(v48, (uint64_t *)&unk_100788DC0);
        if ((v145 & 1) == 0) {
          goto LABEL_80;
        }
        int v146 = [v39 parentViewController];
        if (v146)
        {
          uint64_t v147 = v146;
          swift_getObjectType();
          uint64_t v148 = swift_conformsToProtocol2();
          if (v148) {
            uint64_t v149 = v148;
          }
          else {
            uint64_t v149 = 0;
          }
          if (v148) {
            unint64_t v150 = v147;
          }
          else {
            unint64_t v150 = 0;
          }
          if (v150)
          {
            unint64_t v151 = *(void *)(v149 + 8);
LABEL_79:
            (*(void (**)(void *__return_ptr, uint64_t, void *, uint64_t, char *, uint64_t, uint64_t))(v144 + 256))(v213, v46, v150, v151, v39, ObjectType, v144);
            swift_unknownObjectRelease();
            sub_1004C901C((uint64_t)v213);
LABEL_80:
            uint64_t v193 = (char *)v38;
            uint64_t v152 = v184;
            sub_100034240(v46, v184, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            sub_100028C3C(v191 + *(int *)(v190 + 20), (uint64_t)v212, (uint64_t *)&unk_10079CA00);
            sub_100028C3C((uint64_t)v212, (uint64_t)v213, (uint64_t *)&unk_10079CA00);
            if (sub_1001CF7D4((uint64_t)v213) == 1)
            {
              uint64_t v153 = 0;
              v173 = 0;
              unint64_t v154 = 0;
              unint64_t v155 = 0;
              uint64_t v156 = 0;
              uint64_t v157 = 0;
              uint64_t v158 = 0;
              uint64_t v174 = 0;
              unint64_t v175 = 0;
              v188 = 0;
              uint64_t v182 = 0;
              uint64_t v183 = 0;
              uint64_t v180 = 0;
              unint64_t v181 = 0;
              unint64_t v179 = 0;
              LODWORD(v192) = 0;
              uint64_t v177 = 0;
              uint64_t v178 = 255;
              unint64_t v176 = 3;
              unint64_t v159 = -64;
              char v160 = 0xE000000000000000;
            }
            else
            {
              sub_100028C3C((uint64_t)v212, (uint64_t)v195, (uint64_t *)&unk_10079CA00);
              LODWORD(v192) = v208;
              v188 = (char *)v201;
              uint64_t v182 = v203;
              uint64_t v183 = v202;
              uint64_t v180 = v205;
              unint64_t v181 = v204;
              unint64_t v179 = v206;
              uint64_t v177 = v199;
              uint64_t v178 = v207;
              unint64_t v175 = v198;
              unint64_t v176 = v200;
              uint64_t v174 = v197;
              unint64_t v154 = v195[3];
              v173 = v195[2];
              unint64_t v155 = v195[4];
              uint64_t v156 = v195[5];
              uint64_t v157 = v195[6];
              uint64_t v158 = v195[7];
              unint64_t v159 = v196;
              uint64_t v153 = v195[0];
              char v160 = v195[1];
            }
            uint64_t v161 = v152;
            uint64_t v162 = v185;
            sub_100398360(v161, v185, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            v163 = v162 + *(int *)(v187 + 20);
            *(void *)v163 = v153;
            *(void *)(v163 + 8) = v160;
            *(void *)(v163 + 16) = v173;
            *(void *)(v163 + 24) = v154;
            *(void *)(v163 + 32) = v155;
            *(void *)(v163 + 40) = v156;
            *(void *)(v163 + 48) = v157;
            *(void *)(v163 + 56) = v158;
            *(unsigned char *)(v163 + 64) = v159;
            *(unsigned char *)(v163 + 65) = v174;
            *(unsigned char *)(v163 + 66) = v175;
            *(unsigned char *)(v163 + 67) = v177;
            *(unsigned char *)(v163 + 68) = v176;
            uint64_t v164 = v183;
            *(void *)(v163 + 72) = v188;
            *(void *)(v163 + 80) = v164;
            char v165 = v181;
            *(void *)(v163 + 88) = v182;
            *(void *)(v163 + 96) = v165;
            uint64_t v166 = v179;
            *(void *)(v163 + 104) = v180;
            *(void *)(v163 + 112) = v166;
            *(unsigned char *)(v163 + 120) = v178;
            *(unsigned char *)(v163 + 121) = v192;
            (*(void (**)(uint64_t, void, uint64_t))(v186 + 56))(v162, 0, 1);
            sub_100396EB4((uint64_t)v212);
            BOOL v167 = v193;
            sub_1004C9128(v162);
            uint64_t v168 = v191;
            uint64_t v169 = *(unsigned char *)(v191 + *(int *)(v190 + 24));
            uint64_t v170 = v189;
            v211.receiver = v167;
            v211.super_class = v189;
            uint64_t v171 = [super isHidden];
            v210.receiver = v167;
            v210.super_class = v170;
            [super setHidden:(v169 & 1) == 0];
            v209.receiver = v167;
            v209.super_class = v170;
            if (v171 != objc_msgSendSuper2(&v209, "isHidden")) {
              [v167 setNeedsLayout];
            }

            Swift::Int v137 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
            uint64_t v138 = v168;
            goto LABEL_51;
          }
        }
        else
        {
          unint64_t v150 = 0;
        }
        unint64_t v151 = 0;
        goto LABEL_79;
      }
      if (qword_1007854E0 != -1) {
        swift_once();
      }
      uint64_t v101 = type metadata accessor for Logger();
      sub_100018BF8(v101, (uint64_t)qword_10079C3F0);
      uint64_t v102 = v36;
      uint64_t v103 = Logger.logObject.getter();
      uint64_t v104 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v103, v104))
      {
        uint64_t v105 = (uint8_t *)swift_slowAlloc();
        uint64_t v106 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v105 = 138412290;
        v213[0] = v102;
        uint64_t v107 = v102;
        uint64_t v34 = v191;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v106 = v102;

        _os_log_impl((void *)&_mh_execute_header, v103, v104, "Failed to cast cell to editableSectionCell {cell: %@}", v105, 0xCu);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      Swift::Int v137 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
      uint64_t v138 = v34;
LABEL_51:
      sub_100034624(v138, (uint64_t (*)(void))v137);
      return;
    case 2u:
      uint64_t v49 = sub_100380364(v192, v194);
      if (v49)
      {
        uint64_t v50 = (void *)v49;
        TTRIRemindersListReminderCell.hideSeparatorDueToLastItemInSection.setter();
      }
      goto LABEL_49;
    case 3u:
      uint64_t v52 = v192;
      uint64_t v51 = v193;
      uint64_t v53 = sub_100380364(v192, v194);
      if (!v53) {
        goto LABEL_49;
      }
      int v54 = (void *)v53;
      uint64_t v55 = &v51[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter];
      uint64_t v56 = *(void *)&v51[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter];
      uint64_t v57 = *((void *)v55 + 1);
      uint64_t v58 = swift_getObjectType();
      if ((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v57 + 8) + 880))(v52, v58))
      {
        uint64_t v59 = *(void *)(v56 + 48);
        uint64_t v60 = *(void *)(v56 + 56);
        uint64_t v61 = swift_getObjectType();
        v213[0] = v59;
        sub_100421DA8(v61, v60);
        sub_10045BDF0(v52, 1);
        swift_unknownObjectRelease();
      }
      goto LABEL_48;
    case 4u:
      uint64_t v63 = v192;
      uint64_t v62 = v193;
      uint64_t v64 = sub_100380364(v192, v194);
      if (!v64) {
        goto LABEL_49;
      }
      int v54 = (void *)v64;
      uint64_t v65 = *(void *)&v62[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
      uint64_t v66 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 + 8) + 880))(v63, v66);
LABEL_48:
      TTRIRemindersListReminderCell.hideSeparatorDueToLastItemInSection.setter();

LABEL_49:
      uint64_t v136 = &type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem;
      goto LABEL_50;
    case 5u:
      unint64_t v67 = (void *)*((void *)v33 + 2);
      type metadata accessor for TTRIRemindersListCompletedCell();
      uint64_t v68 = v194;
      uint64_t v69 = swift_dynamicCastClass();
      if (v69)
      {
        uint64_t v70 = *(void *)v33;
        if (v33[9]) {
          int v71 = 256;
        }
        else {
          int v71 = 0;
        }
        if (v33[10]) {
          int v72 = 0x10000;
        }
        else {
          int v72 = 0;
        }
        int v73 = v71 | v72 | v33[8];
        uint64_t v192 = v69;
        uint64_t v189 = v68;
        id v74 = v67;
        sub_10050AB24(v70, v73, (uint64_t)v213);

        uint64_t v75 = v213[1];
        uint64_t v194 = (void *)v213[0];
        LODWORD(v191) = v214;
        LODWORD(v190) = v215;
        uint64_t v76 = v216;
        uint64_t v77 = v217;
        uint64_t v78 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1000499C4(v76);
        uint64_t v79 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        sub_1000499C4(v77);
        uint64_t v80 = v189;
        swift_bridgeObjectRetain();
        sub_10006C140((uint64_t)sub_100397FC4);
        sub_10006C140((uint64_t)sub_100397FCC);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        v212[3] = &type metadata for TTRIRemindersListCompletedCellContentConfiguration;
        v212[4] = sub_100397FD4();
        uint64_t v81 = swift_allocObject();
        v212[0] = v81;
        *(void *)(v81 + 16) = v194;
        *(void *)(v81 + 24) = v75;
        *(_WORD *)(v81 + 32) = v191;
        *(unsigned char *)(v81 + 34) = v190;
        *(void *)(v81 + 40) = sub_100397FC4;
        *(void *)(v81 + 48) = v78;
        *(void *)(v81 + 56) = sub_100397FCC;
        *(void *)(v81 + 64) = v79;
        UITableViewCell.contentConfiguration.setter();

        swift_bridgeObjectRelease();
        sub_1000499C4((uint64_t)sub_100397FC4);
        sub_1000499C4((uint64_t)sub_100397FCC);
      }
      else
      {
        if (qword_1007854E0 != -1) {
          swift_once();
        }
        uint64_t v108 = type metadata accessor for Logger();
        sub_100018BF8(v108, (uint64_t)qword_10079C3F0);
        uint64_t v109 = v68;
        uint64_t v110 = Logger.logObject.getter();
        unint64_t v111 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v110, v111))
        {
          uint64_t v112 = (uint8_t *)swift_slowAlloc();
          int v113 = swift_slowAlloc();
          uint64_t v194 = v67;
          uint64_t v114 = (void *)v113;
          *(_DWORD *)uint64_t v112 = 138412290;
          v213[0] = v109;
          uint64_t v115 = v109;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v114 = v109;

          _os_log_impl((void *)&_mh_execute_header, v110, v111, "Failed to cast cell to completedCell {cell: %@}", v112, 0xCu);
          sub_10003B754(&qword_10078AC60);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
      }
      return;
    case 6u:

      return;
    case 7u:
      uint64_t v82 = (uint64_t)v33;
      uint64_t v33 = v188;
      sub_100398360(v82, (uint64_t)v188, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
      type metadata accessor for TTRIRemindersListHashtagCollectionCell();
      unint64_t v83 = v194;
      uint64_t v84 = swift_dynamicCastClass();
      if (v84)
      {
        uint64_t v85 = v84;
        sub_100034240((uint64_t)v33, (uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
        uint64_t v86 = v83;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v28);
        uint64_t v87 = v85 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel;
        swift_beginAccess();
        sub_10003B694(v87, (uint64_t)v24, (uint64_t *)&unk_1007AD380);
        swift_beginAccess();
        id v88 = v86;
        sub_100397F5C((uint64_t)v27, v87);
        swift_endAccess();
        sub_100648548((uint64_t)v24);
        sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_1007AD380);
        sub_10003B6F8((uint64_t)v24, (uint64_t *)&unk_1007AD380);
        sub_100034624((uint64_t)v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
        *(unsigned char *)(v85 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_allowsExcludedSelection) = 1;
        *(void *)(v85 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_delegate + 8) = &off_100747520;
        swift_unknownObjectWeakAssign();

        return;
      }
      if (qword_1007854E0 != -1) {
        swift_once();
      }
      uint64_t v116 = type metadata accessor for Logger();
      sub_100018BF8(v116, (uint64_t)qword_10079C3F0);
      unint64_t v117 = v83;
      uint64_t v118 = Logger.logObject.getter();
      unint64_t v119 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v118, v119))
      {
        unint64_t v120 = (uint8_t *)swift_slowAlloc();
        uint64_t v121 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v120 = 138412290;
        v213[0] = v117;
        uint64_t v122 = v117;
        uint64_t v33 = v188;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v121 = v117;

        _os_log_impl((void *)&_mh_execute_header, v118, v119, "Failed to cast cell to hashtagsCell {cell: %@}", v120, 0xCu);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v136 = &type metadata accessor for TTRRemindersListViewModel.HashtagsState;
LABEL_50:
      Swift::Int v137 = v136;
      uint64_t v138 = (uint64_t)v33;
      goto LABEL_51;
    case 8u:
      sub_100398360((uint64_t)v33, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
      type metadata accessor for TTRIRemindersListTemplateStatusCell();
      uint64_t v89 = v194;
      uint64_t v90 = swift_dynamicCastClass();
      if (v90)
      {
        uint64_t v91 = v90;
        sub_100034240((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
        id v92 = v89;
        sub_1002D738C((uint64_t)v18);
        sub_100034624((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
        *(void *)(v91 + qword_1007973E8 + 8) = &off_100747510;
        swift_unknownObjectWeakAssign();

        return;
      }
      if (qword_1007854E0 != -1) {
        swift_once();
      }
      uint64_t v123 = type metadata accessor for Logger();
      sub_100018BF8(v123, (uint64_t)qword_10079C3F0);
      unint64_t v124 = v89;
      uint64_t v125 = Logger.logObject.getter();
      uint64_t v126 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v125, v126))
      {
        Swift::Int v127 = (uint8_t *)swift_slowAlloc();
        uint64_t v194 = (void *)swift_slowAlloc();
        *(_DWORD *)Swift::Int v127 = 138412290;
        v213[0] = v124;
        char v128 = v124;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v194 = v124;

        _os_log_impl((void *)&_mh_execute_header, v125, v126, "Failed to cast cell to templateStatusCell {cell: %@}", v127, 0xCu);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      Swift::Int v137 = &type metadata accessor for TTRTemplatePublicLinkData;
      uint64_t v138 = (uint64_t)v21;
      goto LABEL_51;
    case 9u:
      uint64_t v93 = v189;
      sub_100398360((uint64_t)v33, (uint64_t)v189, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTip);
      type metadata accessor for TTRIRemindersListTipCell();
      char v94 = v194;
      if (swift_dynamicCastClass())
      {
        uint64_t v95 = *(void *)&v193[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
        uint64_t v96 = swift_getObjectType();
        uint64_t v97 = *(void *)(v95 + 8);
        uint64_t v98 = *(void (**)(void *__return_ptr, objc_class *, uint64_t, uint64_t))(v97 + 912);
        BOOL v99 = v94;
        v98(v213, v93, v96, v97);
        sub_10003B694((uint64_t)v213, (uint64_t)v212, &qword_10079CA30);
        uint64_t v100 = v99;
        UITableViewCell.contentConfiguration.setter();

        sub_10003B6F8((uint64_t)v213, &qword_10079CA30);
      }
      else
      {
        if (qword_1007854E0 != -1) {
          swift_once();
        }
        uint64_t v129 = type metadata accessor for Logger();
        sub_100018BF8(v129, (uint64_t)qword_10079C3F0);
        Swift::Int v130 = v94;
        uint64_t v131 = Logger.logObject.getter();
        Swift::Int v132 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v131, v132))
        {
          unint64_t v133 = (uint8_t *)swift_slowAlloc();
          uint64_t v134 = (void *)swift_slowAlloc();
          *(_DWORD *)unint64_t v133 = 138412290;
          v213[0] = v130;
          uint64_t v135 = v130;
          uint64_t v93 = v189;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v134 = v130;

          _os_log_impl((void *)&_mh_execute_header, v131, v132, "Failed to cast cell to tipCell {cell: %@}", v133, 0xCu);
          sub_10003B754(&qword_10078AC60);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
      }
      Swift::Int v137 = &type metadata accessor for TTRRemindersListTip;
      uint64_t v138 = (uint64_t)v93;
      goto LABEL_51;
    case 0xAu:
    case 0xBu:
    case 0xCu:
      return;
    default:
      goto LABEL_49;
  }
}

uint64_t sub_1003927E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem();
  __chkstk_darwin(v4);
  uint64_t v6 = (id *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 5u:

      char v8 = 1;
      return v8 & 1;
    case 6u:

      goto LABEL_3;
    case 0xAu:
    case 0xBu:
    case 0xCu:
      goto LABEL_3;
    default:
      sub_100034624((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
LABEL_3:
      uint64_t v7 = *(void **)(a1 + qword_1007A59E8);
      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x100392904);
      }
      char v8 = sub_1003F7014(a2, (char)[v7 isEditing]);
      return v8 & 1;
  }
}

id sub_100392938()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v0[qword_10079BDE8] = 0;
  *(void *)&v0[qword_10079BDF0] = _swiftEmptyDictionarySingleton;
  uint64_t v2 = &v0[qword_10079BE08];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = (void (**)(uint64_t, uint64_t))&v0[qword_10079BDB0];
  *uint64_t v4 = sub_100396DAC;
  v4[1] = (void (*)(uint64_t, uint64_t))v3;
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = (uint64_t (**)(uint64_t, uint64_t))&v0[qword_10079BDB8];
  *uint64_t v6 = sub_100396DDC;
  v6[1] = (uint64_t (*)(uint64_t, uint64_t))v5;
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v8 = (void (**)())&v0[qword_10079BDC0];
  *char v8 = sub_100396DE4;
  v8[1] = (void (*)())v7;
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = &v0[qword_10079BDC8];
  *(void *)uint64_t v10 = sub_100396DEC;
  *((void *)v10 + 1) = v9;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = (void (**)())&v0[qword_10079BDD0];
  *uint64_t v12 = sub_100396DF4;
  v12[1] = (void (*)())v11;
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void (**)())&v0[qword_10079BDD8];
  *uint64_t v14 = sub_100396E10;
  v14[1] = (void (*)())v13;
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (uint64_t (**)())&v0[qword_10079BDE0];
  *uint64_t v16 = sub_100396E18;
  v16[1] = (uint64_t (*)())v15;
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = (uint64_t (**)(uint64_t, uint64_t))&v0[qword_10079BDF8];
  char *v18 = sub_100396E34;
  v18[1] = (uint64_t (*)(uint64_t, uint64_t))v17;
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = (uint64_t (**)())&v0[qword_10079BE00];
  *uint64_t v20 = sub_100396E3C;
  v20[1] = (uint64_t (*)())v19;
  v22.receiver = v0;
  v22.super_class = ObjectType;
  return [super init];
}

void sub_100392C2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_initialFrameForLoadingView];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;
  uint64_t v3 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_preferredChromelessBarStates;
  sub_10003B754((uint64_t *)&unk_100791C10);
  swift_allocObject();
  *(void *)&v0[v3] = TTRObservableViewModel.init(value:)();
  *(void *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController] = 0;
  uint64_t v4 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_itemStateTracker;
  type metadata accessor for TTRRemindersListItemStateTracker();
  swift_allocObject();
  *(void *)&v0[v4] = TTRRemindersListItemStateTracker.init()();
  uint64_t v5 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilAutoCommitTracker;
  type metadata accessor for TTRIRemindersListPencilAutoCommitTracker();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(void *)&v1[v5] = v6;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_chromelessToolbarUpdater] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___treeView] = 0;
  uint64_t v7 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_canMoveItemReturnValueTempOverrides;
  type metadata accessor for TTRIRemindersListTemporaryItemSet();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 24) = &_swiftEmptySetSingleton;
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  static OS_dispatch_queue.main.getter();
  type metadata accessor for TTRDeferredAction();
  swift_allocObject();
  uint64_t v9 = TTRDeferredAction.init(queue:)();
  *(void *)(v8 + 16) = v9;
  swift_beginAccess();
  *(void *)(v9 + 24) = &off_100749BC0;
  swift_unknownObjectWeakAssign();
  *(void *)&v1[v7] = v8;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController] = 0;
  uint64_t v10 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem];
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_treeViewHasSwipedItem] = 0;
  v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_isHighlightingItemsProgrammatically] = 0;
  v12(&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_firstVisibleItemToRestore], 1, 1, v11);
  *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_internalFocusedCell] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___completedTasksRotor] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___incompleteTasksRotor] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___overdueTasksRotor] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100392ED8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v0[qword_1007A38F8] = 0;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v0[qword_1007A38C0];
  *(void *)uint64_t v3 = sub_100396E44;
  *((void *)v3 + 1) = v2;
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = &v0[qword_1007A38C8];
  *(void *)uint64_t v5 = sub_100396E4C;
  *((void *)v5 + 1) = v4;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (uint64_t (**)(uint64_t, uint64_t))&v0[qword_1007A38D0];
  void *v7 = sub_100396E54;
  v7[1] = (uint64_t (*)(uint64_t, uint64_t))v6;
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = (void (**)())&v0[qword_1007A38D8];
  *uint64_t v9 = sub_100396DF4;
  v9[1] = (void (*)())v8;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = (void (**)())&v0[qword_1007A38E0];
  *uint64_t v11 = sub_100396DF4;
  v11[1] = (void (*)())v10;
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = (uint64_t (**)())&v0[qword_1007A38E8];
  void *v13 = sub_100396E5C;
  v13[1] = (uint64_t (*)())v12;
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = (uint64_t (**)())&v0[qword_1007A38F0];
  *uint64_t v15 = sub_100396E7C;
  v15[1] = (uint64_t (*)())v14;
  v17.receiver = v0;
  v17.super_class = ObjectType;
  return [super init];
}

uint64_t sub_10039311C()
{
  return TTRObservableViewModel<A>.update(with:forcePublish:)();
}

uint64_t sub_100393188()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100791C50);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754(&qword_10079C928);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  double v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(v0, "isEditing", v8) & 1) == 0)
  {
    uint64_t v11 = *(void *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v11 + 8) + 304))(ObjectType);
    uint64_t v13 = sub_10003B754(&qword_10079C930);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v3, 1, v13) != 1)
    {
      uint64_t v17 = *(int *)(v4 + 48);
      long long v23 = *(_OWORD *)&v3[*(int *)(v13 + 48)];
      sub_100398360((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_OWORD *)&v6[v17] = v23;
      long long v23 = *(_OWORD *)&v6[*(int *)(v4 + 48)];
      sub_100398360((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10037A5D8((uint64_t)v10, 1);
      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v18;
      *(_OWORD *)(v19 + 24) = v23;
      swift_unknownObjectRetain();
      uint64_t v20 = (void *)zalgo.getter();
      sub_10003B754(&qword_10079C940);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      uint64_t v21 = (void *)zalgo.getter();
      uint64_t v16 = dispatch thunk of Promise.error(on:closure:)();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();

      sub_100034624((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
      return v16;
    }
    sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100791C50);
  }
  uint64_t v14 = type metadata accessor for PromiseError();
  sub_1003889DC((unint64_t *)&qword_10078AD80, (void (*)(uint64_t))&type metadata accessor for PromiseError);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, enum case for PromiseError.cancelled(_:), v14);
  sub_10003B754(&qword_10079C938);
  swift_allocObject();
  return Promise.init(error:)();
}

void sub_1003935B8(void *a1, double a2, double a3)
{
  sub_1000ABAF4();
  PassthroughSubject.send(_:)();
  id v6 = [a1 view];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v6 hitTest:0 withEvent:a2, a3];
    if (v8)
    {
      uint64_t v9 = v8;
      type metadata accessor for TTRIRemindersListBackgroundView();
      if (swift_dynamicCastClass())
      {
        id v10 = v9;
        sub_100393188();

        swift_release();
      }
      else
      {
      }
    }
    else
    {
    }
  }
}

void *sub_1003936B8()
{
  uint64_t v0 = sub_100377F30();
  id result = *(Class *)((char *)&v0->isa + qword_1007A59E8);
  if (result)
  {
    unsigned __int8 v2 = [result hasActiveDrag];

    if (v2) {
      return 0;
    }
    uint64_t v3 = sub_100377F30();
    id result = *(Class *)((char *)&v3->isa + qword_1007A59E8);
    if (result)
    {
      unsigned int v4 = [result hasActiveDrop];

      return (void *)(v4 ^ 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100393748(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppEntityID();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v35 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v4 - 8);
  id v6 = (id *)((char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v34 - v14;
  uint64_t v16 = type metadata accessor for REMFeatureFlags();
  uint64_t v17 = *(void *)(v16 - 8);
  double v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v17 + 104))(v20, enum case for REMFeatureFlags.viewAnnotation(_:), v16, v18);
  char v21 = REMFeatureFlags.isEnabled.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  if (v21)
  {
    TTRIRemindersListReminderCell.viewModel.getter();
    uint64_t v23 = v39;
    if (!v39) {
      return sub_10003B6F8((uint64_t)v38, (uint64_t *)&unk_10079C850);
    }
    v34[1] = a1;
    uint64_t v24 = v40;
    uint64_t v25 = sub_100038D28(v38, v39);
    uint64_t v26 = *(void *)(v23 - 8);
    double v27 = __chkstk_darwin(v25);
    uint64_t v29 = (char *)v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v26 + 16))(v29, v27);
    sub_10003B6F8((uint64_t)v38, (uint64_t *)&unk_10079C850);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v23);
    sub_100398360((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload)
      {
        sub_100398360((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        id v31 = *v6;
        sub_100034624((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        type metadata accessor for ReminderEntity();
        id v32 = v31;
        uint64_t v33 = v35;
        AppEntityID.init(objectID:)();
        sub_1003889DC((unint64_t *)&unk_10079C860, (void (*)(uint64_t))&type metadata accessor for ReminderEntity);
        UIView.setAssociatedAppEntity<A>(entityType:identifier:)();

        (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v37);
        return sub_100034624((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
    }
    else
    {
      sub_100034624((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    }
    UIView.removeAssociatedAppEntity()();
    return sub_100034624((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return result;
}

id sub_100393C38()
{
  uint64_t v0 = self;
  id v1 = [v0 sharedApplication];
  URL._bridgeToObjectiveC()(v2);
  uint64_t v4 = v3;
  id v5 = [v1 canOpenURL:v3];

  if (v5)
  {
    id v6 = [v0 sharedApplication];
    URL._bridgeToObjectiveC()(v7);
    uint64_t v9 = v8;
    sub_10042265C((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_1003889DC(&qword_10078AC50, type metadata accessor for OpenExternalURLOptionsKey);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 openURL:v9 options:isa completionHandler:0];
  }
  return v5;
}

uint64_t sub_100393D80()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100393DB8(uint64_t a1)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  LOBYTE(a1) = sub_10037C2D4(a1);

  return a1 & 1;
}

id sub_100393DFC(void *a1)
{
  return sub_10038B968(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100393E08()
{
  return sub_10038CCD4() & 1;
}

BOOL sub_100393E28(uint64_t a1)
{
  return sub_10037C280(a1);
}

uint64_t sub_100393E34(uint64_t a1)
{
  return sub_10037C048(a1);
}

uint64_t sub_100393E40()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100393E80()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListHighlightTarget() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      break;
    case 1:
      type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_26;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_25;
            default:
              goto LABEL_27;
          }
          goto LABEL_27;
        case 1u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_26:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_25:
              uint64_t v16 = type metadata accessor for Date();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v0 + v3, v16);
              break;
            default:
              break;
          }
LABEL_27:
          uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v18 = v5 + *(int *)(v17 + 20);
          if (*(void *)(v18 + 8))
          {
            swift_bridgeObjectRelease();
            sub_1000510EC(*(void **)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(unsigned char *)(v18 + 64));
            int v19 = *(unsigned __int8 *)(v18 + 120);
            if (v19 != 255) {
              sub_10003B9C0(*(void **)(v18 + 72), *(void *)(v18 + 80), *(void *)(v18 + 88), *(void *)(v18 + 96), *(void *)(v18 + 104), *(void *)(v18 + 112), v19 & 1);
            }
          }
          id v10 = *(id *)(v5 + *(int *)(v17 + 44));
          goto LABEL_40;
        case 2u:

          v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v5, 1, v20))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          goto LABEL_41;
        case 3u:

          v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v5, 1, v21))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          goto LABEL_41;
        case 4u:

          v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v5, 1, v22))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          goto LABEL_41;
        case 5u:
          goto LABEL_13;
        case 6u:
LABEL_39:
          id v10 = *(id *)v5;
          goto LABEL_40;
        case 7u:
LABEL_9:
          uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v0 + v3, 1, v7))
          {
            swift_bridgeObjectRelease();
            uint64_t v8 = v5 + *(int *)(v7 + 20);
            uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
          }
          v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          if (!*(void *)(v5 + 8)) {
            goto LABEL_41;
          }
          swift_bridgeObjectRelease();
LABEL_13:
          id v10 = *(id *)(v5 + 16);
LABEL_40:

          break;
        case 8u:
LABEL_14:
          uint64_t v11 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
          {
            goto LABEL_41;
          }
LABEL_37:
          uint64_t v12 = type metadata accessor for Date();
LABEL_38:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v5, v12);
          break;
        case 9u:
LABEL_16:
          v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v12 = type metadata accessor for AnyTip();
          goto LABEL_38;
        default:
          goto LABEL_41;
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_26;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_25;
            default:
              goto LABEL_27;
          }
          goto LABEL_27;
        case 1u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_26;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_25;
            default:
              goto LABEL_27;
          }
          goto LABEL_27;
        case 2u:

          v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v5, 1, v13))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          break;
        case 3u:

          v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          break;
        case 4u:

          v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v5, 1, v15))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          break;
        case 5u:
          goto LABEL_13;
        case 6u:
          goto LABEL_39;
        case 7u:
          goto LABEL_9;
        case 8u:
          goto LABEL_14;
        case 9u:
          goto LABEL_16;
        default:
          goto LABEL_41;
      }
      break;
  }
LABEL_41:
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 9, v2 | 7);
}

void sub_100394828(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListHighlightTarget() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10037EE18(a1, *(void *)(v1 + 16), v1 + v4, *(void *)(v1 + v5), *(unsigned __int8 *)(v1 + v5 + 8));
}

uint64_t sub_1003948DC()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListHighlightTarget.TargetItem() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = v0 + v3;
  type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:

  return _swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_100394EDC()
{
  return sub_100395560((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_10037F208);
}

uint64_t sub_100394EF4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100394F2C(uint64_t a1)
{
  return sub_10032D894(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100394F48()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListHighlightTarget.TargetItem() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:

  return _swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_100395548()
{
  return sub_100395560((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_10037F6BC);
}

uint64_t sub_100395560(uint64_t (*a1)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for TTRRemindersListHighlightTarget.TargetItem() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(unsigned __int8 *)(v1 + v3 + *(void *)(v2 + 64));

  return a1(v4, v1 + v3, v5);
}

uint64_t sub_1003955FC(uint64_t *a1)
{
  return sub_10012A9C4(a1);
}

uint64_t sub_100395620@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  return sub_100034240(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1003956A0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1003956D8(uint64_t a1, char a2)
{
  return sub_1005FD8DC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1003956E0()
{
  return sub_1005FD9A8();
}

void sub_1003956E8()
{
}

uint64_t sub_1003956F0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100395700()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100395710(uint64_t a1)
{
  return sub_1004E7218(a1, v1);
}

uint64_t sub_100395718()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039575C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10038A9EC(a1, v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100395804()
{
  return sub_1004E7258(v0);
}

uint64_t sub_10039580C(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t (*a9)(uint64_t, BOOL))
{
  if (*(unsigned char *)(result + 24) == 1)
  {
    uint64_t v14 = result;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      if (*(unsigned char *)(v14 + 25))
      {
        if (qword_100785630 != -1) {
          swift_once();
        }
        uint64_t v15 = type metadata accessor for Logger();
        sub_100018BF8(v15, (uint64_t)qword_1007A1BD0);
        uint64_t v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v16, v17)) {
          goto LABEL_17;
        }
        int v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v18 = 0;
        int v19 = "scrollWithCompensationTo: finishing scroll session unconditionally.";
      }
      else
      {
        if ((a3(a5) & 1) == 0)
        {
          uint64_t v23 = (unsigned char *)(a6 + 16);
          uint64_t v24 = (void *)(a8 + 16);
          swift_beginAccess();
          *(unsigned char *)(a6 + 16) = 1;
          if (a7)
          {
            swift_beginAccess();
            BOOL v25 = *v24 < 3;
          }
          else
          {
            BOOL v25 = 0;
          }
          uint64_t v26 = a9;
          if (qword_100785630 != -1) {
            swift_once();
          }
          uint64_t v27 = type metadata accessor for Logger();
          sub_100018BF8(v27, (uint64_t)qword_1007A1BD0);
          uint64_t v28 = Logger.logObject.getter();
          os_log_type_t v29 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v28, v29))
          {
            uint64_t v30 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v30 = 67109120;
            BOOL v37 = v25;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v28, v29, "scrollWithCompensationTo: Performing another scroll to item because it has yet to become visible upon end of scrolling animation. {animated: %{BOOL}d}", v30, 8u);
            uint64_t v26 = a9;
            swift_slowDealloc();
          }

          char v31 = v26(a5, v25);
          uint64_t result = swift_beginAccess();
          if (__OFADD__(*v24, 1))
          {
            __break(1u);
            return result;
          }
          ++*v24;
          swift_beginAccess();
          *uint64_t v23 = 0;
          if ((v31 & 1) == 0)
          {
            id v32 = Logger.logObject.getter();
            os_log_type_t v33 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v32, v33))
            {
              uint64_t v34 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v34 = 0;
              _os_log_impl((void *)&_mh_execute_header, v32, v33, "scrollWithCompensationTo: no animation after scroll", v34, 2u);
              swift_slowDealloc();
            }

            swift_retain();
            PassthroughSubject.send(_:)();
            swift_release();
          }
          return swift_release();
        }
        if (qword_100785630 != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        sub_100018BF8(v22, (uint64_t)qword_1007A1BD0);
        uint64_t v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v16, v17))
        {
LABEL_17:

          if (*(unsigned char *)(v14 + 24) == 1)
          {
            *(unsigned char *)(v14 + 24) = 0;
            if (*(void *)(v14 + 16))
            {
              swift_retain();
              AnyCancellable.cancel()();
              swift_release();
            }
            uint64_t v36 = (char *)&type metadata for () + 8;
            DeferredPromise.resolve(_:)();
            sub_100038CD8((uint64_t)v35);
          }
          return swift_release();
        }
        int v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v18 = 0;
        int v19 = "scrollWithCompensationTo: target item has become visible upon end of scrolling animation.";
      }
      _os_log_impl((void *)&_mh_execute_header, v16, v17, v19, v18, 2u);
      swift_slowDealloc();
      goto LABEL_17;
    }
    *(unsigned char *)(v14 + 24) = 0;
    if (*(void *)(v14 + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    uint64_t v20 = type metadata accessor for PromiseError();
    sub_1003889DC((unint64_t *)&qword_10078AD80, (void (*)(uint64_t))&type metadata accessor for PromiseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, enum case for PromiseError.cancelled(_:), v20);
    DeferredPromise.reject(_:)();
    return swift_errorRelease();
  }
  return result;
}

NSObject *sub_100395D54(uint64_t a1)
{
  return sub_10037B564(a1);
}

void sub_100395D5C()
{
  sub_10037D4C8(*(void *)(v0 + 16));
}

uint64_t sub_100395D78()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100395D88(uint64_t a1)
{
  return sub_10037AB58(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_100395DA8()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((v3 + v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1003963F4()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  return sub_10039580C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), v0 + v2, *(void *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(uint64_t, BOOL))(v0+ ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1003964B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10038A6F4(*(void **)a1, *(void *)(a1 + 8), v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_10039654C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_10038ACEC(a1, v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1003965E0()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_100396BEC()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10038B038(v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100396C6C()
{
  return sub_1003DDFE0(*(uint64_t (**)(double))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100396C7C()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100396CBC(void **a1)
{
  return sub_100386150(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100396CDC()
{
  return sub_1003863E4();
}

uint64_t sub_100396CE4(uint64_t a1)
{
  return sub_100379C5C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100396CEC(uint64_t a1)
{
  return sub_1003790A0(a1);
}

void sub_100396CF4(void (*a1)(char *, char *, uint64_t), char a2, char a3)
{
}

uint64_t sub_100396CFC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100396D3C()
{
}

uint64_t sub_100396D44()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100396D54()
{
  sub_10037F9A8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id sub_100396D5C()
{
  return sub_10037BA04();
}

void sub_100396D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100376760(a1, a2, a3, v3, (void (*)(uint64_t, uint64_t))sub_10039102C);
}

void sub_100396D94(uint64_t a1, uint64_t a2)
{
}

void sub_100396D9C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_100396DA4(uint64_t a1)
{
  return sub_10038B900(a1);
}

void sub_100396DAC(uint64_t a1, uint64_t a2)
{
  sub_100377578(a1, a2, v2, (void (*)(uint64_t, uint64_t))sub_100382A44);
}

uint64_t sub_100396DDC(uint64_t a1, uint64_t a2)
{
  return sub_1003775F0(a1, a2);
}

void sub_100396DE4()
{
}

uint64_t sub_100396DEC@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_100377910(a1, a2);
}

void sub_100396DF4()
{
}

void sub_100396E10()
{
}

uint64_t sub_100396E18()
{
  return sub_10038DA30();
}

uint64_t sub_100396E34(uint64_t a1, uint64_t a2)
{
  return sub_100377B5C(a1, a2);
}

uint64_t sub_100396E3C()
{
  return sub_100377D6C();
}

void *sub_100396E44(void *a1, void *a2, uint64_t a3)
{
  return sub_10038D8FC(a1, a2, a3);
}

void *sub_100396E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10038D988(a1, a2, a3);
}

uint64_t sub_100396E54(uint64_t a1, uint64_t a2)
{
  return sub_10038DA80(a1, a2);
}

uint64_t sub_100396E5C()
{
  return sub_10038DC04() & 1;
}

uint64_t sub_100396E7C()
{
  return sub_10038DC54() & 1;
}

void sub_100396E9C()
{
}

void sub_100396EA4()
{
}

uint64_t sub_100396EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10036F8DC(a1, a2, a3);
}

uint64_t sub_100396EB4(uint64_t a1)
{
  return a1;
}

void sub_100396F18()
{
}

void sub_100396F20()
{
}

void sub_100396F3C()
{
}

uint64_t sub_100396F58(uint64_t a1, uint64_t a2)
{
  return sub_10036E110(a1, a2);
}

void sub_100396F60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_100396F68(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

void sub_100396FAC(uint64_t a1, uint64_t a2)
{
}

void sub_100396FCC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100396FEC()
{
  return sub_10036E88C();
}

uint64_t sub_100396FF4(uint64_t a1, uint64_t a2)
{
  return sub_10036E8E0(a1, a2, v2, (uint64_t (*)(uint64_t))sub_1003903CC);
}

uint64_t sub_100397024(uint64_t a1, uint64_t a2)
{
  return sub_10036E8E0(a1, a2, v2, (uint64_t (*)(uint64_t))sub_1003904E8);
}

void *sub_100397054(uint64_t a1, uint64_t a2)
{
  return sub_10036E95C(a1, a2);
}

void sub_10039705C()
{
}

void sub_100397064()
{
}

uint64_t sub_10039706C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10036EB10(a1, a2, a3, a4, a5, v5, (uint64_t *)&unk_100788DC0);
}

void sub_100397090(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
}

unint64_t sub_10039709C()
{
  return (unint64_t)sub_10036EDE0() & 1;
}

unint64_t sub_1003970BC()
{
  return (unint64_t)sub_10036ED3C() & 1;
}

void sub_1003970DC()
{
}

uint64_t sub_1003970F8()
{
  return sub_10036EE34();
}

void sub_100397100(uint64_t a1, uint64_t a2)
{
  sub_10036EF18(a1, a2, v2, (void (*)(uint64_t))sub_100390724);
}

void sub_100397130()
{
}

uint64_t sub_100397138(char *a1, uint64_t a2, double a3, double a4)
{
  return sub_10036F164(a1, a2, a3, a4);
}

void *sub_100397140()
{
  return sub_100087264();
}

void sub_10039715C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100397164()
{
}

uint64_t sub_10039716C(uint64_t a1, uint64_t a2)
{
  return sub_100375F2C(a1, a2, v2, sub_1003908A0) & 1;
}

void sub_1003971A0(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

id sub_1003971AC@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  return sub_100397F14(a1, a2);
}

uint64_t sub_1003971C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1003977B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10038172C(v4, a1);
}

uint64_t sub_100397828()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 25) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100397E24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  char v12 = *(unsigned char *)(v4 + 24);

  sub_100381A80(a1, a2, a3, a4, v10, v12, v11);
}

uint64_t sub_100397EC4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100397EFC(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

id sub_100397F14@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  id result = sub_10038147C(*(void *)(v2 + 24), *a1);
  *a2 = result;
  return result;
}

uint64_t sub_100397F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_1007AD380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100397FC4()
{
  return sub_1003801F0();
}

void *sub_100397FCC()
{
  return sub_1003802C4();
}

unint64_t sub_100397FD4()
{
  unint64_t result = qword_10079CA38;
  if (!qword_10079CA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079CA38);
  }
  return result;
}

uint64_t sub_100398028()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100398080(uint64_t a1, uint64_t a2)
{
  return sub_100375C60(a1, a2);
}

void sub_100398088(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100398090(uint64_t a1, uint64_t a2)
{
  return sub_100375E50(a1, a2);
}

uint64_t sub_100398098(uint64_t a1, uint64_t a2)
{
  return sub_100025270(a1, a2, v2, (uint64_t (*)(uint64_t, uint64_t))sub_10037FBB4);
}

uint64_t sub_1003980C8(uint64_t a1, uint64_t a2)
{
  return sub_100375F2C(a1, a2, v2, sub_1003927E8) & 1;
}

uint64_t sub_1003980FC(uint64_t a1, uint64_t a2)
{
  return sub_1003761D4(a1, a2);
}

void sub_100398104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void sub_10039810C(uint64_t *a1)
{
  sub_100373204(*a1, v1, (void (*)(uint64_t, uint64_t))sub_10036FB7C);
}

uint64_t sub_100398140()
{
  return sub_100374288(v0[2], v0[3], v0[4]);
}

void sub_10039814C(uint64_t a1, uint64_t a2)
{
  sub_100377578(a1, a2, v2, (void (*)(uint64_t, uint64_t))sub_100081A94);
}

uint64_t sub_10039817C@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_100377708(a1, a2);
}

void sub_100398184()
{
}

uint64_t sub_10039818C(uint64_t a1, uint64_t a2)
{
  return sub_100377CE4(a1, a2, v2, (uint64_t (*)(uint64_t))sub_100093D98);
}

uint64_t sub_1003981BC(uint64_t a1, uint64_t a2)
{
  return sub_100377CE4(a1, a2, v2, sub_100094154);
}

void *sub_1003981EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10038D88C(a1, a2, a3);
}

void sub_1003981F4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1003981FC(uint64_t a1, uint64_t a2)
{
  return sub_10036E0A8(a1, a2);
}

void sub_100398204(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

void sub_10039820C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

void sub_100398250(uint64_t a1, uint64_t a2)
{
}

void sub_100398258(uint64_t a1, uint64_t a2)
{
}

void sub_100398260()
{
}

uint64_t sub_100398268(uint64_t a1, uint64_t a2)
{
  return sub_10036E784(a1, a2);
}

uint64_t sub_100398270(uint64_t a1, uint64_t a2)
{
  return sub_10036E8E0(a1, a2, v2, (uint64_t (*)(uint64_t))sub_100092B88);
}

uint64_t sub_1003982A0(uint64_t a1, uint64_t a2)
{
  return sub_10036E8E0(a1, a2, v2, (uint64_t (*)(uint64_t))sub_100093244);
}

void sub_1003982D0(uint64_t a1, uint64_t a2)
{
  sub_10036EF18(a1, a2, v2, (void (*)(uint64_t))sub_100093A7C);
}

void sub_100398300()
{
}

uint64_t sub_100398308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10036EB10(a1, a2, a3, a4, a5, v5, (uint64_t *)&unk_100788D10);
}

void sub_10039832C(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
}

void sub_100398338()
{
}

id sub_100398340(uint64_t a1, uint64_t a2)
{
  return sub_10036F0C4(a1, a2);
}

void sub_100398348(uint64_t a1)
{
}

void sub_100398350(uint64_t a1)
{
}

uint64_t sub_100398358(uint64_t a1, uint64_t a2)
{
  return sub_10036F680(a1, a2);
}

uint64_t sub_100398360(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1003983C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100376760(a1, a2, a3, v3, sub_100092A74);
}

uint64_t sub_1003983F8(uint64_t a1, uint64_t a2)
{
  return sub_100375FAC(a1, a2);
}

void sub_100398400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

ValueMetadata *type metadata accessor for TTRListSharingViewModel()
{
  return &type metadata for TTRListSharingViewModel;
}

uint64_t sub_1003984B0(uint64_t result)
{
  unint64_t result = result;
  switch((char)result)
  {
    case 1:
      unint64_t v1 = 0x80000001006B7B00;
      uint64_t v2 = 0x747065636341;
      goto LABEL_4;
    case 2:
      unint64_t v1 = 0x80000001006B7AC0;
      uint64_t v2 = 0x6E696C636544;
LABEL_4:
      uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
      unint64_t v4 = 0xE800000000000000;
      unint64_t v5 = 0xD000000000000032;
      goto LABEL_7;
    case 3:
      unint64_t v5 = 0xD000000000000031;
      unint64_t v1 = 0x80000001006B7A80;
      uint64_t v3 = 0x676E69646E6550;
      unint64_t v4 = 0xE700000000000000;
      goto LABEL_7;
    case 4:
      unint64_t v5 = 0xD000000000000026;
      unint64_t v1 = 0x80000001006B7A50;
      uint64_t v3 = 0x72656E774FLL;
      unint64_t v4 = 0xE500000000000000;
LABEL_7:
      unint64_t result = TTRLocalizedString(_:comment:)(*(Swift::String *)&v3, *(Swift::String *)(&v1 - 1))._countAndFlagsBits;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003985B8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079CAD0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079CAD0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL sub_100398680(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[5];
  void v10[4] = a1[4];
  v11[0] = v2;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)a1 + 89);
  long long v3 = a1[1];
  v10[0] = *a1;
  v10[1] = v3;
  long long v4 = a1[3];
  v10[2] = a1[2];
  v10[3] = v4;
  long long v5 = a2[1];
  v12[0] = *a2;
  v12[1] = v5;
  long long v6 = a2[2];
  long long v7 = a2[3];
  *(_OWORD *)&v13[9] = *(_OWORD *)((char *)a2 + 89);
  long long v8 = a2[5];
  v12[4] = a2[4];
  *(_OWORD *)uint64_t v13 = v8;
  void v12[2] = v6;
  v12[3] = v7;
  return sub_1003986F8((uint64_t)v10, (uint64_t)v12);
}

BOOL sub_1003986EC(uint64_t *a1, uint64_t *a2)
{
  return sub_1000B9F14(*a1, *a2);
}

BOOL sub_1003986F8(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  long long v5 = *(void **)a2;
  if (*(void *)a1)
  {
    if (!v5) {
      return 0;
    }
    sub_1000368FC(0, qword_10078E3D0);
    id v6 = v5;
    id v7 = v4;
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v9)
  {
    if (v10) {
      return 0;
    }
LABEL_13:
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = *(void *)(a2 + 32);
    if (v13)
    {
      if (!v14) {
        return 0;
      }
      if (*(void *)(a1 + 24) != *(void *)(a2 + 24) || v13 != v14)
      {
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v14)
    {
      return 0;
    }
    uint64_t v16 = *(void *)(a1 + 48);
    uint64_t v17 = *(void *)(a2 + 48);
    if (v16)
    {
      if (!v17) {
        return 0;
      }
      if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || v16 != v17)
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v18 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v17)
    {
      return 0;
    }
    uint64_t v19 = *(void *)(a1 + 64);
    uint64_t v20 = *(void *)(a2 + 64);
    if (v19)
    {
      if (!v20) {
        return 0;
      }
      if (*(void *)(a1 + 56) != *(void *)(a2 + 56) || v19 != v20)
      {
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v21 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v20)
    {
      return 0;
    }
    uint64_t v22 = *(void *)(a1 + 80);
    uint64_t v23 = *(void *)(a2 + 80);
    if (v22)
    {
      if (!v23) {
        return 0;
      }
      if (*(void *)(a1 + 72) != *(void *)(a2 + 72) || v22 != v23)
      {
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v24 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v23)
    {
      return 0;
    }
    uint64_t v25 = *(void *)(a1 + 96);
    uint64_t v26 = *(void *)(a2 + 96);
    if (v25)
    {
      if (v26)
      {
        if (*(void *)(a1 + 88) != *(void *)(a2 + 88) || v25 != v26)
        {
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          BOOL result = 0;
          if ((v27 & 1) == 0) {
            return result;
          }
        }
        return *(unsigned __int8 *)(a1 + 104) == *(unsigned __int8 *)(a2 + 104);
      }
    }
    else if (!v26)
    {
      return *(unsigned __int8 *)(a1 + 104) == *(unsigned __int8 *)(a2 + 104);
    }
    return 0;
  }
  if (!v10) {
    return 0;
  }
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && v9 == v10) {
    goto LABEL_13;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  BOOL result = 0;
  if (v11) {
    goto LABEL_13;
  }
  return result;
}

void sub_100398938(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  char v16 = a11;
  if (a10)
  {
    uint64_t v31 = a4;
    uint64_t v32 = a5;
    uint64_t v33 = a6;
    uint64_t v34 = a7;
    String.lowercased()();
    NSString v17 = String._bridgeToObjectiveC()();
    unsigned int v18 = [v17 hasMailto];

    NSString v19 = String._bridgeToObjectiveC()();
    uint64_t v20 = v19;
    if (v18)
    {
      swift_bridgeObjectRelease();
      id v21 = [v20 rem_removingMailto];

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      uint64_t v25 = 0;
      uint64_t v26 = 0;
    }
    else
    {
      unsigned int v27 = [v19 hasTel];

      if (v27)
      {
        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v29 = [v28 rem_removingTel];

        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v30;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = 0;
        uint64_t v26 = 0;
      }
      uint64_t v22 = 0;
      uint64_t v24 = 0;
    }
    a7 = v34;
    char v16 = a11;
    a5 = v32;
    a6 = v33;
    a4 = v31;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = v22;
  *(void *)(a9 + 80) = v24;
  *(void *)(a9 + 88) = v25;
  *(void *)(a9 + 96) = v26;
  *(unsigned char *)(a9 + 104) = v16;
}

void sub_100398B00(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  __chkstk_darwin(v4);
  uint64_t v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v35 = [a1 objectID];
  id v6 = [a1 displayName];
  if (v6)
  {
    id v7 = v6;
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v9 = 0;
  }
  id v10 = [a1 firstName:v31];
  if (v10)
  {
    char v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  id v15 = [a1 lastName];
  if (v15)
  {
    char v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  id v20 = [a1 address];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  id v25 = [a1 status];
  if ((unint64_t)v25 >= 6)
  {
    if (qword_1007854E8 != -1) {
      swift_once();
    }
    uint64_t v29 = v32;
    uint64_t v30 = sub_100018BF8(v32, (uint64_t)qword_10079CAD0);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, v30, v29);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_1003AA010((uint64_t)"unknown sharee status", 21, 2);
    __break(1u);
  }
  else
  {
    sub_100398938((uint64_t)v35, v34, v9, v12, v14, v17, v19, v22, (uint64_t)v36, v24, 0x30000020100uLL >> (8 * v25));
    long long v26 = v37[0];
    a2[4] = v36[4];
    a2[5] = v26;
    *(_OWORD *)((char *)a2 + 89) = *(_OWORD *)((char *)v37 + 9);
    long long v27 = v36[1];
    *a2 = v36[0];
    a2[1] = v27;
    long long v28 = v36[3];
    a2[2] = v36[2];
    a2[3] = v28;
  }
}

__n128 sub_100398DFC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 sharedOwnerID];
  id v5 = [a1 sharedOwnerName];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  id v10 = [a1 sharedOwnerAddress];
  if (v10)
  {
    char v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  sub_100398938((uint64_t)v4, v7, v9, 0, 0, 0, 0, v12, (uint64_t)v18, v14, 4);
  long long v15 = v19[0];
  *(_OWORD *)(a2 + 64) = v18[4];
  *(_OWORD *)(a2 + 80) = v15;
  *(_OWORD *)(a2 + 89) = *(_OWORD *)((char *)v19 + 9);
  long long v16 = v18[1];
  *(_OWORD *)a2 = v18[0];
  *(_OWORD *)(a2 + 16) = v16;
  __n128 result = (__n128)v18[3];
  *(_OWORD *)(a2 + 32) = v18[2];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

void *sub_100398F24(void *a1)
{
  id v1 = a1;
  id v2 = [a1 shareeContext];
  if (v2)
  {
    long long v3 = v2;
    id v4 = [v2 sharees];

    sub_1000368FC(0, &qword_10078A128);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v5 >> 62)) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v7 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_14;
  }
LABEL_3:
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  *(void *)&v30[0] = _swiftEmptyArrayStorage;
  uint64_t v7 = v30;
  sub_1004D39C0(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0)
  {
    __break(1u);
LABEL_24:
    uint64_t v7 = sub_100570D1C(0, v7[2] + 1, 1, v7);
    goto LABEL_19;
  }
  uint64_t v8 = 0;
  uint64_t v7 = *(void **)&v30[0];
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v5 + 8 * v8 + 32);
    }
    id v10 = v9;
    sub_100398B00(v9, v28);

    *(void *)&v30[0] = v7;
    unint64_t v12 = v7[2];
    unint64_t v11 = v7[3];
    if (v12 >= v11 >> 1)
    {
      sub_1004D39C0(v11 > 1, v12 + 1, 1);
      uint64_t v7 = *(void **)&v30[0];
    }
    ++v8;
    v7[2] = v12 + 1;
    uint64_t v13 = &v7[14 * v12];
    long long v14 = v28[0];
    long long v15 = v28[2];
    void v13[3] = v28[1];
    v13[4] = v15;
    v13[2] = v14;
    long long v16 = v28[3];
    long long v17 = v28[4];
    long long v18 = v29[0];
    *(_OWORD *)((char *)v13 + 121) = *(_OWORD *)((char *)v29 + 9);
    v13[6] = v17;
    v13[7] = v18;
    v13[5] = v16;
  }
  while (v6 != v8);
  swift_bridgeObjectRelease();
LABEL_16:
  if ([v1 isOwnedByMe])
  {

    return v7;
  }
  id v1 = v1;
  sub_100398DFC(v1, (uint64_t)v30);

  sub_100099404((void **)v30);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_24;
  }
LABEL_19:
  unint64_t v20 = v7[2];
  unint64_t v19 = v7[3];
  if (v20 >= v19 >> 1) {
    uint64_t v7 = sub_100570D1C((void *)(v19 > 1), v20 + 1, 1, v7);
  }
  v7[2] = v20 + 1;
  id v21 = &v7[14 * v20];
  long long v22 = v30[0];
  long long v23 = v30[2];
  void v21[3] = v30[1];
  v21[4] = v23;
  v21[2] = v22;
  long long v24 = v30[3];
  long long v25 = v30[4];
  long long v26 = v31[0];
  *(_OWORD *)((char *)v21 + 121) = *(_OWORD *)((char *)v31 + 9);
  v21[6] = v25;
  v21[7] = v26;
  v21[5] = v24;

  sub_10009948C((id *)v30);
  return v7;
}

uint64_t destroy for TTRListSharingViewModel.Participant(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRListSharingViewModel.Participant(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  id v10 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRListSharingViewModel.Participant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for TTRListSharingViewModel.Participant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRListSharingViewModel.Participant(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 105)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRListSharingViewModel.Participant(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 105) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRListSharingViewModel.Participant()
{
  return &type metadata for TTRListSharingViewModel.Participant;
}

unsigned char *storeEnumTagSinglePayload for TTRListSharingViewModel.ParticipantStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100399654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRListSharingViewModel.ParticipantStatus()
{
  return &type metadata for TTRListSharingViewModel.ParticipantStatus;
}

unint64_t sub_100399690()
{
  unint64_t result = qword_10079CAE8;
  if (!qword_10079CAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079CAE8);
  }
  return result;
}

void sub_1003996E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9 = [objc_allocWithZone((Class)REMSaveRequest) initWithStore:*(void *)(v6 + 16)];
  static TTRDebugExampleInserts.makeSomeExampleInserts(saveRequest:accounts:lists:reminders:subtasks:)();
  sub_10007CD0C();
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a6;
  v13[4] = sub_1003999AC;
  v13[5] = v11;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100009ADC;
  void v13[3] = &unk_100748200;
  unint64_t v12 = _Block_copy(v13);
  sub_10006C140(a5);
  swift_release();
  [v9 saveWithQueue:v10 completion:v12];
  _Block_release(v12);
}

void sub_100399840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [objc_allocWithZone((Class)REMSaveRequest) initWithStore:*(void *)(v4 + 16)];
  static TTRDebugExampleInserts.makeSomeExampleInsertsToCloudKitAccount(saveRequest:lists:reminders:)();
  sub_10007CD0C();
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  v11[4] = sub_1003999AC;
  v11[5] = v9;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_100009ADC;
  v11[3] = &unk_100748250;
  uint64_t v10 = _Block_copy(v11);
  sub_10006C140(a3);
  swift_release();
  [v7 saveWithQueue:v8 completion:v10];
  _Block_release(v10);
}

uint64_t type metadata accessor for TTRIDebugMenuDataManager()
{
  return self;
}

uint64_t sub_1003999B4()
{
  id v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1003999EC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  int v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  long long v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1004D3668(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    int v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        long long v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1004D3668(v7 > 1, v8 + 1, 1);
          int v3 = v17;
        }
        ++v5;
        uint64_t v15 = type metadata accessor for TTRIRemindersListDragReminder();
        long long v16 = &off_10074E250;
        *(void *)&long long v14 = v6;
        v3[2] = v8 + 1;
        sub_100038ED8(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        long long v17 = v3;
        unint64_t v11 = v3[2];
        unint64_t v12 = v3[3];
        id v13 = v10;
        if (v11 >= v12 >> 1)
        {
          sub_1004D3668(v12 > 1, v11 + 1, 1);
          int v3 = v17;
        }
        uint64_t v15 = type metadata accessor for TTRIRemindersListDragReminder();
        long long v16 = &off_10074E250;
        *(void *)&long long v14 = v13;
        v3[2] = v11 + 1;
        sub_100038ED8(&v14, (uint64_t)&v3[5 * v11 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_100399BB8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1004D3710(0, v1, 0);
    uint64_t v3 = a1 + 40;
    do
    {
      id v4 = *(id *)(v3 - 8);
      sub_10003B754(&qword_10079CD90);
      sub_10003B754(&qword_10079CD98);
      swift_dynamicCast();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1004D3710(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v6 = _swiftEmptyArrayStorage[2];
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v6 >= v5 >> 1) {
        sub_1004D3710(v5 > 1, v6 + 1, 1);
      }
      v3 += 16;
      _swiftEmptyArrayStorage[2] = v6 + 1;
      unint64_t v7 = &_swiftEmptyArrayStorage[2 * v6];
      v7[4] = v9;
      v7[5] = v10;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_100399D00(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1004D3934(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_10003B754(&qword_10079CDA0);
      sub_10003B754(&qword_100798710);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1004D3934(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_1004D3934(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      _swiftEmptyArrayStorage[v5 + 4] = v7;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100399E44(unint64_t a1)
{
  return sub_100013E28(a1, (void (*)(void))type metadata accessor for TTRIRemindersListRouter.ActivityItemSource);
}

void *sub_100399E5C(unint64_t a1)
{
  return sub_100399E9C(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1004D3B04, (uint64_t)&protocol witness table for TTRITableCell<A>);
}

void *sub_100399E7C(unint64_t a1)
{
  return sub_100399E9C(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1004D3AD4, (uint64_t)&protocol witness table for TTRITableSection);
}

void *sub_100399E9C(unint64_t a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t), uint64_t a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = (void *)a2(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = 0;
      do
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v11 = _swiftEmptyArrayStorage[2];
        unint64_t v10 = _swiftEmptyArrayStorage[3];
        if (v11 >= v10 >> 1) {
          a2(v10 > 1, v11 + 1, 1);
        }
        ++v8;
        _swiftEmptyArrayStorage[2] = v11 + 1;
        unint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
        v12[4] = v9;
        _OWORD v12[5] = a3;
      }
      while (v6 != v8);
    }
    else
    {
      id v13 = (uint64_t *)(a1 + 32);
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      uint64_t v15 = 2 * v14;
      do
      {
        uint64_t v16 = *v13;
        unint64_t v17 = _swiftEmptyArrayStorage[3];
        swift_retain();
        if (v14 >= v17 >> 1) {
          a2(v17 > 1, v14 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v14 + 1;
        long long v18 = &_swiftEmptyArrayStorage[v15];
        v18[4] = v16;
        _OWORD v18[5] = a3;
        v15 += 2;
        ++v13;
        ++v14;
        --v6;
      }
      while (v6);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_10039A044(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  id v13 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100010F0C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100010F0C(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_100010F0C(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v7 + 1;
        sub_100038E1C(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100010F0C(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1)
        {
          sub_100010F0C(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v11 + 1;
        sub_100038E1C(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_10039A2A8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1004D3C4C(0, v1, 0);
    uint64_t v3 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_10003B754(&qword_10079CD18);
      sub_10003B754(&qword_10079CD20);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1004D3C4C(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_1004D3C4C(v4 > 1, v5 + 1, 1);
      }
      v3 += 24;
      _swiftEmptyArrayStorage[2] = v5 + 1;
      unint64_t v6 = &_swiftEmptyArrayStorage[3 * v5];
      v6[4] = v8;
      v6[5] = v9;
      *((unsigned char *)v6 + 48) = v10;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10039A404()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079CB90);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079CB90);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10039A4CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v2 = sub_10003B754(&qword_100789FA0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v62 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v63 = (char *)&v60 - v8;
  uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v67 = *(void *)(v9 - 8);
  uint64_t v68 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v61 = (uint64_t *)((char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v60 - v12;
  uint64_t v13 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v1[13];
  uint64_t v17 = v1[14];
  sub_100038D28(v1 + 10, v18);
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v18, v17);
  uint64_t v65 = REMHashtagLabelCollection.labels.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  unint64_t v19 = v1;
  uint64_t v20 = v1[13];
  uint64_t v21 = v1[14];
  sub_100038D28(v1 + 10, v20);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v4, 1, 1, v5);
    uint64_t v27 = v67;
    uint64_t v26 = v68;
    goto LABEL_7;
  }
  long long v23 = (void *)v22;
  REMCustomSmartListFilterDescriptor.hashtags.getter();

  uint64_t v24 = v64;
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48))(v4, 1, v5);
  uint64_t v27 = v67;
  uint64_t v26 = v68;
  if (v25 == 1)
  {
LABEL_7:
    sub_10003B6F8((uint64_t)v4, &qword_100789FA0);
    uint64_t v44 = v66;
    static REMHashtagLabelSpecifier.empty.getter();
    char v45 = 0;
    goto LABEL_8;
  }
  uint64_t v28 = v5;
  uint64_t v29 = v63;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v63, v4, v5);
  uint64_t v30 = (uint64_t *)v62;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v62, v29, v5);
  int v31 = (*(uint64_t (**)(uint64_t *, uint64_t))(v24 + 88))(v30, v5);
  if (v31 == enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.hashtags(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v24 + 96))(v30, v5);
    uint64_t v33 = *v30;
    uint64_t v32 = v30[1];
    uint64_t v34 = (char *)v30 + *(int *)(sub_10003B754(&qword_10079CD00) + 64);
    uint64_t v35 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation();
    int v36 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v35 - 8) + 88))(v34, v35);
    if (v36 == enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:))
    {
      uint64_t v37 = sub_10003B754((uint64_t *)&unk_1007AD340);
      uint64_t v38 = v61;
      uint64_t v39 = (char *)v61 + *(int *)(v37 + 64);
      uint64_t v40 = sub_1004E5F44(v33);
      swift_bridgeObjectRelease();
      *uint64_t v38 = v40;
      uint64_t v41 = sub_1004E5F44(v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v63, v28);
      v38[1] = v41;
      uint64_t v42 = enum case for REMHashtagLabelSpecifier.Operation.and(_:);
      uint64_t v43 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v39, v42, v43);
      (*(void (**)(uint64_t *, void, uint64_t))(v27 + 104))(v38, enum case for REMHashtagLabelSpecifier.labels(_:), v26);
      uint64_t v44 = v66;
      (*(void (**)(char *, uint64_t *, uint64_t))(v27 + 32))(v66, v38, v26);
      char v45 = 3;
LABEL_8:
      char v46 = *((unsigned char *)v19 + 313);
      uint64_t v48 = v19[37];
      uint64_t v47 = v19[38];
      char v49 = *((unsigned char *)v19 + 312);
      uint64_t v50 = v69;
      *uint64_t v69 = v65;
      uint64_t v51 = (int *)type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel();
      uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 32))((char *)v50 + v51[5], v44, v26);
      *((unsigned char *)v50 + v51[6]) = v45;
      *((unsigned char *)v50 + v51[7]) = v46;
      uint64_t v53 = (char *)v50 + v51[8];
      *(void *)uint64_t v53 = v48;
      *((void *)v53 + 1) = v47;
      v53[16] = v49;
      return result;
    }
    uint64_t v44 = v66;
    if (v36 == enum case for REMCustomSmartListFilterDescriptor.Operation.or(_:))
    {
      uint64_t v54 = sub_10003B754((uint64_t *)&unk_1007AD340);
      uint64_t v55 = v61;
      uint64_t v62 = (char *)v61 + *(int *)(v54 + 64);
      uint64_t v56 = sub_1004E5F44(v33);
      swift_bridgeObjectRelease();
      *uint64_t v55 = v56;
      uint64_t v57 = sub_1004E5F44(v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v63, v28);
      v55[1] = v57;
      uint64_t v58 = enum case for REMHashtagLabelSpecifier.Operation.or(_:);
      uint64_t v59 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 104))(v62, v58, v59);
      (*(void (**)(uint64_t *, void, uint64_t))(v27 + 104))(v55, enum case for REMHashtagLabelSpecifier.labels(_:), v26);
      (*(void (**)(char *, uint64_t *, uint64_t))(v27 + 32))(v44, v55, v26);
      char v45 = 2;
      goto LABEL_8;
    }
  }
  else
  {
    if (v31 == enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.untagged(_:))
    {
      uint64_t v44 = v66;
      static REMHashtagLabelSpecifier.empty.getter();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v63, v28);
      char v45 = 4;
      goto LABEL_8;
    }
    uint64_t v44 = v66;
    if (v31 == enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.any(_:))
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v63, v28);
      (*(void (**)(char *, void, uint64_t))(v27 + 104))(v44, enum case for REMHashtagLabelSpecifier.allLabels(_:), v26);
      char v45 = 1;
      goto LABEL_8;
    }
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

void sub_10039AC54()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  sub_100038D28((void *)(v0 + 80), v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    if (REMCustomSmartListFilterDescriptor.requiresSydneyRomeKincaid.getter())
    {
      uint64_t v9 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
      type metadata accessor for MainActor();
      swift_retain();
      uint64_t v10 = static MainActor.shared.getter();
      uint64_t v11 = (void *)swift_allocObject();
      _OWORD v11[2] = v10;
      v11[3] = &protocol witness table for MainActor;
      v11[4] = v1;
      sub_1000286A4((uint64_t)v4, (uint64_t)&unk_10079CCF8, (uint64_t)v11);

      swift_release();
      return;
    }
  }
  if (*(unsigned char *)(v0 + 64) == 1)
  {
    *(unsigned char *)(v0 + 64) = 0;
    v12._object = (void *)0x80000001006A5920;
    v12._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v12);
  }
}

uint64_t sub_10039ADFC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_100789F88);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (double *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t result = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  uint64_t v15 = a1 + *(int *)(result + 32);
  if (*(void *)(v15 + 40))
  {
    uint64_t v16 = *(void *)(v2 + 272);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
    swift_bridgeObjectRelease();
    *(void *)(v15 + 40) = v18;
  }
  else if ((*(unsigned char *)(v2 + 288) & 1) == 0)
  {
    return result;
  }
  uint64_t v19 = *(void *)(v2 + 104);
  uint64_t v20 = *(void *)(v2 + 112);
  sub_100038D28((void *)(v2 + 80), v19);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_16;
  }
  uint64_t v22 = (void *)v21;
  REMCustomSmartListFilterDescriptor.location.getter();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_16:
    uint64_t result = sub_10003B6F8((uint64_t)v6, &qword_100789F88);
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  (*(void (**)(double *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  int v23 = (*(uint64_t (**)(double *, uint64_t))(v8 + 88))(v10, v7);
  if (v23 != enum case for REMCustomSmartListFilterDescriptor.FilterLocation.vehicle(_:))
  {
    if (v23 == enum case for REMCustomSmartListFilterDescriptor.FilterLocation.location(_:))
    {
      (*(void (**)(double *, uint64_t))(v8 + 96))(v10, v7);
      double v31 = v10[2];
      double v32 = v10[3];
      double v33 = v10[4];
      sub_1000368FC(0, &qword_10079CD88);
      id v34 = objc_allocWithZone((Class)CLCircularRegion);
      NSString v35 = String._bridgeToObjectiveC()();
      [v34 initWithCenter:v35 radius:v31 identifier:v32];

      int v36 = (void *)REMStructuredLocation.init(title:circularRegion:placemark:)();
      uint64_t v37 = *(void *)(v2 + 272);
      uint64_t v38 = swift_getObjectType();
      char v25 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 32))(v36, v38, v37);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      if (!*(void *)(v15 + 40)) {
        return result;
      }
LABEL_18:
      uint64_t v27 = *(void **)(v15 + 16);
      uint64_t v26 = *(void *)(v15 + 24);
      uint64_t v29 = *(void *)v15;
      uint64_t v28 = *(void *)(v15 + 8);
      char v30 = *(unsigned char *)(v15 + 32);
      sub_100246478(*(void *)v15, v28, v27, v26, v30);
      swift_bridgeObjectRetain();
      sub_1002464C8(v29, v28, v27, v26, v30);
      uint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)(v15 + 48) = v25;
      return result;
    }
    if (v23 != enum case for REMCustomSmartListFilterDescriptor.FilterLocation.any(_:)
      && v23 != enum case for REMCustomSmartListFilterDescriptor.FilterLocation.noLocation(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_17:
    char v25 = 6;
    if (!*(void *)(v15 + 40)) {
      return result;
    }
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  uint64_t result = (*(uint64_t (**)(double *, uint64_t))(v8 + 96))(v10, v7);
  if (*(void *)v10 == 1) {
    char v24 = 3;
  }
  else {
    char v24 = 6;
  }
  if (*(void *)v10 == 2) {
    char v25 = 4;
  }
  else {
    char v25 = v24;
  }
  if (*(void *)(v15 + 40)) {
    goto LABEL_18;
  }
  return result;
}

void sub_10039B2BC(uint64_t a1)
{
  uint64_t v3 = sub_10003B754(&qword_10079CD80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (id *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = a1 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 44);
  sub_100245EEC(v7, (uint64_t)v80);
  sub_100245EEC((uint64_t)v80, (uint64_t)v81);
  if (sub_100245F48((uint64_t)v81) <= 1)
  {
    uint64_t v37 = v7;
    uint64_t v8 = *(void **)TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v81).reminders._rawValue;
    uint64_t v10 = v1[13];
    uint64_t v9 = v1[14];
    id v38 = v1;
    sub_100038D28(v1 + 10, v10);
    uint64_t v11 = *(void (**)(void))(v9 + 40);
    id v12 = v8;
    v11();
    int v13 = (*(uint64_t (**)(id *, uint64_t))(v4 + 88))(v6, v3);
    if (v13 == enum case for REMAsyncOperationState.running<A>(_:))
    {
      (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);
      swift_allocObject();
      swift_weakInit();
      uint64_t v14 = (void *)zalgo.getter();
      sub_10003B754(&qword_100791C38);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();
      swift_release();

      return;
    }
    if (v13 == enum case for REMAsyncOperationState.succeeded<A>(_:))
    {
      id v38 = v12;
      (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);
      id v15 = *v6;
      id v16 = [*v6 displayName];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v18;
      uint64_t v36 = v17;

      type metadata accessor for TTRListColors();
      uint64_t v19 = sub_1000368FC(0, &qword_100791CF0);
      *((void *)&v50 + 1) = v19;
      *(void *)&long long v51 = &protocol witness table for REMList;
      *(void *)&long long v49 = v15;
      id v20 = v15;
      static TTRListColors.color(for:)();
      uint64_t v21 = v68[22];
      uint64_t v22 = v68[23];
      long long v34 = v69;
      uint64_t v23 = v70;
      uint64_t v24 = v71;
      char v25 = v72;
      sub_10003B6F8((uint64_t)&v49, &qword_100787480);
      *((void *)&v50 + 1) = v19;
      *(void *)&long long v51 = &protocol witness table for REMList;
      *(void *)&long long v49 = v20;
      id v26 = v20;
      TTRReminderDetailViewModel.BadgeViewModel.init(listProtocol:)();
      *(void *)&long long v59 = v36;
      *((void *)&v59 + 1) = v35;
      *(void *)&long long v60 = v21;
      *((void *)&v60 + 1) = v22;
      long long v61 = v34;
      *(void *)&long long v62 = v23;
      *((void *)&v62 + 1) = v24;
      LOBYTE(v63[0]) = v25;
      *(_OWORD *)((char *)v63 + 8) = v73;
      *(_OWORD *)((char *)&v63[1] + 8) = v74;
      *(_OWORD *)((char *)&v63[2] + 8) = v75;
      *(_OWORD *)((char *)&v63[3] + 8) = v76;
      *((void *)&v63[4] + 1) = v77;
      v63[5] = v78;
      char v64 = v79;
      v65[4] = v63[0];
      v65[5] = v63[1];
      char v66 = v79;
      v65[8] = v63[4];
      v65[9] = v78;
      v65[6] = v63[2];
      v65[7] = v63[3];
      v65[2] = v34;
      v65[3] = v62;
      v65[0] = v59;
      v65[1] = v60;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v65);
      uint64_t v27 = v37;
      sub_100245EEC(v37, (uint64_t)v67);
      sub_100245EEC((uint64_t)v67, (uint64_t)v68);
      int v28 = sub_100245F48((uint64_t)v68);
      if (!v28)
      {
        v32.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v68).reminders._rawValue;
        uint64_t v33 = *(void *)v32.reminders._rawValue;
        sub_1002462E8((uint64_t)v32.reminders._rawValue + 8);

        *(void *)&long long v39 = v33;
        sub_100028C3C((uint64_t)v65, (uint64_t)&v39 + 8, &qword_100792BD8);
        long long v57 = v47;
        v58[0] = v48[0];
        *(_OWORD *)((char *)v58 + 9) = *(_OWORD *)((char *)v48 + 9);
        long long v53 = v43;
        long long v54 = v44;
        long long v55 = v45;
        long long v56 = v46;
        long long v49 = v39;
        long long v50 = v40;
        long long v51 = v41;
        long long v52 = v42;
        sub_1003A88C0((uint64_t)&v49);
        goto LABEL_11;
      }
      id v29 = v38;
      if (v28 == 1)
      {
        v30.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v68).reminders._rawValue;
        uint64_t v31 = *(void *)v30.reminders._rawValue;
        sub_1002462E8((uint64_t)v30.reminders._rawValue + 8);

        *(void *)&long long v39 = v31;
        sub_100028C3C((uint64_t)v65, (uint64_t)&v39 + 8, &qword_100792BD8);
        long long v57 = v47;
        v58[0] = v48[0];
        *(_OWORD *)((char *)v58 + 9) = *(_OWORD *)((char *)v48 + 9);
        long long v53 = v43;
        long long v54 = v44;
        long long v55 = v45;
        long long v56 = v46;
        long long v49 = v39;
        long long v50 = v40;
        long long v51 = v41;
        long long v52 = v42;
        sub_1003A88C8((uint64_t)&v49);
LABEL_11:
        sub_100245EEC((uint64_t)&v49, v27);
        return;
      }
      sub_1003A88D4((uint64_t)&v59);
    }
    else if (v13 == enum case for REMAsyncOperationState.failed<A>(_:))
    {

      (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);
      swift_errorRelease();
    }
    else
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
    }
  }
}

uint64_t sub_10039B7F0(char a1)
{
  int v1 = a1 & 1;
  uint64_t v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v28 - v7;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100018BF8(v9, (uint64_t)qword_10079CB90);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = v1;
  uint64_t v15 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v15;
  *(void *)(inited + 56) = v16;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v17 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.Operation.or(_:);
  if (v1) {
    uint64_t v17 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v8, *v17, v2);
  v28[0] = self;
  v18._countAndFlagsBits = 0xD00000000000002ELL;
  v19._countAndFlagsBits = 0xD000000000000042;
  v18._object = (void *)0x80000001006B8340;
  v20._object = (void *)0x80000001006B8370;
  v19._object = (void *)0x80000001006B8390;
  v20._countAndFlagsBits = 0xD000000000000016;
  TTRLocalizedString(_:value:comment:)(v18, v20, v19);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  unint64_t v22 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v23 = swift_allocObject();
  *(id *)(v23 + 16) = v28[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v23 + v22, v5, v2);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1003A8818;
  *(void *)(v24 + 24) = v23;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100748B60;
  char v25 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v28[0] withActionName:v21 block:v25];
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10039BC7C(char a1)
{
  uint64_t v78 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  long long v75 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  long long v74 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  unsigned __int8 v77 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10003B754(&qword_10079CD30);
  __chkstk_darwin(v81);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v82 = (char *)&v68 - v8;
  uint64_t v70 = sub_10003B754(&qword_10079CD38);
  __chkstk_darwin(v70);
  uint64_t v71 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v69 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v14 = sub_10003B754(&qword_100789F98);
  uint64_t v83 = *(void *)(v14 - 8);
  __chkstk_darwin(v14 - 8);
  uint64_t v84 = v15;
  uint64_t v85 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  Swift::String v18 = (char *)&v68 - v17;
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100018BF8(v19, (uint64_t)qword_10079CB90);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v23, v19);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = a1;
  uint64_t v25 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v25;
  *(void *)(inited + 56) = v26;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v27 = v86;
  switch(a1)
  {
    case 1:
      id v29 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.any(_:);
      goto LABEL_15;
    case 2:
      unsigned char *v18 = 0;
      id v29 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.today(_:);
      goto LABEL_15;
    case 3:
      Date.init()();
      Reminders::TTRReminderIDsWithMatchingHashtagsProvider v30 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.onDate(_:);
      goto LABEL_10;
    case 4:
      Date.init()();
      Reminders::TTRReminderIDsWithMatchingHashtagsProvider v30 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.beforeDate(_:);
      goto LABEL_10;
    case 5:
      Date.init()();
      Reminders::TTRReminderIDsWithMatchingHashtagsProvider v30 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.afterDate(_:);
LABEL_10:
      uint64_t v31 = *v30;
      uint64_t v32 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
      uint64_t v33 = *(void *)(v32 - 8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v33 + 104))(v18, v31, v32);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v18, 0, 1, v32);
      *(void *)(v27 + 56) = 1;
      goto LABEL_16;
    case 6:
      long long v34 = v6;
      Date.init()();
      Date.init()();
      sub_1003A7CCC(&qword_10079CD40, (void (*)(uint64_t))&type metadata accessor for Date);
      if ((dispatch thunk of static Comparable.<= infix(_:_:)() & 1) == 0) {
        goto LABEL_19;
      }
      uint64_t v35 = v81;
      uint64_t v80 = (uint64_t)&v82[*(int *)(v81 + 48)];
      uint64_t v36 = v80;
      uint64_t v37 = v69;
      id v38 = *(void (**)(void))(v69 + 32);
      v38();
      ((void (*)(uint64_t, char *, uint64_t))v38)(v36, v12, v10);
      long long v39 = &v34[*(int *)(v35 + 48)];
      long long v40 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      v40(v34, v82, v10);
      uint64_t v41 = v80;
      v40(v39, (char *)v80, v10);
      uint64_t v42 = (uint64_t)v71;
      ((void (*)(char *, char *, uint64_t))v38)(v71, v34, v10);
      long long v43 = *(void (**)(char *, uint64_t))(v37 + 8);
      v43(v39, v10);
      long long v44 = &v34[*(int *)(v81 + 48)];
      ((void (*)(char *, char *, uint64_t))v38)(v34, v82, v10);
      ((void (*)(char *, uint64_t, uint64_t))v38)(v44, v41, v10);
      ((void (*)(uint64_t, char *, uint64_t))v38)(v42 + *(int *)(v70 + 36), v44, v10);
      v43(v34, v10);
      uint64_t v45 = v85;
      sub_100028C3C(v42, v85, &qword_10079CD38);
      uint64_t v46 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.dateRange(_:);
      uint64_t v47 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
      uint64_t v48 = *(void *)(v47 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 104))(v45, v46, v47);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      sub_100028C3C(v45, (uint64_t)v18, &qword_100789F98);
      uint64_t v27 = v86;
      *(void *)(v86 + 56) = 1;
      break;
    case 7:
      (*(void (**)(char *, void, uint64_t))(v72 + 104))(v74, enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:), v73);
      (*(void (**)(char *, void, uint64_t))(v76 + 104))(v75, enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:), v78);
      long long v49 = v77;
      REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)();
      uint64_t v50 = v79;
      uint64_t v51 = v80;
      (*(void (**)(unsigned char *, char *, uint64_t))(v79 + 16))(v18, v49, v80);
      uint64_t v52 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.relativeRange(_:);
      uint64_t v53 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
      uint64_t v54 = *(void *)(v53 - 8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 104))(v18, v52, v53);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v54 + 56))(v18, 0, 1, v53);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
      *(void *)(v27 + 56) = 4;
      goto LABEL_16;
    case 8:
      id v29 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.noDate(_:);
LABEL_15:
      uint64_t v55 = *v29;
      uint64_t v56 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
      uint64_t v57 = *(void *)(v56 - 8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 104))(v18, v55, v56);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v57 + 56))(v18, 0, 1, v56);
      goto LABEL_16;
    default:
      uint64_t v28 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
LABEL_16:
      uint64_t v45 = v85;
      break;
  }
  uint64_t v58 = self;
  v59._countAndFlagsBits = 0xD000000000000023;
  v60._countAndFlagsBits = 0xD000000000000037;
  v59._object = (void *)0x80000001006B7EB0;
  v61._object = (void *)0x80000001006B7EE0;
  v60._object = (void *)0x80000001006B7F00;
  v61._countAndFlagsBits = 0xD000000000000012;
  TTRLocalizedString(_:value:comment:)(v59, v61, v60);
  NSString v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10003B694((uint64_t)v18, v45, &qword_100789F98);
  unint64_t v63 = (*(unsigned __int8 *)(v83 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = v27;
  sub_100028C3C(v45, v64 + v63, &qword_100789F98);
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = sub_1003A7C20;
  *(void *)(v65 + 24) = v64;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v65;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100748660;
  char v66 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [(id)v58 withActionName:v62 block:v66];
  _Block_release(v66);

  sub_10003B6F8((uint64_t)v18, &qword_100789F98);
  LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v58)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    JUMPOUT(0x10039C994);
  }
  return result;
}

uint64_t sub_10039C9B8(uint64_t a1)
{
  uint64_t v183 = a1;
  uint64_t v180 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  unint64_t v181 = *(void (**)(char *, char *, uint64_t))(v180 - 8);
  __chkstk_darwin(v180);
  uint64_t v157 = (char *)&v153 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v158 = (char *)&v153 - v4;
  uint64_t v166 = sub_10003B754(&qword_10079CD30);
  __chkstk_darwin(v166);
  uint64_t v162 = (char *)&v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v165 = (char *)&v153 - v7;
  uint64_t v160 = sub_10003B754(&qword_10079CD38);
  __chkstk_darwin(v160);
  uint64_t v161 = (char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100799F20);
  __chkstk_darwin(v9 - 8);
  uint64_t v172 = (char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v171 = (char *)&v153 - v12;
  __chkstk_darwin(v13);
  uint64_t v170 = (char *)&v153 - v14;
  uint64_t v184 = type metadata accessor for Date();
  BOOL v185 = *(void **)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v164 = (char *)&v153 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v174 = (char *)&v153 - v17;
  __chkstk_darwin(v18);
  v163 = (char *)&v153 - v19;
  __chkstk_darwin(v20);
  v173 = (char *)&v153 - v21;
  __chkstk_darwin(v22);
  unint64_t v175 = (char *)&v153 - v23;
  __chkstk_darwin(v24);
  unint64_t v179 = (char *)&v153 - v25;
  __chkstk_darwin(v26);
  uint64_t v156 = (char *)&v153 - v27;
  __chkstk_darwin(v28);
  unint64_t v155 = (char *)&v153 - v29;
  __chkstk_darwin(v30);
  unint64_t v154 = (char *)&v153 - v31;
  updated = (void (*)(char *, uint64_t))type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField(0);
  __chkstk_darwin(updated);
  uint64_t v168 = (uint64_t)&v153 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v169 = (uint64_t)&v153 - v34;
  __chkstk_darwin(v35);
  uint64_t v178 = (uint64_t)&v153 - v36;
  __chkstk_darwin(v37);
  uint64_t v177 = (uint64_t)&v153 - v38;
  __chkstk_darwin(v39);
  uint64_t v176 = (uint64_t)&v153 - v40;
  __chkstk_darwin(v41);
  BOOL v167 = (char *)&v153 - v42;
  uint64_t v43 = sub_10003B754(&qword_100789F98);
  __chkstk_darwin(v43 - 8);
  uint64_t v159 = (uint64_t)&v153 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v189 = (char *)&v153 - v46;
  uint64_t v47 = (void *)type metadata accessor for Logger();
  v187 = (char *)*(v47 - 1);
  v188 = (void (*)(void, void, void, void))v47;
  __chkstk_darwin(v47);
  long long v49 = (char *)&v153 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  uint64_t v51 = v50 - 8;
  __chkstk_darwin(v50);
  uint64_t v53 = (char *)&v153 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  __chkstk_darwin(v186);
  uint64_t v55 = (char *)&v153 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v58 = (char *)&v153 - v57;
  __chkstk_darwin(v59);
  Swift::String v61 = (char *)&v153 - v60;
  uint64_t v63 = *(void *)(v1 + 104);
  uint64_t v62 = *(void *)(v1 + 112);
  sub_100038D28((void *)(v1 + 80), v63);
  uint64_t v64 = v63;
  uint64_t v65 = v1;
  char v66 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v64, v62);
  TTRSmartListFilterEditorViewModel.init(filter:doneAlwaysEnabled:)(v66, (*(unsigned char *)(v1 + 65) & 1) == 0, v53);
  sub_10039ADFC((uint64_t)v53);
  sub_10039B2BC((uint64_t)v53);
  sub_1003A7DAC((uint64_t)&v53[*(int *)(v51 + 28)], (uint64_t)v61, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  sub_1003A7D34((uint64_t)v53, type metadata accessor for TTRSmartListFilterEditorViewModel);
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v67 = v188;
  uint64_t v68 = sub_100018BF8((uint64_t)v188, (uint64_t)qword_10079CB90);
  uint64_t v69 = v187;
  (*((void (**)(char *, uint64_t, void (*)(void, void, void, void)))v187 + 2))(v49, v68, v67);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  sub_1003A7DAC((uint64_t)v61, (uint64_t)v58, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  uint64_t v71 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v71;
  *(void *)(inited + 56) = v72;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*((void (**)(char *, void (*)(void, void, void, void)))v69 + 1))(v49, v67);
  uint64_t v73 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
  uint64_t v74 = *(void *)(v73 - 8);
  long long v75 = v189;
  v188 = *(void (**)(void, void, void, void))(v74 + 56);
  v188(v189, 1, 1, v73);
  sub_1003A7DAC((uint64_t)v61, (uint64_t)v55, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  uint64_t v76 = (uint64_t)v61;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v187 = v61;
      sub_10003B754(&qword_100792C10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1003A7DAC(v183, v176, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v79 = v185;
      uint64_t v80 = v184;
      uint64_t v81 = v170;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          unint64_t v181 = (void (*)(char *, char *, uint64_t))v185;
          uint64_t v180 = v184;
          goto LABEL_32;
        case 2:
LABEL_32:
          (*((void (**)(uint64_t, uint64_t))v181 + 1))(v176, v180);
          goto LABEL_37;
        case 3:
          goto LABEL_37;
        default:
          uint64_t v186 = v73;
          uint64_t v82 = (uint64_t)v170;
          uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))v185[4];
          v83(v170, v176, v184);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v79[7])(v82, 0, 1, v80);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v79[6])(v82, 1, v80) == 1) {
            goto LABEL_38;
          }
          v83(v154, v82, v80);
          sub_10003B6F8((uint64_t)v75, &qword_100789F98);
          v83(v75, (uint64_t)v154, v80);
          uint64_t v84 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.onDate(_:);
          goto LABEL_15;
      }
    case 2u:
      v187 = v61;
      sub_10003B754(&qword_100792C10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1003A7DAC(v183, v177, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
      int v85 = swift_getEnumCaseMultiPayload();
      uint64_t v79 = v185;
      uint64_t v80 = v184;
      uint64_t v81 = v171;
      switch(v85)
      {
        case 1:
          unint64_t v181 = (void (*)(char *, char *, uint64_t))v185;
          uint64_t v180 = v184;
          goto LABEL_34;
        case 2:
LABEL_34:
          (*((void (**)(uint64_t, uint64_t))v181 + 1))(v177, v180);
          goto LABEL_37;
        case 3:
          goto LABEL_37;
        default:
          uint64_t v186 = v73;
          uint64_t v82 = (uint64_t)v171;
          uint64_t v86 = (void (*)(char *, uint64_t, uint64_t))v185[4];
          v86(v171, v177, v184);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v79[7])(v82, 0, 1, v80);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v79[6])(v82, 1, v80) == 1) {
            goto LABEL_38;
          }
          v86(v155, v82, v80);
          sub_10003B6F8((uint64_t)v75, &qword_100789F98);
          v86(v75, (uint64_t)v155, v80);
          uint64_t v84 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.beforeDate(_:);
          goto LABEL_15;
      }
    case 3u:
      v187 = v61;
      sub_10003B754(&qword_100792C10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1003A7DAC(v183, v178, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
      int v87 = swift_getEnumCaseMultiPayload();
      uint64_t v79 = v185;
      uint64_t v80 = v184;
      uint64_t v81 = v172;
      switch(v87)
      {
        case 1:
          unint64_t v181 = (void (*)(char *, char *, uint64_t))v185;
          uint64_t v180 = v184;
          goto LABEL_36;
        case 2:
LABEL_36:
          (*((void (**)(uint64_t, uint64_t))v181 + 1))(v178, v180);
          goto LABEL_37;
        case 3:
LABEL_37:
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v79[7])(v81, 1, 1, v80);
          uint64_t v82 = (uint64_t)v81;
          goto LABEL_38;
        default:
          uint64_t v186 = v73;
          uint64_t v82 = (uint64_t)v172;
          id v88 = (void (*)(char *, uint64_t, uint64_t))v185[4];
          v88(v172, v178, v184);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v79[7])(v82, 0, 1, v80);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v79[6])(v82, 1, v80) == 1)
          {
LABEL_38:
            sub_10003B6F8(v82, &qword_100799F20);
          }
          else
          {
            v88(v156, v82, v80);
            sub_10003B6F8((uint64_t)v75, &qword_100789F98);
            v88(v75, (uint64_t)v156, v80);
            uint64_t v84 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.afterDate(_:);
LABEL_15:
            uint64_t v89 = v186;
            (*(void (**)(char *, void, uint64_t))(v74 + 104))(v75, *v84, v186);
            v188(v75, 0, 1, v89);
          }
          ((void (*)(char *, uint64_t))v79[1])(v55, v80);
          uint64_t v76 = (uint64_t)v187;
          break;
      }
      break;
    case 4u:
      uint64_t v186 = v73;
      v187 = v61;
      uint64_t v90 = &v55[*(int *)(sub_10003B754(&qword_100792C08) + 48)];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v91 = (void (*)(char *, char *, uint64_t))v185[4];
      uint64_t v92 = v184;
      v91(v179, v55, v184);
      uint64_t v93 = v175;
      v91(v175, v90, v92);
      uint64_t v94 = v169;
      sub_1003A7DAC(v183, v169, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
      int v95 = swift_getEnumCaseMultiPayload();
      uint64_t v96 = v174;
      switch(v95)
      {
        case 1:
          uint64_t v183 = v65;
          uint64_t v98 = v184;
          v91(v174, (char *)v94, v184);
          sub_1003A7CCC(&qword_10079CD40, (void (*)(uint64_t))&type metadata accessor for Date);
          uint64_t v118 = v179;
          char v119 = dispatch thunk of static Comparable.< infix(_:_:)();
          unint64_t v120 = v185;
          uint64_t v121 = (void (*)(char *, char *, uint64_t))v185[2];
          if (v119) {
            uint64_t v122 = v118;
          }
          else {
            uint64_t v122 = v96;
          }
          unint64_t v181 = (void (*)(char *, char *, uint64_t))v185[2];
          uint64_t v180 = (uint64_t)(v185 + 2);
          v121(v164, v122, v98);
          char v123 = dispatch thunk of static Comparable.<= infix(_:_:)();
          unint64_t v124 = (void (*)(char *, uint64_t))v120[1];
          v124(v175, v98);
          updated = v124;
          BOOL v185 = v120 + 1;
          v124(v118, v98);
          if ((v123 & 1) == 0) {
            goto LABEL_54;
          }
          uint64_t v125 = v166;
          uint64_t v126 = v165;
          Swift::Int v127 = &v165[*(int *)(v166 + 48)];
          v91(v165, v164, v98);
          unint64_t v179 = v127;
          v91(v127, v174, v98);
          uint64_t v108 = v162;
          char v128 = &v162[*(int *)(v125 + 48)];
          uint64_t v129 = v181;
          v181(v162, v126, v98);
          v129(v128, v127, v98);
          uint64_t v111 = (uint64_t)v161;
          v91(v161, v108, v98);
          uint64_t v112 = v128;
          break;
        case 2:
          uint64_t v133 = v94;
          uint64_t v134 = (void (*)(char *, uint64_t))v185[1];
          uint64_t v135 = v184;
          v134(v93, v184);
          v134(v179, v135);
          (*((void (**)(uint64_t, uint64_t))v181 + 1))(v133, v180);
          uint64_t v76 = (uint64_t)v187;
          goto LABEL_50;
        case 3:
          uint64_t v136 = (void (*)(char *, uint64_t))v185[1];
          uint64_t v137 = v184;
          v136(v93, v184);
          v136(v179, v137);
          uint64_t v76 = (uint64_t)v187;
          goto LABEL_50;
        default:
          uint64_t v183 = v65;
          uint64_t v97 = v173;
          uint64_t v98 = v184;
          v91(v173, (char *)v94, v184);
          sub_1003A7CCC(&qword_10079CD40, (void (*)(uint64_t))&type metadata accessor for Date);
          char v99 = dispatch thunk of static Comparable.>= infix(_:_:)();
          uint64_t v100 = v185;
          uint64_t v101 = (void (*)(char *, char *, uint64_t))v185[2];
          if (v99) {
            uint64_t v102 = v93;
          }
          else {
            uint64_t v102 = v97;
          }
          unint64_t v181 = (void (*)(char *, char *, uint64_t))v185[2];
          uint64_t v180 = (uint64_t)(v185 + 2);
          v101(v163, v102, v98);
          char v103 = dispatch thunk of static Comparable.<= infix(_:_:)();
          uint64_t v104 = (void (*)(char *, uint64_t))v100[1];
          v104(v93, v98);
          updated = v104;
          BOOL v185 = v100 + 1;
          v104(v179, v98);
          if ((v103 & 1) == 0) {
            goto LABEL_53;
          }
          uint64_t v105 = v166;
          uint64_t v106 = v165;
          uint64_t v107 = &v165[*(int *)(v166 + 48)];
          v91(v165, v173, v98);
          unint64_t v179 = v107;
          v91(v107, v163, v98);
          uint64_t v108 = v162;
          uint64_t v109 = &v162[*(int *)(v105 + 48)];
          uint64_t v110 = v181;
          v181(v162, v106, v98);
          v110(v109, v107, v98);
          uint64_t v111 = (uint64_t)v161;
          v91(v161, v108, v98);
          uint64_t v112 = v109;
          break;
      }
      updated(v112, v98);
      Swift::Int v130 = &v108[*(int *)(v166 + 48)];
      v91(v108, v165, v98);
      v91(v130, v179, v98);
      v91((char *)(v111 + *(int *)(v160 + 36)), v130, v98);
      updated(v108, v98);
      uint64_t v131 = v159;
      sub_100028C3C(v111, v159, &qword_10079CD38);
      uint64_t v132 = v186;
      (*(void (**)(uint64_t, void, uint64_t))(v74 + 104))(v131, enum case for REMCustomSmartListFilterDescriptor.FilterDate.dateRange(_:), v186);
      v188(v131, 0, 1, v132);
      long long v75 = v189;
      sub_1003A7E14(v131, (uint64_t)v189);
      uint64_t v65 = v183;
      uint64_t v76 = (uint64_t)v187;
      break;
    case 5u:
      sub_10003B754(&qword_100792C00);
      uint64_t v186 = (uint64_t)v55;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v113 = v168;
      sub_1003A7DAC(v183, v168, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v138 = v73;
          uint64_t v139 = (void (*)(char *, uint64_t, uint64_t))*((void *)v181 + 4);
          int64_t v140 = v157;
          v187 = v61;
          uint64_t v141 = v180;
          v139(v157, v113, v180);
          uint64_t v142 = v158;
          v139(v158, (uint64_t)v140, v141);
          sub_10003B6F8((uint64_t)v75, &qword_100789F98);
          uint64_t v143 = v141;
          uint64_t v76 = (uint64_t)v187;
          v139(v75, (uint64_t)v142, v143);
          (*(void (**)(char *, void, uint64_t))(v74 + 104))(v75, enum case for REMCustomSmartListFilterDescriptor.FilterDate.relativeRange(_:), v138);
          v188(v75, 0, 1, v138);
          break;
        case 3u:
          break;
        default:
          ((void (*)(uint64_t, uint64_t))v185[1])(v113, v184);
          break;
      }
      (*((void (**)(uint64_t, uint64_t))v181 + 1))(v186, v180);
      break;
    case 6u:
      sub_10003B6F8((uint64_t)v75, &qword_100789F98);
      uint64_t v114 = v75;
      uint64_t v115 = 1;
      goto LABEL_30;
    case 7u:
      sub_10003B6F8((uint64_t)v75, &qword_100789F98);
      uint64_t v116 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.any(_:);
      goto LABEL_29;
    case 8u:
      sub_10003B6F8((uint64_t)v75, &qword_100789F98);
      uint64_t v116 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.noDate(_:);
LABEL_29:
      (*(void (**)(char *, void, uint64_t))(v74 + 104))(v75, *v116, v73);
      uint64_t v114 = v75;
      uint64_t v115 = 0;
LABEL_30:
      v188(v114, v115, 1, v73);
      break;
    default:
      unsigned __int8 v77 = v167;
      sub_1003A7DAC(v183, (uint64_t)v167, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          (*((void (**)(unsigned char *, uint64_t))v181 + 1))(v77, v180);
          break;
        case 3u:
          char v117 = *v77;
          sub_10003B6F8((uint64_t)v75, &qword_100789F98);
          *long long v75 = v117;
          uint64_t v116 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.today(_:);
          goto LABEL_29;
        default:
          ((void (*)(char *, uint64_t))v185[1])(v77, v184);
          break;
      }
      break;
  }
LABEL_50:
  uint64_t v144 = self;
  v145._countAndFlagsBits = 0xD000000000000023;
  v146._countAndFlagsBits = 0xD000000000000037;
  v145._object = (void *)0x80000001006B7EB0;
  v147._object = (void *)0x80000001006B7EE0;
  v146._object = (void *)0x80000001006B7F00;
  v147._countAndFlagsBits = 0xD000000000000012;
  TTRLocalizedString(_:value:comment:)(v145, v147, v146);
  NSString v148 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v149 = swift_allocObject();
  *(void *)(v149 + 16) = v65;
  *(void *)(v149 + 24) = v75;
  uint64_t v150 = swift_allocObject();
  *(void *)(v150 + 16) = sub_1003A7D94;
  *(void *)(v150 + 24) = v149;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v150;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_1007486D8;
  unint64_t v151 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [(id)v144 withActionName:v148 block:v151];
  _Block_release(v151);

  sub_1003A7D34(v76, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  LOBYTE(v144) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v144)
  {
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    JUMPOUT(0x10039E410);
  }
  sub_10003B6F8((uint64_t)v75, &qword_100789F98);
  return swift_release();
}

uint64_t sub_10039E494(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100789F98);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  sub_100038D28(a1 + 10, v7);
  sub_10003B694(a2, (uint64_t)v6, &qword_100789F98);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 72))(v6, v7, v8);
  return sub_10003B6F8((uint64_t)v6, &qword_100789F98);
}

uint64_t sub_10039E568(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_100789F90);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&aBlock - v9;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100018BF8(v11, (uint64_t)qword_10079CB90);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  aBlock = (void **)sub_10039EB04;
  uint64_t v36 = 0;
  sub_10003B754(&qword_10079CD78);
  uint64_t v17 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = v18;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  switch(a1)
  {
    case 1:
      uint64_t v20 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterTime.any(_:);
      goto LABEL_11;
    case 2:
      uint64_t v20 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterTime.morning(_:);
      goto LABEL_11;
    case 3:
      uint64_t v20 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterTime.afternoon(_:);
      goto LABEL_11;
    case 4:
      uint64_t v20 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterTime.evening(_:);
      goto LABEL_11;
    case 5:
      uint64_t v20 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterTime.night(_:);
      goto LABEL_11;
    case 6:
      uint64_t v20 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterTime.noTime(_:);
LABEL_11:
      uint64_t v21 = *v20;
      uint64_t v22 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime();
      uint64_t v23 = *(void *)(v22 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v10, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v22);
      break;
    default:
      uint64_t v19 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 1, 1, v19);
      break;
  }
  uint64_t v24 = self;
  v25._countAndFlagsBits = 0xD000000000000023;
  v26._countAndFlagsBits = 0xD000000000000037;
  v25._object = (void *)0x80000001006B8270;
  v27._object = (void *)0x80000001006B82A0;
  v26._object = (void *)0x80000001006B82C0;
  v27._countAndFlagsBits = 0xD000000000000012;
  TTRLocalizedString(_:value:comment:)(v25, v27, v26);
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10003B694((uint64_t)v10, (uint64_t)v7, &qword_100789F90);
  unint64_t v29 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v2;
  sub_100028C3C((uint64_t)v7, v30 + v29, &qword_100789F90);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1003A86A0;
  *(void *)(v31 + 24) = v30;
  uint64_t v39 = sub_1000499FC;
  uint64_t v40 = v31;
  aBlock = _NSConcreteStackBlock;
  uint64_t v36 = 1107296256;
  uint64_t v37 = sub_100021888;
  uint64_t v38 = &unk_100748AE8;
  uint64_t v32 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v24 withActionName:v28 block:v32];
  _Block_release(v32);

  sub_10003B6F8((uint64_t)v10, &qword_100789F90);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    JUMPOUT(0x10039EAE8);
  }
  return result;
}

time_t sub_10039EB04@<X0>(time_t **a1@<X0>, time_t *a2@<X8>)
{
  time_t result = time(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10039EB30(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_10079CB90);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = a1;
  uint64_t v10 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v11;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = self;
  v13._countAndFlagsBits = 0xD000000000000029;
  v14._countAndFlagsBits = 0xD00000000000003DLL;
  v13._object = (void *)0x80000001006B8130;
  v15._object = (void *)0x80000001006B8160;
  v14._object = (void *)0x80000001006B8180;
  v15._countAndFlagsBits = 0xD000000000000018;
  TTRLocalizedString(_:value:comment:)(v13, v15, v14);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  *(unsigned char *)(v17 + 24) = a1;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1003A84C8;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_1007489F8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v12 withActionName:v16 block:v19];

  _Block_release(v19);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10039EE84(void *a1, unint64_t a2)
{
  uint64_t v3 = a1[13];
  uint64_t v4 = a1[14];
  sub_100038D28(a1 + 10, v3);
  unint64_t v5 = TTRSmartListFilterEditorViewModel.PriorityOptions.priorities.getter(a2);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 88))(v5, v3, v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10039EF00(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_10079CB90);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = a1;
  uint64_t v10 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v11;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  LOBYTE(inited) = 2 - a1;
  uint64_t v12 = self;
  v13._countAndFlagsBits = 0xD000000000000026;
  v14._countAndFlagsBits = 0xD00000000000003ALL;
  v13._object = (void *)0x80000001006B81E0;
  v15._object = (void *)0x80000001006B8210;
  v14._object = (void *)0x80000001006B8230;
  v15._countAndFlagsBits = 0xD000000000000015;
  TTRLocalizedString(_:value:comment:)(v13, v15, v14);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  *(unsigned char *)(v17 + 24) = inited;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1003A84E4;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100748A70;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v12 withActionName:v16 block:v19];

  _Block_release(v19);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10039F258(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_100789F88);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100018BF8(v10, (uint64_t)qword_10079CB90);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = a1;
  uint64_t v16 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v17;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v18 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v20(v9, 1, 1, v18);
  if (!a1)
  {
    sub_10003B6F8((uint64_t)v9, &qword_100789F88);
    uint64_t v27 = 1;
LABEL_9:
    v20(v9, v27, 1, v18);
    *(unsigned char *)(v2 + 288) = 0;
    goto LABEL_10;
  }
  if (a1 != 1)
  {
    sub_10003B6F8((uint64_t)v9, &qword_100789F88);
    (*(void (**)(char *, void, uint64_t))(v19 + 104))(v9, enum case for REMCustomSmartListFilterDescriptor.FilterLocation.noLocation(_:), v18);
    uint64_t v27 = 0;
    goto LABEL_9;
  }
  *(unsigned char *)(v2 + 288) = 1;
  v21._object = (void *)0x80000001006A5920;
  v21._countAndFlagsBits = 0xD000000000000011;
  TTRDeferredAction.scheduleNextRunLoop(reason:)(v21);
  uint64_t v22 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
  uint64_t v23 = *(void *)(v2 + 160);
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  uint64_t v24 = static MainActor.shared.getter();
  Swift::String v25 = (void *)swift_allocObject();
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v23;
  v25[5] = v2;
  sub_1000286A4((uint64_t)v6, (uint64_t)&unk_10079CD50, (uint64_t)v25);
  swift_release();
  Swift::String v26 = 0;
  if (*(unsigned char *)(v2 + 288)) {
    goto LABEL_11;
  }
LABEL_10:
  NSString v28 = self;
  v29._countAndFlagsBits = 0xD000000000000016;
  v30._countAndFlagsBits = 0xD000000000000027;
  v31._countAndFlagsBits = 0xD00000000000003BLL;
  v30._object = (void *)0x80000001006B7FA0;
  v29._object = (void *)0x80000001006B7FD0;
  v31._object = (void *)0x80000001006B7FF0;
  TTRLocalizedString(_:value:comment:)(v30, v29, v31);
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v2;
  *(void *)(v33 + 24) = v9;
  uint64_t v34 = swift_allocObject();
  Swift::String v26 = sub_1003A7EB4;
  *(void *)(v34 + 16) = sub_1003A7EB4;
  *(void *)(v34 + 24) = v33;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v34;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100748750;
  uint64_t v35 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v28 withActionName:v32 block:v35];

  _Block_release(v35);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
LABEL_11:
    sub_10003B6F8((uint64_t)v9, &qword_100789F88);
    return sub_1000499C4((uint64_t)v26);
  }
  __break(1u);
  return result;
}

uint64_t sub_10039F810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[8] = type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  v5[4] = a4;
  uint64_t v7 = (void *)swift_task_alloc();
  v5[10] = v7;
  uint64_t v8 = type metadata accessor for TTRIPrivacyChecker();
  v5[11] = v8;
  void *v7 = v5;
  v7[1] = sub_10039F8E0;
  return TTRPrivacyChecker.checkAndPromptLocationAccess()(v8, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10039F8E0(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v7 = *v1;
  *(unsigned char *)(v2 + 104) = a1;
  swift_task_dealloc();
  *(void *)(v2 + 40) = v3;
  v2 += 40;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v4;
  *uint64_t v4 = v7;
  v4[1] = sub_10039FA3C;
  uint64_t v5 = *(void *)(v2 + 48);
  return TTRPrivacyChecker.checkContactsAccess(contactsFeature:)(0, v5, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10039FA3C(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(v2 + 24) = a1;
  *(void *)(v2 + 16) = v1;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10039FB80, v4, v3);
}

uint64_t sub_10039FB80()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  int v2 = *(unsigned __int8 *)(v0 + 104);
  swift_release();
  if (v1) {
    unsigned int v3 = 1;
  }
  else {
    unsigned int v3 = 3;
  }
  if (v2) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = v3;
  }
  sub_10039FC10(v4, 0);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10039FC10(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)(v3 + 104);
  uint64_t v10 = *(void *)(v3 + 112);
  sub_100038D28((void *)(v3 + 80), v9);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  TTRSmartListFilterEditorViewModel.init(filter:doneAlwaysEnabled:)(v11, (*(unsigned char *)(v3 + 65) & 1) == 0, v8);
  sub_10039ADFC((uint64_t)v8);
  sub_10039B2BC((uint64_t)v8);
  uint64_t v12 = &v8[*(int *)(v6 + 32)];
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *((void *)v12 + 1);
  uint64_t v16 = (void *)*((void *)v12 + 2);
  uint64_t v15 = *((void *)v12 + 3);
  uint64_t v18 = *((void *)v12 + 4);
  uint64_t v17 = *((void *)v12 + 5);
  unsigned __int8 v19 = v12[48];
  sub_1003A8038(*(void *)v12, v14, v16, v15, v18, v17);
  sub_1003A7D34((uint64_t)v8, type metadata accessor for TTRSmartListFilterEditorViewModel);
  if (v17)
  {
    uint64_t v20 = v19;
    sub_1002464C8(v13, v14, v16, v15, v18);
    swift_bridgeObjectRelease();
    if ((v18 & 0x80u) != 0 || v19 == 6)
    {
      uint64_t v20 = 6;
      uint64_t v15 = 0;
    }
  }
  else
  {
LABEL_9:
    uint64_t v15 = 0;
    uint64_t v20 = 6;
  }
  uint64_t v22 = *(void *)(v3 + 272);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(a1, v20, v15, ObjectType, v22);
  if (result)
  {
    v26[1] = result;
    swift_allocObject();
    swift_weakInit();
    sub_10003B754(&qword_100791C88);
    sub_1003A7FDC();
    uint64_t v25 = Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    swift_release();
    *(void *)(v3 + 280) = v25;
    return swift_release();
  }
  return result;
}

uint64_t sub_10039FE84(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100789F88);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  sub_100038D28(a1 + 10, v7);
  sub_10003B694(a2, (uint64_t)v6, &qword_100789F88);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 104))(v6, v7, v8);
  return sub_10003B6F8((uint64_t)v6, &qword_100789F88);
}

void sub_10039FF58(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100018BF8(v7, (uint64_t)qword_10079CB90);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 1835365481;
  *(void *)(inited + 40) = 0xE400000000000000;
  v19[15] = a1;
  uint64_t v13 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 56) = v14;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  if (a1 >= 3u)
  {
    if (a1 - 3 >= 2) {
      sub_1003A0248(1);
    }
    else {
      sub_10039FC10(a1, 1);
    }
  }
  else
  {
    sub_10039FC10(a1, 1);
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
    uint64_t v16 = *(void *)(v2 + 160);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v17 = static MainActor.shared.getter();
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v17;
    v18[3] = &protocol witness table for MainActor;
    v18[4] = v16;
    sub_1000286A4((uint64_t)v6, (uint64_t)&unk_10079CD70, (uint64_t)v18);
    swift_release();
  }
}

void sub_1003A0248(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)(v1 + 10);
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  sub_100038D28(v1 + 10, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    uint64_t v13 = v2[20];
    uint64_t v14 = (void *)v2[26];
    sub_1000145EC((uint64_t)(v2 + 15), (uint64_t)v20);
    sub_1000145EC(v7, (uint64_t)v19);
    type metadata accessor for MainActor();
    swift_retain();
    id v15 = v11;
    id v16 = v14;
    swift_retain();
    uint64_t v17 = static MainActor.shared.getter();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = &protocol witness table for MainActor;
    *(void *)(v18 + 32) = v13;
    sub_100038ED8(v20, v18 + 40);
    *(void *)(v18 + 80) = v15;
    *(void *)(v18 + 88) = v16;
    *(unsigned char *)(v18 + 96) = a1 & 1;
    *(void *)(v18 + 104) = v2;
    sub_100038ED8(v19, v18 + 112);
    sub_1000286A4((uint64_t)v6, (uint64_t)&unk_10079CD60, v18);
    swift_release();
  }
}

uint64_t sub_1003A0420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  v4[2] = a4;
  uint64_t v7 = (void *)swift_task_alloc();
  v4[5] = v7;
  void *v7 = v4;
  v7[1] = sub_1000601C8;
  return TTRPrivacyChecker.checkAndPromptLocationAccess()(v6, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_1003A0510(char a1)
{
  uint64_t v2 = sub_10003B754(&qword_100789FA0);
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v33 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v34 = (uint64_t *)((char *)&v31 - v6);
  uint64_t v36 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v7 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100018BF8(v10, (uint64_t)qword_10079CB90);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = a1;
  uint64_t v16 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v17;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v18 = v35;
  uint64_t v19 = v35 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache;
  swift_beginAccess();
  uint64_t v20 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v36);
  uint64_t v21 = (uint64_t)v34;
  sub_1003A0A50((uint64_t)v9, a1, v34);
  id v32 = self;
  v22._countAndFlagsBits = 0xD000000000000023;
  v23._countAndFlagsBits = 0xD000000000000037;
  v22._object = (void *)0x80000001006B7D40;
  v24._object = (void *)0x80000001006B7D70;
  v23._object = (void *)0x80000001006B7D90;
  v24._countAndFlagsBits = 0xD000000000000012;
  TTRLocalizedString(_:value:comment:)(v22, v24, v23);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10003B694(v21, (uint64_t)v4, &qword_100789FA0);
  unint64_t v26 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v18;
  sub_100028C3C((uint64_t)v4, v27 + v26, &qword_100789FA0);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1003A7760;
  *(void *)(v28 + 24) = v27;
  aBlock[4] = sub_1000218B0;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100748430;
  Swift::String v29 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v32 withActionName:v25 block:v29];
  _Block_release(v29);

  sub_10003B6F8(v21, &qword_100789FA0);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v36);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v21) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A0A50@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v6 = sub_10003B754(&qword_10079CD28);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(int *)(v9 + 48);
  uint64_t v11 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(v8, a1, v11);
  *((unsigned char *)v8 + v10) = a2;
  switch(a2)
  {
    case 1:
      uint64_t v14 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.any(_:);
      goto LABEL_10;
    case 2:
      int v15 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v8, v11);
      if (v15 == enum case for REMHashtagLabelSpecifier.labels(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v8, v11);
        uint64_t v16 = *v8;
        uint64_t v17 = v8[1];
        uint64_t v18 = (char *)v8 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
        uint64_t v19 = (char *)a3 + *(int *)(sub_10003B754(&qword_10079CD00) + 64);
        uint64_t v20 = sub_10035E1EC(v16);
        swift_bridgeObjectRelease();
        *a3 = v20;
        uint64_t v21 = sub_10035E1EC(v17);
        swift_bridgeObjectRelease();
        a3[1] = v21;
        Swift::String v22 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.Operation.or(_:);
LABEL_8:
        uint64_t v28 = *v22;
        uint64_t v29 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v19, v28, v29);
        uint64_t v30 = enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.hashtags(_:);
        uint64_t v31 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
        uint64_t v32 = *(void *)(v31 - 8);
        (*(void (**)(void *, uint64_t, uint64_t))(v32 + 104))(a3, v30, v31);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(a3, 0, 1, v31);
        uint64_t v33 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
        return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v18, v33);
      }
      if (v15 != enum case for REMHashtagLabelSpecifier.allLabels(_:)
        && v15 != enum case for REMHashtagLabelSpecifier.noLabels(_:))
      {
        goto LABEL_26;
      }
      uint64_t v39 = (char *)a3 + *(int *)(sub_10003B754(&qword_10079CD00) + 64);
      *a3 = _swiftEmptyArrayStorage;
      a3[1] = _swiftEmptyArrayStorage;
      uint64_t v40 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.Operation.or(_:);
      break;
    case 3:
      int v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v8, v11);
      if (v23 == enum case for REMHashtagLabelSpecifier.labels(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v8, v11);
        uint64_t v24 = *v8;
        uint64_t v25 = v8[1];
        uint64_t v18 = (char *)v8 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
        uint64_t v19 = (char *)a3 + *(int *)(sub_10003B754(&qword_10079CD00) + 64);
        unint64_t v26 = sub_10035E1EC(v24);
        swift_bridgeObjectRelease();
        *a3 = v26;
        uint64_t v27 = sub_10035E1EC(v25);
        swift_bridgeObjectRelease();
        a3[1] = v27;
        Swift::String v22 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:);
        goto LABEL_8;
      }
      if (v23 != enum case for REMHashtagLabelSpecifier.allLabels(_:)
        && v23 != enum case for REMHashtagLabelSpecifier.noLabels(_:))
      {
LABEL_26:
        _diagnoseUnexpectedEnumCase<A>(type:)();
        __break(1u);
        JUMPOUT(0x1003A1038);
      }
      uint64_t v39 = (char *)a3 + *(int *)(sub_10003B754(&qword_10079CD00) + 64);
      *a3 = _swiftEmptyArrayStorage;
      a3[1] = _swiftEmptyArrayStorage;
      uint64_t v40 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:);
      break;
    case 4:
      uint64_t v14 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.untagged(_:);
LABEL_10:
      uint64_t v35 = *v14;
      uint64_t v36 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
      uint64_t v37 = *(void *)(v36 - 8);
      (*(void (**)(void *, uint64_t, uint64_t))(v37 + 104))(a3, v35, v36);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(a3, 0, 1, v36);
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v8, v11);
    default:
      uint64_t v13 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v8, v11);
  }
  uint64_t v42 = *v40;
  uint64_t v43 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v39, v42, v43);
  uint64_t v44 = enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.hashtags(_:);
  uint64_t v45 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
  uint64_t v46 = *(void *)(v45 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v46 + 104))(a3, v44, v45);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(a3, 0, 1, v45);
}

uint64_t sub_1003A104C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v40 = v4;
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_100789FA0);
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v39 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v6;
  __chkstk_darwin(v7);
  uint64_t v42 = (uint64_t *)((char *)&v35 - v8);
  uint64_t v9 = type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel();
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100018BF8(v12, (uint64_t)qword_10079CB90);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  sub_1003A7CCC(&qword_10079B168, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v18;
  *(void *)(inited + 56) = v19;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v20 = v43;
  sub_10039A4CC(v11);
  char v21 = *((unsigned char *)v11 + *(int *)(v9 + 24));
  sub_1003A7D34((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel);
  Swift::String v22 = v42;
  sub_1003A0A50(a1, v21, v42);
  id v36 = self;
  v23._countAndFlagsBits = 0xD000000000000023;
  v24._countAndFlagsBits = 0xD000000000000037;
  v23._object = (void *)0x80000001006B7D40;
  v25._object = (void *)0x80000001006B7D70;
  v24._object = (void *)0x80000001006B7D90;
  v25._countAndFlagsBits = 0xD000000000000012;
  TTRLocalizedString(_:value:comment:)(v23, v25, v24);
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v27 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v41, a1, v2);
  uint64_t v28 = v39;
  sub_10003B694((uint64_t)v22, v39, &qword_100789FA0);
  unint64_t v29 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v30 = (v40 + *(unsigned __int8 *)(v37 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v31 + v29, v27, v2);
  sub_100028C3C(v28, v31 + v30, &qword_100789FA0);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_1003A7B14;
  *(void *)(v32 + 24) = v31;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_1007485E8;
  uint64_t v33 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v36 withActionName:v26 block:v33];
  _Block_release(v33);

  sub_10003B6F8((uint64_t)v22, &qword_100789FA0);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v27) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A1644(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = (uint64_t)a1 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1003A7CCC((unint64_t *)&qword_100788D40, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) == 0)
  {
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v10, a2, v6);
    swift_endAccess();
  }
  uint64_t v12 = a1 + 10;
  uint64_t v14 = a1[13];
  uint64_t v13 = a1[14];
  sub_100038D28(v12, v14);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 64))(a3, v14, v13);
}

void sub_1003A181C(char a1, uint64_t a2, int a3)
{
  uint64_t v4 = (void *)v3;
  uint64_t v54 = a2;
  uint64_t v53 = type metadata accessor for REMListPickerDataView.PickerMode();
  uint64_t v7 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v51 = (uint64_t *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v3 + 104);
  uint64_t v14 = *(void *)(v3 + 112);
  sub_100038D28((void *)(v3 + 80), v13);
  int v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  TTRSmartListFilterEditorViewModel.init(filter:doneAlwaysEnabled:)(v15, (*(unsigned char *)(v3 + 65) & 1) == 0, v12);
  sub_10039ADFC((uint64_t)v12);
  sub_10039B2BC((uint64_t)v12);
  uint64_t v16 = *(int *)(v10 + 52);
  uint64_t v55 = v12;
  sub_100245EEC((uint64_t)&v12[v16], (uint64_t)v60);
  sub_100245EEC((uint64_t)v60, (uint64_t)v61);
  int v17 = sub_100245F48((uint64_t)v61);
  uint64_t v52 = v7;
  if (!v17)
  {
    char v18 = 1;
    goto LABEL_5;
  }
  if (v17 == 1)
  {
    char v18 = 2;
LABEL_5:
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v61);
    goto LABEL_7;
  }
  char v18 = 0;
LABEL_7:
  if (a1 == 3) {
    char v19 = v18;
  }
  else {
    char v19 = a1;
  }
  sub_100245EEC((uint64_t)v60, (uint64_t)v57);
  if (sub_100245F48((uint64_t)v57) <= 1)
  {
    id v20 = *(id *)TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v57).reminders._rawValue;
LABEL_12:
    id v21 = v20;
    Swift::String v22 = (void *)REMObjectID.codable.getter();

    goto LABEL_24;
  }
  Swift::String v23 = (void *)v4[26];
  Swift::String v24 = (void *)v4[9];
  v58[0] = 0;
  id v25 = [v23 fetchDefaultListRequiringCloudKitAccountWithAccountID:v24 error:v58];
  Swift::String v22 = v25;
  if (v58[0])
  {
    id v26 = v58[0];

    swift_willThrow();
    if (qword_1007854F0 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_100018BF8(v27, (uint64_t)qword_10079CB90);
    swift_retain_n();
    id v28 = v26;
    unint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      int v48 = v31;
      uint64_t v33 = v32;
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v50 = (void *)swift_slowAlloc();
      v58[0] = v50;
      *(_DWORD *)uint64_t v33 = 138543618;
      os_log_t v47 = v29;
      uint64_t v56 = (uint64_t)v24;
      int v49 = a3;
      id v35 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v34 = v24;
      swift_release_n();
      *(_WORD *)(v33 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v36 = Error.rem_errorDescription.getter();
      uint64_t v56 = sub_1000385A8(v36, v37, (uint64_t *)v58);
      LOBYTE(a3) = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v38 = v47;
      _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v48, "Error fetching default list for accountID %{public}@ {error: %s}", (uint8_t *)v33, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    Swift::String v22 = 0;
    goto LABEL_23;
  }
  if (!v25)
  {
LABEL_23:
    id v20 = 0;
    goto LABEL_24;
  }
  id v20 = [v25 remObjectID];

  if (v20) {
    goto LABEL_12;
  }
  Swift::String v22 = 0;
LABEL_24:
  sub_1003A1E9C(v19, v22);

  if (((a3 & 1) != 0 || (sub_100028C3C(v54, (uint64_t)v58, (uint64_t *)&unk_10078AC10), (~v59 & 0xFE) != 0)) && v19)
  {
    sub_100038D28(v4 + 15, v4[18]);
    uint64_t v39 = REMObjectID.codable.getter();
    char v40 = v19;
    uint64_t v42 = (uint64_t)v51;
    uint64_t v41 = v52;
    *uint64_t v51 = v39;
    uint64_t v43 = v53;
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v42, enum case for REMListPickerDataView.PickerMode.specificAccount(_:), v53);
    uint64_t v50 = (void *)v4[26];
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v44;
    *(unsigned char *)(v45 + 24) = v40;
    id v46 = v20;
    swift_retain();
    sub_1000CCF5C(v40, v42, (uint64_t)v20, v54, (uint64_t)v50, (uint64_t)sub_1003A83F0, v45);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
    sub_1003A7D34((uint64_t)v55, type metadata accessor for TTRSmartListFilterEditorViewModel);

    swift_release();
  }
  else
  {
    sub_1003A7D34((uint64_t)v55, type metadata accessor for TTRSmartListFilterEditorViewModel);
  }
}

uint64_t sub_1003A1E9C(char a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754(&qword_100789F80);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void *)((char *)aBlock - v11);
  if (a2 && a1)
  {
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10066D470;
    *(void *)(v13 + 32) = a2;
    aBlock[0] = v13;
    if (a1 == 1)
    {
      specialized Array._endMutation()();
      *uint64_t v12 = aBlock[0];
      v12[1] = _swiftEmptyArrayStorage;
      uint64_t v14 = enum case for REMCustomSmartListFilterDescriptor.FilterLists.lists(_:);
      uint64_t v15 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
      uint64_t v16 = *(void *)(v15 - 8);
      (*(void (**)(void *, uint64_t, uint64_t))(v16 + 104))(v12, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      id v17 = a2;
    }
    else
    {
      id v19 = a2;
      specialized Array._endMutation()();
      uint64_t v20 = aBlock[0];
      *uint64_t v12 = _swiftEmptyArrayStorage;
      v12[1] = v20;
      uint64_t v21 = enum case for REMCustomSmartListFilterDescriptor.FilterLists.lists(_:);
      uint64_t v22 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
      uint64_t v23 = *(void *)(v22 - 8);
      (*(void (**)(void *, uint64_t, uint64_t))(v23 + 104))(v12, v21, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
    }
  }
  else
  {
    uint64_t v18 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  }
  Swift::String v24 = self;
  v25._countAndFlagsBits = 0xD000000000000025;
  v26._countAndFlagsBits = 0xD000000000000039;
  v25._object = (void *)0x80000001006B8070;
  v27._object = (void *)0x80000001006B80A0;
  v26._object = (void *)0x80000001006B80C0;
  v27._countAndFlagsBits = 0xD000000000000012;
  TTRLocalizedString(_:value:comment:)(v25, v27, v26);
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10003B694((uint64_t)v12, (uint64_t)v9, &qword_100789F80);
  unint64_t v29 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v3;
  sub_100028C3C((uint64_t)v9, v30 + v29, &qword_100789F80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1003A841C;
  *(void *)(v31 + 24) = v30;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100748980;
  uint64_t v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v24 withActionName:v28 block:v32];
  _Block_release(v32);

  sub_10003B6F8((uint64_t)v12, &qword_100789F80);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_1003A2344(uint64_t a1, char a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a2 == -1)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v6 = (void *)TTRListOrCustomSmartList.objectID.getter();
      uint64_t v7 = (void *)REMObjectID.codable.getter();
    }
    sub_1003A1E9C(a4, v7);
    swift_release();
  }
}

id sub_1003A23F0()
{
  static TTRLocalizableStrings.Hashtags.addTagAlertTitle.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [self alertControllerWithTitle:v1 message:0 preferredStyle:1];

  uint64_t v18 = sub_1003A780C;
  uint64_t v19 = v0;
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_1001077FC;
  id v17 = &unk_100748458;
  uint64_t v3 = _Block_copy(&v14);
  swift_retain();
  swift_release();
  [v2 addTextFieldWithConfigurationHandler:v3];
  _Block_release(v3);
  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v5 = self;
  id v6 = [v5 actionWithTitle:v4 style:1 handler:0];

  static TTRLocalizableStrings.Hashtags.addTagAlertAddButton.getter();
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  swift_retain();
  swift_retain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1003A78C4;
  uint64_t v19 = v9;
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_1001077FC;
  id v17 = &unk_1007484F8;
  uint64_t v11 = _Block_copy(&v14);
  swift_release();
  id v12 = [v5 actionWithTitle:v10 style:0 handler:v11];
  _Block_release(v11);
  swift_release();
  swift_release();

  [v2 addAction:v6];
  [v2 addAction:v12];

  return v2;
}

uint64_t sub_1003A26D8()
{
  NSString v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_100789F98);
  __chkstk_darwin(v2 - 8);
  NSString v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[14];
  sub_100038D28(v0 + 10, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_10003B6F8((uint64_t)v4, &qword_100789F98);
  }
  uint64_t v15 = (void *)v14;
  REMCustomSmartListFilterDescriptor.date.getter();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10003B6F8((uint64_t)v4, &qword_100789F98);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.today(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.dateRange(_:)) {
    goto LABEL_9;
  }
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.relativeRange(_:))
  {
    unint64_t v22 = 4;
    if ((v1[7] & 4) != 0) {
      unint64_t v22 = v1[7] & 0xFFFFFFFFFFFFFFFBLL;
    }
    v1[7] = v22;
    v23._object = (void *)0x80000001006A5920;
    v23._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v23);
    Swift::String v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v11, v5);
    return ((uint64_t (*)(char *, uint64_t))v24)(v8, v5);
  }
  else
  {
    if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.beforeDate(_:)
      || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.onDate(_:)
      || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.afterDate(_:))
    {
LABEL_9:
      uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
      v18(v8, v5);
      uint64_t v19 = v1[7];
      if (v19) {
        unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFFELL;
      }
      else {
        unint64_t v20 = 1;
      }
      v1[7] = v20;
      v21._object = (void *)0x80000001006A5920;
      v21._countAndFlagsBits = 0xD000000000000011;
      TTRDeferredAction.scheduleNextRunLoop(reason:)(v21);
      return ((uint64_t (*)(char *, uint64_t))v18)(v11, v5);
    }
    if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.any(_:)
      || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.noDate(_:))
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A2A8C()
{
  NSString v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_100789F98);
  __chkstk_darwin(v2 - 8);
  NSString v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[14];
  sub_100038D28(v0 + 10, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_10003B6F8((uint64_t)v4, &qword_100789F98);
  }
  uint64_t v15 = (void *)v14;
  REMCustomSmartListFilterDescriptor.date.getter();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10003B6F8((uint64_t)v4, &qword_100789F98);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.today(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.dateRange(_:))
  {
    unint64_t v18 = 2;
    if ((v1[7] & 2) != 0) {
      unint64_t v18 = v1[7] & 0xFFFFFFFFFFFFFFFDLL;
    }
    v1[7] = v18;
    v19._object = (void *)0x80000001006A5920;
    v19._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v19);
    goto LABEL_16;
  }
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.relativeRange(_:)
    || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.beforeDate(_:)
    || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.onDate(_:)
    || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.afterDate(_:))
  {
LABEL_16:
    unint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20(v11, v5);
    return ((uint64_t (*)(char *, uint64_t))v20)(v8, v5);
  }
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.any(_:)
    || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.noDate(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1003A2DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 88) = v14;
  *(void *)(v8 + 96) = v15;
  *(unsigned char *)(v8 + 128) = a8;
  *(void *)(v8 + 72) = a6;
  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 64) = a5;
  *(void *)(v8 + 104) = type metadata accessor for MainActor();
  *(void *)(v8 + 112) = static MainActor.shared.getter();
  *(void *)(v8 + 56) = a4;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v8 + 120) = v10;
  uint64_t v11 = type metadata accessor for TTRIPrivacyChecker();
  void *v10 = v8;
  v10[1] = sub_1003A2EC0;
  return TTRPrivacyChecker.checkAndPromptLocationAccess()(v11, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_1003A2EC0()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003A2FFC, v1, v0);
}

uint64_t sub_1003A2FFC()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  char v3 = *(unsigned char *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v6 = *(void **)(v0 + 64);
  swift_release();
  sub_100038D28(v6, v6[3]);
  sub_1000145EC(v1, v0 + 16);
  uint64_t v7 = swift_allocObject();
  sub_100038ED8((long long *)(v0 + 16), v7 + 16);
  sub_1003A7140(v5, v4, v3, v2, (uint64_t)sub_1003A8274, v7);
  swift_release();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1003A3100(void *a1, uint64_t a2)
{
  uint64_t v4 = self;
  v5._countAndFlagsBits = 0xD000000000000027;
  v6._countAndFlagsBits = 0xD00000000000003BLL;
  v5._object = (void *)0x80000001006B7FA0;
  v7._object = (void *)0x80000001006B7FD0;
  v6._object = (void *)0x80000001006B7FF0;
  v7._countAndFlagsBits = 0xD000000000000016;
  TTRLocalizedString(_:value:comment:)(v5, v7, v6);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1000145EC(a2, (uint64_t)v15);
  uint64_t v9 = swift_allocObject();
  sub_100038ED8(v15, v9 + 16);
  *(void *)(v9 + 56) = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1003A82BC;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_1007488B8;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = a1;
  swift_retain();
  swift_release();
  [(id)v4 withActionName:v8 block:v11];

  _Block_release(v11);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A32F0(void *a1)
{
  uint64_t v2 = sub_10003B754(&qword_100789F88);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_100038D28(a1, v5);
  REMCustomSmartListFilterDescriptor.location.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v4, v5, v6);
  return sub_10003B6F8((uint64_t)v4, &qword_100789F88);
}

void sub_1003A33C0()
{
  uint64_t v1 = v0;
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_10079CB90);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  sub_100038D28(v0 + 15, v0[18]);
  if (qword_100785250 != -1) {
    swift_once();
  }
  sub_100018BF8(v2, (uint64_t)qword_10078ADD0);
  sub_1003AA294(0x746544207473694CLL, 0xEB000000006C6961);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    id v5 = [Strong navigationController];

    if (v5)
    {
      [v5 dismissViewControllerAnimated:1 completion:0];
    }
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v6 = v1[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = v1[13];
    uint64_t v9 = v1[14];
    sub_100038D28(v1 + 10, v8);
    id v10 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    (*(void (**)(void *, _UNKNOWN **, id, uint64_t, uint64_t))(v6 + 8))(v1, &off_1007482A8, v10, ObjectType, v6);
    swift_unknownObjectRelease();
  }
}

void sub_1003A35F4()
{
  uint64_t v1 = v0;
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_10079CB90);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[14];
  sub_100038D28(v0 + 10, v3);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4))
  {
    id v5 = [self alertControllerWithTitle:0 message:0 preferredStyle:0];
    static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter();
    uint64_t v6 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v21[4] = sub_1003A89E0;
    v21[5] = v6;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    v21[2] = sub_1001077FC;
    void v21[3] = &unk_100748B88;
    uint64_t v8 = _Block_copy(v21);
    swift_release();
    uint64_t v9 = self;
    id v10 = [v9 actionWithTitle:v7 style:2 handler:v8];
    _Block_release(v8);
    swift_release();

    static TTRLocalizableStrings.Common.alertCancelButton.getter();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v9 actionWithTitle:v11 style:1 handler:0];

    [v5 addAction:v10];
    [v5 addAction:v12];
    UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)();
    sub_100038D28(v1 + 15, v1[18]);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong
      && (uint64_t v14 = Strong,
          id v15 = [Strong navigationController],
          v14,
          v15))
    {
      [v15 presentViewController:v5 animated:1 completion:0];
    }
    else
    {
    }
  }
  else
  {
    sub_100038D28(v0 + 15, v0[18]);
    if (qword_100785250 != -1) {
      swift_once();
    }
    sub_100018BF8(v2, (uint64_t)qword_10078ADD0);
    sub_1003AA294(0x746544207473694CLL, 0xEB000000006C6961);
    int v16 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v16)
    {
      id v17 = v16;
      id v18 = [v16 navigationController];

      if (v18)
      {
        [v18 dismissViewControllerAnimated:1 completion:0];
      }
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v19 = v1[5];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v19 + 16))(v1, &off_1007482A8, ObjectType, v19);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1003A3A40()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    sub_100038D28((void *)(result + 120), *(void *)(result + 144));
    if (qword_100785250 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100018BF8(v2, (uint64_t)qword_10078ADD0);
    sub_1003AA294(0x746544207473694CLL, 0xEB000000006C6961);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v4 = Strong;
      id v5 = [Strong navigationController];

      if (v5)
      {
        [v5 dismissViewControllerAnimated:1 completion:0];
      }
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v6 = *(void *)(v1 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v6 + 16))(v1, &off_1007482A8, ObjectType, v6);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1003A3BB4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    *(void *)(result + 280) = 0;
    swift_release();
    static TTRLocalizableStrings.UndoAction.locationChange.getter();
    id v5 = self;
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(unsigned char *)(v7 + 24) = v2;
    *(void *)(v7 + 32) = v4;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_1003A80B8;
    *(void *)(v8 + 24) = v7;
    aBlock[4] = sub_1000499FC;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021888;
    aBlock[3] = &unk_1007487F0;
    uint64_t v9 = _Block_copy(aBlock);
    id v10 = v1;
    swift_retain();
    swift_retain();
    swift_release();
    [v5 withActionName:v6 block:v9];
    swift_release();

    _Block_release(v9);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v4) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1003A3D9C(void *a1, char a2, void *a3)
{
  uint64_t v6 = sub_10003B754(&qword_100789F88);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (uint64_t *)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  id v15 = (uint64_t *)((char *)&v36 - v14);
  id v16 = a1;
  id v17 = v16;
  if (a2)
  {
    *id v12 = (uint64_t)[v16 event];
    (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for REMCustomSmartListFilterDescriptor.FilterLocation.vehicle(_:), v9);
    uint64_t v24 = a3[13];
    uint64_t v25 = a3[14];
    sub_100038D28(a3 + 10, v24);
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(v8, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v8, v24, v25);
    id v18 = v17;
    id v15 = v12;
  }
  else
  {
    id v18 = [v16 structuredLocation];
    id v19 = [v18 displayName];
    if (v19)
    {
      unint64_t v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      unint64_t v23 = 0xE000000000000000;
    }
    [v18 latitude];
    uint64_t v27 = v26;
    [v18 longitude];
    uint64_t v29 = v28;
    [v18 radius];
    uint64_t v31 = v30;
    id v32 = [v17 proximity];
    *id v15 = v21;
    v15[1] = v23;
    long long v15[2] = v27;
    void v15[3] = v29;
    v15[4] = v31;
    v15[5] = (uint64_t)v32;
    (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v15, enum case for REMCustomSmartListFilterDescriptor.FilterLocation.location(_:), v9);
    uint64_t v33 = a3[13];
    uint64_t v34 = a3[14];
    sub_100038D28(a3 + 10, v33);
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(v8, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 104))(v8, v33, v34);
  }
  sub_10003B6F8((uint64_t)v8, &qword_100789F88);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_1003A4124@<X0>(BOOL *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v3 = result;
  if (result)
  {
    v4._object = (void *)0x80000001006A5920;
    v4._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v4);
    uint64_t result = swift_release();
  }
  *a1 = v3 == 0;
  return result;
}

uint64_t sub_1003A41B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  type metadata accessor for MainActor();
  v4[8] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[9] = v6;
  v4[10] = v5;
  return _swift_task_switch(sub_1003A4250, v6, v5);
}

uint64_t sub_1003A4250()
{
  uint64_t v1 = sub_100038D28((void *)(*(void *)(v0 + 56) + 168), *(void *)(*(void *)(v0 + 56) + 192));
  uint64_t v2 = *v1;
  *(void *)(v0 + 88) = *v1;
  return _swift_task_switch(sub_1003A42C4, v2, 0);
}

uint64_t sub_1003A42C4()
{
  uint64_t v1 = *(void *)(v0 + 88);
  if (*(void *)(v1 + 160))
  {
    *(unsigned char *)(v0 + 122) = *(unsigned char *)(v1 + 168) & 1;
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 80);
    return _swift_task_switch(sub_1003A4784, v2, v3);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1003A43A0;
    return sub_1005E9BD8();
  }
}

uint64_t sub_1003A43A0(uint64_t a1, __int16 a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 104) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = *(void *)(v6 + 72);
    uint64_t v8 = *(void *)(v6 + 80);
    uint64_t v9 = sub_1003A4554;
  }
  else
  {
    uint64_t v7 = *(void *)(v6 + 88);
    *(_WORD *)(v6 + 120) = a2;
    *(void *)(v6 + 112) = a1;
    uint64_t v9 = sub_1003A44E4;
    uint64_t v8 = 0;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_1003A44E4()
{
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 122) = *(_WORD *)(v0 + 120) & 1;
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_1003A4784, v1, v2);
}

uint64_t sub_1003A4554()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_10079CB90);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.rem_errorDescription.getter();
    *(void *)(v0 + 48) = sub_1000385A8(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to get iCloud device info %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003A4784()
{
  int v1 = *(unsigned __int8 *)(v0 + 122);
  uint64_t v2 = *(void *)(v0 + 56);
  swift_release();
  if (v1 != *(unsigned __int8 *)(v2 + 64))
  {
    *(unsigned char *)(v2 + 64) = *(unsigned char *)(v0 + 122);
    v3._object = (void *)0x80000001006A5920;
    v3._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v3);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_1003A4820()
{
  int v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[14];
  sub_100038D28(v0 + 10, v5);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6) & 1) != 0 && swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v7 = v0[5];
    uint64_t ObjectType = swift_getObjectType();
    id v23 = (id)(*(uint64_t (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v7 + 24))(v0, &off_1007482A8, ObjectType, v7);
    swift_unknownObjectRelease();
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[14];
    sub_100038D28(v0 + 10, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    if (v11)
    {
      id v12 = (void *)v11;
      sub_1000145EC((uint64_t)(v0 + 28), (uint64_t)v24);
      uint64_t v13 = v25;
      uint64_t v14 = v26;
      sub_100038D28(v24, v25);
      uint64_t v15 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
      char v16 = (*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v14 + 8))(v23, v15, v13, v14);
      sub_100038CD8((uint64_t)v24);
      if (v16)
      {
      }
      else
      {
        uint64_t v18 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
        type metadata accessor for MainActor();
        swift_retain();
        id v19 = v23;
        id v20 = v12;
        uint64_t v21 = static MainActor.shared.getter();
        unint64_t v22 = (void *)swift_allocObject();
        v22[2] = v21;
        void v22[3] = &protocol witness table for MainActor;
        void v22[4] = v1;
        v22[5] = v19;
        v22[6] = v20;
        sub_1000286A4((uint64_t)v4, (uint64_t)&unk_10079CD10, (uint64_t)v22);
        swift_release();
      }
    }
    else
    {
      id v17 = v23;
    }
  }
}

uint64_t sub_1003A4AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[23] = a5;
  v6[24] = a6;
  v6[22] = a4;
  v6[25] = type metadata accessor for MainActor();
  v6[26] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[27] = v8;
  v6[28] = v7;
  return _swift_task_switch(sub_1003A4B68, v8, v7);
}

uint64_t sub_1003A4B68()
{
  int v1 = sub_100038D28((void *)(*(void *)(v0 + 176) + 168), *(void *)(*(void *)(v0 + 176) + 192));
  uint64_t v2 = *v1;
  *(void *)(v0 + 232) = *v1;
  return _swift_task_switch(sub_1003A4BDC, v2, 0);
}

uint64_t sub_1003A4BDC()
{
  uint64_t v1 = *(void *)(v0 + 232);
  if (*(void *)(v1 + 160))
  {
    *(unsigned char *)(v0 + 365) = *(unsigned char *)(v1 + 168);
    uint64_t v2 = *(void *)(v0 + 216);
    uint64_t v3 = *(void *)(v0 + 224);
    return _swift_task_switch(sub_1003A5138, v2, v3);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1003A4CB4;
    return sub_1005E9BD8();
  }
}

uint64_t sub_1003A4CB4(uint64_t a1, __int16 a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 248) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = *(void *)(v6 + 216);
    uint64_t v8 = *(void *)(v6 + 224);
    uint64_t v9 = sub_1003A4F10;
  }
  else
  {
    uint64_t v7 = *(void *)(v6 + 232);
    *(_WORD *)(v6 + 360) = a2;
    *(void *)(v6 + 256) = a1;
    uint64_t v9 = sub_1003A4DF8;
    uint64_t v8 = 0;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_1003A4DF8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  return _swift_task_switch(sub_1003A4E5C, v1, v2);
}

uint64_t sub_1003A4E5C()
{
  if (*(_WORD *)(v0 + 360))
  {
    uint64_t v3 = sub_100038D28((void *)(*(void *)(v0 + 176) + 168), *(void *)(*(void *)(v0 + 176) + 192));
    uint64_t v4 = *v3;
    *(void *)(v0 + 264) = *v3;
    return _swift_task_switch(sub_1003A51EC, v4, 0);
  }
  else
  {
    swift_release();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
}

uint64_t sub_1003A4F10()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_10079CB90);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.rem_errorDescription.getter();
    *(void *)(v0 + 168) = sub_1000385A8(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to get iCloud device info %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003A5138()
{
  if (*(unsigned char *)(v0 + 365))
  {
    os_log_type_t v3 = sub_100038D28((void *)(*(void *)(v0 + 176) + 168), *(void *)(*(void *)(v0 + 176) + 192));
    uint64_t v4 = *v3;
    *(void *)(v0 + 264) = *v3;
    return _swift_task_switch(sub_1003A51EC, v4, 0);
  }
  else
  {
    swift_release();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
}

uint64_t sub_1003A51EC()
{
  uint64_t v1 = *(void *)(v0[33] + 160);
  if (v1)
  {
    v0[36] = v1;
    uint64_t v2 = v0[27];
    uint64_t v3 = v0[28];
    swift_bridgeObjectRetain();
    return _swift_task_switch(sub_1003A562C, v2, v3);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[34] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1003A52DC;
    return sub_1005E9BD8();
  }
}

uint64_t sub_1003A52DC(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 280) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[27];
    uint64_t v6 = v4[28];
    uint64_t v7 = sub_1003A5404;
  }
  else
  {
    v4[36] = a1;
    uint64_t v5 = v4[27];
    uint64_t v6 = v4[28];
    uint64_t v7 = sub_1003A562C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_1003A5404()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_10079CB90);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.rem_errorDescription.getter();
    *(void *)(v0 + 168) = sub_1000385A8(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to get iCloud device info %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003A562C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 288) + 16);
  if (v1)
  {
    uint64_t v2 = (char *)(swift_bridgeObjectRetain() + 49);
    os_log_type_t v3 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(v2 - 1) & 1) == 0)
      {
        uint64_t v5 = *(void *)(v2 - 17);
        uint64_t v6 = *(void *)(v2 - 9);
        char v7 = *v2;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          os_log_type_t v3 = sub_100571A94(0, v3[2] + 1, 1, v3);
        }
        unint64_t v9 = v3[2];
        unint64_t v8 = v3[3];
        if (v9 >= v8 >> 1) {
          os_log_type_t v3 = sub_100571A94((void *)(v8 > 1), v9 + 1, 1, v3);
        }
        v3[2] = v9 + 1;
        uint64_t v4 = &v3[3 * v9];
        v4[4] = v5;
        v4[5] = v6;
        *((unsigned char *)v4 + 48) = v7 ^ 1;
      }
      v2 += 24;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = *(void *)(v0 + 176);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0xD000000000000023;
  v12._countAndFlagsBits = 0xD00000000000003BLL;
  v11._object = (void *)0x80000001006B7C70;
  v13._object = (void *)0x80000001006B7CA0;
  v12._object = (void *)0x80000001006B7CD0;
  v13._countAndFlagsBits = 0xD000000000000021;
  TTRLocalizedString(_:value:comment:)(v11, v13, v12);
  uint64_t v14 = sub_10039A2A8((uint64_t)v3);
  swift_bridgeObjectRelease();
  _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO05smartE21HiddenInformativeText7devicesSSSaySS4name_Sb15cannotBeUpdatedtG_tFZ_0((uint64_t)v14);
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 296) = [self alertControllerWithTitle:v15 message:v16 preferredStyle:1];

  id v17 = sub_100038D28((void *)(v10 + 120), *(void *)(v10 + 144));
  sub_10003B754(&qword_100791E90);
  uint64_t v18 = swift_allocObject();
  *(void *)(v0 + 304) = v18;
  *(_OWORD *)(v18 + 16) = xmmword_10066C680;
  static TTRLocalizableStrings.Common.alertOKButton.getter();
  *(unsigned char *)(v0 + 364) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  static TTRLocalizableStrings.Common.learnMoreButton.getter();
  *(unsigned char *)(v0 + 362) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  *(void *)(v0 + 312) = *v17;
  *(void *)(v0 + 320) = static MainActor.shared.getter();
  uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 328) = v20;
  *(void *)(v0 + 336) = v19;
  return _swift_task_switch(sub_1003A5938, v20, v19);
}

uint64_t sub_1003A5938()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[43] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[44] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1003A5A4C;
    uint64_t v3 = v0[37];
    uint64_t v4 = v0[38];
    return UIViewController.present<A>(alert:actions:didPresent:animated:)((char *)v0 + 363, v3, v4, 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = v0[27];
    uint64_t v6 = v0[28];
    return _swift_task_switch(sub_1003A5DC8, v5, v6);
  }
}

uint64_t sub_1003A5A4C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 344);
  swift_task_dealloc();

  *(unsigned char *)(v1 + 366) = *(unsigned char *)(v1 + 363);
  uint64_t v3 = *(void *)(v1 + 336);
  uint64_t v4 = *(void *)(v1 + 328);
  return _swift_task_switch(sub_1003A5B90, v4, v3);
}

uint64_t sub_1003A5B90()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  return _swift_task_switch(sub_1003A5C00, v1, v2);
}

uint64_t sub_1003A5C00()
{
  int v1 = *(unsigned __int8 *)(v0 + 366);
  swift_release();
  if (v1 == 1)
  {
    sub_100038D28((void *)(*(void *)(v0 + 176) + 120), *(void *)(*(void *)(v0 + 176) + 144));
    uint64_t v2 = (uint64_t *)TTRHelpAnchor.IOSHelpTopic.defaultVersion.unsafeMutableAddressor();
    uint64_t v3 = *v2;
    uint64_t v4 = v2[1];
    *(void *)(v0 + 16) = 0xD000000000000014;
    *(void *)(v0 + 24) = 0x80000001006AEF80;
    *(void *)(v0 + 32) = v3;
    *(void *)(v0 + 40) = v4;
    *(_OWORD *)(v0 + 48) = xmmword_1006721A0;
    *(_OWORD *)(v0 + 64) = xmmword_1006721B0;
    *(void *)(v0 + 80) = 0xD000000000000018;
    *(void *)(v0 + 88) = 0x80000001006AEFA0;
    swift_bridgeObjectRetain();
    sub_1000CD4F0();
    sub_100245D94(0xD000000000000014, 0x80000001006AEF80);
    sub_1001D8FF8(0x393739646E6D6572, 0xEC00000064336133);
  }
  uint64_t v5 = *(void **)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 184);
  sub_1000145EC(*(void *)(v0 + 176) + 224, v0 + 96);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 128);
  sub_100038D28((void *)(v0 + 96), v7);
  uint64_t v9 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v9, v7, v8);

  sub_100038CD8(v0 + 96);
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1003A5DC8()
{
  swift_release();
  int v1 = (void *)v0[37];
  uint64_t v2 = v0[23];
  sub_1000145EC(v0[22] + 224, (uint64_t)(v0 + 12));
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  sub_100038D28(v0 + 12, v3);
  uint64_t v5 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3, v4);

  sub_100038CD8((uint64_t)(v0 + 12));
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

id *sub_1003A5EA8()
{
  sub_1000499D4((uint64_t)(v0 + 2));
  sub_1000499D4((uint64_t)(v0 + 4));

  sub_100038CD8((uint64_t)(v0 + 10));
  sub_100038CD8((uint64_t)(v0 + 15));
  swift_release();
  sub_100038CD8((uint64_t)(v0 + 21));

  swift_release();
  sub_100038CD8((uint64_t)(v0 + 28));
  swift_unknownObjectRelease();
  swift_release();
  int v1 = (char *)v0 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache;
  uint64_t v2 = type metadata accessor for REMHashtagLabelSpecifier();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1003A5F74()
{
  sub_1003A5EA8();

  return swift_deallocClassInstance();
}

uint64_t sub_1003A5FCC()
{
  return type metadata accessor for TTRISmartListFilterEditorPresenter(0);
}

uint64_t type metadata accessor for TTRISmartListFilterEditorPresenter(uint64_t a1)
{
  return sub_100030FD4(a1, qword_10079CBD8);
}

uint64_t sub_1003A5FF4()
{
  uint64_t result = type metadata accessor for REMHashtagLabelSpecifier();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_1003A60F4(void *a1)
{
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  uint64_t v2 = (void *)static UIFont.roundedBodyFont.getter();
  [a1 setFont:v2];

  id v3 = [self labelColor];
  [a1 setTextColor:v3];

  [a1 setAdjustsFontForContentSizeCategory:1];
  [a1 setAdjustsFontSizeToFitWidth:1];
  [a1 setMinimumFontSize:14.0];
  [a1 setClearButtonMode:1];
  [a1 setBorderStyle:0];
  [a1 setAutocapitalizationType:1];
  [a1 setKeyboardType:0];
  static TTRLocalizableStrings.Hashtags.addTagPromptPlaceholder.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 setPlaceholder:v4];

  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  id v6 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [a1 addAction:v6 forControlEvents:0x20000];
}

void sub_1003A630C(void *a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if ([a1 sender])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v10, 0, sizeof(v10));
    }
    sub_100028C3C((uint64_t)v10, (uint64_t)v11, &qword_100788D60);
    if (v12)
    {
      sub_1000368FC(0, (unint64_t *)&qword_1007A7480);
      if (swift_dynamicCast())
      {
        id v2 = [v9 markedTextRange];

        if (v2)
        {
          swift_release();
        }
        else
        {
          id v3 = [v9 text];
          if (v3)
          {
            NSString v4 = v3;
            uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v7 = v6;
          }
          else
          {
            uint64_t v5 = 0;
            unint64_t v7 = 0xE000000000000000;
          }
          sub_1003A7494(v5, v7);
          swift_bridgeObjectRelease();
          NSString v8 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v9 setText:v8];
          swift_release();
        }
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
      sub_10003B6F8((uint64_t)v11, &qword_100788D60);
    }
  }
}

void sub_1003A64F4()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {
      swift_release();
      return;
    }
    unint64_t v1 = Strong;
    id v2 = [Strong textFields];
    if (!v2)
    {
      swift_release();

      return;
    }
    id v3 = v2;
    sub_1000368FC(0, (unint64_t *)&qword_1007A7480);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v4 & 0xC000000000000001) != 0)
    {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v5 = *(id *)(v4 + 32);
    }
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    id v7 = [v6 text];
    if (v7)
    {
      NSString v8 = v7;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v10;

      uint64_t v12 = sub_1003A7494(v9, v11);
      unint64_t v14 = v13;
      swift_bridgeObjectRelease();
      sub_1003A66A0(v12, v14);
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1003A66A0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v74 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (uint64_t *)((char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v73 = (char *)&v64 - v8;
  uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
  uint64_t v76 = *(void *)(v9 - 8);
  uint64_t v77 = v9;
  __chkstk_darwin(v9);
  uint64_t v68 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v75 = (char *)&v64 - v12;
  uint64_t v13 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v78 = *(void *)(v13 - 8);
  uint64_t v79 = v13;
  __chkstk_darwin(v13);
  NSString v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v64 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v64 - v20;
  uint64_t v72 = type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel();
  __chkstk_darwin(v72);
  id v23 = (uint64_t *)((char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1007854F0 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100018BF8(v24, (uint64_t)qword_10079CB90);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v26 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v26 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v26)
  {
    uint64_t v67 = v6;
    sub_10039A4CC(v23);
    swift_bridgeObjectRetain();
    REMHashtagLabelCollection.init(labels:)();
    v27._countAndFlagsBits = a1;
    v27._object = (void *)a2;
    Swift::Bool v28 = REMHashtagLabelCollection.contains(matchOfHashtagName:)(v27);
    uint64_t v71 = v23;
    if (v28)
    {
      uint64_t v29 = 0;
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v64 = v4;
      sub_10003B754((uint64_t *)&unk_100791C60);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_10066C6F0;
      *(void *)(v31 + 32) = a1;
      *(void *)(v31 + 40) = a2;
      swift_bridgeObjectRetain();
      REMHashtagLabelCollection.init(labels:)();
      REMHashtagLabelCollection.union(_:)();
      uint64_t v32 = v78;
      char v66 = *(void (**)(char *, uint64_t))(v78 + 8);
      uint64_t v33 = v79;
      v66(v21, v79);
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v21, v15, v33);
      id v65 = self;
      v34._countAndFlagsBits = 0xD00000000000001FLL;
      v35._countAndFlagsBits = 0xD000000000000036;
      v34._object = (void *)0x80000001006B7DF0;
      v35._object = (void *)0x80000001006B7E10;
      v36._countAndFlagsBits = 0x67615420646441;
      v36._object = (void *)0xE700000000000000;
      TTRLocalizedString(_:value:comment:)(v34, v36, v35);
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      os_log_t v38 = (void *)swift_allocObject();
      v38[2] = v80;
      void v38[3] = a1;
      v38[4] = a2;
      uint64_t v39 = swift_allocObject();
      uint64_t v69 = sub_1003A78F8;
      *(void *)(v39 + 16) = sub_1003A78F8;
      *(void *)(v39 + 24) = v38;
      uint64_t v70 = v38;
      aBlock[4] = sub_1000499FC;
      aBlock[5] = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100021888;
      aBlock[3] = &unk_100748570;
      char v40 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_release();
      [v65 withActionName:v37 block:v40];
      _Block_release(v40);

      v66(v18, v79);
      LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if (v37)
      {
        __break(1u);
        return result;
      }
      uint64_t v4 = v64;
      id v23 = v71;
      uint64_t v30 = v70;
      uint64_t v29 = (uint64_t)v69;
    }
    v41._countAndFlagsBits = a1;
    v41._object = (void *)a2;
    Swift::Bool v42 = REMHashtagLabelCollection.contains(matchOfHashtagName:)(v41);
    uint64_t v43 = v75;
    if (v42)
    {
      uint64_t v69 = (uint64_t (*)())v29;
      uint64_t v70 = v30;
      sub_10003B754((uint64_t *)&unk_100791C60);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
      *(void *)(inited + 32) = a1;
      *(void *)(inited + 40) = a2;
      swift_bridgeObjectRetain();
      Swift::Int v45 = sub_10000B844(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v47 = v76;
      uint64_t v46 = v77;
      (*(void (**)(char *, void, uint64_t))(v76 + 104))(v43, enum case for REMHashtagLabelSpecifier.Operation.and(_:), v77);
      int v48 = (char *)v23 + *(int *)(v72 + 20);
      uint64_t v50 = (uint64_t *)v73;
      uint64_t v49 = v74;
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v73, v48, v4);
      int v51 = (*(uint64_t (**)(uint64_t *, uint64_t))(v49 + 88))(v50, v4);
      uint64_t v52 = enum case for REMHashtagLabelSpecifier.labels(_:);
      if (v51 == enum case for REMHashtagLabelSpecifier.labels(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v49 + 96))(v50, v4);
        uint64_t v53 = *v50;
        uint64_t v54 = (void *)v50[1];
        uint64_t v55 = (char *)v50 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
        uint64_t v57 = v68;
        v56(v68, v55, v77);
        uint64_t v58 = v53;
        uint64_t v49 = v74;
        Swift::Int v45 = sub_100597328(v58, v45);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v77);
        v56(v43, v57, v77);
        uint64_t v47 = v76;
        uint64_t v46 = v77;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v50, v4);
        uint64_t v54 = &_swiftEmptySetSingleton;
      }
      char v59 = v43;
      uint64_t v60 = sub_10003B754((uint64_t *)&unk_1007AD340);
      uint64_t v61 = (uint64_t)v67;
      uint64_t v62 = (char *)v67 + *(int *)(v60 + 64);
      *uint64_t v67 = v45;
      *(void *)(v61 + 8) = v54;
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v62, v59, v46);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 104))(v61, v52, v4);
      sub_1003A104C(v61);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v61, v4);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v46);
      id v23 = v71;
      uint64_t v29 = (uint64_t)v69;
    }
    v63._object = (void *)0x80000001006A5920;
    v63._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v63);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v21, v79);
    sub_1003A7D34((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel);
    return sub_1000499C4(v29);
  }
  return result;
}

void sub_1003A6F88()
{
  sub_1003A4820();
  sub_10039AC54();
  v0._object = (void *)0x80000001006A5920;
  v0._countAndFlagsBits = 0xD000000000000011;
  TTRDeferredAction.scheduleNextRunLoop(reason:)(v0);
}

void sub_1003A6FCC()
{
  v0._object = (void *)0x80000001006A5920;
  v0._countAndFlagsBits = 0xD000000000000011;
  TTRDeferredAction.scheduleNextRunLoop(reason:)(v0);
}

void sub_1003A7008()
{
}

void sub_1003A7034()
{
}

uint64_t sub_1003A7060()
{
  return sub_1000078E0((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1003A708C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10003D2E4;
  return sub_1003A41B8(a1, v4, v5, v6);
}

void sub_1003A7140(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v9 = Strong,
        id v10 = [Strong navigationController],
        v9,
        v10))
  {
    oslog = static TTRIReminderLocationPickerAssembly.createViewController(filter:store:showsDoneButton:savesOnCommit:delegate:undoManager:save:)();
    swift_unknownObjectRelease();
    [v10 pushViewController:oslog animated:a3 & 1];
  }
  else
  {
    if (qword_100785250 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100018BF8(v11, (uint64_t)qword_10078ADD0);
    oslog = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "Failed to get navigation controller -- Failed to show location picker", v13, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1003A72E0()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003A7330(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10003D2E4;
  return sub_1003A4AC8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1003A73F8(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = String.index(_:offsetBy:limitedBy:)();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return String.subscript.getter(a1, a2, a3, a4);
}

uint64_t sub_1003A7494(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = 0xE000000000000000;
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  uint64_t v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  v21[0] = a1;
  v21[1] = a2;
  v21[2] = 0;
  void v21[3] = v9;
  swift_bridgeObjectRetain();
  Swift::String_optional v10 = String.Iterator.next()();
  if (v10.value._object)
  {
    uint64_t countAndFlagsBits = v10.value._countAndFlagsBits;
    object = v10.value._object;
    do
    {
      static CharacterSet.hashtagTokenAllowedCharacters.getter();
      v14._uint64_t countAndFlagsBits = countAndFlagsBits;
      v14._object = object;
      Swift::Bool v15 = CharacterSet.containsUnicodeScalars(of:)(v14);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (v15)
      {
        v16._uint64_t countAndFlagsBits = countAndFlagsBits;
        v16._object = object;
        String.append(_:)(v16);
      }
      swift_bridgeObjectRelease();
      Swift::String_optional v13 = String.Iterator.next()();
      uint64_t countAndFlagsBits = v13.value._countAndFlagsBits;
      object = v13.value._object;
    }
    while (v13.value._object);
    uint64_t v17 = v22;
    unint64_t v8 = v23;
  }
  else
  {
    uint64_t v17 = 0;
  }
  swift_bridgeObjectRelease();
  sub_1003A73F8(75, v17, v8, v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = static String._fromSubstring(_:)();
  swift_bridgeObjectRelease();
  return v19;
}

void sub_1003A7664()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (*(void *)(Strong + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_tableDataController))
    {
      __chkstk_darwin(Strong);
      id v2 = v1;
      TTRITableDataController.performBatchUpdates(by:updates:)();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_1003A7738()
{
}

uint64_t sub_1003A7740()
{
  return sub_1003A8578(&qword_100789FA0, (uint64_t (*)(void))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags);
}

uint64_t sub_1003A7760()
{
  uint64_t v1 = *(void *)(sub_10003B754(&qword_100789FA0) - 8);
  id v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v4 = v2[13];
  uint64_t v5 = v2[14];
  sub_100038D28(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(v3, v4, v5);
}

uint64_t sub_1003A77FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003A780C(void *a1)
{
}

uint64_t sub_1003A7814()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A784C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A7884()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003A78C4()
{
}

uint64_t sub_1003A78CC()
{
  return sub_1000078E0((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003A78F8()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[14];
  sub_100038D28(v1 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, v3, v4, v5);
}

uint64_t sub_1003A7960()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A7970()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(sub_10003B754(&qword_100789FA0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v8, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v8, v10);
  }

  return _swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_1003A7B14()
{
  uint64_t v1 = *(void *)(type metadata accessor for REMHashtagLabelSpecifier() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_10003B754(&qword_100789FA0) - 8);
  uint64_t v5 = *(void **)(v0 + 16);
  uint64_t v6 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1003A1644(v5, v0 + v2, v6);
}

uint64_t sub_1003A7BE8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003A7BF8(void *a1)
{
}

uint64_t sub_1003A7C00()
{
  return sub_1003A8578(&qword_100789F98, (uint64_t (*)(void))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
}

uint64_t sub_1003A7C20()
{
  uint64_t v1 = *(void *)(sub_10003B754(&qword_100789F98) - 8);
  unint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v4 = v2[13];
  uint64_t v5 = v2[14];
  sub_100038D28(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 72))(v3, v4, v5);
}

uint64_t sub_1003A7CBC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A7CCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField(uint64_t a1)
{
  return sub_100030FD4(a1, qword_10079CE18);
}

uint64_t sub_1003A7D34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003A7D94()
{
  return sub_10039E494(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003A7D9C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A7DAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003A7E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100789F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A7E7C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A7EB4()
{
  return sub_10039FE84(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003A7EBC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A7ECC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003A7F14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10003D2E4;
  return sub_10039F810(a1, v4, v5, v7, v6);
}

uint64_t sub_1003A7FD4(uint64_t a1)
{
  return sub_1003A3BB4(a1);
}

unint64_t sub_1003A7FDC()
{
  unint64_t result = qword_100791C90;
  if (!qword_100791C90)
  {
    sub_100039710(&qword_100791C88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100791C90);
  }
  return result;
}

uint64_t sub_1003A8038(uint64_t result, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6)
{
  if (a6)
  {
    sub_100246478(result, a2, a3, a4, a5);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1003A8078()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003A80B8()
{
  return sub_1003A3D9C(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003A80C8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A80D8()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_100038CD8(v0 + 40);

  swift_release();
  sub_100038CD8(v0 + 112);

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1003A8140(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 80);
  uint64_t v7 = *(void *)(v1 + 88);
  char v8 = *(unsigned char *)(v1 + 96);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000C2D4;
  return sub_1003A2DE0(a1, v11, v4, v5, v1 + 40, v6, v7, v8);
}

uint64_t sub_1003A823C()
{
  sub_100038CD8(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003A8274(void *a1)
{
  return sub_1003A3100(a1, v1 + 16);
}

uint64_t sub_1003A827C()
{
  sub_100038CD8(v0 + 16);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003A82BC()
{
  return sub_1003A32F0((void *)(v0 + 16));
}

uint64_t sub_1003A82C8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A82D8()
{
  return sub_1000078E0((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1003A8304(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10003D2E4;
  return sub_1003A0420(a1, v4, v5, v6);
}

uint64_t sub_1003A83B8()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_1003A83F0(uint64_t a1, char a2)
{
  sub_1003A2344(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1003A83FC()
{
  return sub_1003A8578(&qword_100789F80, (uint64_t (*)(void))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists);
}

uint64_t sub_1003A841C()
{
  uint64_t v1 = *(void *)(sub_10003B754(&qword_100789F80) - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v4 = v2[13];
  uint64_t v5 = v2[14];
  sub_100038D28(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 112))(v3, v4, v5);
}

uint64_t sub_1003A84B8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A84C8()
{
  return sub_10039EE84(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1003A84D4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A84E4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[13];
  uint64_t v3 = v1[14];
  uint64_t v4 = *(unsigned __int8 *)(v0 + 24);
  sub_100038D28(v1 + 10, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 96))(v4, v2, v3);
}

uint64_t sub_1003A8548()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A8558()
{
  return sub_1003A8578(&qword_100789F90, (uint64_t (*)(void))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime);
}

uint64_t sub_1003A8578(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *(void *)(sub_10003B754(a1) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 24) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  swift_release();
  uint64_t v8 = a2(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v2 + v6, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2 + v6, v8);
  }

  return _swift_deallocObject(v2, v6 + v7, v5 | 7);
}

uint64_t sub_1003A86A0()
{
  uint64_t v1 = *(void *)(sub_10003B754(&qword_100789F90) - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v4 = v2[13];
  uint64_t v5 = v2[14];
  sub_100038D28(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 80))(v3, v4, v5);
}

uint64_t sub_1003A873C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A874C()
{
  uint64_t v1 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003A8818()
{
  uint64_t v1 = *(void *)(type metadata accessor for REMCustomSmartListFilterDescriptor.Operation() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v4 = v2[13];
  uint64_t v5 = v2[14];
  sub_100038D28(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v4, v5);
}

uint64_t sub_1003A88B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A88C0(uint64_t result)
{
  *(unsigned char *)(result + 169) = 0;
  return result;
}

uint64_t sub_1003A88C8(uint64_t result)
{
  *(unsigned char *)(result + 169) = 1;
  return result;
}

uint64_t sub_1003A88D4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  char v8 = *(unsigned char *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  unint64_t v18 = *(void **)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v13 = *(void *)(a1 + 128);
  long long v12 = *(_OWORD *)(a1 + 136);
  uint64_t v9 = *(void **)(a1 + 152);
  char v10 = *(unsigned char *)(a1 + 160);
  swift_bridgeObjectRelease();
  sub_10003B9C0(v2, v3, v4, v5, v6, v7, v8);
  sub_100246234(v20, v19, v18, v17, v16, v15, v14, v13, v12, *((void **)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_1003A89C4@<X0>(BOOL *a1@<X8>)
{
  return sub_1003A4124(a1);
}

uint64_t sub_1003A89E0()
{
  return sub_1003A3A40();
}

uint64_t *sub_1003A89E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1003A8B90(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  }
  else
  {
    if (result > 1) {
      return result;
    }
    uint64_t v3 = type metadata accessor for Date();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *sub_1003A8C24(void *a1, const void *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1003A8D88(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003A7D34((uint64_t)a1, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1003A8F10(void *a1, const void *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1003A9074(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003A7D34((uint64_t)a1, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1003A91FC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

id sub_1003A9350(uint64_t *a1, void **a2, uint64_t a3)
{
  uint64_t v78 = a1;
  uint64_t v79 = a3;
  uint64_t v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v70 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v74);
  uint64_t v80 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v73);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v68 - v14;
  uint64_t v16 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v16 - 8);
  unint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (void **)((char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = a2;
  uint64_t v72 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters;
  sub_10010630C((uint64_t)a2, (uint64_t)v21, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter();
  sub_100055D48(v21, (uint64_t)v18, 0, (uint64_t)v84);
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter();
  uint64_t v22 = *a2;
  uint64_t v76 = v10;
  unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v23(v13, v15, v9);
  type metadata accessor for TTRShowAllRemindersWithSectionsDataModelSource();
  swift_allocObject();
  id v24 = v22;
  uint64_t v25 = TTRShowAllRemindersWithSectionsDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:)();
  id v26 = v84[0];
  long long v75 = v15;
  uint64_t v77 = v9;
  v23(v8, v15, v9);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TTRShowAllRemindersViewModelSource();
  Swift::String v27 = (uint64_t *)swift_allocObject();
  id v28 = v26;
  uint64_t v73 = v25;
  uint64_t v29 = sub_1003A9C10(v25, v28, (uint64_t)v8, 0, v27);

  sub_10010630C((uint64_t)v71, (uint64_t)v21, v72);
  sub_100057134((uint64_t)v84, (uint64_t)v81);
  swift_retain();
  uint64_t v71 = (void *)v29;
  sub_100056B24((uint64_t)v21, (uint64_t)v81, v29, (uint64_t)&off_1007512D8, v80);
  uint64_t v30 = (uint64_t)v70;
  sub_100056CAC((uint64_t)v70);
  uint64_t v72 = (uint64_t (*)(void))type metadata accessor for TTRIRemindersCommonPresenter(0);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v79;
  swift_unknownObjectRetain();
  uint64_t v33 = sub_1003585DC(v30, v32, v31);
  uint64_t v34 = *(void *)(v33 + 144);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 104))(ObjectType, v34);
  if (v36)
  {
    uint64_t v38 = v37;
    uint64_t v39 = swift_getObjectType();
    LOBYTE(v38) = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v39, v38);
    swift_unknownObjectRelease();
    LOBYTE(v36) = v38 & 1;
  }
  char v40 = sub_1001D0C84(v36, v33);
  id v69 = v41;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v68 = swift_getObjectType();
  *(void *)(v33 + 24) = *(void *)(v45 + 8);
  uint64_t v79 = v43;
  swift_unknownObjectWeakAssign();
  uint64_t v46 = *(void *)(v33 + 144);
  uint64_t v47 = swift_getObjectType();
  int v48 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 104);
  swift_retain();
  uint64_t v49 = v40;
  if (v48(v47, v46))
  {
    uint64_t v51 = v50;
    uint64_t v52 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v51 + 16))(v52, v51);
    swift_unknownObjectRelease();
  }
  id v53 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  uint64_t v70 = v49;
  uint64_t v54 = (void *)sub_10035A06C(v33);
  swift_release();

  uint64_t v55 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v45 + 32);
  id v69 = v54;
  v55(v54, &off_1007464D0, v68, v45);
  uint64_t v56 = (char *)v84[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v56 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v57 = (char *)v84[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v57 + 1) = &protocol witness table for TTRShowAllRemindersWithSectionsDataModelSource;
  uint64_t v58 = v73;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  char v59 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v58 + 392);
  uint64_t v60 = swift_retain();
  v59(v60, &off_1007425D0);
  swift_retain();
  uint64_t v61 = swift_retain();
  sub_1005B1F9C(v61, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v62 = v80;
  *(void *)(*(void *)(v80 + *(int *)(v74 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v85, (uint64_t)v81);
  long long v82 = v86;
  long long v83 = v87;
  *(void *)(v86 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)v81);
  sub_100038DC0((uint64_t)&v88, (uint64_t)v81);
  uint64_t v63 = *((void *)&v89 + 1);
  long long v82 = v89;
  uint64_t v64 = swift_getObjectType();
  id v65 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v63 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v65(v33, &off_10073CA90, v64, v63);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)v81);
  char v66 = v78;
  v78[3] = (uint64_t)v72;
  v66[4] = (uint64_t)&off_100748BB0;
  *char v66 = v33;
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1001067B8(v62, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
  sub_100057B44(v84);
  return v69;
}

id TTRIShowAllRemindersAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowAllRemindersAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowAllRemindersAssembly()
{
  return self;
}

id TTRIShowAllRemindersAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowAllRemindersAssembly();
  return [super dealloc];
}

uint64_t sub_1003A9C10(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  v37[0] = a3;
  v37[1] = v10;
  uint64_t v11 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(uint64_t *)((char *)a5
             + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource____lazy_storage___dragAndDropUtils) = 0;
  uint64_t v21 = (char *)a5 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_completedRemindersCount;
  *(void *)uint64_t v21 = 0;
  v21[8] = 1;
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance) = 0;
  uint64_t v22 = (uint64_t *)((char *)a5
                  + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource);
  *uint64_t v22 = a1;
  v22[1] = (uint64_t)&protocol witness table for TTRShowAllRemindersWithSectionsDataModelSource;
  *((unsigned char *)a5 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_hasDefaultNewReminderButton) = a4;
  sub_10010630C(a3, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain_n();
  uint64_t v23 = sub_100359DC4(a1, (uint64_t)a2, (uint64_t)v20, (uint64_t)a5);
  swift_retain();
  sub_1002DFA24((uint64_t)v17);
  uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
  sub_1005885DC((uint64_t)v17);
  sub_1000A1724((uint64_t)v17);
  uint64_t v25 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v26 = v25;
  static REMAnalyticsManager.shared.getter();
  uint64_t v27 = sub_10003B754(&qword_10078D258);
  id v28 = (uint64_t *)&v14[*(int *)(v27 + 48)];
  uint64_t v29 = (uint64_t *)&v14[*(int *)(v27 + 80)];
  uint64_t v30 = enum case for REMRemindersOpenUserOperation.SmartListType.all(_:);
  uint64_t v31 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v14, v30, v31);
  uint64_t v32 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  uint64_t v33 = type metadata accessor for REMRemindersOpenUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v14, v32, v33);
  *id v28 = TTRUserDefaults.activitySessionId.getter();
  v28[1] = v34;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *uint64_t v29 = _typeName(_:qualified:)();
  v29[1] = v35;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for REMAnalyticsEvent.openListUserOperation(_:), v11);
  REMAnalyticsManager.post(event:)();

  swift_release();
  swift_release();
  sub_1001067B8(v37[0], (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v23;
}

void sub_1003AA010(uint64_t a1, uint64_t a2, char a3)
{
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.fault.getter();
  uint64_t v17 = a1;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446722;
    uint64_t v8 = StaticString.description.getter();
    sub_1000385A8(v8, v9, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    char v16 = a3;
    uint64_t v10 = Dictionary.description.getter();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_1000385A8(v10, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v13 = Dictionary.description.getter();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_1000385A8(v13, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a3 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%{public}s; UserInfo=%s; PublicUserInfo=%{public}s",
      (uint8_t *)v7,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  if (a3) {
    goto LABEL_7;
  }
  if (v17)
  {
    rdi_os_crash();
LABEL_7:
    __break(1u);
  }
  __break(1u);
}

void sub_1003AA294(uint64_t a1, unint64_t a2)
{
  type metadata accessor for Analytics();
  sub_10003B754(&qword_10079CE78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = 0x696669746E656449;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1003AA938();
  *(void *)(inited + 48) = NSString.init(stringLiteral:)();
  *(void *)(inited + 56) = 0xD00000000000001ALL;
  *(void *)(inited + 64) = 0x80000001006B8480;
  *(void *)(inited + 72) = String._bridgeToObjectiveC()();
  sub_10003D958(inited);
  static Analytics.postEvent(_:payload:duration:)();
  swift_bridgeObjectRelease();
  if (qword_1007854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_1007BBAC8);
  swift_bridgeObjectRetain_n();
  os_log_type_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000385A8(a1, a2, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Dismissing (%s)", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1003AA514(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v23 = a5;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Analytics();
  sub_10003B754(&qword_10079CE78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100671350;
  *(void *)(inited + 32) = 0x696669746E656449;
  *(void *)(inited + 40) = 0xEA00000000007265;
  sub_1003AA938();
  *(void *)(inited + 48) = NSString.init(stringLiteral:)();
  *(void *)(inited + 56) = 0xD00000000000001ALL;
  *(void *)(inited + 64) = 0x80000001006B8480;
  uint64_t v21 = a1;
  *(void *)(inited + 72) = String._bridgeToObjectiveC()();
  *(void *)(inited + 80) = 0xD00000000000001ALL;
  *(void *)(inited + 88) = 0x80000001006B84A0;
  uint64_t v22 = a3;
  *(void *)(inited + 96) = String._bridgeToObjectiveC()();
  sub_10003D958(inited);
  static Analytics.postEvent(_:payload:duration:)();
  swift_bridgeObjectRelease();
  if (qword_1007854F8 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100018BF8(v14, (uint64_t)qword_1007BBAC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v23, v9);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v15 = Logger.logObject.getter();
  uint64_t v16 = v9;
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v23 = v16;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1000385A8(v21, a2, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1000385A8(v22, a4, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 22) = 2080;
    uint64_t v19 = URL.absoluteString.getter();
    uint64_t v24 = sub_1000385A8(v19, v20, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "Navigating (%s) -> (%s) {url:%s}", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v16);
  }
}

unint64_t sub_1003AA938()
{
  unint64_t result = qword_100791B70;
  if (!qword_100791B70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100791B70);
  }
  return result;
}

uint64_t sub_1003AA978(uint64_t a1)
{
  return sub_100018B84(a1, qword_1007BBB28, (SEL *)&selRef_applicationShortcut);
}

uint64_t sub_1003AA98C(uint64_t a1)
{
  return sub_100018B84(a1, qword_1007BBB40, (SEL *)&selRef_notification);
}

uint64_t sub_1003AAAEC()
{
  v1._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v2._object = (void *)0x80000001006B85F0;
  v1._object = (void *)0x80000001006B8620;
  v2._uint64_t countAndFlagsBits = 0xD000000000000022;
  Swift::String v3 = TTRLocalizedString(_:comment:)(v2, v1);
  v4._uint64_t countAndFlagsBits = 0xD000000000000024;
  v5._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v4._object = (void *)0x80000001006B8650;
  v5._object = (void *)0x80000001006B8680;
  Swift::String v6 = TTRLocalizedString(_:comment:)(v4, v5);
  v7._uint64_t countAndFlagsBits = 0xD000000000000029;
  v8._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v7._object = (void *)0x80000001006B86B0;
  v8._object = (void *)0x80000001006B86E0;
  Swift::String v9 = TTRLocalizedString(_:comment:)(v7, v8);
  if (swift_unknownObjectWeakLoadStrong()
    && (unsigned __int8 v10 = sub_10006EA6C(v0), swift_unknownObjectRelease(), (v10 & 1) != 0))
  {
    uint64_t v11 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_100022F98((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    *(Swift::String *)&v11[16 * v13 + 32] = v6;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  if (swift_unknownObjectWeakLoadStrong()
    && (unsigned __int8 v14 = sub_10006ED20(v0), swift_unknownObjectRelease(), (v14 & 1) != 0))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100022F98(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v16 = *((void *)v11 + 2);
    unint64_t v15 = *((void *)v11 + 3);
    if (v16 >= v15 >> 1) {
      uint64_t v11 = sub_100022F98((char *)(v15 > 1), v16 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v16 + 1;
    *(Swift::String *)&v11[16 * v16 + 32] = v9;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (swift_unknownObjectWeakLoadStrong()
    && (unsigned __int8 v17 = sub_10006EFD0(v0), swift_unknownObjectRelease(), (v17 & 1) != 0))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100022F98(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v19 = *((void *)v11 + 2);
    unint64_t v18 = *((void *)v11 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v11 = sub_100022F98((char *)(v18 > 1), v19 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v19 + 1;
    *(Swift::String *)&v11[16 * v19 + 32] = v3;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  TTRAccesibility.General.Label.SentenceEnd.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  sub_10003B754(&qword_10078E670);
  sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
  uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1003AAE48()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    unsigned __int8 v1 = sub_10006EA6C(v0);
    swift_unknownObjectRelease();
    if (v1)
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10006F24C(v0);
        swift_unknownObjectRelease();
      }
      v2._uint64_t countAndFlagsBits = 0xD000000000000033;
      v3._object = (void *)0x80000001006B8590;
      v2._object = (void *)0x80000001006B85B0;
      v3._uint64_t countAndFlagsBits = 0xD000000000000013;
      Swift::String v6 = TTRLocalizedString(_:comment:)(v3, v2);
      object = v6._object;
      uint64_t countAndFlagsBits = v6._countAndFlagsBits;
LABEL_11:
      sub_1003AB168(countAndFlagsBits, (uint64_t)object);
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  unsigned __int8 v8 = sub_10006ED20(v0);
  swift_unknownObjectRelease();
  if (v8)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10006F24C(v0);
      swift_unknownObjectRelease();
    }
    v9._uint64_t countAndFlagsBits = 0xD000000000000017;
    v10._uint64_t countAndFlagsBits = 0xD000000000000037;
    v9._object = (void *)0x80000001006B8530;
    v10._object = (void *)0x80000001006B8550;
    Swift::String v11 = TTRLocalizedString(_:comment:)(v9, v10);
    object = v11._object;
    uint64_t countAndFlagsBits = v11._countAndFlagsBits;
    goto LABEL_11;
  }
  return 0;
}

id sub_1003AB100()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIGroupMembershipCell();
  [super dealloc];
}

uint64_t type metadata accessor for TTRIGroupMembershipCell()
{
  return self;
}

uint64_t sub_1003AB168(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  __chkstk_darwin(v6);
  unsigned __int8 v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v22 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v20 - v14;
  sub_10007CD0C();
  unint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21(v12, v9);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v20;
  *(void *)(v17 + 24) = a2;
  aBlock[4] = sub_1003506A0;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000AD88;
  aBlock[3] = &unk_100748BE8;
  unint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003FFBC();
  sub_10003B754((uint64_t *)&unk_100788E50);
  sub_100037EA0((unint64_t *)&qword_10078C6F0, (uint64_t *)&unk_100788E50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v24);
  return ((uint64_t (*)(char *, uint64_t))v21)(v15, v22);
}

uint64_t sub_1003AB504()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1003AB53C(uint64_t a1)
{
  uint64_t v45 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v44 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v5 - 8);
  uint64_t v43 = (uint64_t)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v42 = (uint64_t)v35 - v8;
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  int v48 = (unsigned int (**)(char *, uint64_t, int *))*((void *)v12 - 1);
  __chkstk_darwin(v12);
  uint64_t v41 = (uint64_t)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRIRemindersBoardDragItemSources.Source(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v51 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v17 = *(void *)(a1 + 16);
  unint64_t v18 = _swiftEmptyArrayStorage;
  if (v17)
  {
    v35[1] = v1;
    uint64_t v52 = _swiftEmptyArrayStorage;
    sub_1004D362C(0, v17, 0);
    uint64_t v50 = sub_10003B754(&qword_100787070);
    uint64_t v19 = v3;
    uint64_t v20 = (void **)(a1
                  + ((*(unsigned __int8 *)(*(void *)(v50 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v50 - 8) + 80)));
    uint64_t v49 = *(void *)(*(void *)(v50 - 8) + 72);
    v48 += 6;
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v39 = v14;
    char v40 = v11;
    uint64_t v38 = v15;
    do
    {
      uint64_t v21 = *v20;
      sub_10003B694((uint64_t)v20 + *(int *)(v50 + 48), (uint64_t)v11, (uint64_t *)&unk_10079CFC0);
      if ((*v48)(v11, 1, v12) == 1)
      {
        sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_10079CFC0);
        *(void *)uint64_t v51 = v21;
        swift_storeEnumTagMultiPayload();
        id v22 = v21;
      }
      else
      {
        uint64_t v23 = v41;
        sub_1003B20CC((uint64_t)v11, v41, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
        uint64_t v24 = v42;
        sub_1003B21CC(v23 + v12[5], v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        uint64_t v25 = v44;
        uint64_t v26 = v45;
        (*v37)(v44, v23 + v12[6], v45);
        uint64_t v27 = v43;
        sub_1003B21CC(v23 + v12[7], v43, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        int v46 = *(unsigned __int8 *)(v23 + v12[8]);
        int64_t v47 = v17;
        sub_1003B216C(v23, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
        id v28 = v51;
        sub_1003B20CC(v24, (uint64_t)v51, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        uint64_t v29 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
        uint64_t v30 = v26;
        uint64_t v11 = v40;
        (*v36)(&v28[v29[5]], v25, v30);
        uint64_t v31 = v27;
        uint64_t v15 = v38;
        sub_1003B20CC(v31, (uint64_t)&v28[v29[6]], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v28[v29[7]] = v46;
        int64_t v17 = v47;
        swift_storeEnumTagMultiPayload();
      }
      unint64_t v18 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D362C(0, v18[2] + 1, 1);
        unint64_t v18 = v52;
      }
      unint64_t v33 = v18[2];
      unint64_t v32 = v18[3];
      if (v33 >= v32 >> 1)
      {
        sub_1004D362C(v32 > 1, v33 + 1, 1);
        unint64_t v18 = v52;
      }
      v18[2] = v33 + 1;
      sub_1003B20CC((uint64_t)v51, (uint64_t)v18+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v33, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
      uint64_t v20 = (void **)((char *)v20 + v49);
      --v17;
    }
    while (v17);
  }
  return v18;
}

uint64_t sub_1003ABAE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v20 = a4;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_10078E8F0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int64_t v17 = (char *)&v19 - v16;
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100054CD8(v4, (uint64_t)&off_100748C10, a1, a2, a3, (uint64_t)v17);
    swift_unknownObjectRelease();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v17, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v8);
  }
  sub_100028C3C((uint64_t)v17, (uint64_t)v15, &qword_10078E8F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20, v11, v8);
    return sub_10003B6F8((uint64_t)v15, &qword_10078E8F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20, v15, v8);
  }
}

uint64_t sub_1003ABD5C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, char *a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v98 = a6;
  unint64_t v94 = a5;
  uint64_t v93 = a4;
  uint64_t v95 = a3;
  uint64_t v102 = (char *)a7;
  uint64_t v103 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  __chkstk_darwin(v103);
  uint64_t v100 = (uint64_t)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  __chkstk_darwin(v96);
  *(void *)&double v101 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void **)(v11 - 8);
  __chkstk_darwin(v11);
  char v99 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v88 - v15;
  uint64_t v17 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v17 - 8);
  uint64_t v97 = (uint64_t)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v88 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v88 - v23;
  double v26 = __chkstk_darwin(v25);
  id v28 = (char *)&v88 - v27;
  [a2 locationInView:a1];
  uint64_t v30 = v29;
  double v32 = v31;
  unint64_t v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v12[7];
  v33(v28, 1, 1, v11);
  v33(v24, 1, 1, v11);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v28;
  *(void *)(v34 + 24) = a1;
  *(void *)(v34 + 32) = v30;
  *(double *)(v34 + 40) = v32;
  uint64_t v104 = v24;
  *(void *)(v34 + 48) = v24;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_1003B20AC;
  *(void *)(v35 + 24) = v34;
  aBlock[4] = sub_1000218B0;
  aBlock[5] = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100748D18;
  uint64_t v36 = (char *)_Block_copy(aBlock);
  id v37 = a1;
  swift_retain();
  swift_release();
  id v92 = v37;
  [v37 performUsingPresentationValues:v36];
  _Block_release(v36);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    sub_10003B694((uint64_t)v28, (uint64_t)v21, &qword_10078E8F0);
    uint64_t v39 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
    uint64_t v40 = (uint64_t)v28;
    if (v39(v21, 1, v11) == 1)
    {
      sub_10003B6F8((uint64_t)v21, &qword_10078E8F0);
      uint64_t v41 = sub_10003B754((uint64_t *)&unk_10079CFF0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v102, 1, 1, v41);
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = (uint64_t)v104;
LABEL_31:
      sub_10003B6F8(v42, &qword_10078E8F0);
      sub_10003B6F8(v40, &qword_10078E8F0);
      return swift_release();
    }
    uint64_t v91 = v34;
    uint64_t v90 = v28;
    uint64_t v35 = (uint64_t)v12;
    long long v89 = (void (*)(char *, char *, uint64_t))v12[4];
    v89(v16, v21, v11);
    uint64_t v43 = (void (*)(uint64_t, char *, uint64_t))v12[2];
    uint64_t v44 = v16;
    uint64_t v45 = v11;
    uint64_t v46 = *(void *)&v101;
    v43(*(void *)&v101, v98, v45);
    uint64_t v47 = v96;
    v43(v46 + *(int *)(v96 + 20), v44, v45);
    uint64_t v42 = (uint64_t)v104;
    sub_10003B694((uint64_t)v104, v46 + *(int *)(v47 + 24), &qword_10078E8F0);
    uint64_t v48 = v100;
    sub_1003B21CC(v46, v100, type metadata accessor for TTRICollectionViewHitIndexPaths);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v97;
    sub_10003B694(v42, v97, &qword_10078E8F0);
    if (v39((char *)v49, 1, v45) == 1)
    {
      sub_1003B216C(v46, type metadata accessor for TTRICollectionViewHitIndexPaths);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v44, v45);
      sub_10003B6F8(v49, &qword_10078E8F0);
      sub_1003B20CC(v48, (uint64_t)v102, type metadata accessor for TTRICollectionViewHitTestResult);
      uint64_t v40 = (uint64_t)v90;
      goto LABEL_31;
    }
    uint64_t v98 = v44;
    v89(v99, (char *)v49, v45);
    uint64_t v36 = *(char **)(v95 + 16);
    uint64_t isEscapingClosureAtFileLocation = *(void *)(v93 + 16);
    uint64_t result = v94;
    id v37 = (id)(v94 >> 62);
    id v28 = v102;
    uint64_t v11 = v45;
    if (!(v94 >> 62))
    {
      uint64_t v51 = *(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t result = v94;
LABEL_8:
  uint64_t v52 = v35;
  uint64_t v53 = *(void *)&v101;
  uint64_t v54 = v98;
  uint64_t v55 = isEscapingClosureAtFileLocation + v51;
  if (__OFADD__(isEscapingClosureAtFileLocation, v51))
  {
    __break(1u);
  }
  else
  {
    if (!v36)
    {
LABEL_12:
      if (!isEscapingClosureAtFileLocation)
      {
        if (v37)
        {
          swift_bridgeObjectRetain();
          uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v58) {
            goto LABEL_20;
          }
        }
        else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_20;
        }
        if (v36 == (char *)1)
        {
          type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
          if (static IndexPath.== infix(_:_:)())
          {
            char v59 = *(void (**)(char *, uint64_t))(v52 + 8);
            v59(v99, v11);
            sub_1003B216C(v53, type metadata accessor for TTRICollectionViewHitIndexPaths);
            v59(v54, v11);
            sub_1003B20CC(v100, (uint64_t)v28, type metadata accessor for TTRICollectionViewHitTestResult);
LABEL_30:
            uint64_t v42 = (uint64_t)v104;
            uint64_t v40 = (uint64_t)v90;
            goto LABEL_31;
          }
        }
      }
LABEL_20:
      uint64_t v60 = v99;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v62 = v92;
      id v63 = [v92 cellForItemAtIndexPath:isa];

      if (v63)
      {
        [v63 bounds];
        [v62 convertRect:v63 fromCoordinateSpace:];
        double x = v106.origin.x;
        double y = v106.origin.y;
        double width = v106.size.width;
        double height = v106.size.height;
        double v68 = CGRectGetHeight(v106) * 0.5;
        v107.origin.double x = x;
        v107.origin.double y = y;
        v107.size.double width = width;
        v107.size.double height = height;
        CGRectGetHeight(v107);
        double v101 = x;
        v108.origin.double x = sub_10004980C(x, y, width, height, v68, 0.0);
        CGFloat v69 = v108.origin.x;
        CGFloat v70 = v108.origin.y;
        CGFloat v71 = v108.size.width;
        CGFloat v72 = v108.size.height;
        CGFloat MinY = CGRectGetMinY(v108);
        uint64_t v74 = v100;
        if (v32 >= MinY)
        {
          v109.origin.double x = v69;
          v109.origin.double y = v70;
          v109.size.double width = v71;
          v109.size.double height = v72;
          BOOL v75 = CGRectGetMaxY(v109) < v32;
        }
        else
        {
          BOOL v75 = 0;
        }
        double v78 = v101;
        v110.origin.double x = v101;
        v110.origin.double y = y;
        v110.size.double width = width;
        v110.size.double height = height;
        double v79 = CGRectGetHeight(v110) * 0.2;
        v111.origin.double x = v78;
        v111.origin.double y = y;
        v111.size.double width = width;
        v111.size.double height = height;
        CGRectGetHeight(v111);
        v112.origin.double x = sub_10004980C(v78, y, width, height, v79, 0.0);
        CGFloat v80 = v112.origin.x;
        CGFloat v81 = v112.origin.y;
        CGFloat v82 = v112.size.width;
        CGFloat v83 = v112.size.height;
        if (v32 >= CGRectGetMinY(v112))
        {
          v113.origin.double x = v80;
          v113.origin.double y = v81;
          v113.size.double width = v82;
          v113.size.double height = v83;
          double MaxY = CGRectGetMaxY(v113);

          BOOL v84 = MaxY >= v32;
        }
        else
        {

          BOOL v84 = 0;
        }
        long long v86 = *(void (**)(char *, uint64_t))(v52 + 8);
        v86(v60, v11);
        sub_1003B216C(v74, type metadata accessor for TTRICollectionViewHitTestResult);
        v86(v98, v11);
        sub_1003B20CC(v53, (uint64_t)v28, type metadata accessor for TTRICollectionViewHitIndexPaths);
        uint64_t v87 = type metadata accessor for TTRICollectionViewItemHit(0);
        v28[*(int *)(v87 + 20)] = v75;
        v28[*(int *)(v87 + 24)] = v84;
      }
      else
      {
        uint64_t v76 = *(void (**)(char *, uint64_t))(v52 + 8);
        v76(v60, v11);
        sub_1003B216C(v100, type metadata accessor for TTRICollectionViewHitTestResult);
        sub_1003B216C(v53, type metadata accessor for TTRICollectionViewHitIndexPaths);
        v76(v98, v11);
        uint64_t v77 = sub_10003B754((uint64_t *)&unk_10079CFF0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v28, 1, 1, v77);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
    }
    BOOL v56 = __OFADD__(v36, v55);
    uint64_t v57 = &v36[v55];
    if (!v56)
    {
      if (v57 != (char *)1) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003AC894(uint64_t a1, void *a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v27 - v17;
  id v19 = [a2 indexPathForItemAtPoint:a4, a5];
  if (v19)
  {
    uint64_t v20 = v19;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = type metadata accessor for IndexPath();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 0, 1, v21);
  }
  else
  {
    uint64_t v21 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
  }
  sub_10000A550((uint64_t)v18, a1, &qword_10078E8F0);
  sub_10003B694(a1, (uint64_t)v15, &qword_10078E8F0);
  type metadata accessor for IndexPath();
  uint64_t v22 = *(void *)(v21 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21) != 1)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v21);
  }
  id v24 = [a2 dataSourceIndexPathForPresentationIndexPath:isa];

  if (v24)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v12, v25, 1, v21);
  return sub_10000A550((uint64_t)v12, a3, &qword_10078E8F0);
}

uint64_t sub_1003ACB3C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_100787088);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = [a2 numberOfSections:v14];
  if (v17 < 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    uint64_t v20 = sub_10003B754((uint64_t *)&unk_10079CFF0);
    uint64_t v21 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    return v21(a3, 0, 1, v20);
  }
  else
  {
    sub_1003ACE30(a2, (char *)(v17 - 1), a1, (uint64_t)v16);
    sub_100028C3C((uint64_t)v16, (uint64_t)v12, &qword_100787088);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
    {
      sub_10003B6F8((uint64_t)v12, &qword_100787088);
      uint64_t v18 = sub_10003B754((uint64_t *)&unk_10079CFF0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 1, 1, v18);
    }
    else
    {
      sub_1003B20CC((uint64_t)v12, (uint64_t)v9, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      sub_1003B20CC((uint64_t)v9, a3, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
      uint64_t v22 = sub_10003B754((uint64_t *)&unk_10079CFF0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 0, 1, v22);
    }
  }
}

uint64_t sub_1003ACE30@<X0>(void *a1@<X0>, char *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v61 = a3;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v60 = (char *)&v58 - v11;
  uint64_t v12 = sub_10003B754(&qword_10079D000);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v59 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v58 - v16;
  uint64_t v18 = sub_10003B754(&qword_10079D008);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = __chkstk_darwin(v21);
  id v24 = (char *)&v58 - v23;
  uint64_t result = [a1 numberOfItemsInSection:a2];
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v62 = v8;
    uint64_t v63 = v7;
    uint64_t v64 = a4;
    double v67 = 0.0;
    double v68 = *(double *)&result;
    __chkstk_darwin(result);
    *(&v58 - 2) = a2;
    *(&v58 - 1) = (char *)a1;
    id v65 = (char *)a1;
    sub_10003B754(&qword_10079D010);
    sub_100037EA0(&qword_10079D018, &qword_10079D010);
    Sequence.firstMap<A>(_:)();
    sub_10003B694((uint64_t)v24, (uint64_t)v20, &qword_10079D008);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v20, 1, v12) == 1)
    {
      sub_10003B6F8((uint64_t)v20, &qword_10079D008);
      double v26 = v60;
      IndexPath.init(item:section:)();
      sub_10003B754((uint64_t *)&unk_100791C60);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_10066C680;
      *(void *)(v27 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v27 + 40) = v28;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v27 + 48) = v29;
      *(void *)(v27 + 56) = v30;
      uint64_t v66 = v27;
      __chkstk_darwin(v29);
      *(&v58 - 2) = v65;
      *(&v58 - 1) = v26;
      sub_10003B754(&qword_10078E670);
      type metadata accessor for CGRect(0);
      sub_100037EA0((unint64_t *)&qword_10079D020, &qword_10078E670);
      Sequence.firstMap<A>(_:)();
      swift_bridgeObjectRelease();
      if (v71)
      {
        sub_10003B6F8((uint64_t)v24, &qword_10079D008);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v26, v63);
LABEL_11:
        uint64_t v55 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        BOOL v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56);
        uint64_t v57 = v64;
        return v56(v57, 1, 1, v55);
      }
      CGFloat v47 = v69;
      CGFloat v46 = v70;
      CGFloat v49 = v67;
      CGFloat v48 = v68;
      [v61 locationInView:v65];
      double v51 = v50;
      v73.origin.double x = v49;
      v73.origin.double y = v48;
      v73.size.double width = v47;
      v73.size.double height = v46;
      double MaxY = CGRectGetMaxY(v73);
      sub_10003B6F8((uint64_t)v24, &qword_10079D008);
      uint64_t v53 = v63;
      uint64_t v44 = v64;
      uint64_t v54 = v62;
      if (MaxY >= v51)
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v26, v63);
        uint64_t v55 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        BOOL v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56);
        uint64_t v57 = v44;
        return v56(v57, 1, 1, v55);
      }
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v58, v26, v63);
      TTRAdjustedIndexPath.init(_:)();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v53);
      uint64_t v45 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    }
    else
    {
      uint64_t v31 = *(int *)(v12 + 48);
      double v32 = (CGFloat *)&v17[v31];
      unint64_t v33 = (CGFloat *)&v20[v31];
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
      uint64_t v35 = v20;
      uint64_t v36 = v63;
      v34(v17, v35, v63);
      CGFloat v37 = *v33;
      CGFloat v38 = v33[1];
      CGFloat v39 = v33[2];
      CGFloat v40 = v33[3];
      *double v32 = *v33;
      v32[1] = v38;
      v32[2] = v39;
      v32[3] = v40;
      [v61 locationInView:v65];
      double v42 = v41;
      v72.origin.double x = v37;
      v72.origin.double y = v38;
      v72.size.double width = v39;
      v72.size.double height = v40;
      double v43 = CGRectGetMaxY(v72);
      sub_10003B6F8((uint64_t)v24, &qword_10079D008);
      if (v43 >= v42)
      {
        sub_10003B6F8((uint64_t)v17, &qword_10079D000);
        goto LABEL_11;
      }
      v34(v59, v17, v36);
      uint64_t v44 = v64;
      TTRUnadjustedIndexPath.init(_:)();
      uint64_t v45 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    }
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003AD4EC@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(item:section:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 layoutAttributesForItemAtIndexPath:isa];

  if (v9)
  {
    uint64_t v10 = sub_10003B754(&qword_10079D000);
    uint64_t v11 = (void *)(a2 + *(int *)(v10 + 48));
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
    [v9 frame];
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18;

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *uint64_t v11 = v13;
    v11[1] = v15;
    _OWORD v11[2] = v17;
    v11[3] = v19;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 0, 1, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v21 = sub_10003B754(&qword_10079D000);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a2, 1, 1, v21);
  }
}

void sub_1003AD70C(void *a1@<X1>, uint64_t a2@<X8>)
{
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [a1 layoutAttributesForSupplementaryElementOfKind:v4 atIndexPath:isa];

  if (v6)
  {
    [v6 frame];
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = v6 == 0;
}

void sub_1003AD7F0(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v94 = a5;
  uint64_t v93 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v93 - 8);
  uint64_t v11 = __chkstk_darwin(v93);
  uint64_t v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v93 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v93 - v17;
  uint64_t v19 = *(void **)(v5 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView);
  if ((uint64_t)[v19 numberOfItemsInSection:a4] < 1)
  {
    CGFloat v24 = 0.0;
    if (a3)
    {
      uint64_t v54 = UICollectionElementKindSectionHeader;
      IndexPath.init(item:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v93);
      id v56 = [v19 layoutAttributesForSupplementaryElementOfKind:v54 atIndexPath:isa];

      if (v56)
      {
        [v56 frame];
        CGFloat x = v101.origin.x;
        CGFloat y = v101.origin.y;
        CGFloat width = v101.size.width;
        CGFloat height = v101.size.height;
        CGFloat MaxY = CGRectGetMaxY(v101);
        uint64_t v48 = v94;
        if (qword_1007854A0 != -1) {
          swift_once();
        }
        double v62 = *(double *)&qword_1007BBAB8;
        v102.origin.CGFloat x = x;
        v102.origin.CGFloat y = y;
        v102.size.CGFloat width = width;
        v102.size.CGFloat height = height;
        CGFloat MinX = CGRectGetMinX(v102);
        v103.origin.CGFloat x = x;
        v103.origin.CGFloat y = y;
        v103.size.CGFloat width = width;
        v103.size.CGFloat height = height;
        v104.size.CGFloat width = CGRectGetWidth(v103);
        v104.size.CGFloat height = 0.0;
        v104.origin.CGFloat x = MinX;
        v104.origin.CGFloat y = MaxY;
        CGRect v105 = CGRectInset(v104, 0.0, v62 * -0.5);
        CGFloat v24 = v105.origin.x;
        CGFloat v51 = v105.origin.y;
        CGFloat v52 = v105.size.width;
        CGFloat v53 = v105.size.height;

        goto LABEL_13;
      }
    }
    goto LABEL_14;
  }
  if (a3)
  {
    if (a1 | a2)
    {
      IndexPath.init(item:section:)();
      Class v65 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v66 = [v19 layoutAttributesForItemAtIndexPath:v65];

      uint64_t v67 = v93;
      if (v66)
      {
        [v66 frame];
        CGFloat v69 = v68;
        CGFloat v71 = v70;
        CGFloat v73 = v72;
        CGFloat v75 = v74;

        v106.origin.CGFloat x = v69;
        v106.origin.CGFloat y = v71;
        v106.size.CGFloat width = v73;
        v106.size.CGFloat height = v75;
        CGFloat v76 = CGRectGetMaxY(v106);
        if (qword_1007854A0 != -1) {
          swift_once();
        }
        double v77 = *(double *)&qword_1007BBAB8;
        v107.origin.CGFloat x = v69;
        v107.origin.CGFloat y = v71;
        v107.size.CGFloat width = v73;
        v107.size.CGFloat height = v75;
        CGFloat v78 = CGRectGetMinX(v107);
        v108.origin.CGFloat x = v69;
        v108.origin.CGFloat y = v71;
        v108.size.CGFloat width = v73;
        v108.size.CGFloat height = v75;
        v109.size.CGFloat width = CGRectGetWidth(v108);
        v109.size.CGFloat height = 0.0;
        v109.origin.CGFloat x = v78;
        v109.origin.CGFloat y = v76;
        CGRect v110 = CGRectInset(v109, 0.0, v77 * -0.5);
        CGFloat v24 = v110.origin.x;
        CGFloat v51 = v110.origin.y;
        CGFloat v52 = v110.size.width;
        CGFloat v53 = v110.size.height;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v67);
LABEL_24:
        char v64 = 0;
LABEL_29:
        uint64_t v48 = v94;
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v93);
    }
    else
    {
      IndexPath.init(item:section:)();
      Class v79 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v80 = [v19 layoutAttributesForItemAtIndexPath:v79];

      uint64_t v81 = v93;
      if (v80)
      {
        [v80 frame];
        CGFloat v83 = v82;
        CGFloat v85 = v84;
        CGFloat v87 = v86;
        CGFloat v89 = v88;

        v111.origin.CGFloat x = v83;
        v111.origin.CGFloat y = v85;
        v111.size.CGFloat width = v87;
        v111.size.CGFloat height = v89;
        CGFloat MinY = CGRectGetMinY(v111);
        if (qword_1007854A0 != -1) {
          swift_once();
        }
        double v91 = *(double *)&qword_1007BBAB8;
        v112.origin.CGFloat x = v83;
        v112.origin.CGFloat y = v85;
        v112.size.CGFloat width = v87;
        v112.size.CGFloat height = v89;
        CGFloat v92 = CGRectGetMinX(v112);
        v113.origin.CGFloat x = v83;
        v113.origin.CGFloat y = v85;
        v113.size.CGFloat width = v87;
        v113.size.CGFloat height = v89;
        v114.size.CGFloat width = CGRectGetWidth(v113);
        v114.size.CGFloat height = 0.0;
        v114.origin.CGFloat x = v92;
        v114.origin.CGFloat y = MinY;
        CGRect v115 = CGRectInset(v114, 0.0, v91 * -0.5);
        CGFloat v24 = v115.origin.x;
        CGFloat v51 = v115.origin.y;
        CGFloat v52 = v115.size.width;
        CGFloat v53 = v115.size.height;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v81);
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v93);
    }
    char v64 = 1;
    CGFloat v24 = 0.0;
    goto LABEL_28;
  }
  IndexPath.init(item:section:)();
  Class v20 = IndexPath._bridgeToObjectiveC()().super.isa;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v22 = v93;
  v21(v13, v93);
  id v23 = [v19 layoutAttributesForItemAtIndexPath:v20];

  CGFloat v24 = 0.0;
  if (!v23) {
    goto LABEL_14;
  }
  [v23 frame];
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;

  IndexPath.init(item:section:)();
  Class v33 = IndexPath._bridgeToObjectiveC()().super.isa;
  v21(v13, v22);
  id v34 = [v19 layoutAttributesForItemAtIndexPath:v33];

  if (!v34)
  {
LABEL_14:
    char v64 = 1;
LABEL_28:
    CGFloat v51 = 0.0;
    CGFloat v52 = 0.0;
    CGFloat v53 = 0.0;
    goto LABEL_29;
  }
  [v34 frame];
  uint64_t v93 = v35;
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  CGFloat v41 = v40;

  v95.origin.CGFloat x = v26;
  v95.origin.CGFloat y = v28;
  v95.size.CGFloat width = v30;
  v95.size.CGFloat height = v32;
  CGFloat v42 = v32;
  CGFloat v43 = v30;
  CGFloat v44 = v28;
  CGFloat v45 = v26;
  double v46 = CGRectGetMaxY(v95);
  *(void *)&v96.origin.CGFloat x = v93;
  v96.origin.CGFloat y = v37;
  v96.size.CGFloat width = v39;
  v96.size.CGFloat height = v41;
  double v47 = (v46 + CGRectGetMinY(v96)) * 0.5;
  uint64_t v48 = v94;
  if (qword_1007854A0 != -1) {
    swift_once();
  }
  double v49 = *(double *)&qword_1007BBAB8;
  v97.origin.CGFloat x = v45;
  v97.origin.CGFloat y = v44;
  v97.size.CGFloat width = v43;
  v97.size.CGFloat height = v42;
  CGFloat v50 = CGRectGetMinX(v97);
  v98.origin.CGFloat x = v45;
  v98.origin.CGFloat y = v44;
  v98.size.CGFloat width = v43;
  v98.size.CGFloat height = v42;
  v99.size.CGFloat width = CGRectGetWidth(v98);
  v99.size.CGFloat height = 0.0;
  v99.origin.CGFloat x = v50;
  v99.origin.CGFloat y = v47;
  CGRect v100 = CGRectInset(v99, 0.0, v49 * -0.5);
  CGFloat v24 = v100.origin.x;
  CGFloat v51 = v100.origin.y;
  CGFloat v52 = v100.size.width;
  CGFloat v53 = v100.size.height;
LABEL_13:
  char v64 = 0;
LABEL_30:
  *(CGFloat *)uint64_t v48 = v24;
  *(CGFloat *)(v48 + 8) = v51;
  *(CGFloat *)(v48 + 16) = v52;
  *(CGFloat *)(v48 + 24) = v53;
  *(unsigned char *)(v48 + 32) = v64;
}

uint64_t sub_1003ADFE8()
{
  return type metadata accessor for TTRIBoardColumnDragAndDropController();
}

uint64_t type metadata accessor for TTRIBoardColumnDragAndDropController()
{
  uint64_t result = qword_10079CEF0;
  if (!qword_10079CEF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003AE03C()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.ItemID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003AE0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003AE180, v7, v6);
}

uint64_t sub_1003AE180()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v2 = (void *)Strong;
    uint64_t v3 = *(void **)(v0 + 48);
    id v4 = *(id *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView);

    [v3 locationInView:v4];
    [v4 updateInteractiveMovementTargetPosition:];
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1003AE25C@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v20 = a3;
  unint64_t v21 = a4;
  uint64_t v19 = a2;
  uint64_t v10 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a5, (uint64_t)v12, &qword_10078E8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10003B6F8((uint64_t)v12, &qword_10078E8F0);
    sub_1003ACB3C(a1, *(void **)(v6 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView), a6);
    type metadata accessor for TTRICollectionViewHitTestResult(0);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1003ABD5C(*(void **)(v6 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView), a1, v19, v20, v21, v16, a6);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

id sub_1003AE458()
{
  uint64_t v1 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_10078E8F0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v11 = [v9 cellForItemAtIndexPath:isa];

    if (v11)
    {
      id v12 = [v11 _visiblePathForBackgroundConfiguration];
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = [objc_allocWithZone((Class)UIPreviewParameters) init];
        [v14 setVisiblePath:v13];
        id v15 = objc_allocWithZone((Class)UITargetedDragPreview);
        id v16 = v11;
        id v8 = [v15 initWithView:v16 parameters:v14];

        id v11 = v14;
      }
      else
      {
        id v8 = [objc_allocWithZone((Class)UITargetedDragPreview) initWithView:v11];
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return 0;
    }
  }
  return v8;
}

uint64_t sub_1003AEDD0(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v9 = a3;
    swift_unknownObjectRetain();
    id v10 = a1;
    a5();

    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003AF028@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = IndexPath.section.getter();
  uint64_t result = IndexPath.item.getter();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_4;
  }
  if ((uint64_t)[*(id *)(a2 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView) numberOfItemsInSection:v6] < result)
  {
    uint64_t v8 = 0;
    uint64_t result = 1;
LABEL_4:
    char v9 = 1;
    goto LABEL_7;
  }
  uint64_t result = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    return result;
  }
  char v9 = 0;
LABEL_7:
  sub_1003AD7F0(result, v8, v9, v6, (uint64_t)v19);
  uint64_t v10 = v19[0];
  uint64_t v11 = v19[1];
  uint64_t v12 = v19[2];
  uint64_t v13 = v19[3];
  char v14 = v20;
  uint64_t result = sub_100028C3C((uint64_t)v19, (uint64_t)v21, (uint64_t *)&unk_10079C840);
  if ((v22 & 1) == 0)
  {
    uint64_t result = (uint64_t)[*(id *)(a2 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView) convertRect:a1 toCoordinateSpace:v21[0] v21[1] v21[2] v21[3]];
    uint64_t v10 = v15;
    uint64_t v11 = v16;
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    char v14 = 0;
  }
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v11;
  *(void *)(a3 + 16) = v12;
  *(void *)(a3 + 24) = v13;
  *(unsigned char *)(a3 + 32) = v14;
  return result;
}

uint64_t sub_1003AF150(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004F6C44(a2);
  uint64_t v9 = a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
  swift_beginAccess();
  sub_1003B21CC(v9, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  type metadata accessor for TTRIRemindersBoardDropContext(0);
  swift_allocObject();
  uint64_t v10 = sub_10062C524((uint64_t)v8, (uint64_t)a2);
  uint64_t v11 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext;
  *(void *)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext) = v10;
  swift_unknownObjectRetain();
  swift_release();
  if ((sub_1003AF314(a3, a1) & 1) == 0)
  {
    uint64_t v12 = *(void **)(a3
                   + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
    if (v12) {
      [v12 removeFromSuperview];
    }
  }
  if (*(void *)(a3 + v11))
  {
    uint64_t v13 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView);
    swift_retain();

    swift_release();
  }
  char v14 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_dropPointIndicatorView);
  if (v14)
  {
    id v15 = v14;
    TTRIDebugDropIndicatorView.stopShowing()();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    UIViewController.endFirstResponderEditing()();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003AF314(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v3 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10079CFE0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRUnadjustedIndexPath();
  uint64_t v41 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView);
  id v17 = [v16 window];

  if (!v17) {
    return 0;
  }
  uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext);
  if (!v18) {
    return 0;
  }
  id v39 = v16;
  double v40 = v12;
  uint64_t v19 = v42 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
  swift_beginAccess();
  sub_1003B21CC(v19, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_retain();
  LOBYTE(v19) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
  sub_1003B216C((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v19 & 1) == 0)
  {
    swift_release();
    return 0;
  }
  uint64_t v20 = v18 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  swift_beginAccess();
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v20, 1, v3);
  uint64_t v22 = (uint64_t)v40;
  if (v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v9, 1, 1, v10);
LABEL_8:
    swift_release();
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_10079CFE0);
    return 0;
  }
  sub_1003B21CC(v20, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
  sub_10062BDC4((uint64_t)v9);
  sub_1003B216C((uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v9, 1, v10) == 1) {
    goto LABEL_8;
  }
  sub_1003B20CC((uint64_t)v9, v22, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
  sub_1003AF028((uint64_t)v39, v42, (uint64_t)v43);
  sub_100028C3C((uint64_t)v43, (uint64_t)v44, (uint64_t *)&unk_10079C840);
  if (v45)
  {
    swift_release();
    sub_1003B216C(v22, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    return 0;
  }
  double v24 = *(double *)v44;
  double v25 = *(double *)&v44[1];
  double v26 = *(double *)&v44[2];
  double v27 = *(double *)&v44[3];
  uint64_t v28 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView;
  double v29 = *(void **)(a1
                 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
  if (v29)
  {
    id v30 = *(id *)(a1
                + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
  }
  else
  {
    id v31 = [objc_allocWithZone((Class)type metadata accessor for TTRITreeViewMultiRowReorderingDropIndicatorView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
    CGFloat v32 = *(void **)(a1 + v28);
    *(void *)(a1 + v28) = v31;
    id v30 = v31;

    double v29 = 0;
  }
  id v33 = v29;
  id v34 = [v30 superview];
  uint64_t v35 = &selRef_addSubview_;
  if (v34)
  {
    id v36 = v34;

    CGFloat v37 = v39;
    if (v36 == v39) {
      uint64_t v35 = &selRef_bringSubviewToFront_;
    }
  }
  else
  {
    CGFloat v37 = v39;
  }
  [v37 *v35 v30];
  [v30 setFrame:v24, v25, v26, v27];

  swift_release();
  sub_1003B216C(v22, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
  return 1;
}

id sub_1003AF868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v92 = a3;
  uint64_t v7 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  uint64_t v93 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  CGFloat v89 = (uint64_t *)((char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v90 = (uint64_t)&v83 - v12;
  __chkstk_darwin(v13);
  id v15 = (char *)&v83 - v14;
  uint64_t v16 = sub_10003B754((uint64_t *)&unk_10078C860);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v21 = (char *)&v83 - v20;
  __chkstk_darwin(v22);
  double v24 = (char *)&v83 - v23;
  __chkstk_darwin(v25);
  uint64_t v96 = (uint64_t)&v83 - v26;
  uint64_t v27 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v27 - 8);
  double v29 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v30 - 8);
  CGFloat v32 = (char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = a4;
  uint64_t v33 = *(void *)(a4 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext);
  if (v33)
  {
    uint64_t v87 = a2;
    uint64_t v88 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext;
    double v86 = v9;
    uint64_t v91 = a1;
    uint64_t v34 = a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
    swift_beginAccess();
    sub_1003B21CC(v34, (uint64_t)v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    swift_retain();
    char v35 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
    sub_1003B216C((uint64_t)v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (v35)
    {
      uint64_t v85 = OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_debugInfo;
      uint64_t v36 = *(void *)(v33 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_debugInfo);
      uint64_t v37 = v92;
      sub_10003B694(v92, (uint64_t)v29, &qword_10078E8F0);
      uint64_t v38 = v36 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastDropSessionDidUpdateInput;
      swift_beginAccess();
      swift_retain();
      sub_10000A550((uint64_t)v29, v38, &qword_10078E8F0);
      swift_endAccess();
      swift_release();
      uint64_t v39 = OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection;
      if ((*(unsigned char *)(v33
                     + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection) & 1) != 0)
      {
        uint64_t v84 = OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection;
        uint64_t v40 = v33 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
        swift_beginAccess();
        sub_10003B694(v40, (uint64_t)v24, (uint64_t *)&unk_10078C860);
        uint64_t v41 = v93;
        uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
        uint64_t v43 = v95;
        if (v42(v24, 1, v95) != 1)
        {
          sub_1003B20CC((uint64_t)v24, (uint64_t)v15, type metadata accessor for TTRIRemindersBoardDropProposal);
          uint64_t v56 = v96;
          sub_1003B20CC((uint64_t)v15, v96, type metadata accessor for TTRIRemindersBoardDropProposal);
          int v55 = 1;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v56, 0, 1, v43);
          uint64_t v39 = v84;
          goto LABEL_18;
        }
        sub_10003B6F8((uint64_t)v24, (uint64_t *)&unk_10078C860);
        uint64_t v39 = v84;
      }
      uint64_t v44 = v37;
      uint64_t v45 = v91;
      sub_10005189C(v33, v91, (uint64_t)&off_100748C10, v44, (uint64_t)v21);
      uint64_t v46 = v96;
      sub_100028C3C((uint64_t)v21, v96, (uint64_t *)&unk_10078C860);
      sub_10003B694(v46, (uint64_t)v18, (uint64_t *)&unk_10078C860);
      uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
      if (v42(v18, 1, v95) == 1)
      {
        sub_10003B6F8((uint64_t)v18, (uint64_t *)&unk_10078C860);
      }
      else
      {
        uint64_t v52 = (uint64_t)v18;
        CGFloat v53 = v89;
        sub_1003B20CC(v52, (uint64_t)v89, type metadata accessor for TTRIRemindersBoardDropProposal);
        char v54 = sub_1003B1C18(v53, v45);
        sub_1003B216C((uint64_t)v53, type metadata accessor for TTRIRemindersBoardDropProposal);
        if (v54)
        {
          int v55 = 1;
          uint64_t v56 = v96;
LABEL_18:
          sub_10003B694(v56, (uint64_t)v21, (uint64_t *)&unk_10078C860);
          uint64_t v57 = v33 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
          swift_beginAccess();
          sub_10000A550((uint64_t)v21, v57, (uint64_t *)&unk_10078C860);
          swift_endAccess();
          int v58 = *(unsigned __int8 *)(v33 + v39);
          *(unsigned char *)(v33 + v39) = v55;
          if (v42((char *)v56, 1, v95))
          {
            id v59 = [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:0];
          }
          else
          {
            uint64_t v60 = v56;
            uint64_t v61 = v90;
            sub_1003B21CC(v60, v90, type metadata accessor for TTRIRemindersBoardDropProposal);
            id v59 = [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:*(void *)(v61 + 32) intent:sub_10062C0E4()];
            sub_1003B216C(v61, type metadata accessor for TTRIRemindersBoardDropProposal);
          }
          uint64_t v63 = (uint64_t)v86;
          uint64_t v62 = v87;
          uint64_t v64 = v91;
          uint64_t v65 = v85;
          uint64_t v66 = *(void *)(v33 + v85);
          uint64_t v67 = *(void **)(v66
                         + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastReturnedProposal);
          *(void *)(v66 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastReturnedProposal) = v59;
          id v51 = v59;

          uint64_t v68 = *(void *)(v33 + v65);
          CGFloat v69 = *(void **)(v64 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView);
          swift_retain();
          unsigned __int8 v70 = [v69 hasUncommittedUpdates];
          *(unsigned char *)(v68
                   + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_collectionViewHasUncommittedUpdates) = v70;
          swift_release();
          uint64_t v71 = v94;
          if ((sub_1003AF314(v94, v64) & 1) == 0)
          {
            double v72 = *(void **)(v71
                           + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
            if (v72) {
              [v72 removeFromSuperview];
            }
          }
          int v73 = v58 ^ 1;
          uint64_t v74 = v71;
          if (*(void *)(v71 + v88))
          {
            CGFloat v75 = *(void **)(v71 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView);
            swift_retain();

            swift_release();
          }
          CGFloat v76 = *(void **)(v74
                         + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_dropPointIndicatorView);
          if (v76)
          {
            id v77 = v76;
            TTRIDebugDropIndicatorView.stopShowing()();
          }
          if ((v55 & v73) != 0)
          {
            uint64_t v78 = type metadata accessor for TaskPriority();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v63, 1, 1, v78);
            uint64_t v79 = swift_allocObject();
            swift_unknownObjectWeakInit();
            type metadata accessor for MainActor();
            swift_retain();
            swift_unknownObjectRetain();
            uint64_t v80 = static MainActor.shared.getter();
            uint64_t v81 = (void *)swift_allocObject();
            v81[2] = v80;
            v81[3] = &protocol witness table for MainActor;
            v81[4] = v79;
            v81[5] = v62;
            swift_release();
            sub_1000286A4(v63, (uint64_t)&unk_10079CFD8, (uint64_t)v81);
            swift_release();
          }
          swift_release();
          sub_10003B6F8(v96, (uint64_t *)&unk_10078C860);
          return v51;
        }
      }
      int v55 = 0;
      uint64_t v56 = v96;
      goto LABEL_18;
    }
    swift_release();
  }
  if (qword_100785198 != -1) {
    swift_once();
  }
  uint64_t v47 = type metadata accessor for Logger();
  sub_100018BF8(v47, (uint64_t)qword_100786F38);
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v48, v49))
  {
    CGFloat v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGFloat v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "TTRIRemindersBoardDragAndDropCoordinator: missing activeDropContext", v50, 2u);
    swift_slowDealloc();
  }

  return [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:0];
}

uint64_t sub_1003B0234(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_10078C860);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  v14.n128_f64[0] = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(a3
                 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
  if (v17) {
    [v17 removeFromSuperview:v14.n128_f64[0]];
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_coordinatorID, v12, v14);
  uint64_t v18 = *(void *)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext);
  if (v18)
  {
    uint64_t v29 = a2;
    uint64_t v19 = (uint64_t)a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
    swift_beginAccess();
    sub_1003B21CC(v19, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    swift_retain();
    char v20 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
    sub_1003B216C((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (v20)
    {
      uint64_t v21 = v18 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
      swift_beginAccess();
      sub_10003B694(v21, (uint64_t)v11, (uint64_t *)&unk_10078C860);
      swift_release();
      a2 = v29;
      goto LABEL_8;
    }
    swift_release();
    a2 = v29;
  }
  uint64_t v22 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
LABEL_8:
  type metadata accessor for TTRIRemindersBoardDropCommitCoordinator(0);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dropCoordinator) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v23 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dragAndDropCoordinatorID, v16, v12);
  double v24 = (void *)(v23 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_column);
  *double v24 = a1;
  v24[1] = &off_100748C10;
  sub_100028C3C((uint64_t)v11, v23 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_lastDropProposal, (uint64_t *)&unk_10078C860);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v26 = a1;
  swift_unknownObjectRetain();
  if (!Strong) {
    return swift_release();
  }
  sub_100447D00(v23);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1003B05BC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t a6)
{
  LODWORD(v7) = a5;
  uint64_t v42 = a3;
  uint64_t v43 = a1;
  uint64_t v46 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  __chkstk_darwin(v46);
  uint64_t v11 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v45 = type metadata accessor for TTRIRemindersBoardDragItemSources.Source(0);
  *(void *)&long long v41 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v13 = (id *)&v38[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v44 = *(void *)(v14 - 8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext;
  if (!*(void *)(a6 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext)
    || (uint64_t v18 = a2 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID,
        swift_beginAccess(),
        sub_1003B21CC(v18, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID), swift_retain(), LOBYTE(v18) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(), swift_release(), sub_1003B216C((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID), (v18 & 1) != 0))
  {
    if (qword_100785198 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100018BF8(v19, (uint64_t)qword_100786F38);
    swift_bridgeObjectRetain_n();
    char v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v40 = (void *)a6;
      uint64_t v22 = swift_slowAlloc();
      int v39 = (int)v7;
      uint64_t v7 = (uint8_t *)v22;
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1000385A8(v42, a4, &v48);
      a6 = (uint64_t)v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "TTRIRemindersBoardDragAndDropCoordinator: session ended - %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      LOBYTE(v7) = v39;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *(void *)(a6 + v17) = 0;
    swift_release();
    uint64_t v23 = *(void **)(a6
                   + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
    if (v23) {
      [v23 removeFromSuperview];
    }
    if (*(void *)(a6 + v17))
    {
      char v24 = (char)v7;
      uint64_t v7 = *(uint8_t **)(a6 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView);
      swift_retain();
      uint64_t v25 = v7;
      LOBYTE(v7) = v24;

      swift_release();
    }
    id v26 = *(void **)(a6 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_dropPointIndicatorView);
    if (v26)
    {
      id v27 = v26;
      TTRIDebugDropIndicatorView.stopShowing()();
    }
    if (v7)
    {
      uint64_t v28 = v43;
      swift_getObjectType();
      uint64_t v29 = sub_100055394(v28, a6);
      uint64_t v30 = sub_1003AB53C(v29);
      swift_bridgeObjectRelease();
      uint64_t v31 = v30[2];
      if (v31)
      {
        uint64_t v43 = (void *)(a6 + 16);
        uint64_t v32 = *(unsigned __int8 *)(v41 + 80);
        uint64_t v40 = v30;
        uint64_t v33 = (uint64_t)v30 + ((v32 + 32) & ~v32);
        uint64_t v34 = *(void *)(v41 + 72);
        long long v41 = xmmword_10066C6F0;
        uint64_t v42 = v34;
        do
        {
          sub_1003B21CC(v33, (uint64_t)v13, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
          }
          else
          {
            sub_1003B20CC((uint64_t)v13, (uint64_t)v11, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
            if (v11[*(int *)(v46 + 28)])
            {
              if (swift_unknownObjectWeakLoadStrong())
              {
                uint64_t v35 = (uint64_t)&v11[*(int *)(v46 + 24)];
                sub_10003B754(&qword_10078ADC0);
                unint64_t v36 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
                uint64_t v37 = swift_allocObject();
                *(_OWORD *)(v37 + 16) = v41;
                sub_1003B21CC(v35, v37 + v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                uint64_t v48 = v37;
                swift_retain();
                sub_10003B754((uint64_t *)&unk_10078EEF0);
                sub_100037EA0((unint64_t *)&qword_10078ADC8, (uint64_t *)&unk_10078EEF0);
                TTRRemindersBoardCollapsedStatesPresenterCapability.expand<A>(_:)();
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v34 = v42;
                swift_release();
              }
            }
            sub_1003B216C((uint64_t)v11, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
          }
          v33 += v34;
          --v31;
        }
        while (v31);
      }
      swift_bridgeObjectRelease();
    }
  }
}

void *sub_1003B0C18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v37 = a4;
  int v36 = a3;
  uint64_t v6 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
  uint64_t v35 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v34 - v17;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    sub_1003B20CC((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1003B20CC((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v19 = a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
    swift_beginAccess();
    sub_1003B21CC(v19, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    char v20 = &v8[*(int *)(v6 + 20)];
    uint64_t v21 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, a2, v21);
    sub_1003B21CC((uint64_t)v18, (uint64_t)&v8[*(int *)(v6 + 24)], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v22 = v37;
    uint64_t v23 = (void *)sub_100055658((uint64_t)v8);
    sub_1003B216C((uint64_t)v8, type metadata accessor for TTRIRemindersBoardDragItemInfo);
    if (!v23)
    {
LABEL_15:
      sub_1003B216C((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return _swiftEmptyArrayStorage;
    }
    if ((v36 & 1) == 0)
    {
LABEL_17:
      sub_10003B754((uint64_t *)&unk_1007894B0);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_10066D470;
      *(void *)(v32 + 32) = v23;
      uint64_t v38 = v32;
      specialized Array._endMutation()();
      uint64_t v31 = v38;
      sub_1003B216C((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return (void *)v31;
    }
    uint64_t v24 = v22;
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100447890();
      id v26 = v25;
      swift_unknownObjectRelease();
      uint64_t v27 = v26[2];
      if (v27)
      {
LABEL_7:
        uint64_t v28 = (char *)v26
            + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        uint64_t v29 = *(void *)(v35 + 72);
        swift_bridgeObjectRetain();
        while ((static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)() & 1) == 0)
        {
          v28 += v29;
          if (!--v27)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v30 = v26[2];
        swift_bridgeObjectRelease();
        if (v30 >= 2)
        {
          *(unsigned char *)(v24
                   + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_shouldHandleNextRootViewDragInteraction) = 1;

          goto LABEL_15;
        }
        goto LABEL_17;
      }
    }
    else
    {
      id v26 = _swiftEmptyArrayStorage;
      uint64_t v27 = _swiftEmptyArrayStorage[2];
      if (v27) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_10078E360);
  return _swiftEmptyArrayStorage;
}

void *sub_1003B1068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(unsigned char *)(*(void *)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_activityTracker)
                 + 16) & 1) != 0)
  {
    if (qword_100785198 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100018BF8(v4, (uint64_t)qword_100786F38);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRIRemindersBoardDragAndDropCoordinator: disallow starting a drag because there is an in-progress drag", v7, 2u);
      swift_slowDealloc();
    }

    return _swiftEmptyArrayStorage;
  }
  else
  {
    return sub_1003B0C18(a1, a2, 1, a3);
  }
}

uint64_t sub_1003B1184(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v38 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10079D030);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (void **)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10003B754(&qword_10079D038);
  __chkstk_darwin(v10);
  uint64_t v12 = (void **)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  __chkstk_darwin(v13 - 8);
  uint64_t v37 = (uint64_t)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - v16;
  __chkstk_darwin(v18);
  char v20 = (char *)&v35 - v19;
  sub_1004F69C8(a1);
  swift_getObjectType();
  uint64_t v21 = sub_100055394(a1, a2);
  if (*(void *)(v21 + 16) == 1)
  {
    uint64_t v35 = v6;
    uint64_t v36 = v4;
    uint64_t v22 = sub_10003B754(&qword_100787070);
    uint64_t v23 = *(void *)(v22 - 8);
    sub_10003B694(v21 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), (uint64_t)v9, &qword_100787070);
    (*(void (**)(void **, void, uint64_t, uint64_t))(v23 + 56))(v9, 0, 1, v22);
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_10003B754(&qword_100787070);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v9, 1, v24) == 1)
    {
      uint64_t v25 = &qword_10079D030;
      uint64_t v26 = (uint64_t)v9;
    }
    else
    {
      uint64_t v28 = (uint64_t)v9 + *(int *)(v24 + 48);
      uint64_t v29 = (uint64_t)v12 + *(int *)(v10 + 48);
      *uint64_t v12 = *v9;
      sub_100028C3C(v28, v29, (uint64_t *)&unk_10079CFC0);
      unint64_t v30 = *v12;
      sub_100028C3C((uint64_t)v12 + *(int *)(v10 + 48), (uint64_t)v20, (uint64_t *)&unk_10079CFC0);
      sub_10003B694((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_10079CFC0);
      uint64_t v31 = v38;
      uint64_t v32 = v36;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v17, 1, v36) != 1)
      {
        uint64_t v33 = (uint64_t)v35;
        sub_1003B20CC((uint64_t)v17, (uint64_t)v35, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
        if (swift_unknownObjectWeakLoadStrong())
        {
          if (sub_1000C914C(v33 + *(int *)(v32 + 28)))
          {
            *(unsigned char *)(v33 + *(int *)(v32 + 32)) = 1;
            uint64_t v34 = v37;
            sub_1003B21CC(v33, v37, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v32);
            sub_10005149C(v34);
            swift_unknownObjectRelease();

            sub_10003B6F8(v34, (uint64_t *)&unk_10079CFC0);
            sub_1003B216C(v33, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
            uint64_t v26 = (uint64_t)v20;
            uint64_t v25 = (uint64_t *)&unk_10079CFC0;
            return sub_10003B6F8(v26, v25);
          }
          swift_unknownObjectRelease();
        }

        sub_1003B216C(v33, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
        uint64_t v25 = (uint64_t *)&unk_10079CFC0;
        uint64_t v26 = (uint64_t)v20;
        return sub_10003B6F8(v26, v25);
      }
      sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_10079CFC0);

      uint64_t v26 = (uint64_t)v17;
      uint64_t v25 = (uint64_t *)&unk_10079CFC0;
    }
    return sub_10003B6F8(v26, v25);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1003B168C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10003B754(&qword_100787070);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v12 = sub_100055394(a2, a4);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v20 = a3;
    uint64_t v14 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    while (1)
    {
      sub_10003B694(v14, (uint64_t)v11, &qword_100787070);
      uint64_t v16 = &v11[*(int *)(v8 + 48)];
      uint64_t v17 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
      LODWORD(v16) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
      sub_10003B6F8((uint64_t)v11, &qword_100787070);
      if (v16 != 1) {
        break;
      }
      v14 += v15;
      if (!--v13) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    return sub_1003B0C18(a1, v20, 0, a4);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
}

uint64_t sub_1003B1848(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRIRemindersBoardDragItemSources.Source(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (id *)&v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v28[-v9];
  swift_getObjectType();
  id v11 = [a1 items];
  sub_100055B3C();
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_19;
  }
  if ((*(unsigned char *)(*(void *)(a2 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_activityTracker)
                 + 16) & 1) != 0)
  {
    uint64_t v14 = sub_100055394(a1, a2);
    uint64_t v15 = sub_1003AB53C(v14);
    swift_bridgeObjectRelease();
    uint64_t v16 = v15[2];
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      if (qword_100785198 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_100018BF8(v19, (uint64_t)qword_100786F38);
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "TTRIRemindersBoardDragAndDropCoordinator: reject external drop session because there is an in-progress local drag", v22, 2u);
        swift_slowDealloc();
      }

      goto LABEL_19;
    }
    uint64_t v17 = (uint64_t)v15 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v18 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain();
    while (1)
    {
      sub_1003B21CC(v17, (uint64_t)v10, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
      sub_1003B21CC((uint64_t)v10, (uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }

      sub_1003B216C((uint64_t)v10, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
      v17 += v18;
      if (!--v16)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_11;
      }
    }
    sub_1003B216C((uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
    sub_1003B216C((uint64_t)v10, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_19:
    char v26 = 0;
    return v26 & 1;
  }
  uint64_t v24 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  char v26 = (*(uint64_t (**)(void *, uint64_t))(*(void *)(v24 + 8) + 480))(a1, ObjectType);
  swift_unknownObjectRelease();
  return v26 & 1;
}

uint64_t sub_1003B1C18(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v22 - v8);
  unint64_t v10 = a1[3];
  uint64_t v11 = *(void *)(a1[1] + 16);
  uint64_t v12 = *(void *)(a1[2] + 16);
  if (!(v10 >> 62))
  {
    uint64_t v13 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v14 = v12 + v13;
    if (!__OFADD__(v12, v13)) {
      goto LABEL_3;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v14 = v12 + v21;
  if (__OFADD__(v12, v21)) {
    goto LABEL_21;
  }
LABEL_3:
  if (!v11)
  {
    sub_1003B21CC((uint64_t)a1, (uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
    goto LABEL_9;
  }
  uint64_t v15 = v11 + v14;
  if (__OFADD__(v11, v14))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1003B21CC((uint64_t)a1, (uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
  if (v15 != 1)
  {
    sub_1003B216C((uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
    sub_1003B21CC((uint64_t)a1, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
LABEL_7:
    sub_1003B216C((uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
    return 0;
  }
LABEL_9:
  if (*(void *)(v9[1] + 16) != 1 || *(void *)(v9[2] + 16))
  {
    sub_1003B216C((uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
    sub_1003B21CC((uint64_t)a1, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
    goto LABEL_12;
  }
  unint64_t v19 = v9[3];
  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_17;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_17:
  sub_1003B216C((uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
  sub_1003B21CC((uint64_t)a1, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
  if (!v20) {
    goto LABEL_7;
  }
LABEL_12:
  id v16 = [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:*((void *)v6 + 4) intent:sub_10062C0E4()];
  id v17 = [v16 intent];

  sub_1003B216C((uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
  if (v17 == (id)1) {
    return [*(id *)(a2 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView) hasUncommittedUpdates] ^ 1;
  }
  return 0;
}

uint64_t sub_1003B1F34()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B1F6C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003B1FB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000C2D4;
  return sub_1003AE0E8(a1, v4, v5, v7, v6);
}

uint64_t sub_1003B2074()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003B20AC()
{
  return sub_1003AC894(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 48), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1003B20BC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B20CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003B2134@<X0>(uint64_t a1@<X8>)
{
  return sub_1003AD4EC(*(void **)(v1 + 24), a1);
}

void sub_1003B2150(uint64_t a1@<X8>)
{
  sub_1003AD70C(*(void **)(v1 + 16), a1);
}

uint64_t sub_1003B216C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003B21CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

char *sub_1003B2234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v7 = objc_allocWithZone((Class)UILabel);
  uint64_t v8 = v3;
  id v9 = [v7 init];
  static TTRLocalizableStrings.RecentlyDeletedList.disclaimerString.getter();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setText:v10];

  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  uint64_t v11 = (void *)static UIFont.roundedBodyFont.getter();
  [v9 setFont:v11];

  id v12 = [self secondaryLabelColor];
  [v9 setTextColor:v12];

  [v9 setAdjustsFontForContentSizeCategory:1];
  [v9 setNumberOfLines:0];
  LODWORD(v13) = 1132068864;
  [v9 setContentCompressionResistancePriority:0 forAxis:v13];
  *(void *)&v8[qword_10079D040] = v9;
  id v14 = v9;

  if (a3)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  v27.receiver = v8;
  v27.super_class = ObjectType;
  id v16 = [super initWithStyle:a1 reuseIdentifier:v15];

  id v17 = *(void **)&v16[direct field offset for TTRITableViewContainerCell.containerView];
  uint64_t v18 = v16;
  id v19 = v17;
  [v19 setHorizontalAlignment:1];
  [v19 setVerticalAlignment:0];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10066D470;
  *(void *)(v20 + 32) = v14;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  id v21 = v14;
  id v22 = v19;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 setArrangedSubviews:isa];

  uint64_t v24 = v18;
  UITableViewCell.setSeparatorInsetType(_:)();

  uint64_t v25 = v24;
  UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

  return v25;
}

char *sub_1003B2510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return sub_1003B2234(a3, a4, v6);
}

void sub_1003B255C()
{
}

void sub_1003B25B8()
{
}

Class sub_1003B2614(uint64_t a1)
{
  sub_10003B754((uint64_t *)&unk_1007938C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10066C6F0;
  uint64_t v3 = *(void **)(a1 + qword_10079D040);
  *(void *)(v2 + 56) = sub_1000368FC(0, &qword_100787808);
  *(void *)(v2 + 32) = v3;
  id v4 = v3;
  v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v5.super.isa;
}

void sub_1003B26C4()
{
}

void sub_1003B26D4(uint64_t a1)
{
}

uint64_t type metadata accessor for TTRIRemindersListRecentlyDeletedDisclaimerCell()
{
  uint64_t result = qword_10079D070;
  if (!qword_10079D070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003B2730()
{
  return type metadata accessor for TTRIRemindersListRecentlyDeletedDisclaimerCell();
}

uint64_t type metadata accessor for TTRIGroupMembershipRouter()
{
  return self;
}

uint64_t TTRListDetailViewModel.layoutContext.getter()
{
  return swift_unknownObjectRetain();
}

__n128 TTRListDetailViewModel.init(changeItem:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003B3344(a1, (uint64_t)v9);
  long long v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  long long v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  long long v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  long long v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

{
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  __n128 result;
  _OWORD v9[13];

  sub_1003B3D04(a1, (uint64_t)v9);
  long long v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  long long v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  long long v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  long long v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

{
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  __n128 result;
  _OWORD v10[13];

  sub_1003B3AC8(a1, (uint64_t)v10);

  long long v4 = v10[11];
  *(_OWORD *)(a2 + 160) = v10[10];
  *(_OWORD *)(a2 + 176) = v4;
  *(_OWORD *)(a2 + 192) = v10[12];
  long long v5 = v10[7];
  *(_OWORD *)(a2 + 96) = v10[6];
  *(_OWORD *)(a2 + 112) = v5;
  long long v6 = v10[9];
  *(_OWORD *)(a2 + 128) = v10[8];
  *(_OWORD *)(a2 + 144) = v6;
  long long v7 = v10[3];
  *(_OWORD *)(a2 + 32) = v10[2];
  *(_OWORD *)(a2 + 48) = v7;
  uint64_t v8 = v10[5];
  *(_OWORD *)(a2 + 64) = v10[4];
  *(_OWORD *)(a2 + 80) = v8;
  __n128 result = (__n128)v10[1];
  *(_OWORD *)a2 = v10[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

__n128 TTRListDetailViewModel.init(changeItem:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003B2B88(a1, (uint64_t)v9);
  swift_release();
  long long v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  long long v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  long long v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  long long v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

BOOL TTRListDetailViewModel.canSave.getter()
{
  unint64_t v1 = v0[1];
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  else {
    uint64_t v2 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  return v2 != 0;
}

uint64_t TTRSmartListFilterEditorViewModel.ListData.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTRListDetailViewModel.badge.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003B4098(v1 + 16, a1);
}

void *TTRListDetailViewModel.filter.getter()
{
  uint64_t v1 = *(void **)(v0 + 112);
  id v2 = v1;
  return v1;
}

uint64_t TTRListDetailViewModel.isListTypePickerHidden.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t TTRListDetailViewModel.isFilterHidden.getter()
{
  return *(unsigned __int8 *)(v0 + 121);
}

uint64_t TTRListDetailViewModel.canChangeEmblemOrEmoji.getter()
{
  return *(unsigned __int8 *)(v0 + 122);
}

uint64_t TTRListDetailViewModel.canMakeIntoCustomSmartList.getter()
{
  return *(unsigned __int8 *)(v0 + 123);
}

uint64_t TTRListDetailViewModel.supportsCustomSmartLists.getter()
{
  return *(unsigned __int8 *)(v0 + 124);
}

uint64_t TTRListDetailViewModel.canMakeIntoGroceriesList.getter()
{
  return *(unsigned __int8 *)(v0 + 125);
}

uint64_t TTRListDetailViewModel.filterDisclosureTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

void *TTRListDetailViewModel.filterDisclosureSubtitle.getter()
{
  uint64_t v1 = *(void **)(v0 + 144);
  id v2 = v1;
  return v1;
}

uint64_t TTRListDetailViewModel.dialogViewTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTRListDetailViewModel.dialogViewTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 152) = a1;
  *(void *)(v2 + 160) = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRListDetailViewModel.dialogViewTitle.modify())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t TTRListDetailViewModel.placeholderText.getter()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TTRListDetailViewModel.placeholderText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 168) = a1;
  *(void *)(v2 + 176) = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRListDetailViewModel.placeholderText.modify())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t TTRListDetailViewModel.listType.getter()
{
  return *(unsigned __int8 *)(v0 + 184);
}

uint64_t TTRListDetailViewModel.listType.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 184) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRListDetailViewModel.listType.modify())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

id sub_1003B2B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v85 = *(void *)(a1 + 40);
  NSString v10 = *(void **)(a1 + 24);
  uint64_t v84 = v9;
  swift_bridgeObjectRetain();
  id v11 = [v10 capabilities];
  unsigned int v83 = [v11 supportsListAppearance];

  uint64_t v66 = (id *)(a1 + 72);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v88 = v4;
  CGFloat v89 = &protocol witness table for TTRListDetailCreationChangeItem;
  uint64_t v87 = (void *)a1;
  swift_retain();
  TTRListDetailBadgeViewModel.init(listProtocol:badgeDisplayStyle:)();
  uint64_t v82 = v90;
  uint64_t v81 = v91;
  uint64_t v80 = v92;
  uint64_t v79 = v93;
  uint64_t v78 = v94;
  uint64_t v77 = v95;
  uint64_t v76 = v96;
  uint64_t v75 = v97;
  int v74 = v98;
  uint64_t v73 = v99;
  uint64_t v72 = v100;
  int v71 = v101;
  int v70 = v102;
  type metadata accessor for REMGroceryDummyModel();
  static Locale.current.getter();
  Locale.identifier.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LODWORD(v8) = static REMGroceryDummyModel.isSupported(localeIdentifier:)();
  swift_bridgeObjectRelease();
  uint64_t v13 = v12;
  id v14 = [v10 capabilities];
  unsigned int v15 = [v14 supportsCustomSmartLists];

  id v16 = [v10 capabilities];
  LODWORD(v11) = [v16 supportsGroceriesList];

  unsigned int v68 = v11 & v8;
  unsigned int v69 = v15;
  if ((v11 & v8) == 1)
  {
    v17._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v17._object = (void *)0x80000001006B89D0;
    v18._object = (void *)0x80000001006B89F0;
    v19._uint64_t countAndFlagsBits = 0x707954207473694CLL;
    v19._object = (void *)0xE900000000000065;
    v18._uint64_t countAndFlagsBits = 0xD000000000000020;
    Swift::String v20 = TTRLocalizedString(_:value:comment:)(v17, v19, v18);
    uint64_t countAndFlagsBits = v20._countAndFlagsBits;
    object = v20._object;
    id v22 = 0;
    int v23 = 0;
    if (v13)
    {
LABEL_3:
      int v64 = v23;
      id v65 = v22;
      uint64_t v66 = (id *)countAndFlagsBits;
      unint64_t v24 = 0x80000001006B8970;
      unint64_t v25 = 0x80000001006B89A0;
      unint64_t v26 = 0xD000000000000020;
      uint64_t v27 = 0x72616D532077654ELL;
      unint64_t v28 = 0xEE007473694C2074;
      unint64_t v29 = 0xD000000000000020;
      goto LABEL_9;
    }
  }
  else
  {
    v30._uint64_t countAndFlagsBits = 0xD000000000000014;
    v31._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v32._object = (void *)0x80000001006B88F0;
    v30._object = (void *)0x80000001006B8920;
    v31._object = (void *)0x80000001006B8940;
    v32._uint64_t countAndFlagsBits = 0xD000000000000026;
    Swift::String v33 = TTRLocalizedString(_:value:comment:)(v32, v30, v31);
    uint64_t countAndFlagsBits = v33._countAndFlagsBits;
    object = v33._object;
    if (*v66)
    {
      id v34 = *v66;
      uint64_t v35 = REMCustomSmartListFilterDescriptor.enabledFilterCount.getter();
      _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO22enabledFiltersSubtitle5countSSSi_tFZ_0(v35);
      id v36 = objc_allocWithZone((Class)NSAttributedString);
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v22 = [v36 initWithString:v37];
    }
    else
    {
      v38._uint64_t countAndFlagsBits = 0xD000000000000029;
      v39._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
      v38._object = (void *)0x80000001006B1F80;
      v40._object = (void *)0x80000001006B1FB0;
      v39._object = (void *)0x80000001006B1FE0;
      v40._uint64_t countAndFlagsBits = 0xD000000000000026;
      TTRLocalizedString(_:value:comment:)(v38, v40, v39);
      id v41 = objc_allocWithZone((Class)NSAttributedString);
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v22 = [v41 initWithString:v37];
    }

    int v23 = v15 ^ 1;
    if (v13) {
      goto LABEL_3;
    }
  }
  int v64 = v23;
  id v65 = v22;
  uint64_t v66 = (id *)countAndFlagsBits;
  unint64_t v26 = 0xD00000000000001ALL;
  unint64_t v24 = 0x80000001006B60E0;
  unint64_t v25 = 0x80000001006B6100;
  uint64_t v27 = 0x7473694C2077654ELL;
  unint64_t v28 = 0xE800000000000000;
  unint64_t v29 = 0xD00000000000001ALL;
LABEL_9:
  Swift::String v42 = TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v26, *(Swift::String *)&v27, *(Swift::String *)&v29);
  uint64_t v63 = v42._countAndFlagsBits;
  BOOL v43 = v13 == 0;
  v44._uint64_t countAndFlagsBits = 0xD000000000000026;
  v44._object = (void *)0x80000001006B21E0;
  v45._uint64_t countAndFlagsBits = 0x6D614E207473694CLL;
  v45._object = (void *)0xE900000000000065;
  Swift::String v46 = TTRLocalizedString(_:comment:)(v45, v44);
  swift_beginAccess();
  char v47 = *(unsigned char *)(a1 + 80);
  sub_1005B4B28((uint64_t)&off_100735248);
  uint64_t v48 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  uint64_t v88 = type metadata accessor for TTRUserDefaults();
  CGFloat v89 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  uint64_t v87 = v48;
  type metadata accessor for TTRRemindersListDataModelSourceLayoutContext();
  swift_allocObject();
  id v49 = v48;
  uint64_t v50 = TTRRemindersListDataModelSourceLayoutContext.init(supportedLayouts:userDefaults:userDefaultsKey:)();
  id v51 = *(void **)(a1 + 72);
  char v52 = v74;
  LOBYTE(v87) = v74;
  char v53 = v71;
  char v86 = v71;
  uint64_t v54 = v84;
  *(void *)a2 = v85;
  *(void *)(a2 + 8) = v54;
  uint64_t v55 = v81;
  *(void *)(a2 + 16) = v82;
  *(void *)(a2 + 24) = v55;
  uint64_t v56 = v79;
  *(void *)(a2 + 32) = v80;
  *(void *)(a2 + 40) = v56;
  uint64_t v57 = v77;
  *(void *)(a2 + 48) = v78;
  *(void *)(a2 + 56) = v57;
  uint64_t v58 = v75;
  *(void *)(a2 + 64) = v76;
  *(void *)(a2 + 72) = v58;
  *(unsigned char *)(a2 + 80) = v52;
  uint64_t v59 = v72;
  *(void *)(a2 + 88) = v73;
  *(void *)(a2 + 96) = v59;
  *(unsigned char *)(a2 + 104) = v53;
  *(unsigned char *)(a2 + 105) = v70;
  *(void *)(a2 + 112) = v51;
  *(unsigned char *)(a2 + 120) = v64;
  *(unsigned char *)(a2 + 121) = v43;
  *(unsigned char *)(a2 + 122) = v83;
  *(unsigned char *)(a2 + 123) = 0;
  *(unsigned char *)(a2 + 124) = v69;
  *(unsigned char *)(a2 + 125) = v68;
  uint64_t v60 = object;
  *(void *)(a2 + 128) = v66;
  *(void *)(a2 + 136) = v60;
  uint64_t v61 = v63;
  *(void *)(a2 + 144) = v65;
  *(void *)(a2 + 152) = v61;
  *(void *)(a2 + 160) = v42._object;
  *(Swift::String *)(a2 + 168) = v46;
  *(unsigned char *)(a2 + 184) = v47;
  *(void *)(a2 + 192) = v50;
  *(void *)(a2 + 200) = &protocol witness table for TTRRemindersListDataModelSourceLayoutContext;

  return v51;
}

void sub_1003B3344(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 displayName];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  id v12 = [a1 appearanceContext];
  id v13 = v12;
  if (v12) {

  }
  id v72 = v13;
  id v14 = a1;
  TTRListDetailBadgeViewModel.init(listOrCustomSmartListChangeItem:)();
  uint64_t v85 = v94;
  uint64_t v84 = v95;
  uint64_t v83 = v96;
  uint64_t v82 = v97;
  uint64_t v81 = v98;
  uint64_t v80 = v99;
  uint64_t v79 = v100;
  uint64_t v78 = v101;
  int v77 = v102;
  uint64_t v76 = v103;
  uint64_t v75 = v104;
  int v74 = v105;
  int v86 = v106;
  unsigned int v67 = [v14 isShared];
  id v15 = [v14 accountCapabilities];
  unsigned int v73 = [v15 supportsCustomSmartLists];

  id v16 = [v14 groceryContextChangeItem];
  Swift::String v17 = &selRef_setItemProviders_;
  uint64_t v88 = v9;
  CGFloat v89 = a1;
  uint64_t v87 = v11;
  if (!v16)
  {
LABEL_8:
    id v21 = [self daemonUserDefaults];
    id v22 = [v21 preferredLocalizations];

    if (v22)
    {
      uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v23 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    static Locale.current.getter();
    Locale.identifier.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_13;
  }
  Swift::String v18 = v16;
  if (![v16 shouldCategorizeGroceryItems])
  {

    goto LABEL_8;
  }
  id v19 = [v18 groceryLocaleID];
  if (!v19)
  {
    id v62 = [self daemonUserDefaults];
    id v63 = [v62 preferredLocalizations];

    if (v63)
    {
      uint64_t v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v64 + 16))
      {
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
        Swift::String v17 = &selRef_setItemProviders_;
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    static Locale.current.getter();
    Locale.identifier.getter();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    Swift::String v17 = &selRef_setItemProviders_;
    goto LABEL_13;
  }
  Swift::String v20 = v19;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  Swift::String v17 = &selRef_setItemProviders_;
LABEL_13:
  type metadata accessor for REMGroceryDummyModel();
  int v24 = static REMGroceryDummyModel.isSupported(localeIdentifier:)();
  swift_bridgeObjectRelease();
  id v25 = [v14 accountCapabilities];
  unsigned int v26 = [v25 supportsGroceriesList];

  int v27 = v26 & v24;
  v28._uint64_t countAndFlagsBits = 0xD000000000000020;
  v29._object = (void *)0xE90000000000006FLL;
  v30._object = (void *)0x80000001006B8B00;
  v28._object = (void *)0x80000001006B8B20;
  v30._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v29._uint64_t countAndFlagsBits = 0x666E49207473694CLL;
  Swift::String v31 = TTRLocalizedString(_:value:comment:)(v30, v29, v28);
  v32._uint64_t countAndFlagsBits = 0xD000000000000026;
  v32._object = (void *)0x80000001006B21E0;
  v33._uint64_t countAndFlagsBits = 0x6D614E207473694CLL;
  v33._object = (void *)0xE900000000000065;
  Swift::String v34 = TTRLocalizedString(_:comment:)(v33, v32);
  id v35 = [v14 groceryContextChangeItem];
  BOOL v38 = 0;
  if (v35)
  {
    id v36 = v35;
    unsigned __int8 v37 = [v35 v17[5]];

    if (v37) {
      BOOL v38 = 1;
    }
  }
  id v39 = v72;
  uint64_t countAndFlagsBits = v31._countAndFlagsBits;
  object = v31._object;
  uint64_t v69 = v34._countAndFlagsBits;
  unsigned int v68 = v34._object;
  LODWORD(v72) = v38;
  if (v27)
  {
    v40._uint64_t countAndFlagsBits = 0xD000000000000020;
    v41._object = (void *)0x80000001006B89D0;
    v40._object = (void *)0x80000001006B89F0;
    v41._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v42._uint64_t countAndFlagsBits = 0x707954207473694CLL;
    v42._object = (void *)0xE900000000000065;
    Swift::String v43 = TTRLocalizedString(_:value:comment:)(v41, v42, v40);
    uint64_t v66 = v43._countAndFlagsBits;
    Swift::String v44 = v43._object;
  }
  else
  {
    uint64_t v66 = 0;
    Swift::String v44 = 0;
  }
  BOOL v45 = v39 != 0;
  char v46 = v73;
  char v47 = v73 & (v67 ^ 1);
  type metadata accessor for TTRRemindersListDataModelSourceLayoutContext();
  id v48 = v14;
  id v49 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  uint64_t v92 = type metadata accessor for TTRUserDefaults();
  uint64_t v93 = &protocol witness table for TTRUserDefaults;
  uint64_t v91 = v49;
  id v50 = v49;
  uint64_t v51 = TTRRemindersListDataModelSourceLayoutContext.__allocating_init(listOrSmartListChangeItem:userDefaults:)();

  char v52 = &protocol witness table for TTRRemindersListDataModelSourceLayoutContext;
  if (!v51) {
    char v52 = 0;
  }
  char v53 = v77;
  LOBYTE(v91) = v77;
  char v90 = v74;
  uint64_t v54 = v87;
  *(void *)a2 = v88;
  *(void *)(a2 + 8) = v54;
  uint64_t v55 = v84;
  *(void *)(a2 + 16) = v85;
  *(void *)(a2 + 24) = v55;
  uint64_t v56 = v82;
  *(void *)(a2 + 32) = v83;
  *(void *)(a2 + 40) = v56;
  uint64_t v57 = v80;
  *(void *)(a2 + 48) = v81;
  *(void *)(a2 + 56) = v57;
  uint64_t v58 = v78;
  *(void *)(a2 + 64) = v79;
  *(void *)(a2 + 72) = v58;
  *(unsigned char *)(a2 + 80) = v53;
  uint64_t v59 = v75;
  *(void *)(a2 + 88) = v76;
  *(void *)(a2 + 96) = v59;
  *(unsigned char *)(a2 + 104) = v90;
  *(unsigned char *)(a2 + 105) = v86;
  *(void *)(a2 + 112) = 0;
  *(unsigned char *)(a2 + 120) = v27 ^ 1;
  *(unsigned char *)(a2 + 121) = 1;
  *(unsigned char *)(a2 + 122) = v45;
  *(unsigned char *)(a2 + 123) = v47;
  *(unsigned char *)(a2 + 124) = v46;
  *(unsigned char *)(a2 + 125) = v27;
  *(void *)(a2 + 128) = v66;
  *(void *)(a2 + 136) = v44;
  uint64_t v60 = countAndFlagsBits;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = v60;
  uint64_t v61 = v69;
  *(void *)(a2 + 160) = object;
  *(void *)(a2 + 168) = v61;
  *(void *)(a2 + 176) = v68;
  *(unsigned char *)(a2 + 184) = (_BYTE)v72;
  *(void *)(a2 + 192) = v51;
  *(void *)(a2 + 200) = v52;
}

double sub_1003B3AC8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 name];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v6;
  uint64_t v20 = v5;

  sub_1000368FC(0, &qword_10078B648);
  id v7 = a1;
  TTRListDetailBadgeViewModel.init(listProtocol:badgeDisplayStyle:)();
  v8._uint64_t countAndFlagsBits = 0xD000000000000024;
  v9._object = (void *)0x80000001006B88A0;
  v8._object = (void *)0x80000001006B88C0;
  v9._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v10._uint64_t countAndFlagsBits = 0x6574616C706D6554;
  v10._object = (void *)0xED00006F666E4920;
  Swift::String v11 = TTRLocalizedString(_:value:comment:)(v9, v10, v8);
  uint64_t v12 = static TTRLocalizableStrings.Templates.namePlaceholderText.getter();
  uint64_t v14 = v13;
  sub_1005B4B28((uint64_t)&off_100735298);
  id v15 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for TTRUserDefaults();
  type metadata accessor for TTRRemindersListDataModelSourceLayoutContext();
  swift_allocObject();
  id v16 = v15;
  uint64_t v17 = TTRRemindersListDataModelSourceLayoutContext.init(supportedLayouts:userDefaults:userDefaultsKey:)();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v19;
  *(_OWORD *)(a2 + 16) = v21;
  *(_OWORD *)(a2 + 32) = v22;
  *(_OWORD *)(a2 + 48) = v23;
  *(void *)(a2 + 64) = v24;
  *(void *)(a2 + 72) = v25;
  *(unsigned char *)(a2 + 80) = v26;
  *(void *)(a2 + 88) = v27;
  *(void *)(a2 + 96) = v28;
  *(unsigned char *)(a2 + 104) = v29;
  *(unsigned char *)(a2 + 105) = v30;
  *(void *)(a2 + 112) = 0;
  *(void *)&double result = 65793;
  *(_DWORD *)(a2 + 120) = 65793;
  *(_WORD *)(a2 + 124) = 0;
  *(void *)(a2 + 128) = 0;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = 0;
  *(Swift::String *)(a2 + 152) = v11;
  *(void *)(a2 + 168) = v12;
  *(void *)(a2 + 176) = v14;
  *(unsigned char *)(a2 + 184) = 0;
  *(void *)(a2 + 192) = v17;
  *(void *)(a2 + 200) = &protocol witness table for TTRRemindersListDataModelSourceLayoutContext;
  return result;
}

double sub_1003B3D04@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000368FC(0, &qword_100789A40);
  uint64_t v4 = protocol witness for TTRListProtocol.displayName.getter in conformance REMSmartListChangeItem();
  uint64_t v6 = v5;
  id v7 = a1;
  TTRListDetailBadgeViewModel.init(listOrCustomSmartListChangeItem:)();
  v8._uint64_t countAndFlagsBits = 0xD000000000000011;
  v9._uint64_t countAndFlagsBits = 0xD000000000000023;
  v10._uint64_t countAndFlagsBits = 0xD000000000000028;
  v9._object = (void *)0x80000001006B8A20;
  v8._object = (void *)0x80000001006B8A50;
  v10._object = (void *)0x80000001006B8A70;
  Swift::String v11 = TTRLocalizedString(_:value:comment:)(v9, v8, v10);
  id v12 = [v7 customContext];
  uint64_t v35 = v4;
  if (v12 && (v13 = v12, uint64_t v14 = (void *)REMSmartListCustomContextChangeItem.filter.getter(), v13, v14))
  {
    uint64_t v15 = REMCustomSmartListFilterDescriptor.enabledFilterCount.getter();
    _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO22enabledFiltersSubtitle5countSSSi_tFZ_0(v15);
    id v16 = objc_allocWithZone((Class)NSAttributedString);
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v34 = [v16 initWithString:v17];
  }
  else
  {
    id v34 = 0;
  }
  v18._uint64_t countAndFlagsBits = 0xD000000000000021;
  v18._object = (void *)0x80000001006B8AA0;
  v19._object = (void *)0x80000001006B8AD0;
  v20._uint64_t countAndFlagsBits = 0x694C207472616D53;
  v20._object = (void *)0xEF6F666E49207473;
  v19._uint64_t countAndFlagsBits = 0xD000000000000026;
  Swift::String v21 = TTRLocalizedString(_:value:comment:)(v18, v20, v19);
  v22._object = (void *)0x80000001006B21E0;
  v23._uint64_t countAndFlagsBits = 0x6D614E207473694CLL;
  v23._object = (void *)0xE900000000000065;
  v22._uint64_t countAndFlagsBits = 0xD000000000000026;
  Swift::String v24 = TTRLocalizedString(_:comment:)(v23, v22);
  type metadata accessor for TTRRemindersListDataModelSourceLayoutContext();
  id v25 = v7;
  char v26 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for TTRUserDefaults();
  id v27 = v26;
  uint64_t v28 = TTRRemindersListDataModelSourceLayoutContext.__allocating_init(listOrSmartListChangeItem:userDefaults:)();
  id v29 = [v25 customContext];
  if (v29)
  {
    char v30 = v29;
    uint64_t v31 = REMSmartListCustomContextChangeItem.filter.getter();
  }
  else
  {
    uint64_t v31 = 0;
  }

  Swift::String v32 = &protocol witness table for TTRRemindersListDataModelSourceLayoutContext;
  if (!v28) {
    Swift::String v32 = 0;
  }
  *(void *)a2 = v35;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = a1;
  *(void *)(a2 + 24) = v37;
  *(void *)(a2 + 32) = v38;
  *(void *)(a2 + 40) = v39;
  *(void *)(a2 + 48) = v40;
  *(void *)(a2 + 56) = v41;
  *(void *)(a2 + 64) = v42;
  *(void *)(a2 + 72) = v43;
  *(unsigned char *)(a2 + 80) = v44;
  *(void *)(a2 + 88) = v45;
  *(void *)(a2 + 96) = v46;
  *(unsigned char *)(a2 + 104) = v47;
  *(unsigned char *)(a2 + 105) = v48;
  *(void *)(a2 + 112) = v31;
  *(void *)&double result = 0x1000100010001;
  *(_DWORD *)(a2 + 120) = 65537;
  *(_WORD *)(a2 + 124) = 0;
  *(Swift::String *)(a2 + 128) = v11;
  *(void *)(a2 + 144) = v34;
  *(Swift::String *)(a2 + 152) = v21;
  *(Swift::String *)(a2 + 168) = v24;
  *(unsigned char *)(a2 + 184) = 2;
  *(void *)(a2 + 192) = v28;
  *(void *)(a2 + 200) = v32;
  return result;
}

uint64_t sub_1003B4098(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t destroy for TTRListDetailViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003B9C0(*(void **)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  sub_10003B9B0(*(void **)(a1 + 88), *(id *)(a1 + 96), *(unsigned char *)(a1 + 104));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for TTRListDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void **)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  char v12 = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003BED8(v6, v7, v8, v9, v10, v11, v12);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  uint64_t v13 = *(void **)(a2 + 88);
  uint64_t v14 = *(void **)(a2 + 96);
  LOBYTE(v7) = *(unsigned char *)(a2 + 104);
  sub_10003BF34(v13, v14, v7);
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v14;
  *(unsigned char *)(a1 + 104) = v7;
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  uint64_t v15 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v15;
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_WORD *)(a1 + 124) = *(_WORD *)(a2 + 124);
  uint64_t v16 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v16;
  Swift::String v18 = *(void **)(a2 + 144);
  uint64_t v17 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = v18;
  *(void *)(a1 + 152) = v17;
  uint64_t v19 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v19;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  id v20 = v15;
  swift_bridgeObjectRetain();
  id v21 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRListDetailViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  char v10 = *(unsigned char *)(a2 + 80);
  sub_10003BED8(v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void **)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  char v17 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = v10;
  sub_10003B9C0(v11, v12, v13, v14, v15, v16, v17);
  Swift::String v18 = *(void **)(a2 + 88);
  uint64_t v19 = *(void **)(a2 + 96);
  LOBYTE(v6) = *(unsigned char *)(a2 + 104);
  sub_10003BF34(v18, v19, v6);
  id v20 = *(void **)(a1 + 88);
  id v21 = *(void **)(a1 + 96);
  char v22 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 88) = v18;
  *(void *)(a1 + 96) = v19;
  *(unsigned char *)(a1 + 104) = v6;
  sub_10003B9B0(v20, v21, v22);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  Swift::String v23 = *(void **)(a1 + 112);
  Swift::String v24 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v24;
  id v25 = v24;

  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
  *(unsigned char *)(a1 + 123) = *(unsigned char *)(a2 + 123);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(unsigned char *)(a1 + 125) = *(unsigned char *)(a2 + 125);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v26 = *(void **)(a1 + 144);
  id v27 = *(void **)(a2 + 144);
  *(void *)(a1 + 144) = v27;
  id v28 = v27;

  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v29 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 200) = v29;
  return a1;
}

__n128 initializeWithTake for TTRListDetailViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for TTRListDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 80);
  long long v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 72);
  char v13 = *(unsigned char *)(a1 + 80);
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = v6;
  sub_10003B9C0(v7, v8, v9, v10, v11, v12, v13);
  char v15 = *(unsigned char *)(a2 + 104);
  uint64_t v16 = *(void **)(a1 + 88);
  char v17 = *(void **)(a1 + 96);
  char v18 = *(unsigned char *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v15;
  sub_10003B9B0(v16, v17, v18);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  uint64_t v19 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
  *(unsigned char *)(a1 + 123) = *(unsigned char *)(a2 + 123);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(unsigned char *)(a1 + 125) = *(unsigned char *)(a2 + 125);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  id v20 = *(void **)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);

  uint64_t v21 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v22;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRListDetailViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRListDetailViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRListDetailViewModel()
{
  return &type metadata for TTRListDetailViewModel;
}

uint64_t sub_1003B46F0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079D1F0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079D1F0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_1003B47B8()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void **)(v0 + 48);
  }
  else
  {
    uint64_t v1 = sub_100398F24(*(id *)(*(void *)(v0 + 56) + 32));
    *(void *)(v0 + 48) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1003B4820(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100785530 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_10079D1F0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  strcpy((char *)(inited + 32), "participantID");
  *(_WORD *)(inited + 46) = -4864;
  sub_1003B5FA4((uint64_t)a1, (uint64_t)v25);
  sub_1003B5FA4((uint64_t)v25, (uint64_t)v24);
  sub_10003B754(&qword_10078A9C0);
  *(void *)(inited + 48) = Optional.descriptionOrNil.getter();
  *(void *)(inited + 56) = v10;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x44497473696CLL;
  *(void *)(inited + 88) = 0xE600000000000000;
  id v11 = [*(id *)(v1[7] + 32) objectID];
  *(void *)(inited + 120) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 96) = v11;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = v2[15];
  uint64_t v13 = sub_10042D46C(a1[9], a1[10], a1[11], a1[12]);
  if (v13)
  {
    id v14 = (id)v13;
    sub_100038D28(v2 + 9, v2[12]);
    char v15 = *(void **)(v12 + 32);
    uint64_t v16 = self;
    id v17 = v15;
    id v18 = [v16 viewControllerForContact:v14];
  }
  else
  {
    id v14 = sub_10042D7D0((uint64_t)a1);
    sub_100038D28(v2 + 9, v2[12]);
    uint64_t v19 = *(void **)(v12 + 32);
    id v20 = self;
    id v17 = v19;
    id v18 = [v20 viewControllerForUnknownContact:v14];
  }
  id v21 = v18;
  [v21 setContactStore:v17];
  [v21 setAllowsEditing:0];
  [v21 setAllowsActions:0];
  [v21 setDisplayMode:1];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v23 = Strong;
    [Strong pushViewController:v21 animated:1];

    id v14 = v17;
    id v17 = v21;
    id v21 = v23;
  }
}

void sub_1003B4BA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785530 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100018BF8(v3, (uint64_t)qword_10079D1F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497473696CLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v9 = v1[7];
  id v10 = [*(id *)(v9 + 32) objectID];
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v10;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v11 = [*(id *)(v9 + 32) account];
  id v12 = [v11 daSupportsPhoneNumbers];

  id v13 = [objc_allocWithZone((Class)type metadata accessor for TTRIAddShareesViewController()) initWithAllowsPhoneNumbers:v12];
  if (v13)
  {
    id v14 = v13;
    id v15 = [v13 navigationItem];
    id v16 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:v1 action:"requestCancelAddingSharees"];
    [v15 setLeftBarButtonItem:v16];

    id v17 = [v14 navigationItem];
    v18._object = (void *)0x80000001006B8C90;
    v19._uint64_t countAndFlagsBits = 6579265;
    v19._object = (void *)0xE300000000000000;
    v18._uint64_t countAndFlagsBits = 0xD000000000000029;
    TTRLocalizedString(_:comment:)(v19, v18);
    uint64_t v33 = v2;
    v32[0] = v1;
    swift_retain();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v21 = v33;
    if (v33)
    {
      uint64_t v22 = sub_100038D28(v32, v33);
      uint64_t v23 = *(void *)(v21 - 8);
      __chkstk_darwin(v22);
      id v25 = (char *)v32 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v25);
      uint64_t v26 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
      sub_100038CD8((uint64_t)v32);
    }
    else
    {
      uint64_t v26 = 0;
    }
    id v27 = [objc_allocWithZone((Class)UIBarButtonItem) initWithTitle:v20 style:2 target:v26 action:"requestCommitAddingSharees"];

    swift_unknownObjectRelease();
    [v17 setRightBarButtonItem:v27];

    id v28 = (void *)v1[16];
    v1[16] = v14;
    id v29 = v14;

    sub_100038D28(v1 + 9, v1[12]);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v31 = Strong;
      [Strong pushViewController:v29 animated:1];

      id v29 = v31;
    }
  }
}

void sub_1003B505C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v17 = sub_1003B47B8();
  sub_100099404((void **)a1);
  uint64_t v8 = sub_1003B5B78((uint64_t)&v17, a1);
  sub_10009948C((id *)a1);
  int64_t v9 = v17[2];
  if (v9 < v8)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
  sub_10054E86C(v8, v9);
  v1[6] = v17;
  swift_bridgeObjectRelease();
  if (!*(void *)a1) {
    return;
  }
  uint64_t v10 = qword_100785530;
  uint64_t v1 = *(id *)a1;
  if (v10 != -1) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v11 = sub_100018BF8(v4, (uint64_t)qword_10079D1F0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = 0x44497473696CLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  id v13 = [*(id *)(v2[7] + 32) objectID];
  uint64_t v14 = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 80) = 0x4449656572616873;
  *(void *)(inited + 120) = v14;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = v1;
  id v15 = v1;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1003E93B4(v15, *(void *)(a1 + 56), *(void *)(a1 + 64));
}

uint64_t sub_1003B52DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100785530 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100018BF8(v2, (uint64_t)qword_10079D1F0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497473696CLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  id v8 = [*(id *)(v1[7] + 32) objectID];
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v8;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100038D28(v1 + 9, v1[12]);
  if (qword_100785560 != -1) {
    swift_once();
  }
  sub_100018BF8(v2, (uint64_t)qword_10079DE38);
  sub_1003AA294(0x616853207473694CLL, 0xEC000000676E6972);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = v1[5];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v12 + 8))(v1, &off_100748E00, ObjectType, v12);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1003B5650()
{
  uint64_t v1 = (void *)v0[16];
  if (v1)
  {
    uint64_t v2 = v0;
    id v3 = *(id *)(v0[7] + 32);
    id v4 = v1;
    [v4 commit];
    id v5 = [v3 account];
    id v6 = [v5 objectID];

    id v7 = [v3 objectID];
    id v8 = [v4 recipients];
    if (v8)
    {
      int64_t v9 = v8;
      uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v11 = v6;
      id v6 = v7;
      uint64_t v12 = sub_1003B5A24(v10, v11, v6);

      swift_bridgeObjectRelease();
      id v3 = v11;
    }
    else
    {
      uint64_t v12 = _swiftEmptyArrayStorage;
    }

    sub_1003E85FC((unint64_t)v12);
    swift_bridgeObjectRelease();
    sub_100038D28(v0 + 9, v0[12]);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v14 = Strong;
      id v15 = [Strong popViewControllerAnimated:1];

      id v4 = v15;
    }

    id v16 = (void *)v2[16];
    v2[16] = 0;
  }
}

uint64_t sub_1003B5870()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100038CD8(v0 + 72);

  swift_release();
  return v0;
}

uint64_t sub_1003B58C8()
{
  sub_1003B5870();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIListSharingPresenter()
{
  return self;
}

void sub_1003B5920()
{
  uint64_t v1 = sub_100398F24(*(id *)(*(void *)(v0 + 56) + 32));
  uint64_t v2 = sub_1003B47B8();
  BOOL v3 = sub_1000B9F14((uint64_t)v1, (uint64_t)v2);
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(v0 + 48) = v1;
    swift_bridgeObjectRelease();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v5 = [Strong tableView];
      if (v5)
      {
        id v6 = v5;
        [v5 reloadData];
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void *sub_1003B5A24(uint64_t a1, void *a2, void *a3)
{
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v7 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_100038DC0(v7, (uint64_t)v11);
      sub_1000368FC(0, &qword_10079D2E0);
      if (swift_dynamicCast())
      {
        id v8 = sub_100060688(v10, a2, a3);

        if (v8)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      v7 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return (void *)v12;
  }
  return result;
}

uint64_t sub_1003B5B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  if (!v3) {
    return 0;
  }
  sub_1003B5FA4(a2, (uint64_t)v51);
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = v2[v4 + 4];
    uint64_t result = sub_1003B5FA4((uint64_t)v51, (uint64_t)&v53);
    if (!v6)
    {
      if (!v53) {
        break;
      }
      goto LABEL_4;
    }
    if (v53 && v6 == v53) {
      break;
    }
LABEL_4:
    ++v5;
    v4 += 14;
    if (v3 == v5) {
      return v3;
    }
  }
  unint64_t v9 = v5 + 1;
  if (__OFADD__(v5, 1)) {
    goto LABEL_36;
  }
  if (v9 == v3) {
    return v5;
  }
  uint64_t v10 = v4 * 8 + 144;
  while (2)
  {
    unint64_t v14 = v2[2];
    if (v9 < v14)
    {
      uint64_t v15 = *(void *)((char *)v2 + v10);
      uint64_t result = sub_1003B5FA4((uint64_t)v51, (uint64_t)&v52);
      if (v15)
      {
        if (!v52 || v15 != v52) {
          goto LABEL_23;
        }
      }
      else if (v52)
      {
LABEL_23:
        if (v9 != v5)
        {
          if (v5 >= v14) {
            goto LABEL_34;
          }
          uint64_t v43 = 14 * v5;
          uint64_t v16 = (uint64_t)&v2[14 * v5 + 4];
          id v17 = *(void **)v16;
          uint64_t v34 = *(void *)(v16 + 8);
          uint64_t v18 = *(void *)(v16 + 16);
          uint64_t v33 = *(void *)(v16 + 24);
          uint64_t v19 = *(void *)(v16 + 32);
          uint64_t v32 = *(void *)(v16 + 40);
          uint64_t v20 = *(void *)(v16 + 48);
          uint64_t v31 = *(void *)(v16 + 56);
          uint64_t v21 = *(void *)(v16 + 64);
          uint64_t v30 = *(void *)(v16 + 72);
          uint64_t v22 = *(void *)(v16 + 80);
          uint64_t v29 = *(void *)(v16 + 88);
          uint64_t v44 = *(void *)(v16 + 96);
          char v28 = *(unsigned char *)(v16 + 104);
          id v50 = *(void **)((char *)v2 + v10);
          uint64_t v42 = *(void *)((char *)v2 + v10 + 8);
          uint64_t v49 = *(void *)((char *)v2 + v10 + 16);
          uint64_t v41 = *(void *)((char *)v2 + v10 + 24);
          uint64_t v48 = *(void *)((char *)v2 + v10 + 32);
          uint64_t v40 = *(void *)((char *)v2 + v10 + 40);
          uint64_t v47 = *(void *)((char *)v2 + v10 + 48);
          uint64_t v39 = *(void *)((char *)v2 + v10 + 56);
          uint64_t v46 = *(void *)((char *)v2 + v10 + 64);
          uint64_t v38 = *(void *)((char *)v2 + v10 + 72);
          uint64_t v45 = *(void *)((char *)v2 + v10 + 80);
          uint64_t v36 = *(void *)((char *)v2 + v10 + 96);
          uint64_t v37 = *(void *)((char *)v2 + v10 + 88);
          char v35 = *((unsigned char *)v2 + v10 + 104);
          swift_bridgeObjectRetain();
          id v23 = v17;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v24 = v50;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v2 = sub_100366FC8(v2);
          }
          id v25 = &v2[v43];
          uint64_t v26 = (void *)v2[v43 + 4];
          v25[4] = v50;
          v25[5] = v42;
          uint64_t v25[6] = v49;
          v25[7] = v41;
          char v25[8] = v48;
          v25[9] = v40;
          v25[10] = v47;
          v25[11] = v39;
          v25[12] = v46;
          v25[13] = v38;
          v25[14] = v45;
          v25[15] = v37;
          v25[16] = v36;
          *((unsigned char *)v25 + 136) = v35;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v9 >= v2[2]) {
            goto LABEL_35;
          }
          id v11 = (char *)v2 + v10;
          unint64_t v12 = *(void **)((char *)v2 + v10);
          *(void *)id v11 = v17;
          *((void *)v11 + 1) = v34;
          *((void *)v11 + 2) = v18;
          *((void *)v11 + 3) = v33;
          *((void *)v11 + 4) = v19;
          *((void *)v11 + 5) = v32;
          *((void *)v11 + 6) = v20;
          *((void *)v11 + 7) = v31;
          *((void *)v11 + 8) = v21;
          *((void *)v11 + 9) = v30;
          *((void *)v11 + 10) = v22;
          *((void *)v11 + 11) = v29;
          *((void *)v11 + 12) = v44;
          v11[104] = v28;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          *(void *)a1 = v2;
        }
        if (__OFADD__(v5++, 1)) {
          goto LABEL_33;
        }
      }
      ++v9;
      v10 += 112;
      if (v9 == v2[2]) {
        return v5;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1003B5FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078A9C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1003B600C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PPTTestClass();
  return [super dealloc];
}

uint64_t sub_1003B6040(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = a2;
  uint64_t v4 = a1;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_palette] = 0;
  unint64_t v5 = &v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID];
  *(void *)unint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v39 = *(void *)(a1 + 16);
  if (v39)
  {
    uint64_t v37 = v5;
    swift_bridgeObjectRetain_n();
    uint64_t v6 = v2;
    uint64_t v7 = 0;
    uint64_t v38 = v4;
    id v8 = (_OWORD *)(v4 + 56);
    unint64_t v9 = &_swiftEmptyDictionarySingleton;
    while (1)
    {
      uint64_t v12 = *((void *)v8 - 3);
      uint64_t v11 = *((void *)v8 - 2);
      uint64_t v40 = *((void *)v8 - 1);
      long long v41 = *v8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v13 = *((id *)&v41 + 1);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v43 = v9;
      unint64_t v16 = sub_100009B88(v12, v11);
      uint64_t v17 = v9[2];
      BOOL v18 = (v15 & 1) == 0;
      uint64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      char v20 = v15;
      if (v9[3] >= v19)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          unint64_t v9 = v43;
          if (v15) {
            goto LABEL_3;
          }
        }
        else
        {
          sub_100362DE0();
          unint64_t v9 = v43;
          if (v20) {
            goto LABEL_3;
          }
        }
      }
      else
      {
        sub_100575504(v19, isUniquelyReferenced_nonNull_native);
        unint64_t v21 = sub_100009B88(v12, v11);
        if ((v20 & 1) != (v22 & 1)) {
          goto LABEL_25;
        }
        unint64_t v16 = v21;
        unint64_t v9 = v43;
        if (v20)
        {
LABEL_3:
          uint64_t v10 = v9[7] + 56 * v16;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)uint64_t v10 = v7;
          *(void *)(v10 + 8) = v12;
          *(void *)(v10 + 16) = v11;
          *(void *)(v10 + 24) = v40;
          *(void *)(v10 + 32) = v41;
          *(void *)(v10 + 40) = v13;
          *(void *)(v10 + 48) = 0;
          goto LABEL_4;
        }
      }
      v9[(v16 >> 6) + 8] |= 1 << v16;
      id v23 = (uint64_t *)(v9[6] + 16 * v16);
      *id v23 = v12;
      v23[1] = v11;
      uint64_t v24 = v9[7] + 56 * v16;
      *(void *)uint64_t v24 = v7;
      *(void *)(v24 + 8) = v12;
      *(void *)(v24 + 16) = v11;
      *(void *)(v24 + 24) = v40;
      *(_OWORD *)(v24 + 32) = v41;
      *(void *)(v24 + 48) = 0;
      uint64_t v25 = v9[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_22;
      }
      v9[2] = v27;
      swift_bridgeObjectRetain();
LABEL_4:
      ++v7;
      id v8 = (_OWORD *)((char *)v8 + 40);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (v39 == v7)
      {
        uint64_t v4 = v38;
        swift_bridgeObjectRelease();
        unint64_t v3 = a2;
        unint64_t v5 = v37;
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRetain();
  char v28 = v2;
  unint64_t v9 = &_swiftEmptyDictionarySingleton;
LABEL_18:
  swift_bridgeObjectRelease();
  *(void *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID] = v9;
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_23;
  }
  if (*(void *)(v4 + 16) <= v3)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t v29 = (void *)(v4 + 40 * v3);
    uint64_t v30 = v29[4];
    uint64_t v31 = v29[5];
    uint64_t v32 = (void *)v29[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v33 = v32;
    swift_bridgeObjectRelease();
    *(void *)unint64_t v5 = v30;
    *((void *)v5 + 1) = v31;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v42.receiver = v2;
    v42.super_class = (Class)type metadata accessor for TTRISegmentedNavigationController();
    id v34 = [super initWithRootViewController:v33];

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v34;
  }
  return result;
}

uint64_t sub_1003B63C4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID);
  unint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_100009B88(v2, v1);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = (uint64_t *)(*(void *)(v4 + 56) + 56 * v5);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = v7[2];
  uint64_t v11 = v7[3];
  uint64_t v12 = v7[4];
  id v13 = (void *)v7[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v10) {
    return 0;
  }
  sub_1000FF770(v8, v9, v10, v11, v12, v14);
  return v8;
}

uint64_t (*sub_1003B6500())()
{
  return j__swift_endAccess_0;
}

void sub_1003B655C()
{
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID];
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(*v1 + 16) >= 2uLL)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v3 = sub_10035E718(v2);
    swift_bridgeObjectRelease();
    *(void *)&long long v34 = v3;
    sub_1003B6E88((uint64_t *)&v34);
    swift_bridgeObjectRelease();
    uint64_t v4 = v34;
    uint64_t v5 = *(void *)(v34 + 16);
    if (v5)
    {
      uint64_t v29 = v1;
      uint64_t v31 = v0;
      char v6 = v0;
      specialized ContiguousArray.reserveCapacity(_:)();
      sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
      uint64_t v7 = (long long *)(v4 + 40);
      do
      {
        uint64_t v8 = *((void *)v7 + 2);
        uint64_t v9 = *((void *)v7 + 3);
        uint64_t v10 = (void *)*((void *)v7 + 4);
        long long v34 = *v7;
        long long v33 = v34;
        uint64_t v11 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = v11;
        *(_OWORD *)(v12 + 24) = v33;
        *(void *)(v12 + 40) = v8;
        *(void *)(v12 + 48) = v9;
        *(void *)(v12 + 56) = v10;
        swift_bridgeObjectRetain_n();
        sub_10026EA1C((uint64_t)&v34);
        id v13 = v10;
        UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v7 = (long long *)((char *)v7 + 56);
        --v5;
      }
      while (v5);
      swift_release();

      uint64_t v1 = v29;
      uint64_t v0 = v31;
    }
    else
    {
      swift_release();
    }
    sub_10039A044((unint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    id v14 = objc_allocWithZone((Class)UISegmentedControl);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [v14 initWithItems:isa];

    uint64_t v17 = *(void *)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID + 8];
    if (v17)
    {
      uint64_t v18 = *v1;
      if (*(void *)(*v1 + 16))
      {
        uint64_t v19 = *(void *)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v20 = sub_100009B88(v19, v17);
        if (v21)
        {
          char v22 = (uint64_t *)(*(void *)(v18 + 56) + 56 * v20);
          uint64_t v23 = v22[2];
          uint64_t v30 = v22[1];
          uint64_t v32 = *v22;
          uint64_t v24 = v22[4];
          uint64_t v28 = v22[3];
          uint64_t v25 = (void *)v22[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v26 = v25;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v23)
          {
            sub_1000FF770(v32, v30, v23, v28, v24, v26);
            [v16 setSelectedSegmentIndex:v32];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }
    uint64_t v27 = *(void **)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl];
    *(void *)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl] = v16;
  }
}

void sub_1003B6904(void *a1)
{
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl];
  if (v2)
  {
    uint64_t v4 = OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_palette;
    uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_palette];
    if (v5)
    {
      id v6 = v2;
      id v7 = v5;
    }
    else
    {
      id v8 = v2;
      id v9 = [v1 view];
      if (!v9)
      {
        __break(1u);
        return;
      }
      uint64_t v10 = v9;
      [v9 bounds];
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      CGFloat v18 = v17;

      v27.origin.CGFloat x = v12;
      v27.origin.CGFloat y = v14;
      v27.size.CGFloat width = v16;
      v27.size.CGFloat height = v18;
      double Width = CGRectGetWidth(v27);
      [v8 sizeThatFits:0.0, 0.0];
      id v21 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, Width, v20 + 12.0];
      [v21 addSubview:v8];
      id v22 = [objc_allocWithZone((Class)_UINavigationBarPalette) initWithContentView:v21];
      uint64_t v23 = *(void **)&v1[v4];
      *(void *)&v1[v4] = v22;
      id v7 = v22;

      uint64_t v5 = 0;
    }
    id v24 = v5;
    id v25 = [a1 navigationItem];
    [v25 _setBottomPalette:v7];
  }
}

void sub_1003B6ADC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  id v6 = (uint64_t *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID];
  uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID + 8];
  if (!v7 || (*v6 == a1 ? (BOOL v8 = v7 == a2) : (BOOL v8 = 0), !v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
  {
    id v9 = &v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID];
    swift_beginAccess();
    uint64_t v10 = *(void *)v9;
    if (*(void *)(v10 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_100009B88(a1, a2);
      if (v12)
      {
        uint64_t v13 = *(void *)(v10 + 56) + 56 * v11;
        CGFloat v14 = *(void **)(v13 + 40);
        uint64_t v15 = *(void *)(v13 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v32 = v14;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v16 = v6[1];
        if (v16)
        {
          uint64_t v17 = *v6;
          swift_bridgeObjectRetain();
          CGFloat v18 = sub_1003B6500();
          double v20 = sub_1000FBC8C(v33, v17, v16);
          if (*(void *)(v19 + 16))
          {
            uint64_t v21 = v19;
            uint64_t v31 = (void (*)(void *, void))v20;
            id v22 = [v3 viewControllers];
            sub_1000368FC(0, (unint64_t *)&qword_100791C40);
            uint64_t v23 = v18;
            uint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            *(void *)(v21 + 48) = v24;
            swift_bridgeObjectRelease();
            v31(v33, 0);
            swift_bridgeObjectRelease();
            ((void (*)(void *, void))v23)(v34, 0);
          }
          else
          {
            ((void (*)(void *, void))v20)(v33, 0);
            swift_bridgeObjectRelease();
            ((void (*)(void *, void))v18)(v34, 0);
          }
        }
        *id v6 = a1;
        v6[1] = a2;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (!v15)
        {
          sub_10003B754((uint64_t *)&unk_1007894B0);
          uint64_t v25 = swift_allocObject();
          *(_OWORD *)(v25 + 16) = xmmword_10066D470;
          *(void *)(v25 + 32) = v32;
          v34[0] = v25;
          specialized Array._endMutation()();
          id v26 = v32;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        CGRect v27 = sub_1003B6500();
        uint64_t v29 = sub_1000FBC8C(v33, a1, a2);
        if (*(void *)(v28 + 16))
        {
          *(void *)(v28 + 48) = 0;
          swift_bridgeObjectRelease();
        }
        ((void (*)(void *, void))v29)(v33, 0);
        swift_bridgeObjectRelease();
        ((void (*)(void *, void))v27)(v34, 0);
        sub_1000368FC(0, (unint64_t *)&qword_100791C40);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v3 setViewControllers:isa animated:0];
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
}

Swift::Int sub_1003B6E88(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100475DEC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1003B77D8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1003B6EF4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_1003B7000()
{
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for TTRISegmentedNavigationController();
  [super viewDidLayoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 view];
    if (v3)
    {
      uint64_t v4 = v3;
      [v3 layoutMargins];
      double v6 = v5;
      double v8 = v7;

      id v9 = [v0 navigationBar];
      [v9 bounds];
      CGFloat v11 = v10;
      CGFloat v13 = v12;
      CGFloat v15 = v14;
      CGFloat v17 = v16;

      v25.origin.CGFloat x = v11;
      v25.origin.CGFloat y = v13;
      v25.size.CGFloat width = v15;
      v25.size.CGFloat height = v17;
      double v18 = CGRectGetWidth(v25) - v6 - v8;
      id v19 = [v0 traitCollection];
      id v20 = [v19 horizontalSizeClass];

      if (v20 != (id)2) {
        goto LABEL_8;
      }
      if (qword_100785538 != -1) {
        swift_once();
      }
      double v21 = *(double *)&qword_10079D310;
      if (*(double *)&qword_10079D310 >= v18 || (objc_msgSend(v2, "sizeThatFits:", v18, 0.0), v21 <= v18))
      {
LABEL_8:
        [v2 bounds];
        CGRectGetHeight(v26);
        id v22 = v2;
        id v23 = [v0 traitCollection];
        [v23 displayScale];

        UIRectRoundToScale();
        [v22 setFrame:];

        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1003B7294()
{
  qword_10079D310 = 0x4076E00000000000;
}

void sub_1003B72A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v5 = (void *)Strong;
    sub_1003B6ADC(*a3, a3[1]);
  }
}

id sub_1003B739C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISegmentedNavigationController();
  return [super dealloc];
}

uint64_t type metadata accessor for TTRISegmentedNavigationController()
{
  return self;
}

uint64_t destroy for TTRISegmentedNavigationController.TabState(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRISegmentedNavigationController.TabState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TTRISegmentedNavigationController.TabState(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[5];
  id v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRISegmentedNavigationController.TabState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRISegmentedNavigationController.TabState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRISegmentedNavigationController.TabState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)Swift::Int result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISegmentedNavigationController.TabState()
{
  return &type metadata for TTRISegmentedNavigationController.TabState;
}

uint64_t sub_1003B7744()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B777C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1003B77CC(uint64_t a1)
{
  sub_1003B72A8(a1, *(void *)(v1 + 16), (uint64_t *)(v1 + 24));
}

Swift::Int sub_1003B77D8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v98 = 0;
      uint64_t v99 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v101 = *(void *)(v99 + 56 * i);
        uint64_t v102 = v98;
        do
        {
          uint64_t v103 = v99 + v102;
          if (v101 >= *(void *)(v99 + v102)) {
            break;
          }
          if (!v99) {
            goto LABEL_140;
          }
          uint64_t v104 = v99 + v102;
          long long v105 = *(_OWORD *)(v99 + v102 + 64);
          uint64_t v106 = *(void *)(v99 + v102 + 80);
          uint64_t v107 = *(void *)(v99 + v102 + 104);
          long long v108 = *(_OWORD *)(v99 + v102 + 88);
          long long v109 = *(_OWORD *)(v103 + 16);
          *(_OWORD *)(v99 + v102 + 56) = *(_OWORD *)v103;
          *(_OWORD *)(v99 + v102 + 72) = v109;
          *(_OWORD *)(v99 + v102 + 88) = *(_OWORD *)(v103 + 32);
          *(void *)(v99 + v102 + 104) = *(void *)(v103 + 48);
          *(void *)uint64_t v104 = v101;
          *(_OWORD *)(v104 + 8) = v105;
          *(void *)(v104 + 24) = v106;
          *(_OWORD *)(v104 + 32) = v108;
          v102 -= 56;
          *(void *)(v104 + 48) = v107;
        }
        while (v102 != -56);
        v98 += 56;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v6 = result;
  uint64_t v126 = v1;
  char v119 = a1;
  if (v3 < 2)
  {
    id v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      double v12 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      CGRect v110 = v12;
      uint64_t v121 = v9;
      if (v13 >= 2)
      {
        uint64_t v111 = *v119;
        do
        {
          unint64_t v112 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v111) {
            goto LABEL_144;
          }
          CGRect v113 = v110;
          uint64_t v114 = *(void *)&v110[16 * v112 + 32];
          uint64_t v115 = *(void *)&v110[16 * v13 + 24];
          sub_1003B7F48((char *)(v111 + 56 * v114), (char *)(v111 + 56 * *(void *)&v110[16 * v13 + 16]), v111 + 56 * v115, __dst);
          if (v126) {
            break;
          }
          if (v115 < v114) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            CGRect v113 = sub_10047596C((uint64_t)v113);
          }
          if (v112 >= *((void *)v113 + 2)) {
            goto LABEL_133;
          }
          uint64_t v116 = &v113[16 * v112 + 32];
          *(void *)uint64_t v116 = v114;
          *((void *)v116 + 1) = v115;
          unint64_t v117 = *((void *)v113 + 2);
          if (v13 > v117) {
            goto LABEL_134;
          }
          memmove(&v113[16 * v13 + 16], &v113[16 * v13 + 32], 16 * (v117 - v13));
          CGRect v110 = v113;
          *((void *)v113 + 2) = v117 - 1;
          unint64_t v13 = v117 - 1;
        }
        while (v117 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v121[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v121 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    uint64_t v121 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v120 = *a1 + 112;
  uint64_t v118 = *a1 + 48;
  double v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v122 = v6;
  Swift::Int v123 = v3;
  uint64_t v124 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 56 * v10);
      uint64_t v16 = *(void *)(v11 + 56 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        CGFloat v17 = (uint64_t *)(v120 + 56 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 7;
          uint64_t v19 = v20;
          if (v15 < v16 == v20 >= v18) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 56 * v10;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          uint64_t v24 = 56 * v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v24;
              uint64_t v26 = v11 + v21;
              uint64_t v27 = *(void *)(v11 + v24 + 16);
              uint64_t v28 = *(void *)(v11 + v24 + 24);
              uint64_t v29 = *(void *)(v11 + v24 + 48);
              long long v30 = *(_OWORD *)(v11 + v24 + 32);
              long long v31 = *(_OWORD *)(v11 + v24);
              long long v32 = *(_OWORD *)(v11 + v21 - 40);
              long long v33 = *(_OWORD *)(v11 + v21 - 24);
              long long v34 = *(_OWORD *)(v11 + v21 - 56);
              *(void *)(v25 + 48) = *(void *)(v11 + v21 - 8);
              *(_OWORD *)(v25 + 16) = v32;
              *(_OWORD *)(v25 + 32) = v33;
              *(_OWORD *)uint64_t v25 = v34;
              *(_OWORD *)(v26 - 56) = v31;
              *(void *)(v26 - 40) = v27;
              *(void *)(v26 - 32) = v28;
              *(_OWORD *)(v26 - 24) = v30;
              *(void *)(v26 - 8) = v29;
            }
            ++v23;
            v21 -= 56;
            v24 += 56;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v35 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v35 >= v3) {
      Swift::Int v35 = v3;
    }
    if (v35 < v14) {
      break;
    }
    if (v10 != v35)
    {
      uint64_t v36 = v118 + 56 * v10;
      do
      {
        uint64_t v37 = *(void *)(v11 + 56 * v10);
        Swift::Int v38 = v14;
        uint64_t v39 = v36;
        do
        {
          uint64_t v40 = v39 - 104;
          if (v37 >= *(void *)(v39 - 104)) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v41 = *(void *)(v39 - 56);
          *(void *)(v39 - 56) = *(void *)v39;
          v39 -= 56;
          uint64_t v42 = *(void *)(v39 + 16);
          uint64_t v43 = *(void *)(v39 + 24);
          uint64_t v44 = *(void *)(v39 + 32);
          long long v45 = *(_OWORD *)(v39 + 40);
          long long v46 = *(_OWORD *)(v40 + 16);
          *(_OWORD *)(v40 + 56) = *(_OWORD *)v40;
          *(_OWORD *)(v40 + 72) = v46;
          *(_OWORD *)(v40 + 88) = *(_OWORD *)(v40 + 32);
          *(void *)(v40 + 104) = v41;
          *(void *)(v39 - 48) = v37;
          *(void *)(v39 - 40) = v42;
          *(void *)(v39 - 32) = v43;
          *(void *)(v39 - 24) = v44;
          *(_OWORD *)(v39 - 16) = v45;
          ++v38;
        }
        while (v10 != v38);
        ++v10;
        v36 += 56;
      }
      while (v10 != v35);
      Swift::Int v10 = v35;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v12 = sub_100475454(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v48 = *((void *)v12 + 2);
    unint64_t v47 = *((void *)v12 + 3);
    unint64_t v13 = v48 + 1;
    uint64_t v11 = v124;
    if (v48 >= v47 >> 1)
    {
      uint64_t v97 = sub_100475454((char *)(v47 > 1), v48 + 1, 1, v12);
      uint64_t v11 = v124;
      double v12 = v97;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v49 = v12 + 32;
    id v50 = &v12[16 * v48 + 32];
    *(void *)id v50 = v14;
    *((void *)v50 + 1) = v10;
    if (v48)
    {
      while (1)
      {
        unint64_t v51 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v56 = &v49[16 * v13];
          uint64_t v57 = *((void *)v56 - 8);
          uint64_t v58 = *((void *)v56 - 7);
          BOOL v62 = __OFSUB__(v58, v57);
          uint64_t v59 = v58 - v57;
          if (v62) {
            goto LABEL_119;
          }
          uint64_t v61 = *((void *)v56 - 6);
          uint64_t v60 = *((void *)v56 - 5);
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v54 = v60 - v61;
          char v55 = v62;
          if (v62) {
            goto LABEL_120;
          }
          unint64_t v63 = v13 - 2;
          uint64_t v64 = &v49[16 * v13 - 32];
          uint64_t v66 = *(void *)v64;
          uint64_t v65 = *((void *)v64 + 1);
          BOOL v62 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v62) {
            goto LABEL_122;
          }
          BOOL v62 = __OFADD__(v54, v67);
          uint64_t v68 = v54 + v67;
          if (v62) {
            goto LABEL_125;
          }
          if (v68 >= v59)
          {
            int v86 = &v49[16 * v51];
            uint64_t v88 = *(void *)v86;
            uint64_t v87 = *((void *)v86 + 1);
            BOOL v62 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v62) {
              goto LABEL_129;
            }
            BOOL v79 = v54 < v89;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v80 = *((void *)v12 + 4);
            uint64_t v81 = *((void *)v12 + 5);
            BOOL v62 = __OFSUB__(v81, v80);
            uint64_t v73 = v81 - v80;
            char v74 = v62;
            goto LABEL_77;
          }
          uint64_t v53 = *((void *)v12 + 4);
          uint64_t v52 = *((void *)v12 + 5);
          BOOL v62 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          char v55 = v62;
        }
        if (v55) {
          goto LABEL_121;
        }
        unint64_t v63 = v13 - 2;
        uint64_t v69 = &v49[16 * v13 - 32];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v72 = __OFSUB__(v70, v71);
        uint64_t v73 = v70 - v71;
        char v74 = v72;
        if (v72) {
          goto LABEL_124;
        }
        uint64_t v75 = &v49[16 * v51];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v62 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v62) {
          goto LABEL_127;
        }
        if (__OFADD__(v73, v78)) {
          goto LABEL_128;
        }
        if (v73 + v78 >= v54)
        {
          BOOL v79 = v54 < v78;
LABEL_83:
          if (v79) {
            unint64_t v51 = v63;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v74) {
          goto LABEL_123;
        }
        uint64_t v82 = &v49[16 * v51];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v62 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v62) {
          goto LABEL_126;
        }
        if (v85 < v73) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v90 = v51 - 1;
        if (v51 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v91 = v12;
        uint64_t v92 = &v49[16 * v90];
        uint64_t v93 = *(void *)v92;
        uint64_t v94 = &v49[16 * v51];
        uint64_t v95 = *((void *)v94 + 1);
        sub_1003B7F48((char *)(v11 + 56 * *(void *)v92), (char *)(v11 + 56 * *(void *)v94), v11 + 56 * v95, __dst);
        if (v126) {
          goto LABEL_93;
        }
        if (v95 < v93) {
          goto LABEL_116;
        }
        if (v51 > *((void *)v91 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v92 = v93;
        *(void *)&v49[16 * v90 + 8] = v95;
        unint64_t v96 = *((void *)v91 + 2);
        if (v51 >= v96) {
          goto LABEL_118;
        }
        double v12 = v91;
        unint64_t v13 = v96 - 1;
        memmove(&v49[16 * v51], v94 + 16, 16 * (v96 - 1 - v51));
        *((void *)v91 + 2) = v96 - 1;
        uint64_t v11 = v124;
        if (v96 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v122;
    Swift::Int v3 = v123;
    if (v10 >= v123)
    {
      id v9 = v121;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003B7F48(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 56;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 56;
  long long v34 = __src;
  long long v33 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -55)
    {
      if (__dst != a2 || &a2[56 * v11] <= __dst) {
        memmove(__dst, a2, 56 * v11);
      }
      uint64_t v20 = &v4[56 * v11];
      long long v32 = v20;
      long long v34 = v6;
      if (v7 < v6 && v10 >= 56)
      {
        unint64_t v21 = a3 - 56;
        Swift::Int v22 = v6;
        while (1)
        {
          Swift::Int v23 = (char *)(v21 + 56);
          uint64_t v24 = *((void *)v22 - 7);
          v22 -= 56;
          if (*((void *)v20 - 7) >= v24)
          {
            long long v32 = v20 - 56;
            if (v23 < v20 || v21 >= (unint64_t)v20 || v23 != v20)
            {
              long long v28 = *(_OWORD *)(v20 - 56);
              long long v29 = *(_OWORD *)(v20 - 40);
              long long v30 = *(_OWORD *)(v20 - 24);
              *(void *)(v21 + 48) = *((void *)v20 - 1);
              *(_OWORD *)(v21 + 16) = v29;
              *(_OWORD *)(v21 + 32) = v30;
              *(_OWORD *)unint64_t v21 = v28;
            }
            Swift::Int v22 = v6;
            v20 -= 56;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v23 != v6 || v21 >= (unint64_t)v6)
            {
              long long v25 = *(_OWORD *)v22;
              long long v26 = *((_OWORD *)v22 + 1);
              long long v27 = *((_OWORD *)v22 + 2);
              *(void *)(v21 + 48) = *((void *)v22 + 6);
              *(_OWORD *)(v21 + 16) = v26;
              *(_OWORD *)(v21 + 32) = v27;
              *(_OWORD *)unint64_t v21 = v25;
            }
            long long v34 = v22;
            if (v22 <= v7) {
              goto LABEL_38;
            }
          }
          v21 -= 56;
          Swift::Int v6 = v22;
          if (v20 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -55)
  {
    if (__dst != __src || &__src[56 * v9] <= __dst) {
      memmove(__dst, __src, 56 * v9);
    }
    double v12 = &v4[56 * v9];
    long long v32 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 56)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4)
          {
            long long v17 = *(_OWORD *)v4;
            long long v18 = *((_OWORD *)v4 + 1);
            long long v19 = *((_OWORD *)v4 + 2);
            *((void *)v7 + 6) = *((void *)v4 + 6);
            *((_OWORD *)v7 + 1) = v18;
            *((_OWORD *)v7 + 2) = v19;
            *(_OWORD *)uint64_t v7 = v17;
          }
          v4 += 56;
          long long v33 = v4;
          unint64_t v13 = v6;
        }
        else
        {
          unint64_t v13 = v6 + 56;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
          {
            long long v14 = *(_OWORD *)v6;
            long long v15 = *((_OWORD *)v6 + 1);
            long long v16 = *((_OWORD *)v6 + 2);
            *((void *)v7 + 6) = *((void *)v6 + 6);
            *((_OWORD *)v7 + 1) = v15;
            *((_OWORD *)v7 + 2) = v16;
            *(_OWORD *)uint64_t v7 = v14;
          }
        }
        v7 += 56;
        if (v4 >= v12) {
          break;
        }
        Swift::Int v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      long long v34 = v7;
    }
LABEL_38:
    sub_10047569C((void **)&v34, (const void **)&v33, &v32);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void destroy for TTRISegmentedNavigationTab(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for TTRISegmentedNavigationTab(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for TTRISegmentedNavigationTab(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for TTRISegmentedNavigationTab(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISegmentedNavigationTab()
{
  return &type metadata for TTRISegmentedNavigationTab;
}

void *sub_1003B8438()
{
  return &protocol witness table for String;
}

void sub_1003B8444(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  unint64_t v5 = *(void *)(v1 + 8);
  unint64_t v6 = *(void *)(*(void *)v1 + 16);
  if (v5 == v6) {
    goto LABEL_8;
  }
  if (v5 >= v6)
  {
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2 == v8) {
      goto LABEL_7;
    }
    goto LABEL_11;
  }
  uint64_t v7 = *(void *)v1 + 40 * v5 + 32;
  *(void *)(v1 + 8) = v5 + 1;
  sub_1000145EC(v7, (uint64_t)v11);
  unint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  if (v3 >> 62) {
    goto LABEL_10;
  }
  if (v2 == *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    sub_100038CD8((uint64_t)v11);
LABEL_8:
    *(unsigned char *)(v1 + 32) = 1;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    return;
  }
LABEL_11:
  if ((v3 & 0xC000000000000001) == 0)
  {
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v2 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v9 = *(id *)(v3 + 8 * v2 + 32);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_21;
  }
  id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_15:
  id v10 = v9;
  if (__OFADD__(v2, 1))
  {
LABEL_21:
    __break(1u);
    return;
  }
  *(void *)(v1 + 24) = v2 + 1;
  sub_100038ED8(v11, a1);
  *(void *)(a1 + 40) = v10;
}

char *sub_1003B859C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(id *, id), uint64_t a6)
{
  uint64_t v73 = a5;
  uint64_t v74 = a6;
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_10079C9D0);
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v70 = *(void *)(v14 - 8);
  __chkstk_darwin(v14 - 8);
  uint64_t v68 = (uint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v15;
  __chkstk_darwin(v16);
  long long v18 = (char *)&v61 - v17;
  unint64_t v78 = v6;
  long long v19 = sub_1000A7DC0(a1, a2);
  uint64_t v20 = _swiftEmptyArrayStorage;
  if (!v19) {
    return (char *)v20;
  }
  unint64_t v21 = v19;
  *(void *)&long long v77 = a4;
  if (qword_100785220 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100018BF8(v22, (uint64_t)qword_100789570);
  id v23 = v21;
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.info.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v66 = v13;
  if (v26)
  {
    uint64_t v67 = v18;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v76 = a3;
    long long v28 = (uint8_t *)v27;
    long long v29 = (void *)swift_slowAlloc();
    *(_DWORD *)long long v28 = 138412290;
    uint64_t v30 = a1;
    uint64_t v31 = a2;
    long long v32 = [v23 objectID];
    unint64_t v80 = (unint64_t)v32;
    long long v18 = v67;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *long long v29 = v32;
    a2 = v31;
    a1 = v30;
    uint64_t v20 = _swiftEmptyArrayStorage;

    _os_log_impl((void *)&_mh_execute_header, v24, v25, "performDrop: accepting drop {targetListID: %@}", v28, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = (uint64_t (*)(void))v76;
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v33 = a3(v23);
  unint64_t v34 = v33;
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v60) {
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v35)
    {
LABEL_29:
      swift_bridgeObjectRelease();

      return (char *)v20;
    }
  }
  uint64_t result = sub_1000A8030(a1, a2, v35, v78);
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v37 = result;
  unint64_t v80 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v65 = *((void *)result + 2);
  if (!v65)
  {
    swift_bridgeObjectRelease();
    uint64_t v76 = _swiftEmptyArrayStorage;
LABEL_26:
    sub_10003B754(&qword_10079D5B0);
    id v79 = v20;
    sub_10003B754(&qword_10079D5B8);
    sub_100037EA0(&qword_10079D5C0, &qword_10079D5B8);
    static Promise.all<A>(_:)();
    swift_bridgeObjectRelease();
    uint64_t v59 = (void *)zalgoIfMain.getter();
    *(void *)(swift_allocObject() + 16) = v37;
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    swift_release();
    return (char *)v76;
  }
  unint64_t v63 = v34 & 0xC000000000000001;
  id v64 = v23;
  if ((v34 & 0xC000000000000001) != 0 || v65 <= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = 0;
    uint64_t v76 = _swiftEmptyArrayStorage;
    unint64_t v61 = v34;
    BOOL v62 = v37;
    uint64_t v67 = v18;
    do
    {
      long long v77 = *(_OWORD *)&v37[16 * v38 + 32];
      unint64_t v39 = v77;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v41 = *((void *)&v77 + 1);
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(*((void *)&v77 + 1) + 16);
      swift_unknownObjectRetain();
      v42(ObjectType, v41);
      if (v63) {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v43 = *(id *)(v34 + 8 * v38 + 32);
      }
      uint64_t v44 = v43;
      unint64_t v45 = (unint64_t)v76;
      uint64_t v46 = (uint64_t)v66;
      id v79 = v43;
      uint64_t v47 = (uint64_t)v66 + *(int *)(v72 + 48);
      *uint64_t v66 = v43;
      sub_1003BE0BC((uint64_t)v18, v47, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      id v48 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v45 = sub_1005704EC(0, *(void *)(v45 + 16) + 1, 1, v45);
      }
      unint64_t v50 = *(void *)(v45 + 16);
      unint64_t v49 = *(void *)(v45 + 24);
      unint64_t v78 = v39;
      uint64_t v75 = v38;
      if (v50 >= v49 >> 1) {
        unint64_t v45 = sub_1005704EC(v49 > 1, v50 + 1, 1, v45);
      }
      *(void *)(v45 + 16) = v50 + 1;
      unint64_t v51 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      uint64_t v76 = (void *)v45;
      sub_100028C3C(v46, v45 + v51 + *(void *)(v71 + 72) * v50, (uint64_t *)&unk_10079C9D0);
      v73(&v79, v64);
      swift_retain();
      uint64_t v52 = (void *)zalgoIfMain.getter();
      uint64_t v53 = v68;
      sub_1003BE0BC((uint64_t)v18, v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      unint64_t v54 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      unint64_t v55 = (v54 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v56 = swift_allocObject();
      sub_1003BE054(v53, v56 + v54, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_OWORD *)(v56 + v55) = v77;
      type metadata accessor for TTRRemindersListImportedContent();
      swift_unknownObjectRetain();
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();

      swift_release();
      sub_1003BE0BC((uint64_t)v18, v53, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v57 = swift_allocObject();
      sub_1003BE054(v53, v57 + v54, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v58 = (void *)zalgo.getter();
      dispatch thunk of Promise.error(on:closure:)();
      swift_release();
      swift_release();

      swift_release();
      swift_retain();
      Promise.errorAsNil()();
      swift_release();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      uint64_t v38 = v75 + 1;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
      swift_unknownObjectRelease();

      long long v18 = v67;
      sub_1003BE404((uint64_t)v67, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      unint64_t v34 = v61;
      uint64_t v37 = v62;
    }
    while (v65 != v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)v80;
    id v23 = v64;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

void *sub_1003B8E1C(uint64_t a1, uint64_t (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v29 = a4;
  id v30 = a5;
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = *(void *)(v5 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 328))(a1, ObjectType, v12);
  if (v15 == -1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v16 = (void *)v14;
  char v17 = v15;
  uint64_t v28 = v10;
  unint64_t v18 = a2(v14, v15 & 1);
  unint64_t v19 = v18;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t v18 = swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_4;
    }
    goto LABEL_6;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    swift_bridgeObjectRelease();
    sub_100095434(v16, v17);
    return _swiftEmptyArrayStorage;
  }
LABEL_4:
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t)v30;
  *(&v28 - 6) = v29;
  *(&v28 - 5) = v20;
  *(&v28 - 4) = (uint64_t)v16;
  *((unsigned char *)&v28 - 24) = v21;
  *(&v28 - 2) = a1;
  uint64_t v22 = sub_100587D28((void (*)(uint64_t *__return_ptr, id *))sub_1003BFA24, (uint64_t)(&v28 - 8), v19);
  sub_10003B754(&qword_10079D5B0);
  uint64_t v31 = v22;
  sub_10003B754(&qword_10079D5B8);
  id v30 = v16;
  sub_100037EA0(&qword_10079D5C0, &qword_10079D5B8);
  static Promise.all<A>(_:)();
  swift_bridgeObjectRelease();
  id v23 = (void *)zalgoIfMain.getter();
  sub_1003BE0BC(a1, (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  unint64_t v24 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v6;
  sub_1003BE054((uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  swift_release();
  sub_100095434(v30, v17);
  return (void *)v19;
}

uint64_t sub_1003B9144(uint64_t a1, void (*a2)(uint64_t *, uint64_t, uint64_t, double), uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v10 = a5 & 1;
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  double v14 = __chkstk_darwin(v11 - 8);
  uint64_t v22 = a1;
  a2(&v22, a4, v10, v14);
  sub_1003BE0BC(a6, (uint64_t)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  sub_1003BE054((uint64_t)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  char v17 = (void *)zalgo.getter();
  type metadata accessor for TTRRemindersListImportedContent();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  unint64_t v18 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();

  swift_release();
  swift_retain();
  uint64_t v19 = Promise.errorAsNil()();
  swift_release_n();
  return v19;
}

uint64_t sub_1003B9348(uint64_t a1, uint64_t a2, uint64_t (*a3)(id), void *a4, void (*a5)(id *, id), uint64_t a6)
{
  void (*v23)(unint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  id v33;
  void *v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  int v45;
  int v46;
  void *v47;
  void *v48;
  unsigned int v49;
  uint64_t v50;
  unsigned __int8 v51;
  id v52;
  id v53;
  unsigned __int8 v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, void *);
  uint64_t v60;
  void *v61;
  void *v62;
  char v63;
  uint64_t v64;
  uint64_t (**v65)(uint64_t, void *);
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  void *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  unsigned int v93;
  id v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v102)(id *, id);
  id v103;
  uint64_t v104;
  long long v105[3];
  unsigned char v106[40];
  id v107;
  long long v108;
  long long v109;
  long long v110;
  unint64_t v111;
  long long v112;
  long long v113;
  long long v114;
  unint64_t v115;
  void *v116;
  void v117[4];
  __int16 v118;
  unint64_t v119;
  void v120[3];
  void *v121;
  uint64_t (**v122)(uint64_t, void *);
  void v123[3];
  uint64_t v124;
  uint64_t v125;

  uint64_t v7 = (long long *)v6;
  uint64_t v102 = a5;
  uint64_t v98 = a4;
  uint64_t v12 = sub_10003B754(&qword_10078B608);
  __chkstk_darwin(v12 - 8);
  double v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  uint64_t v104 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v100 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v83 - v18;
  uint64_t result = (uint64_t)sub_1000A9B2C(a1, a2);
  if (result)
  {
    uint64_t v97 = a6;
    uint64_t v103 = (id)result;
    uint64_t v99 = v19;
    uint64_t v21 = *(void **)(v6 + 24);
    uint64_t ObjectType = swift_getObjectType();
    id v23 = (void (*)(unint64_t *__return_ptr, uint64_t, uint64_t))v21[67];
    unint64_t v96 = ObjectType;
    v23(&v111, a1, a2);
    if (!(void)v113)
    {

      sub_10003B6F8((uint64_t)&v111, &qword_100789640);
      return 0;
    }
    sub_100038ED8((long long *)&v111, (uint64_t)v123);
    unint64_t v24 = v124;
    uint64_t v25 = v125;
    sub_100038D28(v123, v124);
    (*(void (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v14, 1, v15) == 1)
    {

      uint64_t v26 = &qword_10078B608;
      uint64_t v27 = v14;
LABEL_5:
      sub_10003B6F8((uint64_t)v27, v26);
      goto LABEL_46;
    }
    uint64_t v28 = (uint64_t)v99;
    sub_1003BE054((uint64_t)v14, (uint64_t)v99, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    uint64_t v29 = v124;
    id v30 = v125;
    sub_100038D28(v123, v124);
    uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
    if ((_BYTE)v32 == 0xFF)
    {
      sub_1003BE404(v28, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    }
    else
    {
      unint64_t v33 = (id)v31;
      LODWORD(v34) = v32;
      uint64_t v35 = a3(v103);
      uint64_t v36 = v35;
      uint64_t v37 = (void *)(v35 >> 62);
      if (v35 >> 62) {
        goto LABEL_43;
      }
      if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        do
        {
          uint64_t v94 = v33;
          uint64_t v95 = (int)v34;
          uint64_t v38 = v124;
          unint64_t v39 = v125;
          sub_100038D28(v123, v124);
          uint64_t v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
          uint64_t v42 = v41;
          uint64_t v44 = v43;
          uint64_t v46 = v45;
          sub_1000AAE14(v40, v41, v43, v45);
          uint64_t v47 = sub_1005B53B0(v40, v42, v44, v46);
          uint64_t v92 = v48;
          uint64_t v93 = v49;
          if ((_BYTE)v49 == 0xFF)
          {
            sub_1003BE404((uint64_t)v99, type metadata accessor for TTRRemindersListMatchedAttributeValue);

            sub_1000AA844(v40, v42, v44, v46);
            uint64_t v53 = v94;
            unint64_t v54 = v95;
            goto LABEL_45;
          }
          uint64_t v84 = v42;
          uint64_t v85 = v44;
          int v86 = v46;
          unint64_t v50 = *((void *)v7 + 4);
          unint64_t v90 = *((void *)v7 + 5);
          uint64_t v91 = v47;
          unint64_t v51 = v95;
          uint64_t v52 = v94;
          uint64_t v98 = v40;
          uint64_t v83 = v37;
          if (v37)
          {
            unint64_t v55 = v50;
            swift_bridgeObjectRetain();
            uint64_t v87 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            unint64_t v50 = v55;
          }
          else
          {
            uint64_t v87 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v89 = v50;
          uint64_t v88 = swift_getObjectType();
          uint64_t v37 = (void *)TTRRemindersListReminderInsertionPosition.init(relativePosition:)();
          uint64_t v56 = v52;
          uint64_t v58 = v57;
          uint64_t v59 = (uint64_t (*)(uint64_t, void *))v21[54];
          sub_1000AAEA8(v56, v51);
          uint64_t v60 = v59(v96, v21);
          BOOL v62 = v91;
          unint64_t v61 = v92;
          unint64_t v63 = v93;
          (*(void (**)(unint64_t *__return_ptr, uint64_t, void, void *, void *, void, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 168))(&v111, v87, 0, v91, v92, v93, v37, v58, v60, v88, v90);
          swift_bridgeObjectRelease();
          sub_1000AAEBC(v37, v58);
          if (!(void)v113)
          {
            sub_1003BE404((uint64_t)v99, type metadata accessor for TTRRemindersListMatchedAttributeValue);

            sub_1000AA844(v98, v84, v85, v86);
            sub_1000AA998(v94, v95);
            sub_1000AAED0(v62, v61, v63);
            swift_bridgeObjectRelease();
            uint64_t v26 = &qword_100789660;
            uint64_t v27 = (char *)&v111;
            goto LABEL_5;
          }
          sub_100038ED8((long long *)&v111, (uint64_t)v120);
          id v64 = (uint64_t)v121;
          unint64_t v65 = v122;
          sub_100038D28(v120, (uint64_t)v121);
          uint64_t v66 = v65[1](v64, v65);
          swift_retain();
          uint64_t v67 = sub_1000AAA10(v66, (unint64_t)v7);
          swift_bridgeObjectRelease();
          swift_release();
          char v119 = (unint64_t)_swiftEmptyArrayStorage;
          unint64_t v34 = v121;
          unint64_t v33 = v122;
          sub_100038D28(v120, (uint64_t)v121);
          uint64_t v68 = (*((uint64_t (**)(void *, id))v33 + 1))(v34, v33);
          uint64_t v115 = v36;
          v117[0] = v67;
          v117[1] = 0;
          v117[2] = v68;
          v117[3] = 0;
          uint64_t v118 = 0;
          uint64_t v69 = v98;
          if (v83)
          {
            swift_bridgeObjectRetain();
            uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v70 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (!v70)
          {
LABEL_39:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10003B754(&qword_10079D5B0);
            uint64_t v111 = v119;
            sub_10003B754(&qword_10079D5B8);
            sub_100037EA0(&qword_10079D5C0, &qword_10079D5B8);
            static Promise.all<A>(_:)();
            swift_bridgeObjectRelease();
            unint64_t v80 = (void *)zalgoIfMain.getter();
            sub_1000145EC((uint64_t)v120, (uint64_t)&v111);
            uint64_t v81 = swift_allocObject();
            sub_100038ED8((long long *)&v111, v81 + 16);
            dispatch thunk of Promise.then<A>(on:closure:)();

            sub_1000AAED0(v91, v92, v93);
            swift_release();
            swift_release();

            swift_release();
            sub_1000AA998(v94, v95);
            sub_1000AA844(v69, v84, v85, v86);
            sub_1003BE404((uint64_t)v99, type metadata accessor for TTRRemindersListMatchedAttributeValue);
            sub_100038CD8((uint64_t)v120);
            sub_100038CD8((uint64_t)v123);
            return 1;
          }
          uint64_t v71 = 0;
          uint64_t v21 = v117;
          uint64_t v7 = &v112;
          uint64_t v72 = (uint64_t)v100;
          while (1)
          {
            if ((v36 & 0xC000000000000001) != 0)
            {
              uint64_t v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              goto LABEL_27;
            }
            if ((v71 & 0x8000000000000000) != 0) {
              break;
            }
            if (v71 >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_41;
            }
            uint64_t v73 = *(id *)(v36 + 8 * v71 + 32);
LABEL_27:
            unint64_t v34 = v73;
            if (__OFADD__(v71, 1)) {
              goto LABEL_42;
            }
            uint64_t v116 = (void *)(v71 + 1);
            sub_1003B8444((uint64_t)&v108);
            if (!*((void *)&v109 + 1))
            {

              sub_10003B6F8((uint64_t)&v108, &qword_10079D5A8);
              uint64_t v69 = v98;
              goto LABEL_39;
            }
            CGRect v113 = v109;
            uint64_t v114 = v110;
            unint64_t v112 = v108;
            uint64_t v111 = (unint64_t)v34;
            uint64_t v74 = (void *)*((void *)&v110 + 1);
            uint64_t v107 = v34;
            sub_100038ED8(&v112, (uint64_t)&v108);
            *((void *)&v110 + 1) = v74;
            sub_1000145EC((uint64_t)&v108, (uint64_t)v105);
            sub_100038ED8(v105, (uint64_t)v106);
            uint64_t v75 = v74;
            v102(&v107, v103);
            swift_retain();
            uint64_t v76 = (void *)zalgoIfMain.getter();
            sub_1000145EC((uint64_t)v106, (uint64_t)v105);
            sub_1003BE0BC((uint64_t)v99, v72, type metadata accessor for TTRRemindersListMatchedAttributeValue);
            long long v77 = (*(unsigned __int8 *)(v104 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
            unint64_t v78 = swift_allocObject();
            sub_100038ED8(v105, v78 + 16);
            sub_1003BE054(v72, v78 + v77, type metadata accessor for TTRRemindersListMatchedAttributeValue);
            type metadata accessor for TTRRemindersListImportedContent();
            dispatch thunk of Promise.then<A>(on:closure:)();
            swift_release();

            swift_release();
            *(void *)(swift_allocObject() + 16) = v75;
            unint64_t v33 = v75;
            id v79 = (void *)zalgo.getter();
            dispatch thunk of Promise.error(on:closure:)();
            swift_release();
            swift_release();

            swift_release();
            swift_retain();
            Promise.errorAsNil()();
            swift_release();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v37 = *(void **)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if ((unint64_t)v37 >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_release();

            sub_100038CD8((uint64_t)v106);
            sub_10003B6F8((uint64_t)&v108, &qword_10079D5C8);

            uint64_t v69 = v98;
            if ((v118 & 0x100) != 0) {
              goto LABEL_39;
            }
            uint64_t v36 = v115;
            uint64_t v71 = (unint64_t)v116;
            if (v115 >> 62)
            {
              swift_bridgeObjectRetain();
              unint64_t v34 = (void *)_CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if ((void *)v71 == v34) {
                goto LABEL_39;
              }
            }
            else
            {
              unint64_t v34 = *(void **)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v116 == v34) {
                goto LABEL_39;
              }
            }
          }
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          swift_bridgeObjectRetain();
          uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        while (v82);
      }
      sub_1003BE404((uint64_t)v99, type metadata accessor for TTRRemindersListMatchedAttributeValue);

      uint64_t v53 = v33;
      unint64_t v54 = v34;
LABEL_45:
      sub_1000AA998(v53, v54);
      swift_bridgeObjectRelease();
    }
LABEL_46:
    sub_100038CD8((uint64_t)v123);
    return 0;
  }
  return result;
}

uint64_t sub_1003B9E90()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079D360);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079D360);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for TTRIRemindersListUnsupportedDropRequest()
{
  return self;
}

uint64_t sub_1003B9F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t ObjectType = swift_getObjectType();
  sub_1003BE0BC(a1, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 0, 1, v11);
  (*(void (**)(long long *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v9 + 520))(&v24, v8, a2, ObjectType, v9);
  sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
  if (v25)
  {
    sub_100038ED8(&v24, (uint64_t)v27);
    uint64_t v12 = v28;
    uint64_t v13 = v29;
    sub_100038D28(v27, v28);
    uint64_t v14 = *(void *)(v3 + 16);
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v16 = _swiftEmptyArrayStorage;
    if (v15)
    {
      *(void *)&long long v24 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v17 = 32;
      do
      {
        id v18 = *(id *)(v14 + v17);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v17 += 16;
        --v15;
      }
      while (v15);
      uint64_t v16 = (void *)v24;
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = sub_1003999EC((unint64_t)v16);
    swift_bridgeObjectRelease();
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v13 + 32))(&v24, v19, v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v20 = v25;
    uint64_t v21 = v26;
    sub_100038D28(&v24, v25);
    char v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21) ^ 1;
    sub_100038CD8((uint64_t)&v24);
    sub_100038CD8((uint64_t)v27);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v24, &qword_100789650);
    char v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_1003BA208(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v3 + 528))(&v17, a1, ObjectType, v3);
  if (v18)
  {
    sub_100038ED8(&v17, (uint64_t)v20);
    uint64_t v5 = v21;
    uint64_t v6 = v22;
    sub_100038D28(v20, v21);
    uint64_t v7 = *(void *)(v1 + 16);
    uint64_t v8 = *(void *)(v7 + 16);
    uint64_t v9 = _swiftEmptyArrayStorage;
    if (v8)
    {
      *(void *)&long long v17 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v10 = 32;
      do
      {
        id v11 = *(id *)(v7 + v10);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v10 += 16;
        --v8;
      }
      while (v8);
      uint64_t v9 = (void *)v17;
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = sub_1003999EC((unint64_t)v9);
    swift_bridgeObjectRelease();
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v6 + 32))(&v17, v12, v5, v6);
    swift_bridgeObjectRelease();
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_100038D28(&v17, v18);
    char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14) ^ 1;
    sub_100038CD8((uint64_t)&v17);
    sub_100038CD8((uint64_t)v20);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v17, &qword_100789650);
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1003BA3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t ObjectType = swift_getObjectType();
  sub_1003BE0BC(a1, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 0, 1, v11);
  (*(void (**)(long long *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 536))(&v21, v8, a2, ObjectType, v9);
  sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
  if (v22)
  {
    uint64_t v12 = sub_100038ED8(&v21, (uint64_t)v23);
    uint64_t v13 = *(void *)(v3 + 16);
    uint64_t v14 = *(void *)(v13 + 16);
    char v15 = _swiftEmptyArrayStorage;
    if (v14)
    {
      *(void *)&long long v21 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v16 = 32;
      do
      {
        id v17 = *(id *)(v13 + v16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v16 += 16;
        --v14;
      }
      while (v14);
      char v15 = (void *)v21;
      uint64_t v12 = swift_bridgeObjectRelease();
    }
    __chkstk_darwin(v12);
    *(void *)&v20[-16] = v23;
    char v18 = sub_1003E2234(sub_1003BF048, (uint64_t)&v20[-32], (unint64_t)v15);
    swift_bridgeObjectRelease();
    sub_100038CD8((uint64_t)v23);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v21, &qword_100789640);
    char v18 = 0;
  }
  return v18 & 1;
}

void *sub_1003BA628(uint64_t a1, uint64_t a2)
{
  void (*v14)(long long *__return_ptr, char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  int v48;
  int v49;
  void *v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  unsigned __int8 v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(long long *__return_ptr, unint64_t, void *, void *, unint64_t, void *, uint64_t, uint64_t, uint64_t);
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  void *v91;
  void *v92;
  void *v93;
  int v94;
  uint64_t v95;
  void (*v96)(long long *__return_ptr, unint64_t, void *, void *, unint64_t, void *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  id v107;
  int v108;
  uint64_t v109;
  void (*v110)(char *, void, uint64_t, uint64_t);
  uint64_t v111;
  long long v112;
  uint64_t v113;
  void v114[3];
  uint64_t v115;
  uint64_t v116;
  long long v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  unint64_t v3 = v2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v3 + 32);
  uint64_t ObjectType = swift_getObjectType();
  sub_1003BE0BC(a1, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v13 = *(void *)(v12 - 8);
  CGRect v110 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  long long v109 = v13 + 56;
  v110(v8, 0, 1, v12);
  uint64_t v14 = *(void (**)(long long *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v10 + 520);
  uint64_t v111 = a2;
  v14(&v117, v8, a2, ObjectType, v10);
  sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
  if (!v118)
  {
    sub_10003B6F8((uint64_t)&v117, &qword_100789650);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v101 = v12;
  uint64_t v102 = a1;
  uint64_t v103 = ObjectType;
  uint64_t v104 = v9;
  long long v105 = v10;
  uint64_t v106 = v8;
  sub_100038ED8(&v117, (uint64_t)&v120);
  char v15 = v121;
  uint64_t v16 = v122;
  sub_100038D28(&v120, v121);
  id v17 = *(void *)(v3 + 16);
  char v18 = *(void *)(v17 + 16);
  uint64_t v19 = _swiftEmptyArrayStorage;
  if (v18)
  {
    v114[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v20 = 32;
    do
    {
      long long v21 = *(id *)(v17 + v20);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v20 += 16;
      --v18;
    }
    while (v18);
    uint64_t v19 = (void *)v114[0];
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = sub_1003999EC((unint64_t)v19);
  swift_bridgeObjectRelease();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v16 + 32))(&v117, v22, v15, v16);
  id v23 = swift_bridgeObjectRelease();
  long long v24 = *(void *)(v17 + 16);
  uint64_t v25 = _swiftEmptyArrayStorage;
  if (v24)
  {
    v114[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v26 = 32;
    do
    {
      uint64_t v27 = *(id *)(v17 + v26);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v26 += 16;
      --v24;
    }
    while (v24);
    uint64_t v25 = (void *)v114[0];
    id v23 = swift_bridgeObjectRelease();
  }
  __chkstk_darwin(v23);
  *(&v88 - 2) = (uint64_t)&v117;
  uint64_t v28 = 0;
  uint64_t v29 = (unint64_t)sub_10059670C((void (*)(uint64_t *__return_ptr, void *))sub_1003BE464, (uint64_t)(&v88 - 4), (unint64_t)v25);
  swift_bridgeObjectRelease();
  id v30 = v29 >> 62;
  if (v29 >> 62) {
    goto LABEL_43;
  }
  if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  while (1)
  {
    uint64_t v31 = v118;
    long long v32 = v119;
    sub_100038D28(&v117, v118);
    uint64_t v107 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 24))(v31, v32);
    long long v108 = v33;
    if ((_BYTE)v33 == 0xFF) {
      goto LABEL_44;
    }
    unint64_t v90 = v28;
    if (v30)
    {
      swift_bridgeObjectRetain();
      unint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v34 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
    if (v34) {
      break;
    }
LABEL_25:
    uint64_t v41 = v121;
    uint64_t v42 = v122;
    sub_100038D28(&v120, v121);
    id v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
    unint64_t v45 = v44;
    uint64_t v47 = v46;
    unint64_t v49 = v48;
    sub_1000AAE14(v43, v44, v46, v48);
    unint64_t v50 = sub_1005B53B0(v43, v45, v47, v49);
    if ((_BYTE)v52 == 0xFF)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_41:
      sub_1000AA844(v43, v45, v47, v49);
      sub_1000AA998(v107, v108);
      goto LABEL_45;
    }
    id v30 = v52;
    uint64_t v91 = v43;
    uint64_t v92 = v45;
    uint64_t v93 = v47;
    uint64_t v94 = v49;
    uint64_t v98 = *(void *)(v3 + 40);
    uint64_t v89 = v3;
    uint64_t v53 = *(void *)(v3 + 48);
    uint64_t v95 = v53;
    uint64_t v99 = v50;
    uint64_t v100 = v51;
    uint64_t v97 = swift_getObjectType();
    unint64_t v54 = v107;
    unint64_t v55 = v35;
    uint64_t v56 = v108;
    uint64_t v57 = (void *)TTRRemindersListReminderInsertionPosition.init(relativePosition:)();
    uint64_t v59 = v58;
    uint64_t v60 = *(void (**)(long long *__return_ptr, unint64_t, void *, void *, unint64_t, void *, uint64_t, uint64_t, uint64_t))(v53 + 176);
    unint64_t v3 = v53 + 176;
    unint64_t v96 = v60;
    sub_100172370(v54, v56);
    unint64_t v61 = v99;
    BOOL v62 = v100;
    v96(&v112, v55, v99, v100, v30, v57, v59, v97, v95);
    swift_bridgeObjectRelease();
    sub_1000AAEBC(v57, v59);
    if (!v113)
    {
      sub_1000AAED0(v61, v62, v30);
      swift_bridgeObjectRelease();
      sub_10003B6F8((uint64_t)&v112, &qword_100789660);
      LOBYTE(v49) = v94;
      uint64_t v47 = v93;
      unint64_t v45 = v92;
      id v43 = v91;
      goto LABEL_41;
    }
    LODWORD(v98) = v30;
    sub_100038ED8(&v112, (uint64_t)v114);
    unint64_t v63 = v115;
    id v64 = v116;
    sub_100038D28(v114, v115);
    uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v63, v64);
    *(void *)&unint64_t v112 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1004D3740(0, 0, 0);
    uint64_t v36 = (void *)v112;
    uint64_t v97 = v35 >> 62;
    uint64_t v88 = v34;
    if (v35 >> 62) {
      goto LABEL_49;
    }
    unint64_t v65 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v65) {
      goto LABEL_50;
    }
LABEL_29:
    if (v65 < 1)
    {
      __break(1u);
LABEL_62:
      swift_once();
      goto LABEL_57;
    }
    uint64_t v66 = 0;
    uint64_t v28 = v35 & 0xC000000000000001;
    uint64_t v67 = v35;
    while (1)
    {
      uint64_t v68 = v28 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v35 + 8 * v66 + 32);
      uint64_t v69 = v68;
      uint64_t v70 = v111 + v66;
      if (__OFADD__(v111, v66)) {
        break;
      }
      *(void *)&unint64_t v112 = v36;
      unint64_t v3 = v36[2];
      uint64_t v71 = v36[3];
      id v30 = v3 + 1;
      if (v3 >= v71 >> 1)
      {
        sub_1004D3740(v71 > 1, v3 + 1, 1);
        uint64_t v36 = (void *)v112;
      }
      ++v66;
      v36[2] = v30;
      uint64_t v72 = &v36[2 * v3];
      v72[4] = v69;
      v72[5] = v70;
      uint64_t v35 = v67;
      if (v65 == v66) {
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v73) {
      goto LABEL_44;
    }
  }
  v114[0] = _swiftEmptyArrayStorage;
  uint64_t v36 = v114;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v34 & 0x8000000000000000) == 0)
  {
    uint64_t v37 = 0;
    do
    {
      if ((v29 & 0xC000000000000001) != 0) {
        uint64_t v38 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v38 = (char *)*(id *)(v29 + 8 * v37 + 32);
      }
      unint64_t v39 = v38;
      ++v37;
      uint64_t v40 = *(id *)&v38[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v34 != v37);
    uint64_t v35 = v114[0];
    goto LABEL_25;
  }
  __break(1u);
LABEL_49:
  swift_bridgeObjectRetain();
  unint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
  if (v65) {
    goto LABEL_29;
  }
LABEL_50:
  swift_bridgeObjectRelease_n();
  uint64_t v76 = (uint64_t)v106;
  sub_1003BE0BC(v102, (uint64_t)v106, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  v110((char *)v76, 0, 1, v101);
  long long v77 = sub_100399BB8((uint64_t)v36);
  swift_release();
  unint64_t v78 = (*(uint64_t (**)(uint64_t, void *, uint64_t))(v105 + 416))(v76, v77, v103);
  swift_bridgeObjectRelease();
  sub_10003B6F8(v76, (uint64_t *)&unk_100788DC0);
  id v30 = *(void *)(v78 + 16);
  if (v97)
  {
    swift_bridgeObjectRetain();
    unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v3 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v30 == v3 && v30 == v88)
  {
    swift_bridgeObjectRelease();
    id v79 = v115;
    unint64_t v80 = v116;
    sub_100038D28(v114, v115);
    (*(void (**)(uint64_t, uint64_t))(v80 + 16))(v79, v80);
    uint64_t v81 = *(void *)(v78 + 16);
    swift_bridgeObjectRetain();
    uint64_t v82 = v89;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1003BEB80(0, v81, v82, v29, v78);
    uint64_t v74 = v83;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000AA844(v91, v92, v93, v94);
    sub_1000AA998(v107, v108);
    sub_1000AAED0(v99, v100, v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100038CD8((uint64_t)v114);
    sub_100038CD8((uint64_t)&v117);
    sub_100038CD8((uint64_t)&v120);
    return (void *)v74;
  }
  swift_bridgeObjectRelease();
  if (qword_100785540 != -1) {
    goto LABEL_62;
  }
LABEL_57:
  uint64_t v84 = type metadata accessor for Logger();
  sub_100018BF8(v84, (uint64_t)qword_10079D360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v85 = Logger.logObject.getter();
  int v86 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v87 = swift_slowAlloc();
    *(_DWORD *)uint64_t v87 = 134218240;
    swift_bridgeObjectRelease();
    *(void *)&unint64_t v112 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 12) = 2048;
    swift_bridgeObjectRelease();
    *(void *)&unint64_t v112 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v85, v86, "items count not matching reminderChangeItems count {items: %ld, reminderChangeItems: %ld}", (uint8_t *)v87, 0x16u);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_1000AA844(v91, v92, v93, v94);
  sub_1000AA998(v107, v108);
  sub_1000AAED0(v99, v100, v98);
  sub_100038CD8((uint64_t)v114);
LABEL_45:
  sub_100038CD8((uint64_t)&v117);
  sub_100038CD8((uint64_t)&v120);
  return _swiftEmptyArrayStorage;
}

void sub_1003BB274(unint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  unint64_t v5 = *a1;
  uint64_t v4 = (void *)a1[1];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_100038D28(a2, v6);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  id v9 = v4;
  uint64_t v10 = v8(v6, v7);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v5 >= *(void *)(v10 + 16))
  {
LABEL_7:
    __break(1u);
    return;
  }
  sub_1003BEFE0(v10 + 48 * v5 + 32, (uint64_t)v12);
  swift_bridgeObjectRelease();
  int v11 = v12[40];
  sub_100038CD8((uint64_t)v12);
  if (v11 != 1)
  {

    id v9 = 0;
  }
  *a3 = v9;
}

uint64_t sub_1003BB358(uint64_t a1, uint64_t a2)
{
  uint64_t v104 = a2;
  uint64_t v3 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v95 = *(void *)(v3 - 8);
  uint64_t v96 = v3;
  __chkstk_darwin(v3);
  uint64_t v98 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v94 = (char *)&v89 - v6;
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v93 = v7;
  __chkstk_darwin(v7);
  uint64_t v89 = v8;
  unint64_t v90 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v91 = (char *)&v89 - v10;
  uint64_t v11 = sub_10003B754(&qword_10078B608);
  __chkstk_darwin(v11 - 8);
  uint64_t v100 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  uint64_t v99 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v97 = (uint64_t)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v101 = (uint64_t)&v89 - v15;
  uint64_t v16 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v16 - 8);
  uint64_t v103 = (uint64_t)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  long long v21 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785540 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100018BF8(v18, (uint64_t)qword_10079D360);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v22, v18);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = 48;
  *(void *)(inited + 40) = 0xE100000000000000;
  uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.Item();
  sub_1000AA940();
  *(void *)(inited + 48) = TTRTreeStorageItem.treeItemDescription.getter();
  *(void *)(inited + 56) = v25;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 49;
  *(void *)(inited + 120) = &type metadata for Int;
  uint64_t v26 = v104;
  *(void *)(inited + 88) = 0xE100000000000000;
  *(void *)(inited + 96) = v26;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v27 = v105;
  uint64_t v28 = v105[4];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v30 = v103;
  sub_1003BE0BC(a1, v103, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v30, 0, 1, v24);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 536))(&v106, v30, v26, ObjectType, v28);
  sub_10003B6F8(v30, (uint64_t *)&unk_100788DC0);
  if (!v108)
  {
    sub_10003B6F8((uint64_t)&v106, &qword_100789640);
    return 0;
  }
  sub_100038ED8(&v106, (uint64_t)v113);
  uint64_t v31 = v114;
  uint64_t v32 = v115;
  sub_100038D28(v113, v114);
  uint64_t v33 = (uint64_t)v100;
  (*(void (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v33, 1, v102) == 1)
  {
    sub_10003B6F8(v33, &qword_10078B608);
    sub_100038CD8((uint64_t)v113);
    return 0;
  }
  uint64_t v35 = sub_1003BE054(v33, v101, type metadata accessor for TTRRemindersListMatchedAttributeValue);
  uint64_t v36 = v27[2];
  uint64_t v37 = *(void *)(v36 + 16);
  if (v37)
  {
    *(void *)&long long v106 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v38 = 32;
    do
    {
      id v39 = *(id *)(v36 + v38);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v38 += 16;
      --v37;
    }
    while (v37);
    uint64_t v40 = (void *)v106;
    uint64_t v35 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = _swiftEmptyArrayStorage;
  }
  __chkstk_darwin(v35);
  *(&v89 - 2) = (uint64_t)v113;
  unint64_t v41 = (unint64_t)sub_1004E460C(sub_1003C074C, &v89 - 4, (unint64_t)v40);
  unint64_t v42 = v41;
  if (v41 >> 62)
  {
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    if (v43) {
      goto LABEL_14;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    id v48 = _swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  uint64_t v43 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v43) {
    goto LABEL_22;
  }
LABEL_14:
  *(void *)&long long v106 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v43 < 0)
  {
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v44 = 0;
  do
  {
    if ((v42 & 0xC000000000000001) != 0) {
      unint64_t v45 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      unint64_t v45 = (char *)*(id *)(v42 + 8 * v44 + 32);
    }
    uint64_t v46 = v45;
    ++v44;
    id v47 = *(id *)&v45[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v43 != v44);
  id v48 = (void *)v106;
  swift_bridgeObjectRelease();
LABEL_23:
  uint64_t v49 = v27[6];
  uint64_t v50 = swift_getObjectType();
  (*(void (**)(void *__return_ptr, void *, uint64_t, uint64_t))(v49 + 48))(v112, v48, v50, v49);
  swift_bridgeObjectRelease();
  uint64_t isEscapingClosureAtFileLocation = v97;
  sub_1003BE0BC(v101, v97, type metadata accessor for TTRRemindersListMatchedAttributeValue);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v53 = (uint64_t *)v98;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      goto LABEL_31;
    case 2:
      uint64_t v76 = *(void **)isEscapingClosureAtFileLocation;
      long long v77 = self;
      static TTRLocalizableStrings.UndoAction.customSmartListFilterChange.getter();
      NSString v78 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_1000145EC((uint64_t)v112, (uint64_t)v111);
      uint64_t v79 = swift_allocObject();
      sub_100038ED8(v111, v79 + 16);
      *(void *)(v79 + 56) = v76;
      uint64_t v80 = swift_allocObject();
      *(void *)(v80 + 16) = sub_1003BE1B4;
      *(void *)(v80 + 24) = v79;
      long long v109 = sub_1000499FC;
      uint64_t v110 = v80;
      *(void *)&long long v106 = _NSConcreteStackBlock;
      *((void *)&v106 + 1) = 1107296256;
      uint64_t v107 = sub_100021888;
      long long v108 = &unk_1007491F0;
      uint64_t v81 = _Block_copy(&v106);
      id v82 = v76;
      swift_retain();
      swift_release();
      [v77 withActionName:v78 block:v81];

      _Block_release(v81);
      sub_100038CD8((uint64_t)v112);
      sub_1003BE404(v101, type metadata accessor for TTRRemindersListMatchedAttributeValue);
      uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        goto LABEL_32;
      }
      __break(1u);
LABEL_31:
      char v83 = *(unsigned char *)isEscapingClosureAtFileLocation;
      uint64_t v84 = self;
      static TTRLocalizableStrings.UndoAction.flaggedChange.getter();
      NSString v85 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_1000145EC((uint64_t)v112, (uint64_t)v111);
      uint64_t v86 = swift_allocObject();
      sub_100038ED8(v111, v86 + 16);
      *(unsigned char *)(v86 + 56) = v83;
      uint64_t v87 = swift_allocObject();
      *(void *)(v87 + 16) = sub_1003BE258;
      *(void *)(v87 + 24) = v86;
      long long v109 = sub_1000499FC;
      uint64_t v110 = v87;
      *(void *)&long long v106 = _NSConcreteStackBlock;
      *((void *)&v106 + 1) = 1107296256;
      uint64_t v107 = sub_100021888;
      long long v108 = &unk_100749268;
      uint64_t v88 = _Block_copy(&v106);
      swift_retain();
      swift_release();
      [(id)v84 withActionName:v85 block:v88];

      _Block_release(v88);
      sub_100038CD8((uint64_t)v112);
      sub_1003BE404(v101, type metadata accessor for TTRRemindersListMatchedAttributeValue);
      LOBYTE(v84) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v84) {
        goto LABEL_40;
      }
LABEL_32:
      sub_100038CD8((uint64_t)v113);
      swift_release();
      return 1;
    case 3:
      goto LABEL_26;
    case 4:
      goto LABEL_36;
    default:
      unint64_t v54 = v91;
      uint64_t v55 = v92;
      uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
      uint64_t v57 = v93;
      v56(v91, isEscapingClosureAtFileLocation, v93);
      long long v105 = self;
      static TTRLocalizableStrings.UndoAction.dueDateChange.getter();
      NSString v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_1000145EC((uint64_t)v112, (uint64_t)v111);
      uint64_t v59 = v90;
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v90, v54, v57);
      unint64_t v60 = (*(unsigned __int8 *)(v55 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      uint64_t v53 = (uint64_t *)swift_allocObject();
      sub_100038ED8(v111, (uint64_t)(v53 + 2));
      v56((char *)v53 + v60, (uint64_t)v59, v57);
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = sub_1003BE390;
      *(void *)(v61 + 24) = v53;
      long long v109 = sub_1000499FC;
      uint64_t v110 = v61;
      *(void *)&long long v106 = _NSConcreteStackBlock;
      *((void *)&v106 + 1) = 1107296256;
      uint64_t v107 = sub_100021888;
      long long v108 = &unk_1007492E0;
      BOOL v62 = _Block_copy(&v106);
      swift_retain();
      swift_release();
      [v105 withActionName:v58 block:v62];
      _Block_release(v62);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v57);
      sub_100038CD8((uint64_t)v112);
      sub_1003BE404(v101, type metadata accessor for TTRRemindersListMatchedAttributeValue);
      uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        goto LABEL_32;
      }
      __break(1u);
LABEL_26:
      unint64_t v63 = v94;
      uint64_t v64 = v95;
      uint64_t v65 = v96;
      (*(void (**)(char *, uint64_t, uint64_t))(v95 + 32))(v94, isEscapingClosureAtFileLocation, v96);
      (*(void (**)(uint64_t *, char *, uint64_t))(v64 + 16))(v53, v63, v65);
      int v66 = (*(uint64_t (**)(uint64_t *, uint64_t))(v64 + 88))(v53, v65);
      if (v66 == enum case for REMHashtagLabelSpecifier.labels(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v64 + 96))(v53, v65);
        uint64_t v67 = *v53;
        swift_bridgeObjectRelease();
        uint64_t v68 = *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
        long long v105 = self;
        static TTRLocalizableStrings.UndoAction.hashtagChange.getter();
        NSString v69 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        sub_1000145EC((uint64_t)v112, (uint64_t)v111);
        uint64_t v70 = swift_allocObject();
        sub_100038ED8(v111, v70 + 16);
        *(void *)(v70 + 56) = v67;
        uint64_t v71 = swift_allocObject();
        *(void *)(v71 + 16) = sub_1001DF398;
        *(void *)(v71 + 24) = v70;
        long long v109 = sub_1000218B0;
        uint64_t v110 = v71;
        *(void *)&long long v106 = _NSConcreteStackBlock;
        *((void *)&v106 + 1) = 1107296256;
        uint64_t v107 = sub_100021888;
        long long v108 = &unk_100749178;
        uint64_t v72 = _Block_copy(&v106);
        swift_retain();
        swift_release();
        [v105 withActionName:v69 block:v72];
        _Block_release(v72);

        (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
        sub_100038CD8((uint64_t)v112);
        sub_1003BE404(v101, type metadata accessor for TTRRemindersListMatchedAttributeValue);
        LOBYTE(v69) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v69 & 1) == 0)
        {
          uint64_t v73 = &v98[v68];
          uint64_t v74 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
          (*(void (**)(char *, uint64_t))(*(void *)(v74 - 8) + 8))(v73, v74);
          uint64_t v75 = sub_1001DF398;
          goto LABEL_37;
        }
        goto LABEL_41;
      }
      if (v66 != enum case for REMHashtagLabelSpecifier.allLabels(_:)
        && v66 != enum case for REMHashtagLabelSpecifier.noLabels(_:))
      {
LABEL_42:
        _diagnoseUnexpectedEnumCase<A>(type:)();
        __break(1u);
        JUMPOUT(0x1003BC3ECLL);
      }
      (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
LABEL_36:
      sub_100038CD8((uint64_t)v112);
      sub_1003BE404(v101, type metadata accessor for TTRRemindersListMatchedAttributeValue);
      uint64_t v75 = 0;
LABEL_37:
      sub_100038CD8((uint64_t)v113);
      sub_1000499C4((uint64_t)v75);
      return 1;
  }
}

uint64_t sub_1003BC400(void **a1, void *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  sub_100038D28(a2, v3);
  v9[3] = type metadata accessor for TTRIRemindersListDragReminder();
  v9[4] = &off_10074E250;
  v9[0] = v2;
  uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 8);
  id v6 = v2;
  char v7 = v5(v9, v3, v4);
  sub_100038CD8((uint64_t)v9);
  return v7 & 1;
}

uint64_t sub_1003BC4A8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRDateChangeType();
  __chkstk_darwin(v4);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_100038D28(a1, v7);
  uint64_t v9 = type metadata accessor for DateComponents();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v6, a2, v9);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 8))(v6, v7, v8);
  return sub_1003BE404((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRDateChangeType);
}

uint64_t sub_1003BC5C8()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListInAppDragReminderDropRequest()
{
  return self;
}

uint64_t sub_1003BC63C(uint64_t a1, uint64_t a2)
{
  return sub_1003B9F7C(a1, a2) & 1;
}

uint64_t sub_1003BC664(uint64_t a1)
{
  return sub_1003BA208(a1) & 1;
}

uint64_t sub_1003BC68C()
{
  return sub_1003BC6C8((uint64_t (*)(char *, uint64_t))sub_1003B9F7C) & 1;
}

uint64_t sub_1003BC6C8(uint64_t (*a1)(char *, uint64_t))
{
  uint64_t v2 = sub_10003B754(&qword_100789648);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_10079C9F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003BDCBC((uint64_t)v4);
  uint64_t v11 = sub_10003B754(&qword_100789658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v4, 1, v11) == 1)
  {
    sub_10003B6F8((uint64_t)v4, &qword_100789648);
    char v12 = 0;
  }
  else
  {
    uint64_t v13 = *(void *)&v4[*(int *)(v11 + 48)];
    uint64_t v14 = *(int *)(v5 + 48);
    sub_1003BE054((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(void *)&v7[v14] = v13;
    uint64_t v15 = *(void *)&v7[*(int *)(v5 + 48)];
    sub_1003BE054((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    char v12 = a1(v10, v15);
    sub_1003BE404((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v12 & 1;
}

uint64_t sub_1003BC8D4(uint64_t a1, uint64_t a2)
{
  return sub_1003BA3DC(a1, a2) & 1;
}

uint64_t sub_1003BC8FC()
{
  return sub_1003BC6C8((uint64_t (*)(char *, uint64_t))sub_1003BA3DC) & 1;
}

BOOL sub_1003BC938(uint64_t (*a1)(char *, uint64_t))
{
  uint64_t v2 = sub_10003B754(&qword_100789648);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_10079C9F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003BDCBC((uint64_t)v4);
  uint64_t v11 = sub_10003B754(&qword_100789658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v4, 1, v11) == 1)
  {
    sub_10003B6F8((uint64_t)v4, &qword_100789648);
    return 0;
  }
  else
  {
    uint64_t v13 = *(void *)&v4[*(int *)(v11 + 48)];
    uint64_t v14 = *(int *)(v5 + 48);
    sub_1003BE054((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(void *)&v7[v14] = v13;
    uint64_t v15 = *(void *)&v7[*(int *)(v5 + 48)];
    sub_1003BE054((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    BOOL v12 = sub_1003BD1EC((uint64_t)v10, v15, a1);
    sub_1003BE404((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v12;
}

void *sub_1003BCB44(uint64_t a1, uint64_t a2)
{
  return sub_1003BA628(a1, a2);
}

void *sub_1003BCB68()
{
  return sub_1003BCE90();
}

char *sub_1003BCB8C()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754(&qword_100789648);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10079C9F0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003BDCBC((uint64_t)v6);
  uint64_t v14 = sub_10003B754(&qword_100789658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v6, 1, v14) == 1)
  {
    sub_10003B6F8((uint64_t)v6, &qword_100789648);
    return (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v16 = *(void *)&v6[*(int *)(v14 + 48)];
    uint64_t v21 = v10;
    uint64_t v17 = *(int *)(v7 + 48);
    sub_1003BE054((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(void *)&v9[v17] = v16;
    uint64_t v18 = *(void *)&v9[*(int *)(v7 + 48)];
    sub_1003BE054((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1003BE0BC((uint64_t)v13, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v21);
    uint64_t v15 = sub_1003B859C((uint64_t)v3, v18, (uint64_t (*)(void))sub_1003BF068, v0, (void (*)(id *, id))sub_1003BD380, 0);
    sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788DC0);
    sub_1003BE404((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v15;
}

void *sub_1003BCE90()
{
  uint64_t v0 = sub_10003B754(&qword_100789648);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10079C9F0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003BDCBC((uint64_t)v2);
  uint64_t v9 = sub_10003B754(&qword_100789658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v2, 1, v9) == 1)
  {
    sub_10003B6F8((uint64_t)v2, &qword_100789648);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v11 = *(void *)&v2[*(int *)(v9 + 48)];
    uint64_t v12 = *(int *)(v3 + 48);
    sub_1003BE054((uint64_t)v2, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(void *)&v5[v12] = v11;
    uint64_t v13 = *(void *)&v5[*(int *)(v3 + 48)];
    sub_1003BE054((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v10 = sub_1003BA628((uint64_t)v8, v13);
    sub_1003BE404((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v10;
}

uint64_t sub_1003BD090(uint64_t a1, uint64_t a2)
{
  return sub_1003BB358(a1, a2) & 1;
}

uint64_t sub_1003BD0B8()
{
  return sub_1003BC6C8((uint64_t (*)(char *, uint64_t))sub_1003BB358) & 1;
}

BOOL sub_1003BD0F4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 328))(a1, ObjectType, v3);
  if (v6 == -1) {
    return 0;
  }
  uint64_t v7 = (void *)v5;
  char v8 = v6;
  int v9 = v6 & 1;
  unint64_t v10 = swift_bridgeObjectRetain();
  unint64_t v11 = (unint64_t)sub_1003BE480(v10, v7, v9);
  swift_bridgeObjectRelease();
  if (v11 >> 62) {
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_100095434(v7, v8);
  swift_bridgeObjectRelease();
  return v12 != 0;
}

BOOL sub_1003BD1EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, uint64_t))
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003BE0BC(a1, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  unint64_t v10 = (void *)a3(v8, a2);
  sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
  if (!v10) {
    return 0;
  }
  id v11 = v10;
  unint64_t v12 = swift_bridgeObjectRetain();
  unint64_t v13 = (unint64_t)sub_1003BE7F4(v12, v11);
  swift_bridgeObjectRelease();

  if (v13 >> 62) {
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();

  return v14 != 0;
}

void *sub_1003BD384(void *a1, char a2)
{
  int v3 = a2 & 1;
  id v4 = a1;
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1003BE480(v5, a1, v3);
  swift_bridgeObjectRelease();

  return v6;
}

uint64_t sub_1003BD3F8(void **a1, void *a2, char a3)
{
  unint64_t v5 = *a1;
  type metadata accessor for TTRRemindersListImportedContent();
  id v6 = [v5 itemProvider];
  id v7 = [a2 attachmentContext];
  id v8 = v7;
  if ((a3 & 1) == 0)
  {
    if (v7) {

    }
    id v9 = a2;
    char v10 = REMReminder.canAddURL.getter();

    if (v10)
    {
      if (!v8) {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
    if (v8)
    {
LABEL_13:
      char v13 = 1;
      goto LABEL_17;
    }
LABEL_16:
    char v13 = 0;
    goto LABEL_17;
  }
  if (v7) {

  }
  id v11 = a2;
  char v12 = REMReminderChangeItem.canAddURL.getter();

  if (!v8)
  {
    if (v12)
    {
LABEL_15:
      char v13 = 2;
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if ((v12 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_11:
  char v13 = 3;
LABEL_17:
  uint64_t v14 = sub_100613D78(v6, v13);

  return v14;
}

uint64_t sub_1003BD504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785540 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100018BF8(v7, (uint64_t)qword_10079D360);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = 48;
  *(void *)(inited + 40) = 0xE100000000000000;
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.Item();
  sub_1000AA940();
  *(void *)(inited + 48) = TTRTreeStorageItem.treeItemDescription.getter();
  *(void *)(inited + 56) = v14;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 49;
  *(void *)(inited + 120) = &type metadata for Int;
  *(void *)(inited + 88) = 0xE100000000000000;
  *(void *)(inited + 96) = a2;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = (void *)v17[1];
  sub_1003BE0BC(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
  LOBYTE(v15) = sub_1003B9348((uint64_t)v6, a2, (uint64_t (*)(id))sub_1003BF068, v15, (void (*)(id *, id))sub_1003BD380, 0);
  sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
  return v15 & 1;
}

void *sub_1003BD7E4(void *a1)
{
  id v1 = a1;
  unint64_t v2 = swift_bridgeObjectRetain();
  int v3 = sub_1003BE7F4(v2, v1);
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1003BD844(void **a1, void *a2)
{
  int v3 = *a1;
  type metadata accessor for TTRRemindersListImportedContent();
  id v4 = [v3 itemProvider];
  id v5 = [a2 account];
  id v6 = [v5 capabilities];

  LODWORD(v5) = [v6 supportsAttachments];
  if (v5) {
    char v7 = 15;
  }
  else {
    char v7 = 14;
  }
  uint64_t v8 = sub_100613D78(v4, v7);

  return v8;
}

uint64_t sub_1003BD908()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListOutOfAppDragItemDropRequest()
{
  return self;
}

ValueMetadata *type metadata accessor for TTRIRemindersListInAppDragReminderDropRequest.InAppDragRemindersContext()
{
  return &type metadata for TTRIRemindersListInAppDragReminderDropRequest.InAppDragRemindersContext;
}

BOOL sub_1003BD98C(uint64_t a1, uint64_t a2)
{
  return sub_1003BD1EC(a1, a2, (uint64_t (*)(char *, uint64_t))sub_1000A7DC0);
}

BOOL sub_1003BD9C8(uint64_t a1)
{
  return sub_1003BD0F4(a1);
}

BOOL sub_1003BD9F0()
{
  return sub_1003BC938((uint64_t (*)(char *, uint64_t))sub_1000A7DC0);
}

BOOL sub_1003BDA2C(uint64_t a1, uint64_t a2)
{
  return sub_1003BD1EC(a1, a2, (uint64_t (*)(char *, uint64_t))sub_1000A9B2C);
}

BOOL sub_1003BDA68()
{
  return sub_1003BC938((uint64_t (*)(char *, uint64_t))sub_1000A9B2C);
}

char *sub_1003BDAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1003BE0BC(a1, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
  char v10 = sub_1003B859C((uint64_t)v7, a2, (uint64_t (*)(void))sub_1003BF068, v8, (void (*)(id *, id))sub_1003BD380, 0);
  sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788DC0);
  return v10;
}

void *sub_1003BDBE0(uint64_t a1)
{
  return sub_1003B8E1C(a1, (uint64_t (*)(uint64_t, void))sub_1003BFA18, *v1, (uint64_t)sub_1003BD3F8, 0);
}

char *sub_1003BDC34()
{
  return sub_1003BCB8C();
}

uint64_t sub_1003BDC58(uint64_t a1, uint64_t a2)
{
  return sub_1003BD504(a1, a2) & 1;
}

uint64_t sub_1003BDC80()
{
  return sub_1003BC6C8((uint64_t (*)(char *, uint64_t))sub_1003BD504) & 1;
}

uint64_t sub_1003BDCBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v32 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_10079D580);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_10079D588);
  __chkstk_darwin(v8);
  char v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v17 + 360))(ObjectType, v17);
  uint64_t v19 = sub_10003B754(&qword_10079D590);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v7, 1, v19) == 1)
  {
    uint64_t v20 = &qword_10079D580;
    uint64_t v21 = (uint64_t)v7;
LABEL_5:
    sub_10003B6F8(v21, v20);
    uint64_t v25 = sub_10003B754(&qword_100789658);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v33, 1, 1, v25);
  }
  uint64_t v22 = *(void *)&v7[*(int *)(v19 + 48)];
  uint64_t v23 = *(int *)(v8 + 48);
  sub_100028C3C((uint64_t)v7, (uint64_t)v10, (uint64_t *)&unk_100788DC0);
  *(void *)&v10[v23] = v22;
  uint64_t v24 = *(void *)&v10[*(int *)(v8 + 48)];
  sub_100028C3C((uint64_t)v10, (uint64_t)v16, (uint64_t *)&unk_100788DC0);
  sub_100028C3C((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v13, 1, v2) == 1)
  {
    uint64_t v20 = (uint64_t *)&unk_100788DC0;
    uint64_t v21 = (uint64_t)v13;
    goto LABEL_5;
  }
  uint64_t v27 = v32;
  sub_1003BE054((uint64_t)v13, v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v28 = sub_10003B754(&qword_100789658);
  uint64_t v29 = *(int *)(v28 + 48);
  uint64_t v30 = v27;
  uint64_t v31 = v33;
  sub_1003BE054(v30, v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(void *)(v31 + v29) = v24;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v31, 0, 1, v28);
}

uint64_t sub_1003BE054(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003BE0BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003BE124()
{
  sub_100038CD8(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003BE164()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BE174()
{
  sub_100038CD8(v0 + 16);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003BE1B4()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  sub_100038D28(v0 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 72))(v1, v3, v2);
}

uint64_t sub_1003BE210()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BE220()
{
  sub_100038CD8(v0 + 16);

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_1003BE258()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_100038D28((void *)(v0 + 16), v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24))(v1, v2, v3);
}

uint64_t sub_1003BE2B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BE2C4()
{
  uint64_t v1 = type metadata accessor for DateComponents();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  sub_100038CD8(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003BE390()
{
  uint64_t v1 = *(void *)(type metadata accessor for DateComponents() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1003BC4A8((void *)(v0 + 16), v2);
}

uint64_t sub_1003BE3F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BE404(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1003BE464(unint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1003BB274(a1, *(void **)(v2 + 16), a2);
}

void *sub_1003BE480(unint64_t a1, void *a2, int a3)
{
  uint64_t v4 = v3;
  int v30 = a3;
  uint64_t v25 = type metadata accessor for UTType();
  char v7 = *(void (***)(char *, uint64_t))(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v24 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      unint64_t v10 = 0;
      uint64_t v28 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v29 = a1 & 0xC000000000000001;
      v22[1] = v4;
      uint64_t v23 = v7 + 1;
      unint64_t v27 = a1;
      while (v29)
      {
        uint64_t v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        char v7 = (void (**)(char *, uint64_t))v11;
        unint64_t v12 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_34;
        }
        id v13 = [v11 itemProvider];
        id v14 = [a2 attachmentContext];
        id v15 = v14;
        if (v30)
        {
          if (v14) {

          }
          id v18 = a2;
          uint64_t v4 = REMReminderChangeItem.canAddURL.getter();

          if (!v15)
          {
            if ((v4 & 1) == 0) {
              goto LABEL_30;
            }
            goto LABEL_29;
          }
          if (v4) {
            uint64_t v17 = 3;
          }
          else {
            uint64_t v17 = 1;
          }
        }
        else
        {
          if (v14) {

          }
          uint64_t v4 = a2;
          char v16 = REMReminder.canAddURL.getter();

          if (v16)
          {
            if (!v15) {
              goto LABEL_29;
            }
            uint64_t v17 = 2;
          }
          else
          {
            if (!v15) {
              goto LABEL_30;
            }
            uint64_t v17 = 1;
          }
        }
        sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
        if ([v13 canLoadObjectOfClass:swift_getObjCClassFromMetadata()]) {
          goto LABEL_4;
        }
        unint64_t v26 = v17;
        uint64_t v19 = v24;
        static UTType.image.getter();
        UTType.identifier.getter();
        (*v23)(v19, v25);
        uint64_t v4 = (uint64_t)String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unsigned __int8 v20 = [v13 hasItemConformingToTypeIdentifier:v4];

        if (v20) {
          goto LABEL_4;
        }
        if (v26 < 2) {
          goto LABEL_30;
        }
LABEL_29:
        sub_1000368FC(0, (unint64_t *)&unk_100791B60);
        if (([v13 canLoadObjectOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
        {
LABEL_30:

          goto LABEL_5;
        }
LABEL_4:

        uint64_t v4 = (uint64_t)&v31;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
LABEL_5:
        ++v10;
        a1 = v27;
        if (v12 == v9) {
          return v31;
        }
      }
      if (v10 < *(void *)(v28 + 16)) {
        break;
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      if (!v9) {
        return _swiftEmptyArrayStorage;
      }
    }
    uint64_t v11 = (char *)*(id *)(a1 + 8 * v10 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1003BE7F4(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v23 = a2;
  uint64_t v22 = type metadata accessor for UTType();
  uint64_t v5 = *(char **)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v21 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_23:
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7)
    {
LABEL_3:
      unint64_t v8 = 0;
      uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
      v18[1] = v3;
      uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v20 = a1 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v11 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
LABEL_20:
            __break(1u);
            return v25;
          }
        }
        else
        {
          if (v8 >= *(void *)(v9 + 16))
          {
            __break(1u);
            goto LABEL_23;
          }
          id v10 = *(id *)(a1 + 8 * v8 + 32);
          unint64_t v11 = v8 + 1;
          if (__OFADD__(v8, 1)) {
            goto LABEL_20;
          }
        }
        id v24 = v10;
        id v12 = [v10 itemProvider];
        id v13 = [v23 account];
        id v14 = [v13 capabilities];

        uint64_t v3 = [v14 supportsAttachments];
        if (v3)
        {
          sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
          if ([v12 canLoadObjectOfClass:swift_getObjCClassFromMetadata()]) {
            goto LABEL_12;
          }
          id v15 = v21;
          static UTType.image.getter();
          UTType.identifier.getter();
          (*v19)(v15, v22);
          NSString v16 = String._bridgeToObjectiveC()();
          uint64_t v9 = v20;
          swift_bridgeObjectRelease();
          uint64_t v3 = [v12 hasItemConformingToTypeIdentifier:v16];

          if (v3) {
            goto LABEL_12;
          }
        }
        sub_1000368FC(0, (unint64_t *)&unk_100791B60);
        if (([v12 canLoadObjectOfClass:swift_getObjCClassFromMetadata()] & 1) != 0
          || (sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0),
              ([v12 canLoadObjectOfClass:swift_getObjCClassFromMetadata()] & 1) != 0))
        {
LABEL_12:
        }
        else
        {
          sub_1000368FC(0, (unint64_t *)&qword_100791B70);
          uint64_t v5 = (char *)[v12 canLoadObjectOfClass:swift_getObjCClassFromMetadata()];

          if ((v5 & 1) == 0)
          {

            goto LABEL_14;
          }
        }
        uint64_t v3 = &v25;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v5 = (char *)v25[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
LABEL_14:
        ++v8;
        if (v11 == v7) {
          return v25;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void sub_1003BEB80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v30 = a5;
  uint64_t v34 = a4;
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_10079C9D0);
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  __chkstk_darwin(v8);
  uint64_t v35 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v36 = (uint64_t *)((char *)&v26 - v11);
  __chkstk_darwin(v12);
  uint64_t v27 = (uint64_t)&v26 - v13;
  if (a1 != a2)
  {
    if (a2 >= (uint64_t)a1)
    {
      unint64_t v33 = v34 & 0xC000000000000001;
      id v14 = _swiftEmptyArrayStorage;
      uint64_t v26 = v34 & 0xFFFFFFFFFFFFFF8;
      uint64_t v15 = *(void *)(a3 + 16);
      uint64_t v31 = a2;
      uint64_t v32 = v15;
      while ((uint64_t)a1 < a2)
      {
        if (v33)
        {
          id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((a1 & 0x8000000000000000) != 0) {
            goto LABEL_23;
          }
          if (a1 >= *(void *)(v26 + 16)) {
            goto LABEL_24;
          }
          id v16 = *(id *)(v34 + 8 * a1 + 32);
        }
        uint64_t v17 = v16;
        uint64_t v37 = v32;
        __chkstk_darwin(v32);
        *(&v26 - 2) = (uint64_t)v17;
        swift_bridgeObjectRetain();
        sub_10003B754(&qword_10079D598);
        sub_1000368FC(0, (unint64_t *)&qword_100791B50);
        sub_100037EA0(&qword_10079D5A0, &qword_10079D598);
        Sequence.firstMap<A>(_:)();

        swift_bridgeObjectRelease();
        if (v38)
        {
          uint64_t v18 = v30;
          uint64_t v19 = *(int *)(v29 + 48);
          *uint64_t v36 = v38;
          if ((a1 & 0x8000000000000000) != 0) {
            goto LABEL_21;
          }
          if (a1 >= *(void *)(v18 + 16)) {
            goto LABEL_22;
          }
          uint64_t v20 = (uint64_t)v36;
          uint64_t v21 = (uint64_t)v36 + v19;
          uint64_t v22 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
          sub_1003BE0BC(v18+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * a1, v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v23 = v27;
          sub_100028C3C(v20, v27, (uint64_t *)&unk_10079C9D0);
          sub_100028C3C(v23, v35, (uint64_t *)&unk_10079C9D0);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v14 = (void *)sub_1005704EC(0, v14[2] + 1, 1, (unint64_t)v14);
          }
          unint64_t v25 = v14[2];
          unint64_t v24 = v14[3];
          if (v25 >= v24 >> 1) {
            id v14 = (void *)sub_1005704EC(v24 > 1, v25 + 1, 1, (unint64_t)v14);
          }
          v14[2] = v25 + 1;
          sub_100028C3C(v35, (uint64_t)v14+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v25, (uint64_t *)&unk_10079C9D0);
        }
        a2 = v31;
        if (v31 == ++a1) {
          return;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
    }
    __break(1u);
  }
}

void *sub_1003BEF8C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (*result == *(void *)(v2 + 16))
  {
    uint64_t v4 = (void *)result[1];
    uint64_t result = v4;
  }
  else
  {
    uint64_t v4 = 0;
  }
  *a2 = v4;
  return result;
}

uint64_t sub_1003BEFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078FAC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BF048(void **a1)
{
  return sub_1003BC400(a1, *(void **)(v1 + 16)) & 1;
}

void *sub_1003BF068(void *a1)
{
  return sub_1003BD7E4(a1);
}

uint64_t sub_1003BF084()
{
  sub_100038CD8(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003BF0BC(uint64_t a1)
{
  return sub_1000AA638(a1, (void *)(v1 + 16));
}

uint64_t sub_1003BF0D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListMatchedAttributeValue(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  sub_100038CD8(v0 + 16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v6 = type metadata accessor for REMHashtagLabelSpecifier();
LABEL_6:
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_8;
    }
    uint64_t v6 = type metadata accessor for DateComponents();
    goto LABEL_6;
  }

LABEL_8:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1003BF1F8(void **a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListMatchedAttributeValue(0) - 8);
  return sub_1000A9D9C(a1, (void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1003BF268()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003BF2A0(uint64_t a1)
{
  return sub_1000AA458(a1, *(void **)(v1 + 16));
}

uint64_t sub_1003BF2A8()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1003BF8B4(void **a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1000A8CE0(a1, v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v5 + 8));
}

void sub_1003BF954(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_1000A9040(a1, v4);
}

uint64_t sub_1003BF9C4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003BF9FC(uint64_t a1)
{
  return sub_1000A92D8(a1, *(void *)(v1 + 16));
}

void *sub_1003BFA18(void *a1, char a2)
{
  return sub_1003BD384(a1, a2 & 1);
}

uint64_t sub_1003BFA24@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1003B9144(*a1, *(void (**)(uint64_t *, uint64_t, uint64_t, double))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void *)(v2 + 48));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1003BFA70()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1003C006C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  return sub_1000A9804(a1, *(void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1003C00F0()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1003C06E0(void **a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  return sub_1000A93B0(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1003C074C(void **a1)
{
  return sub_1003BF048(a1) & 1;
}

uint64_t sub_1003C0780(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_100366F24(v3);
    *uint64_t v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      specialized Array._endMutation()();
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003C086C(unint64_t a1)
{
  return sub_1003C0A80(a1, (uint64_t (*)(uint64_t))sub_100366F28);
}

uint64_t sub_1003C0884(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_100366F64((uint64_t)v3);
  }
  unint64_t v4 = *((void *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[16 * a1];
      uint64_t v8 = *((void *)v7 + 4);
      memmove(v7 + 32, v7 + 48, 16 * v6);
      *((void *)v3 + 2) = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003C0964(unint64_t a1)
{
  return sub_1003C097C(a1, sub_100366F24);
}

uint64_t sub_1003C097C(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    uint64_t v5 = a2(v5);
    *uint64_t v2 = v5;
  }
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      uint64_t v11 = v7 + 8 * a1;
      uint64_t v12 = *(void *)(v11 + 32);
      memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(void *)(v7 + 16) = v9;
      specialized Array._endMutation()();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003C0A68(unint64_t a1)
{
  return sub_1003C0A80(a1, (uint64_t (*)(uint64_t))sub_100366FA0);
}

uint64_t sub_1003C0A80(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = a2(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 16 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 48), 16 * v8);
      *(void *)(v5 + 16) = v7;
      *uint64_t v2 = v5;
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003C0B68@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_100367058(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1003C0CC4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079D5D0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079D5D0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003C0D8C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_isMarkedForDeletion) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalvoid (*v73)(id *, id) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_doNotSave) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList) = 0;
  uint64_t v5 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_sharedProperties;
  *(void *)(v2 + v5) = TTRRemindersListEditingSessionProperties.init()();
  uint64_t v6 = v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext;
  uint64_t v7 = type metadata accessor for TTRRemindersListUndoContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames) = _swiftEmptyArrayStorage;
  sub_1003CA0CC(a1, v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(void *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem) = a2;
  return v2;
}

uint64_t sub_1003C0EB4()
{
  sub_100034684(v0 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_release();

  swift_bridgeObjectRelease();
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext, &qword_100787168);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1003C0F94()
{
  return type metadata accessor for TTRRemindersListEditingSessionState(0);
}

uint64_t type metadata accessor for TTRRemindersListEditingSessionState(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_10079D628);
}

void sub_1003C0FBC()
{
  type metadata accessor for TTRRemindersListViewModel.Item();
  if (v0 <= 0x3F)
  {
    sub_1003C10C4();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1003C10C4()
{
  if (!qword_10079D638)
  {
    type metadata accessor for TTRRemindersListUndoContext();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10079D638);
    }
  }
}

uint64_t sub_1003C111C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066D1F0;
  unint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  unint64_t v43 = 0xD000000000000011;
  unint64_t v44 = 0x80000001006B9190;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    uint64_t v7 = (void *)0xE500000000000000;
    uint64_t v8 = 0x65736C6166;
    uint64_t v9 = 0x65736C6166;
    if (EnumCaseMultiPayload) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v7 = (void *)0xE400000000000000;
    uint64_t v8 = 1702195828;
  }
  sub_100034684((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  uint64_t v9 = v8;
LABEL_5:
  v10._uint64_t countAndFlagsBits = v9;
  v10._object = v7;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  unint64_t v11 = v44;
  *(void *)(v5 + 32) = v43;
  *(void *)(v5 + 40) = v11;
  unint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  v12._uint64_t countAndFlagsBits = 0x7461745365766173;
  v12._object = (void *)0xEA00000000003D65;
  String.append(_:)(v12);
  LOBYTE(v45[0]) = *(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState);
  _print_unlocked<A, B>(_:_:)();
  unint64_t v13 = v44;
  *(void *)(v5 + 48) = v43;
  *(void *)(v5 + 56) = v13;
  unint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  int v14 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_isMarkedForDeletion);
  unint64_t v43 = 0xD000000000000014;
  unint64_t v44 = 0x80000001006B91B0;
  if (v14) {
    uint64_t v15 = 1702195828;
  }
  else {
    uint64_t v15 = 0x65736C6166;
  }
  if (v14) {
    unint64_t v16 = 0xE400000000000000;
  }
  else {
    unint64_t v16 = 0xE500000000000000;
  }
  unint64_t v17 = v16;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease();
  unint64_t v18 = v44;
  *(void *)(v5 + 64) = v43;
  *(void *)(v5 + 72) = v18;
  unint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  unint64_t v43 = 0xD000000000000018;
  unint64_t v44 = 0x80000001006B91D0;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalid)) {
    uint64_t v19 = 1702195828;
  }
  else {
    uint64_t v19 = 0x65736C6166;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalid)) {
    unint64_t v20 = 0xE400000000000000;
  }
  else {
    unint64_t v20 = 0xE500000000000000;
  }
  unint64_t v21 = v20;
  String.append(_:)(*(Swift::String *)&v19);
  swift_bridgeObjectRelease();
  unint64_t v22 = v44;
  *(void *)(v5 + 80) = v43;
  *(void *)(v5 + 88) = v22;
  unint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v45, "acquirerNames=");
  HIBYTE(v45[1]) = -18;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v23._uint64_t countAndFlagsBits = Array.description.getter();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v45[1];
  *(void *)(v5 + 96) = v45[0];
  *(void *)(v5 + 104) = v24;
  v45[0] = 0;
  v45[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v45[0] = 0xD000000000000013;
  v45[1] = 0x80000001006B91F0;
  id v25 = [*(id *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem) objectID];
  id v26 = [v25 description];
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  v30._uint64_t countAndFlagsBits = v27;
  v30._object = v29;
  String.append(_:)(v30);

  swift_bridgeObjectRelease();
  uint64_t v31 = v45[1];
  *(void *)(v5 + 112) = v45[0];
  *(void *)(v5 + 120) = v31;
  v45[0] = 0;
  v45[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v45[0] = 0xD000000000000016;
  v45[1] = 0x80000001006B9210;
  uint64_t v32 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
  if (v32)
  {
    id v33 = [v32 objectID];
    id v34 = [v33 description];

    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;
  }
  else
  {
    uint64_t v37 = (void *)0xE300000000000000;
    uint64_t v35 = 7104878;
  }
  v38._uint64_t countAndFlagsBits = v35;
  v38._object = v37;
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = v45[1];
  *(void *)(v5 + 128) = v45[0];
  *(void *)(v5 + 136) = v39;
  v45[0] = v5;
  sub_10003B754(&qword_10078E670);
  sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
  uint64_t v40 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_1003C1628()
{
  return sub_1003C111C();
}

uint64_t sub_1003C164C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_10003B754(&qword_100787168);
  __chkstk_darwin(v10 - 8);
  Swift::String v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  *(void *)(v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) = 0;
  unint64_t v13 = (void *)(v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
  void *v13 = a1;
  v13[1] = a2;
  *(void *)(v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState) = a3;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) = a4;
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10066D470;
  uint64_t v15 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  *(void *)(v14 + 32) = v15;
  *(void *)&long long v26 = v14;
  specialized Array._endMutation()();
  uint64_t v16 = a3 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext;
  swift_beginAccess();
  sub_1003C9E94(v16, (uint64_t)v12);
  uint64_t v17 = type metadata accessor for TTRRemindersListUndoContext();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v12, 1, v17) == 1)
  {
    swift_retain();
    id v18 = v15;
    sub_10003B6F8((uint64_t)v12, &qword_100787168);
    long long v26 = 0u;
    long long v27 = 0u;
    uint64_t v28 = 0;
  }
  else
  {
    *((void *)&v27 + 1) = v17;
    uint64_t v28 = &protocol witness table for TTRRemindersListUndoContext;
    uint64_t v19 = sub_1000394A8((uint64_t *)&v26);
    sub_1003CA0CC((uint64_t)v12, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListUndoContext);
    swift_retain();
    id v20 = v15;
  }
  uint64_t v21 = type metadata accessor for TTRRemindersListChangeItemAttributeEditorProvider();
  swift_allocObject();
  uint64_t v22 = TTRRemindersListChangeItemAttributeEditorProvider.init(reminderChangeItems:undoContext:)();
  *((void *)&v27 + 1) = v21;
  uint64_t v28 = &protocol witness table for TTRRemindersListChangeItemAttributeEditorProvider;
  *(void *)&long long v26 = v22;
  type metadata accessor for TTRRemindersListAttributeEditor();
  swift_allocObject();
  swift_retain();
  uint64_t v23 = TTRRemindersListAttributeEditor.init(editorProvider:)();
  swift_release();
  swift_release();
  *(void *)(v5
            + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_internalAttributeEditor) = v23;
  return v5;
}

uint64_t sub_1003C18E8()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) & 1) == 0
    && (*(unsigned char *)(v0
                 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) & 1) != 0)
  {
    sub_1003C213C(0);
  }
  uint64_t v1 = v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000499D4(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1003C19F4()
{
  return type metadata accessor for EditingSessionImp(0);
}

uint64_t type metadata accessor for EditingSessionImp(uint64_t a1)
{
  return sub_100030FD4(a1, qword_10079D770);
}

uint64_t sub_1003C1A1C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1003C1ADC(void *a1)
{
  uint64_t v2 = v1;
  id v46 = a1;
  uint64_t v45 = type metadata accessor for TTRRemindersListUndoContext();
  uint64_t v3 = *(void *)(v45 - 8);
  __chkstk_darwin(v46);
  uint64_t v44 = (uint64_t)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  uint64_t v6 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList;
  id v7 = *(id *)(v5 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
  uint64_t v8 = &selRef_setAxis_;
  if (v9)
  {
    id v10 = v7;
    id v11 = [v46 objectID];
    Swift::String v12 = v11;
    if (!v7)
    {
      if (!v11) {
        goto LABEL_16;
      }
      goto LABEL_11;
    }
  }
  else
  {
    id v10 = v7;
    if (!v7) {
      goto LABEL_16;
    }
    Swift::String v12 = 0;
  }
  id v13 = [v10 objectID];
  uint64_t v14 = v13;
  if (!v12)
  {
    if (v13) {
      goto LABEL_13;
    }
LABEL_16:

    id v33 = v46;

    return;
  }
  if (!v13)
  {
LABEL_11:
    uint64_t v14 = v12;
LABEL_13:

    goto LABEL_14;
  }
  sub_1000368FC(0, qword_10078E3D0);
  uint64_t v15 = v3;
  id v16 = v7;
  uint64_t v17 = v2;
  id v18 = v12;
  uint64_t v8 = &selRef_setAxis_;
  char v19 = static NSObject.== infix(_:_:)();

  uint64_t v2 = v17;
  id v7 = v16;
  uint64_t v3 = v15;

  if (v19) {
    goto LABEL_16;
  }
LABEL_14:
  id v20 = *(void **)(v5 + v6);
  id v21 = v46;
  *(void *)(v5 + v6) = v46;
  id v22 = v21;

  type metadata accessor for EditingSessionImp(0);
  TTRRemindersListEditingSession.reminderAndList.getter();
  TTRReminderProtocolWithPendingMove.effectiveParentList.getter();
  sub_1003CB334((uint64_t)v47);
  uint64_t v23 = &unk_1007BB000;
  if (v51)
  {
    sub_100038ED8(&v50, (uint64_t)v47);
    id v46 = v7;
    v43[1] = v2;
    uint64_t v24 = *(void **)(v5 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
    uint64_t v26 = v48;
    uint64_t v25 = v49;
    sub_100038D28(v47, v48);
    id v27 = v22;
    uint64_t v28 = v3;
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 64);
    id v30 = v24;
    uint64_t v31 = v29(v26, v25);
    uint64_t v3 = v28;
    id v22 = v27;
    uint64_t v32 = (void *)v31;
    [v30 updateAccountCapabilities:v31];

    id v7 = v46;
    uint64_t v23 = (void *)&unk_1007BB000;
    sub_100038CD8((uint64_t)v47);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v50, &qword_100787480);
  }
  id v34 = *(id *)(v5 + v23[372]);
  id v35 = [v34 v8[30]];
  uint64_t v48 = sub_1000368FC(0, qword_10078E3D0);
  v47[0] = v35;
  uint64_t v36 = sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
  uint64_t v51 = sub_10003B754(&qword_10079D9B0);
  *(void *)&long long v50 = v36;
  TTRUndoNavigationEditingTarget.init(id:itemType:)();

  uint64_t v37 = v5 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v37, 1, v45))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = v37;
    uint64_t v39 = v44;
    sub_1003CB388(v38, v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListUndoContext);
    uint64_t v40 = swift_allocObject();
    swift_weakInit();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v40;
    *(void *)(v41 + 24) = v7;
    id v42 = v7;
    swift_retain();
    TTRUndoContext.registerUndo(forEditing:action:)();

    swift_bridgeObjectRelease();
    swift_release();
    sub_100034684(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListUndoContext);
    swift_release();
  }
}

uint64_t sub_1003C1F90(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v5 = a3;
    sub_1003C1ADC(a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1003C2008@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) == 1)
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100018BF8(v4, (uint64_t)qword_10079D5D0);
    id v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "attributeEditor called after -[TTRRemindersListEditingSession finish] is called", v7, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v8 = *(void *)(v2
                 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_internalAttributeEditor);
  a1[3] = type metadata accessor for TTRRemindersListAttributeEditor();
  a1[4] = &protocol witness table for TTRRemindersListAttributeEditor;
  *a1 = v8;

  return swift_retain();
}

void sub_1003C213C(uint64_t a1)
{
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1)
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100018BF8(v6, (uint64_t)qword_10079D5D0);
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(oslog, v3)) {
      goto LABEL_12;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    id v5 = "Calling finish on this editing session is not allowed";
    goto LABEL_11;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled))
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100018BF8(v2, (uint64_t)qword_10079D5D0);
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(oslog, v3)) {
      goto LABEL_12;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    id v5 = "-[TTRRemindersListEditingSession finish] called twice";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, v5, v4, 2u);
    swift_slowDealloc();
LABEL_12:

    return;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) = 1;
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1003C568C(v1, a1);
    swift_unknownObjectRelease();
  }
}

void *sub_1003C2350()
{
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1)
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_10079D5D0);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_12;
    }
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    uint64_t v6 = "Calling finish on this editing session is not allowed";
    goto LABEL_11;
  }
  uint64_t v1 = OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled))
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100018BF8(v2, (uint64_t)qword_10079D5D0);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_12;
    }
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    uint64_t v6 = "-[TTRRemindersListEditingSession finishAndForceSave] called after calling finish";
    goto LABEL_11;
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    *(unsigned char *)(v0 + v1) = 1;
    uint64_t v8 = sub_1003C60C4(v0);
    swift_unknownObjectRelease();
    return v8;
  }
  if (qword_100785548 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100018BF8(v10, (uint64_t)qword_10079D5D0);
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    uint64_t v6 = "-[TTRRemindersListEditingSession finishAndForceSave] missing delegate";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v3, v4, v6, v5, 2u);
    swift_slowDealloc();
  }
LABEL_12:

  return 0;
}

uint64_t sub_1003C25BC()
{
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1)
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_10079D5D0);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_12;
    }
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    uint64_t v6 = "Calling finish on this editing session is not allowed";
    goto LABEL_11;
  }
  uint64_t v1 = OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled))
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100018BF8(v2, (uint64_t)qword_10079D5D0);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_12;
    }
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    uint64_t v6 = "-[TTRRemindersListEditingSession finishAndForceSave] called after calling finish";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v3, v4, v6, v5, 2u);
    swift_slowDealloc();
LABEL_12:

    return 0;
  }
  if (!swift_unknownObjectWeakLoadStrong())
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_10079D5D0);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_12;
    }
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    uint64_t v6 = "-[TTRRemindersListEditingSession finishAndForceSave] missing delegate";
    goto LABEL_11;
  }
  *(unsigned char *)(v0 + v1) = 1;
  char v9 = sub_1003C6814(v0);
  swift_unknownObjectRelease();
  return v9 & 1;
}

uint64_t sub_1003C2834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_id;
  uint64_t v4 = type metadata accessor for UUID();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1003C28A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1003CB388(*(void *)(v1+ OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)+ OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1003C28F0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1003C292C@<X0>(void *a1@<X8>)
{
  id v4 = *(id *)(*(void *)(v1
                         + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
             + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  a1[3] = sub_1000368FC(0, &qword_100791DA8);
  a1[4] = &protocol witness table for REMReminderChangeItem;
  *a1 = v4;

  return v4;
}

id sub_1003C29AC()
{
  return objc_retain(*(id *)(*(void *)(v0
                                       + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
                           + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem));
}

void *sub_1003C29C8()
{
  uint64_t v1 = *(void **)(*(void *)(v0
                            + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
                + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
  id v2 = v1;
  return v1;
}

void (*sub_1003C2A08(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  id v2 = *(void **)(*(void *)(v1
                            + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
                + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
  *a1 = v2;
  id v3 = v2;
  return sub_1003C2A6C;
}

void sub_1003C2A6C(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    sub_1003C1ADC(v2);
  }
  else
  {
    sub_1003C1ADC(*a1);
  }
}

uint64_t sub_1003C2AD8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003C2AF4(uint64_t a1)
{
  *(void *)(*(void *)(v1
                        + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
            + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_sharedProperties) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1003C2B18(void *a1))(void *a1)
{
  uint64_t v2 = *(void *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  uint64_t v3 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_sharedProperties;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = *(void *)(v2 + v3);
  swift_bridgeObjectRetain();
  return sub_1003C2B7C;
}

uint64_t sub_1003C2B7C(void *a1)
{
  *(void *)(a1[1] + a1[2]) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003C2B90(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1003C5D48(v1, a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1003C2C08()
{
  return sub_1003C2350();
}

uint64_t sub_1003C2C24()
{
  return sub_1003C25BC() & 1;
}

uint64_t sub_1003C2C40(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v7);
  char v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v10 - 8);
  uint64_t v72 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for REMFeatureFlags();
  uint64_t v15 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10003B754(&qword_100787168);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v75 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v22 = (char *)&v65 - v21;
  uint64_t v71 = a1;
  uint64_t v77 = v3;
  uint64_t v23 = sub_1003C34E0(a1, a2, a3);
  if (!v23) {
    return 0;
  }
  uint64_t v25 = v23;
  uint64_t v69 = v7;
  uint64_t v70 = v9;
  uint64_t v73 = (uint64_t)a2;
  if (v24)
  {
    swift_beginAccess();
    swift_retain();
    unint64_t v26 = swift_bridgeObjectRetain();
    unint64_t v74 = sub_100091EEC(v26, v25);
    char v28 = v27;
    swift_bridgeObjectRelease();
    swift_release();
    if ((v28 & 1) == 0)
    {
      if (qword_100785548 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_100018BF8(v29, (uint64_t)qword_10079D5D0);
      id v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Reminder Editing Session: Removing editing session from needsSave pool", v32, 2u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      sub_1003C097C(v74, sub_100366F24);
      swift_endAccess();
      swift_release();
    }
  }
  unint64_t v74 = a3;
  uint64_t v33 = v25 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext;
  swift_beginAccess();
  sub_1003C9E94(v33, (uint64_t)v22);
  uint64_t v34 = type metadata accessor for TTRRemindersListUndoContext();
  uint64_t v35 = *(void *)(v34 - 8);
  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v22, 1, v34);
  sub_10003B6F8((uint64_t)v22, &qword_100787168);
  uint64_t v37 = enum case for REMFeatureFlags.undoByAttribute(_:);
  uint64_t v38 = *(void (**)(void))(v15 + 104);
  if (v36 == 1)
  {
    unsigned int v67 = enum case for REMFeatureFlags.undoByAttribute(_:);
    uint64_t v39 = v76;
    int v66 = v38;
    v38(v17);
    char v40 = REMFeatureFlags.isEnabled.getter();
    uint64_t v68 = v15;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v39);
    if (v40)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      uint64_t v42 = (uint64_t)v75;
      if (Strong)
      {
        uint64_t v43 = Strong;
        uint64_t v44 = swift_unknownObjectWeakLoadStrong();
        uint64_t v15 = v68;
        if (v44)
        {
          uint64_t v45 = *(void *)(v43 + 24);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v45 + 48))(v43, &off_10074F848, ObjectType, v45);
          swift_unknownObjectRelease();
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v42, 1, 1, v34);
        }
        swift_unknownObjectRelease();
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v75, 1, 1, v34);
    }
    else
    {
      unint64_t v78 = 0;
      unint64_t v79 = 0xE000000000000000;
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease();
      unint64_t v78 = 0xD00000000000001FLL;
      unint64_t v79 = 0x80000001006B9170;
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      v48._uint64_t countAndFlagsBits = TTRRemindersListViewModel.ItemID.description.getter();
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
      sub_100034684((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      id v49 = objc_allocWithZone((Class)TTRUndoManager);
      NSString v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v49 initWithDebugIdentifier:v50];

      uint64_t v51 = type metadata accessor for TTRListType();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v72, 1, 1, v51);
      uint64_t v42 = (uint64_t)v75;
      TTRRemindersListUndoContext.init(undoManager:listType:)();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v42, 0, 1, v34);
    }
    uint64_t v15 = v68;
LABEL_19:
    swift_beginAccess();
    sub_1003C9EFC(v42, v33);
    swift_endAccess();
    uint64_t v37 = v67;
    uint64_t v38 = v66;
  }
  uint64_t v52 = v76;
  ((void (*)(char *, uint64_t, uint64_t))v38)(v17, v37, v76);
  char v53 = REMFeatureFlags.isEnabled.getter();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v52);
  uint64_t v54 = v74;
  if (v53)
  {
    uint64_t v55 = (uint64_t)v70;
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload) {
        sub_100034684((uint64_t)v70, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      }
    }
    else
    {
      sub_100034684(v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      sub_1003C47BC(v25);
    }
  }
  uint64_t v57 = (char **)(v25 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames);
  swift_beginAccess();
  NSString v58 = *v57;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v57 = v58;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    NSString v58 = sub_100022F98(0, *((void *)v58 + 2) + 1, 1, v58);
    *uint64_t v57 = v58;
  }
  unint64_t v61 = *((void *)v58 + 2);
  unint64_t v60 = *((void *)v58 + 3);
  if (v61 >= v60 >> 1)
  {
    NSString v58 = sub_100022F98((char *)(v60 > 1), v61 + 1, 1, v58);
    *uint64_t v57 = v58;
  }
  *((void *)v58 + 2) = v61 + 1;
  BOOL v62 = &v58[16 * v61];
  uint64_t v63 = v73;
  *((void *)v62 + 4) = v73;
  *((void *)v62 + 5) = v54;
  swift_endAccess();
  type metadata accessor for EditingSessionImp(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_1003C164C(v63, v54, v25, 1);
  *(void *)(v47 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate + 8) = &off_1007494E8;
  swift_unknownObjectWeakAssign();
  return v47;
}

uint64_t sub_1003C34E0(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v128 = a3;
  id v124 = a2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v121 = (id *)((char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  Swift::Int v123 = (char **)((char *)&v115 - v9);
  uint64_t v122 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v122);
  uint64_t v11 = (id *)((char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v125 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v120 = *(void *)(v125 - 8);
  uint64_t v12 = __chkstk_darwin(v125);
  uint64_t v14 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v115 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v115 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v115 - v22;
  __chkstk_darwin(v21);
  uint64_t v126 = (uint64_t)&v115 - v24;
  uint64_t v25 = *(void *)(v3 + 48);
  uint64_t v26 = *(void *)(v4 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v127 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 464))(a1, ObjectType, v26);
  if (v127)
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_100018BF8(v28, (uint64_t)qword_10079D5D0);
    uint64_t v29 = a1;
    uint64_t v30 = v126;
    sub_1003CB388(v29, v126, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    unint64_t v31 = v128;
    swift_bridgeObjectRetain_n();
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v130 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v129 = sub_1000385A8((uint64_t)v124, v31, &v130);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 12) = 2080;
      sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v35 = TTRTreeStorageItem.treeItemDescription.getter();
      uint64_t v129 = sub_1000385A8(v35, v36, &v130);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100034684(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Reminder Editing Session: Reusing existing session {acquirer: %s, item: %s}", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100034684(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }

    return v127;
  }
  uint64_t v115 = v23;
  uint64_t v116 = v14;
  uint64_t v37 = v123;
  unint64_t v117 = v17;
  uint64_t v118 = v4;
  uint64_t v126 = v26;
  uint64_t v119 = v25;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v39 = v11;
  unint64_t v40 = v128;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      if (qword_100785548 != -1) {
        swift_once();
      }
      uint64_t v50 = type metadata accessor for Logger();
      sub_100018BF8(v50, (uint64_t)qword_10079D5D0);
      uint64_t v51 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v51, v52))
      {
        char v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Reminder Editing Session: A session should always be available for uncommittedReminder", v53, 2u);
        swift_slowDealloc();
      }

      uint64_t v54 = &type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem;
      goto LABEL_44;
    case 2:
      uint64_t v39 = v121;
      sub_1003CA0CC((uint64_t)v11, (uint64_t)v121, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      if (qword_100785548 != -1) {
        swift_once();
      }
      uint64_t v55 = type metadata accessor for Logger();
      uint64_t v56 = sub_100018BF8(v55, (uint64_t)qword_10079D5D0);
      uint64_t v122 = a1;
      uint64_t v57 = (uint64_t)v116;
      sub_1003CB388(a1, (uint64_t)v116, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRetain_n();
      Swift::Int v123 = (void *)v56;
      NSString v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        uint64_t v130 = swift_slowAlloc();
        *(_DWORD *)uint64_t v60 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v129 = sub_1000385A8((uint64_t)v124, v40, &v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v60 + 12) = 2080;
        sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v61 = TTRTreeStorageItem.treeItemDescription.getter();
        uint64_t v129 = sub_1000385A8(v61, v62, &v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100034684(v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Reminder Editing Session: Creating a session for placeholderReminder {acquirer: %s, item: %s}", (uint8_t *)v60, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v39 = v121;
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_100034684(v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }

      uint64_t v83 = ObjectType;
      uint64_t v84 = v126;
      uint64_t v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 344))(v122, v83, v126);
      if ((_BYTE)v86 == 0xFF)
      {
        long long v106 = Logger.logObject.getter();
        os_log_type_t v107 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v106, v107))
        {
          long long v108 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v108 = 0;
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "Reminder Editing Session: Cannot create a session for placeholderReminder, no target list.", v108, 2u);
          swift_slowDealloc();
        }

        uint64_t v54 = &type metadata accessor for TTRRemindersListViewModel.ReminderID;
LABEL_44:
        uint64_t v104 = v54;
        uint64_t v105 = (uint64_t)v39;
      }
      else
      {
        uint64_t v87 = (void *)v85;
        unint64_t v88 = v86;
        swift_getObjectType();
        id v124 = *v39;
        unint64_t v128 = v88;
        uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v84 + 432);
        id v90 = v87;
        uint64_t v116 = (char *)v83;
        v89(v83, v84);
        uint64_t v91 = (void *)TTRRemindersListInteractorType.newReminderChangeItem(objectID:title:targetContainer:position:remindersBeingSaved:)();
        swift_bridgeObjectRelease();
        sub_100095434(v87, v88);
        if (v91)
        {
          uint64_t v92 = v122;
          uint64_t v93 = (uint64_t)v117;
          sub_1003CB388(v122, (uint64_t)v117, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          type metadata accessor for TTRRemindersListEditingSessionState(0);
          uint64_t v49 = swift_allocObject();
          sub_1003C0D8C(v93, (uint64_t)v91);
          uint64_t v94 = *(void (**)(uint64_t, uint64_t, char *, uint64_t))(v84 + 456);
          id v95 = v91;
          id v124 = v87;
          unint64_t v128 = v88;
          uint64_t v96 = (uint64_t)v116;
          v94(v49, v92, v116, v84);
          type metadata accessor for TTRReminderEditor();
          sub_1003CA084((unint64_t *)&qword_100791DA0, (void (*)(uint64_t))&type metadata accessor for TTRReminderEditor);
          id v97 = v95;
          swift_retain();
          TTRUndoableEditing.init(changeItem:undoManager:)();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 448))(v92, v130, v96, v84);
          sub_100095434(v124, v128);
          swift_release();
          swift_release();

          sub_100034684((uint64_t)v121, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          if (!swift_unknownObjectWeakLoadStrong()) {
            return v49;
          }
          uint64_t v98 = *(void *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor();
          uint64_t v99 = *(void *)TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
          if (v98)
          {
            uint64_t v100 = v120;
            if ((v99 & ~v98) == 0) {
              goto LABEL_55;
            }
          }
          else
          {
            uint64_t v100 = v120;
            if (!v99)
            {
              uint64_t v98 = 0;
              goto LABEL_55;
            }
          }
          v98 |= v99;
LABEL_55:
          sub_10003B754((uint64_t *)&unk_10078E960);
          unint64_t v113 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
          uint64_t v114 = swift_allocObject();
          *(_OWORD *)(v114 + 16) = xmmword_10066C6F0;
          sub_1003CB388(v122, v114 + v113, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_100528ABC(v98, v114);
          swift_unknownObjectRelease();
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          return v49;
        }
        uint64_t v110 = Logger.logObject.getter();
        os_log_type_t v111 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v110, v111))
        {
          unint64_t v112 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v112 = 0;
          _os_log_impl((void *)&_mh_execute_header, v110, v111, "Reminder Editing Session: failed to create REMReminderChangeItem for placeholderReminder", v112, 2u);
          swift_slowDealloc();

          sub_100095434(v87, v88);
        }
        else
        {
          sub_100095434(v87, v88);
        }
        uint64_t v105 = (uint64_t)v121;
        uint64_t v104 = &type metadata accessor for TTRRemindersListViewModel.ReminderID;
      }
LABEL_45:
      sub_100034684(v105, (uint64_t (*)(void))v104);
      return 0;
    case 3:
      if (qword_100785548 != -1) {
        swift_once();
      }
      uint64_t v63 = type metadata accessor for Logger();
      sub_100018BF8(v63, (uint64_t)qword_10079D5D0);
      uint64_t v64 = (uint64_t)v115;
      sub_1003CB388(a1, (uint64_t)v115, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRetain_n();
      uint64_t v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = swift_slowAlloc();
        uint64_t v130 = swift_slowAlloc();
        *(_DWORD *)uint64_t v67 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v129 = sub_1000385A8((uint64_t)v124, v40, &v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v67 + 12) = 2080;
        sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v68 = TTRTreeStorageItem.treeItemDescription.getter();
        uint64_t v129 = sub_1000385A8(v68, v69, &v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100034684(v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "Reminder Editing Session: Attempting to create a session for invalid item {acquirer: %s, item: %s}", (uint8_t *)v67, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_100034684(v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }

      return 0;
    default:
      sub_1003CA0CC((uint64_t)v11, (uint64_t)v37, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      if (qword_100785548 != -1) {
        swift_once();
      }
      uint64_t v41 = type metadata accessor for Logger();
      uint64_t v42 = sub_100018BF8(v41, (uint64_t)qword_10079D5D0);
      uint64_t v122 = a1;
      sub_1003CB388(a1, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRetain_n();
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v121 = (id *)v42;
        uint64_t v46 = v45;
        uint64_t v130 = swift_slowAlloc();
        *(_DWORD *)uint64_t v46 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v129 = sub_1000385A8((uint64_t)v124, v40, &v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v46 + 12) = 2080;
        sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v47 = TTRTreeStorageItem.treeItemDescription.getter();
        uint64_t v129 = sub_1000385A8(v47, v48, &v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100034684((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Reminder Editing Session: Creating a session for existing reminder {acquirer: %s, item: %s}", (uint8_t *)v46, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_100034684((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }

      uint64_t v70 = (uint64_t)v117;
      uint64_t v71 = v37;
      uint64_t v72 = *v37;
      uint64_t v73 = ObjectType;
      uint64_t v74 = v126;
      uint64_t v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 240))(v72, v73, v126);
      if (v75)
      {
        uint64_t v76 = (void *)v75;
        uint64_t v77 = *(void *)(v118 + 40);
        uint64_t v78 = swift_getObjectType();
        unint64_t v79 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v77 + 160))(v76, v78, v77);
        uint64_t v80 = v122;
        sub_1003CB388(v122, v70, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        type metadata accessor for TTRRemindersListEditingSessionState(0);
        uint64_t v49 = swift_allocObject();
        sub_1003C0D8C(v70, (uint64_t)v79);
        uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 456);
        id v82 = v79;
        v81(v49, v80, v73, v74);

        sub_100034684((uint64_t)v123, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        return v49;
      }
      uint64_t v101 = Logger.logObject.getter();
      os_log_type_t v102 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v101, v102))
      {
        uint64_t v103 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v103 = 0;
        _os_log_impl((void *)&_mh_execute_header, v101, v102, "Reminder Editing Session: Failed to create session; no REMReminder",
          v103,
          2u);
        swift_slowDealloc();
      }

      uint64_t v104 = &type metadata accessor for TTRRemindersListViewModel.ReminderID;
      uint64_t v105 = (uint64_t)v71;
      goto LABEL_45;
  }
}

void sub_1003C47BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10079D990);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_100787168);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    uint64_t v20 = type metadata accessor for TTRRemindersListUndoContext();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 1, 1, v20);
LABEL_7:
    sub_10003B6F8((uint64_t)v12, &qword_100787168);
    return;
  }
  uint64_t v14 = Strong;
  uint64_t v34 = v3;
  uint64_t v35 = v7;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v15 = a1;
    uint64_t v16 = *(void *)(v14 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v18 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v16 + 48);
    uint64_t v19 = v16;
    a1 = v15;
    v18(v14, &off_10074F848, ObjectType, v19);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v21 = type metadata accessor for TTRRemindersListUndoContext();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 1, 1, v21);
  }
  swift_unknownObjectRelease();
  uint64_t v22 = type metadata accessor for TTRRemindersListUndoContext();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v12, 1, v22) == 1) {
    goto LABEL_7;
  }
  uint64_t v23 = (void *)TTRRemindersListUndoContext.undoManager.getter();
  sub_100034684((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListUndoContext);
  uint64_t v24 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation;
  if (*(void *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation))
  {
  }
  else
  {
    id v25 = [self defaultCenter];
    uint64_t v33 = a1;
    id v26 = v23;
    NSNotificationCenter.publisher(for:object:)();

    sub_1003CA084(&qword_10079D998, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
    Publisher.first()();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v2);
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = v33;
    swift_weakInit();
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v27;
    *(void *)(v30 + 24) = v28;
    sub_100037EA0(&qword_10079D9A0, &qword_10079D990);
    uint64_t v31 = Publisher<>.sink(receiveValue:)();

    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v6);
    *(void *)(v29 + v24) = v31;
    swift_release();
  }
}

uint64_t sub_1003C4C7C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = Strong;
      if (qword_100785548 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100018BF8(v3, (uint64_t)qword_10079D5D0);
      swift_retain_n();
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v7 = swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 136315138;
        uint64_t v10 = v7;
        type metadata accessor for TTRRemindersListViewModel.Item();
        sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v8 = TTRTreeStorageItem.treeItemDescription.getter();
        sub_1000385A8(v8, v9, &v10);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Reminder Editing Session: detected first edit {item: %s}", v6, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      sub_1003C4EF0(v2);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1003C4EF0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_100787168);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    uint64_t v11 = type metadata accessor for TTRRemindersListUndoContext();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
LABEL_7:
    sub_10003B6F8((uint64_t)v6, &qword_100787168);
    return;
  }
  uint64_t v8 = Strong;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v9 = *(void *)(v8 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 48))(v8, &off_10074F848, ObjectType, v9);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v12 = type metadata accessor for TTRRemindersListUndoContext();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  }
  swift_unknownObjectRelease();
  uint64_t v13 = type metadata accessor for TTRRemindersListUndoContext();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v6, 1, v13) == 1) {
    goto LABEL_7;
  }
  uint64_t v14 = (void *)TTRRemindersListUndoContext.undoManager.getter();
  sub_100034684((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListUndoContext);
  uint64_t v15 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder)) {
    goto LABEL_16;
  }
  if (qword_100785548 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100018BF8(v16, (uint64_t)qword_10079D5D0);
  swift_retain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = v14;
    *(_DWORD *)uint64_t v19 = 136315138;
    aBlock[0] = v20;
    v29[1] = v19 + 4;
    type metadata accessor for TTRRemindersListViewModel.Item();
    sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v21 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v31 = sub_1000385A8(v21, v22, aBlock);
    uint64_t v14 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Reminder Editing Session: register undo for adding new reminder {item: %s}", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  *(unsigned char *)(a1 + v15) = 1;
  uint64_t v23 = self;
  static TTRLocalizableStrings.UndoAction.addReminder.getter();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  *(void *)(v25 + 24) = v2;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1003CA06C;
  *(void *)(v26 + 24) = v25;
  aBlock[4] = (uint64_t)sub_1000218B0;
  aBlock[5] = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100021888;
  aBlock[3] = (uint64_t)&unk_100749660;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [v23 withActionName:v24 block:v27];

  _Block_release(v27);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    NSUndoManager.addUndoGroupBoundary()();
    swift_release();
LABEL_16:

    return;
  }
  __break(1u);
}

void sub_1003C5428(uint64_t a1, uint64_t a2)
{
  id v5 = [*(id *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem) objectID];
  uint64_t v3 = *(void *)(a2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(id, uint64_t, uint64_t))(v3 + 224))(v5, ObjectType, v3);
}

uint64_t sub_1003C54B4()
{
  sub_1000499D4(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRRemindersListEditingSessionProvider()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for TTRRemindersListEditingSessionState.SaveState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003C55FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListEditingSessionState.SaveState()
{
  return &type metadata for TTRRemindersListEditingSessionState.SaveState;
}

unint64_t sub_1003C5638()
{
  unint64_t result = qword_10079D988;
  if (!qword_10079D988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079D988);
  }
  return result;
}

void sub_1003C568C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785548 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_100018BF8(v9, (uint64_t)qword_10079D5D0);
  swift_retain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v40[1] = v10;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    v40[0] = a2;
    v42[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    v40[2] = v6;
    uint64_t v41 = v8;
    uint64_t v17 = *(void *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
    unint64_t v16 = *(void *)(a1
                    + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                    + 8);
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1000385A8(v17, v16, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    type metadata accessor for TTRRemindersListViewModel.Item();
    sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v18 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v45 = sub_1000385A8(v18, v19, v42);
    uint64_t v3 = v2;
    uint64_t v8 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Reminder Editing Session: finish {acquirer: %s, item: %s}", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    a2 = v40[0];
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (*(unsigned char *)(a1
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) == 1
    && sub_1003CA134(a1))
  {
    uint64_t v20 = *(void *)(a1
                    + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
    if ((*(void *)TTRRemindersListEditingSessionFinishingOption.markedForDeletion.unsafeMutableAddressor() & ~a2) == 0) {
      *(unsigned char *)(v20 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_isMarkedForDeletion) = 1;
    }
    if ((*(void *)TTRRemindersListEditingSessionFinishingOption.doNotSave.unsafeMutableAddressor() & ~a2) == 0) {
      *(unsigned char *)(v20 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_doNotSave) = 1;
    }
    if ((*(void *)TTRRemindersListEditingSessionFinishingOption.deletesIfTitleIsInvalid.unsafeMutableAddressor() & ~a2) == 0) {
      *(unsigned char *)(v20 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalvoid (*v73)(id *, id) = 1;
    }
    uint64_t v21 = v20 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames;
    swift_beginAccess();
    if (!*(void *)(*(void *)v21 + 16))
    {
      swift_beginAccess();
      swift_retain();
      unint64_t v22 = swift_bridgeObjectRetain();
      sub_100091EEC(v22, v20);
      char v24 = v23;
      swift_bridgeObjectRelease();
      swift_release();
      if (v24)
      {
        swift_beginAccess();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*(void *)(v3 + 72) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 72) & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
        v25._object = (void *)0x80000001006B9280;
        v25._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
        TTRDeferredAction.scheduleNextRunLoop(reason:)(v25);
      }
    }
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload) {
        sub_100034684((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      }
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Reminder Editing Session: about to donate reminder update", v37, 2u);
        swift_slowDealloc();
      }

      type metadata accessor for RDIDispatchQueue();
      static RDIDispatchQueue.utilityQueue.getter();
      type metadata accessor for TTRRemindersInteraction();
      swift_allocObject();
      TTRRemindersInteraction.init(queue:)();
      uint64_t v38 = *(void **)(v20 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
      uint64_t v43 = sub_1000368FC(0, &qword_100791DA8);
      os_log_type_t v44 = &protocol witness table for REMReminderChangeItem;
      v42[0] = (uint64_t)v38;
      id v39 = v38;
      TTRRemindersInteraction.donateReminderUpdate(_:)();
      swift_release();
      sub_100038CD8((uint64_t)v42);
    }
    else
    {
      sub_100034684((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      type metadata accessor for RDIDispatchQueue();
      static RDIDispatchQueue.utilityQueue.getter();
      type metadata accessor for TTRRemindersInteraction();
      swift_allocObject();
      TTRRemindersInteraction.init(queue:)();
      uint64_t v27 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem;
      uint64_t v28 = *(void **)(v20 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
      uint64_t v43 = sub_1000368FC(0, &qword_100791DA8);
      os_log_type_t v44 = &protocol witness table for REMReminderChangeItem;
      v42[0] = (uint64_t)v28;
      id v29 = v28;
      TTRRemindersInteraction.donateReminderCreation(_:)();
      swift_release();
      sub_100038CD8((uint64_t)v42);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v31 = Strong;
        uint64_t v32 = *(void *)(v20 + v27);
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v33 = *(void *)(v31 + 24);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v33 + 64))(v31, &off_10074F848, v32, ObjectType, v33);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_1003C5D48(uint64_t a1, uint64_t a2)
{
  if (qword_100785548 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_10079D5D0);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v16 = a2;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
    unint64_t v9 = *(void *)(a1
                   + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                   + 8);
    swift_bridgeObjectRetain();
    sub_1000385A8(v8, v9, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    type metadata accessor for TTRRemindersListViewModel.Item();
    sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v10 = TTRTreeStorageItem.treeItemDescription.getter();
    sub_1000385A8(v10, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Reminder Editing Session: update item {acquirer: %s, item: %s}", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v16;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003B754((uint64_t *)&unk_10078E960);
    uint64_t v13 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
    unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_10066C6F0;
    sub_1003CB388(*(void *)(a1+ OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)+ OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, v15 + v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100528ABC(a2, v15);
    swift_unknownObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    return swift_deallocClassInstance();
  }
  return result;
}

void *sub_1003C60C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v4);
  os_log_type_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785548 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = sub_100018BF8(v7, (uint64_t)qword_10079D5D0);
  swift_retain_n();
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v31 = v6;
    v34[0] = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v32 = v2;
    uint64_t v30 = v8;
    uint64_t v13 = v4;
    uint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
    unint64_t v14 = *(void *)(a1
                    + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                    + 8);
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000385A8(v15, v14, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    type metadata accessor for TTRRemindersListViewModel.Item();
    sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v16 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v35 = sub_1000385A8(v16, v17, v34);
    uint64_t v2 = v32;
    uint64_t v4 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Reminder Editing Session: finish and force save session {acquirer: %s, item: %s}", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    os_log_type_t v6 = v31;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (*(unsigned char *)(a1
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1
    || !sub_1003CA134(a1))
  {
    return 0;
  }
  uint64_t v18 = *(void *)(a1
                  + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  uint64_t v19 = v18 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames;
  swift_beginAccess();
  if (*(void *)(*(void *)v19 + 16))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v31 = (char *)v4;
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      v34[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v22 = 136315138;
      uint64_t v23 = Array.description.getter();
      uint64_t v32 = v2;
      uint64_t v33 = sub_1000385A8(v23, v24, v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Reminder Editing Session: session is still held by some acquirers, force saving may cause problems {acquirers: %s}", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  Swift::String v25 = (void *)sub_1003C6648(v18);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (!EnumCaseMultiPayload) {
      sub_100034684((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    }
  }
  else
  {
    sub_100034684((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    if (v25)
    {
      type metadata accessor for RDIDispatchQueue();
      id v28 = v25;
      static RDIDispatchQueue.utilityQueue.getter();
      type metadata accessor for TTRRemindersInteraction();
      swift_allocObject();
      TTRRemindersInteraction.init(queue:)();
      void v34[3] = sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
      void v34[4] = (uint64_t)&protocol witness table for REMReminder;
      v34[0] = (uint64_t)v28;
      id v29 = v28;
      TTRRemindersInteraction.donateReminderCreation(_:)();
      swift_release();

      sub_100038CD8((uint64_t)v34);
    }
  }
  return v25;
}

uint64_t sub_1003C6648(uint64_t a1)
{
  sub_1003C7784(a1);
  uint64_t v11 = 0;
  uint64_t v3 = self;
  static TTRLocalizableStrings.UndoAction.addReminder.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = &v11;
  v5[3] = v1;
  v5[4] = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1003CB318;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100749980;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [(id)v3 withActionName:v4 block:v7];

  _Block_release(v7);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    sub_1003C90C4(a1);
    uint64_t v9 = v11;
    swift_release();
    return v9;
  }
  return result;
}

uint64_t sub_1003C6814(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v49 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v49);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  os_log_type_t v44 = (char *)&v43 - v7;
  uint64_t v8 = type metadata accessor for REMFeatureFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  *(void *)&long long v47 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785548 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = sub_100018BF8(v11, (uint64_t)qword_10079D5D0);
  swift_retain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  unint64_t v48 = v5;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v43 = v12;
    uint64_t v17 = v16;
    v51[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v45 = v2;
    uint64_t v46 = v8;
    uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
    unint64_t v19 = *(void *)(a1
                    + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                    + 8);
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1000385A8(v18, v19, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    type metadata accessor for TTRRemindersListViewModel.Item();
    sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v20 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v52 = sub_1000385A8(v20, v21, v51);
    uint64_t v2 = v45;
    uint64_t v8 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Reminder Editing Session: finish and force save session asynchronously {acquirer: %s, item: %s}", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (*(unsigned char *)(a1
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1
    || !sub_1003CA134(a1))
  {
    return 0;
  }
  uint64_t v22 = *(void *)(a1
                  + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  uint64_t v23 = v22 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames;
  swift_beginAccess();
  if (*(void *)(*(void *)v23 + 16))
  {
    swift_bridgeObjectRetain_n();
    unint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v46 = v8;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      v51[0] = swift_slowAlloc();
      uint64_t v45 = v2;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v27 = Array.description.getter();
      uint64_t v50 = sub_1000385A8(v27, v28, v51);
      uint64_t v2 = v45;
      uint64_t v8 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Reminder Editing Session: session is still held by some acquirers, force saving may cause problems {acquirers: %s}", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v29 = sub_1003C7784(v22) & 1;
  uint64_t v31 = *(void **)(v22 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  uint64_t v32 = v47;
  (*(void (**)(void, void, uint64_t))(v9 + 104))(v47, enum case for REMFeatureFlags.undoByAttribute(_:), v8);
  id v33 = v31;
  LOBYTE(v31) = REMFeatureFlags.isEnabled.getter();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v32, v8);
  if (v31)
  {
    uint64_t v34 = (uint64_t)v44;
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload) {
        sub_100034684(v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      }
    }
    else
    {
      sub_100034684(v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      if (*(unsigned char *)(v22
                    + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder) == 1)
      {
        uint64_t v36 = *(void *)TTRRemindersListReminderSaveOptions.skipsUndoRegistration.unsafeMutableAddressor();
        goto LABEL_21;
      }
    }
  }
  uint64_t v36 = 0;
LABEL_21:
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v33;
  long long v47 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v37 + 24) = v47;
  *(void *)(v37 + 40) = v36;
  *(void *)(v37 + 48) = v2;
  *(void *)(v37 + 56) = v22;
  sub_10003B754((uint64_t *)&unk_100791BA0);
  swift_allocObject();
  id v38 = v33;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  v51[0] = Future.init(_:)();
  sub_100037EA0(&qword_100791BB8, (uint64_t *)&unk_100791BA0);
  Publisher<>.sinkNextOutput(_:)();
  uint64_t v39 = (uint64_t)v48;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int v40 = swift_getEnumCaseMultiPayload();
  if ((v40 - 1) >= 2)
  {
    if (!v40) {
      sub_100034684(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    }
  }
  else
  {
    sub_100034684(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    type metadata accessor for RDIDispatchQueue();
    id v41 = v38;
    static RDIDispatchQueue.utilityQueue.getter();
    type metadata accessor for TTRRemindersInteraction();
    swift_allocObject();
    TTRRemindersInteraction.init(queue:)();
    v51[3] = sub_1000368FC(0, &qword_100791DA8);
    v51[4] = (uint64_t)&protocol witness table for REMReminderChangeItem;
    v51[0] = (uint64_t)v41;
    id v42 = v41;
    TTRRemindersInteraction.donateReminderCreation(_:)();
    swift_release();

    sub_100038CD8((uint64_t)v51);
  }
  return v29;
}

void sub_1003C701C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMFeatureFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785548 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = sub_100018BF8(v12, (uint64_t)qword_10079D5D0);
  swift_retain_n();
  uint64_t v50 = v13;
  os_log_type_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v51 = v9;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v47 = v3;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v48 = v2;
    aBlock[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v20 = sub_1003C111C();
    uint64_t v46 = v11;
    void aBlock[6] = sub_1000385A8(v20, v21, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v11 = v46;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Reminder Editing Session: perform deletion {sessionState: %s}", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v2 = v48;
    swift_slowDealloc();
    uint64_t v3 = v47;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v22 = a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames;
  swift_beginAccess();
  if (*(void *)(*(void *)v22 + 16))
  {
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Reminder Editing Session: session is still held by some acquirers, item deletion may cause problems", v25, 2u);
      swift_slowDealloc();
    }
  }
  if (*(void *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  uint64_t v26 = a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    sub_100034684((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for REMFeatureFlags.undoByAttribute(_:), v2);
    char v28 = REMFeatureFlags.isEnabled.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v28 & 1) == 0) {
      [*(id *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem) removeFromList];
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100527C5C(v26, *(unsigned char *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder));
      swift_unknownObjectRelease();
    }
    return;
  }
  if (EnumCaseMultiPayload) {
    goto LABEL_21;
  }
  sub_1003CA0CC((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  uint64_t v29 = *(void *)(v49 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v31 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v29 + 240))(*v8, ObjectType, v29);
  if (v31)
  {
    uint64_t v32 = (void *)v31;
    id v33 = self;
    static TTRLocalizableStrings.UndoAction.deleteReminder.getter();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v49;
    *(void *)(v35 + 24) = v32;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_1003CB000;
    *(void *)(v36 + 24) = v35;
    aBlock[4] = (uint64_t)sub_1000499FC;
    aBlock[5] = v36;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100021888;
    aBlock[3] = (uint64_t)&unk_100749778;
    uint64_t v37 = _Block_copy(aBlock);
    swift_retain();
    id v38 = v32;
    swift_retain();
    swift_release();
    [v33 withActionName:v34 block:v37];

    _Block_release(v37);
    sub_100034684((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v37 & 1) == 0) {
      return;
    }
    __break(1u);
LABEL_21:
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v39, v40))
    {
      id v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Reminder Editing Session: handleDeletion: invalid item type", v41, 2u);
      swift_slowDealloc();
    }

    return;
  }
  id v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    os_log_type_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v44 = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Reminder Editing Session: handleDeletion: missing REMReminder", v44, 2u);
    swift_slowDealloc();
  }

  sub_100034684((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
}

uint64_t sub_1003C7784(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100787168);
  __chkstk_darwin(v2 - 8);
  uint64_t v108 = (uint64_t)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for REMFeatureFlags();
  uint64_t v113 = *(void *)(v4 - 8);
  uint64_t v114 = v4;
  __chkstk_darwin(v4);
  unint64_t v112 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v116);
  uint64_t v7 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v110 = (char *)&v106 - v9;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v106 - v11;
  if (qword_100785548 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_100018BF8(v13, (uint64_t)qword_10079D5D0);
  swift_retain_n();
  uint64_t v115 = v14;
  os_log_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  os_log_type_t v111 = v7;
  if (v17)
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v19 = sub_1003C111C();
    uint64_t v118 = sub_1000385A8(v19, v20, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Reminder Editing Session: save sessionState {sessionState: %s}", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v109 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState))
  {
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Reminder Editing Session: Attempting to save a sessionState twice", v23, 2u);
      swift_slowDealloc();
    }
  }
  if (*(void *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  os_log_type_t v24 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
  os_log_type_t v25 = (void *)&unk_1007BB000;
  if (v24)
  {
    id v26 = v24;
    swift_retain_n();
    id v27 = v26;
    char v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v107 = (uint64_t)v12;
      uint64_t v32 = (void *)v31;
      aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315394;
      type metadata accessor for TTRRemindersListViewModel.Item();
      sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v33 = TTRTreeStorageItem.treeItemDescription.getter();
      uint64_t v118 = sub_1000385A8(v33, v34, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2112;
      id v35 = [v27 objectID];
      uint64_t v118 = (uint64_t)v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v32 = v35;

      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Reminder Editing Session: moving to target list {item: %s, targetList: %@}", (uint8_t *)v30, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      uint64_t v12 = (char *)v107;
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    aBlock = _typeName(_:qualified:)();
    uint64_t v120 = v36;
    v37._uint64_t countAndFlagsBits = 0x73694C65766F6D2DLL;
    v37._object = (void *)0xE900000000000074;
    String.append(_:)(v37);
    uint64_t v38 = aBlock;
    uint64_t v39 = v120;
    type metadata accessor for EditingSessionImp(0);
    swift_allocObject();
    swift_retain();
    os_log_type_t v25 = &unk_1007BB000;
    if (*(unsigned char *)(sub_1003C164C(v38, v39, a1, 0)
                  + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) == 1)
    {
      os_log_type_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v40, v41))
      {
        id v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v42 = 0;
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "attributeEditor called after -[TTRRemindersListEditingSession finish] is called", v42, 2u);
        swift_slowDealloc();
      }
    }
    swift_retain();
    TTRRemindersListAttributeEditor.setList(_:)();
    swift_release();
    swift_release();
  }
  uint64_t v43 = 0xD000000000000019;
  os_log_type_t v44 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  id v45 = [v44 listID];

  if (v45)
  {
    uint64_t v46 = v12;
    uint64_t v47 = *(void *)(v117 + 56);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v122 = (void *)sub_1000368FC(0, &qword_100791DA8);
    Swift::Int v123 = (uint64_t (*)())&protocol witness table for REMReminderChangeItem;
    aBlock = (uint64_t)v44;
    uint64_t v49 = v25;
    uint64_t v50 = a1 + v25[367];
    uint64_t v51 = *(uint64_t (**)(void, void, void, void))(v47 + 384);
    id v52 = v44;
    char v53 = v51((void **)&aBlock, v50, ObjectType, v47);
    sub_100038CD8((uint64_t)&aBlock);
    if (v53)
    {
      uint64_t v54 = 0;
      uint64_t v55 = (uint64_t)v110;
      uint64_t v56 = (uint64_t)v111;
      uint64_t v57 = v109;
      goto LABEL_36;
    }
    uint64_t v43 = 0xD000000000000026;
    unint64_t v58 = 0x80000001006B9230;
    os_log_type_t v25 = v49;
    uint64_t v12 = v46;
  }
  else
  {
    unint64_t v58 = 0x80000001006B9260;
  }
  uint64_t v59 = a1 + v25[367];
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (!EnumCaseMultiPayload) {
      sub_100034684((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100034684((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      aBlock = v107;
      *(_DWORD *)uint64_t v63 = 136315394;
      uint64_t v106 = v63 + 4;
      type metadata accessor for TTRRemindersListViewModel.Item();
      sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v64 = TTRTreeStorageItem.treeItemDescription.getter();
      uint64_t v118 = sub_1000385A8(v64, v65, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_1000385A8(v43, v58, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Discarding uncommitted reminder {item: %s, reason: %s}", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v67 = *(void *)(Strong + 40);
      uint64_t v68 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 464))(v59, v68, v67);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 424))(v59, v68, v67);
      swift_unknownObjectRelease();
      swift_release();
    }
  }
  uint64_t v54 = 1;
  uint64_t v55 = (uint64_t)v110;
  uint64_t v56 = (uint64_t)v111;
  uint64_t v57 = v109;
LABEL_36:
  *(unsigned char *)(a1 + v57) = 1;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int v69 = swift_getEnumCaseMultiPayload();
  if ((v69 - 1) >= 2)
  {
    if (!v69) {
      sub_100034684(v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    }
  }
  else
  {
    sub_100034684(v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    uint64_t v70 = v117;
    uint64_t v71 = *(void *)(v117 + 56);
    uint64_t v72 = swift_getObjectType();
    uint64_t v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 440))(v72, v71);
    uint64_t v74 = *(void *)(v70 + 40);
    uint64_t v75 = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v74 + 184))(v73, v44, v75, v74);
    swift_bridgeObjectRelease();
  }
  uint64_t v77 = v112;
  uint64_t v76 = v113;
  uint64_t v78 = v114;
  (*(void (**)(char *, void, uint64_t))(v113 + 104))(v112, enum case for REMFeatureFlags.undoByAttribute(_:), v114);
  char v79 = REMFeatureFlags.isEnabled.getter();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
  if (v79) {
    return v54;
  }
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int v80 = swift_getEnumCaseMultiPayload();
  if ((v80 - 1) < 2)
  {
    sub_100034684(v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    return v54;
  }
  if (!v80) {
    sub_100034684(v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  }
  uint64_t v81 = swift_unknownObjectWeakLoadStrong();
  if (!v81)
  {
    uint64_t v85 = type metadata accessor for TTRRemindersListUndoContext();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v108, 1, 1, v85);
LABEL_51:
    sub_10003B6F8(v108, &qword_100787168);
    return v54;
  }
  uint64_t v82 = v81;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v83 = *(void *)(v82 + 24);
    uint64_t v84 = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v83 + 48))(v82, &off_10074F848, v84, v83);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v86 = type metadata accessor for TTRRemindersListUndoContext();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v108, 1, 1, v86);
  }
  swift_unknownObjectRelease();
  uint64_t v87 = type metadata accessor for TTRRemindersListUndoContext();
  unint64_t v88 = *(unsigned int (**)(void, void, void))(*(void *)(v87 - 8) + 48);
  if (v88(v108, 1, v87) == 1) {
    goto LABEL_51;
  }
  uint64_t v89 = v108;
  id v90 = (void *)TTRRemindersListUndoContext.undoManager.getter();
  sub_100034684(v89, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListUndoContext);
  uint64_t v91 = a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext;
  swift_beginAccess();
  if (v88(v91, 1, v87))
  {
    swift_endAccess();

    return v54;
  }
  uint64_t v92 = (void *)TTRRemindersListUndoContext.undoManager.getter();
  swift_endAccess();
  if (v92 == v90)
  {

    return v54;
  }
  LODWORD(v117) = v54;
  swift_retain_n();
  uint64_t v93 = Logger.logObject.getter();
  os_log_type_t v94 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v93, v94))
  {
    id v95 = (uint8_t *)swift_slowAlloc();
    aBlock = swift_slowAlloc();
    *(_DWORD *)id v95 = 136315138;
    uint64_t v116 = (uint64_t)(v95 + 4);
    type metadata accessor for TTRRemindersListViewModel.Item();
    sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v96 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v118 = sub_1000385A8(v96, v97, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v93, v94, "Reminder Editing Session: registering combined undo {item: %s}", v95, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v98 = self;
  static TTRLocalizableStrings.UndoAction.editReminder.getter();
  NSString v99 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v100 = swift_allocObject();
  *(void *)(v100 + 16) = v90;
  *(void *)(v100 + 24) = v92;
  uint64_t v101 = swift_allocObject();
  *(void *)(v101 + 16) = sub_1003CB0A4;
  *(void *)(v101 + 24) = v100;
  Swift::Int v123 = sub_1000499FC;
  uint64_t v124 = v101;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v120 = 1107296256;
  uint64_t v121 = sub_100021888;
  uint64_t v122 = &unk_100749818;
  os_log_type_t v102 = _Block_copy(&aBlock);
  id v103 = v90;
  id v104 = v92;
  swift_retain();
  swift_release();
  [(id)v98 withActionName:v99 block:v102];

  _Block_release(v102);
  LOBYTE(v98) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v54 = v117;
  if ((v98 & 1) == 0) {
    return v54;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003C88E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = *(void (**)(uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v5 + 200);
  swift_retain();
  swift_retain();
  v9(a2, sub_1003CB05C, v8, ObjectType, v5);
  swift_release();

  return swift_release();
}

void sub_1003C89E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    swift_beginAccess();
    unint64_t v7 = *(void *)(a3 + 16);
    uint64_t v43 = a1;
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (v8) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_4:
        if (v8 < 1)
        {
          __break(1u);
LABEL_36:
          swift_once();
          goto LABEL_31;
        }
        uint64_t v9 = 0;
        unint64_t v10 = v7 & 0xC000000000000001;
        uint64_t v11 = (void *)&unk_1007BB000;
        uint64_t v44 = v6;
        uint64_t v45 = v8;
        unint64_t v46 = v7;
        unint64_t v47 = v7 & 0xC000000000000001;
        do
        {
          if (v10)
          {
            uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v14 = *(void *)(v7 + 8 * v9 + 32);
            swift_retain();
          }
          *(unsigned char *)(v14 + v11[368]) = 2;
          id v15 = [*(id *)(v14 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem) saveRequest];
          if (([v15 isSaved] & 1) == 0)
          {
            if (qword_100785548 != -1) {
              swift_once();
            }
            uint64_t v16 = type metadata accessor for Logger();
            sub_100018BF8(v16, (uint64_t)qword_10079D5D0);
            swift_retain_n();
            BOOL v17 = Logger.logObject.getter();
            os_log_type_t v18 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v17, v18))
            {
              uint64_t v19 = swift_slowAlloc();
              uint64_t v48 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v19 = 136315138;
              type metadata accessor for TTRRemindersListViewModel.Item();
              sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
              uint64_t v20 = TTRTreeStorageItem.treeItemDescription.getter();
              *(void *)(v19 + 4) = sub_1000385A8(v20, v21, (uint64_t *)&v48);
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v17, v18, "Reminder Editing Session: remove editing session state due to no-op'ed save {item: %s}", (uint8_t *)v19, 0xCu);
              swift_arrayDestroy();
              uint64_t v6 = v44;
              unint64_t v7 = v46;
              swift_slowDealloc();
              uint64_t v8 = v45;
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            uint64_t v12 = *(void *)(v6 + 56);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 472))(v14 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, ObjectType, v12);
            unint64_t v10 = v47;
            uint64_t v11 = &unk_1007BB000;
          }
          ++v9;
          swift_release();
        }
        while (v8 != v9);
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    a1 = v43;
  }
  int64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v48 = _swiftEmptyArrayStorage;
    sub_1004D35AC(0, v22, 0);
    uint64_t v23 = v48;
    uint64_t v24 = a1 + 32;
    do
    {
      swift_getErrorValue();
      swift_errorRetain();
      uint64_t v25 = Error.localizedDescription.getter();
      uint64_t v27 = v26;
      swift_errorRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v48 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1004D35AC(0, v23[2] + 1, 1);
        uint64_t v23 = v48;
      }
      unint64_t v30 = v23[2];
      unint64_t v29 = v23[3];
      if (v30 >= v29 >> 1)
      {
        sub_1004D35AC(v29 > 1, v30 + 1, 1);
        uint64_t v23 = v48;
      }
      v23[2] = v30 + 1;
      uint64_t v31 = &v23[2 * v30];
      v31[4] = v25;
      v31[5] = v27;
      v24 += 8;
      --v22;
    }
    while (v22);
    uint64_t v48 = v23;
    sub_10003B754(&qword_10078E670);
    sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
    uint64_t v32 = BidirectionalCollection<>.joined(separator:)();
    unint64_t v34 = v33;
    swift_release();
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_100018BF8(v35, (uint64_t)qword_10079D5D0);
    swift_bridgeObjectRetain();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315138;
      swift_bridgeObjectRetain();
      sub_1000385A8(v32, v34, (uint64_t *)&v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Reminder Editing Session: failed to save reminder(s) {errors: %s}", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  if (qword_100785548 != -1) {
    goto LABEL_36;
  }
LABEL_31:
  uint64_t v39 = type metadata accessor for Logger();
  sub_100018BF8(v39, (uint64_t)qword_10079D5D0);
  os_log_type_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v40, v41))
  {
    id v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Reminder Editing Session: reminder(s) saved", v42, 2u);
    swift_slowDealloc();
  }
}

void sub_1003C90C4(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState) = 2;
  id v12 = [*(id *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem) saveRequest];
  if ([v12 isSaved])
  {
  }
  else
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_10079D5D0);
    swift_retain_n();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    uint64_t v6 = &unk_1007BB000;
    if (os_log_type_enabled(v4, v5))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)unint64_t v7 = 136315138;
      type metadata accessor for TTRRemindersListViewModel.Item();
      sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v6 = (void *)&unk_1007BB000;
      uint64_t v8 = TTRTreeStorageItem.treeItemDescription.getter();
      sub_1000385A8(v8, v9, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Reminder Editing Session: remove editing session state due to no-op'ed save {item: %s}", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v10 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 472))(a1 + v6[367], ObjectType, v10);
  }
}

uint64_t sub_1003C937C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066D470;
  *(void *)(v5 + 32) = a2;
  uint64_t v10 = v5;
  specialized Array._endMutation()();
  uint64_t v6 = *(void *)(v3 + 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  id v8 = a2;
  v7(v10, ObjectType, v6);

  return swift_bridgeObjectRelease();
}

void sub_1003C9444(void **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v21 = a1;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMFeatureFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v20 = *(void *)(a3 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  (*(void (**)(char *, void, uint64_t, double))(v9 + 104))(v12, enum case for REMFeatureFlags.undoByAttribute(_:), v8, v10);
  char v14 = REMFeatureFlags.isEnabled.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v15 = 0;
  if (v14)
  {
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload) {
        sub_100034684((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      }
    }
    else
    {
      sub_100034684((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      if (*(unsigned char *)(a3
                    + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder) == 1)
      {
        uint64_t v15 = *(void *)TTRRemindersListReminderSaveOptions.skipsUndoRegistration.unsafeMutableAddressor();
        goto LABEL_8;
      }
    }
    uint64_t v15 = 0;
  }
LABEL_8:
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 208))(v20, v15, ObjectType, v13);
  uint64_t v19 = *v21;
  *unint64_t v21 = (void *)v18;
}

uint64_t sub_1003C968C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  swift_retain();
  id v17 = [a3 objectID];
  id v25 = self;
  static TTRLocalizableStrings.UndoAction.addReminder.getter();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)swift_allocObject();
  long long v19[2] = a4;
  void v19[3] = a5;
  void v19[4] = a3;
  v19[5] = a6;
  v19[6] = a7;
  v19[7] = a8;
  v19[8] = v17;
  v19[9] = sub_1000C2598;
  v19[10] = v16;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1003CB1D8;
  *(void *)(v20 + 24) = v19;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_1007498E0;
  unint64_t v21 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  id v22 = a3;
  swift_retain();
  swift_retain();
  id v23 = v17;
  swift_retain();
  swift_release();
  [v25 withActionName:v18 block:v21];

  _Block_release(v21);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v23) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C98C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_10003B754(&qword_10079D9A8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10066C6F0;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = a4;
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  id v17 = (void *)swift_allocObject();
  void v17[2] = v16;
  v17[3] = a6;
  v17[4] = a7;
  v17[5] = a8;
  v17[6] = a9;
  NSString v18 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(a2 + 200);
  id v19 = a3;
  swift_retain();
  swift_retain();
  id v20 = a7;
  swift_retain();
  v18(v15, sub_1003CB270, v17, ObjectType, a2);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_1003C9A20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void, void))
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1003C90C4(a3);
    swift_release();
  }
  if (*(void *)(a1 + 16))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    swift_errorRetain();
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_10079D5D0);
    id v11 = a4;
    swift_errorRetain();
    id v12 = v11;
    swift_errorRetain();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      char v28 = a5;
      uint64_t v16 = (void *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      swift_getErrorValue();
      uint64_t v17 = Error.rem_errorDescription.getter();
      sub_1000385A8(v17, v18, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v15 + 12) = 2112;
      id v19 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v16 = v12;

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Reminder Editing Session: error saving reminder async {error: %s, objectID: %@}", (uint8_t *)v15, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      a5 = v28;
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    swift_errorRetain();
    a5(v9, 1);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100018BF8(v20, (uint64_t)qword_10079D5D0);
    id v21 = a4;
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      id v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412290;
      uint64_t v29 = (uint64_t)v21;
      id v26 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v25 = v21;

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Reminder Editing Session: reminder saved async {objectID: %@}", v24, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return ((uint64_t (*)(id, void))a5)(v21, 0);
  }
}

uint64_t sub_1003C9E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100787168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003C9EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100787168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003C9F64(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v6 = (uint64_t *)(a3 + 16 * v4 + 24);
    do
    {
      uint64_t v7 = *v6;
      v10[0] = *(v6 - 1);
      v10[1] = v7;
      swift_bridgeObjectRetain();
      char v8 = a1(v10);
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      v6 -= 2;
      --v4;
    }
    while (!(v8 & 1 | (v4 == 0)));
  }
  return v4;
}

uint64_t sub_1003CA024()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003CA060()
{
  return sub_1003C4C7C();
}

void sub_1003CA06C()
{
  sub_1003C5428(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003CA074()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CA084(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003CA0CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1003CA134(uint64_t a1)
{
  uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v40);
  uint64_t v3 = &v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v6 = &v36[-v5];
  __chkstk_darwin(v7);
  uint64_t v9 = &v36[-v8];
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
  unint64_t v10 = *(void *)(a1
                  + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                  + 8);
  uint64_t v12 = *(void *)(a1
                  + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  sub_1003CB388(v12 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, (uint64_t)&v36[-v8], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v13 = (uint64_t *)(v12 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames);
  swift_beginAccess();
  uint64_t v14 = *v13;
  v43[0] = v11;
  v43[1] = v10;
  id v42 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1003C9F64(sub_1003CB280, (uint64_t)v41, v14);
  LODWORD(v17) = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    char v28 = v17;
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100018BF8(v29, (uint64_t)qword_10079D5D0);
    sub_1003CB388((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_bridgeObjectRetain();
    unint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1000385A8(v11, v10, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2080;
      sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v33 = TTRTreeStorageItem.treeItemDescription.getter();
      uint64_t v44 = sub_1000385A8(v33, v34, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100034684((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Reminder Editing Session: acquirer to be removed is not found {acquirerName: %s, item: %s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100034684((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRelease_n();
    }
    sub_100034684((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    LOBYTE(v17) = v28;
  }
  else
  {
    swift_beginAccess();
    sub_1003C0884(v15);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (qword_100785548 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100018BF8(v18, (uint64_t)qword_10079D5D0);
    sub_1003CB388((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain_n();
    swift_bridgeObjectRetain();
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      int v39 = v17;
      uint64_t v17 = v22;
      uint64_t v38 = swift_slowAlloc();
      v43[0] = v38;
      *(_DWORD *)uint64_t v17 = 136315650;
      int v37 = v21;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1000385A8(v11, v10, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v23 = Array.description.getter();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_1000385A8(v23, v25, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2080;
      sub_1003CA084((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v26 = TTRTreeStorageItem.treeItemDescription.getter();
      uint64_t v44 = sub_1000385A8(v26, v27, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100034684((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v37, "Reminder Editing Session: Removed acquirer from editing session {removing: %s, remaining: %s, item: %s}", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      LOBYTE(v17) = v39;
      swift_slowDealloc();
    }
    else
    {

      sub_100034684((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    sub_100034684((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return (v17 & 1) == 0;
}

uint64_t sub_1003CA82C()
{
  uint64_t v1 = v0;
  uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v40);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for REMFeatureFlags();
  uint64_t v4 = *(void (***)(void, void))(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  object = v0 + 9;
  uint64_t result = swift_beginAccess();
  unint64_t v8 = v0[9];
  if (v8 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v31) {
      return result;
    }
  }
  else if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  os_log_type_t v41 = v3;
  uint64_t v9 = *object;
  uint64_t *object = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t result = swift_allocObject();
  uint64_t v39 = result;
  *(void *)(result + 16) = _swiftEmptyArrayStorage;
  unint64_t v10 = (uint64_t *)(result + 16);
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0) {
      object = (uint64_t *)v9;
    }
    else {
      object = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_5:
      if (v11 < 1)
      {
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        return result;
      }
      unint64_t v43 = (unint64_t)v4;
      uint64_t v12 = 0;
      unint64_t v13 = v9 & 0xC000000000000001;
      unint64_t v44 = v9 & 0xC000000000000001;
      do
      {
        if (v13)
        {
          uint64_t v3 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v3 = *(char **)(v9 + 8 * v12 + 32);
          swift_retain();
        }
        if (v3[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_isMarkedForDeletion]) {
          goto LABEL_7;
        }
        if (v3[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalid] != 1) {
          goto LABEL_16;
        }
        id v14 = [*(id *)&v3[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem] titleAsString];
        if (!v14) {
          goto LABEL_7;
        }
        unint64_t v15 = v14;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        Swift::tuple_title_String_isValid_Bool v48 = String.validatedReminderTitle()();
        object = (uint64_t *)v48.title._object;
        Swift::Bool isValid = v48.isValid;
        unint64_t v13 = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!isValid)
        {
LABEL_7:
          sub_1003C701C((uint64_t)v3);
        }
        else
        {
LABEL_16:
          sub_1003C7784((uint64_t)v3);
          if ((v3[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_doNotSave] & 1) == 0)
          {
            swift_retain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            object = *(uint64_t **)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if ((unint64_t)object >= *(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        ++v12;
        swift_release();
      }
      while (v11 != v12);
      swift_bridgeObjectRelease();
      uint64_t v17 = *v10;
      uint64_t v4 = (void (**)(void, void))v43;
      if (!((unint64_t)*v10 >> 62)) {
        goto LABEL_21;
      }
      goto LABEL_47;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
LABEL_21:
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v38 = v1;
    if (v18) {
      goto LABEL_22;
    }
    goto LABEL_51;
  }
LABEL_47:
  if (v17 < 0) {
    object = (uint64_t *)v17;
  }
  else {
    object = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v38 = v1;
  if (v18)
  {
LABEL_22:
    aBlock[0] = _swiftEmptyArrayStorage;
    uint64_t result = sub_1004D3C6C(0, v18 & ~(v18 >> 63), 0);
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = 0;
      uint64_t v1 = (void *)aBlock[0];
      unint64_t v43 = v17 & 0xC000000000000001;
      unint64_t v44 = v17;
      unsigned int v42 = enum case for REMFeatureFlags.undoByAttribute(_:);
      os_log_type_t v20 = (void (**)(char *, void, uint64_t))(v4 + 13);
      ++v4;
      while (1)
      {
        if (v18 == v19)
        {
          __break(1u);
          goto LABEL_40;
        }
        if (v43)
        {
          uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v21 = *(void *)(v17 + 8 * v19 + 32);
          swift_retain();
        }
        uint64_t v22 = *(void **)(v21 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
        unint64_t v24 = v45;
        uint64_t v23 = v46;
        (*v20)(v45, v42, v46);
        uint64_t v3 = v22;
        LOBYTE(v22) = REMFeatureFlags.isEnabled.getter();
        (*v4)(v24, v23);
        if ((v22 & 1) == 0) {
          goto LABEL_34;
        }
        uint64_t v25 = (uint64_t)v41;
        TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if ((EnumCaseMultiPayload - 1) >= 2) {
          break;
        }
        sub_100034684(v25, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        if (*(unsigned char *)(v21
                      + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder) != 1)
          goto LABEL_34;
        uint64_t v27 = *(void *)TTRRemindersListReminderSaveOptions.skipsUndoRegistration.unsafeMutableAddressor();
LABEL_35:
        swift_release();
        aBlock[0] = v1;
        unint64_t v29 = v1[2];
        unint64_t v28 = v1[3];
        object = (uint64_t *)(v29 + 1);
        if (v29 >= v28 >> 1)
        {
          sub_1004D3C6C(v28 > 1, v29 + 1, 1);
          uint64_t v1 = (void *)aBlock[0];
        }
        ++v19;
        v1[2] = object;
        unint64_t v30 = &v1[2 * v29];
        v30[4] = v3;
        _OWORD v30[5] = v27;
        uint64_t v17 = v44;
        if (v18 == v19)
        {
          swift_bridgeObjectRelease();
          goto LABEL_52;
        }
      }
      if (!EnumCaseMultiPayload) {
        sub_100034684((uint64_t)v41, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      }
LABEL_34:
      uint64_t v27 = 0;
      goto LABEL_35;
    }
    goto LABEL_56;
  }
LABEL_51:
  swift_bridgeObjectRelease();
  uint64_t v1 = _swiftEmptyArrayStorage;
LABEL_52:
  uint64_t v32 = self;
  static TTRLocalizableStrings.UndoAction.addReminder.getter();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v34 = (void *)swift_allocObject();
  uint64_t v35 = v39;
  void v34[2] = v38;
  void v34[3] = v1;
  void v34[4] = v35;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1003CAFE0;
  *(void *)(v36 + 24) = v34;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100749700;
  int v37 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [(id)v32 withActionName:v33 block:v37];

  _Block_release(v37);
  LOBYTE(v32) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v32)
  {
    __break(1u);
    goto LABEL_55;
  }
  return result;
}

uint64_t sub_1003CAF60()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003CAF98()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003CAFE0()
{
  return sub_1003C88E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1003CAFEC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB000()
{
  return sub_1003C937C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003CB008()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB01C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003CB05C(uint64_t a1)
{
  sub_1003C89E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003CB064()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB0A4()
{
  return NSUndoManager.registerUndo(draining:groupSavesInto:)();
}

uint64_t sub_1003CB0D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB0E0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003CB130(uint64_t a1, uint64_t a2)
{
  return sub_1003C968C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_1003CB140()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB178()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1003CB1D8()
{
  return sub_1003C98C0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
}

uint64_t sub_1003CB210()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB220()
{
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003CB270(uint64_t a1)
{
  return sub_1003C9A20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(void, void))(v1 + 40));
}

uint64_t sub_1003CB280(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
  }
}

uint64_t sub_1003CB2D8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003CB318()
{
  sub_1003C9444(*(void ***)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003CB324()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB334(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003CB388(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003CB3F4(uint64_t a1)
{
  return sub_1003C1F90(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003CB440(char a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = (uint64_t *)(v5 + 80);
  if (a1)
  {
    swift_beginAccess();
    uint64_t v13 = *v12;
    if (!*(void *)(*v12 + 16)) {
      goto LABEL_10;
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v13 = *(void *)(v5 + 88);
    if (!*(void *)(v13 + 16)) {
      goto LABEL_10;
    }
  }
  uint64_t v14 = sub_10035C1D0(a2);
  if (v15)
  {
    int v16 = (unint64_t *)(*(void *)(v13 + 56) + 16 * v14);
    unint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    swift_endAccess();
    swift_bridgeObjectRetain();
    if ((a5 & 1) == 0) {
      sub_1002BF584(a4, 0, a3);
    }
    uint64_t v19 = qword_100677038[a3] | v18;
    unint64_t v20 = v17;
    if (a1) {
      goto LABEL_18;
    }
LABEL_20:
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *(void *)(v6 + 88);
    *(void *)(v6 + 88) = 0x8000000000000000;
    sub_1000BACC8(v20, v19, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v6 + 88) = v26;
    goto LABEL_21;
  }
LABEL_10:
  swift_endAccess();
  if (a5)
  {
    unint64_t v20 = sub_10042523C((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    sub_10003B754(qword_100787570);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(unsigned char *)(inited + 32) = a3;
    *(void *)(inited + 40) = a4;
    unint64_t v20 = sub_10042523C(inited);
    swift_setDeallocating();
  }
  uint64_t v19 = 0;
  switch(a3)
  {
    case 2:
      uint64_t v19 = 2;
      if ((a1 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_18;
    case 3:
      uint64_t v19 = 1;
      break;
    case 4:
      uint64_t v19 = 4;
      if ((a1 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_18;
    default:
      break;
  }
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_18:
  swift_beginAccess();
  swift_retain();
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v12;
  *uint64_t v12 = 0x8000000000000000;
  sub_1000BACC8(v20, v19, a2, v22);
  *uint64_t v12 = v25;
LABEL_21:
  swift_release();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1003CB6D0(char a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = (uint64_t *)(v5 + 80);
  if (a1)
  {
    swift_beginAccess();
    uint64_t v13 = *v12;
    if (!*(void *)(*v12 + 16)) {
      goto LABEL_10;
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v13 = *(void *)(v5 + 88);
    if (!*(void *)(v13 + 16)) {
      goto LABEL_10;
    }
  }
  uint64_t v14 = sub_10035C1D0(a2);
  if (v15)
  {
    int v16 = (unint64_t *)(*(void *)(v13 + 56) + 16 * v14);
    unint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    swift_endAccess();
    swift_bridgeObjectRetain();
    if ((a5 & 1) == 0) {
      sub_1002BF584(a4, 0, a3);
    }
    uint64_t v19 = qword_100677038[a3] | v18;
    unint64_t v20 = v17;
    if (a1) {
      goto LABEL_18;
    }
LABEL_20:
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *(void *)(v6 + 88);
    *(void *)(v6 + 88) = 0x8000000000000000;
    sub_1000BB6FC(v20, v19, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v6 + 88) = v26;
    goto LABEL_21;
  }
LABEL_10:
  swift_endAccess();
  if (a5)
  {
    unint64_t v20 = sub_10042523C((uint64_t)&_swiftEmptyArrayStorage);
  }
  else
  {
    sub_10003B754(qword_100787570);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(unsigned char *)(inited + 32) = a3;
    *(void *)(inited + 40) = a4;
    unint64_t v20 = sub_10042523C(inited);
    swift_setDeallocating();
  }
  uint64_t v19 = 0;
  switch(a3)
  {
    case 2:
      uint64_t v19 = 2;
      if ((a1 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_18;
    case 3:
      uint64_t v19 = 1;
      break;
    case 4:
      uint64_t v19 = 4;
      if ((a1 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_18;
    default:
      break;
  }
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_18:
  swift_beginAccess();
  swift_retain();
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v12;
  *uint64_t v12 = 0x8000000000000000;
  sub_1000BB6FC(v20, v19, a2, v22);
  *uint64_t v12 = v25;
LABEL_21:
  swift_release();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1003CB960(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, signed __int8 a5, uint64_t a6, char a7)
{
  int64_t v8 = a4 >> 1;
  if (a4 >> 1 == a3) {
    return result;
  }
  uint64_t v9 = v7;
  uint64_t v11 = a3;
  swift_unknownObjectRetain();
  uint64_t v52 = a5;
  unsigned __int8 v55 = a5;
  while (v11 < v8)
  {
    uint64_t v13 = *(void *)(a2 + 8 * v11);
    swift_beginAccess();
    uint64_t v14 = *(void *)(v9 + 88);
    if (*(void *)(v14 + 16))
    {
      uint64_t v15 = sub_10035C1D0(v13);
      if (v16)
      {
        unint64_t v17 = (void *)(*(void *)(v14 + 56) + 16 * v15);
        uint64_t v19 = (void *)*v17;
        uint64_t v18 = v17[1];
        swift_endAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        if (a7) {
          goto LABEL_26;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v22 = sub_10035C28C(a5);
        uint64_t v23 = v19[2];
        BOOL v24 = (v21 & 1) == 0;
        uint64_t v25 = v23 + v24;
        if (__OFADD__(v23, v24)) {
          goto LABEL_45;
        }
        char v26 = v21;
        if (v19[3] >= v25)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v21 & 1) == 0) {
              goto LABEL_23;
            }
          }
          else
          {
            sub_100361174();
            if ((v26 & 1) == 0) {
              goto LABEL_23;
            }
          }
        }
        else
        {
          sub_1005728DC(v25, isUniquelyReferenced_nonNull_native);
          unint64_t v27 = sub_10035C28C(v55);
          if ((v26 & 1) != (v28 & 1)) {
            goto LABEL_48;
          }
          unint64_t v22 = v27;
          if ((v26 & 1) == 0)
          {
LABEL_23:
            v19[(v22 >> 6) + 8] |= 1 << v22;
            *(unsigned char *)(v19[6] + v22) = v55;
            *(void *)(v19[7] + 8 * v22) = a6;
            uint64_t v35 = v19[2];
            BOOL v32 = __OFADD__(v35, 1);
            uint64_t v36 = v35 + 1;
            if (v32) {
              goto LABEL_46;
            }
            long long v19[2] = v36;
LABEL_25:
            swift_bridgeObjectRelease();
LABEL_26:
            uint64_t v34 = qword_100677038[v52] | v18;
            goto LABEL_27;
          }
        }
        *(void *)(v19[7] + 8 * v22) = a6;
        goto LABEL_25;
      }
    }
    swift_endAccess();
    uint64_t v19 = _swiftEmptyDictionarySingleton;
    if ((a7 & 1) == 0)
    {
      sub_10003B754(&qword_100788DD0);
      uint64_t v19 = (void *)static _DictionaryStorage.allocate(capacity:)();
      unint64_t v29 = sub_10035C28C(a5);
      if (v30) {
        goto LABEL_43;
      }
      v19[(v29 >> 6) + 8] |= 1 << v29;
      *(unsigned char *)(v19[6] + v29) = a5;
      *(void *)(v19[7] + 8 * v29) = a6;
      uint64_t v31 = v19[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_44;
      }
      long long v19[2] = v33;
    }
    uint64_t v34 = qword_100677038[v52];
    swift_retain();
LABEL_27:
    swift_beginAccess();
    swift_retain();
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *(void **)(v9 + 88);
    *(void *)(v9 + 88) = 0x8000000000000000;
    unint64_t v40 = sub_10035C1D0(v13);
    uint64_t v41 = v38[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      goto LABEL_41;
    }
    char v44 = v39;
    if (v38[3] >= v43)
    {
      if (v37)
      {
        unint64_t v47 = v38;
        if (v39) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_100360FD4();
        unint64_t v47 = v38;
        if (v44) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_100572604(v43, v37);
      uint64_t v45 = sub_10035C1D0(v13);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_47;
      }
      unint64_t v40 = v45;
      unint64_t v47 = v38;
      if (v44)
      {
LABEL_3:
        uint64_t v12 = (void *)(v47[7] + 16 * v40);
        *uint64_t v12 = v19;
        v12[1] = v34;
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    v47[(v40 >> 6) + 8] |= 1 << v40;
    *(void *)(v47[6] + 8 * v40) = v13;
    Swift::tuple_title_String_isValid_Bool v48 = (void *)(v47[7] + 16 * v40);
    *Swift::tuple_title_String_isValid_Bool v48 = v19;
    v48[1] = v34;
    uint64_t v49 = v47[2];
    BOOL v32 = __OFADD__(v49, 1);
    uint64_t v50 = v49 + 1;
    if (v32) {
      goto LABEL_42;
    }
    v47[2] = v50;
    swift_retain();
LABEL_4:
    ++v11;
    *(void *)(v9 + 88) = v47;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    a5 = v55;
    if (v8 == v11) {
      return swift_unknownObjectRelease();
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  sub_10003B754(&qword_10078E370);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_48:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003CBD98(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = a1;
  if (a1 >> 62) {
    goto LABEL_54;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v55 = v7;
    unint64_t v56 = v7 & 0xC000000000000001;
    uint64_t v50 = (char)a2;
    uint64_t v9 = 4;
    uint64_t v52 = a2;
    uint64_t v53 = a2;
    uint64_t v54 = v8;
    while (1)
    {
      uint64_t v12 = v9 - 4;
      if (!v56) {
        break;
      }
      uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v7 = v9 - 3;
      if (__OFADD__(v12, 1)) {
        goto LABEL_47;
      }
LABEL_11:
      swift_beginAccess();
      uint64_t v14 = *(void *)(v5 + 88);
      if (*(void *)(v14 + 16))
      {
        uint64_t v15 = sub_10035C1D0(v13);
        if (v16)
        {
          unint64_t v17 = (void *)(*(void *)(v14 + 56) + 16 * v15);
          uint64_t v18 = (void *)*v17;
          uint64_t v19 = v17[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          if (a4) {
            goto LABEL_34;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v22 = sub_10035C28C(v52);
          uint64_t v23 = v18[2];
          BOOL v24 = (v21 & 1) == 0;
          uint64_t v25 = v23 + v24;
          if (__OFADD__(v23, v24)) {
            goto LABEL_52;
          }
          a2 = v21;
          if (v18[3] >= v25)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              if ((v21 & 1) == 0) {
                goto LABEL_31;
              }
            }
            else
            {
              sub_100361174();
              if ((a2 & 1) == 0) {
                goto LABEL_31;
              }
            }
          }
          else
          {
            sub_1005728DC(v25, isUniquelyReferenced_nonNull_native);
            unint64_t v26 = sub_10035C28C(v52);
            if ((a2 & 1) != (v27 & 1)) {
              goto LABEL_59;
            }
            unint64_t v22 = v26;
            if ((a2 & 1) == 0)
            {
LABEL_31:
              v18[(v22 >> 6) + 8] |= 1 << v22;
              *(unsigned char *)(v18[6] + v22) = v52;
              *(void *)(v18[7] + 8 * v22) = a3;
              uint64_t v34 = v18[2];
              BOOL v31 = __OFADD__(v34, 1);
              uint64_t v35 = v34 + 1;
              if (v31) {
                goto LABEL_53;
              }
              void v18[2] = v35;
LABEL_33:
              swift_bridgeObjectRelease();
LABEL_34:
              uint64_t v33 = qword_100677038[v50] | v19;
              goto LABEL_35;
            }
          }
          *(void *)(v18[7] + 8 * v22) = a3;
          goto LABEL_33;
        }
      }
      swift_endAccess();
      uint64_t v18 = &_swiftEmptyDictionarySingleton;
      if ((a4 & 1) == 0)
      {
        sub_10003B754(&qword_100788DD0);
        uint64_t v18 = (void *)static _DictionaryStorage.allocate(capacity:)();
        a2 = v52;
        unint64_t v28 = sub_10035C28C(v52);
        if (v29) {
          goto LABEL_50;
        }
        v18[(v28 >> 6) + 8] |= 1 << v28;
        *(unsigned char *)(v18[6] + v28) = v52;
        *(void *)(v18[7] + 8 * v28) = a3;
        uint64_t v30 = v18[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_51;
        }
        void v18[2] = v32;
      }
      uint64_t v33 = 0;
      switch(v53)
      {
        case 2:
          uint64_t v33 = 2;
          break;
        case 3:
          uint64_t v33 = 1;
          break;
        case 4:
          uint64_t v33 = 4;
          break;
        default:
          break;
      }
LABEL_35:
      swift_beginAccess();
      swift_retain();
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      char v37 = *(void **)(v5 + 88);
      *(void *)(v5 + 88) = 0x8000000000000000;
      unint64_t v39 = sub_10035C1D0(v13);
      uint64_t v40 = v37[2];
      BOOL v41 = (v38 & 1) == 0;
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41)) {
        goto LABEL_48;
      }
      a2 = v38;
      if (v37[3] >= v42)
      {
        if (v36)
        {
          uint64_t v45 = v37;
          if (v38) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_100362594();
          uint64_t v45 = v37;
          if (a2) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1005748B8(v42, v36);
        uint64_t v43 = sub_10035C1D0(v13);
        if ((a2 & 1) != (v44 & 1))
        {
          sub_10003B754((uint64_t *)&unk_100788D30);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
LABEL_59:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          JUMPOUT(0x1003CC294);
        }
        unint64_t v39 = v43;
        uint64_t v45 = v37;
        if (a2)
        {
LABEL_4:
          unint64_t v10 = (void *)(v45[7] + 16 * v39);
          swift_bridgeObjectRelease();
          void *v10 = v18;
          v10[1] = v33;
          goto LABEL_5;
        }
      }
      v45[(v39 >> 6) + 8] |= 1 << v39;
      *(void *)(v45[6] + 8 * v39) = v13;
      char v46 = (void *)(v45[7] + 16 * v39);
      *char v46 = v18;
      v46[1] = v33;
      uint64_t v47 = v45[2];
      BOOL v31 = __OFADD__(v47, 1);
      uint64_t v48 = v47 + 1;
      if (v31) {
        goto LABEL_49;
      }
      void v45[2] = v48;
      swift_retain();
LABEL_5:
      *(void *)(v5 + 88) = v45;
      swift_release();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      ++v9;
      BOOL v11 = v7 == v54;
      uint64_t v7 = v55;
      if (v11) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v13 = *(void *)(v7 + 8 * v9);
    swift_retain();
    uint64_t v7 = v9 - 3;
    if (!__OFADD__(v12, 1)) {
      goto LABEL_11;
    }
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003CC2A8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, signed __int8 a5, uint64_t a6, char a7)
{
  int64_t v8 = a4 >> 1;
  if (a4 >> 1 == a3) {
    return result;
  }
  uint64_t v9 = v7;
  uint64_t v11 = a3;
  swift_unknownObjectRetain();
  uint64_t v52 = a5;
  unsigned __int8 v55 = a5;
  while (v11 < v8)
  {
    uint64_t v13 = *(void *)(a2 + 8 * v11);
    swift_beginAccess();
    uint64_t v14 = *(void *)(v9 + 88);
    if (*(void *)(v14 + 16))
    {
      uint64_t v15 = sub_10035C1D0(v13);
      if (v16)
      {
        unint64_t v17 = (void *)(*(void *)(v14 + 56) + 16 * v15);
        uint64_t v19 = (void *)*v17;
        uint64_t v18 = v17[1];
        swift_endAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        if (a7) {
          goto LABEL_26;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v22 = sub_10035C28C(a5);
        uint64_t v23 = v19[2];
        BOOL v24 = (v21 & 1) == 0;
        uint64_t v25 = v23 + v24;
        if (__OFADD__(v23, v24)) {
          goto LABEL_45;
        }
        char v26 = v21;
        if (v19[3] >= v25)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v21 & 1) == 0) {
              goto LABEL_23;
            }
          }
          else
          {
            sub_100361174();
            if ((v26 & 1) == 0) {
              goto LABEL_23;
            }
          }
        }
        else
        {
          sub_1005728DC(v25, isUniquelyReferenced_nonNull_native);
          unint64_t v27 = sub_10035C28C(v55);
          if ((v26 & 1) != (v28 & 1)) {
            goto LABEL_48;
          }
          unint64_t v22 = v27;
          if ((v26 & 1) == 0)
          {
LABEL_23:
            v19[(v22 >> 6) + 8] |= 1 << v22;
            *(unsigned char *)(v19[6] + v22) = v55;
            *(void *)(v19[7] + 8 * v22) = a6;
            uint64_t v35 = v19[2];
            BOOL v32 = __OFADD__(v35, 1);
            uint64_t v36 = v35 + 1;
            if (v32) {
              goto LABEL_46;
            }
            long long v19[2] = v36;
LABEL_25:
            swift_bridgeObjectRelease();
LABEL_26:
            uint64_t v34 = qword_100677038[v52] | v18;
            goto LABEL_27;
          }
        }
        *(void *)(v19[7] + 8 * v22) = a6;
        goto LABEL_25;
      }
    }
    swift_endAccess();
    uint64_t v19 = &_swiftEmptyDictionarySingleton;
    if ((a7 & 1) == 0)
    {
      sub_10003B754(&qword_100788DD0);
      uint64_t v19 = (void *)static _DictionaryStorage.allocate(capacity:)();
      unint64_t v29 = sub_10035C28C(a5);
      if (v30) {
        goto LABEL_43;
      }
      v19[(v29 >> 6) + 8] |= 1 << v29;
      *(unsigned char *)(v19[6] + v29) = a5;
      *(void *)(v19[7] + 8 * v29) = a6;
      uint64_t v31 = v19[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_44;
      }
      long long v19[2] = v33;
    }
    uint64_t v34 = qword_100677038[v52];
    swift_retain();
LABEL_27:
    swift_beginAccess();
    swift_retain();
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *(void **)(v9 + 88);
    *(void *)(v9 + 88) = 0x8000000000000000;
    unint64_t v40 = sub_10035C1D0(v13);
    uint64_t v41 = v38[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      goto LABEL_41;
    }
    char v44 = v39;
    if (v38[3] >= v43)
    {
      if (v37)
      {
        uint64_t v47 = v38;
        if (v39) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_100362594();
        uint64_t v47 = v38;
        if (v44) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1005748B8(v43, v37);
      uint64_t v45 = sub_10035C1D0(v13);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_47;
      }
      unint64_t v40 = v45;
      uint64_t v47 = v38;
      if (v44)
      {
LABEL_3:
        uint64_t v12 = (void *)(v47[7] + 16 * v40);
        swift_bridgeObjectRelease();
        *uint64_t v12 = v19;
        v12[1] = v34;
        goto LABEL_4;
      }
    }
    v47[(v40 >> 6) + 8] |= 1 << v40;
    *(void *)(v47[6] + 8 * v40) = v13;
    uint64_t v48 = (void *)(v47[7] + 16 * v40);
    *uint64_t v48 = v19;
    v48[1] = v34;
    uint64_t v49 = v47[2];
    BOOL v32 = __OFADD__(v49, 1);
    uint64_t v50 = v49 + 1;
    if (v32) {
      goto LABEL_42;
    }
    v47[2] = v50;
    swift_retain();
LABEL_4:
    ++v11;
    *(void *)(v9 + 88) = v47;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    a5 = v55;
    if (v8 == v11) {
      return swift_unknownObjectRelease();
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  sub_10003B754((uint64_t *)&unk_100788D30);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_48:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003CC6E0(int64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = IndexPath.row.getter();
  uint64_t v15 = IndexPath.row.getter();
  uint64_t v16 = v15 + a2;
  if (__OFADD__(v15, a2))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v16 < v14)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v17 = IndexPath.section.getter();
  if ((v17 & 0x8000000000000000) != 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  a1 = v17;
  uint64_t v4 = *v5;
  if (v17 >= *(void *)(*v5 + 16))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v18 = v4 + 16 * v17;
  a2 = *(void *)(v18 + 32);
  unint64_t v3 = *(void *)(v18 + 40);
  unint64_t v38 = v3 >> 62;
  if (!(v3 >> 62))
  {
    uint64_t v19 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    if (v19 >= v14) {
      goto LABEL_7;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
LABEL_37:
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v19 < v14) {
    goto LABEL_38;
  }
LABEL_7:
  if (v14 < 0)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    uint64_t result = (uint64_t)sub_100366F28(v4);
    uint64_t v4 = result;
    goto LABEL_21;
  }
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  a1 = v14;
  if (v38)
  {
    swift_bridgeObjectRetain();
    a2 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    a2 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (a2 < v16) {
    goto LABEL_40;
  }
  if ((v3 & 0xC000000000000001) != 0 && v14 != v16)
  {
    if (v14 >= (unint64_t)v16)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    Swift::Int v21 = v14;
    do
    {
      sub_10003B754(&qword_10078E370);
      _ArrayBuffer._typeCheckSlowPath(_:)(v21++);
    }
    while (v16 != v21);
  }
  uint64_t v19 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v38)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.subscript.getter();
    a2 = v22;
    uint64_t v37 = v23;
    unint64_t v38 = v24;
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_release();
    a2 = v19 + 32;
    uint64_t v37 = v14;
    unint64_t v38 = (2 * v16) | 1;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  a1 = v36;
  if ((result & 1) == 0) {
    goto LABEL_41;
  }
LABEL_21:
  if (a1 >= *(void *)(v4 + 16))
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t result = sub_10054EB9C(v14, v16);
  *uint64_t v5 = v4;
  uint64_t v25 = v37;
  uint64_t v26 = (v38 >> 1) - v37;
  if (v38 >> 1 == v37) {
    return v19;
  }
  if ((uint64_t)(v38 >> 1) > v37)
  {
    swift_unknownObjectRetain();
    uint64_t v36 = a2;
    unint64_t v27 = (uint64_t *)(a2 + 8 * v25);
    do
    {
      uint64_t v28 = *v27;
      uint64_t v29 = *v27 + *(void *)(*(void *)*v27 + 144);
      swift_beginAccess();
      sub_100024578(v29, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_retain();
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1003CD538((uint64_t)v13, v28);
      sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      uint64_t v30 = sub_10035C1D0(v28);
      if (v31)
      {
        uint64_t v32 = v30;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = v5[2];
        uint64_t v39 = v34;
        uint64_t v5[2] = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100360BDC();
          uint64_t v34 = v39;
        }
        swift_release();
        sub_10035F6CC(v32, v34);
        uint64_t v5[2] = v34;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      ++v27;
      --v26;
    }
    while (v26);
    swift_unknownObjectRelease();
    return v19;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1003CCB4C(int64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = IndexPath.row.getter();
  uint64_t v15 = IndexPath.row.getter();
  uint64_t v16 = v15 + a2;
  if (__OFADD__(v15, a2))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v16 < v14)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v17 = IndexPath.section.getter();
  if ((v17 & 0x8000000000000000) != 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  a1 = v17;
  uint64_t v4 = *v5;
  if (v17 >= *(void *)(*v5 + 16))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v18 = v4 + 16 * v17;
  a2 = *(void *)(v18 + 32);
  unint64_t v3 = *(void *)(v18 + 40);
  unint64_t v38 = v3 >> 62;
  if (!(v3 >> 62))
  {
    uint64_t v19 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    if (v19 >= v14) {
      goto LABEL_7;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
LABEL_37:
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v19 < v14) {
    goto LABEL_38;
  }
LABEL_7:
  if (v14 < 0)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    uint64_t result = (uint64_t)sub_100366FA0(v4);
    uint64_t v4 = result;
    goto LABEL_21;
  }
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  a1 = v14;
  if (v38)
  {
    swift_bridgeObjectRetain();
    a2 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    a2 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (a2 < v16) {
    goto LABEL_40;
  }
  if ((v3 & 0xC000000000000001) != 0 && v14 != v16)
  {
    if (v14 >= (unint64_t)v16)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    Swift::Int v21 = v14;
    do
    {
      sub_10003B754((uint64_t *)&unk_100788D30);
      _ArrayBuffer._typeCheckSlowPath(_:)(v21++);
    }
    while (v16 != v21);
  }
  uint64_t v19 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v38)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.subscript.getter();
    a2 = v22;
    uint64_t v37 = v23;
    unint64_t v38 = v24;
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_release();
    a2 = v19 + 32;
    uint64_t v37 = v14;
    unint64_t v38 = (2 * v16) | 1;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  a1 = v36;
  if ((result & 1) == 0) {
    goto LABEL_41;
  }
LABEL_21:
  if (a1 >= *(void *)(v4 + 16))
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t result = sub_10054EEAC(v14, v16);
  *uint64_t v5 = v4;
  uint64_t v25 = v37;
  uint64_t v26 = (v38 >> 1) - v37;
  if (v38 >> 1 == v37) {
    return v19;
  }
  if ((uint64_t)(v38 >> 1) > v37)
  {
    swift_unknownObjectRetain();
    uint64_t v36 = a2;
    unint64_t v27 = (uint64_t *)(a2 + 8 * v25);
    do
    {
      uint64_t v28 = *v27;
      uint64_t v29 = *v27 + *(void *)(*(void *)*v27 + 144);
      swift_beginAccess();
      sub_100024578(v29, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_retain();
      TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
      sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_1003CD81C((uint64_t)v13, v28);
      sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      uint64_t v30 = sub_10035C1D0(v28);
      if (v31)
      {
        uint64_t v32 = v30;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = v5[2];
        uint64_t v39 = v34;
        uint64_t v5[2] = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10036216C();
          uint64_t v34 = v39;
        }
        swift_release();
        sub_10035F6CC(v32, v34);
        uint64_t v5[2] = v34;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      ++v27;
      --v26;
    }
    while (v26);
    swift_unknownObjectRelease();
    return v19;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1003CCFB8(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a3;
  uint64_t v9 = *v5;
  if (*(void *)(*v5 + 16) <= a3)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v13 = a5;
  unint64_t v6 = a2;
  uint64_t v11 = a1;
  uint64_t v22 = v5;
  uint64_t v14 = v9 + 16 * a3;
  uint64_t v8 = *(void *)(v14 + 32);
  unint64_t v12 = *(void *)(v14 + 40);
  uint64_t v5 = (uint64_t *)(v12 >> 62);
  if (!(v12 >> 62))
  {
    int64_t v15 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    if (v15 >= v11) {
      goto LABEL_5;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_29:
  swift_bridgeObjectRetain_n();
  swift_retain();
  int64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15 < v11) {
    goto LABEL_30;
  }
LABEL_5:
  if (v11 < 0)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v5)
  {
    swift_bridgeObjectRetain();
    int64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v15 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 < (uint64_t)v6) {
    goto LABEL_32;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    uint64_t result = (uint64_t)sub_100366F28(v9);
    uint64_t v9 = result;
    goto LABEL_21;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    if (v6 < v11)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 != v6)
    {
      if (v11 >= v6)
      {
LABEL_39:
        __break(1u);
        return result;
      }
      Swift::Int v17 = v11;
      do
      {
        sub_10003B754(&qword_10078E370);
        _ArrayBuffer._typeCheckSlowPath(_:)(v17++);
      }
      while (v6 != v17);
    }
  }
  uint64_t v21 = v13;
  uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v8 = v18;
    uint64_t v10 = v19;
    int64_t v15 = v20;
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_release();
    uint64_t v8 = v13 + 32;
    int64_t v15 = (2 * v6) | 1;
    uint64_t v10 = v11;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_34;
  }
LABEL_21:
  if (*(void *)(v9 + 16) <= v7)
  {
    __break(1u);
    goto LABEL_36;
  }
  sub_10054EB9C(v11, v6);
  uint64_t result = swift_unknownObjectRetain();
  if ((a4 & 0x8000000000000000) != 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (*(void *)(v9 + 16) <= a4)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_10054BFE4(v21, v21, v13, v8, v10, v15);
  *uint64_t v22 = v9;
  if (v7 != a4) {
    sub_100087FCC(v13, v8, v10, v15, a4);
  }
  return v13;
}

uint64_t sub_1003CD278(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a3;
  uint64_t v9 = *v5;
  if (*(void *)(*v5 + 16) <= a3)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v13 = a5;
  unint64_t v6 = a2;
  uint64_t v11 = a1;
  uint64_t v22 = v5;
  uint64_t v14 = v9 + 16 * a3;
  uint64_t v8 = *(void *)(v14 + 32);
  unint64_t v12 = *(void *)(v14 + 40);
  uint64_t v5 = (uint64_t *)(v12 >> 62);
  if (!(v12 >> 62))
  {
    int64_t v15 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    if (v15 >= v11) {
      goto LABEL_5;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_29:
  swift_bridgeObjectRetain_n();
  swift_retain();
  int64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15 < v11) {
    goto LABEL_30;
  }
LABEL_5:
  if (v11 < 0)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v5)
  {
    swift_bridgeObjectRetain();
    int64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v15 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 < (uint64_t)v6) {
    goto LABEL_32;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    uint64_t result = (uint64_t)sub_100366FA0(v9);
    uint64_t v9 = result;
    goto LABEL_21;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    if (v6 < v11)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 != v6)
    {
      if (v11 >= v6)
      {
LABEL_39:
        __break(1u);
        return result;
      }
      Swift::Int v17 = v11;
      do
      {
        sub_10003B754((uint64_t *)&unk_100788D30);
        _ArrayBuffer._typeCheckSlowPath(_:)(v17++);
      }
      while (v6 != v17);
    }
  }
  uint64_t v21 = v13;
  uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v8 = v18;
    uint64_t v10 = v19;
    int64_t v15 = v20;
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_release();
    uint64_t v8 = v13 + 32;
    int64_t v15 = (2 * v6) | 1;
    uint64_t v10 = v11;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_34;
  }
LABEL_21:
  if (*(void *)(v9 + 16) <= v7)
  {
    __break(1u);
    goto LABEL_36;
  }
  sub_10054EEAC(v11, v6);
  uint64_t result = swift_unknownObjectRetain();
  if ((a4 & 0x8000000000000000) != 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (*(void *)(v9 + 16) <= a4)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_10054CB60(v21, v21, v13, v8, v10, v15);
  *uint64_t v22 = v9;
  if (v7 != a4) {
    sub_100088660(v13, v8, v10, v15, a4);
  }
  return v13;
}

uint64_t sub_1003CD538(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = (uint64_t *)(v2 + 8);
  uint64_t v15 = *(void *)(v2 + 8);
  if (!*(void *)(v15 + 16)) {
    return 0;
  }
  unint64_t v16 = sub_10035C1D4(a1);
  if ((v17 & 1) == 0) {
    return 0;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  if ((sub_100456D80(a2, v18) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v18 & 0xC000000000000001) != 0) {
    uint64_t v19 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v19 = *(void *)(v18 + 16);
  }
  swift_bridgeObjectRelease();
  if (v19 == 1)
  {
    sub_10035EDF4(a1);
    swift_bridgeObjectRelease();
    return 1;
  }
  sub_100024578(a1, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_100024578((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100024578((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  uint64_t v32 = *v14;
  uint64_t v23 = v32;
  *uint64_t v14 = 0x8000000000000000;
  unint64_t v25 = sub_10035C1D4((uint64_t)v7);
  uint64_t v26 = *(void *)(v23 + 16);
  BOOL v27 = (v24 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (__OFADD__(v26, v27))
  {
    __break(1u);
    goto LABEL_21;
  }
  LOBYTE(v19) = v24;
  if (*(void *)(v23 + 24) >= v28)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v24) {
        goto LABEL_19;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_21:
    sub_100360D68();
    if (v19) {
      goto LABEL_19;
    }
    goto LABEL_22;
  }
  sub_10057225C(v28, isUniquelyReferenced_nonNull_native);
  unint64_t v29 = sub_10035C1D4((uint64_t)v7);
  if ((v19 & 1) == (v30 & 1))
  {
    unint64_t v25 = v29;
    if ((v19 & 1) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    uint64_t v31 = *(void *)(*(void *)(v32 + 56) + 8 * v25);
    sub_10012F414(a2);
    swift_release();
    uint64_t v20 = 1;
    sub_100090A7C(&v31, 1, &v32, v25, (uint64_t)v7);
    swift_bridgeObjectRelease();
    sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *uint64_t v14 = v32;
    sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    return v20;
  }
LABEL_23:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003CD81C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v31 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = (uint64_t *)(v2 + 8);
  uint64_t v15 = *(void *)(v2 + 8);
  if (!*(void *)(v15 + 16)) {
    return 0;
  }
  unint64_t v16 = sub_10035C64C(a1);
  if ((v17 & 1) == 0) {
    return 0;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  if ((sub_100456D80(a2, v18) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v18 & 0xC000000000000001) != 0) {
    uint64_t v19 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v19 = *(void *)(v18 + 16);
  }
  swift_bridgeObjectRelease();
  if (v19 == 1)
  {
    sub_10035F004(a1);
    swift_bridgeObjectRelease();
    return 1;
  }
  sub_100024578(a1, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  sub_100024578((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100024578((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  uint64_t v32 = *v14;
  uint64_t v23 = v32;
  *uint64_t v14 = 0x8000000000000000;
  unint64_t v25 = sub_10035C64C((uint64_t)v8);
  uint64_t v26 = *(void *)(v23 + 16);
  BOOL v27 = (v24 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (__OFADD__(v26, v27))
  {
    __break(1u);
    goto LABEL_21;
  }
  LOBYTE(v19) = v24;
  if (*(void *)(v23 + 24) >= v28)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v24) {
        goto LABEL_19;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_21:
    sub_100362310();
    if (v19) {
      goto LABEL_19;
    }
    goto LABEL_22;
  }
  sub_1005744D8(v28, isUniquelyReferenced_nonNull_native);
  unint64_t v29 = sub_10035C64C((uint64_t)v8);
  if ((v19 & 1) == (v30 & 1))
  {
    unint64_t v25 = v29;
    if ((v19 & 1) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    uint64_t v31 = *(void *)(*(void *)(v32 + 56) + 8 * v25);
    sub_10012F8AC(a2);
    swift_release();
    uint64_t v20 = 1;
    sub_100090BBC(&v31, 1, &v32, v25, (uint64_t)v8);
    swift_bridgeObjectRelease();
    sub_100024448((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    *uint64_t v14 = v32;
    sub_100024448((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return v20;
  }
LABEL_23:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003CDB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char a4@<W4>, char *a5@<X8>)
{
  return sub_1003CDB40(a1, a2, a3, a4, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, a5);
}

uint64_t sub_1003CDB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char a4@<W4>, uint64_t (*a5)(uint64_t)@<X5>, void (*a6)(uint64_t, uint64_t)@<X6>, void (*a7)(uint64_t, void *)@<X7>, char *a8@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v15 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v15 - 8);
  char v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for IndexPath();
  uint64_t v54 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unsigned __int8 v55 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a3 + 16)) {
    goto LABEL_57;
  }
  uint64_t v56 = v19;
  uint64_t result = a5(a1);
  if ((v22 & 1) == 0) {
    goto LABEL_6;
  }
  unint64_t v23 = *(void *)(*(void *)(a3 + 56) + 8 * result);
  if ((v23 & 0x8000000000000000) != 0) {
    goto LABEL_67;
  }
  if (v23 >= *(void *)(a2 + 16))
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (*(void *)(a2 + 16 * v23 + 32) != a1)
  {
LABEL_6:
    uint64_t v19 = v56;
    if (!*(void *)(a3 + 16)) {
      goto LABEL_57;
    }
    uint64_t result = a5(a1);
    uint64_t v19 = v56;
    if ((v24 & 1) == 0) {
      goto LABEL_57;
    }
    unint64_t v25 = *(void *)(*(void *)(a3 + 56) + 8 * result);
    if (a4)
    {
      unint64_t v50 = v25;
      uint64_t Strong = swift_weakLoadStrong();
      uint64_t result = swift_retain();
      uint64_t v27 = 0;
      if (Strong)
      {
        uint64_t v28 = a1;
        uint64_t v52 = v18;
        uint64_t v53 = a8;
        uint64_t v51 = v17;
        do
        {
          BOOL v29 = __OFADD__(v27++, 1);
          if (v29)
          {
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
            goto LABEL_68;
          }
          uint64_t v30 = Strong;
          swift_beginAccess();
          unint64_t v31 = *(void *)(Strong + 64);
          if (v31 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t result = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v32 = result;
            if (!result)
            {
LABEL_11:
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_12;
            }
          }
          else
          {
            uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            uint64_t result = swift_bridgeObjectRetain();
            if (!v32) {
              goto LABEL_11;
            }
          }
          if ((v31 & 0xC000000000000001) != 0)
          {
            uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v33 = result;
            if (result != v28) {
              goto LABEL_19;
            }
          }
          else
          {
            if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_66;
            }
            uint64_t v33 = *(void *)(v31 + 32);
            uint64_t result = swift_retain();
            if (v33 != v28)
            {
LABEL_19:
              uint64_t v34 = 0;
              uint64_t v35 = v32 - 1;
              while (1)
              {
                BOOL v29 = __OFADD__(v27, 1);
                uint64_t v36 = v27 + 1;
                if (v29) {
                  break;
                }
                if (*(unsigned char *)(v33 + 48))
                {
                  v58[0] = 0;
                  v57(v33, v58);
                  uint64_t v37 = v58[0];
                  *(void *)(v33 + 40) = v58[0];
                  *(unsigned char *)(v33 + 48) = 0;
                }
                else
                {
                  uint64_t v37 = *(void *)(v33 + 40);
                }
                uint64_t result = swift_release();
                BOOL v29 = __OFADD__(v36, v37);
                uint64_t v27 = v36 + v37;
                if (v29) {
                  goto LABEL_62;
                }
                if (v35 == v34)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  goto LABEL_35;
                }
                unint64_t v38 = v34 + 1;
                if ((v31 & 0xC000000000000001) != 0)
                {
                  uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  uint64_t v33 = result;
                  if (__OFADD__(v38, 1)) {
                    goto LABEL_63;
                  }
                }
                else
                {
                  if (v38 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_64;
                  }
                  uint64_t v33 = *(void *)(v31 + 8 * v34 + 40);
                  uint64_t result = swift_retain();
                  if (__OFADD__(v38, 1)) {
                    goto LABEL_63;
                  }
                }
                ++v34;
                if (v33 == v28) {
                  goto LABEL_33;
                }
              }
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
          }
LABEL_33:
          swift_bridgeObjectRelease();
          swift_release_n();
LABEL_35:
          uint64_t v18 = v52;
          a8 = v53;
          char v17 = v51;
LABEL_12:
          uint64_t Strong = swift_weakLoadStrong();
          uint64_t result = swift_release();
          uint64_t v28 = v30;
        }
        while (Strong);
      }
      swift_release();
      uint64_t result = v27 - 1;
      if (!__OFSUB__(v27, 1))
      {
        uint64_t v47 = v55;
        if ((result & 0x8000000000000000) == 0)
        {
          IndexPath.init(row:section:)();
          char v46 = *(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56);
          v46(v17, 0, 1, v18);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v17, 1, v18) == 1) {
            goto LABEL_58;
          }
LABEL_59:
          uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
          v56 += 32;
          v48(v47, v17, v18);
          uint64_t result = IndexPath.row.modify();
          if (!__OFADD__(*v49, 1))
          {
            ++*v49;
            ((void (*)(void *, void))result)(v58, 0);
            v48(a8, v47, v18);
            return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v46)(a8, 0, 1, v18);
          }
          goto LABEL_72;
        }
LABEL_56:
        uint64_t v19 = v56;
LABEL_57:
        char v46 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
        v46(v17, 1, 1, v18);
        goto LABEL_58;
      }
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      return result;
    }
    if ((v25 & 0x8000000000000000) == 0)
    {
      if (v25 < *(void *)(a2 + 16))
      {
        swift_retain();
        uint64_t v43 = swift_bridgeObjectRetain();
        a6(v43, a1);
        char v45 = v44;
        swift_bridgeObjectRelease();
        swift_release();
        if ((v45 & 1) == 0)
        {
          IndexPath.init(row:section:)();
          char v46 = *(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56);
          v46(v17, 0, 1, v18);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v17, 1, v18) != 1)
          {
            uint64_t v47 = v55;
            goto LABEL_59;
          }
LABEL_58:
          sub_10003B6F8((uint64_t)v17, &qword_10078E8F0);
          return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v46)(a8, 1, 1, v18);
        }
        goto LABEL_56;
      }
      goto LABEL_70;
    }
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (*(void *)(a3 + 16) && (a5(a1), (v39 & 1) != 0))
  {
    IndexPath.init(row:section:)();
    unint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
    uint64_t v41 = a8;
    uint64_t v42 = 0;
  }
  else
  {
    unint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
    uint64_t v41 = a8;
    uint64_t v42 = 1;
  }

  return v40((uint64_t)v41, v42, 1, v18);
}

uint64_t sub_1003CE1BC(unsigned __int8 *a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - v12;
  int v14 = a1[72];
  uint64_t v15 = (uint64_t)&a1[*(void *)(*(void *)a1 + 144)];
  if (v14 == 1)
  {
    swift_beginAccess();
    sub_100024578(v15, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1005A2CAC((uint64_t)v13, (uint64_t)v10);
    return sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  else
  {
    swift_beginAccess();
    sub_100024578(v15, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10012F180((uint64_t)v4);
    sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    return sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_10078E360);
  }
}

uint64_t sub_1003CE408(unsigned __int8 *a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10078E260);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v17 - v12;
  int v14 = a1[72];
  uint64_t v15 = (uint64_t)&a1[*(void *)(*(void *)a1 + 144)];
  if (v14 == 1)
  {
    swift_beginAccess();
    sub_100024578(v15, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
    sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_1005A3E00((uint64_t)v13, (uint64_t)v11);
    return sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  else
  {
    swift_beginAccess();
    sub_100024578(v15, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
    sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10012F618((uint64_t)v4);
    sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_10078E260);
  }
}

uint64_t sub_1003CE654(void (*a1)(uint64_t), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = (char *)v6;
  uint64_t v75 = qword_10078DEE0;
  uint64_t v11 = *(void *)(v6 + qword_10078DEE0);
  if (!v11)
  {
    uint64_t v12 = sub_100127BA8(v6, a3, a4);
    if (a5) {
      goto LABEL_3;
    }
LABEL_9:
    swift_retain();
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v6 + qword_10078DEE0);
  if (!a5) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  *(void *)(v13 + 24) = a6;
  int v14 = (char **)(v12 + 64);
  swift_beginAccess();
  uint64_t v15 = *(char **)(v12 + 64);
  swift_retain();
  sub_10006C140(a5);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v12 + 64) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v15 = sub_10056FF08(0, *((void *)v15 + 2) + 1, 1, v15);
    *int v14 = v15;
  }
  unint64_t v18 = *((void *)v15 + 2);
  unint64_t v17 = *((void *)v15 + 3);
  if (v18 >= v17 >> 1)
  {
    uint64_t v15 = sub_10056FF08((char *)(v17 > 1), v18 + 1, 1, v15);
    *int v14 = v15;
  }
  *((void *)v15 + 2) = v18 + 1;
  uint64_t v19 = &v15[16 * v18];
  *((void *)v19 + 4) = sub_1003E2230;
  *((void *)v19 + 5) = v13;
  swift_endAccess();
LABEL_10:
  a1(v12);
  if (!v11)
  {
    if (*(unsigned char *)(v12 + 72))
    {
      swift_release();
LABEL_27:
      *(void *)&v7[v75] = 0;
      return swift_release();
    }
    swift_beginAccess();
    if (!*(void *)(*(void *)(v12 + 80) + 16) && !*(void *)(*(void *)(v12 + 88) + 16))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(v12 + 96) + 16))
      {
        sub_1000145EC(v6 + qword_10078DEA8, (uint64_t)&v79);
        uint64_t v66 = v82;
        uint64_t v67 = v83;
        sub_100038D28(&v79, v82);
        (*(void (**)(uint64_t, uint64_t))(v67 + 24))(v66, v67);
        swift_release();
        uint64_t v64 = &v79;
LABEL_26:
        sub_100038CD8((uint64_t)v64);
        goto LABEL_27;
      }
    }
    uint64_t v20 = *(void *)(v12 + 48);
    uint64_t v21 = *(void *)(v12 + 56);
    char v22 = (uint64_t *)(v6 + qword_10078DEE8);
    swift_beginAccess();
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10040FC28(v20, v23))
    {
      char v25 = sub_10040FC28(v21, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = swift_bridgeObjectRelease();
      if (v25)
      {
LABEL_21:
        __chkstk_darwin(v26);
        uint64_t v27 = swift_beginAccess();
        __chkstk_darwin(v27);
        sub_10003B754((uint64_t *)&unk_10078EED0);
        Set.removeAll(where:)();
        swift_endAccess();
        uint64_t v28 = (void *)sub_1000890D8();
        uint64_t v30 = v29;
        uint64_t v32 = v31;
        char v34 = v33;
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        swift_getObjectType();

        uint64_t v36 = _typeName(_:qualified:)();
        sub_1001165A4(v28, v30, v32, v34 & 1, v36, v37, &v79);
        uint64_t v38 = v80;
        uint64_t v74 = v79;
        uint64_t v39 = v82;
        uint64_t v73 = v81;
        uint64_t v41 = v83;
        uint64_t v40 = v84;
        uint64_t v71 = v7;
        uint64_t v43 = v85;
        uint64_t v42 = v86;
        uint64_t v44 = v87;
        uint64_t v70 = v88;
        uint64_t v45 = v89;
        uint64_t v72 = v90;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v79 = v74;
        uint64_t v80 = v38;
        uint64_t v81 = v73;
        uint64_t v82 = v39;
        uint64_t v83 = v41;
        uint64_t v84 = v40;
        uint64_t v85 = v43;
        uint64_t v86 = v42;
        uint64_t v7 = v71;
        uint64_t v87 = v44;
        uint64_t v88 = v70;
        uint64_t v89 = v45;
        uint64_t v46 = *(void *)&v71[qword_10078DEB8];
        if (v46
          && (uint64_t v47 = *(uint64_t (**)(uint64_t))(v46 + 16),
              uint64_t v48 = swift_retain(),
              char v49 = v47(v48),
              swift_release(),
              (v49 & 1) != 0))
        {
          uint64_t v50 = swift_allocObject();
          *(void *)(v50 + 16) = v71;
          *(void *)(v50 + 24) = v12;
          uint64_t v51 = v50;
          uint64_t v52 = v71;
          swift_retain();
          uint64_t v53 = sub_1003E1F8C;
        }
        else
        {
          uint64_t v53 = 0;
          uint64_t v51 = 0;
        }
        uint64_t v54 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v69 = (uint64_t)&v71[qword_10078DEA8];
        sub_1000145EC((uint64_t)&v71[qword_10078DEA8], (uint64_t)v76);
        uint64_t v55 = v77;
        uint64_t v56 = v78;
        sub_100038D28(v76, v77);
        uint64_t v57 = *(void (**)(uint64_t *, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v56 + 32);
        swift_retain();
        uint64_t v68 = (uint64_t)v53;
        v57(&v79, sub_1001400F8, v54, v53, v51, sub_1003E1EAC, v12, v55, v56);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v76);
        uint64_t v58 = *(void *)(v12 + 16);
        uint64_t v59 = *(void *)(v12 + 24);
        uint64_t v60 = *(void *)(v12 + 32);
        char v61 = *(unsigned char *)(v12 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001292D0(v72, v58, v59, v60, v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000145EC(v69, (uint64_t)v76);
        uint64_t v62 = v77;
        uint64_t v63 = v78;
        sub_100038D28(v76, v77);
        (*(void (**)(uint64_t, uint64_t))(v63 + 24))(v62, v63);
        swift_release();
        sub_1000499C4(v68);
        swift_release();
        uint64_t v64 = v76;
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
    swift_release();
    uint64_t v26 = swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  return swift_release();
}

uint64_t sub_1003CEE4C(void (*a1)(uint64_t), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = (char *)v6;
  uint64_t v75 = qword_10078DEE0;
  uint64_t v11 = *(void *)(v6 + qword_10078DEE0);
  if (!v11)
  {
    uint64_t v12 = sub_100127BDC(v6, a3, a4);
    if (a5) {
      goto LABEL_3;
    }
LABEL_9:
    swift_retain();
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(v6 + qword_10078DEE0);
  if (!a5) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  *(void *)(v13 + 24) = a6;
  int v14 = (char **)(v12 + 64);
  swift_beginAccess();
  uint64_t v15 = *(char **)(v12 + 64);
  swift_retain();
  sub_10006C140(a5);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v12 + 64) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v15 = sub_10056FF08(0, *((void *)v15 + 2) + 1, 1, v15);
    *int v14 = v15;
  }
  unint64_t v18 = *((void *)v15 + 2);
  unint64_t v17 = *((void *)v15 + 3);
  if (v18 >= v17 >> 1)
  {
    uint64_t v15 = sub_10056FF08((char *)(v17 > 1), v18 + 1, 1, v15);
    *int v14 = v15;
  }
  *((void *)v15 + 2) = v18 + 1;
  uint64_t v19 = &v15[16 * v18];
  *((void *)v19 + 4) = sub_1003078E0;
  *((void *)v19 + 5) = v13;
  swift_endAccess();
LABEL_10:
  a1(v12);
  if (!v11)
  {
    if (*(unsigned char *)(v12 + 72))
    {
      swift_release();
LABEL_27:
      *(void *)&v7[v75] = 0;
      return swift_release();
    }
    swift_beginAccess();
    if (!*(void *)(*(void *)(v12 + 80) + 16) && !*(void *)(*(void *)(v12 + 88) + 16))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(v12 + 96) + 16))
      {
        sub_1000145EC(v6 + qword_10078DEA8, (uint64_t)&v79);
        uint64_t v66 = v82;
        uint64_t v67 = v83;
        sub_100038D28(&v79, v82);
        (*(void (**)(uint64_t, uint64_t))(v67 + 24))(v66, v67);
        swift_release();
        uint64_t v64 = &v79;
LABEL_26:
        sub_100038CD8((uint64_t)v64);
        goto LABEL_27;
      }
    }
    uint64_t v20 = *(void *)(v12 + 48);
    uint64_t v21 = *(void *)(v12 + 56);
    char v22 = (uint64_t *)(v6 + qword_10078DEE8);
    swift_beginAccess();
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_100410230(v20, v23))
    {
      char v25 = sub_100410230(v21, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = swift_bridgeObjectRelease();
      if (v25)
      {
LABEL_21:
        __chkstk_darwin(v26);
        uint64_t v27 = swift_beginAccess();
        __chkstk_darwin(v27);
        sub_10003B754(&qword_100788D88);
        Set.removeAll(where:)();
        swift_endAccess();
        uint64_t v28 = (void *)sub_100089354();
        uint64_t v30 = v29;
        uint64_t v32 = v31;
        char v34 = v33;
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        swift_getObjectType();

        uint64_t v36 = _typeName(_:qualified:)();
        sub_100117258(v28, v30, v32, v34 & 1, v36, v37, &v79);
        uint64_t v38 = v80;
        uint64_t v74 = v79;
        uint64_t v39 = v82;
        uint64_t v73 = v81;
        uint64_t v41 = v83;
        uint64_t v40 = v84;
        uint64_t v71 = v7;
        uint64_t v43 = v85;
        uint64_t v42 = v86;
        uint64_t v44 = v87;
        uint64_t v70 = v88;
        uint64_t v45 = v89;
        uint64_t v72 = v90;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v79 = v74;
        uint64_t v80 = v38;
        uint64_t v81 = v73;
        uint64_t v82 = v39;
        uint64_t v83 = v41;
        uint64_t v84 = v40;
        uint64_t v85 = v43;
        uint64_t v86 = v42;
        uint64_t v7 = v71;
        uint64_t v87 = v44;
        uint64_t v88 = v70;
        uint64_t v89 = v45;
        uint64_t v46 = *(void *)&v71[qword_10078DEB8];
        if (v46
          && (uint64_t v47 = *(uint64_t (**)(uint64_t))(v46 + 16),
              uint64_t v48 = swift_retain(),
              char v49 = v47(v48),
              swift_release(),
              (v49 & 1) != 0))
        {
          uint64_t v50 = swift_allocObject();
          *(void *)(v50 + 16) = v71;
          *(void *)(v50 + 24) = v12;
          uint64_t v51 = v50;
          uint64_t v52 = v71;
          swift_retain();
          uint64_t v53 = sub_1003E1EB8;
        }
        else
        {
          uint64_t v53 = 0;
          uint64_t v51 = 0;
        }
        uint64_t v54 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v69 = (uint64_t)&v71[qword_10078DEA8];
        sub_1000145EC((uint64_t)&v71[qword_10078DEA8], (uint64_t)v76);
        uint64_t v55 = v77;
        uint64_t v56 = v78;
        sub_100038D28(v76, v77);
        uint64_t v57 = *(void (**)(uint64_t *, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v56 + 32);
        swift_retain();
        uint64_t v68 = (uint64_t)v53;
        v57(&v79, sub_10013C068, v54, v53, v51, sub_1003E1EAC, v12, v55, v56);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v76);
        uint64_t v58 = *(void *)(v12 + 16);
        uint64_t v59 = *(void *)(v12 + 24);
        uint64_t v60 = *(void *)(v12 + 32);
        char v61 = *(unsigned char *)(v12 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100129688(v72, v58, v59, v60, v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000145EC(v69, (uint64_t)v76);
        uint64_t v62 = v77;
        uint64_t v63 = v78;
        sub_100038D28(v76, v77);
        (*(void (**)(uint64_t, uint64_t))(v63 + 24))(v62, v63);
        swift_release();
        sub_1000499C4(v68);
        swift_release();
        uint64_t v64 = v76;
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
    swift_release();
    uint64_t v26 = swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  return swift_release();
}

uint64_t sub_1003CF644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, long long *))
{
  *(void *)&long long v22 = a6();
  *((void *)&v22 + 1) = v13;
  uint64_t v23 = v14;
  char v24 = v15 & 1;
  uint64_t v16 = qword_10078DED8;
  *(unsigned char *)(a2 + qword_10078DED8) = 1;
  a7(a3, a4, a5, a1, &v22);
  uint64_t v17 = v23;
  char v18 = v24;
  uint64_t v19 = a2 + qword_10078DED0;
  uint64_t v20 = *(void *)(a2 + qword_10078DED0);
  *(_OWORD *)uint64_t v19 = v22;
  *(void *)(v19 + 16) = v17;
  *(unsigned char *)(v19 + 24) = v18;
  uint64_t result = sub_1000349CC(v20);
  *(unsigned char *)(a2 + v16) = 0;
  return result;
}

uint64_t sub_1003CF714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char **a5)
{
  uint64_t v149 = a5;
  uint64_t v154 = a3;
  uint64_t v145 = a2;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v140 = (uint64_t)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v153 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v147 = (uint64_t)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexSet();
  unint64_t v152 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v138 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for IndexSet.Index();
  uint64_t v12 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v141 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v150 = (char *)&v121 - v15;
  uint64_t v16 = sub_10003B754(&qword_10079D9E0);
  __chkstk_darwin(v16);
  uint64_t v144 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for IndexPath();
  uint64_t v21 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  NSString v148 = (char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  Swift::String v146 = (char *)&v121 - v24;
  __chkstk_darwin(v25);
  uint64_t v143 = (char *)&v121 - v26;
  uint64_t result = IndexSet.isEmpty.getter();
  if (result) {
    return result;
  }
  uint64_t v28 = *(void *)(v5 + qword_10078DEB0);
  if (!v28) {
    return result;
  }
  uint64_t v137 = v5;
  BOOL v29 = *(uint64_t (**)(uint64_t))(v28 + 16);
  uint64_t v30 = swift_retain();
  if ((v29(v30) & 1) == 0
    || (uint64_t v133 = v28,
        uint64_t v132 = v10,
        sub_1000890D8(),
        uint64_t v32 = sub_100091DF0(v145, v31),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        !v32))
  {
LABEL_12:
    return swift_release();
  }
  if (*(unsigned char *)(v32 + 72) != 2)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v33 = sub_1000890D8();
  sub_1003CDB40(v32, v33, v35, v34 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = v151;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v151) == 1)
  {
    sub_10003B6F8((uint64_t)v20, &qword_10078E8F0);
    if (qword_1007852B8 != -1) {
      goto LABEL_82;
    }
    goto LABEL_8;
  }
  uint64_t v131 = v32;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v41 = v21 + 32;
  v42(v143, v20, v36);
  uint64_t v43 = v144;
  IndexSet.makeIterator()();
  uint64_t v44 = &v43[*(int *)(v16 + 36)];
  uint64_t v127 = v137 + qword_10078DE98;
  uint64_t v155 = a4 + 80;
  uint64_t v129 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v130 = v12 + 16;
  unint64_t v128 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v126 = (void (**)(char *, uint64_t, uint64_t))(v152 + 16);
  uint64_t v125 = (void (**)(char *, uint64_t))(v152 + 8);
  uint64_t v124 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56);
  Swift::Int v123 = (void (**)(char *, char *, uint64_t))(v41 - 16);
  uint64_t v136 = (uint64_t (**)(char *, uint64_t))(v41 - 24);
  for (i = v44; ; uint64_t v44 = i)
  {
    uint64_t v45 = v142;
    v129(v150, v44, v142);
    sub_1003E1E04(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    uint64_t v46 = v141;
    uint64_t v47 = (uint64_t)v144;
    uint64_t v48 = v132;
    dispatch thunk of Collection.endIndex.getter();
    sub_1003E1E04(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v50 = *v128;
    (*v128)(v46, v45);
    v50(v150, v45);
    if (v49)
    {
      swift_release();
      swift_release();
      sub_10003B6F8(v47, &qword_10079D9E0);
      return (*v136)(v143, v151);
    }
    uint64_t v51 = (void (*)(void **, void))dispatch thunk of Collection.subscript.read();
    uint64_t v53 = *v52;
    v51(&v157, 0);
    uint64_t v54 = v138;
    (*v126)(v138, v47, v48);
    dispatch thunk of Collection.formIndex(after:)();
    (*v125)(v54, v48);
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    uint64_t v56 = v140;
    sub_100024578(v145, v140, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*v124)(v56, 0, 1, v139);
    uint64_t v57 = v147;
    (*(void (**)(void *, uint64_t, uint64_t))(v133 + 48))(Strong, v53, v56);

    sub_10003B6F8(v56, (uint64_t *)&unk_100788DC0);
    sub_10003B754((uint64_t *)&unk_10078E3A0);
    uint64_t v58 = swift_allocObject();
    uint64_t v59 = v131;
    swift_retain();
    *(void *)(v58 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
    uint64_t v60 = v146;
    char v61 = v123;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      uint64_t v116 = _CocoaArrayWrapper.endIndex.getter();
      if (v116)
      {
        uint64_t v117 = v116;
        if (v116 < 1)
        {
          __break(1u);
LABEL_84:
          sub_10003B754(&qword_10078E370);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
LABEL_85:
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        uint64_t v118 = &_swiftEmptyArrayStorage[4];
        do
        {
          uint64_t v119 = *v118++;
          swift_weakAssign();
          swift_beginAccess();
          *(void *)(v119 + 64) = _swiftEmptyArrayStorage;
          uint64_t v59 = v131;
          swift_bridgeObjectRelease();
          --v117;
        }
        while (v117);
      }
    }
    unint64_t v62 = sub_10008DAE8(v57, v59, v58);
    swift_release();
    swift_release();
    unint64_t v63 = sub_1003D8DF8(v62, v53, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10054BFD8, (uint64_t (*)(void *))sub_100097140);
    uint64_t v65 = v64;
    uint64_t v66 = *v61;
    uint64_t v67 = v151;
    (*v61)(v60, v143, v151);
    uint64_t v68 = (void (*)(void **, void))IndexPath.row.modify();
    if (__OFADD__(*v69, v65)) {
      goto LABEL_78;
    }
    *v69 += v65;
    v68(&v157, 0);
    v66(v148, v60, v67);
    unint64_t v70 = IndexPath.section.getter();
    swift_bridgeObjectRetain();
    uint64_t v71 = IndexPath.row.getter();
    uint64_t v72 = *v149;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v70 & 0x8000000000000000) != 0) {
        goto LABEL_79;
      }
    }
    else
    {
      uint64_t v72 = sub_100366F28((uint64_t)v72);
      if ((v70 & 0x8000000000000000) != 0) {
        goto LABEL_79;
      }
    }
    if (v70 >= *((void *)v72 + 2)) {
      break;
    }
    unint64_t v135 = v62;
    sub_10054BB9C(v71, v71, v63);
    *uint64_t v149 = v72;
    uint64_t v73 = v148;
    uint64_t v74 = IndexPath.section.getter();
    sub_100087C30(v63, v74);
    uint64_t v134 = *v136;
    v134(v73, v67);
    if (v63 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v120 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v153 = v120;
      if (v120)
      {
LABEL_25:
        if (v153 < 1) {
          goto LABEL_81;
        }
        uint64_t v76 = 0;
        unint64_t v152 = v63 & 0xC000000000000001;
LABEL_29:
        if (v152)
        {
          uint64_t v78 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v78 = *(void *)(v63 + 8 * v76 + 32);
          swift_retain();
        }
        swift_beginAccess();
        uint64_t v79 = *(void *)(a4 + 88);
        if (!*(void *)(v79 + 16) || (uint64_t v80 = sub_10035C1D0(v78), (v81 & 1) == 0))
        {
          swift_endAccess();
          sub_10003B754(&qword_100788DD0);
          os_log_type_t v94 = (void *)static _DictionaryStorage.allocate(capacity:)();
          unint64_t v95 = sub_10035C28C(0);
          if (v96) {
            goto LABEL_73;
          }
          v94[(v95 >> 6) + 8] |= 1 << v95;
          *(unsigned char *)(v94[6] + v95) = 0;
          *(void *)(v94[7] + 8 * v95) = v154;
          uint64_t v97 = v94[2];
          BOOL v98 = __OFADD__(v97, 1);
          uint64_t v99 = v97 + 1;
          if (v98) {
            goto LABEL_74;
          }
          uint64_t v83 = 0;
          v94[2] = v99;
          goto LABEL_49;
        }
        uint64_t v82 = (void *)(*(void *)(v79 + 56) + 16 * v80);
        uint64_t v84 = (void *)*v82;
        uint64_t v83 = v82[1];
        swift_endAccess();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v157 = v84;
        unint64_t v87 = sub_10035C28C(0);
        uint64_t v88 = v84[2];
        BOOL v89 = (v86 & 1) == 0;
        uint64_t v90 = v88 + v89;
        if (__OFADD__(v88, v89)) {
          goto LABEL_76;
        }
        char v91 = v86;
        if (v84[3] >= v90)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            os_log_type_t v94 = v157;
            if ((v86 & 1) == 0) {
              goto LABEL_46;
            }
          }
          else
          {
            sub_100361174();
            os_log_type_t v94 = v157;
            if ((v91 & 1) == 0) {
              goto LABEL_46;
            }
          }
        }
        else
        {
          sub_1005728DC(v90, isUniquelyReferenced_nonNull_native);
          unint64_t v92 = sub_10035C28C(0);
          if ((v91 & 1) != (v93 & 1)) {
            goto LABEL_85;
          }
          unint64_t v87 = v92;
          os_log_type_t v94 = v157;
          if ((v91 & 1) == 0)
          {
LABEL_46:
            v94[(v87 >> 6) + 8] |= 1 << v87;
            *(unsigned char *)(v94[6] + v87) = 0;
            *(void *)(v94[7] + 8 * v87) = v154;
            uint64_t v100 = v94[2];
            BOOL v98 = __OFADD__(v100, 1);
            uint64_t v101 = v100 + 1;
            if (v98) {
              goto LABEL_77;
            }
            v94[2] = v101;
LABEL_48:
            swift_bridgeObjectRelease();
LABEL_49:
            swift_beginAccess();
            swift_retain();
            char v102 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v156 = *(void **)(a4 + 88);
            id v103 = v156;
            *(void *)(a4 + 88) = 0x8000000000000000;
            unint64_t v105 = sub_10035C1D0(v78);
            uint64_t v106 = v103[2];
            BOOL v107 = (v104 & 1) == 0;
            uint64_t v108 = v106 + v107;
            if (__OFADD__(v106, v107))
            {
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
              break;
            }
            char v109 = v104;
            if (v103[3] >= v108)
            {
              if (v102)
              {
                unint64_t v112 = v156;
                if ((v104 & 1) == 0) {
                  goto LABEL_56;
                }
              }
              else
              {
                sub_100360FD4();
                unint64_t v112 = v156;
                if ((v109 & 1) == 0) {
                  goto LABEL_56;
                }
              }
            }
            else
            {
              sub_100572604(v108, v102);
              uint64_t v110 = sub_10035C1D0(v78);
              if ((v109 & 1) != (v111 & 1)) {
                goto LABEL_84;
              }
              unint64_t v105 = v110;
              unint64_t v112 = v156;
              if ((v109 & 1) == 0)
              {
LABEL_56:
                v112[(v105 >> 6) + 8] |= 1 << v105;
                *(void *)(v112[6] + 8 * v105) = v78;
                uint64_t v113 = (void *)(v112[7] + 16 * v105);
                *uint64_t v113 = v94;
                v113[1] = v83;
                uint64_t v114 = v112[2];
                BOOL v98 = __OFADD__(v114, 1);
                uint64_t v115 = v114 + 1;
                if (v98) {
                  goto LABEL_75;
                }
                v112[2] = v115;
                swift_retain();
                goto LABEL_28;
              }
            }
            uint64_t v77 = (void *)(v112[7] + 16 * v105);
            *uint64_t v77 = v94;
            v77[1] = v83;
            swift_bridgeObjectRelease();
LABEL_28:
            ++v76;
            *(void *)(a4 + 88) = v112;
            swift_release();
            swift_bridgeObjectRelease();
            swift_endAccess();
            swift_release();
            if (v153 == v76) {
              goto LABEL_16;
            }
            goto LABEL_29;
          }
        }
        *(void *)(v94[7] + 8 * v87) = v154;
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v75 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v153 = v75;
      if (v75) {
        goto LABEL_25;
      }
    }
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    v134(v146, v151);
    sub_100024448(v147, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  swift_once();
LABEL_8:
  uint64_t v37 = type metadata accessor for Logger();
  sub_100018BF8(v37, (uint64_t)qword_10078DE60);
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Unable to find childrenStartIndexPath", v40, 2u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
  return swift_release();
}

uint64_t sub_1003D0780(void (**a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, char **a5)
{
  uint64_t v6 = v5;
  uint64_t v110 = a5;
  uint64_t v100 = a4;
  uint64_t v99 = a3;
  uint64_t v109 = a2;
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v8 - 8);
  uint64_t v104 = (uint64_t)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for TTRAccountsListsViewModel.Item();
  os_log_type_t v94 = *(uint64_t (***)(char *, uint64_t))(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v111 = (uint64_t)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexSet();
  char v93 = *(void (***)(char *, uint64_t))(v11 - 8);
  __chkstk_darwin(v11);
  char v102 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexSet.Index();
  uint64_t v108 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v106 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v105 = (char *)&v81 - v16;
  uint64_t v17 = sub_10003B754(&qword_10079D9E0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for IndexPath();
  uint64_t v97 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v101 = (char *)&v81 - v28;
  __chkstk_darwin(v27);
  BOOL v107 = (char *)&v81 - v29;
  unint64_t v95 = a1;
  uint64_t result = IndexSet.isEmpty.getter();
  if (result) {
    return result;
  }
  uint64_t v31 = *(void *)(v6 + qword_10078DEB0);
  if (!v31) {
    return result;
  }
  BOOL v98 = v19;
  uint64_t v32 = *(uint64_t (**)(uint64_t))(v31 + 16);
  uint64_t v33 = swift_retain();
  if (v32(v33))
  {
    uint64_t v96 = v31;
    uint64_t v92 = v6;
    sub_100089354();
    uint64_t v35 = sub_100091FDC(v109, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35)
    {
      if (*(unsigned char *)(v35 + 72) == 2)
      {
        uint64_t v36 = sub_100089354();
        sub_1003CDB40(v35, v36, v38, v37 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = v97;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v22, 1, v23) == 1)
        {
          sub_10003B6F8((uint64_t)v22, &qword_10078E8F0);
          if (qword_1007852B8 == -1)
          {
LABEL_8:
            uint64_t v40 = type metadata accessor for Logger();
            sub_100018BF8(v40, (uint64_t)qword_10078DE60);
            uint64_t v41 = Logger.logObject.getter();
            os_log_type_t v42 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v41, v42))
            {
              uint64_t v43 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v43 = 0;
              _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unable to find childrenStartIndexPath", v43, 2u);
              swift_slowDealloc();
              swift_release();
            }
            else
            {

              swift_release();
            }
            return swift_release();
          }
        }
        else
        {
          unint64_t v87 = v26;
          uint64_t v89 = v13;
          uint64_t v90 = v35;
          uint64_t v91 = v11;
          uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
          uint64_t v44 = v39 + 32;
          uint64_t v88 = v23;
          v45(v107, v22, v23);
          uint64_t v46 = v98;
          IndexSet.makeIterator()();
          uint64_t v47 = &v46[*(int *)(v17 + 36)];
          uint64_t v97 = *(void *)(v108 + 16);
          uint64_t v86 = v92 + qword_10078DE98;
          v108 += 16;
          unint64_t v95 = (void (**)(char *, uint64_t))(v108 - 8);
          uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v93 + 2);
          ++v93;
          uint64_t v84 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 7);
          uint64_t v83 = (void (**)(uint64_t, char *, uint64_t))(v44 - 16);
          os_log_type_t v94 = (uint64_t (**)(char *, uint64_t))(v44 - 24);
          for (i = v47; ; uint64_t v47 = i)
          {
            uint64_t v48 = v105;
            uint64_t v49 = v89;
            ((void (*)(char *, char *, uint64_t))v97)(v105, v47, v89);
            sub_1003E1E04(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
            uint64_t v50 = v106;
            uint64_t v51 = (uint64_t)v98;
            uint64_t v52 = v91;
            dispatch thunk of Collection.endIndex.getter();
            sub_1003E1E04(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
            char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v54 = *v95;
            (*v95)(v50, v49);
            v54(v48, v49);
            if (v53) {
              goto LABEL_31;
            }
            uint64_t v55 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
            uint64_t v57 = *v56;
            v55(v112, 0);
            uint64_t v58 = v102;
            (*v85)(v102, v51, v52);
            dispatch thunk of Collection.formIndex(after:)();
            (*v93)(v58, v52);
            uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
            uint64_t v60 = v104;
            sub_100024578(v109, v104, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            (*v84)(v60, 0, 1, v103);
            uint64_t v61 = v111;
            (*(void (**)(void *, uint64_t, uint64_t))(v96 + 48))(Strong, v57, v60);

            sub_10003B6F8(v60, (uint64_t *)&unk_100788D10);
            sub_10003B754((uint64_t *)&unk_100788D20);
            uint64_t inited = swift_initStackObject();
            uint64_t v63 = v90;
            swift_retain();
            *(void *)(inited + 16) = sub_100090290((unint64_t)&_swiftEmptyArrayStorage);
            uint64_t v51 = (uint64_t)v101;
            uint64_t v64 = v87;
            uint64_t v65 = v83;
            if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
            {
              uint64_t result = _CocoaArrayWrapper.endIndex.getter();
              uint64_t v81 = result;
              if (result)
              {
                if (v81 < 1)
                {
                  __break(1u);
                  return result;
                }
                uint64_t v79 = (uint64_t *)((char *)&_swiftEmptyArrayStorage + 32);
                do
                {
                  uint64_t v80 = *v79++;
                  swift_weakAssign();
                  swift_beginAccess();
                  *(void *)(v80 + 64) = &_swiftEmptyArrayStorage;
                  swift_bridgeObjectRelease();
                  --v81;
                }
                while (v81);
              }
            }
            unint64_t v66 = sub_10008DD58(v61, v63, inited);
            swift_setDeallocating();
            swift_bridgeObjectRelease();
            swift_release();
            unint64_t v67 = sub_1003D8DF8(v66, v57, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10054C85C, (uint64_t (*)(void *))sub_10008DFC8);
            uint64_t v69 = v68;
            unint64_t v70 = *v65;
            uint64_t v71 = v88;
            (*v65)(v51, v107, v88);
            uint64_t v72 = (void (*)(char *, void))IndexPath.row.modify();
            if (__OFADD__(*v73, v69)) {
              break;
            }
            *v73 += v69;
            v72(v112, 0);
            v70((uint64_t)v64, (char *)v51, v71);
            unint64_t v74 = IndexPath.section.getter();
            swift_bridgeObjectRetain();
            uint64_t v75 = IndexPath.row.getter();
            uint64_t v76 = *v110;
            if (swift_isUniquelyReferenced_nonNull_native())
            {
              if ((v74 & 0x8000000000000000) != 0) {
                goto LABEL_30;
              }
            }
            else
            {
              uint64_t v76 = sub_100366FA0((uint64_t)v76);
              if ((v74 & 0x8000000000000000) != 0)
              {
LABEL_30:
                __break(1u);
LABEL_31:
                swift_release();
                swift_release();
                sub_10003B6F8(v51, &qword_10079D9E0);
                return (*v94)(v107, v88);
              }
            }
            if (v74 >= *((void *)v76 + 2)) {
              goto LABEL_36;
            }
            sub_10054C484(v75, v75, v67);
            *uint64_t v110 = v76;
            uint64_t v77 = IndexPath.section.getter();
            sub_1000882D0(v67, v77);
            uint64_t v78 = *v94;
            (*v94)(v64, v71);
            sub_1003CBD98(v67, 0, v99, 0);
            swift_release();
            v78((char *)v51, v71);
            sub_100024448(v111, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            swift_bridgeObjectRelease();
          }
          __break(1u);
LABEL_36:
          __break(1u);
        }
        swift_once();
        goto LABEL_8;
      }
      swift_release();
    }
  }

  return swift_release();
}

uint64_t sub_1003D1434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void (*a7)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  *(void *)&long long v22 = a6();
  *((void *)&v22 + 1) = v13;
  uint64_t v23 = v14;
  char v24 = v15 & 1;
  uint64_t v16 = qword_10078DED8;
  *(unsigned char *)(a2 + qword_10078DED8) = 1;
  a7(&v22, a3, a4, a2, a1, a5);
  uint64_t v17 = v23;
  char v18 = v24;
  uint64_t v19 = a2 + qword_10078DED0;
  uint64_t v20 = *(void *)(a2 + qword_10078DED0);
  *(_OWORD *)uint64_t v19 = v22;
  *(void *)(v19 + 16) = v17;
  *(unsigned char *)(v19 + 24) = v18;
  uint64_t result = sub_1000349CC(v20);
  *(unsigned char *)(a2 + v16) = 0;
  return result;
}

uint64_t sub_1003D1508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a6;
  uint64_t v48 = a5;
  uint64_t v58 = a3;
  uint64_t v66 = a1;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v57 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v67 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexSet();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v55 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for IndexSet.Index();
  uint64_t v14 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v64 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v63 = (char *)&v47 - v17;
  uint64_t v18 = sub_10003B754(&qword_10079D9E0);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexSet.makeIterator()();
  long long v22 = &v21[*(int *)(v19 + 44)];
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  unint64_t v62 = v21;
  uint64_t v50 = a4;
  uint64_t v54 = a4 + qword_10078DE98;
  uint64_t v65 = v14 + 16;
  uint64_t v60 = (void (**)(char *, uint64_t))(v14 + 8);
  char v53 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v52 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  long long v47 = xmmword_10066D470;
  while (1)
  {
    uint64_t v23 = v63;
    uint64_t v24 = v59;
    v61(v63, v22, v59);
    sub_1003E1E04(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    uint64_t v25 = v64;
    uint64_t v26 = v22;
    uint64_t v27 = (uint64_t)v62;
    dispatch thunk of Collection.endIndex.getter();
    sub_1003E1E04(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v29 = *v60;
    (*v60)(v25, v24);
    v29(v23, v24);
    if (v28) {
      return sub_10003B6F8(v27, &qword_10079D9E0);
    }
    uint64_t v30 = (void (*)(void **, void))dispatch thunk of Collection.subscript.read();
    uint64_t v32 = *v31;
    v30(&v69, 0);
    uint64_t v33 = v55;
    (*v53)(v55, v27, v11);
    dispatch thunk of Collection.formIndex(after:)();
    (*v52)(v33, v11);
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    uint64_t v35 = (uint64_t)v57;
    (*v51)(v57, 1, 1, v56);
    (*(void (**)(void *, uint64_t, uint64_t))(v58 + 48))(Strong, v32, v35);

    sub_10003B6F8(v35, (uint64_t *)&unk_100788DC0);
    sub_10003B754((uint64_t *)&unk_10078E3A0);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
    long long v22 = v26;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result)
      {
        uint64_t v44 = result;
        if (result < 1) {
          goto LABEL_15;
        }
        uint64_t v45 = &_swiftEmptyArrayStorage[4];
        do
        {
          uint64_t v46 = *v45++;
          swift_weakAssign();
          swift_beginAccess();
          *(void *)(v46 + 64) = _swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          --v44;
        }
        while (v44);
      }
    }
    unint64_t v37 = sub_10008DAE8(v67, 0, v36);
    swift_release();
    uint64_t v69 = _swiftEmptyArrayStorage;
    uint64_t result = (uint64_t)sub_100097140(&v69);
    if (*(void *)(*(void *)v66 + 16) < v32) {
      break;
    }
    if (v32 < 0) {
      goto LABEL_14;
    }
    uint64_t v39 = (uint64_t)v69;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10054D1DC(v32, v32, v37, v39);
    swift_bridgeObjectRelease();
    sub_1000872B8(v32, 1);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v47;
    *(void *)(inited + 32) = v37;
    unint64_t v68 = inited;
    specialized Array._endMutation()();
    unint64_t v41 = v68;
    swift_retain();
    sub_100087C30(v41, v32);
    uint64_t v42 = v67;
    swift_bridgeObjectRelease();
    unint64_t v43 = swift_bridgeObjectRetain();
    sub_100087C30(v43, v32);
    swift_bridgeObjectRelease();
    sub_1003CB440(1, v37, 0, v49, 0);
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_100024448(v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1003D1C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a6;
  uint64_t v48 = a5;
  uint64_t v58 = a3;
  uint64_t v64 = a1;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v7 - 8);
  uint64_t v57 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v9 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v65 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexSet();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v55 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for IndexSet.Index();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v62 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v61 = (char *)&v46 - v18;
  uint64_t v19 = sub_10003B754(&qword_10079D9E0);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  long long v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexSet.makeIterator()();
  uint64_t v23 = &v22[*(int *)(v20 + 44)];
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v50 = a4;
  uint64_t v54 = a4 + qword_10078DE98;
  uint64_t v24 = v23;
  uint64_t v63 = v15 + 16;
  uint64_t v59 = (void (**)(char *, uint64_t))(v15 + 8);
  char v53 = (void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v52 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  long long v46 = xmmword_10066D470;
  for (i = v22; ; long long v22 = i)
  {
    uint64_t v25 = v61;
    v60(v61, v24, v14);
    sub_1003E1E04(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    uint64_t v26 = v62;
    dispatch thunk of Collection.endIndex.getter();
    sub_1003E1E04(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
    char v28 = v24;
    uint64_t v29 = *v59;
    (*v59)(v26, v14);
    v29(v25, v14);
    if (v27) {
      return sub_10003B6F8((uint64_t)v22, &qword_10079D9E0);
    }
    uint64_t v30 = (void (*)(void **, void))dispatch thunk of Collection.subscript.read();
    uint64_t v32 = *v31;
    v30(&v67, 0);
    uint64_t v33 = v55;
    (*v53)(v55, v22, v11);
    dispatch thunk of Collection.formIndex(after:)();
    (*v52)(v33, v11);
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    uint64_t v35 = (uint64_t)v57;
    (*v51)(v57, 1, 1, v56);
    (*(void (**)(void *, uint64_t, uint64_t))(v58 + 48))(Strong, v32, v35);

    sub_10003B6F8(v35, (uint64_t *)&unk_100788D10);
    sub_10003B754((uint64_t *)&unk_100788D20);
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = sub_100090290((unint64_t)&_swiftEmptyArrayStorage);
    uint64_t v24 = v28;
    if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result)
      {
        uint64_t v43 = result;
        if (result < 1) {
          goto LABEL_15;
        }
        uint64_t v44 = (uint64_t *)((char *)&_swiftEmptyArrayStorage + 32);
        do
        {
          uint64_t v45 = *v44++;
          swift_weakAssign();
          swift_beginAccess();
          *(void *)(v45 + 64) = &_swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          --v43;
        }
        while (v43);
      }
    }
    unint64_t v37 = sub_10008DD58(v65, 0, inited);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    uint64_t v67 = &_swiftEmptyArrayStorage;
    uint64_t result = (uint64_t)sub_10008DFC8(&v67);
    if (*(void *)(*(void *)v64 + 16) < v32) {
      break;
    }
    if (v32 < 0) {
      goto LABEL_14;
    }
    unint64_t v39 = (unint64_t)v67;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_10054C2F8(v32, v32, v37, v39);
    sub_1000875C4(v32, 1);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v40 = swift_initStackObject();
    *(_OWORD *)(v40 + 16) = v46;
    *(void *)(v40 + 32) = v37;
    unint64_t v66 = v40;
    specialized Array._endMutation()();
    unint64_t v41 = v66;
    swift_retain();
    sub_1000882D0(v41, v32);
    uint64_t v42 = v65;
    swift_bridgeObjectRelease();
    sub_1000882D0(v39, v32);
    sub_1003CB6D0(1, v37, 0, v49, 0);
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_100024448(v42, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1003D2398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = IndexSet.isEmpty.getter();
  if ((result & 1) == 0)
  {
    sub_10003B694(a2, (uint64_t)v14, (uint64_t *)&unk_100788DC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      uint64_t v20 = sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100788DC0);
      __chkstk_darwin(v20);
      *(&v33 - 4) = v3;
      *(&v33 - 3) = a1;
      *(&v33 - 2) = v36;
      return sub_1003CE654((void (*)(uint64_t))sub_1003E207C, (uint64_t)(&v33 - 6), 0, 0, 0, 0);
    }
    sub_10004007C((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000890D8();
    uint64_t v22 = sub_100091DF0((uint64_t)v18, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v22) {
      return sub_100024448((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    if (*(unsigned char *)(v22 + 72) == 2)
    {
      uint64_t v23 = sub_1000890D8();
      sub_1003CDB40(v22, v23, v25, v24 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v34;
      uint64_t v26 = v35;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v8, 1, v35) == 1)
      {
        sub_10003B6F8((uint64_t)v8, &qword_10078E8F0);
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v28 = type metadata accessor for Logger();
        sub_100018BF8(v28, (uint64_t)qword_10078DE60);
        uint64_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v31 = 0;
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unable to find childrenStartIndexPath", v31, 2u);
          swift_slowDealloc();
        }
        swift_release();

        return sub_100024448((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      uint64_t v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 32))(v11, v8, v26);
      __chkstk_darwin(v32);
      *(&v33 - 6) = v3;
      *(&v33 - 5) = a1;
      *(&v33 - 4) = v22;
      *(&v33 - 3) = (uint64_t)v11;
      *(&v33 - 2) = v36;
      sub_1003CE654((void (*)(uint64_t))sub_1003E20C4, (uint64_t)(&v33 - 8), 0, 0, 0, 0);
      swift_release();
      sub_100024448((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v11, v26);
    }
    else
    {
      sub_100024448((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1003D290C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = IndexSet.isEmpty.getter();
  if ((result & 1) == 0)
  {
    sub_10003B694(a2, (uint64_t)v14, (uint64_t *)&unk_100788D10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      uint64_t v20 = sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100788D10);
      __chkstk_darwin(v20);
      *(&v33 - 4) = v3;
      *(&v33 - 3) = a1;
      *(&v33 - 2) = v36;
      return sub_1003CEE4C((void (*)(uint64_t))sub_1003E2220, (uint64_t)(&v33 - 6), 0, 0, 0, 0);
    }
    sub_10004007C((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100089354();
    uint64_t v22 = sub_100091FDC((uint64_t)v18, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v22) {
      return sub_100024448((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    }
    if (*(unsigned char *)(v22 + 72) == 2)
    {
      uint64_t v23 = sub_100089354();
      sub_1003CDB40(v22, v23, v25, v24 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v34;
      uint64_t v26 = v35;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v8, 1, v35) == 1)
      {
        sub_10003B6F8((uint64_t)v8, &qword_10078E8F0);
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v28 = type metadata accessor for Logger();
        sub_100018BF8(v28, (uint64_t)qword_10078DE60);
        uint64_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v31 = 0;
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unable to find childrenStartIndexPath", v31, 2u);
          swift_slowDealloc();
        }
        swift_release();

        return sub_100024448((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      }
      uint64_t v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 32))(v11, v8, v26);
      __chkstk_darwin(v32);
      *(&v33 - 6) = v3;
      *(&v33 - 5) = a1;
      *(&v33 - 4) = v22;
      *(&v33 - 3) = (uint64_t)v11;
      *(&v33 - 2) = v36;
      sub_1003CEE4C((void (*)(uint64_t))sub_1003E1D48, (uint64_t)(&v33 - 8), 0, 0, 0, 0);
      swift_release();
      sub_100024448((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v11, v26);
    }
    else
    {
      sub_100024448((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1003D2E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), void (*a8)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  *(void *)&long long v24 = a7();
  *((void *)&v24 + 1) = v15;
  uint64_t v25 = v16;
  char v26 = v17 & 1;
  uint64_t v18 = qword_10078DED8;
  *(unsigned char *)(a2 + qword_10078DED8) = 1;
  a8(&v24, a3, a4, a5, a2, a1, a6);
  uint64_t v19 = v25;
  char v20 = v26;
  uint64_t v21 = a2 + qword_10078DED0;
  uint64_t v22 = *(void *)(a2 + qword_10078DED0);
  *(_OWORD *)uint64_t v21 = v24;
  *(void *)(v21 + 16) = v19;
  *(unsigned char *)(v21 + 24) = v20;
  uint64_t result = sub_1000349CC(v22);
  *(unsigned char *)(a2 + v18) = 0;
  return result;
}

unint64_t sub_1003D2F5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v100 = a7;
  uint64_t v99 = a6;
  uint64_t v121 = a5;
  uint64_t v103 = a4;
  uint64_t v102 = a3;
  uint64_t v119 = a2;
  uint64_t v122 = a1;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v7 - 8);
  uint64_t v96 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for IndexPath();
  unint64_t v120 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v118 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v113 = (char *)&v95 - v17;
  uint64_t v110 = type metadata accessor for IndexSet.Index();
  uint64_t v111 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v109 = (char *)&v95 - v20;
  uint64_t v21 = sub_10003B754(&qword_10078E2E8);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10003B754(&qword_10078E2F0);
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  os_log_type_t v30 = (char *)&v95 - v29;
  uint64_t v31 = type metadata accessor for IndexSet();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v33(v23, v119, v31);
  v33(v27, (uint64_t)v23, v31);
  uint64_t v34 = sub_1003E1E04(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  uint64_t v35 = v109;
  uint64_t v114 = v34;
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v106 = v31;
  v36(v23, v31);
  uint64_t v37 = v111;
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(&v27[*(int *)(v25 + 44)], v35, v110);
  sub_100028C3C((uint64_t)v27, (uint64_t)v30, &qword_10078E2F0);
  uint64_t v38 = *(int *)(v25 + 44);
  BOOL v107 = v30;
  unint64_t v39 = &v30[v38];
  v121 += qword_10078DEE8;
  unint64_t v105 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v111 = v37 + 16;
  uint64_t v104 = (void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v101 = (void (**)(char *, uint64_t, uint64_t))(v120 + 16);
  unint64_t v112 = (void (**)(char *, uint64_t))(v120 + 8);
  for (i = &v30[v38]; ; unint64_t v39 = i)
  {
    uint64_t v43 = v109;
    uint64_t v44 = v110;
    v105(v109, v39, v110);
    uint64_t v45 = v108;
    uint64_t v46 = (uint64_t)v107;
    dispatch thunk of Collection.startIndex.getter();
    sub_1003E1E04(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    LODWORD(v120) = dispatch thunk of static Equatable.== infix(_:_:)();
    long long v47 = *v104;
    (*v104)(v45, v44);
    v47(v43, v44);
    if (v120) {
      return sub_10003B6F8(v46, &qword_10078E2F0);
    }
    sub_1003E1E04(&qword_10078E308, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)();
    uint64_t v48 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    unint64_t v50 = *v49;
    v48(&v123, 0);
    uint64_t v51 = sub_1003D4A34(v50, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (uint64_t)sub_1003C0780);
    uint64_t v53 = v52;
    uint64_t v54 = *v101;
    uint64_t v55 = v113;
    uint64_t v56 = v115;
    (*v101)(v113, v103, v115);
    unint64_t result = IndexPath.row.modify();
    if (__OFADD__(*v58, v51)) {
      break;
    }
    *v58 += v51;
    ((void (*)(uint64_t *, void))result)(&v123, 0);
    unint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v54)(v118, v55, v56);
    uint64_t v59 = v53 - v51;
    if (__OFSUB__(v53, v51)) {
      goto LABEL_52;
    }
    uint64_t v60 = IndexPath.row.getter();
    unint64_t result = IndexPath.row.getter();
    uint64_t v61 = result + v59;
    if (__OFADD__(result, v59)) {
      goto LABEL_53;
    }
    if (v61 < v60) {
      goto LABEL_54;
    }
    unint64_t result = IndexPath.section.getter();
    if ((result & 0x8000000000000000) != 0) {
      goto LABEL_55;
    }
    uint64_t v62 = *v122;
    if (result >= *(void *)(*v122 + 16)) {
      goto LABEL_56;
    }
    int64_t v116 = result;
    unint64_t v63 = v62 + 16 * result;
    uint64_t v65 = *(void *)(v63 + 32);
    unint64_t v64 = *(void *)(v63 + 40);
    if (v64 >> 62)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v94 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t result = swift_bridgeObjectRelease();
      if (v94 < v60) {
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v66 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t result = swift_retain();
      if (v66 < v60) {
        goto LABEL_60;
      }
    }
    if (v60 < 0) {
      goto LABEL_57;
    }
    if (v64 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t result = swift_bridgeObjectRelease();
      if (v67 < v61) {
        goto LABEL_58;
      }
    }
    else if (*(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) < v61)
    {
      goto LABEL_58;
    }
    uint64_t v119 = v65;
    if ((v64 & 0xC000000000000001) != 0 && v60 != v61)
    {
      if (v60 >= (unint64_t)v61) {
        goto LABEL_61;
      }
      Swift::Int v68 = v60;
      do
      {
        sub_10003B754(&qword_10078E370);
        _ArrayBuffer._typeCheckSlowPath(_:)(v68++);
      }
      while (v61 != v68);
    }
    uint64_t v69 = v64 & 0xFFFFFFFFFFFFFF8;
    if (v64 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v69 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v117 = v71;
      uint64_t v70 = v72;
      unint64_t v120 = v73;
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_release();
      uint64_t v117 = v69 + 32;
      unint64_t v120 = (2 * v61) | 1;
      uint64_t v70 = v60;
    }
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (unint64_t)sub_100366F28(v62);
      uint64_t v62 = result;
    }
    if (v116 >= *(void *)(v62 + 16)) {
      goto LABEL_59;
    }
    int64_t v116 = v70;
    unint64_t result = sub_10054EB9C(v60, v61);
    uint64_t v40 = v116;
    *uint64_t v122 = v62;
    int64_t v74 = v120 >> 1;
    unint64_t v75 = (v120 >> 1) - v40;
    uint64_t v119 = v69;
    if (v120 >> 1 != v40)
    {
      if (v74 <= v40) {
        goto LABEL_62;
      }
      unint64_t v97 = v120 >> 1;
      swift_unknownObjectRetain();
      uint64_t v76 = (uint64_t *)(v117 + 8 * v40);
      do
      {
        uint64_t v77 = *v76;
        uint64_t v78 = *v76 + *(void *)(*(void *)*v76 + 144);
        swift_beginAccess();
        sub_100024578(v78, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_retain();
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_100024448((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v79 = v122;
        sub_1003CD538((uint64_t)v14, v77);
        sub_100024448((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        uint64_t v80 = sub_10035C1D0(v77);
        if (v81)
        {
          uint64_t v82 = v80;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v84 = v79[2];
          uint64_t v123 = v84;
          v79[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100360BDC();
            uint64_t v84 = v123;
          }
          swift_release();
          sub_10035F6CC(v82, v84);
          v79[2] = v84;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        ++v76;
        --v75;
      }
      while (v75);
      swift_unknownObjectRelease();
      uint64_t v40 = v116;
      int64_t v74 = v97;
    }
    uint64_t v42 = *v112;
    uint64_t v41 = v115;
    (*v112)(v118, v115);
    unint64_t result = swift_beginAccess();
    int64_t v85 = v74 - v40;
    if (v74 != v40)
    {
      if (v74 <= v40) {
        goto LABEL_63;
      }
      unint64_t v97 = (unint64_t)v42;
      swift_unknownObjectRetain();
      if (v120)
      {
        uint64_t v90 = (uint64_t *)(v117 + 8 * v40);
        uint64_t v91 = (uint64_t)v96;
        do
        {
          uint64_t v92 = *v90++;
          uint64_t v93 = v92 + *(void *)(*(void *)v92 + 144);
          swift_beginAccess();
          sub_100024578(v93, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10012F180(v91);
          sub_100024448((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_10003B6F8(v91, (uint64_t *)&unk_10078E360);
          swift_release();
          --v85;
        }
        while (v85);
      }
      else
      {
        uint64_t v86 = (uint64_t *)(v117 + 8 * v40);
        uint64_t v87 = (uint64_t)v96;
        do
        {
          uint64_t v88 = *v86++;
          uint64_t v89 = v88 + *(void *)(*(void *)v88 + 144);
          swift_beginAccess();
          sub_100024578(v89, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10012F180(v87);
          sub_100024448((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_10003B6F8(v87, (uint64_t *)&unk_10078E360);
          swift_release();
          --v85;
        }
        while (v85);
      }
      swift_unknownObjectRelease();
      uint64_t v41 = v115;
      uint64_t v40 = v116;
      uint64_t v42 = (void (*)(char *, uint64_t))v97;
    }
    swift_endAccess();
    sub_1003CB960(v119, v117, v40, v120, 1, v100, 0);
    v42(v113, v41);
    swift_unknownObjectRelease();
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

unint64_t sub_1003D3CC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v100 = a7;
  uint64_t v99 = a6;
  uint64_t v121 = a5;
  uint64_t v103 = a4;
  uint64_t v102 = a3;
  uint64_t v119 = a2;
  uint64_t v122 = a1;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E260);
  __chkstk_darwin(v7 - 8);
  uint64_t v96 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for IndexPath();
  unint64_t v120 = *(void *)(v115 - 8);
  uint64_t v15 = __chkstk_darwin(v115);
  uint64_t v118 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v113 = (char *)&v95 - v17;
  uint64_t v110 = type metadata accessor for IndexSet.Index();
  uint64_t v111 = *(void *)(v110 - 8);
  uint64_t v18 = __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v109 = (char *)&v95 - v20;
  uint64_t v21 = sub_10003B754(&qword_10078E2E8);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10003B754(&qword_10078E2F0);
  uint64_t v25 = v24 - 8;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  os_log_type_t v30 = (char *)&v95 - v29;
  uint64_t v31 = type metadata accessor for IndexSet();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v33(v23, v119, v31);
  v33(v28, (uint64_t)v23, v31);
  uint64_t v34 = sub_1003E1E04(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  uint64_t v35 = v109;
  uint64_t v114 = v34;
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v106 = v31;
  v36(v23, v31);
  uint64_t v37 = v111;
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(&v28[*(int *)(v25 + 44)], v35, v110);
  sub_100028C3C((uint64_t)v28, (uint64_t)v30, &qword_10078E2F0);
  uint64_t v38 = *(int *)(v25 + 44);
  BOOL v107 = v30;
  unint64_t v39 = &v30[v38];
  v121 += qword_10078DEE8;
  unint64_t v105 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v111 = v37 + 16;
  uint64_t v104 = (void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v101 = (void (**)(char *, uint64_t, uint64_t))(v120 + 16);
  unint64_t v112 = (void (**)(char *, uint64_t))(v120 + 8);
  for (i = &v30[v38]; ; unint64_t v39 = i)
  {
    uint64_t v43 = v109;
    uint64_t v44 = v110;
    v105(v109, v39, v110);
    uint64_t v45 = v108;
    uint64_t v46 = (uint64_t)v107;
    dispatch thunk of Collection.startIndex.getter();
    sub_1003E1E04(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    LODWORD(v120) = dispatch thunk of static Equatable.== infix(_:_:)();
    long long v47 = *v104;
    (*v104)(v45, v44);
    v47(v43, v44);
    if (v120) {
      return sub_10003B6F8(v46, &qword_10078E2F0);
    }
    sub_1003E1E04(&qword_10078E308, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)();
    uint64_t v48 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    unint64_t v50 = *v49;
    v48(&v123, 0);
    uint64_t v51 = sub_1003D4A34(v50, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (uint64_t)sub_1003C0964);
    uint64_t v53 = v52;
    uint64_t v54 = *v101;
    uint64_t v55 = v113;
    uint64_t v56 = v115;
    (*v101)(v113, v103, v115);
    unint64_t result = IndexPath.row.modify();
    if (__OFADD__(*v58, v51)) {
      break;
    }
    *v58 += v51;
    ((void (*)(uint64_t *, void))result)(&v123, 0);
    unint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v54)(v118, v55, v56);
    uint64_t v59 = v53 - v51;
    if (__OFSUB__(v53, v51)) {
      goto LABEL_52;
    }
    uint64_t v60 = IndexPath.row.getter();
    unint64_t result = IndexPath.row.getter();
    uint64_t v61 = result + v59;
    if (__OFADD__(result, v59)) {
      goto LABEL_53;
    }
    if (v61 < v60) {
      goto LABEL_54;
    }
    unint64_t result = IndexPath.section.getter();
    if ((result & 0x8000000000000000) != 0) {
      goto LABEL_55;
    }
    uint64_t v62 = *v122;
    if (result >= *(void *)(*v122 + 16)) {
      goto LABEL_56;
    }
    int64_t v116 = result;
    unint64_t v63 = v62 + 16 * result;
    uint64_t v65 = *(void *)(v63 + 32);
    unint64_t v64 = *(void *)(v63 + 40);
    if (v64 >> 62)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v94 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t result = swift_bridgeObjectRelease();
      if (v94 < v60) {
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v66 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t result = swift_retain();
      if (v66 < v60) {
        goto LABEL_60;
      }
    }
    if (v60 < 0) {
      goto LABEL_57;
    }
    if (v64 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t result = swift_bridgeObjectRelease();
      if (v67 < v61) {
        goto LABEL_58;
      }
    }
    else if (*(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) < v61)
    {
      goto LABEL_58;
    }
    uint64_t v119 = v65;
    if ((v64 & 0xC000000000000001) != 0 && v60 != v61)
    {
      if (v60 >= (unint64_t)v61) {
        goto LABEL_61;
      }
      Swift::Int v68 = v60;
      do
      {
        sub_10003B754((uint64_t *)&unk_100788D30);
        _ArrayBuffer._typeCheckSlowPath(_:)(v68++);
      }
      while (v61 != v68);
    }
    uint64_t v69 = v64 & 0xFFFFFFFFFFFFFF8;
    if (v64 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v69 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v117 = v71;
      uint64_t v70 = v72;
      unint64_t v120 = v73;
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_release();
      uint64_t v117 = v69 + 32;
      unint64_t v120 = (2 * v61) | 1;
      uint64_t v70 = v60;
    }
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (unint64_t)sub_100366FA0(v62);
      uint64_t v62 = result;
    }
    if (v116 >= *(void *)(v62 + 16)) {
      goto LABEL_59;
    }
    int64_t v116 = v70;
    unint64_t result = sub_10054EEAC(v60, v61);
    uint64_t v40 = v116;
    *uint64_t v122 = v62;
    int64_t v74 = v120 >> 1;
    unint64_t v75 = (v120 >> 1) - v40;
    uint64_t v119 = v69;
    if (v120 >> 1 != v40)
    {
      if (v74 <= v40) {
        goto LABEL_62;
      }
      unint64_t v97 = v120 >> 1;
      swift_unknownObjectRetain();
      uint64_t v76 = (uint64_t *)(v117 + 8 * v40);
      do
      {
        uint64_t v77 = *v76;
        uint64_t v78 = *v76 + *(void *)(*(void *)*v76 + 144);
        swift_beginAccess();
        sub_100024578(v78, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_retain();
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
        sub_100024448((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v79 = v122;
        sub_1003CD81C((uint64_t)v14, v77);
        sub_100024448((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        uint64_t v80 = sub_10035C1D0(v77);
        if (v81)
        {
          uint64_t v82 = v80;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v84 = v79[2];
          uint64_t v123 = v84;
          v79[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10036216C();
            uint64_t v84 = v123;
          }
          swift_release();
          sub_10035F6CC(v82, v84);
          v79[2] = v84;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        ++v76;
        --v75;
      }
      while (v75);
      swift_unknownObjectRelease();
      uint64_t v40 = v116;
      int64_t v74 = v97;
    }
    uint64_t v42 = *v112;
    uint64_t v41 = v115;
    (*v112)(v118, v115);
    unint64_t result = swift_beginAccess();
    int64_t v85 = v74 - v40;
    if (v74 != v40)
    {
      if (v74 <= v40) {
        goto LABEL_63;
      }
      unint64_t v97 = (unint64_t)v42;
      swift_unknownObjectRetain();
      if (v120)
      {
        uint64_t v90 = (uint64_t *)(v117 + 8 * v40);
        uint64_t v91 = (uint64_t)v96;
        do
        {
          uint64_t v92 = *v90++;
          uint64_t v93 = v92 + *(void *)(*(void *)v92 + 144);
          swift_beginAccess();
          sub_100024578(v93, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          swift_retain();
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_10012F618(v91);
          sub_100024448((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_10003B6F8(v91, (uint64_t *)&unk_10078E260);
          swift_release();
          --v85;
        }
        while (v85);
      }
      else
      {
        uint64_t v86 = (uint64_t *)(v117 + 8 * v40);
        uint64_t v87 = (uint64_t)v96;
        do
        {
          uint64_t v88 = *v86++;
          uint64_t v89 = v88 + *(void *)(*(void *)v88 + 144);
          swift_beginAccess();
          sub_100024578(v89, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          swift_retain();
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_10012F618(v87);
          sub_100024448((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_10003B6F8(v87, (uint64_t *)&unk_10078E260);
          swift_release();
          --v85;
        }
        while (v85);
      }
      swift_unknownObjectRelease();
      uint64_t v41 = v115;
      uint64_t v40 = v116;
      uint64_t v42 = (void (*)(char *, uint64_t))v97;
    }
    swift_endAccess();
    sub_1003CC2A8(v119, v117, v40, v120, 1, v100, 0);
    v42(v113, v41);
    swift_unknownObjectRelease();
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t sub_1003D4A34(unint64_t a1, void (*a2)(uint64_t, uint64_t *), void (*a3)(uint64_t, uint64_t *), uint64_t a4)
{
  uint64_t v8 = v4;
  if (*(unsigned char *)(v4 + 72) == 2) {
    goto LABEL_6;
  }
  if (qword_1007852F8 != -1) {
    goto LABEL_29;
  }
  while (1)
  {
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_100792330);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Remove requires expanded state", v13, 2u);
      swift_slowDealloc();
    }

LABEL_6:
    swift_beginAccess();
    uint64_t v14 = *(void *)(v8 + 64);
    if ((v14 & 0xC000000000000001) != 0)
    {
      uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1) {
        goto LABEL_25;
      }
      uint64_t v15 = *(void *)(v14 + 8 * a1 + 32);
      swift_retain();
    }
    swift_endAccess();
    a2 = (void (*)(uint64_t, uint64_t *))sub_1003DDDB8(a1, a2);
    if (*(unsigned char *)(v15 + 48) == 1)
    {
      v23[0] = 0;
      a3(v15, v23);
      uint64_t v16 = v23[0];
      *(void *)(v15 + 40) = v23[0];
      *(unsigned char *)(v15 + 48) = 0;
    }
    else
    {
      uint64_t v16 = *(void *)(v15 + 40);
    }
    a3 = (void (*)(uint64_t, uint64_t *))(v16 + 1);
    if (__OFADD__(v16, 1)) {
      goto LABEL_26;
    }
    swift_beginAccess();
    ((void (*)(unint64_t))a4)(a1);
    swift_endAccess();
    uint64_t result = swift_release();
    if ((*(unsigned char *)(v8 + 48) & 1) == 0) {
      break;
    }
LABEL_17:
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v8 = Strong;
      a4 = 1;
      do
      {
        *(void *)(v8 + 40) = 0;
        *(unsigned char *)(v8 + 48) = 1;
        uint64_t v22 = swift_weakLoadStrong();
        swift_release();
        uint64_t v8 = v22;
      }
      while (v22);
    }
    swift_release();
    if (__OFADD__(a2, a3)) {
      goto LABEL_27;
    }
    if ((uint64_t)((char *)a3 + (unint64_t)a2) >= (uint64_t)a2) {
      return (uint64_t)a2;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
  }
  uint64_t v18 = *(void *)(v8 + 40);
  BOOL v19 = __OFSUB__(v18, a3);
  uint64_t v20 = v18 - (void)a3;
  if (!v19)
  {
    *(void *)(v8 + 40) = v20;
    *(unsigned char *)(v8 + 48) = 0;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003D4CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  *(void *)&long long v20 = a5();
  *((void *)&v20 + 1) = v11;
  uint64_t v21 = v12;
  char v22 = v13 & 1;
  uint64_t v14 = qword_10078DED8;
  *(unsigned char *)(a2 + qword_10078DED8) = 1;
  a6(&v20, a3, a2, a1, a4);
  uint64_t v15 = v21;
  char v16 = v22;
  uint64_t v17 = a2 + qword_10078DED0;
  uint64_t v18 = *(void *)(a2 + qword_10078DED0);
  *(_OWORD *)uint64_t v17 = v20;
  *(void *)(v17 + 16) = v15;
  *(unsigned char *)(v17 + 24) = v16;
  uint64_t result = sub_1000349CC(v18);
  *(unsigned char *)(a2 + v14) = 0;
  return result;
}

uint64_t sub_1003D4D78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v80 = a5;
  uint64_t v79 = a4;
  unint64_t v95 = a3;
  uint64_t v94 = a2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v6 - 8);
  uint64_t v90 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for IndexSet.Index();
  uint64_t v88 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  int64_t v85 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v86 = (char *)&v77 - v16;
  uint64_t v17 = sub_10003B754(&qword_10078E2E8);
  __chkstk_darwin(v17 - 8);
  BOOL v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10003B754(&qword_10078E2F0);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v93 = (uint64_t)&v77 - v25;
  uint64_t v26 = type metadata accessor for IndexSet();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v28(v19, v94, v26);
  v28(v23, (uint64_t)v19, v26);
  uint64_t v29 = sub_1003E1E04(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  os_log_type_t v30 = v86;
  uint64_t v92 = v29;
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v32 = v93;
  uint64_t v84 = v26;
  v31(v19, v26);
  uint64_t v33 = v88;
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v23[*(int *)(v21 + 44)], v30, v87);
  sub_100028C3C((uint64_t)v23, v32, &qword_10078E2F0);
  uint64_t v34 = v32 + *(int *)(v21 + 44);
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  unint64_t v89 = v95 + qword_10078DEE8;
  uint64_t v88 = v33 + 16;
  uint64_t v82 = (void (**)(char *, uint64_t))(v33 + 8);
  long long v81 = xmmword_10066D470;
  uint64_t v78 = v34;
  uint64_t v77 = a1;
  while (1)
  {
    uint64_t v35 = v86;
    uint64_t v36 = v87;
    v83(v86, v34, v87);
    uint64_t v37 = v85;
    dispatch thunk of Collection.startIndex.getter();
    sub_1003E1E04(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    LODWORD(v95) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v38 = *v82;
    (*v82)(v37, v36);
    v38(v35, v36);
    if (v95) {
      return sub_10003B6F8(v93, &qword_10078E2F0);
    }
    sub_1003E1E04(&qword_10078E308, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)();
    unint64_t v39 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    unint64_t v41 = *v40;
    v39(&v96, 0);
    uint64_t v42 = sub_1003C086C(v41);
    unint64_t v95 = v43;
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v81;
    *(void *)(inited + 32) = v42;
    uint64_t v96 = inited;
    specialized Array._endMutation()();
    uint64_t v45 = v96;
    uint64_t v94 = v42;
    swift_retain();
    if ((v45 & 0xC000000000000001) != 0)
    {
      uint64_t v46 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v46 = *(void *)(v45 + 32);
      swift_retain();
    }
    uint64_t v47 = v46 + *(void *)(*(void *)v46 + 144);
    swift_beginAccess();
    sub_100024578(v47, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1003CD538((uint64_t)v13, v46);
    sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v48 = sub_10035C1D0(v46);
    if (v49)
    {
      uint64_t v50 = v48;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v52 = *(void *)(a1 + 16);
      uint64_t v96 = v52;
      *(void *)(a1 + 16) = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100360BDC();
        uint64_t v52 = v96;
      }
      swift_release();
      sub_10035F6CC(v50, v52);
      *(void *)(a1 + 16) = v52;
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    swift_bridgeObjectRelease();
    unint64_t v53 = v95;
    unint64_t v91 = v41;
    if (v95 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v54 = result;
      if (!result) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v54 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (!v54) {
        goto LABEL_27;
      }
    }
    if (v54 < 1) {
      break;
    }
    uint64_t v56 = 0;
    unint64_t v57 = v53 & 0xC000000000000001;
    do
    {
      if (v57)
      {
        uint64_t v58 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v58 = *(void *)(v53 + 8 * v56 + 32);
        swift_retain();
      }
      uint64_t v59 = v58 + *(void *)(*(void *)v58 + 144);
      swift_beginAccess();
      sub_100024578(v59, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1003CD538((uint64_t)v13, v58);
      sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      uint64_t v60 = sub_10035C1D0(v58);
      if (v61)
      {
        uint64_t v62 = v60;
        char v63 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v64 = *(void *)(a1 + 16);
        uint64_t v96 = v64;
        *(void *)(a1 + 16) = 0x8000000000000000;
        if ((v63 & 1) == 0)
        {
          sub_100360BDC();
          uint64_t v64 = v96;
        }
        swift_release();
        sub_10035F6CC(v62, v64);
        *(void *)(a1 + 16) = v64;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      ++v56;
      unint64_t v53 = v95;
    }
    while (v54 != v56);
LABEL_27:
    swift_bridgeObjectRelease_n();
    sub_1000872B8(v91, -1);
    swift_beginAccess();
    uint64_t v65 = v94 + *(void *)(*(void *)v94 + 144);
    swift_beginAccess();
    sub_100024578(v65, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v66 = v90;
    sub_10012F180(v90);
    sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v67 = (uint64_t *)&unk_10078E360;
    uint64_t result = sub_10003B6F8(v66, (uint64_t *)&unk_10078E360);
    if (v54)
    {
      if (v54 < 1) {
        goto LABEL_38;
      }
      if ((v53 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v68 = 0;
        uint64_t v69 = v90;
        do
        {
          uint64_t v70 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          ++v68;
          uint64_t v71 = v67;
          uint64_t v72 = v70 + *(void *)(*(void *)v70 + 144);
          swift_beginAccess();
          sub_100024578(v72, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10012F180(v69);
          uint64_t v67 = v71;
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_10003B6F8(v69, v71);
          swift_unknownObjectRelease();
        }
        while (v54 != v68);
        swift_bridgeObjectRelease();
        a1 = v77;
      }
      else
      {
        unint64_t v73 = (uint64_t *)(v53 + 32);
        swift_bridgeObjectRetain();
        uint64_t v74 = v90;
        do
        {
          uint64_t v75 = *v73++;
          uint64_t v76 = v75 + *(void *)(*(void *)v75 + 144);
          swift_beginAccess();
          sub_100024578(v76, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10012F180(v74);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_10003B6F8(v74, (uint64_t *)&unk_10078E360);
          swift_release();
          --v54;
        }
        while (v54);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1003CB440(1, v94, 1, v80, 0);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v34 = v78;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1003D5A04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v80 = a5;
  uint64_t v79 = a4;
  unint64_t v95 = a3;
  uint64_t v94 = a2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10078E260);
  __chkstk_darwin(v6 - 8);
  uint64_t v90 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for IndexSet.Index();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v14 = __chkstk_darwin(v87);
  int64_t v85 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v86 = (char *)&v77 - v16;
  uint64_t v17 = sub_10003B754(&qword_10078E2E8);
  __chkstk_darwin(v17 - 8);
  BOOL v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10003B754(&qword_10078E2F0);
  uint64_t v21 = v20 - 8;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v93 = (uint64_t)&v77 - v25;
  uint64_t v26 = type metadata accessor for IndexSet();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v28(v19, v94, v26);
  v28(v24, (uint64_t)v19, v26);
  uint64_t v29 = sub_1003E1E04(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  os_log_type_t v30 = v86;
  uint64_t v92 = v29;
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v32 = v93;
  uint64_t v84 = v26;
  v31(v19, v26);
  uint64_t v33 = v88;
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v24[*(int *)(v21 + 44)], v30, v87);
  sub_100028C3C((uint64_t)v24, v32, &qword_10078E2F0);
  uint64_t v34 = v32 + *(int *)(v21 + 44);
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  unint64_t v89 = v95 + qword_10078DEE8;
  uint64_t v88 = v33 + 16;
  uint64_t v82 = (void (**)(char *, uint64_t))(v33 + 8);
  long long v81 = xmmword_10066D470;
  uint64_t v78 = v34;
  uint64_t v77 = a1;
  while (1)
  {
    uint64_t v35 = v86;
    uint64_t v36 = v87;
    v83(v86, v34, v87);
    uint64_t v37 = v85;
    dispatch thunk of Collection.startIndex.getter();
    sub_1003E1E04(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    LODWORD(v95) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v38 = *v82;
    (*v82)(v37, v36);
    v38(v35, v36);
    if (v95) {
      return sub_10003B6F8(v93, &qword_10078E2F0);
    }
    sub_1003E1E04(&qword_10078E308, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)();
    unint64_t v39 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    unint64_t v41 = *v40;
    v39(&v96, 0);
    uint64_t v42 = sub_1003C0A68(v41);
    unint64_t v95 = v43;
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v81;
    *(void *)(inited + 32) = v42;
    uint64_t v96 = inited;
    specialized Array._endMutation()();
    uint64_t v45 = v96;
    uint64_t v94 = v42;
    swift_retain();
    if ((v45 & 0xC000000000000001) != 0)
    {
      uint64_t v46 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v46 = *(void *)(v45 + 32);
      swift_retain();
    }
    uint64_t v47 = v46 + *(void *)(*(void *)v46 + 144);
    swift_beginAccess();
    sub_100024578(v47, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
    sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_1003CD81C((uint64_t)v13, v46);
    sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    uint64_t v48 = sub_10035C1D0(v46);
    if (v49)
    {
      uint64_t v50 = v48;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v52 = *(void *)(a1 + 16);
      uint64_t v96 = v52;
      *(void *)(a1 + 16) = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10036216C();
        uint64_t v52 = v96;
      }
      swift_release();
      sub_10035F6CC(v50, v52);
      *(void *)(a1 + 16) = v52;
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    swift_bridgeObjectRelease();
    unint64_t v53 = v95;
    unint64_t v91 = v41;
    if (v95 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v54 = result;
      if (!result) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v54 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (!v54) {
        goto LABEL_27;
      }
    }
    if (v54 < 1) {
      break;
    }
    uint64_t v56 = 0;
    unint64_t v57 = v53 & 0xC000000000000001;
    do
    {
      if (v57)
      {
        uint64_t v58 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v58 = *(void *)(v53 + 8 * v56 + 32);
        swift_retain();
      }
      uint64_t v59 = v58 + *(void *)(*(void *)v58 + 144);
      swift_beginAccess();
      sub_100024578(v59, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
      sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_1003CD81C((uint64_t)v13, v58);
      sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      uint64_t v60 = sub_10035C1D0(v58);
      if (v61)
      {
        uint64_t v62 = v60;
        char v63 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v64 = *(void *)(a1 + 16);
        uint64_t v96 = v64;
        *(void *)(a1 + 16) = 0x8000000000000000;
        if ((v63 & 1) == 0)
        {
          sub_10036216C();
          uint64_t v64 = v96;
        }
        swift_release();
        sub_10035F6CC(v62, v64);
        *(void *)(a1 + 16) = v64;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      ++v56;
      unint64_t v53 = v95;
    }
    while (v54 != v56);
LABEL_27:
    swift_bridgeObjectRelease_n();
    sub_1000875C4(v91, -1);
    swift_beginAccess();
    uint64_t v65 = v94 + *(void *)(*(void *)v94 + 144);
    swift_beginAccess();
    sub_100024578(v65, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
    sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    uint64_t v66 = v90;
    sub_10012F618(v90);
    sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    uint64_t v67 = (uint64_t *)&unk_10078E260;
    uint64_t result = sub_10003B6F8(v66, (uint64_t *)&unk_10078E260);
    if (v54)
    {
      if (v54 < 1) {
        goto LABEL_38;
      }
      if ((v53 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v68 = 0;
        uint64_t v69 = v90;
        do
        {
          uint64_t v70 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          ++v68;
          uint64_t v71 = v67;
          uint64_t v72 = v70 + *(void *)(*(void *)v70 + 144);
          swift_beginAccess();
          sub_100024578(v72, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_10012F618(v69);
          uint64_t v67 = v71;
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_10003B6F8(v69, v71);
          swift_unknownObjectRelease();
        }
        while (v54 != v68);
        swift_bridgeObjectRelease();
        a1 = v77;
      }
      else
      {
        unint64_t v73 = (uint64_t *)(v53 + 32);
        swift_bridgeObjectRetain();
        uint64_t v74 = v90;
        do
        {
          uint64_t v75 = *v73++;
          uint64_t v76 = v75 + *(void *)(*(void *)v75 + 144);
          swift_beginAccess();
          sub_100024578(v76, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          swift_retain();
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_10012F618(v74);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_10003B6F8(v74, (uint64_t *)&unk_10078E260);
          swift_release();
          --v54;
        }
        while (v54);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1003CB6D0(1, v94, 1, v80, 0);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v34 = v78;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1003D6690(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v101 = a4;
  uint64_t v102 = a2;
  uint64_t v90 = a1;
  uint64_t v7 = type metadata accessor for IndexSet();
  uint64_t v99 = *(void *)(v7 - 8);
  uint64_t v100 = (char *)v7;
  __chkstk_darwin(v7);
  BOOL v98 = (void (*)(void))((char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v92 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v94 = (char *)&v88 - v12;
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v95 = *(void *)(v13 - 8);
  uint64_t v96 = v13;
  __chkstk_darwin(v13);
  unint64_t v91 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v93 = (char *)&v88 - v16;
  uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v103 = (uint64_t)&v88 - v22;
  uint64_t v23 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v88 - v27;
  uint64_t v29 = sub_10003B754(&qword_1007936A8);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = (uint64_t)&v31[*(int *)(v32 + 56)];
  sub_10003B694(a3, (uint64_t)v31, (uint64_t *)&unk_100788DC0);
  sub_10003B694(a5, v33, (uint64_t *)&unk_100788DC0);
  uint64_t v97 = v18;
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v34((uint64_t)v31, 1, v17) != 1)
  {
    sub_10003B694((uint64_t)v31, (uint64_t)v28, (uint64_t *)&unk_100788DC0);
    if (v34(v33, 1, v17) == 1)
    {
      sub_100024448((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_36;
    }
    uint64_t v36 = (uint64_t)v28;
    uint64_t v37 = v103;
    sub_10004007C(v36, v103, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10004007C(v33, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000890D8();
    uint64_t v39 = sub_100091DF0(v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v89 = v39;
    if (v39)
    {
      sub_1000890D8();
      uint64_t v41 = sub_100091DF0((uint64_t)v20, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41)
      {
        if (*(unsigned char *)(v41 + 72) == 2)
        {
          uint64_t v42 = sub_1000890D8();
          uint64_t v44 = v94;
          sub_1003CDB40(v89, v42, v45, v43 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v94);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = v95;
          uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
          if (v47(v44, 1, v96) == 1)
          {
            uint64_t v48 = (uint64_t)v44;
            uint64_t v49 = v103;
            uint64_t v50 = (uint64_t)v20;
          }
          else
          {
            uint64_t v100 = v20;
            uint64_t v66 = v93;
            BOOL v98 = *(void (**)(void))(v46 + 32);
            v98();
            uint64_t v67 = sub_1000890D8();
            uint64_t v69 = v92;
            uint64_t v99 = v41;
            sub_1003CDB40(v41, v67, v70, v68 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v92);
            swift_bridgeObjectRelease();
            uint64_t v71 = v96;
            swift_bridgeObjectRelease();
            uint64_t v48 = (uint64_t)v69;
            swift_bridgeObjectRelease();
            if (v47(v69, 1, v71) != 1)
            {
              uint64_t v77 = v91;
              uint64_t v78 = ((uint64_t (*)(char *, char *, uint64_t))v98)(v91, v69, v71);
              uint64_t v79 = v89;
              if (*(unsigned char *)(v89 + 72) == 1)
              {
                __chkstk_darwin(v78);
                uint64_t v80 = v90;
                *(&v88 - 4) = (uint64_t)v104;
                *(&v88 - 3) = v80;
                uint64_t v86 = (char *)v99;
                uint64_t v87 = v101;
                sub_1003CE654((void (*)(uint64_t))sub_1003E2034, (uint64_t)(&v88 - 6), 0, 0, 0, 0);
                swift_release();
                swift_release();
                sub_100024448((uint64_t)v100, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_100024448(v103, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                uint64_t v81 = v96;
                uint64_t v82 = *(void (**)(char *, uint64_t))(v95 + 8);
                v82(v77, v96);
                uint64_t v83 = v93;
              }
              else
              {
                __chkstk_darwin(v78);
                *(&v88 - 8) = (uint64_t)v104;
                *(&v88 - 7) = v79;
                uint64_t v84 = v99;
                *(&v88 - 6) = v102;
                *(&v88 - 5) = v84;
                int64_t v85 = v93;
                *(&v88 - 4) = v101;
                *(&v88 - 3) = (uint64_t)v85;
                uint64_t v86 = v77;
                sub_1003CE654((void (*)(uint64_t))sub_1003E1FCC, (uint64_t)(&v88 - 10), 0, 0, 0, 0);
                swift_release();
                swift_release();
                sub_100024448((uint64_t)v100, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_100024448(v103, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                uint64_t v81 = v96;
                uint64_t v82 = *(void (**)(char *, uint64_t))(v95 + 8);
                v82(v77, v96);
                uint64_t v83 = v85;
              }
              v82(v83, v81);
              return sub_10003B6F8((uint64_t)v31, (uint64_t *)&unk_100788DC0);
            }
            (*(void (**)(char *, uint64_t))(v95 + 8))(v66, v71);
            uint64_t v49 = v103;
            uint64_t v50 = (uint64_t)v100;
          }
          sub_10003B6F8(v48, &qword_10078E8F0);
          if (qword_1007852B8 != -1) {
            swift_once();
          }
          uint64_t v72 = type metadata accessor for Logger();
          sub_100018BF8(v72, (uint64_t)qword_10078DE60);
          unint64_t v73 = Logger.logObject.getter();
          os_log_type_t v74 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v73, v74))
          {
            uint64_t v75 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v75 = 0;
            _os_log_impl((void *)&_mh_execute_header, v73, v74, "Unable to find old/newChildrenStartIndexPath", v75, 2u);
            swift_slowDealloc();
          }
          swift_release();
          swift_release();

          uint64_t v56 = v50;
          goto LABEL_28;
        }
        swift_release();
      }
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v57 = type metadata accessor for Logger();
      sub_100018BF8(v57, (uint64_t)qword_10078DE60);
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v60 = 0;
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "newParentNode is not found or not expanded, treating this as a delete.", v60, 2u);
        swift_slowDealloc();
      }

      sub_10003B754((uint64_t *)&unk_100797A30);
      uint64_t v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = xmmword_10066C6F0;
      *(void *)(v61 + 32) = v102;
      uint64_t v105 = v61;
      sub_1003E1E04((unint64_t *)&qword_10078E310, (void (*)(uint64_t))&type metadata accessor for IndexSet);
      sub_10003B754(&qword_100789060);
      sub_1000996F8();
      uint64_t v62 = (uint64_t)v98;
      uint64_t v63 = (uint64_t)v100;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v64 = v103;
      sub_100024578(v103, (uint64_t)v25, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v25, 0, 1, v17);
      sub_1003D2398(v62, (uint64_t)v25, 100);
      swift_release();
      sub_10003B6F8((uint64_t)v25, (uint64_t *)&unk_100788DC0);
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v62, v63);
      sub_100024448((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v65 = v64;
      goto LABEL_29;
    }
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    sub_100018BF8(v51, (uint64_t)qword_10078DE60);
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.info.getter();
    BOOL v54 = os_log_type_enabled(v52, v53);
    uint64_t v49 = v103;
    if (v54)
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "oldParentNode is not found, nothing to do.", v55, 2u);
      swift_slowDealloc();
    }

    uint64_t v56 = (uint64_t)v20;
LABEL_28:
    sub_100024448(v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v65 = v49;
LABEL_29:
    sub_100024448(v65, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return sub_10003B6F8((uint64_t)v31, (uint64_t *)&unk_100788DC0);
  }
  if (v34(v33, 1, v17) == 1)
  {
    id v35 = v104;
    sub_10013C9E8(0, 0, 0, 0, (uint64_t)v35, (uint64_t)v35, v102, v101);

    return sub_10003B6F8((uint64_t)v31, (uint64_t *)&unk_100788DC0);
  }
LABEL_36:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D736C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v101 = a4;
  uint64_t v102 = a2;
  uint64_t v90 = a1;
  uint64_t v7 = type metadata accessor for IndexSet();
  uint64_t v99 = *(void *)(v7 - 8);
  uint64_t v100 = (char *)v7;
  __chkstk_darwin(v7);
  BOOL v98 = (void (*)(void))((char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v92 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v94 = (char *)&v88 - v12;
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v95 = *(void *)(v13 - 8);
  uint64_t v96 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v91 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v93 = (char *)&v88 - v16;
  uint64_t v17 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v103 = (uint64_t)&v88 - v22;
  uint64_t v23 = sub_10003B754((uint64_t *)&unk_100788D10);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v88 - v27;
  uint64_t v29 = sub_10003B754(&qword_10079D9E8);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v32 = (char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = (uint64_t)&v32[*(int *)(v30 + 56)];
  sub_10003B694(a3, (uint64_t)v32, (uint64_t *)&unk_100788D10);
  sub_10003B694(a5, v33, (uint64_t *)&unk_100788D10);
  uint64_t v97 = v18;
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v34((uint64_t)v32, 1, v17) != 1)
  {
    sub_10003B694((uint64_t)v32, (uint64_t)v28, (uint64_t *)&unk_100788D10);
    if (v34(v33, 1, v17) == 1)
    {
      sub_100024448((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      goto LABEL_36;
    }
    uint64_t v36 = (uint64_t)v28;
    uint64_t v37 = v103;
    sub_10004007C(v36, v103, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10004007C(v33, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100089354();
    uint64_t v39 = sub_100091FDC(v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v89 = v39;
    if (v39)
    {
      sub_100089354();
      uint64_t v41 = sub_100091FDC((uint64_t)v21, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41)
      {
        if (*(unsigned char *)(v41 + 72) == 2)
        {
          uint64_t v42 = sub_100089354();
          uint64_t v44 = v94;
          sub_1003CDB40(v89, v42, v45, v43 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v94);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = v95;
          uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
          if (v47(v44, 1, v96) == 1)
          {
            uint64_t v48 = (uint64_t)v44;
            uint64_t v49 = v103;
            uint64_t v50 = (uint64_t)v21;
          }
          else
          {
            uint64_t v100 = v21;
            uint64_t v66 = v93;
            BOOL v98 = *(void (**)(void))(v46 + 32);
            v98();
            uint64_t v67 = sub_100089354();
            uint64_t v69 = v92;
            uint64_t v99 = v41;
            sub_1003CDB40(v41, v67, v70, v68 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v92);
            swift_bridgeObjectRelease();
            uint64_t v71 = v96;
            swift_bridgeObjectRelease();
            uint64_t v48 = (uint64_t)v69;
            swift_bridgeObjectRelease();
            if (v47(v69, 1, v71) != 1)
            {
              uint64_t v77 = v91;
              uint64_t v78 = ((uint64_t (*)(char *, char *, uint64_t))v98)(v91, v69, v71);
              uint64_t v79 = v89;
              if (*(unsigned char *)(v89 + 72) == 1)
              {
                __chkstk_darwin(v78);
                uint64_t v80 = v90;
                *(&v88 - 4) = (uint64_t)v104;
                *(&v88 - 3) = v80;
                uint64_t v86 = (char *)v99;
                uint64_t v87 = v101;
                sub_1003CEE4C((void (*)(uint64_t))sub_1003E1EEC, (uint64_t)(&v88 - 6), 0, 0, 0, 0);
                swift_release();
                swift_release();
                sub_100024448((uint64_t)v100, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                sub_100024448(v103, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                uint64_t v81 = v96;
                uint64_t v82 = *(void (**)(char *, uint64_t))(v95 + 8);
                v82(v77, v96);
                uint64_t v83 = v93;
              }
              else
              {
                __chkstk_darwin(v78);
                *(&v88 - 8) = (uint64_t)v104;
                *(&v88 - 7) = v79;
                uint64_t v84 = v99;
                *(&v88 - 6) = v102;
                *(&v88 - 5) = v84;
                int64_t v85 = v93;
                *(&v88 - 4) = v101;
                *(&v88 - 3) = (uint64_t)v85;
                uint64_t v86 = v77;
                sub_1003CEE4C((void (*)(uint64_t))sub_1003E1EC0, (uint64_t)(&v88 - 10), 0, 0, 0, 0);
                swift_release();
                swift_release();
                sub_100024448((uint64_t)v100, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                sub_100024448(v103, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                uint64_t v81 = v96;
                uint64_t v82 = *(void (**)(char *, uint64_t))(v95 + 8);
                v82(v77, v96);
                uint64_t v83 = v85;
              }
              v82(v83, v81);
              return sub_10003B6F8((uint64_t)v32, (uint64_t *)&unk_100788D10);
            }
            (*(void (**)(char *, uint64_t))(v95 + 8))(v66, v71);
            uint64_t v49 = v103;
            uint64_t v50 = (uint64_t)v100;
          }
          sub_10003B6F8(v48, &qword_10078E8F0);
          if (qword_1007852B8 != -1) {
            swift_once();
          }
          uint64_t v72 = type metadata accessor for Logger();
          sub_100018BF8(v72, (uint64_t)qword_10078DE60);
          unint64_t v73 = Logger.logObject.getter();
          os_log_type_t v74 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v73, v74))
          {
            uint64_t v75 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v75 = 0;
            _os_log_impl((void *)&_mh_execute_header, v73, v74, "Unable to find old/newChildrenStartIndexPath", v75, 2u);
            swift_slowDealloc();
          }
          swift_release();
          swift_release();

          uint64_t v56 = v50;
          goto LABEL_28;
        }
        swift_release();
      }
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v57 = type metadata accessor for Logger();
      sub_100018BF8(v57, (uint64_t)qword_10078DE60);
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v60 = 0;
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "newParentNode is not found or not expanded, treating this as a delete.", v60, 2u);
        swift_slowDealloc();
      }

      sub_10003B754((uint64_t *)&unk_100797A30);
      uint64_t v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = xmmword_10066C6F0;
      *(void *)(v61 + 32) = v102;
      uint64_t v105 = v61;
      sub_1003E1E04((unint64_t *)&qword_10078E310, (void (*)(uint64_t))&type metadata accessor for IndexSet);
      sub_10003B754(&qword_100789060);
      sub_1000996F8();
      uint64_t v62 = (uint64_t)v98;
      uint64_t v63 = (uint64_t)v100;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v64 = v103;
      sub_100024578(v103, (uint64_t)v26, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v26, 0, 1, v17);
      sub_1003D290C(v62, (uint64_t)v26, 100);
      swift_release();
      sub_10003B6F8((uint64_t)v26, (uint64_t *)&unk_100788D10);
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v62, v63);
      sub_100024448((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v65 = v64;
      goto LABEL_29;
    }
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    sub_100018BF8(v51, (uint64_t)qword_10078DE60);
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.info.getter();
    BOOL v54 = os_log_type_enabled(v52, v53);
    uint64_t v49 = v103;
    if (v54)
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "oldParentNode is not found, nothing to do.", v55, 2u);
      swift_slowDealloc();
    }

    uint64_t v56 = (uint64_t)v21;
LABEL_28:
    sub_100024448(v56, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    uint64_t v65 = v49;
LABEL_29:
    sub_100024448(v65, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return sub_10003B6F8((uint64_t)v32, (uint64_t *)&unk_100788D10);
  }
  if (v34(v33, 1, v17) == 1)
  {
    id v35 = v104;
    sub_10013AD8C(0, 0, 0, 0, (uint64_t)v35, (uint64_t)v35, v102, v101);

    return sub_10003B6F8((uint64_t)v32, (uint64_t *)&unk_100788D10);
  }
LABEL_36:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D8048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void (*a7)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  *(void *)&long long v22 = a6();
  *((void *)&v22 + 1) = v13;
  uint64_t v23 = v14;
  char v24 = v15 & 1;
  uint64_t v16 = qword_10078DED8;
  *(unsigned char *)(a2 + qword_10078DED8) = 1;
  a7(&v22, a2, a3, a4, a5, a1);
  uint64_t v17 = v23;
  char v18 = v24;
  uint64_t v19 = a2 + qword_10078DED0;
  uint64_t v20 = *(void *)(a2 + qword_10078DED0);
  *(_OWORD *)uint64_t v19 = v22;
  *(void *)(v19 + 16) = v17;
  *(unsigned char *)(v19 + 24) = v18;
  uint64_t result = sub_1000349CC(v20);
  *(unsigned char *)(a2 + v16) = 0;
  return result;
}

uint64_t sub_1003D811C(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t isUniquelyReferenced_nonNull_native, uint64_t a6)
{
  uint64_t v66 = a1;
  uint64_t v10 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v63 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v65 = (char *)&v59 - v17;
  sub_10003B754((uint64_t *)&unk_10078E3A0);
  unint64_t v18 = swift_allocObject();
  unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
  *(void *)(v18 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
    goto LABEL_38;
  }
  do
  {
LABEL_2:
    unint64_t v20 = sub_10008DAE8((uint64_t)a3, a4, v18);
    swift_release();
    unint64_t v64 = v20;
    uint64_t v21 = sub_1003D8DF8(v20, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10054BFD8, (uint64_t (*)(void *))sub_100097140);
    unint64_t v67 = v22;
    uint64_t v23 = sub_1000890D8();
    uint64_t v25 = v24;
    unint64_t v27 = v26;
    sub_1003CDB40(a4, v23, v26, v28 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      swift_bridgeObjectRelease();
      sub_10003B6F8((uint64_t)v12, &qword_10078E8F0);
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_100018BF8(v29, (uint64_t)qword_10078DE60);
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Can't find indexPath to insert currentItem into", v32, 2u);
        swift_slowDealloc();
      }

      return swift_release();
    }
    unint64_t v68 = v21;
    uint64_t v34 = v65;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v65, v12, v13);
    unint64_t v19 = (unint64_t)v70;
    id v35 = (void (*)(unsigned char *, void))IndexPath.row.modify();
    if (__OFADD__(*v36, v67))
    {
      __break(1u);
    }
    else
    {
      *v36 += v67;
      v35(v70, 0);
      a4 = (uint64_t)v63;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v34, v13);
      unint64_t v19 = IndexPath.section.getter();
      unint64_t v27 = v68;
      swift_bridgeObjectRetain();
      uint64_t v25 = IndexPath.row.getter();
      uint64_t v12 = (char *)v66;
      uint64_t v21 = *v66;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if ((v19 & 0x8000000000000000) != 0) {
          goto LABEL_45;
        }
        goto LABEL_11;
      }
    }
    uint64_t v21 = (uint64_t)sub_100366F28(v21);
    if ((v19 & 0x8000000000000000) != 0)
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      swift_bridgeObjectRetain();
      uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
      if (!v39)
      {
LABEL_48:
        swift_release();
        swift_bridgeObjectRelease();
        v60(v65, v62);
        return swift_bridgeObjectRelease();
      }
      goto LABEL_14;
    }
LABEL_11:
    if (v19 >= *(void *)(v21 + 16)) {
      goto LABEL_46;
    }
    sub_10054BB9C(v25, v25, v27);
    *(void *)uint64_t v12 = v21;
    uint64_t v37 = IndexPath.section.getter();
    sub_100087C30(v27, v37);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v38(a4, v13);
    uint64_t v61 = v14 + 8;
    uint64_t v62 = v13;
    uint64_t v60 = (void (*)(char *, uint64_t))v38;
    if (v27 >> 62) {
      goto LABEL_47;
    }
    uint64_t v39 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v39) {
      goto LABEL_48;
    }
LABEL_14:
    if (v39 < 1)
    {
      __break(1u);
      goto LABEL_50;
    }
    uint64_t v14 = 0;
    uint64_t v66 = (uint64_t *)v39;
    unint64_t v67 = v27 & 0xC000000000000001;
    uint64_t v12 = (char *)(a6 + 80);
    while (1)
    {
      if (v67)
      {
        a4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        a4 = *(void *)(v27 + 8 * v14 + 32);
        swift_retain();
      }
      swift_beginAccess();
      uint64_t v41 = *(void *)(a6 + 88);
      if (*(void *)(v41 + 16) && (uint64_t v42 = sub_10035C1D0(a4), (v43 & 1) != 0))
      {
        uint64_t v44 = *(void *)(v41 + 56) + 16 * v42;
        uint64_t v45 = *(void **)v44;
        uint64_t v13 = *(void *)(v44 + 8);
        swift_endAccess();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_endAccess();
        uint64_t v13 = 0;
        uint64_t v45 = _swiftEmptyDictionarySingleton;
      }
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v69 = *(void **)(a6 + 88);
      a3 = v69;
      *(void *)(a6 + 88) = 0x8000000000000000;
      unint64_t v18 = sub_10035C1D0(a4);
      uint64_t v47 = a3[2];
      BOOL v48 = (v46 & 1) == 0;
      uint64_t v49 = v47 + v48;
      if (__OFADD__(v47, v48)) {
        break;
      }
      unint64_t v19 = v46;
      if (a3[3] >= v49)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          char isUniquelyReferenced_nonNull_native = (uint64_t)v69;
          if (v46) {
            goto LABEL_16;
          }
        }
        else
        {
          a3 = &v69;
          sub_100360FD4();
          char isUniquelyReferenced_nonNull_native = (uint64_t)v69;
          if (v19) {
            goto LABEL_16;
          }
        }
      }
      else
      {
        sub_100572604(v49, isUniquelyReferenced_nonNull_native);
        a3 = v69;
        uint64_t v50 = sub_10035C1D0(a4);
        if ((v19 & 1) != (v51 & 1)) {
          goto LABEL_51;
        }
        unint64_t v18 = v50;
        char isUniquelyReferenced_nonNull_native = (uint64_t)v69;
        if (v19)
        {
LABEL_16:
          uint64_t v40 = (void *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 16 * v18);
          *uint64_t v40 = v45;
          v40[1] = v13;
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
      }
      *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v18 >> 6) + 64) |= 1 << v18;
      *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 8 * v18) = a4;
      uint64_t v52 = (void *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 16 * v18);
      *uint64_t v52 = v45;
      v52[1] = v13;
      uint64_t v53 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
      BOOL v54 = __OFADD__(v53, 1);
      uint64_t v55 = v53 + 1;
      if (v54) {
        goto LABEL_37;
      }
      *(void *)(isUniquelyReferenced_nonNull_native + 16) = v55;
      swift_retain();
LABEL_17:
      ++v14;
      *(void *)(a6 + 88) = isUniquelyReferenced_nonNull_native;
      swift_release();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      unint64_t v27 = v68;
      if (v66 == (uint64_t *)v14) {
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
  }
  while (!v56);
  if (v56 >= 1)
  {
    uint64_t v57 = (uint64_t *)(v19 + 32);
    do
    {
      uint64_t v58 = *v57;
      unint64_t v67 = (unint64_t)(v57 + 1);
      unint64_t v68 = v56;
      swift_weakAssign();
      swift_beginAccess();
      *(void *)(v58 + 64) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      uint64_t v57 = (uint64_t *)v67;
      uint64_t v56 = v68 - 1;
    }
    while (v68 != 1);
    goto LABEL_2;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  sub_10003B754(&qword_10078E370);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D88BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v40[1] = a6;
  uint64_t v42 = a1;
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v41 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v43 = (char *)v40 - v16;
  sub_10003B754((uint64_t *)&unk_100788D20);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = sub_100090290((unint64_t)&_swiftEmptyArrayStorage);
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result)
    {
      if (result < 1)
      {
LABEL_22:
        __break(1u);
        return result;
      }
      uint64_t v38 = (uint64_t *)((char *)&_swiftEmptyArrayStorage + 32);
      do
      {
        unint64_t v44 = result;
        uint64_t v39 = *v38++;
        swift_weakAssign();
        swift_beginAccess();
        *(void *)(v39 + 64) = &_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        uint64_t result = v44 - 1;
      }
      while (v44 != 1);
    }
  }
  unint64_t v18 = sub_10008DD58(a3, a4, inited);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  uint64_t v19 = (uint64_t)sub_10020B4F8;
  unint64_t v44 = v18;
  unint64_t v20 = sub_1003D8DF8(v18, a5, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10054C85C, (uint64_t (*)(void *))sub_10008DFC8);
  uint64_t v22 = v21;
  uint64_t v23 = sub_100089354();
  uint64_t v25 = (void *)v24;
  sub_1003CDB40(a4, v23, v24, v26 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    uint64_t v32 = v43;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v43, v11, v12);
    unint64_t v33 = (unint64_t)v45;
    uint64_t v34 = (void (*)(unsigned char *, void))IndexPath.row.modify();
    if (__OFADD__(*v35, v22))
    {
      __break(1u);
    }
    else
    {
      *v35 += v22;
      v34(v45, 0);
      uint64_t v11 = v41;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v41, v32, v12);
      unint64_t v33 = IndexPath.section.getter();
      swift_bridgeObjectRetain();
      uint64_t v19 = IndexPath.row.getter();
      uint64_t v25 = v42;
      uint64_t v22 = *v42;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        if ((v33 & 0x8000000000000000) == 0) {
          goto LABEL_11;
        }
        goto LABEL_20;
      }
    }
    uint64_t result = (uint64_t)sub_100366FA0(v22);
    uint64_t v22 = result;
    if ((v33 & 0x8000000000000000) == 0)
    {
LABEL_11:
      if (v33 < *(void *)(v22 + 16))
      {
        sub_10054C484(v19, v19, v20);
        *uint64_t v25 = v22;
        uint64_t v36 = IndexPath.section.getter();
        sub_1000882D0(v20, v36);
        uint64_t v37 = *(void (**)(char *, uint64_t))(v13 + 8);
        v37(v11, v12);
        sub_1003CBD98(v20, 0, 0, 1);
        swift_release();
        v37(v32, v12);
        return swift_bridgeObjectRelease();
      }
      goto LABEL_21;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  sub_10003B6F8((uint64_t)v11, &qword_10078E8F0);
  if (qword_1007852B8 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_100018BF8(v27, (uint64_t)qword_10078DE60);
  char v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Can't find indexPath to insert currentItem into", v30, 2u);
    swift_slowDealloc();
  }

  return swift_release();
}

uint64_t sub_1003D8DF8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t *), void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t (*a5)(void *))
{
  uint64_t v9 = v5;
  if (*(unsigned char *)(v5 + 72) != 2)
  {
    if (qword_1007852F8 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100018BF8(v12, (uint64_t)qword_100792330);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Insert requires expanded state", v15, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    swift_release();
    if (v17 == v9) {
      goto LABEL_13;
    }
  }
  if (qword_1007852F8 != -1) {
    goto LABEL_27;
  }
  while (1)
  {
    uint64_t v18 = type metadata accessor for Logger();
    sub_100018BF8(v18, (uint64_t)qword_100792330);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Subtree parent is not set correctly before calling insert.", v21, 2u);
      swift_slowDealloc();
    }

LABEL_13:
    a3 = (void (*)(uint64_t, uint64_t *))sub_1003DDDB8(a2, a3);
    swift_beginAccess();
    unint64_t v22 = *(void *)(v9 + 64);
    if (v22 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v31 < a2)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      if (v23 < a2) {
        goto LABEL_25;
      }
    }
    if ((a2 & 0x8000000000000000) == 0) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
  }
  a4(a2, a2, a1);
  swift_endAccess();
  v33[0] = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t result = sub_1003DDCE4(v33, a5);
  if (*(unsigned char *)(v9 + 48))
  {
LABEL_20:
    uint64_t v28 = swift_weakLoadStrong();
    if (v28)
    {
      uint64_t v29 = v28;
      do
      {
        *(void *)(v29 + 40) = 0;
        *(unsigned char *)(v29 + 48) = 1;
        uint64_t v30 = swift_weakLoadStrong();
        swift_release();
        uint64_t v29 = v30;
      }
      while (v30);
    }
    return v33[0];
  }
  uint64_t v25 = *(void *)(v9 + 40);
  if (v33[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v27 = v25 + v32;
    if (__OFADD__(v25, v32)) {
      goto LABEL_30;
    }
LABEL_19:
    *(void *)(v9 + 40) = v27;
    *(unsigned char *)(v9 + 48) = 0;
    goto LABEL_20;
  }
  uint64_t v26 = *(void *)((v33[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v27 = v25 + v26;
  if (!__OFADD__(v25, v26)) {
    goto LABEL_19;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1003D9150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), void (*a10)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  *(void *)&long long v27 = a9();
  *((void *)&v27 + 1) = v18;
  uint64_t v28 = v19;
  char v29 = v20 & 1;
  uint64_t v21 = qword_10078DED8;
  *(unsigned char *)(a2 + qword_10078DED8) = 1;
  a10(&v27, a3, a4, a5, a6, a7, a8, a1);
  uint64_t v22 = v28;
  char v23 = v29;
  uint64_t v24 = a2 + qword_10078DED0;
  uint64_t v25 = *(void *)(a2 + qword_10078DED0);
  *(_OWORD *)uint64_t v24 = v27;
  *(void *)(v24 + 16) = v22;
  *(unsigned char *)(v24 + 24) = v23;
  uint64_t result = sub_1000349CC(v25);
  *(unsigned char *)(a2 + v21) = 0;
  return result;
}

uint64_t sub_1003D9240(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_1003D9578(a3, a4, a5, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (uint64_t)sub_1003C0780, (void (*)(uint64_t, uint64_t, uint64_t))sub_10054BFD8, (uint64_t (*)(void *))sub_100097140);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t result = IndexPath.row.getter();
  BOOL v11 = __OFADD__(result, v5);
  uint64_t v12 = result + v5;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  BOOL v11 = __OFADD__(result, v7);
  int64_t v13 = result + v7;
  if (v11)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v13 < v12)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t result = IndexPath.row.getter();
  BOOL v11 = __OFADD__(result, v9);
  uint64_t v14 = result + v9;
  if (v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v15 = IndexPath.section.getter();
  uint64_t result = IndexPath.section.getter();
  if (v15 == result && v12 < v14)
  {
    int64_t v16 = v13 - v12;
    if (!__OFSUB__(v13, v12))
    {
      BOOL v11 = __OFSUB__(v14, v16);
      v14 -= v16;
      if (!v11) {
        goto LABEL_9;
      }
LABEL_17:
      __break(1u);
      return result;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_9:
  unint64_t v17 = IndexPath.section.getter();
  unint64_t v18 = IndexPath.section.getter();
  uint64_t v19 = sub_1003CCFB8(v12, v13, v17, v18, v14);
  sub_1003CB960(v19, v20, v21, v22, 2, 0, 1);

  return swift_unknownObjectRelease();
}

uint64_t sub_1003D93DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_1003D9578(a3, a4, a5, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (uint64_t)sub_1003C0964, (void (*)(uint64_t, uint64_t, uint64_t))sub_10054C85C, (uint64_t (*)(void *))sub_10008DFC8);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t result = IndexPath.row.getter();
  BOOL v11 = __OFADD__(result, v5);
  uint64_t v12 = result + v5;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  BOOL v11 = __OFADD__(result, v7);
  int64_t v13 = result + v7;
  if (v11)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v13 < v12)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t result = IndexPath.row.getter();
  BOOL v11 = __OFADD__(result, v9);
  uint64_t v14 = result + v9;
  if (v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v15 = IndexPath.section.getter();
  uint64_t result = IndexPath.section.getter();
  if (v15 == result && v12 < v14)
  {
    int64_t v16 = v13 - v12;
    if (!__OFSUB__(v13, v12))
    {
      BOOL v11 = __OFSUB__(v14, v16);
      v14 -= v16;
      if (!v11) {
        goto LABEL_9;
      }
LABEL_17:
      __break(1u);
      return result;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_9:
  unint64_t v17 = IndexPath.section.getter();
  unint64_t v18 = IndexPath.section.getter();
  uint64_t v19 = sub_1003CD278(v12, v13, v17, v18, v14);
  sub_1003CC2A8(v19, v20, v21, v22, 2, 0, 1);

  return swift_unknownObjectRelease();
}

uint64_t sub_1003D9578(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t *), uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t), uint64_t (*a7)(void *))
{
  uint64_t v11 = v7;
  if (*(unsigned char *)(v7 + 72) == 2 && *(unsigned char *)(a2 + 72) == 2) {
    goto LABEL_7;
  }
  if (qword_1007852F8 != -1) {
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v15 = type metadata accessor for Logger();
    sub_100018BF8(v15, (uint64_t)qword_100792330);
    int64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Move requires expanded state", v18, 2u);
      swift_slowDealloc();
    }

LABEL_7:
    if (a2 != v11 || (uint64_t)a1 >= a3)
    {
      uint64_t result = a3;
      goto LABEL_12;
    }
    uint64_t result = a3 + 1;
    if (__OFADD__(a3, 1)) {
      break;
    }
LABEL_12:
    sub_1003DDDB8(result, a4);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v11 + 64);
    if ((v20 & 0xC000000000000001) != 0)
    {
      uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_16;
    }
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v21 = *(void *)(v20 + 8 * a1 + 32);
      swift_retain();
LABEL_16:
      swift_endAccess();
      uint64_t v22 = sub_1003D4A34(a1, a4, a4, a5);
      swift_weakAssign();
      sub_1003D8DF8(v21, a3, a4, a6, a7);
      swift_release();
      swift_bridgeObjectRelease();
      return v22;
    }
    __break(1u);
LABEL_20:
    swift_once();
  }
  __break(1u);
  return result;
}

void sub_1003D97AC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v133 = a3;
  int v132 = a2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v6 - 8);
  uint64_t v126 = &v122[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v127 = &v122[-v9];
  uint64_t v10 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v129 = &v122[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v130 = *(void *)(v12 - 8);
  uint64_t v131 = v12;
  __chkstk_darwin(v12);
  unint64_t v128 = &v122[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v14 - 8);
  int64_t v16 = &v122[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v19 = &v122[-v18];
  uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  char v23 = &v122[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  uint64_t v26 = &v122[-v25];
  __chkstk_darwin(v27);
  char v29 = &v122[-v28];
  sub_10003B694(a1, (uint64_t)v19, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
  {
    uint64_t v124 = v26;
    sub_10004007C((uint64_t)v19, (uint64_t)v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000890D8();
    uint64_t v40 = sub_100091DF0((uint64_t)v29, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v40)
    {
      uint64_t v52 = (uint64_t)v29;
LABEL_58:
      sub_100024448(v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return;
    }
    uint64_t v125 = v29;
    uint64_t v41 = sub_1000890D8();
    int v43 = sub_100136378(v40, v41, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v123 = v43;
    if (v43)
    {
      unint64_t v44 = v4;
      sub_1000890D8();
      uint64_t v46 = v45;
      if (*(void *)(v45 + 16))
      {
        uint64_t v47 = (uint64_t)v16;
        uint64_t v48 = sub_10035C1D0(v40);
        if (v49)
        {
          uint64_t v50 = *(void *)(*(void *)(v46 + 56) + 8 * v48);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v51 = 1;
LABEL_26:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v47, v51, 1, v20);
          uint64_t v63 = qword_10078DEB0;
          uint64_t v64 = *(void *)&v44[qword_10078DEB0];
          if (v64)
          {
            uint64_t v65 = *(uint64_t (**)(uint64_t))(v64 + 16);
            uint64_t v66 = swift_retain();
            if (v65(v66))
            {
              uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
              (*(void (**)(void *, uint64_t, uint64_t))(v64 + 48))(Strong, v50, v47);
              swift_release();

              sub_10004007C((uint64_t)v23, (uint64_t)v124, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              uint64_t v68 = *(void *)&v44[v63];
              if (v68)
              {
                uint64_t v69 = *(uint64_t (**)(uint64_t))(v68 + 16);
                uint64_t v70 = swift_retain();
                if (v69(v70))
                {
                  uint64_t v71 = (void *)swift_unknownObjectUnownedLoadStrong();
                  char v72 = (*(uint64_t (**)(void *, unsigned char *))(v68 + 64))(v71, v124);
                  swift_release();

                  if (v72)
                  {
                    char v73 = *(unsigned char *)(v40 + 72);
                    uint64_t v75 = v130;
                    uint64_t v74 = v131;
                    if (!v73)
                    {
                      uint64_t v76 = (uint64_t *)&v44[qword_10078DEE8];
                      swift_beginAccess();
                      uint64_t v77 = *v76;
                      uint64_t v78 = v76[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      uint64_t v79 = (uint64_t)v127;
                      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
                      LOBYTE(v76) = sub_100456D84(v79, v77);
                      uint64_t v80 = v126;
                      sub_100024578(v79, (uint64_t)v126, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                      if (v76)
                      {
                        BOOL v81 = (sub_100456D84((uint64_t)v80, v78) & 1) == 0;
                        uint64_t v82 = (uint64_t)v80;
                        if (v81) {
                          char v73 = 1;
                        }
                        else {
                          char v73 = 2;
                        }
                      }
                      else
                      {
                        uint64_t v82 = (uint64_t)v80;
                        char v73 = 2;
                      }
                      sub_100024448(v82, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_100024448(v79, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                    }
                  }
                  else
                  {
                    char v73 = 0;
                    uint64_t v75 = v130;
                    uint64_t v74 = v131;
                  }
                  uint64_t v109 = v47;
                  uint64_t v110 = sub_1000890D8();
                  unint64_t v112 = v129;
                  sub_1003CDB40(v40, v110, v113, v111 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v129);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v114 = v112;
                  swift_bridgeObjectRelease();
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v112, 1, v74) != 1)
                  {
                    uint64_t v119 = v128;
                    uint64_t v120 = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(v75 + 32))(v128, v114, v74);
                    __chkstk_darwin(v120);
                    *(void *)&v122[-48] = v44;
                    *(void *)&v122[-40] = v40;
                    uint64_t v121 = (uint64_t)v124;
                    *(void *)&v122[-32] = v124;
                    v122[-24] = v73;
                    v122[-23] = v123 & 1;
                    v122[-22] = v132 & 1;
                    *(void *)&v122[-16] = v133;
                    *(void *)&v122[-8] = v119;
                    sub_1003CE654((void (*)(uint64_t))sub_1003E21AC, (uint64_t)&v122[-64], 0, 0, 0, 0);
                    sub_10003B6F8(v109, (uint64_t *)&unk_100788DC0);
                    sub_100024448((uint64_t)v125, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                    swift_release();
                    (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v119, v74);
                    uint64_t v52 = v121;
                    goto LABEL_58;
                  }
                  sub_10003B6F8((uint64_t)v112, &qword_10078E8F0);
                  if (qword_1007852B8 != -1) {
                    swift_once();
                  }
                  uint64_t v115 = type metadata accessor for Logger();
                  sub_100018BF8(v115, (uint64_t)qword_10078DE60);
                  id v104 = Logger.logObject.getter();
                  os_log_type_t v116 = static os_log_type_t.fault.getter();
                  BOOL v117 = os_log_type_enabled(v104, v116);
                  uint64_t v107 = (uint64_t)v125;
                  if (v117)
                  {
                    uint64_t v118 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v118 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v104, v116, "Unable to find childrenStartIndexPath", v118, 2u);
                    swift_slowDealloc();
                  }
                  goto LABEL_64;
                }
                swift_release();
              }
              if (qword_1007852B8 != -1) {
                swift_once();
              }
              uint64_t v103 = type metadata accessor for Logger();
              sub_100018BF8(v103, (uint64_t)qword_10078DE60);
              id v104 = Logger.logObject.getter();
              os_log_type_t v105 = static os_log_type_t.fault.getter();
              BOOL v106 = os_log_type_enabled(v104, v105);
              uint64_t v107 = (uint64_t)v125;
              if (v106)
              {
                uint64_t v108 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v108 = 0;
                _os_log_impl((void *)&_mh_execute_header, v104, v105, "Unable to get new item.", v108, 2u);
                swift_slowDealloc();
              }
LABEL_64:
              swift_release();

              sub_10003B6F8(v47, (uint64_t *)&unk_100788DC0);
              sub_100024448(v107, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              uint64_t v52 = (uint64_t)v124;
              goto LABEL_58;
            }
            swift_release();
          }
          if (qword_1007852B8 != -1) {
            swift_once();
          }
          uint64_t v98 = type metadata accessor for Logger();
          sub_100018BF8(v98, (uint64_t)qword_10078DE60);
          uint64_t v99 = Logger.logObject.getter();
          os_log_type_t v100 = static os_log_type_t.fault.getter();
          BOOL v101 = os_log_type_enabled(v99, v100);
          uint64_t v87 = (uint64_t)v125;
          if (v101)
          {
            uint64_t v102 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v102 = 0;
            _os_log_impl((void *)&_mh_execute_header, v99, v100, "Unable to get new item.", v102, 2u);
            swift_slowDealloc();
          }
          swift_release();

          sub_10003B6F8(v47, (uint64_t *)&unk_100788DC0);
          goto LABEL_57;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v83 = type metadata accessor for Logger();
      sub_100018BF8(v83, (uint64_t)qword_10078DE60);
      uint64_t v84 = Logger.logObject.getter();
      os_log_type_t v85 = static os_log_type_t.fault.getter();
      BOOL v86 = os_log_type_enabled(v84, v85);
      uint64_t v87 = (uint64_t)v125;
      if (v86)
      {
        uint64_t v88 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v88 = 0;
        uint64_t v89 = "Unable to find section index.";
LABEL_44:
        _os_log_impl((void *)&_mh_execute_header, v84, v85, v89, v88, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      unint64_t v44 = v4;
      uint64_t v57 = swift_weakLoadStrong();
      if (v57)
      {
        uint64_t v58 = (void *)v57;
        uint64_t v47 = (uint64_t)v16;
        swift_beginAccess();
        unint64_t v59 = v58[8];
        swift_bridgeObjectRetain();
        uint64_t v50 = sub_1003DB704(v40, v59);
        char v61 = v60;
        swift_bridgeObjectRelease();
        if (v61)
        {
          if (qword_1007852B8 != -1) {
            swift_once();
          }
          uint64_t v92 = type metadata accessor for Logger();
          sub_100018BF8(v92, (uint64_t)qword_10078DE60);
          uint64_t v93 = Logger.logObject.getter();
          os_log_type_t v94 = static os_log_type_t.fault.getter();
          BOOL v95 = os_log_type_enabled(v93, v94);
          uint64_t v96 = (uint64_t)v125;
          if (v95)
          {
            uint64_t v97 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v97 = 0;
            _os_log_impl((void *)&_mh_execute_header, v93, v94, "Unable to find index in parent.", v97, 2u);
            swift_slowDealloc();
          }
          swift_release();
          swift_release();

          uint64_t v52 = v96;
          goto LABEL_58;
        }
        uint64_t v62 = (uint64_t)v58 + *(void *)(*v58 + 144);
        swift_beginAccess();
        sub_100024578(v62, v47, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_release();
        uint64_t v51 = 0;
        goto LABEL_26;
      }
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v90 = type metadata accessor for Logger();
      sub_100018BF8(v90, (uint64_t)qword_10078DE60);
      uint64_t v84 = Logger.logObject.getter();
      os_log_type_t v85 = static os_log_type_t.fault.getter();
      BOOL v91 = os_log_type_enabled(v84, v85);
      uint64_t v87 = (uint64_t)v125;
      if (v91)
      {
        uint64_t v88 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v88 = 0;
        uint64_t v89 = "Unable to find parent node.";
        goto LABEL_44;
      }
    }
    swift_release();

LABEL_57:
    uint64_t v52 = v87;
    goto LABEL_58;
  }
  sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_100788DC0);
  uint64_t v30 = *(void *)&v4[qword_10078DEB0];
  if (v30)
  {
    uint64_t v31 = v4;
    uint64_t v32 = *(uint64_t (**)(uint64_t))(v30 + 16);
    uint64_t v33 = swift_retain();
    if (v32(v33))
    {
      if ((v132 & 1) == 0)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v34 = type metadata accessor for Logger();
        sub_100018BF8(v34, (uint64_t)qword_10078DE60);
        id v35 = Logger.logObject.getter();
        os_log_type_t v36 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v37 = 0;
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "Reloading the root(nil) only is not supported, treating reloadChildren as true", v37, 2u);
          swift_slowDealloc();
        }
      }
      swift_retain();
      id v38 = v31;
      sub_10013D2D0(0, 0, 0, 0, (uint64_t)v38, (uint64_t)v38, v30, v133);

      swift_release_n();
      return;
    }
    swift_release();
  }
  if (qword_1007852B8 != -1) {
    swift_once();
  }
  uint64_t v53 = type metadata accessor for Logger();
  sub_100018BF8(v53, (uint64_t)qword_10078DE60);
  BOOL v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v56 = 0;
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "dataSource is nil", v56, 2u);
    swift_slowDealloc();
  }
}

void sub_1003DA734(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v141 = a3;
  int v140 = a2;
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v137 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v138 = *(void *)(v8 - 8);
  uint64_t v139 = v8;
  __chkstk_darwin(v8);
  uint64_t v136 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v134 = (uint64_t)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v135 = (char *)&v130 - v13;
  uint64_t v14 = sub_10003B754((uint64_t *)&unk_100788D10);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v130 - v18;
  uint64_t v20 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v130 - v26;
  __chkstk_darwin(v25);
  char v29 = (char *)&v130 - v28;
  sub_10003B694(a1, (uint64_t)v19, (uint64_t *)&unk_100788D10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
  {
    uint64_t v133 = v27;
    sub_10004007C((uint64_t)v19, (uint64_t)v29, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100089354();
    uint64_t v39 = v4;
    uint64_t v40 = sub_100091FDC((uint64_t)v29, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v40)
    {
      uint64_t v54 = (uint64_t)v29;
LABEL_58:
      sub_100024448(v54, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      return;
    }
    int v132 = v29;
    uint64_t v41 = sub_100089354();
    int v43 = sub_100136378(v40, v41, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v40;
    int v131 = v43;
    if (v43)
    {
      uint64_t v45 = v40;
      uint64_t v46 = v39;
      sub_100089354();
      uint64_t v48 = v47;
      if (*(void *)(v47 + 16))
      {
        uint64_t v49 = (uint64_t)v17;
        uint64_t v50 = sub_10035C1D0(v45);
        if (v51)
        {
          uint64_t v52 = *(void *)(*(void *)(v48 + 56) + 8 * v50);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v53 = 1;
          uint64_t v44 = v45;
LABEL_26:
          uint64_t v64 = v49;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v49, v53, 1, v20);
          uint64_t v65 = qword_10078DEB0;
          uint64_t v66 = *(void *)&v46[qword_10078DEB0];
          uint64_t v67 = (uint64_t)v133;
          if (v66)
          {
            uint64_t v68 = *(uint64_t (**)(uint64_t))(v66 + 16);
            uint64_t v69 = swift_retain();
            if (v68(v69))
            {
              uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
              uint64_t v130 = v44;
              uint64_t v71 = (void *)Strong;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(Strong, v52, v64);
              swift_release();

              uint64_t v72 = v130;
              sub_10004007C((uint64_t)v24, v67, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
              uint64_t v73 = *(void *)&v46[v65];
              if (v73)
              {
                uint64_t v74 = (uint64_t)v46;
                uint64_t v75 = *(uint64_t (**)(uint64_t))(v73 + 16);
                uint64_t v76 = swift_retain();
                if (v75(v76))
                {
                  uint64_t v77 = (void *)swift_unknownObjectUnownedLoadStrong();
                  char v78 = (*(uint64_t (**)(void *, char *))(v73 + 64))(v77, v133);
                  swift_release();

                  if (v78)
                  {
                    char v79 = *(unsigned char *)(v72 + 72);
                    BOOL v81 = v137;
                    uint64_t v80 = v138;
                    if (!v79)
                    {
                      uint64_t v82 = (uint64_t *)(v74 + qword_10078DEE8);
                      swift_beginAccess();
                      uint64_t v83 = *v82;
                      uint64_t v84 = v82[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      uint64_t v85 = (uint64_t)v135;
                      TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
                      LOBYTE(v82) = sub_10045753C(v85, v83);
                      uint64_t v86 = v134;
                      sub_100024578(v85, v134, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
                      if (v82)
                      {
                        BOOL v87 = (sub_10045753C(v86, v84) & 1) == 0;
                        uint64_t v88 = v86;
                        if (v87) {
                          char v79 = 1;
                        }
                        else {
                          char v79 = 2;
                        }
                      }
                      else
                      {
                        uint64_t v88 = v86;
                        char v79 = 2;
                      }
                      sub_100024448(v88, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_100024448(v85, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
                      uint64_t v72 = v130;
                    }
                  }
                  else
                  {
                    char v79 = 0;
                    BOOL v81 = v137;
                    uint64_t v80 = v138;
                  }
                  uint64_t v117 = sub_100089354();
                  sub_1003CDB40(v72, v117, v119, v118 & 1, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, void *))sub_10020B4F8, v81);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v120 = v139;
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v81, 1, v139) == 1)
                  {
                    sub_10003B6F8((uint64_t)v81, &qword_10078E8F0);
                    uint64_t v121 = (uint64_t)v133;
                    if (qword_1007852B8 != -1) {
                      swift_once();
                    }
                    uint64_t v122 = type metadata accessor for Logger();
                    sub_100018BF8(v122, (uint64_t)qword_10078DE60);
                    int v123 = Logger.logObject.getter();
                    os_log_type_t v124 = static os_log_type_t.fault.getter();
                    BOOL v125 = os_log_type_enabled(v123, v124);
                    uint64_t v126 = (uint64_t)v132;
                    if (v125)
                    {
                      uint64_t v127 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)uint64_t v127 = 0;
                      _os_log_impl((void *)&_mh_execute_header, v123, v124, "Unable to find childrenStartIndexPath", v127, 2u);
                      uint64_t v121 = (uint64_t)v133;
                      swift_slowDealloc();
                    }
                    swift_release();

                    sub_10003B6F8(v64, (uint64_t *)&unk_100788D10);
                    sub_100024448(v126, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                  }
                  else
                  {
                    unint64_t v128 = v136;
                    uint64_t v129 = (*(uint64_t (**)(char *, char *, uint64_t))(v80 + 32))(v136, v81, v120);
                    __chkstk_darwin(v129);
                    *(&v130 - 6) = v74;
                    *(&v130 - 5) = v72;
                    uint64_t v121 = (uint64_t)v133;
                    *(&v130 - 4) = (uint64_t)v133;
                    *((unsigned char *)&v130 - 24) = v79;
                    *((unsigned char *)&v130 - 23) = v131 & 1;
                    *((unsigned char *)&v130 - 22) = v140 & 1;
                    *(&v130 - 2) = v141;
                    *(&v130 - 1) = (uint64_t)v128;
                    sub_1003CEE4C((void (*)(uint64_t))sub_1003E1F34, (uint64_t)(&v130 - 8), 0, 0, 0, 0);
                    swift_release();
                    sub_10003B6F8(v64, (uint64_t *)&unk_100788D10);
                    sub_100024448((uint64_t)v132, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                    (*(void (**)(char *, uint64_t))(v80 + 8))(v128, v120);
                  }
                  uint64_t v54 = v121;
                  goto LABEL_58;
                }
                swift_release();
              }
              if (qword_1007852B8 != -1) {
                swift_once();
              }
              uint64_t v111 = type metadata accessor for Logger();
              sub_100018BF8(v111, (uint64_t)qword_10078DE60);
              unint64_t v112 = Logger.logObject.getter();
              os_log_type_t v113 = static os_log_type_t.fault.getter();
              BOOL v114 = os_log_type_enabled(v112, v113);
              uint64_t v115 = (uint64_t)v132;
              if (v114)
              {
                os_log_type_t v116 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)os_log_type_t v116 = 0;
                _os_log_impl((void *)&_mh_execute_header, v112, v113, "Unable to get new item.", v116, 2u);
                swift_slowDealloc();
              }
              swift_release();

              sub_10003B6F8(v64, (uint64_t *)&unk_100788D10);
              sub_100024448(v115, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
              uint64_t v54 = (uint64_t)v133;
              goto LABEL_58;
            }
            swift_release();
          }
          if (qword_1007852B8 != -1) {
            swift_once();
          }
          uint64_t v106 = type metadata accessor for Logger();
          sub_100018BF8(v106, (uint64_t)qword_10078DE60);
          uint64_t v107 = Logger.logObject.getter();
          os_log_type_t v108 = static os_log_type_t.fault.getter();
          BOOL v109 = os_log_type_enabled(v107, v108);
          uint64_t v93 = (uint64_t)v132;
          if (v109)
          {
            uint64_t v110 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v110 = 0;
            _os_log_impl((void *)&_mh_execute_header, v107, v108, "Unable to get new item.", v110, 2u);
            swift_slowDealloc();
          }
          swift_release();

          sub_10003B6F8(v64, (uint64_t *)&unk_100788D10);
          goto LABEL_57;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v89 = type metadata accessor for Logger();
      sub_100018BF8(v89, (uint64_t)qword_10078DE60);
      uint64_t v90 = Logger.logObject.getter();
      os_log_type_t v91 = static os_log_type_t.fault.getter();
      BOOL v92 = os_log_type_enabled(v90, v91);
      uint64_t v93 = (uint64_t)v132;
      if (v92)
      {
        os_log_type_t v94 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v94 = 0;
        _os_log_impl((void *)&_mh_execute_header, v90, v91, "Unable to find section index.", v94, 2u);
        swift_slowDealloc();
      }

      swift_release();
    }
    else
    {
      uint64_t v46 = v39;
      uint64_t v59 = swift_weakLoadStrong();
      if (v59)
      {
        char v60 = (unint64_t *)v59;
        uint64_t v49 = (uint64_t)v17;
        swift_beginAccess();
        uint64_t v61 = sub_1003DB704(v44, v60[8]);
        if (v62)
        {
          if (qword_1007852B8 != -1) {
            swift_once();
          }
          uint64_t v100 = type metadata accessor for Logger();
          sub_100018BF8(v100, (uint64_t)qword_10078DE60);
          BOOL v101 = Logger.logObject.getter();
          os_log_type_t v102 = static os_log_type_t.fault.getter();
          BOOL v103 = os_log_type_enabled(v101, v102);
          uint64_t v104 = (uint64_t)v132;
          if (v103)
          {
            os_log_type_t v105 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v105 = 0;
            _os_log_impl((void *)&_mh_execute_header, v101, v102, "Unable to find index in parent.", v105, 2u);
            swift_slowDealloc();
          }
          swift_release();
          swift_release();

          uint64_t v54 = v104;
          goto LABEL_58;
        }
        uint64_t v52 = v61;
        uint64_t v63 = (uint64_t)v60 + *(void *)(*v60 + 144);
        swift_beginAccess();
        sub_100024578(v63, v49, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_release();
        uint64_t v53 = 0;
        goto LABEL_26;
      }
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v95 = type metadata accessor for Logger();
      sub_100018BF8(v95, (uint64_t)qword_10078DE60);
      uint64_t v96 = Logger.logObject.getter();
      os_log_type_t v97 = static os_log_type_t.fault.getter();
      BOOL v98 = os_log_type_enabled(v96, v97);
      uint64_t v93 = (uint64_t)v132;
      if (v98)
      {
        uint64_t v99 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v99 = 0;
        _os_log_impl((void *)&_mh_execute_header, v96, v97, "Unable to find parent node.", v99, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
LABEL_57:
    uint64_t v54 = v93;
    goto LABEL_58;
  }
  sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_100788D10);
  uint64_t v30 = *(void *)&v4[qword_10078DEB0];
  if (v30)
  {
    uint64_t v31 = *(uint64_t (**)(uint64_t))(v30 + 16);
    uint64_t v32 = swift_retain();
    if (v31(v32))
    {
      if ((v140 & 1) == 0)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v33 = type metadata accessor for Logger();
        sub_100018BF8(v33, (uint64_t)qword_10078DE60);
        uint64_t v34 = Logger.logObject.getter();
        os_log_type_t v35 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v34, v35))
        {
          os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v36 = 0;
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "Reloading the root(nil) only is not supported, treating reloadChildren as true", v36, 2u);
          swift_slowDealloc();
        }
      }
      swift_retain();
      uint64_t v37 = v4;
      sub_100139CB8(0, 0, 0, 0, (uint64_t)v37, (uint64_t)v37, v30, v141);

      swift_release_n();
      return;
    }
    swift_release();
  }
  if (qword_1007852B8 != -1) {
    swift_once();
  }
  uint64_t v55 = type metadata accessor for Logger();
  sub_100018BF8(v55, (uint64_t)qword_10078DE60);
  uint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v58 = 0;
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "dataSource is nil", v58, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1003DB704(uint64_t result, unint64_t a2)
{
  uint64_t v3 = result;
  if (!(a2 >> 62))
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4) {
    return 0;
  }
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v7 = *(void *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 16);
    uint64_t v6 = *(void *)(v3 + 16);
    swift_unknownObjectRelease();
    if (v7 == v6) {
      return 0;
    }
    uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t v8 = 0;
    uint64_t result = 1;
    do
    {
      if (v4 - 1 == v8) {
        return 0;
      }
      unint64_t v10 = v8 + 1;
      if ((a2 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = *(void *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 16);
        swift_unknownObjectRelease();
        if (v9 == v6) {
          return v8 + 1;
        }
      }
      else
      {
        if (v10 >= *(void *)(v5 + 16)) {
          goto LABEL_22;
        }
        if (*(void *)(*(void *)(a2 + 8 * v8 + 40) + 16) == v6) {
          return result;
        }
      }
      ++v8;
      uint64_t result = v10 + 1;
    }
    while (!__OFADD__(v10, 1));
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v6 = *(void *)(v3 + 16);
    if (*(void *)(*(void *)(a2 + 32) + 16) == v6) {
      return 0;
    }
    goto LABEL_11;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1003DB87C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  sub_1000D67A4(a2 + 32, (uint64_t)v11);
  sub_1000D5984((uint64_t)v11, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
  char v4 = static TTRListColors.Color.__derived_enum_equals(_:_:)();
  sub_1000D5984((uint64_t)v11, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
  if (v4) {
    return 0;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v2 - 1;
  uint64_t v7 = a2 + 88;
  while (v6 != v5)
  {
    sub_1000D67A4(v7, (uint64_t)v10);
    sub_1000D5984((uint64_t)v10, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    char v8 = static TTRListColors.Color.__derived_enum_equals(_:_:)();
    sub_1000D5984((uint64_t)v10, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    v7 += 56;
    ++v5;
    if (v8) {
      return v5;
    }
  }
  return 0;
}

uint64_t sub_1003DB9B8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = a1;
  if (*(unsigned __int8 *)(a2 + 32) == a1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v5 = v2 - 1;
  while (v5 != result)
  {
    int v6 = *(unsigned __int8 *)(a2 + 33 + result++);
    if (v6 == v3) {
      return result;
    }
  }
  return 0;
}

uint64_t sub_1003DBA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  id v5 = *(id *)(a3 + 32);
  char v6 = static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)();

  if (v6) {
    return 0;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v3 - 1;
  uint64_t v9 = a3 + 56;
  while (v8 != v7)
  {
    unint64_t v10 = *(void **)(v9 - 8);
    v9 += 16;
    id v11 = v10;
    LOBYTE(v10) = static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)();

    ++v7;
    if (v10) {
      return v7;
    }
  }
  return 0;
}

uint64_t sub_1003DBB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void), void (*a11)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  *(void *)&long long v28 = a10();
  *((void *)&v28 + 1) = v18;
  uint64_t v29 = v19;
  char v30 = v20 & 1;
  uint64_t v21 = qword_10078DED8;
  *(unsigned char *)(a2 + qword_10078DED8) = 1;
  a11(&v28, a3, a4, a5, a6, a7, a1, a8, a2, a9);
  uint64_t v22 = v29;
  char v23 = v30;
  uint64_t v24 = a2 + qword_10078DED0;
  uint64_t v25 = *(void *)(a2 + qword_10078DED0);
  *(_OWORD *)uint64_t v24 = v28;
  *(void *)(v24 + 16) = v22;
  *(unsigned char *)(v24 + 24) = v23;
  uint64_t result = sub_1000349CC(v25);
  *(unsigned char *)(a2 + v21) = 0;
  return result;
}

uint64_t sub_1003DBC08(uint64_t *a1, unsigned char *a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, int64_t a10)
{
  uint64_t v110 = a8;
  LODWORD(v106) = a6;
  LODWORD(v108) = a5;
  uint64_t v107 = a9;
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v18 - 8);
  char v20 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v21 - 8);
  char v23 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v96 - v25;
  uint64_t v27 = (uint64_t)&a2[*(void *)(*(void *)a2 + 144)];
  swift_beginAccess();
  sub_100024578(v27, (uint64_t)v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_beginAccess();
  sub_1000957C8(a3, v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_endAccess();
  int v104 = a4;
  a2[72] = a4;
  os_log_type_t v105 = v26;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  BOOL v109 = a1;
  LOBYTE(v27) = sub_1003CD538((uint64_t)v20, (uint64_t)a2);
  sub_100024448((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if (v27)
  {
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_100088964((uint64_t)v20, (uint64_t)a2);
    sub_100024448((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  char v28 = v106;
  if (v108 & 1) == 0 || (v106)
  {
    sub_1003CB440(0, (uint64_t)a2, 3, v110, 0);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v113 = *(void *)(a7 + 96);
    *(void *)(a7 + 96) = 0x8000000000000000;
    sub_1000BB06C(v110, 0, (uint64_t)a2, isUniquelyReferenced_nonNull_native);
    *(void *)(a7 + 96) = v113;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  uint64_t v30 = v107;
  if (*(unsigned char *)(v107 + qword_10078DEF8) == 1)
  {
    swift_beginAccess();
    sub_1003CE1BC(a2);
    swift_endAccess();
  }
  if ((v28 & 1) == 0) {
    return sub_100024448((uint64_t)v105, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  if (a2[48] == 1)
  {
    uint64_t v115 = 0;
    sub_10020B4F8((uint64_t)a2, &v115);
    uint64_t v31 = v115;
    *((void *)a2 + 5) = v115;
    a2[48] = 0;
  }
  else
  {
    uint64_t v31 = *((void *)a2 + 5);
  }
  swift_beginAccess();
  uint64_t v106 = (uint64_t)a2;
  *((void *)a2 + 8) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  int64_t v103 = a10;
  uint64_t v33 = sub_1003CC6E0(a10, v31);
  os_log_type_t v102 = (void *)v34;
  uint64_t v36 = v35;
  unint64_t v38 = v37;
  uint64_t v39 = (void *)(v30 + qword_10078DEE8);
  swift_beginAccess();
  uint64_t v40 = v39[1];
  *(void *)&long long v114 = *v39;
  *((void *)&v114 + 1) = v40;
  unint64_t v41 = (v38 >> 1) - v36;
  uint64_t v101 = v36;
  unint64_t v100 = v38;
  uint64_t v99 = v33;
  os_log_type_t v97 = v39;
  int64_t v98 = v38 >> 1;
  if (v38 >> 1 == v36)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if ((uint64_t)(v38 >> 1) <= v36)
    {
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      sub_10003B754(&qword_10078E370);
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
LABEL_91:
      uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v38)
    {
      uint64_t v45 = &v102[v36];
      do
      {
        uint64_t v46 = *v45++;
        uint64_t v47 = v46 + *(void *)(*(void *)v46 + 144);
        swift_beginAccess();
        sub_100024578(v47, (uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_retain();
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_100024448((uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10012F180((uint64_t)v17);
        sub_100024448((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E360);
        swift_release();
        --v41;
      }
      while (v41);
    }
    else
    {
      uint64_t v42 = &v102[v36];
      do
      {
        uint64_t v43 = *v42++;
        uint64_t v44 = v43 + *(void *)(*(void *)v43 + 144);
        swift_beginAccess();
        sub_100024578(v44, (uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_retain();
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_100024448((uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10012F180((uint64_t)v17);
        sub_100024448((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E360);
        swift_release();
        --v41;
      }
      while (v41);
    }
    uint64_t v33 = v99;
    swift_unknownObjectRelease();
    uint64_t v36 = v101;
    unint64_t v38 = v100;
  }
  sub_10003B754((uint64_t *)&unk_10078E3A0);
  uint64_t v48 = swift_allocObject();
  unint64_t v49 = swift_unknownObjectRetain_n();
  uint64_t v50 = v102;
  *(void *)(v48 + 16) = sub_100090080(v49, (uint64_t)v102, v36, v38);
  int64_t v51 = v98 - v36;
  if (v98 != v36)
  {
    if (v98 <= v36) {
      goto LABEL_89;
    }
    swift_unknownObjectRetain();
    uint64_t v52 = &v50[v36];
    if (v38)
    {
      do
      {
        uint64_t v54 = *v52++;
        swift_weakAssign();
        swift_beginAccess();
        *(void *)(v54 + 64) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        --v51;
      }
      while (v51);
    }
    else
    {
      do
      {
        uint64_t v53 = *v52++;
        swift_weakAssign();
        swift_beginAccess();
        *(void *)(v53 + 64) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        --v51;
      }
      while (v51);
    }
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  uint64_t v55 = _swiftEmptyArrayStorage;
  if (v104 == 2) {
    uint64_t v55 = sub_10008A304(v106, v48);
  }
  *(void *)(v106 + 64) = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v112 = _swiftEmptyArrayStorage;
  sub_100097140(&v112);
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v57 = Strong;
    do
    {
      *(void *)(v57 + 40) = 0;
      *(unsigned char *)(v57 + 48) = 1;
      uint64_t v58 = swift_weakLoadStrong();
      swift_release();
      uint64_t v57 = v58;
    }
    while (v58);
  }
  swift_bridgeObjectRelease();
  unint64_t v59 = (unint64_t)v112;
  uint64_t v60 = IndexPath.section.getter();
  swift_bridgeObjectRetain();
  uint64_t v61 = IndexPath.row.getter();
  uint64_t v62 = *v109;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_82;
  }
  if ((v60 & 0x8000000000000000) == 0) {
    goto LABEL_38;
  }
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
  do
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
    if (!v60) {
      goto LABEL_86;
    }
LABEL_43:
    if (v60 < 1)
    {
      __break(1u);
      goto LABEL_88;
    }
    uint64_t v61 = 0;
    BOOL v109 = (uint64_t *)(v59 & 0xC000000000000001);
    uint64_t v48 = a7 + 80;
    unint64_t v108 = v59;
    uint64_t v107 = v60;
    while (1)
    {
      if (v109)
      {
        uint64_t v33 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v33 = *(void *)(v59 + 8 * v61 + 32);
        swift_retain();
      }
      swift_beginAccess();
      uint64_t v65 = *(void *)(a7 + 88);
      if (*(void *)(v65 + 16))
      {
        uint64_t v66 = sub_10035C1D0(v33);
        if (v67)
        {
          uint64_t v68 = (void *)(*(void *)(v65 + 56) + 16 * v66);
          uint64_t v69 = (void *)*v68;
          unint64_t v59 = v68[1];
          swift_endAccess();
          swift_bridgeObjectRetain();
          uint64_t v62 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v112 = v69;
          unint64_t v71 = sub_10035C28C(3u);
          uint64_t v72 = v69[2];
          BOOL v73 = (v70 & 1) == 0;
          uint64_t v74 = v72 + v73;
          if (__OFADD__(v72, v73)) {
            goto LABEL_80;
          }
          uint64_t v60 = v70;
          if (v69[3] < v74)
          {
            sub_1005728DC(v74, v62);
            unint64_t v75 = sub_10035C28C(3u);
            if ((v60 & 1) != (v76 & 1)) {
              goto LABEL_91;
            }
            unint64_t v71 = v75;
            uint64_t v50 = v112;
            if ((v60 & 1) == 0) {
              goto LABEL_64;
            }
LABEL_62:
            *(void *)(v50[7] + 8 * v71) = v110;
LABEL_66:
            swift_bridgeObjectRelease();
            v59 |= 1uLL;
            goto LABEL_67;
          }
          if (v62)
          {
            uint64_t v50 = v112;
            if (v70) {
              goto LABEL_62;
            }
          }
          else
          {
            sub_100361174();
            uint64_t v50 = v112;
            if (v60) {
              goto LABEL_62;
            }
          }
LABEL_64:
          v50[(v71 >> 6) + 8] |= 1 << v71;
          *(unsigned char *)(v50[6] + v71) = 3;
          *(void *)(v50[7] + 8 * v71) = v110;
          uint64_t v82 = v50[2];
          BOOL v80 = __OFADD__(v82, 1);
          uint64_t v83 = v82 + 1;
          if (v80) {
            goto LABEL_81;
          }
          v50[2] = v83;
          goto LABEL_66;
        }
      }
      swift_endAccess();
      sub_10003B754(&qword_100788DD0);
      uint64_t v50 = (void *)static _DictionaryStorage.allocate(capacity:)();
      unint64_t v77 = sub_10035C28C(3u);
      if (v78) {
        goto LABEL_77;
      }
      v50[(v77 >> 6) + 8] |= 1 << v77;
      *(unsigned char *)(v50[6] + v77) = 3;
      *(void *)(v50[7] + 8 * v77) = v110;
      uint64_t v79 = v50[2];
      BOOL v80 = __OFADD__(v79, 1);
      uint64_t v81 = v79 + 1;
      if (v80) {
        goto LABEL_78;
      }
      v50[2] = v81;
      unint64_t v59 = 1;
LABEL_67:
      swift_beginAccess();
      swift_retain();
      uint64_t v62 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v111 = *(void **)(a7 + 88);
      uint64_t v84 = v111;
      *(void *)(a7 + 88) = 0x8000000000000000;
      unint64_t v86 = sub_10035C1D0(v33);
      uint64_t v87 = v84[2];
      BOOL v88 = (v85 & 1) == 0;
      uint64_t v89 = v87 + v88;
      if (__OFADD__(v87, v88)) {
        break;
      }
      uint64_t v60 = v85;
      if (v84[3] >= v89)
      {
        if ((v62 & 1) == 0) {
          sub_100360FD4();
        }
      }
      else
      {
        sub_100572604(v89, v62);
        uint64_t v90 = sub_10035C1D0(v33);
        if ((v60 & 1) != (v91 & 1)) {
          goto LABEL_90;
        }
        unint64_t v86 = v90;
      }
      BOOL v92 = v111;
      if (v60)
      {
        uint64_t v64 = (void *)(v111[7] + 16 * v86);
        *uint64_t v64 = v50;
        v64[1] = v59;
        swift_bridgeObjectRelease();
      }
      else
      {
        v111[(v86 >> 6) + 8] |= 1 << v86;
        *(void *)(v92[6] + 8 * v86) = v33;
        uint64_t v93 = (void *)(v92[7] + 16 * v86);
        *uint64_t v93 = v50;
        v93[1] = v59;
        uint64_t v94 = v92[2];
        BOOL v80 = __OFADD__(v94, 1);
        uint64_t v95 = v94 + 1;
        if (v80) {
          goto LABEL_79;
        }
        v92[2] = v95;
        swift_retain();
      }
      ++v61;
      uint64_t v60 = *(void *)(a7 + 88);
      *(void *)(a7 + 88) = v92;
      swift_release();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      unint64_t v59 = v108;
      if (v107 == v61) {
        goto LABEL_86;
      }
    }
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    uint64_t v62 = (uint64_t)sub_100366F28(v62);
    if (v60 < 0) {
      goto LABEL_83;
    }
LABEL_38:
    if ((unint64_t)v60 >= *(void *)(v62 + 16)) {
      goto LABEL_84;
    }
    sub_10054BB9C(v61, v61, v59);
    *BOOL v109 = v62;
    uint64_t v63 = IndexPath.section.getter();
    sub_100087C30(v59, v63);
    sub_1003DD3CC(v59);
    *os_log_type_t v97 = v114;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v108) {
      sub_1003CB440(1, v106, 3, v110, 0);
    }
    uint64_t v106 = v48;
    sub_1003CB960(v33, (uint64_t)v50, v101, v100, 3, v110, 0);
  }
  while (v59 >> 62);
  uint64_t v60 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v60) {
    goto LABEL_43;
  }
LABEL_86:
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100024448((uint64_t)v105, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003DC9B8(uint64_t *a1, unsigned char *a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, int64_t a10)
{
  uint64_t v81 = a8;
  uint64_t v82 = a7;
  LODWORD(v80) = a6;
  uint64_t v84 = a9;
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_10078E260);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  __chkstk_darwin(v18 - 8);
  char v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v70 - v25;
  uint64_t v27 = (uint64_t)&a2[*(void *)(*(void *)a2 + 144)];
  swift_beginAccess();
  sub_100024578(v27, (uint64_t)v26, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  swift_beginAccess();
  sub_1000957C8(a3, v27, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  swift_endAccess();
  int v77 = a4;
  a2[72] = a4;
  uint64_t v79 = v26;
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
  uint64_t v83 = a1;
  LOBYTE(v27) = sub_1003CD81C((uint64_t)v20, (uint64_t)a2);
  sub_100024448((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  if (v27)
  {
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
    sub_100088D10((uint64_t)v20, (uint64_t)a2);
    sub_100024448((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  char v28 = v80;
  int v75 = a5;
  if (a5 & 1) == 0 || (v80)
  {
    sub_1003CB6D0(0, (uint64_t)a2, 3, v81, 0);
  }
  else
  {
    uint64_t v29 = v82;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v86 = *(void *)(v29 + 96);
    *(void *)(v29 + 96) = 0x8000000000000000;
    sub_1000BBBC0(v81, 0, (uint64_t)a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v29 + 96) = v86;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  if (*(unsigned char *)(v84 + qword_10078DEF8) == 1)
  {
    swift_beginAccess();
    sub_1003CE408(a2);
    swift_endAccess();
  }
  if ((v28 & 1) == 0) {
    return sub_100024448((uint64_t)v79, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  }
  if (a2[48] == 1)
  {
    uint64_t v88 = 0;
    sub_10020B4F8((uint64_t)a2, &v88);
    uint64_t v31 = v88;
    *((void *)a2 + 5) = v88;
    a2[48] = 0;
  }
  else
  {
    uint64_t v31 = *((void *)a2 + 5);
  }
  swift_beginAccess();
  *((void *)a2 + 8) = &_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  int64_t v74 = a10;
  uint64_t v33 = sub_1003CCB4C(a10, v31);
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  unint64_t v39 = v38;
  uint64_t v40 = (void *)(v84 + qword_10078DEE8);
  swift_beginAccess();
  unint64_t v71 = v40;
  uint64_t result = *v40;
  uint64_t v41 = v40[1];
  *(void *)&long long v87 = result;
  *((void *)&v87 + 1) = v41;
  unint64_t v78 = v39;
  uint64_t v80 = v37;
  BOOL v42 = __OFSUB__(v39 >> 1, v37);
  uint64_t v43 = (v39 >> 1) - v37;
  char v76 = a2;
  uint64_t v73 = v35;
  unint64_t v72 = v39 >> 1;
  if (v43)
  {
    if ((v43 < 0) ^ v42 | (v43 == 0))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v70 = v33;
    swift_unknownObjectRetain();
    if (v78)
    {
      uint64_t v47 = (uint64_t *)(v35 + 8 * v80);
      do
      {
        uint64_t v48 = *v47++;
        uint64_t v49 = v48 + *(void *)(*(void *)v48 + 144);
        swift_beginAccess();
        sub_100024578(v49, (uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_retain();
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
        sub_100024448((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_10012F618((uint64_t)v17);
        sub_100024448((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E260);
        swift_release();
        --v43;
      }
      while (v43);
    }
    else
    {
      uint64_t v44 = (uint64_t *)(v35 + 8 * v80);
      do
      {
        uint64_t v45 = *v44++;
        uint64_t v46 = v45 + *(void *)(*(void *)v45 + 144);
        swift_beginAccess();
        sub_100024578(v46, (uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_retain();
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
        sub_100024448((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_10012F618((uint64_t)v17);
        sub_100024448((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E260);
        swift_release();
        --v43;
      }
      while (v43);
    }
    uint64_t v33 = v70;
    swift_unknownObjectRelease();
    uint64_t v35 = v73;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_10003B754((uint64_t *)&unk_100788D20);
  uint64_t inited = swift_initStackObject();
  unint64_t v51 = swift_unknownObjectRetain_n();
  uint64_t v52 = v80;
  uint64_t result = sub_1000904B0(v51, v35, v80, v78);
  *(void *)(inited + 16) = result;
  BOOL v53 = __OFSUB__(v72, v52);
  uint64_t v54 = v72 - v52;
  if (v54)
  {
    if ((v54 < 0) ^ v53 | (v54 == 0))
    {
LABEL_48:
      __break(1u);
      return result;
    }
    swift_unknownObjectRetain();
    if (v78)
    {
      uint64_t v57 = (uint64_t *)(v35 + 8 * v80);
      do
      {
        uint64_t v58 = *v57++;
        swift_weakAssign();
        swift_beginAccess();
        *(void *)(v58 + 64) = &_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        --v54;
      }
      while (v54);
    }
    else
    {
      uint64_t v55 = (uint64_t *)(v35 + 8 * v80);
      do
      {
        uint64_t v56 = *v55++;
        swift_weakAssign();
        swift_beginAccess();
        *(void *)(v56 + 64) = &_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        --v54;
      }
      while (v54);
    }
    swift_unknownObjectRelease();
  }
  uint64_t v59 = v81;
  swift_unknownObjectRelease();
  uint64_t v60 = &_swiftEmptyArrayStorage;
  if (v77 == 2) {
    uint64_t v60 = sub_10008A6D0((uint64_t)v76, inited);
  }
  uint64_t v61 = v33;
  *((void *)v76 + 8) = v60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v85 = &_swiftEmptyArrayStorage;
  sub_10008DFC8(&v85);
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v63 = Strong;
    do
    {
      *(void *)(v63 + 40) = 0;
      *(unsigned char *)(v63 + 48) = 1;
      uint64_t v64 = swift_weakLoadStrong();
      swift_release();
      uint64_t v63 = v64;
    }
    while (v64);
  }
  swift_bridgeObjectRelease();
  unint64_t v65 = (unint64_t)v85;
  unint64_t v66 = IndexPath.section.getter();
  swift_bridgeObjectRetain();
  uint64_t v67 = IndexPath.row.getter();
  uint64_t v68 = *v83;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v66 & 0x8000000000000000) == 0) {
      goto LABEL_40;
    }
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t result = (uint64_t)sub_100366FA0(v68);
  uint64_t v68 = result;
  if ((v66 & 0x8000000000000000) != 0) {
    goto LABEL_45;
  }
LABEL_40:
  if (v66 >= *(void *)(v68 + 16))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  sub_10054C484(v67, v67, v65);
  *uint64_t v83 = v68;
  uint64_t v69 = IndexPath.section.getter();
  sub_1000882D0(v65, v69);
  sub_1003DD858(v65);
  *unint64_t v71 = v87;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v75) {
    sub_1003CB6D0(1, (uint64_t)v76, 3, v59, 0);
  }
  sub_1003CC2A8(v61, v73, v80, v78, 3, v59, 0);
  sub_1003CBD98(v65, 3, v59, 0);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100024448((uint64_t)v79, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003DD3CC(unint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - v12;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_17:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v14 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        uint64_t v17 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v18 = (uint64_t)&v17[*(void *)(*(void *)v17 + 144)];
        if (v17[72] == 1)
        {
          swift_beginAccess();
          sub_100024578(v18, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1005A2CAC((uint64_t)v13, (uint64_t)v10);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        }
        else
        {
          swift_beginAccess();
          sub_100024578(v18, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10012F180((uint64_t)v4);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_10078E360);
        }
        swift_unknownObjectRelease();
      }
    }
    else
    {
      for (uint64_t j = 0; j != v14; ++j)
      {
        char v20 = *(unsigned char **)(a1 + 8 * j + 32);
        uint64_t v21 = (uint64_t)&v20[*(void *)(*(void *)v20 + 144)];
        if (v20[72] == 1)
        {
          swift_beginAccess();
          sub_100024578(v21, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1005A2CAC((uint64_t)v13, (uint64_t)v10);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        }
        else
        {
          swift_beginAccess();
          sub_100024578(v21, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10012F180((uint64_t)v4);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_10078E360);
        }
        swift_release();
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003DD858(unint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10078E260);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - v12;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_17:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v14 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        uint64_t v17 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v18 = (uint64_t)&v17[*(void *)(*(void *)v17 + 144)];
        if (v17[72] == 1)
        {
          swift_beginAccess();
          sub_100024578(v18, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_1005A3E00((uint64_t)v13, (uint64_t)v11);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        }
        else
        {
          swift_beginAccess();
          sub_100024578(v18, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_10012F618((uint64_t)v4);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_10078E260);
        }
        swift_unknownObjectRelease();
      }
    }
    else
    {
      for (uint64_t j = 0; j != v14; ++j)
      {
        char v20 = *(unsigned char **)(a1 + 8 * j + 32);
        uint64_t v21 = (uint64_t)&v20[*(void *)(*(void *)v20 + 144)];
        if (v20[72] == 1)
        {
          swift_beginAccess();
          sub_100024578(v21, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          swift_retain();
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_1005A3E00((uint64_t)v13, (uint64_t)v11);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        }
        else
        {
          swift_beginAccess();
          sub_100024578(v21, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          swift_retain();
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
          sub_100024448((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_10012F618((uint64_t)v4);
          sub_100024448((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_10078E260);
        }
        swift_release();
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003DDCE4(void *a1, uint64_t (*a2)(void *))
{
  uint64_t v3 = v2;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong || (uint64_t v6 = *(void *)(Strong + 24), v7 = *(unsigned __int8 *)(Strong + 32), swift_release(), v7 == 1)) {
    uint64_t v6 = -1;
  }
  if (__OFADD__(v6, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 24) = v6 + 1;
    *(unsigned char *)(v3 + 32) = 0;
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_6;
    }
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_6:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return a2(a1);
}

uint64_t sub_1003DDDB8(uint64_t a1, void (*a2)(uint64_t, uint64_t *))
{
  if (a1 < 0) {
    goto LABEL_25;
  }
  uint64_t v2 = a2;
  uint64_t v6 = a1;
  uint64_t result = swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 64);
  int64_t v5 = v4 >> 62;
  if (v4 >> 62) {
    goto LABEL_26;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < v6)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0 && v6)
      {
        Swift::Int v8 = 0;
        do
        {
          Swift::Int v9 = v8 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v8);
          Swift::Int v8 = v9;
        }
        while (v6 != v9);
      }
      if (v5)
      {
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.subscript.getter();
        uint64_t v10 = v11;
        int64_t v5 = v12;
        unint64_t v14 = v13;
        swift_bridgeObjectRelease();
        uint64_t v6 = v14 >> 1;
      }
      else
      {
        uint64_t v10 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
        swift_bridgeObjectRetain();
      }
      uint64_t result = swift_endAccess();
      unint64_t v4 = v6 - v5;
      if (v6 == v5) {
        break;
      }
      if (v6 <= v5) {
        goto LABEL_29;
      }
      swift_unknownObjectRetain();
      uint64_t v15 = 0;
      uint64_t v16 = v10 + 8 * v5;
      while (1)
      {
        int64_t v5 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        uint64_t v17 = *(void *)v16;
        if (*(unsigned char *)(*(void *)v16 + 48) == 1)
        {
          v21[0] = 0;
          uint64_t v18 = swift_retain();
          v2(v18, v21);
          uint64_t v6 = v21[0];
          *(void *)(v17 + 40) = v21[0];
          *(unsigned char *)(v17 + 48) = 0;
          swift_release();
        }
        else
        {
          uint64_t v6 = *(void *)(v17 + 40);
        }
        uint64_t v15 = v5 + v6;
        if (__OFADD__(v5, v6)) {
          goto LABEL_24;
        }
        v16 += 8;
        if (!--v4)
        {
          swift_unknownObjectRelease();
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v19 < 0) {
        goto LABEL_30;
      }
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v20 < v6) {
        goto LABEL_28;
      }
    }
    uint64_t v15 = 0;
LABEL_22:
    swift_unknownObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_1003DDFE0(uint64_t (*a1)(double), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v218 = a5;
  uint64_t v244 = a4;
  uint64_t v248 = a1;
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  id v204 = (char *)v193 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v202 = (char *)v193 - v9;
  uint64_t v203 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  uint64_t v194 = (char *)v193 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v198 = (char *)v193 - v13;
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v14 - 8);
  uint64_t v217 = (char *)v193 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v16 = *(void *)(v249 - 8);
  __chkstk_darwin(v249);
  uint64_t v227 = (uint64_t)v193 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v206 = (uint64_t)v193 - v19;
  __chkstk_darwin(v20);
  uint64_t v226 = (char *)v193 - v21;
  __chkstk_darwin(v22);
  uint64_t v233 = (char *)v193 - v23;
  uint64_t v234 = type metadata accessor for IndexSet();
  uint64_t v24 = *(void *)(v234 - 8);
  __chkstk_darwin(v234);
  v245 = (char *)v193 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  char v28 = (char *)v193 - v27;
  uint64_t v251 = sub_10003B754(&qword_10079D9F0);
  uint64_t v29 = *(void *)(v251 - 8);
  __chkstk_darwin(v251);
  uint64_t v31 = (void *)((char *)v193 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v32 - 8);
  uint64_t v224 = (uint64_t)v193 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v219 = (uint64_t)v193 - v35;
  __chkstk_darwin(v36);
  uint64_t v225 = (char *)v193 - v37;
  __chkstk_darwin(v38);
  uint64_t v250 = (uint64_t)v193 - v39;
  uint64_t v40 = sub_10003B754(&qword_10079D9F8);
  uint64_t v41 = *(void *)(v40 - 8);
  double v42 = __chkstk_darwin(v40);
  uint64_t v215 = (uint64_t)v193 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v248(v42);
  uint64_t v214 = *(void *)(a3 + 16);
  if (!v214) {
    return result;
  }
  uint64_t v213 = *(int *)(v40 + 28);
  uint64_t v243 = qword_1007A59F0;
  uint64_t v212 = a3 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  uint64_t v211 = *(void *)(v41 + 72);
  char v241 = (uint64_t (**)(unint64_t *, uint64_t))(v29 + 88);
  uint64_t v242 = v29 + 16;
  int v240 = enum case for ExtendedPatch.insertion<A>(_:);
  int v232 = enum case for ExtendedPatch.deletion<A>(_:);
  int v228 = enum case for ExtendedPatch.move<A>(_:);
  uint64_t v239 = (void (**)(unint64_t *, uint64_t))(v29 + 96);
  id v223 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56);
  uint64_t v237 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v200 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  int v222 = enum case for ExtendedPatch.update<A>(_:);
  v199 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  uint64_t v197 = (uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32);
  v196 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v235 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v195 = a3;
  swift_bridgeObjectRetain();
  uint64_t v45 = 0;
  long long v236 = xmmword_10066C6F0;
  uint64_t v46 = (uint64_t)v233;
  uint64_t v47 = v234;
  uint64_t v48 = v29;
  uint64_t v238 = v29;
  uint64_t v49 = v250;
  id v229 = v28;
LABEL_5:
  uint64_t v220 = v45;
  uint64_t v50 = v212 + v211 * v45;
  uint64_t v51 = v215;
  sub_10003B694(v50, v215, &qword_10079D9F8);
  sub_10003B694(v51, v49, (uint64_t *)&unk_100788DC0);
  uint64_t v52 = *(void *)(v51 + v213);
  swift_bridgeObjectRetain();
  sub_10003B6F8(v51, &qword_10079D9F8);
  uint64_t v231 = *(void *)(v52 + 16);
  if (!v231)
  {
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v53 = 0;
  unint64_t v54 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v216 = v52;
  uint64_t v248 = (uint64_t (*)(double))(v52 + v54);
  uint64_t v55 = *(void *)(v48 + 72);
  uint64_t v246 = *(void (**)(unint64_t *, char *, uint64_t))(v48 + 16);
  uint64_t v247 = v55;
  uint64_t v56 = v231;
  uint64_t v57 = v218;
  while (1)
  {
    uint64_t v59 = v251;
    v246(v31, (char *)v248 + v247 * v53, v251);
    int v60 = (*v241)(v31, v59);
    if (v60 != v240) {
      break;
    }
    (*v239)(v31, v251);
    unint64_t v61 = *v31;
    sub_10003B754((uint64_t *)&unk_100797A30);
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v236;
    *(void *)(v62 + 32) = v61;
    uint64_t v252 = v62;
    sub_1003E1E04((unint64_t *)&qword_10078E310, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    sub_10003B754(&qword_100789060);
    sub_1000996F8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v63 = *v237;
    BOOL v64 = (*v237)(v250, 1, v249) == 1;
    unint64_t v65 = *(void **)(v244 + v243);
    if (!v65) {
      goto LABEL_167;
    }
    uint64_t v66 = v57;
    uint64_t v67 = *(void *)(v57 + 16 * v64);
    uint64_t v68 = v65;
    if (IndexSet.isEmpty.getter())
    {
    }
    else
    {
      uint64_t v69 = *(void *)&v68[qword_10078DEB0];
      if (v69)
      {
        uint64_t v70 = *(uint64_t (**)(uint64_t))(v69 + 16);
        uint64_t v71 = swift_retain();
        if (v70(v71))
        {
          uint64_t v72 = v219;
          sub_10003B694(v250, v219, (uint64_t *)&unk_100788DC0);
          if (v63(v72, 1, v249) == 1)
          {
            uint64_t v73 = sub_10003B6F8(v72, (uint64_t *)&unk_100788DC0);
            __chkstk_darwin(v73);
            v193[-4] = v68;
            v193[-3] = v28;
            v193[-2] = v69;
            v193[-1] = v67;
            sub_1003CE654((void (*)(uint64_t))sub_1003E211C, (uint64_t)&v193[-6], 0, 0, 0, 0);

            swift_release();
          }
          else
          {
            uint64_t v104 = v206;
            uint64_t v105 = sub_10004007C(v72, v206, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            __chkstk_darwin(v105);
            v193[-4] = v68;
            v193[-3] = v28;
            v193[-2] = v104;
            v193[-1] = v67;
            sub_1003CE654((void (*)(uint64_t))sub_1003E2164, (uint64_t)&v193[-6], 0, 0, 0, 0);
            swift_release();
            sub_100024448(v104, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
        }
        else
        {

          swift_release();
        }
        uint64_t v47 = v234;
        uint64_t v56 = v231;
      }
      else
      {

        uint64_t v47 = v234;
      }
    }
    uint64_t v58 = (uint64_t)v31 + *(int *)(sub_10003B754(&qword_10079DA10) + 48);
    (*v235)(v28, v47);
    sub_100024448(v58, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v46 = (uint64_t)v233;
    uint64_t v48 = v238;
    uint64_t v57 = v66;
LABEL_9:
    if (++v53 == v56)
    {
      swift_bridgeObjectRelease();
      uint64_t v49 = v250;
LABEL_4:
      uint64_t v45 = v220 + 1;
      sub_10003B6F8(v49, (uint64_t *)&unk_100788DC0);
      if (v45 == v214) {
        return swift_bridgeObjectRelease();
      }
      goto LABEL_5;
    }
  }
  if (v60 != v232)
  {
    if (v60 == v228)
    {
      (*v239)(v31, v251);
      unint64_t v83 = *v31;
      uint64_t v82 = v31[1];
      uint64_t v84 = sub_10003B754(&qword_10079DA08);
      sub_10004007C((uint64_t)v31 + *(int *)(v84 + 64), v46, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v85 = *(void **)(v244 + v243);
      if (!v85) {
        goto LABEL_172;
      }
      id v86 = v85;
      sub_1003D6690(v46, v83, v250, v82, v250);

      sub_100024448(v46, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v47 = v234;
      goto LABEL_55;
    }
    uint64_t v87 = (uint64_t)v225;
    uint64_t v88 = (uint64_t)v226;
    if (v60 != v222) {
      goto LABEL_176;
    }
    (*v239)(v31, v251);
    uint64_t v89 = sub_10003B754(&qword_10079DA00);
    sub_10004007C((uint64_t)v31 + *(int *)(v89 + 48), v88, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100024578(v88, v87, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*v223)(v87, 0, 1, v249);
    uint64_t v90 = *(void **)(v244 + v243);
    if (v90)
    {
      uint64_t v91 = *(void *)(v57 + 32);
      uint64_t v92 = (uint64_t)v31 + *(int *)(v89 + 64);
      id v93 = v90;
      sub_1003D97AC(v87, 0, v91);

      sub_10003B6F8(v87, (uint64_t *)&unk_100788DC0);
      sub_100024448(v88, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_100024448(v92, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v47 = v234;
      uint64_t v48 = v238;
      uint64_t v56 = v231;
      goto LABEL_9;
    }
    goto LABEL_173;
  }
  (*v239)(v31, v251);
  unint64_t v74 = *v31;
  sub_10003B754((uint64_t *)&unk_100797A30);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v236;
  *(void *)(v75 + 32) = v74;
  uint64_t v252 = v75;
  sub_1003E1E04((unint64_t *)&qword_10078E310, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  sub_10003B754(&qword_100789060);
  sub_1000996F8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  char v76 = *v237;
  int v77 = (*v237)(v250, 1, v249);
  uint64_t v78 = 24;
  if (v77 != 1) {
    uint64_t v78 = 8;
  }
  uint64_t v79 = *(void **)(v244 + v243);
  if (!v79) {
    goto LABEL_168;
  }
  uint64_t v230 = *(void *)(v57 + v78);
  uint64_t v80 = v79;
  if (IndexSet.isEmpty.getter())
  {

    uint64_t v81 = v245;
LABEL_31:
    char v28 = v229;
LABEL_54:
    (*v235)(v81, v47);
LABEL_55:
    uint64_t v48 = v238;
    goto LABEL_9;
  }
  uint64_t v94 = v224;
  sub_10003B694(v250, v224, (uint64_t *)&unk_100788DC0);
  if (v76(v94, 1, v249) == 1)
  {
    uint64_t v95 = sub_10003B6F8(v94, (uint64_t *)&unk_100788DC0);
    __chkstk_darwin(v95);
    uint64_t v96 = v245;
    v193[-4] = v80;
    v193[-3] = v96;
    v193[-2] = v230;
    sub_1003CE654((void (*)(uint64_t))sub_1003E2224, (uint64_t)&v193[-6], 0, 0, 0, 0);

    uint64_t v81 = v96;
    goto LABEL_31;
  }
  sub_10004007C(v94, v227, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  char v28 = v229;
  if (v80[qword_10078DED8] == 1)
  {
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v97 = type metadata accessor for Logger();
    sub_100018BF8(v97, (uint64_t)qword_10078DE60);
    int64_t v98 = Logger.logObject.getter();
    os_log_type_t v99 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v98, v99))
    {
      unint64_t v100 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v100 = 0;
      _os_log_impl((void *)&_mh_execute_header, v98, v99, "Attempting to read sectionMetadata while it is being modified", v100, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v101 = &v80[qword_10078DED0];
  unint64_t v102 = *(void *)&v80[qword_10078DED0 + 8];
  int64_t v103 = *(void (**)(char *, uint64_t, uint64_t))&v80[qword_10078DED0 + 16];
  if (*(void *)&v80[qword_10078DED0])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v221 = v103;
  }
  else
  {
    uint64_t v209 = *(void *)&v80[qword_10078DED0 + 16];
    unint64_t v210 = v102;
    LODWORD(v208) = v101[24];
    sub_10003B754((uint64_t *)&unk_10078E3A0);
    uint64_t v106 = swift_allocObject();
    *(void *)(v106 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      uint64_t v189 = _CocoaArrayWrapper.endIndex.getter();
      if (v189)
      {
        uint64_t v190 = v189;
        if (v189 < 1) {
          goto LABEL_175;
        }
        uint64_t v191 = &_swiftEmptyArrayStorage[4];
        do
        {
          uint64_t v192 = *v191++;
          swift_weakAssign();
          swift_beginAccess();
          *(void *)(v192 + 64) = _swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          --v190;
        }
        while (v190);
      }
    }
    sub_10008EDE8(v106);
    uint64_t v108 = v107;
    unint64_t v102 = v109;
    double v207 = v80;
    uint64_t v111 = v110;
    char v113 = v112;
    swift_release();
    char v114 = v113 & 1;
    uint64_t v115 = *(void *)v101;
    *(void *)uint64_t v101 = v108;
    *((void *)v101 + 1) = v102;
    *((void *)v101 + 2) = v111;
    v101[24] = v114;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v221 = v111;
    uint64_t v80 = v207;
    swift_bridgeObjectRetain();
    uint64_t v57 = v218;
    sub_1000349CC(v115);
    sub_1000349CC(0);
    char v28 = v229;
  }
  uint64_t v116 = (uint64_t)v217;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  uint64_t v56 = v231;
  if (!*(void *)(v102 + 16) || (unint64_t v117 = sub_10035C1D4(v116), (v118 & 1) == 0))
  {
    sub_100024448(v116, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    swift_bridgeObjectRelease();
LABEL_52:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100024448(v227, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);

    uint64_t v46 = (uint64_t)v233;
LABEL_53:
    uint64_t v47 = v234;
    uint64_t v81 = v245;
    goto LABEL_54;
  }
  uint64_t v119 = *(void *)(*(void *)(v102 + 56) + 8 * v117);
  swift_bridgeObjectRetain();
  sub_100024448(v116, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  unint64_t v120 = v119 & 0xC000000000000001;
  if ((v119 & 0xC000000000000001) == 0)
  {
    char v126 = *(unsigned char *)(v119 + 32);
    uint64_t v125 = 1 << v126;
    unint64_t v127 = *(void *)(v119 + 56);
    if (v127)
    {
      uint64_t v128 = 0;
    }
    else
    {
      if ((v126 & 0x3Fu) < 7)
      {
LABEL_126:
        uint64_t v123 = *(unsigned int *)(v119 + 36);
        goto LABEL_127;
      }
      unint64_t v127 = *(void *)(v119 + 64);
      if (v127)
      {
        uint64_t v128 = 1;
      }
      else
      {
        uint64_t v175 = 0;
        unint64_t v176 = (unint64_t)(v125 + 63) >> 6;
        if (v176 <= 2) {
          unint64_t v176 = 2;
        }
        unint64_t v177 = v176 - 2;
        do
        {
          if (v177 == v175) {
            goto LABEL_126;
          }
          unint64_t v127 = *(void *)(v119 + 72 + 8 * v175++);
        }
        while (!v127);
        uint64_t v128 = v175 + 1;
      }
    }
    unint64_t v121 = __clz(__rbit64(v127)) + (v128 << 6);
    uint64_t v123 = *(unsigned int *)(v119 + 36);
    if (v121 != v125) {
      goto LABEL_59;
    }
LABEL_127:
    sub_1000205F8(v125, v123, v120 != 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v57 = v218;
    char v28 = v229;
    uint64_t v56 = v231;
    goto LABEL_52;
  }
  unint64_t v210 = v119 & 0xC000000000000001;
  unint64_t v121 = __CocoaSet.startIndex.getter();
  uint64_t v123 = v122;
  __CocoaSet.endIndex.getter();
  char v124 = static __CocoaSet.Index.== infix(_:_:)();
  swift_bridgeObjectRelease();
  unint64_t v120 = v210;
  uint64_t v125 = v121;
  if (v124) {
    goto LABEL_127;
  }
LABEL_59:
  char v129 = v120 != 0;
  uint64_t v130 = sub_100598760(v121, v123, v120 != 0, v119);
  sub_1000205F8(v121, v123, v129);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v130 + 72) != 2)
  {
    sub_100024448(v227, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);

    swift_release();
    uint64_t v57 = v218;
    uint64_t v46 = (uint64_t)v233;
    uint64_t v47 = v234;
    uint64_t v81 = v245;
    char v28 = v229;
    uint64_t v56 = v231;
    goto LABEL_54;
  }
  unint64_t v210 = v130;
  uint64_t v132 = sub_1000890D8();
  double v207 = v133;
  uint64_t v135 = *(void *)(v134 + 16);
  uint64_t v136 = (uint64_t)v204;
  char v28 = v229;
  uint64_t v56 = v231;
  uint64_t v208 = v134;
  if (!v135) {
    goto LABEL_73;
  }
  char v137 = v131;
  uint64_t v138 = sub_10035C1D0(v210);
  if ((v139 & 1) == 0) {
    goto LABEL_65;
  }
  unint64_t v140 = *(void *)(*(void *)(v208 + 56) + 8 * v138);
  if ((v140 & 0x8000000000000000) != 0) {
    goto LABEL_165;
  }
  if (v140 >= *(void *)(v132 + 16))
  {
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
    goto LABEL_170;
  }
  if (*(void *)(v132 + 16 * v140 + 32) == v210)
  {
    uint64_t v46 = (uint64_t)v233;
    if (*(void *)(v208 + 16) && (sub_10035C1D0(v210), (v171 & 1) != 0))
    {
      uint64_t v151 = (uint64_t)v202;
      IndexPath.init(row:section:)();
      uint64_t v172 = *v200;
      v173 = (char *)v151;
      uint64_t v174 = 0;
    }
    else
    {
      uint64_t v172 = *v200;
      uint64_t v151 = (uint64_t)v202;
      v173 = v202;
      uint64_t v174 = 1;
    }
    uint64_t v152 = v203;
    v172((uint64_t)v173, v174, 1, v203);
    goto LABEL_78;
  }
LABEL_65:
  if (!*(void *)(v208 + 16) || (uint64_t v141 = sub_10035C1D0(v210), (v142 & 1) == 0))
  {
LABEL_73:
    uint64_t v205 = v132;
LABEL_74:
    NSString v148 = *v200;
LABEL_75:
    uint64_t v149 = v203;
    v148(v136, 1, 1, v203);
LABEL_76:
    sub_10003B6F8(v136, &qword_10078E8F0);
    uint64_t v150 = v202;
    v148((uint64_t)v202, 1, 1, v149);
    uint64_t v151 = (uint64_t)v150;
    uint64_t v152 = v149;
LABEL_77:
    uint64_t v46 = (uint64_t)v233;
LABEL_78:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*v199)(v151, 1, v152) != 1)
    {
      uint64_t v158 = v198;
      uint64_t v159 = (*v197)(v198, v151, v152);
      uint64_t v221 = (void (*)(char *, uint64_t, uint64_t))v193;
      __chkstk_darwin(v159);
      uint64_t v160 = v245;
      v193[-6] = v80;
      v193[-5] = v160;
      v193[-4] = v210;
      v193[-3] = v158;
      v193[-2] = v230;
      sub_1003CE654((void (*)(uint64_t))sub_1003E20C4, (uint64_t)&v193[-8], 0, 0, 0, 0);
      swift_release();
      uint64_t v81 = v160;
      char v28 = v229;
      sub_100024448(v227, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*v196)(v158, v152);

      uint64_t v47 = v234;
      uint64_t v57 = v218;
      goto LABEL_54;
    }
    sub_10003B6F8(v151, &qword_10078E8F0);
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v153 = type metadata accessor for Logger();
    sub_100018BF8(v153, (uint64_t)qword_10078DE60);
    uint64_t v154 = Logger.logObject.getter();
    os_log_type_t v155 = static os_log_type_t.fault.getter();
    BOOL v156 = os_log_type_enabled(v154, v155);
    uint64_t v57 = v218;
    if (v156)
    {
      uint64_t v157 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v157 = 0;
      _os_log_impl((void *)&_mh_execute_header, v154, v155, "Unable to find childrenStartIndexPath", v157, 2u);
      swift_slowDealloc();
    }
    swift_release();

    sub_100024448(v227, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_53;
  }
  unint64_t v143 = *(void *)(*(void *)(v208 + 56) + 8 * v141);
  uint64_t v205 = v132;
  v193[1] = v143;
  if (v137)
  {
    unint64_t v144 = v210;
    uint64_t Strong = swift_weakLoadStrong();
    swift_retain();
    uint64_t v146 = 0;
    if (!Strong)
    {
LABEL_69:
      swift_release();
      uint64_t v147 = v146 - 1;
      if (!__OFSUB__(v146, 1))
      {
        uint64_t v136 = (uint64_t)v204;
        char v28 = v229;
        if ((v147 & 0x8000000000000000) == 0)
        {
LABEL_143:
          IndexPath.init(row:section:)();
          NSString v148 = *v200;
          uint64_t v184 = v203;
          (*v200)(v136, 0, 1, v203);
          if ((*v199)(v136, 1, v184) == 1)
          {
            uint64_t v149 = v203;
            goto LABEL_76;
          }
          BOOL v185 = v194;
          uint64_t v186 = v136;
          uint64_t v152 = v203;
          uint64_t v221 = (void (*)(char *, uint64_t, uint64_t))*v197;
          v221(v194, v186, v203);
          v187 = (void (*)(uint64_t *, void))IndexPath.row.modify();
          if (!__OFADD__(*v188, 1))
          {
            ++*v188;
            v187(&v252, 0);
            uint64_t v151 = (uint64_t)v202;
            v221(v202, (uint64_t)v185, v152);
            v148(v151, 0, 1, v152);
            goto LABEL_77;
          }
          goto LABEL_174;
        }
        goto LABEL_74;
      }
      goto LABEL_171;
    }
    while (1)
    {
      BOOL v161 = __OFADD__(v146++, 1);
      if (v161)
      {
LABEL_162:
        __break(1u);
        goto LABEL_163;
      }
      uint64_t v162 = Strong;
      swift_beginAccess();
      unint64_t v163 = *(void *)(Strong + 64);
      if (v163 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v164 = _CocoaArrayWrapper.endIndex.getter();
        if (!v164)
        {
LABEL_88:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_89;
        }
      }
      else
      {
        uint64_t v164 = *(void *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        swift_bridgeObjectRetain();
        if (!v164) {
          goto LABEL_88;
        }
      }
      uint64_t v221 = (void (*)(char *, uint64_t, uint64_t))(v163 & 0xC000000000000001);
      if ((v163 & 0xC000000000000001) != 0)
      {
        uint64_t v165 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_164;
        }
        uint64_t v165 = *(void *)(v163 + 32);
        swift_retain();
      }
      uint64_t v201 = v162;
      if (v165 != v144)
      {
        uint64_t v166 = 0;
        uint64_t v209 = v163 & 0xFFFFFFFFFFFFFF8;
        uint64_t v167 = v164 - 1;
        while (1)
        {
          uint64_t v168 = v146 + 1;
          if (__OFADD__(v146, 1)) {
            break;
          }
          if (*(unsigned char *)(v165 + 48))
          {
            uint64_t v252 = 0;
            sub_10020B4F8(v165, &v252);
            uint64_t v169 = v252;
            *(void *)(v165 + 40) = v252;
            *(unsigned char *)(v165 + 48) = 0;
          }
          else
          {
            uint64_t v169 = *(void *)(v165 + 40);
          }
          swift_release();
          BOOL v161 = __OFADD__(v168, v169);
          uint64_t v146 = v168 + v169;
          uint64_t v56 = v231;
          if (v161) {
            goto LABEL_159;
          }
          if (v167 == v166)
          {
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_113;
          }
          unint64_t v170 = v166 + 1;
          if (v221)
          {
            uint64_t v165 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (__OFADD__(v170, 1)) {
              goto LABEL_160;
            }
          }
          else
          {
            if (v170 >= *(void *)(v209 + 16)) {
              goto LABEL_161;
            }
            uint64_t v165 = *(void *)(v163 + 8 * v166 + 40);
            swift_retain();
            if (__OFADD__(v170, 1)) {
              goto LABEL_160;
            }
          }
          ++v166;
          if (v165 == v144) {
            goto LABEL_111;
          }
        }
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
        goto LABEL_162;
      }
LABEL_111:
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v56 = v231;
LABEL_113:
      uint64_t v162 = v201;
LABEL_89:
      uint64_t Strong = swift_weakLoadStrong();
      swift_release();
      unint64_t v144 = v162;
      if (!Strong) {
        goto LABEL_69;
      }
    }
  }
  if ((v143 & 0x8000000000000000) != 0) {
    goto LABEL_169;
  }
  uint64_t v178 = v200;
  if (v143 < *(void *)(v132 + 16))
  {
    unint64_t v179 = *(void *)(v132 + 16 * v143 + 40);
    if (v179 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v180 = _CocoaArrayWrapper.endIndex.getter();
      if (v180) {
        goto LABEL_134;
      }
    }
    else
    {
      uint64_t v180 = *(void *)((v179 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v180)
      {
LABEL_134:
        uint64_t v181 = 0;
        while (1)
        {
          if ((v179 & 0xC000000000000001) != 0)
          {
            uint64_t v182 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_unknownObjectRelease();
            if (v182 == v210) {
              goto LABEL_142;
            }
          }
          else if (*(void *)(v179 + 8 * v181 + 32) == v210)
          {
LABEL_142:
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v136 = (uint64_t)v204;
            goto LABEL_143;
          }
          uint64_t v183 = v181 + 1;
          if (__OFADD__(v181, 1))
          {
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
            goto LABEL_166;
          }
          ++v181;
          if (v183 == v180)
          {
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v178 = v200;
            goto LABEL_154;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
LABEL_154:
    NSString v148 = *v178;
    uint64_t v136 = (uint64_t)v204;
    goto LABEL_75;
  }
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1003DFE60(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v246 = a5;
  uint64_t v236 = a4;
  uint64_t v7 = sub_10003B754(&qword_10078E8F0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v212 = (char *)&v202 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v210 = (char *)&v202 - v10;
  uint64_t v211 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v211 - 8);
  uint64_t v12 = __chkstk_darwin(v211);
  uint64_t v203 = (char *)&v202 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  double v207 = (char *)&v202 - v14;
  uint64_t v15 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  __chkstk_darwin(v15 - 8);
  id v223 = (char *)&v202 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v17 = *(void *)(v259 - 8);
  uint64_t v18 = __chkstk_darwin(v259);
  uint64_t v234 = (uint64_t)&v202 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v213 = (uint64_t)&v202 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v242 = (char *)&v202 - v23;
  __chkstk_darwin(v22);
  uint64_t v233 = (uint64_t)&v202 - v24;
  uint64_t v241 = type metadata accessor for IndexSet();
  uint64_t v25 = *(void *)(v241 - 8);
  uint64_t v26 = __chkstk_darwin(v241);
  uint64_t v254 = (char *)&v202 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v238 = (char *)&v202 - v28;
  uint64_t v260 = sub_10003B754(&qword_10079D9B8);
  uint64_t v29 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  v245 = (unint64_t *)((char *)&v202 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = sub_10003B754((uint64_t *)&unk_100788D10);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v231 = (uint64_t)&v202 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v224 = (uint64_t)&v202 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  int v232 = (char *)&v202 - v37;
  __chkstk_darwin(v36);
  uint64_t v239 = (uint64_t)&v202 - v38;
  uint64_t v39 = sub_10003B754(&qword_10079D9C0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v221 = (uint64_t)&v202 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a1(v41);
  uint64_t v220 = *(void *)(a3 + 16);
  if (!v220) {
    return result;
  }
  uint64_t v219 = *(int *)(v39 + 28);
  uint64_t v253 = qword_1007A59F0;
  uint64_t v218 = a3 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
  uint64_t v217 = *(void *)(v40 + 72);
  uint64_t v252 = v29 + 16;
  uint64_t v251 = (uint64_t (**)(unint64_t *, uint64_t))(v29 + 88);
  int v250 = enum case for ExtendedPatch.insertion<A>(_:);
  int v240 = enum case for ExtendedPatch.deletion<A>(_:);
  int v237 = enum case for ExtendedPatch.move<A>(_:);
  uint64_t v249 = (void (**)(unint64_t *, uint64_t))(v29 + 96);
  uint64_t v230 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
  uint64_t v247 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  uint64_t v209 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  int v229 = enum case for ExtendedPatch.update<A>(_:);
  uint64_t v208 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v206 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  uint64_t v205 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v243 = (void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v204 = a3;
  swift_bridgeObjectRetain();
  uint64_t v44 = 0;
  long long v244 = xmmword_10066C6F0;
  uint64_t v45 = v236;
  uint64_t v46 = v241;
  uint64_t v47 = v238;
  uint64_t v48 = v29;
  uint64_t v248 = v29;
  uint64_t v49 = v239;
  while (1)
  {
    uint64_t v226 = v44;
    uint64_t v50 = v218 + v217 * v44;
    uint64_t v51 = v221;
    sub_10003B694(v50, v221, &qword_10079D9C0);
    sub_10003B694(v51, v49, (uint64_t *)&unk_100788D10);
    uint64_t v52 = *(void *)(v51 + v219);
    swift_bridgeObjectRetain();
    sub_10003B6F8(v51, &qword_10079D9C0);
    uint64_t v258 = *(void *)(v52 + 16);
    if (v258) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v44 = v226 + 1;
    sub_10003B6F8(v49, (uint64_t *)&unk_100788D10);
    if (v44 == v220) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v53 = 0;
  unint64_t v54 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v222 = v52;
  uint64_t v257 = v52 + v54;
  uint64_t v55 = *(void *)(v48 + 72);
  uint64_t v255 = *(void (**)(unint64_t *, uint64_t, uint64_t))(v48 + 16);
  uint64_t v256 = v55;
  uint64_t v56 = v245;
  uint64_t v57 = (uint64_t)v242;
  while (1)
  {
    uint64_t v60 = v260;
    v255(v56, v257 + v256 * v53, v260);
    int v61 = (*v251)(v56, v60);
    if (v61 == v250)
    {
      (*v249)(v56, v260);
      unint64_t v62 = *v56;
      sub_10003B754((uint64_t *)&unk_100797A30);
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = v244;
      *(void *)(v63 + 32) = v62;
      uint64_t v261 = v63;
      sub_1003E1E04((unint64_t *)&qword_10078E310, (void (*)(uint64_t))&type metadata accessor for IndexSet);
      sub_10003B754(&qword_100789060);
      sub_1000996F8();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      BOOL v64 = *v247;
      BOOL v65 = (*v247)(v49, 1, v259) == 1;
      uint64_t v66 = *(void **)(v45 + v253);
      if (!v66) {
        goto LABEL_166;
      }
      uint64_t v67 = *(void *)(v246 + 16 * v65);
      uint64_t v68 = v66;
      if (IndexSet.isEmpty.getter())
      {
      }
      else
      {
        uint64_t v69 = *(void *)&v68[qword_10078DEB0];
        if (!v69)
        {

LABEL_44:
          uint64_t v46 = v241;
          goto LABEL_7;
        }
        uint64_t v70 = *(uint64_t (**)(uint64_t))(v69 + 16);
        uint64_t v71 = swift_retain();
        if (v70(v71))
        {
          uint64_t v49 = v239;
          uint64_t v72 = v224;
          sub_10003B694(v239, v224, (uint64_t *)&unk_100788D10);
          if (v64(v72, 1, v259) == 1)
          {
            uint64_t v73 = sub_10003B6F8(v72, (uint64_t *)&unk_100788D10);
            __chkstk_darwin(v73);
            *(&v202 - 4) = (unint64_t)v68;
            *(&v202 - 3) = (unint64_t)v47;
            *(&v202 - 2) = v69;
            *(&v202 - 1) = v67;
            sub_1003CEE4C((void (*)(uint64_t))sub_1003E1D74, (uint64_t)(&v202 - 6), 0, 0, 0, 0);

            swift_release();
          }
          else
          {
            uint64_t v108 = v213;
            uint64_t v109 = sub_10004007C(v72, v213, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            __chkstk_darwin(v109);
            *(&v202 - 4) = (unint64_t)v68;
            *(&v202 - 3) = (unint64_t)v47;
            *(&v202 - 2) = v108;
            *(&v202 - 1) = v67;
            sub_1003CEE4C((void (*)(uint64_t))sub_1003E1DBC, (uint64_t)(&v202 - 6), 0, 0, 0, 0);
            swift_release();
            uint64_t v110 = v108;
            uint64_t v49 = v239;
            sub_100024448(v110, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          }
          uint64_t v45 = v236;
          goto LABEL_44;
        }

        swift_release();
        uint64_t v45 = v236;
        uint64_t v46 = v241;
        uint64_t v49 = v239;
      }
LABEL_7:
      uint64_t v58 = sub_10003B754(&qword_10079D9D8);
      uint64_t v56 = v245;
      uint64_t v59 = (uint64_t)v245 + *(int *)(v58 + 48);
      (*v243)(v47, v46);
      sub_100024448(v59, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v57 = (uint64_t)v242;
      goto LABEL_8;
    }
    if (v61 == v240) {
      break;
    }
    if (v61 == v237)
    {
      (*v249)(v56, v260);
      unint64_t v85 = *v56;
      uint64_t v84 = v56[1];
      uint64_t v86 = sub_10003B754(&qword_10079D9D0);
      uint64_t v87 = v233;
      sub_10004007C((uint64_t)v56 + *(int *)(v86 + 64), v233, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v88 = *(void **)(v45 + v253);
      if (!v88) {
        goto LABEL_171;
      }
      id v89 = v88;
      sub_1003D736C(v87, v85, v49, v84, v49);

      sub_100024448(v87, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v46 = v241;
      goto LABEL_8;
    }
    uint64_t v90 = (uint64_t)v232;
    if (v61 != v229) {
      goto LABEL_175;
    }
    (*v249)(v56, v260);
    uint64_t v91 = sub_10003B754(&qword_10079D9C8);
    sub_10004007C((uint64_t)v56 + *(int *)(v91 + 48), v57, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100024578(v57, v90, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*v230)(v90, 0, 1, v259);
    uint64_t v92 = *(void **)(v45 + v253);
    if (!v92) {
      goto LABEL_172;
    }
    uint64_t v93 = *(void *)(v246 + 32);
    uint64_t v94 = (uint64_t)v56 + *(int *)(v91 + 64);
    id v95 = v92;
    sub_1003DA734(v90, 0, v93);

    sub_10003B6F8(v90, (uint64_t *)&unk_100788D10);
    sub_100024448(v57, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100024448(v94, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    uint64_t v46 = v241;
    uint64_t v48 = v248;
    uint64_t v49 = v239;
LABEL_9:
    if (++v53 == v258) {
      goto LABEL_3;
    }
  }
  (*v249)(v56, v260);
  unint64_t v74 = *v56;
  sub_10003B754((uint64_t *)&unk_100797A30);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v244;
  *(void *)(v75 + 32) = v74;
  uint64_t v261 = v75;
  sub_1003E1E04((unint64_t *)&qword_10078E310, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  sub_10003B754(&qword_100789060);
  sub_1000996F8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  char v76 = *v247;
  int v77 = (*v247)(v49, 1, v259);
  uint64_t v78 = 24;
  if (v77 != 1) {
    uint64_t v78 = 8;
  }
  uint64_t v79 = *(void **)(v45 + v253);
  if (!v79) {
    goto LABEL_167;
  }
  uint64_t v80 = v45;
  uint64_t v81 = *(void *)(v246 + v78);
  uint64_t v82 = v79;
  if (IndexSet.isEmpty.getter())
  {

    unint64_t v83 = v254;
    goto LABEL_31;
  }
  uint64_t v235 = v81;
  uint64_t v96 = v231;
  sub_10003B694(v49, v231, (uint64_t *)&unk_100788D10);
  if (v76(v96, 1, v259) == 1)
  {
    uint64_t v97 = sub_10003B6F8(v96, (uint64_t *)&unk_100788D10);
    __chkstk_darwin(v97);
    int64_t v98 = v254;
    *(&v202 - 4) = (unint64_t)v82;
    *(&v202 - 3) = (unint64_t)v98;
    *(&v202 - 2) = v235;
    sub_1003CEE4C((void (*)(uint64_t))sub_1003E1D00, (uint64_t)(&v202 - 6), 0, 0, 0, 0);

    unint64_t v83 = v98;
LABEL_31:
    uint64_t v47 = v238;
LABEL_54:
    uint64_t v45 = v80;
LABEL_55:
    uint64_t v56 = v245;
    goto LABEL_56;
  }
  sub_10004007C(v96, v234, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  uint64_t v47 = v238;
  if (v82[qword_10078DED8] == 1)
  {
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v99 = type metadata accessor for Logger();
    sub_100018BF8(v99, (uint64_t)qword_10078DE60);
    unint64_t v100 = Logger.logObject.getter();
    os_log_type_t v101 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v100, v101))
    {
      unint64_t v102 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v102 = 0;
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "Attempting to read sectionMetadata while it is being modified", v102, 2u);
      swift_slowDealloc();
    }
  }
  int64_t v103 = &v82[qword_10078DED0];
  uint64_t v105 = *(void *)&v82[qword_10078DED0];
  uint64_t v104 = *(void *)&v82[qword_10078DED0 + 8];
  unint64_t v106 = *(void *)&v82[qword_10078DED0 + 16];
  if (v105)
  {
    uint64_t v227 = *(void *)&v82[qword_10078DED0];
    uint64_t v107 = v104;
    unint64_t v228 = v106;
  }
  else
  {
    LODWORD(v214) = v82[qword_10078DED0 + 24];
    uint64_t v215 = v106;
    uint64_t v216 = v104;
    sub_10003B754((uint64_t *)&unk_100788D20);
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = sub_100090290((unint64_t)&_swiftEmptyArrayStorage);
    if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      uint64_t v198 = _CocoaArrayWrapper.endIndex.getter();
      if (v198)
      {
        uint64_t v199 = v198;
        if (v198 < 1) {
          goto LABEL_174;
        }
        v200 = (uint64_t *)((char *)&_swiftEmptyArrayStorage + 32);
        do
        {
          uint64_t v201 = *v200++;
          swift_weakAssign();
          swift_beginAccess();
          *(void *)(v201 + 64) = &_swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          --v199;
        }
        while (v199);
      }
    }
    uint64_t v225 = v82;
    sub_10008F2F8(inited);
    uint64_t v113 = v112;
    uint64_t v115 = v114;
    unint64_t v117 = v116;
    char v119 = v118;
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    char v120 = v119 & 1;
    uint64_t v121 = *(void *)v103;
    *(void *)int64_t v103 = v113;
    *((void *)v103 + 1) = v115;
    *((void *)v103 + 2) = v117;
    v103[24] = v120;
    uint64_t v227 = v113;
    uint64_t v107 = v115;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v228 = v117;
    swift_bridgeObjectRetain();
    uint64_t v82 = v225;
    sub_1000349CC(v121);
    uint64_t v57 = (uint64_t)v242;
    uint64_t v47 = v238;
  }
  sub_100032FE8(v105);
  uint64_t v122 = (uint64_t)v223;
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
  uint64_t v80 = v236;
  uint64_t v49 = v239;
  if (!*(void *)(v107 + 16) || (unint64_t v123 = sub_10035C64C(v122), (v124 & 1) == 0))
  {
    sub_100024448(v122, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    swift_bridgeObjectRelease();
    uint64_t v46 = v241;
LABEL_53:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100024448(v234, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);

    unint64_t v83 = v254;
    goto LABEL_54;
  }
  uint64_t v125 = *(void *)(*(void *)(v107 + 56) + 8 * v123);
  swift_bridgeObjectRetain();
  sub_100024448(v122, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  unint64_t v126 = v125 & 0xC000000000000001;
  uint64_t v225 = v82;
  if ((v125 & 0xC000000000000001) != 0)
  {
    unint64_t v127 = __CocoaSet.startIndex.getter();
    uint64_t v129 = v128;
    __CocoaSet.endIndex.getter();
    char v130 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v131 = v127;
    if (v130)
    {
LABEL_124:
      sub_1000205F8(v131, v129, v126 != 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v80 = v236;
      uint64_t v57 = (uint64_t)v242;
      uint64_t v46 = v241;
      uint64_t v47 = v238;
      uint64_t v49 = v239;
      uint64_t v82 = v225;
      goto LABEL_53;
    }
  }
  else
  {
    char v132 = *(unsigned char *)(v125 + 32);
    uint64_t v131 = 1 << v132;
    unint64_t v133 = *(void *)(v125 + 56);
    if (v133)
    {
      uint64_t v134 = 0;
    }
    else
    {
      if ((v132 & 0x3Fu) < 7)
      {
LABEL_123:
        uint64_t v129 = *(unsigned int *)(v125 + 36);
        goto LABEL_124;
      }
      unint64_t v133 = *(void *)(v125 + 64);
      if (v133)
      {
        uint64_t v134 = 1;
      }
      else
      {
        uint64_t v183 = 0;
        unint64_t v184 = (unint64_t)(v131 + 63) >> 6;
        if (v184 <= 2) {
          unint64_t v184 = 2;
        }
        unint64_t v185 = v184 - 2;
        do
        {
          if (v185 == v183) {
            goto LABEL_123;
          }
          unint64_t v133 = *(void *)(v125 + 72 + 8 * v183++);
        }
        while (!v133);
        uint64_t v134 = v183 + 1;
      }
    }
    unint64_t v127 = __clz(__rbit64(v133)) + (v134 << 6);
    uint64_t v129 = *(unsigned int *)(v125 + 36);
    if (v127 == v131) {
      goto LABEL_124;
    }
  }
  uint64_t v135 = sub_1005989E4(v127, v129, v126 != 0, v125);
  sub_1000205F8(v127, v129, v126 != 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v135 + 72) != 2)
  {
    sub_100024448(v234, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);

    swift_release();
    uint64_t v45 = v236;
    uint64_t v57 = (uint64_t)v242;
    uint64_t v46 = v241;
    unint64_t v83 = v254;
    uint64_t v47 = v238;
    uint64_t v49 = v239;
    goto LABEL_55;
  }
  uint64_t v215 = sub_100089354();
  uint64_t v138 = v137;
  uint64_t v140 = *(void *)(v139 + 16);
  uint64_t v141 = (uint64_t)v212;
  uint64_t v49 = v239;
  char v142 = v209;
  uint64_t v216 = v139;
  if (!v140) {
    goto LABEL_72;
  }
  char v143 = v136;
  uint64_t v144 = sub_10035C1D0(v135);
  if ((v145 & 1) == 0)
  {
LABEL_66:
    if (*(void *)(v216 + 16))
    {
      uint64_t v147 = sub_10035C1D0(v135);
      if (v148)
      {
        unint64_t v149 = *(void *)(*(void *)(v216 + 56) + 8 * v147);
        uint64_t v214 = v138;
        if ((v143 & 1) == 0)
        {
          if ((v149 & 0x8000000000000000) != 0) {
            goto LABEL_168;
          }
          if (v149 >= *(void *)(v215 + 16)) {
            goto LABEL_169;
          }
          unint64_t v186 = *(void *)(v215 + 16 * v149 + 40);
          if (v186 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v187 = _CocoaArrayWrapper.endIndex.getter();
            if (v187)
            {
LABEL_131:
              unint64_t v202 = v149;
              uint64_t v188 = 0;
              do
              {
                if ((v186 & 0xC000000000000001) != 0)
                {
                  uint64_t v189 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  swift_unknownObjectRelease();
                  if (v189 == v135) {
                    goto LABEL_142;
                  }
                }
                else if (*(void *)(v186 + 8 * v188 + 32) == v135)
                {
LABEL_142:
                  swift_bridgeObjectRelease();
                  swift_release();
                  uint64_t v141 = (uint64_t)v212;
                  goto LABEL_143;
                }
                uint64_t v190 = v188 + 1;
                if (__OFADD__(v188, 1))
                {
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
LABEL_164:
                  __break(1u);
                  goto LABEL_165;
                }
                ++v188;
              }
              while (v190 != v187);
            }
          }
          else
          {
            uint64_t v187 = *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            swift_bridgeObjectRetain();
            if (v187) {
              goto LABEL_131;
            }
          }
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v153 = *v142;
          uint64_t v141 = (uint64_t)v212;
          goto LABEL_74;
        }
        unint64_t v202 = v149;
        uint64_t Strong = swift_weakLoadStrong();
        swift_retain();
        uint64_t v151 = 0;
        if (Strong)
        {
          uint64_t v152 = v135;
          do
          {
            BOOL v165 = __OFADD__(v151++, 1);
            if (v165)
            {
LABEL_161:
              __break(1u);
              goto LABEL_162;
            }
            uint64_t v166 = Strong;
            swift_beginAccess();
            unint64_t v167 = *(void *)(Strong + 64);
            if (v167 >> 62)
            {
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v168 = _CocoaArrayWrapper.endIndex.getter();
              if (!v168)
              {
LABEL_83:
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_84;
              }
            }
            else
            {
              uint64_t v168 = *(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_retain();
              swift_bridgeObjectRetain();
              if (!v168) {
                goto LABEL_83;
              }
            }
            unint64_t v228 = v167 & 0xC000000000000001;
            if ((v167 & 0xC000000000000001) != 0)
            {
              uint64_t v169 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              if (v169 != v152) {
                goto LABEL_91;
              }
            }
            else
            {
              if (!*(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_163;
              }
              uint64_t v169 = *(void *)(v167 + 32);
              swift_retain();
              if (v169 != v152)
              {
LABEL_91:
                uint64_t v170 = 0;
                uint64_t v227 = v167 & 0xFFFFFFFFFFFFFF8;
                uint64_t v171 = v168 - 1;
                while (1)
                {
                  uint64_t v172 = v151 + 1;
                  if (__OFADD__(v151, 1)) {
                    break;
                  }
                  if (*(unsigned char *)(v169 + 48))
                  {
                    uint64_t v261 = 0;
                    sub_10020B4F8(v169, &v261);
                    uint64_t v173 = v261;
                    *(void *)(v169 + 40) = v261;
                    *(unsigned char *)(v169 + 48) = 0;
                  }
                  else
                  {
                    uint64_t v173 = *(void *)(v169 + 40);
                  }
                  swift_release();
                  BOOL v165 = __OFADD__(v172, v173);
                  uint64_t v151 = v172 + v173;
                  if (v165) {
                    goto LABEL_158;
                  }
                  if (v171 == v170) {
                    goto LABEL_83;
                  }
                  unint64_t v174 = v170 + 1;
                  if (v228)
                  {
                    uint64_t v169 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                    if (__OFADD__(v174, 1)) {
                      goto LABEL_159;
                    }
                  }
                  else
                  {
                    if (v174 >= *(void *)(v227 + 16)) {
                      goto LABEL_160;
                    }
                    uint64_t v169 = *(void *)(v167 + 8 * v170 + 40);
                    swift_retain();
                    if (__OFADD__(v174, 1)) {
                      goto LABEL_159;
                    }
                  }
                  ++v170;
                  if (v169 == v152) {
                    goto LABEL_105;
                  }
                }
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
                goto LABEL_161;
              }
            }
LABEL_105:
            swift_bridgeObjectRelease();
            swift_release_n();
LABEL_84:
            uint64_t Strong = swift_weakLoadStrong();
            swift_release();
            uint64_t v152 = v166;
            uint64_t v49 = v239;
          }
          while (Strong);
        }
        swift_release();
        uint64_t v191 = v151 - 1;
        if (__OFSUB__(v151, 1)) {
          goto LABEL_170;
        }
        uint64_t v141 = (uint64_t)v212;
        char v142 = v209;
        if ((v191 & 0x8000000000000000) == 0)
        {
LABEL_143:
          IndexPath.init(row:section:)();
          uint64_t v153 = *v142;
          uint64_t v192 = v211;
          (*v142)((char *)v141, 0, 1, v211);
          if ((*v208)(v141, 1, v192) != 1)
          {
            uint64_t v193 = v203;
            uint64_t v194 = *v206;
            uint64_t v195 = v141;
            uint64_t v157 = v211;
            (*v206)(v203, v195, v211);
            v196 = (void (*)(uint64_t *, void))IndexPath.row.modify();
            if (__OFADD__(*v197, 1)) {
              goto LABEL_173;
            }
            ++*v197;
            v196(&v261, 0);
            uint64_t v156 = (uint64_t)v210;
            v194(v210, (uint64_t)v193, v157);
            v153((char *)v156, 0, 1, v157);
            goto LABEL_76;
          }
          uint64_t v154 = v211;
LABEL_75:
          sub_10003B6F8(v141, &qword_10078E8F0);
          os_log_type_t v155 = v210;
          v153(v210, 1, 1, v154);
          uint64_t v156 = (uint64_t)v155;
          uint64_t v157 = v154;
LABEL_76:
          uint64_t v158 = v235;
          goto LABEL_77;
        }
LABEL_73:
        uint64_t v153 = *v142;
LABEL_74:
        uint64_t v154 = v211;
        v153((char *)v141, 1, 1, v211);
        goto LABEL_75;
      }
    }
LABEL_72:
    uint64_t v214 = v138;
    goto LABEL_73;
  }
  unint64_t v146 = *(void *)(*(void *)(v216 + 56) + 8 * v144);
  if ((v146 & 0x8000000000000000) != 0) {
    goto LABEL_164;
  }
  if (v146 < *(void *)(v215 + 16))
  {
    if (*(void *)(v215 + 16 * v146 + 32) != v135) {
      goto LABEL_66;
    }
    if (*(void *)(v216 + 16) && (sub_10035C1D0(v135), (v179 & 1) != 0))
    {
      uint64_t v156 = (uint64_t)v210;
      IndexPath.init(row:section:)();
      uint64_t v180 = *v142;
      uint64_t v181 = (char *)v156;
      uint64_t v182 = 0;
    }
    else
    {
      uint64_t v180 = *v142;
      uint64_t v156 = (uint64_t)v210;
      uint64_t v181 = v210;
      uint64_t v182 = 1;
    }
    uint64_t v157 = v211;
    v180(v181, v182, 1, v211);
    uint64_t v158 = v235;
LABEL_77:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*v208)(v156, 1, v157) != 1)
    {
      uint64_t v175 = v207;
      uint64_t v176 = ((uint64_t (*)(char *, uint64_t, uint64_t))*v206)(v207, v156, v157);
      __chkstk_darwin(v176);
      unint64_t v177 = v225;
      uint64_t v178 = v254;
      *(&v202 - 6) = (unint64_t)v225;
      *(&v202 - 5) = (unint64_t)v178;
      *(&v202 - 4) = v135;
      *(&v202 - 3) = (unint64_t)v175;
      *(&v202 - 2) = v158;
      sub_1003CEE4C((void (*)(uint64_t))sub_1003E1D48, (uint64_t)(&v202 - 8), 0, 0, 0, 0);
      swift_release();
      unint64_t v83 = v178;
      sub_100024448(v234, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      (*v205)(v175, v157);

      uint64_t v57 = (uint64_t)v242;
      uint64_t v46 = v241;
      uint64_t v47 = v238;
      uint64_t v45 = v236;
      goto LABEL_55;
    }
    uint64_t v235 = v135;
    sub_10003B6F8(v156, &qword_10078E8F0);
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v159 = type metadata accessor for Logger();
    sub_100018BF8(v159, (uint64_t)qword_10078DE60);
    uint64_t v160 = Logger.logObject.getter();
    os_log_type_t v161 = static os_log_type_t.fault.getter();
    BOOL v162 = os_log_type_enabled(v160, v161);
    uint64_t v57 = (uint64_t)v242;
    uint64_t v47 = v238;
    unint64_t v163 = v225;
    uint64_t v45 = v236;
    uint64_t v56 = v245;
    if (v162)
    {
      uint64_t v164 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v164 = 0;
      _os_log_impl((void *)&_mh_execute_header, v160, v161, "Unable to find childrenStartIndexPath", v164, 2u);
      swift_slowDealloc();
    }
    swift_release();

    sub_100024448(v234, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    uint64_t v46 = v241;
    unint64_t v83 = v254;
LABEL_56:
    (*v243)(v83, v46);
LABEL_8:
    uint64_t v48 = v248;
    goto LABEL_9;
  }
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1003E1CF8()
{
  return sub_100084264(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003E1D00(uint64_t a1)
{
  return sub_1003D4CB4(a1, v1[2], v1[3], v1[4], sub_100089354, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D5A04);
}

uint64_t sub_1003E1D48(uint64_t a1)
{
  return sub_1003E20F0(a1, sub_100089354, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D3CC8);
}

uint64_t sub_1003E1D74(uint64_t a1)
{
  return sub_1003D1434(a1, v1[2], v1[3], v1[4], v1[5], sub_100089354, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D1C4C);
}

uint64_t sub_1003E1DBC(uint64_t a1)
{
  return sub_1003CF644(a1, v1[2], v1[3], v1[4], v1[5], sub_100089354, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, long long *))sub_1003D0780);
}

uint64_t sub_1003E1E04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003E1E4C(uint64_t a1)
{
  return sub_100127FCC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003E1E54(uint64_t a1)
{
  return sub_10012F0DC(a1, *(uint64_t (**)(void))(v1 + 16)) & 1;
}

uint64_t sub_1003E1E74()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003E1EAC(uint64_t a1)
{
  return sub_100129228(a1, v1);
}

uint64_t sub_1003E1EB8(uint64_t a1)
{
  return sub_1001281C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003E1EC0(uint64_t a1)
{
  return sub_1003E1FF8(a1, sub_100089354, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D93DC);
}

uint64_t sub_1003E1EEC(uint64_t a1)
{
  return sub_1003D8048(a1, v1[2], v1[3], v1[4], v1[5], sub_100089354, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D88BC);
}

uint64_t sub_1003E1F34(uint64_t a1)
{
  return sub_1003E21D8(a1, sub_100089354, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003DC9B8);
}

uint64_t sub_1003E1F60(uint64_t a1)
{
  return sub_100127F8C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003E1F68(uint64_t a1)
{
  return sub_100143174(a1, *(uint64_t (**)(void))(v1 + 16)) & 1;
}

uint64_t sub_1003E1F8C(uint64_t a1)
{
  return sub_1001281A8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003E1F94()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003E1FCC(uint64_t a1)
{
  return sub_1003E1FF8(a1, sub_1000890D8, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D9240);
}

uint64_t sub_1003E1FF8(uint64_t a1, uint64_t (*a2)(void), void (*a3)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return sub_1003D9150(a1, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], a2, a3);
}

uint64_t sub_1003E2034(uint64_t a1)
{
  return sub_1003D8048(a1, v1[2], v1[3], v1[4], v1[5], sub_1000890D8, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D811C);
}

uint64_t sub_1003E207C(uint64_t a1)
{
  return sub_1003D4CB4(a1, v1[2], v1[3], v1[4], sub_1000890D8, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D4D78);
}

uint64_t sub_1003E20C4(uint64_t a1)
{
  return sub_1003E20F0(a1, sub_1000890D8, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D2F5C);
}

uint64_t sub_1003E20F0(uint64_t a1, uint64_t (*a2)(void), void (*a3)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return sub_1003D2E80(a1, v3[2], v3[3], v3[4], v3[5], v3[6], a2, a3);
}

uint64_t sub_1003E211C(uint64_t a1)
{
  return sub_1003D1434(a1, v1[2], v1[3], v1[4], v1[5], sub_1000890D8, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003D1508);
}

uint64_t sub_1003E2164(uint64_t a1)
{
  return sub_1003CF644(a1, v1[2], v1[3], v1[4], v1[5], sub_1000890D8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, long long *))sub_1003CF714);
}

uint64_t sub_1003E21AC(uint64_t a1)
{
  return sub_1003E21D8(a1, sub_1000890D8, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003DBC08);
}

uint64_t sub_1003E21D8(uint64_t a1, uint64_t (*a2)(void), void (*a3)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return sub_1003DBB10(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(unsigned __int8 *)(v3 + 40), *(unsigned __int8 *)(v3 + 41), *(unsigned __int8 *)(v3 + 42), *(void *)(v3 + 48), *(void *)(v3 + 56), a2, a3);
}

uint64_t sub_1003E2234(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v15 = v7;
      char v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      char v11 = v10;

      if (v11)
      {
        swift_bridgeObjectRelease();
        char v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

BOOL sub_1003E236C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a1;
  uint64_t v39 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v37 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v34 = v8;
    uint64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v31 = v16;
    uint64_t v32 = (void (**)(char *))(v13 + 16);
    uint64_t v33 = (void (**)(char *, uint64_t))(v13 - 8);
    void v29[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v29[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v17 = v39;
      uint64_t v18 = v13;
      v37(v11, v15, v39);
      uint64_t v19 = *v36;
      (*v36)(v11, 0, 1, v17);
      int v20 = (*v35)(v11, 1, v17);
      BOOL v21 = v20 != 1;
      if (v20 == 1) {
        break;
      }
      uint64_t v30 = v19;
      uint64_t v22 = v11;
      uint64_t v23 = v34;
      uint64_t v24 = v22;
      (*v32)(v34);
      char v25 = v38(v23);
      if (v4)
      {
        (*v33)(v23, v17);
        swift_bridgeObjectRelease();
        return v21;
      }
      char v26 = v25;
      (*v33)(v23, v17);
      if (v26) {
        break;
      }
      v15 += v31;
      --v12;
      uint64_t v4 = 0;
      uint64_t v13 = v18;
      char v11 = v24;
      if (!v12)
      {
        v30(v24, 1, 1, v39);
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v27(v11, 1, 1, v39);
LABEL_9:
    BOOL v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1003E264C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079DA18);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079DA18);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003E2714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = swift_getObjectType();
  sub_10003B754(&qword_10079AF90);
  v4[12] = swift_task_alloc();
  uint64_t v5 = *(void *)(type metadata accessor for TTRRemindersListViewModel.ItemID() - 8);
  v4[13] = v5;
  v4[14] = *(void *)(v5 + 64);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = type metadata accessor for MainActor();
  v4[18] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[19] = v7;
  v4[20] = v6;
  return _swift_task_switch(sub_1003E2860, v7, v6);
}

uint64_t sub_1003E2860()
{
  uint64_t v38 = v0;
  if (qword_100785550 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[16];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100018BF8(v3, (uint64_t)qword_10079DA18);
  sub_1000FF3FC(v1, v2);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[16];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v9 = _typeName(_:qualified:)();
    v0[4] = sub_1000385A8(v9, v10, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[5] = sub_1000385A8(0xD00000000000002CLL, 0x80000001006B93B0, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2080;
    uint64_t v11 = TTRRemindersListViewModel.ItemID.description.getter();
    v0[6] = sub_1000385A8(v11, v12, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000FF460(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: %s {itemID: %s}", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000FF460(v0[16]);
  }

  uint64_t v13 = v0[10];
  uint64_t v14 = OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_pendingStartEditingTask;
  if (*(void *)(v13 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_pendingStartEditingTask))
  {
    swift_retain();
    sub_10003B754(&qword_100791D68);
    Task.cancel()();
    swift_release();
  }
  uint64_t v15 = (void *)v0[10];
  uint64_t v16 = v0[15];
  uint64_t v33 = v0[14];
  uint64_t v18 = v0[12];
  uint64_t v17 = v0[13];
  uint64_t v36 = v0[11];
  uint64_t v32 = v0[9];
  uint64_t v34 = v18;
  uint64_t v35 = v0[8];
  uint64_t v19 = v0[7];
  *(void *)(v13 + v14) = 0;
  swift_release();
  uint64_t v20 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  sub_1000FF3FC(v19, v16);
  id v21 = v15;
  swift_retain();
  uint64_t v22 = static MainActor.shared.getter();
  unint64_t v23 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v24 = (v33 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v22;
  *(void *)(v26 + 24) = &protocol witness table for MainActor;
  sub_1000FF4BC(v16, v26 + v23);
  *(void *)(v26 + v24) = v21;
  uint64_t v27 = (void *)(v26 + v25);
  *uint64_t v27 = v35;
  v27[1] = v32;
  *(void *)(v26 + ((v25 + 23) & 0xFFFFFFFFFFFFFFF8)) = v36;
  uint64_t v28 = sub_10019B270(v34, (uint64_t)&unk_10079DAE0, v26);
  v0[21] = v28;
  *(void *)(v13 + v14) = v28;
  swift_retain();
  swift_release();
  uint64_t v29 = (void *)swift_task_alloc();
  v0[22] = v29;
  uint64_t v30 = sub_10003B754(&qword_100791D68);
  *uint64_t v29 = v0;
  v29[1] = sub_1003E2CCC;
  return Task<>.value.getter(v0 + 2, v28, v30);
}

uint64_t sub_1003E2CCC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return _swift_task_switch(sub_1003E2DEC, v3, v2);
}

uint64_t sub_1003E2DEC()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_1003E2E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v8[13] = type metadata accessor for TTRRemindersListViewModel.ItemID();
  v8[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[15] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[16] = v10;
  v8[17] = v9;
  return _swift_task_switch(sub_1003E2F64, v10, v9);
}

uint64_t sub_1003E2F64()
{
  sub_1000FF3FC(v0[8], v0[14]);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1000FF460(v0[14]);
      goto LABEL_7;
    case 2u:

      goto LABEL_7;
    case 3u:
LABEL_7:
      uint64_t v4 = (void *)swift_task_alloc();
      v0[20] = (uint64_t)v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1003E3540;
      uint64_t v5 = v0[8];
      uint64_t result = sub_1003E439C(v5, 0, 1);
      break;
    default:
      uint64_t v1 = (void *)swift_task_alloc();
      v0[18] = (uint64_t)v1;
      *uint64_t v1 = v0;
      v1[1] = sub_1003E30DC;
      uint64_t v2 = v0[8];
      uint64_t result = sub_1003E399C(v2, 0, 1);
      break;
  }
  return result;
}

uint64_t sub_1003E30DC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  return _swift_task_switch(sub_1003E3204, v4, v3);
}

uint64_t sub_1003E3204()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 112);
  swift_release();
  sub_1000FF460(v2);
  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 152);
    id v4 = v3;
    if ((static Task<>.isCancelled.getter() & 1) == 0)
    {
      uint64_t v16 = *(void **)(v0 + 56);
      (*(void (**)(id, _UNKNOWN **))(v0 + 80))(v4, &off_1007559F0);

      *uint64_t v16 = v3;
      v16[1] = &off_1007559F0;
      goto LABEL_12;
    }

    uint64_t v5 = &off_1007559F0;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  if (qword_100785550 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100018BF8(v6, (uint64_t)qword_10079DA18);
  id v7 = v3;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v19 = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315906;
    uint64_t v11 = _typeName(_:qualified:)();
    *(void *)(v0 + 32) = sub_1000385A8(v11, v12, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    *(void *)(v0 + 40) = sub_1000385A8(0xD00000000000002CLL, 0x80000001006B93B0, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 22) = 2080;
    *(void *)(v0 + 16) = v3;
    *(void *)(v0 + 24) = v19;
    sub_10003B754(&qword_100791D68);
    uint64_t v13 = Optional.descriptionOrNil.getter();
    *(void *)(v0 + 48) = sub_1000385A8(v13, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 32) = 1024;
    *(_DWORD *)(v0 + 176) = static Task<>.isCancelled.getter() & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: %s - Unable to scroll to item {cell: %s, taskIsCancelled: %{BOOL}d", (uint8_t *)v10, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v15 = *(void **)(v0 + 56);
  *uint64_t v15 = 0;
  v15[1] = 0;
LABEL_12:
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1003E3540(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  return _swift_task_switch(sub_1003E3668, v4, v3);
}

uint64_t sub_1003E3668()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 168);
    id v3 = v2;
    if ((static Task<>.isCancelled.getter() & 1) == 0)
    {
      uint64_t v15 = *(void **)(v0 + 56);
      (*(void (**)(id, _UNKNOWN **))(v0 + 80))(v3, &off_100740DA8);

      *uint64_t v15 = v2;
      v15[1] = &off_100740DA8;
      goto LABEL_12;
    }

    uint64_t v4 = &off_100740DA8;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 0;
  }
  if (qword_100785550 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_10079DA18);
  id v6 = v2;
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v18 = v4;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315906;
    uint64_t v10 = _typeName(_:qualified:)();
    *(void *)(v0 + 32) = sub_1000385A8(v10, v11, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 40) = sub_1000385A8(0xD00000000000002CLL, 0x80000001006B93B0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 22) = 2080;
    *(void *)(v0 + 16) = v2;
    *(void *)(v0 + 24) = v18;
    sub_10003B754(&qword_100791D68);
    uint64_t v12 = Optional.descriptionOrNil.getter();
    *(void *)(v0 + 48) = sub_1000385A8(v12, v13, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 32) = 1024;
    *(_DWORD *)(v0 + 176) = static Task<>.isCancelled.getter() & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s: %s - Unable to scroll to item {cell: %s, taskIsCancelled: %{BOOL}d", (uint8_t *)v9, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v14 = *(void **)(v0 + 56);
  *unint64_t v14 = 0;
  v14[1] = 0;
LABEL_12:
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1003E399C(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 64) = a2;
  *(void *)(v4 + 72) = v3;
  *(unsigned char *)(v4 + 192) = a3;
  *(void *)(v4 + 56) = a1;
  *(void *)(v4 + 80) = swift_getObjectType();
  uint64_t v5 = type metadata accessor for IndexPath();
  *(void *)(v4 + 88) = v5;
  *(void *)(v4 + 96) = *(void *)(v5 - 8);
  *(void *)(v4 + 104) = swift_task_alloc();
  sub_10003B754(&qword_10078E8F0);
  *(void *)(v4 + 112) = swift_task_alloc();
  *(void *)(v4 + 120) = type metadata accessor for TTRRemindersListViewModel.ItemID();
  *(void *)(v4 + 128) = swift_task_alloc();
  *(void *)(v4 + 136) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 144) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 152) = v7;
  *(void *)(v4 + 160) = v6;
  return _swift_task_switch(sub_1003E3B14, v7, v6);
}

uint64_t sub_1003E3B14()
{
  uint64_t v28 = v0;
  if (qword_100785550 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 168) = sub_100018BF8(v1, (uint64_t)qword_10079DA18);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v5 = _typeName(_:qualified:)();
    *(void *)(v0 + 40) = sub_1000385A8(v5, v6, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    *(void *)(v0 + 48) = sub_1000385A8(0xD000000000000037, 0x80000001006B93E0, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000FF3FC(*(void *)(v0 + 56), *(void *)(v0 + 136));
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v7 = *(void *)(v0 + 136);
    swift_release();
    sub_1000FF460(v7);
LABEL_9:
    sub_1000FF3FC(*(void *)(v0 + 56), *(void *)(v0 + 128));
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void *)(v0 + 128);
    if (v14)
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = _typeName(_:qualified:)();
      *(void *)(v0 + 16) = sub_1000385A8(v17, v18, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      uint64_t v19 = TTRRemindersListViewModel.ItemID.description.getter();
      *(void *)(v0 + 24) = sub_1000385A8(v19, v20, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000FF460(v15);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: columnID/indexPath not found {itemID: %s}", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000FF460(*(void *)(v0 + 128));
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21(0);
  }
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 96);
  sub_1000FF460(*(void *)(v0 + 136));
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t v11 = *(void *)(v0 + 112);
    swift_release();
    sub_10003B6F8(v11, &qword_10078E8F0);
    goto LABEL_9;
  }
  sub_10003B6F8(*(void *)(v0 + 112), &qword_10078E8F0);
  unint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v23;
  *unint64_t v23 = v0;
  v23[1] = sub_1003E3FD8;
  uint64_t v24 = *(void *)(v0 + 64);
  char v25 = *(unsigned char *)(v0 + 192);
  uint64_t v26 = *(void *)(v0 + 56);
  return sub_1003E5568(v26, v24, v25);
}

uint64_t sub_1003E3FD8(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  uint64_t v4 = *(void *)(v2 + 152);
  return _swift_task_switch(sub_1003E4100, v4, v3);
}

uint64_t sub_1003E4100()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void *)(v0 + 184);
  swift_release();
  if (v1)
  {
    uint64_t v2 = (char *)*(id *)(v0 + 184);
    uint64_t result = IndexPath.init(item:section:)();
    uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView];
    if (!v4)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v8 = UICollectionElementKindSectionHeader;
    id v9 = v4;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v11 = [v9 supplementaryViewForElementKind:v8 atIndexPath:isa];

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    if (v11)
    {
      type metadata accessor for TTRIBoardEditableColumnHeader();
      uint64_t v12 = swift_dynamicCastClass();

      if (!v12) {
      goto LABEL_11;
      }
    }
  }
  else
  {
    os_log_type_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v16 = _typeName(_:qualified:)();
      *(void *)(v0 + 32) = sub_1000385A8(v16, v17, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s: unable to find column cell", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  uint64_t v12 = 0;
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v18(v12);
}

uint64_t sub_1003E439C(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 104) = a2;
  *(void *)(v4 + 112) = v3;
  *(unsigned char *)(v4 + 296) = a3;
  *(void *)(v4 + 96) = a1;
  *(void *)(v4 + 120) = swift_getObjectType();
  sub_10003B754(&qword_10078E8F0);
  *(void *)(v4 + 128) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for IndexPath();
  *(void *)(v4 + 136) = v5;
  *(void *)(v4 + 144) = *(void *)(v5 - 8);
  *(void *)(v4 + 152) = swift_task_alloc();
  sub_10003B754((uint64_t *)&unk_10078E360);
  *(void *)(v4 + 160) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  *(void *)(v4 + 168) = v6;
  *(void *)(v4 + 176) = *(void *)(v6 - 8);
  *(void *)(v4 + 184) = swift_task_alloc();
  *(void *)(v4 + 192) = swift_task_alloc();
  *(void *)(v4 + 200) = type metadata accessor for MainActor();
  *(void *)(v4 + 208) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 216) = v8;
  *(void *)(v4 + 224) = v7;
  return _swift_task_switch(sub_1003E4574, v8, v7);
}

uint64_t sub_1003E4574()
{
  uint64_t v36 = v0;
  if (qword_100785550 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 232) = sub_100018BF8(v1, (uint64_t)qword_10079DA18);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v5 = _typeName(_:qualified:)();
    *(void *)(v0 + 80) = sub_1000385A8(v5, v6, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    *(void *)(v0 + 88) = sub_1000385A8(0xD000000000000032, 0x80000001006B9370, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 176);
  uint64_t v9 = *(void *)(v0 + 160);
  TTRRemindersBoardMainDiffableDataSource.columnID(containingItemID:)();
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7);
  uint64_t v11 = *(void *)(v0 + 160);
  if (v10 == 1)
  {
    swift_release();
    uint64_t v12 = (uint64_t *)&unk_10078E360;
LABEL_9:
    sub_10003B6F8(v11, v12);
    sub_1000FF3FC(*(void *)(v0 + 96), *(void *)(v0 + 184));
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 184);
    if (v18)
    {
      uint64_t v20 = swift_slowAlloc();
      v35[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v21 = _typeName(_:qualified:)();
      *(void *)(v0 + 48) = sub_1000385A8(v21, v22, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v23 = TTRRemindersListViewModel.ItemID.description.getter();
      *(void *)(v0 + 56) = sub_1000385A8(v23, v24, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000FF460(v19);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s: columnID/indexPath not found {itemID: %s}", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000FF460(*(void *)(v0 + 184));
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25(0);
  }
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 128);
  sub_1000FF4BC(*(void *)(v0 + 160), *(void *)(v0 + 192));
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) == 1)
  {
    uint64_t v11 = *(void *)(v0 + 128);
    sub_1000FF460(*(void *)(v0 + 192));
    swift_release();
    uint64_t v12 = &qword_10078E8F0;
    goto LABEL_9;
  }
  uint64_t v27 = *(void *)(v0 + 152);
  uint64_t v28 = *(void *)(v0 + 112);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 144) + 32))(v27, *(void *)(v0 + 128), *(void *)(v0 + 136));
  id v29 = [*(id *)(v28 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView) indexPathsForVisibleItems];
  uint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v31 = swift_task_alloc();
  *(void *)(v31 + 16) = v27;
  *(unsigned char *)(v0 + 297) = sub_1003E236C((uint64_t (*)(char *))sub_1003E7C14, v31, v30);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v32;
  *uint64_t v32 = v0;
  v32[1] = sub_1003E4B08;
  uint64_t v33 = *(void *)(v0 + 192);
  char v34 = *(unsigned char *)(v0 + 296);
  return sub_1003E5568(v33, 0, v34);
}

uint64_t sub_1003E4B08(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 224);
  uint64_t v4 = *(void *)(v2 + 216);
  return _swift_task_switch(sub_1003E4C30, v4, v3);
}

void sub_1003E4C30()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(char **)(v0 + 248);
  if (v1)
  {
    uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollingController];
    *(void *)(v0 + 256) = v2;
    if (v2)
    {
      int v3 = *(unsigned __int8 *)(v0 + 297);
      int v4 = *(unsigned __int8 *)(v0 + 296);
      uint64_t v5 = v1;
      v2;
      *(void *)(v0 + 264) = static MainActor.shared.getter();
      if (v3 != 1 || v4 == 0)
      {
        uint64_t v7 = (void *)swift_task_alloc();
        *(void *)(v0 + 280) = v7;
        void *v7 = v0;
        v7[1] = sub_1003E5144;
        uint64_t v9 = *(void *)(v0 + 96);
        uint64_t v8 = *(void *)(v0 + 104);
        sub_100628E0C(v9, v8);
      }
      else
      {
        uint64_t v21 = (void *)swift_task_alloc();
        *(void *)(v0 + 272) = v21;
        *uint64_t v21 = v0;
        v21[1] = sub_1003E4F94;
        uint64_t v23 = *(void *)(v0 + 96);
        uint64_t v22 = *(void *)(v0 + 104);
        sub_100627E90(v23, v22);
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_release();
    int v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 192);
    uint64_t v14 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v16 = *(void *)(v0 + 136);
    if (v12)
    {
      uint64_t v25 = *(void *)(v0 + 192);
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v17 = 136315138;
      uint64_t v18 = _typeName(_:qualified:)();
      *(void *)(v0 + 64) = sub_1000385A8(v18, v19, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s: unable to find column cell", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
      uint64_t v20 = v25;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
      uint64_t v20 = v13;
    }
    sub_1000FF460(v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v24 = *(void (**)(void))(v0 + 8);
    v24(0);
  }
}

uint64_t sub_1003E4F94(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003E50D4, v4, v3);
}

uint64_t sub_1003E50D4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[32];
  swift_release();

  v0[36] = v1;
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[28];
  return _swift_task_switch(sub_1003E52F4, v3, v4);
}

uint64_t sub_1003E5144(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 32) = v1;
  *(void *)(v2 + 40) = a1;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003E5284, v4, v3);
}

uint64_t sub_1003E5284()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[32];
  swift_release();

  v0[36] = v1;
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[28];
  return _swift_task_switch(sub_1003E52F4, v3, v4);
}

uint64_t sub_1003E52F4()
{
  unint64_t v24 = v0;
  uint64_t v1 = v0[36];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[31];
    uint64_t v3 = v0[24];
    uint64_t v5 = v0[18];
    uint64_t v4 = v0[19];
    uint64_t v6 = v0[17];

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_1000FF460(v3);
    uint64_t v7 = v0[36];
  }
  else
  {
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    os_log_type_t v11 = (void *)v0[31];
    uint64_t v12 = v0[24];
    uint64_t v14 = v0[18];
    uint64_t v13 = v0[19];
    uint64_t v15 = v0[17];
    if (v10)
    {
      uint64_t v22 = v0[24];
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v17 = _typeName(_:qualified:)();
      v0[9] = sub_1000385A8(v17, v18, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: unable to find reminder cell", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
      uint64_t v19 = v22;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
      uint64_t v19 = v12;
    }
    sub_1000FF460(v19);
    uint64_t v7 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v7);
}

uint64_t sub_1003E5568(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 64) = a2;
  *(void *)(v4 + 72) = v3;
  *(unsigned char *)(v4 + 216) = a3;
  *(void *)(v4 + 56) = a1;
  *(void *)(v4 + 80) = swift_getObjectType();
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  *(void *)(v4 + 88) = swift_task_alloc();
  uint64_t v5 = sub_10003B754(&qword_10079DA80);
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = *(void *)(v5 - 8);
  *(void *)(v4 + 112) = swift_task_alloc();
  sub_10003B754(&qword_10078E8F0);
  *(void *)(v4 + 120) = swift_task_alloc();
  *(void *)(v4 + 128) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for IndexPath();
  *(void *)(v4 + 136) = v6;
  *(void *)(v4 + 144) = *(void *)(v6 - 8);
  *(void *)(v4 + 152) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 160) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 168) = v8;
  *(void *)(v4 + 176) = v7;
  return _swift_task_switch(sub_1003E573C, v8, v7);
}

uint64_t sub_1003E573C()
{
  uint64_t v63 = v0;
  if (qword_100785550 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 184) = sub_100018BF8(v1, (uint64_t)qword_10079DA18);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v5 = _typeName(_:qualified:)();
    *(void *)(v0 + 40) = sub_1000385A8(v5, v6, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    *(void *)(v0 + 48) = sub_1000385A8(0xD000000000000030, 0x80000001006B9330, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 128);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    uint64_t v10 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 56);
    swift_release();
    sub_10003B6F8(v10, &qword_10078E8F0);
    sub_1000FF3FC(v12, v11);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = *(void *)(v0 + 88);
    if (v15)
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v18 = _typeName(_:qualified:)();
      *(void *)(v0 + 16) = sub_1000385A8(v18, v19, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v20 = TTRRemindersListViewModel.ItemID.description.getter();
      *(void *)(v0 + 24) = sub_1000385A8(v20, v21, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000FF460(v16);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s: indexPath not found {columnID: %s}", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000FF460(*(void *)(v0 + 88));
    }

    uint64_t v44 = 0;
    goto LABEL_27;
  }
  uint64_t v22 = *(void *)(v0 + 72);
  (*(void (**)(void, void, void))(*(void *)(v0 + 144) + 32))(*(void *)(v0 + 152), *(void *)(v0 + 128), *(void *)(v0 + 136));
  uint64_t v23 = *(void **)(v22 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView);
  *(void *)(v0 + 192) = v23;
  unint64_t v24 = (void *)UICollectionView.visibleCellForItem(at:)();
  if (v24)
  {
    uint64_t v25 = v24;
    id v26 = v24;
    [v23 bounds];
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    CGFloat v32 = v31;
    CGFloat v34 = v33;
    [v26 bounds];
    [v23 convertRect:v26 fromCoordinateSpace:];
    CGFloat v36 = v35;
    CGFloat v38 = v37;
    v65.origin.CGFloat x = v28;
    v65.origin.CGFloat y = v30;
    v65.size.CGFloat width = v32;
    v65.size.CGFloat height = v34;
    CGFloat MinY = CGRectGetMinY(v65);
    v66.origin.CGFloat x = v28;
    v66.origin.CGFloat y = v30;
    v66.size.CGFloat width = v32;
    v66.size.CGFloat height = v34;
    v68.size.CGFloat height = CGRectGetHeight(v66);
    v67.origin.CGFloat x = v28;
    v67.origin.CGFloat y = v30;
    v67.size.CGFloat width = v32;
    v67.size.CGFloat height = v34;
    v68.origin.CGFloat x = v36;
    v68.origin.CGFloat y = MinY;
    v68.size.CGFloat width = v38;
    if (!CGRectContainsRect(v67, v68))
    {
      uint64_t v40 = *(unsigned __int8 *)(v0 + 216);
      uint64_t v41 = *(void *)(v0 + 64);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v23 scrollToItemAtIndexPath:isa atScrollPosition:v41 animated:v40];
    }
    swift_release();
    goto LABEL_12;
  }
  uint64_t v45 = *(unsigned __int8 *)(v0 + 216);
  uint64_t v46 = *(void *)(v0 + 64);
  Class v47 = IndexPath._bridgeToObjectiveC()().super.isa;
  [v23 scrollToItemAtIndexPath:v47 atScrollPosition:v46 animated:v45];

  if ((v45 & 1) == 0)
  {
    swift_release();
    [v23 layoutIfNeeded];
    uint64_t v57 = *(void **)(v0 + 192);
    Class v58 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v59 = [v57 cellForItemAtIndexPath:v58];

    if (!v59) {
      goto LABEL_25;
    }
    uint64_t v25 = v59;
LABEL_12:
    type metadata accessor for TTRIBoardColumnCollectionViewCell();
    uint64_t v43 = swift_dynamicCastClass();
    if (v43)
    {
      uint64_t v44 = v43;
LABEL_26:
      (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));
LABEL_27:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v60 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v60(v44);
    }
    id v53 = v25;
    unint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "TTRIRemindersBoardScrollingController: unexpected cell type", v56, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_25:
    uint64_t v44 = 0;
    goto LABEL_26;
  }
  uint64_t v48 = *(void *)(v0 + 152);
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 72)
                                   + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_willDisplayCell);
  sub_10003B754(&qword_10079DA88);
  sub_100037EA0(&qword_10079DA90, &qword_10079DA88);
  Publisher<>.rem_bufferedValues.getter();
  uint64_t v49 = swift_task_alloc();
  *(void *)(v0 + 200) = v49;
  *(void *)(v49 + 16) = v48;
  int v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10079DAA8 + dword_10079DAA8);
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v50;
  *uint64_t v50 = v0;
  v50[1] = sub_1003E5F24;
  uint64_t v51 = *(void *)(v0 + 120);
  return v61(v51, (uint64_t)&unk_10079DAA0, v49);
}

uint64_t sub_1003E5F24()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 120);
  uint64_t v3 = *(void *)(*v0 + 112);
  uint64_t v4 = *(void *)(*v0 + 104);
  uint64_t v5 = *(void *)(*v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_10003B6F8(v2, &qword_10078E8F0);
  uint64_t v6 = *(void *)(v1 + 176);
  uint64_t v7 = *(void *)(v1 + 168);
  return _swift_task_switch(sub_1003E60F0, v7, v6);
}

uint64_t sub_1003E60F0()
{
  swift_release();
  uint64_t v1 = (void *)v0[24];
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v3 = [v1 cellForItemAtIndexPath:isa];

  if (v3)
  {
    type metadata accessor for TTRIBoardColumnCollectionViewCell();
    uint64_t v4 = swift_dynamicCastClass();
    if (v4)
    {
      uint64_t v5 = v4;
      goto LABEL_8;
    }
    id v6 = v3;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIRemindersBoardScrollingController: unexpected cell type", v9, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
  }
  uint64_t v5 = 0;
LABEL_8:
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v5);
}

uint64_t sub_1003E629C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003E6334, v4, v3);
}

uint64_t sub_1003E6334()
{
  swift_release();
  char v1 = static IndexPath.== infix(_:_:)();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = v1 & 1;
  return v2(v3);
}

uint64_t sub_1003E63AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  sub_10003B754(&qword_10078E8F0);
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_10003B754(&qword_10079DA80);
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v7 = sub_10003B754(&qword_10079DAB0);
  v4[13] = v7;
  v4[14] = *(void *)(v7 - 8);
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_1003E6560, 0, 0);
}

uint64_t sub_1003E6560()
{
  (*(void (**)(void, void, void))(v0[11] + 16))(v0[12], v0[5], v0[10]);
  sub_100037EA0(&qword_10079DAB8, &qword_10079DA80);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100037EA0(&qword_10079DAC0, &qword_10079DAB0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1003E669C;
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[9];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v3, v1);
}

uint64_t sub_1003E669C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[14] + 8))(v2[15], v2[13]);
    uint64_t v3 = sub_1003E69A4;
  }
  else
  {
    uint64_t v3 = sub_1003E67C8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003E67C8()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[7] + 56))(v0[2], 1, 1, v0[6]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[8];
    uint64_t v7 = (int *)v0[3];
    os_log_type_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v0[18] = v8;
    v0[19] = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v8(v6, v1, v2);
    uint64_t v11 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[20] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1003E6A30;
    uint64_t v10 = v0[8];
    return v11(v10);
  }
}

uint64_t sub_1003E69A4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E6A30(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(void *)(v4 + 112);
    uint64_t v5 = *(void *)(v4 + 120);
    uint64_t v7 = *(void *)(v4 + 104);
    (*(void (**)(void, void))(*(void *)(v4 + 56) + 8))(*(void *)(v4 + 64), *(void *)(v4 + 48));
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    os_log_type_t v8 = sub_1003E6D54;
  }
  else
  {
    *(unsigned char *)(v4 + 176) = a1 & 1;
    os_log_type_t v8 = sub_1003E6B90;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_1003E6B90()
{
  if (*(unsigned char *)(v0 + 176) == 1)
  {
    uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 16);
    (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));
    v1(v4, v2, v3);
    (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 56) + 56))(*(void *)(v0 + 16), 0, 1, *(void *)(v0 + 48));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    uint64_t v7 = sub_100037EA0(&qword_10079DAC0, &qword_10079DAB0);
    os_log_type_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v8;
    *os_log_type_t v8 = v0;
    v8[1] = sub_1003E669C;
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 72);
    return dispatch thunk of AsyncIteratorProtocol.next()(v10, v9, v7);
  }
}

uint64_t sub_1003E6D54()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1003E6DE0(unsigned int a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v48 = a3;
  unsigned int v46 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  os_log_type_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v45 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v43 - v16;
  __chkstk_darwin(v18);
  Class v47 = (char *)&v43 - v19;
  if (qword_100785550 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100018BF8(v20, (uint64_t)qword_10079DA18);
  unint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v49 = v8;
  uint64_t v50 = v11;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v51 = a2;
    v54[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v43 = v12;
    uint64_t v44 = v13;
    uint64_t v26 = _typeName(_:qualified:)();
    uint64_t v53 = sub_1000385A8(v26, v27, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v53 = sub_1000385A8(0xD00000000000002ALL, 0x80000001006B9420, v54);
    uint64_t v12 = v43;
    uint64_t v13 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    a2 = v51;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000145EC(a2, (uint64_t)v54);
  sub_10003B754(&qword_10079DAF0);
  type metadata accessor for TTRIBoardEditableColumnHeader();
  if (swift_dynamicCast())
  {
    CGFloat v28 = (void *)v53;
    type metadata accessor for TTRIBoardColumnCollectionViewCell();
    UIView.ancestorView<A>(ofType:)();
    double v29 = (void *)v54[0];
    if (v54[0])
    {
      uint64_t v51 = a2;
      id v30 = [*(id *)(v4 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView) indexPathForCell:v54[0]];
      if (v30)
      {
        double v31 = v30;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        CGFloat v32 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        uint64_t v33 = (uint64_t)v50;
        v32(v50, v17, v12);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v33, 0, 1, v12);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v33, 1, v12) != 1)
        {
          uint64_t v34 = (uint64_t)v47;
          v32(v47, (char *)v33, v12);
          sub_1003E7458(v29, v34, v4, v48 & 1);

          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v34, v12);
          return;
        }
      }
      else
      {
        uint64_t v33 = (uint64_t)v50;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v50, 1, 1, v12);
      }

      sub_10003B6F8(v33, &qword_10078E8F0);
      a2 = v51;
    }
    else
    {
    }
  }
  sub_1000145EC(a2, (uint64_t)v54);
  type metadata accessor for TTRIBoardReminderCell();
  if (swift_dynamicCast())
  {
    double v35 = (void *)v53;
    type metadata accessor for TTRIBoardColumnCollectionViewCell();
    UIView.ancestorView<A>(ofType:)();
    CGFloat v36 = (void *)v54[0];
    if (v54[0])
    {
      id v37 = [*(id *)(v4 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView) indexPathForCell:v54[0]];
      if (v37)
      {
        CGFloat v38 = v37;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        uint64_t v40 = (uint64_t)v49;
        v39(v49, v17, v12);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v40, 0, 1, v12);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v40, 1, v12) != 1)
        {
          uint64_t v41 = (uint64_t)v45;
          v39(v45, (char *)v40, v12);
          char v42 = v48 & 1;
          sub_1003E7458(v36, v41, v4, v48 & 1);
          sub_1003E7734(v35, (uint64_t)v36, v46, v42);

          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v41, v12);
          return;
        }
      }
      else
      {
        uint64_t v40 = (uint64_t)v49;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v49, 1, 1, v12);
      }

      sub_10003B6F8(v40, &qword_10078E8F0);
    }
    else
    {
    }
  }
}

void sub_1003E7458(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (qword_100785550 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100018BF8(v7, (uint64_t)qword_10079DA18);
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    char v10 = a4;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v12 = _typeName(_:qualified:)();
    sub_1000385A8(v12, v13, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    sub_1000385A8(0xD000000000000018, 0x80000001006B9480, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v10;
    swift_slowDealloc();
  }

  uint64_t v14 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView);
  [v14 bounds];
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  [a1 bounds];
  [v14 convertRect:a1 fromCoordinateSpace:];
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  v30.origin.CGFloat x = v16;
  v30.origin.CGFloat y = v18;
  v30.size.CGFloat width = v20;
  v30.size.CGFloat height = v22;
  CGFloat MinY = CGRectGetMinY(v30);
  v31.origin.CGFloat x = v16;
  v31.origin.CGFloat y = v18;
  v31.size.CGFloat width = v20;
  v31.size.CGFloat height = v22;
  v33.size.CGFloat height = CGRectGetHeight(v31);
  v32.origin.CGFloat x = v16;
  v32.origin.CGFloat y = v18;
  v32.size.CGFloat width = v20;
  v32.size.CGFloat height = v22;
  v33.origin.CGFloat x = v24;
  v33.origin.CGFloat y = MinY;
  v33.size.CGFloat width = v26;
  if (!CGRectContainsRect(v32, v33))
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v14 scrollToItemAtIndexPath:isa atScrollPosition:0 animated:a4 & 1];
  }
}

void sub_1003E7734(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (qword_100785550 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100018BF8(v8, (uint64_t)qword_10079DA18);
  os_log_type_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v12 = _typeName(_:qualified:)();
    sub_1000385A8(v12, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    sub_1000385A8(0xD000000000000020, 0x80000001006B9450, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v14 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollingController);
  if (v14)
  {
    id v15 = v14;
    sub_100627C50(a3, a1, a4 & 1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardScrollingController()
{
  return self;
}

uint64_t sub_1003E7A1C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1003E7AB8;
  return sub_1003E629C(a1, v4);
}

uint64_t sub_1003E7AB8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1003E7BB4()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_1003E7C14()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_1003E7C74()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.ItemID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = (id *)(v0 + v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_8:

      break;
    case 1:

      uint64_t v5 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_8;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_7:
            uint64_t v8 = type metadata accessor for Date();
            (*(void (**)(id *, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
            break;
          default:
            goto LABEL_9;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_8;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_7;
        default:
          goto LABEL_9;
      }
  }
LABEL_9:
  unint64_t v9 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();

  return _swift_deallocObject(v0, ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1003E7EDC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRRemindersListViewModel.ItemID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = *(void *)(v1 + v6);
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = *(void *)(v1 + v7 + 8);
  uint64_t v14 = *(void *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));
  id v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *id v15 = v2;
  v15[1] = sub_10000C2D4;
  return sub_1003E2E94(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1003E8030(uint64_t a1)
{
  char v2 = a1;
  uint64_t v3 = *(void *)((swift_isaMask & *v1) + 0x50);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  unint64_t v7 = (char *)v16 - v6;
  if (sub_100550104())
  {
    uint64_t result = (uint64_t)sub_1005500F8();
    if (result) {
      return result;
    }
  }
  else
  {
    uint64_t result = (uint64_t)sub_1005500EC();
    if (result) {
      return result;
    }
  }
  sub_100550028();
  uint64_t v10 = v9;
  if (Array.endIndex.getter())
  {
    v16[0] = v5;
    uint64_t v11 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t))((swift_isaMask & *v1) + 0x2F0);
    v16[1] = (swift_isaMask & *v1) + 752;
    uint64_t v17 = v12;
    uint64_t v13 = v2 & 1;
    while (1)
    {
      Swift::Bool IsNativeType = Array._hoistableIsNativeTypeChecked()();
      Array._checkSubscript(_:wasNativeTypeChecked:)();
      if (IsNativeType)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v7, v10+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v11, v3);
        uint64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t result = _ArrayBuffer._getElementSlowPath(_:)();
        if (v16[0] != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v18 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 16))(v7, &v18, v3);
        swift_unknownObjectRelease();
        uint64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_14:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      v17(v7, v13);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      ++v11;
      if (v15 == Array.endIndex.getter()) {
        return swift_bridgeObjectRelease();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003E82B4(uint64_t a1)
{
  return sub_1003E8030(a1);
}

uint64_t sub_1003E82D8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079DAF8);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079DAF8);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_1003E83A0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  v3[4] = a1;
  v3[5] = 0;
  uint64_t v6 = _swiftEmptyArrayStorage;
  v3[6] = 0;
  v3[7] = _swiftEmptyArrayStorage;
  id v7 = a1;
  id v8 = [v7 shareeContext];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 sharees];

    sub_1000368FC(0, &qword_10078A128);
    uint64_t v6 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  v3[7] = v6;
  swift_bridgeObjectRelease();
  uint64_t v11 = NSUndoManager.observeChanges<A>(target:handler:)();

  v3[5] = v11;
  swift_release();
  return v3;
}

uint64_t sub_1003E84E0()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1003B5920();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003E8530()
{
  if (*(void *)(v0 + 40))
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A46F0);
    swift_retain();
    static NSUndoManager.removeObserver(with:)();
    swift_release();
    sub_1000499D4(v0 + 16);

    swift_release();
    swift_bridgeObjectRelease();
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TTRListSharingInteractor()
{
  return self;
}

void sub_1003E85FC(unint64_t a1)
{
  uint64_t v3 = v1;
  unint64_t v4 = a1;
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_60;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_61:
    if (qword_100785558 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    sub_100018BF8(v46, (uint64_t)qword_10079DAF8);
    swift_retain();
    Class v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 138412290;
      uint64_t v51 = [*(id *)(v3 + 32) objectID];
      uint64_t v63 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v50 = v51;
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Requested to add sharees but no sharees are provided {list.objectID: %@}", v49, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    return;
  }
LABEL_3:
  if (!sub_1003E9084()) {
    goto LABEL_61;
  }
  unint64_t v59 = v5;
  unint64_t v6 = *(void *)(v3 + 56);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain_n();
    int64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    int64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  uint64_t v60 = v3;
  unint64_t v61 = v4;
  id v8 = (char *)_swiftEmptyArrayStorage;
  if (v7)
  {
    if (v7 < 1)
    {
      __break(1u);
      goto LABEL_77;
    }
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v6 + 8 * i + 32);
      }
      uint64_t v3 = (uint64_t)v10;
      id v11 = [v10 address];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v8 = sub_100022F98(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v5 = *((void *)v8 + 2);
        unint64_t v16 = *((void *)v8 + 3);
        uint64_t v3 = v5 + 1;
        if (v5 >= v16 >> 1) {
          id v8 = sub_100022F98((char *)(v16 > 1), v5 + 1, 1, v8);
        }
        *((void *)v8 + 2) = v3;
        uint64_t v17 = &v8[16 * v5];
        *((void *)v17 + 4) = v13;
        *((void *)v17 + 5) = v15;
      }
      else
      {
      }
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v18 = sub_1004E5F44((uint64_t)v8);
  swift_bridgeObjectRelease();
  uint64_t v65 = v18;
  uint64_t v2 = v60;
  id v19 = [*(id *)(v60 + 32) sharedOwnerAddress];
  if (v19)
  {
    CGFloat v20 = v19;
    Swift::Int v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::Int v23 = v22;

    sub_1005A4348((Swift::Int *)&v63, v21, v23);
    swift_bridgeObjectRelease();
  }
  uint64_t v63 = _swiftEmptyArrayStorage;
  if (!v59)
  {
    uint64_t v24 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v24) {
      goto LABEL_37;
    }
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  if (v24)
  {
LABEL_24:
    unint64_t v25 = 0;
    v4 &= 0xC000000000000001;
    uint64_t v2 = v65;
    while (1)
    {
      if (v4)
      {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v25 >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          swift_bridgeObjectRetain();
          uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v45) {
            goto LABEL_61;
          }
          goto LABEL_3;
        }
        id v26 = *(id *)(v61 + 8 * v25 + 32);
      }
      unint64_t v27 = v26;
      unint64_t v5 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        goto LABEL_59;
      }
      id v28 = [v26 address];
      if (!v28) {
        goto LABEL_25;
      }
      uint64_t v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v3 = v31;

      swift_bridgeObjectRetain();
      LOBYTE(v29) = sub_1004578D8(v30, v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29)
      {
      }
      else
      {
LABEL_25:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      ++v25;
      if (v5 == v24)
      {
        int64_t v7 = (int64_t)v63;
        uint64_t v2 = v60;
        goto LABEL_38;
      }
    }
  }
LABEL_37:
  int64_t v7 = (int64_t)_swiftEmptyArrayStorage;
LABEL_38:
  swift_bridgeObjectRelease();
  LODWORD(v4) = v7 < 0 || (v7 & 0x4000000000000000) != 0;
  if ((v4 & 1) == 0)
  {
    if (*(void *)(v7 + 16)) {
      goto LABEL_43;
    }
LABEL_70:
    swift_release();
    if (qword_100785558 != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    sub_100018BF8(v53, (uint64_t)qword_10079DAF8);
    swift_retain();
    unint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 138412290;
      Class v58 = [*(id *)(v2 + 32) objectID];
      uint64_t v63 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v57 = v58;
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "All sharees requested to add are already existing {list.objectID: %@}", v56, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
LABEL_75:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v52) {
    goto LABEL_70;
  }
LABEL_43:
  if (qword_100785558 != -1) {
LABEL_77:
  }
    swift_once();
  uint64_t v32 = type metadata accessor for Logger();
  sub_100018BF8(v32, (uint64_t)qword_10079DAF8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  CGRect v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v33, v34))
  {

    swift_release_n();
    swift_release_n();
    goto LABEL_57;
  }
  uint64_t v35 = swift_slowAlloc();
  uint64_t v62 = (void *)swift_slowAlloc();
  uint64_t v63 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v35 = 134218498;
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
  }
  else
  {
    uint64_t v36 = *(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v64 = (void *)v36;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release();
  *(_WORD *)(v35 + 12) = 2112;
  id v37 = [*(id *)(v2 + 32) objectID];
  uint64_t v64 = v37;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  void *v62 = v37;
  swift_release_n();
  *(_WORD *)(v35 + 22) = 2080;
  if (!v36) {
    goto LABEL_56;
  }
  uint64_t v64 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v36 & 0x8000000000000000) == 0)
  {
    uint64_t v38 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v39 = *(id *)(v7 + 8 * v38 + 32);
      }
      uint64_t v40 = v39;
      ++v38;
      id v41 = [v39 objectID];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v36 != v38);
LABEL_56:
    sub_1000368FC(0, qword_10078E3D0);
    uint64_t v42 = Array.description.getter();
    unint64_t v44 = v43;
    swift_bridgeObjectRelease();
    uint64_t v64 = (void *)sub_1000385A8(v42, v44, (uint64_t *)&v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Going to add %ld new sharees to list {list.objectID: %@, newShareeIDs: %s}", (uint8_t *)v35, 0x20u);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v60;
LABEL_57:
    uint64_t v63 = *(void **)(v2 + 56);
    swift_bridgeObjectRetain();
    sub_100569FD0(v7);
    sub_1003E9160((unint64_t)v63);
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
  __break(1u);
}

BOOL sub_1003E9084()
{
  id v1 = sub_1003E9E54();
  id v2 = v1;
  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v1;
    id v4 = v1;

    id v5 = [*(id *)(v0 + 32) shareeContext];
    if (v5)
    {
      unint64_t v6 = v5;
      id v7 = [v5 sharees];

      sub_1000368FC(0, &qword_10078A128);
      id v8 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      id v8 = _swiftEmptyArrayStorage;
    }
    *(void *)(v0 + 56) = v8;

    swift_bridgeObjectRelease();
  }
  return v2 != 0;
}

void sub_1003E9160(unint64_t a1)
{
  id v3 = *(id *)(v1 + 32);
  id v4 = [v3 store];
  id v5 = [objc_allocWithZone((Class)REMSaveRequest) initWithStore:v4];

  id v6 = [v5 updateList:v3];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  [v6 setSharingStatus:v7 != 0];
  sub_1000368FC(0, &qword_10078A128);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v6 setSharees:isa];

  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  id v11 = (void *)swift_allocObject();
  long long v11[2] = v3;
  v11[3] = a1;
  v11[4] = v10;
  v14[4] = sub_1003EAA98;
  v14[5] = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100009ADC;
  void v14[3] = &unk_100749B98;
  uint64_t v12 = _Block_copy(v14);
  id v13 = v3;
  swift_bridgeObjectRetain();
  swift_release();
  [v5 saveWithQueue:v9 completion:v12];
  _Block_release(v12);
}

void sub_1003E93B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v8 = *(void *)(v3 + 56);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v27)
    {
LABEL_19:
      if (qword_100785558 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_100018BF8(v28, (uint64_t)qword_10079DAF8);
      id v29 = a1;
      swift_retain();
      id v19 = v29;
      CGFloat v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 138412546;
        id v31 = [*(id *)(v4 + 32) objectID];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v30 = v31;
        swift_release();
        *(_WORD *)(v22 + 12) = 2112;
        id v32 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v30[1] = v19;

        id v26 = "Requested to delete a sharee but the list is not shared to anyone {list.objectID: %@, shareeID: %@}";
        goto LABEL_23;
      }
      goto LABEL_24;
    }
  }
  else if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_19;
  }
  if (!sub_1003E9084()) {
    goto LABEL_19;
  }
  id v9 = a1;
  unint64_t v10 = swift_bridgeObjectRetain();
  unint64_t v11 = (unint64_t)sub_1003EA6D0(v10);
  swift_bridgeObjectRelease();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v13 = *(void *)(v4 + 56);
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12 != v33) {
      goto LABEL_10;
    }
  }
  else if (v12 != *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_10;
  }
  if (a3)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1003EA858(v11, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v11 = (unint64_t)v14;
  }
LABEL_10:
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v16 = *(void *)(v4 + 56);
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15 == v34)
    {
LABEL_14:
      swift_bridgeObjectRelease();
      if (qword_100785558 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_100018BF8(v17, (uint64_t)qword_10079DAF8);
      id v18 = v9;
      swift_retain();
      id v19 = v18;
      CGFloat v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        Swift::Int v23 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 138412546;
        id v24 = [*(id *)(v4 + 32) objectID];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *Swift::Int v23 = v24;
        swift_release();
        *(_WORD *)(v22 + 12) = 2112;
        id v25 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v23[1] = v19;

        id v26 = "The sharee requested to delete does not exist {list.objectID: %@, shareeID: %@}";
LABEL_23:
        _os_log_impl((void *)&_mh_execute_header, v20, v21, v26, (uint8_t *)v22, 0x16u);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }
LABEL_24:

      swift_release();
      return;
    }
  }
  else if (v15 == *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_14;
  }
  if (qword_100785558 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  sub_100018BF8(v35, (uint64_t)qword_10079DAF8);
  id v36 = v9;
  swift_retain();
  id v37 = v36;
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v38, v39))
  {
    os_log_type_t type = v39;
    uint64_t v40 = swift_slowAlloc();
    id v41 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 138412546;
    id v42 = [*(id *)(v4 + 32) objectID];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v41 = v42;
    swift_release();
    *(_WORD *)(v40 + 12) = 2112;
    id v43 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v41[1] = v37;

    _os_log_impl((void *)&_mh_execute_header, v38, type, "Going to delete sharee from list {list.objectID: %@, shareeID: %@}", (uint8_t *)v40, 0x16u);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  sub_1003E9160(v11);
  swift_bridgeObjectRelease();
}

void sub_1003E9ACC()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + 56);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_11;
    }
  }
  else if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_11;
  }
  if (sub_1003E9084())
  {
    if (qword_100785558 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_10079DAF8);
    swift_retain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)id v6 = 138412290;
      id v14 = [*(id *)(v1 + 32) objectID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v7 = v14;
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Going to remove stop sharing list, i.e. remove all sharees {list.objectID: %@}", v6, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    sub_1003E9160((unint64_t)_swiftEmptyArrayStorage);
    return;
  }
LABEL_11:
  if (qword_100785558 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100018BF8(v9, (uint64_t)qword_10079DAF8);
  swift_retain();
  unint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    unint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412290;
    id v15 = [*(id *)(v1 + 32) objectID];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v13 = v15;
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Requested to stop sharing the list but the list is not shared to anyone {list.objectID: %@}", v12, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
}

id sub_1003E9E54()
{
  uint64_t v1 = v0;
  id v2 = [*(id *)(v0 + 32) store];
  id v3 = [*(id *)(v0 + 32) objectID];
  id v17 = 0;
  id v4 = [v2 fetchListWithObjectID:v3 error:&v17];

  id v5 = v17;
  if (!v4)
  {
    id v6 = v5;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100785558 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_10079DAF8);
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    swift_retain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      os_log_type_t v11 = (void *)swift_slowAlloc();
      id v17 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315394;
      swift_getErrorValue();
      uint64_t v12 = Error.localizedDescription.getter();
      uint64_t v15 = sub_1000385A8(v12, v13, (uint64_t *)&v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v10 + 12) = 2112;
      id v16 = [*(id *)(v1 + 32) objectID:v15];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v11 = v16;
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRListSharingInteractor failed to fetch updated list {error: %s, list.objectID: %@}", (uint8_t *)v10, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      swift_release_n();
    }
    return 0;
  }
  return v4;
}

uint64_t sub_1003EA198(uint64_t a1, void *a2, unint64_t a3)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100785558 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100018BF8(v4, (uint64_t)qword_10079DAF8);
    id v5 = a2;
    swift_errorRetain();
    id v6 = v5;
    swift_errorRetain();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      v27[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      swift_getErrorValue();
      uint64_t v11 = Error.localizedDescription.getter();
      sub_1000385A8(v11, v12, (uint64_t *)v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v9 + 12) = 2112;
      id v26 = [v6 objectID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v10 = v26;

      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to update sharees for list {error: %s, list.objectID: %@}", (uint8_t *)v9, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100785558 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100018BF8(v14, (uint64_t)qword_10079DAF8);
    id v15 = a2;
    swift_bridgeObjectRetain_n();
    id v16 = v15;
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      CGFloat v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412546;
      v27[0] = [v16 objectID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *CGFloat v20 = v27[0];

      *(_WORD *)(v19 + 12) = 2048;
      if (a3 >> 62)
      {
        swift_bridgeObjectRetain();
        id v21 = (id)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v21 = *(id *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v27[0] = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Updated sharees to list {list.objectID: %@, sharees.count: %ld}", (uint8_t *)v19, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v23 = *(void *)(result + 56);
    swift_bridgeObjectRetain();
    if (sub_1003E9084())
    {
      unint64_t v24 = swift_bridgeObjectRetain();
      unsigned __int8 v25 = sub_1000BAB0C(v24, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0 || !swift_unknownObjectWeakLoadStrong())
      {
        return swift_release();
      }
      else
      {
        sub_1003B5920();
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *sub_1003EA6D0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        id v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        id v7 = [v4 objectID];
        sub_1000368FC(0, qword_10078E3D0);
        char v8 = static NSObject.== infix(_:_:)();

        if (v8)
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        ++v3;
        if (v6 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1003EA858(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_22;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    for (unint64_t j = 0; ; ++j)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_9;
      }
      if (j >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      id v7 = *(id *)(a1 + 8 * j + 32);
LABEL_9:
      char v8 = v7;
      unint64_t v9 = j + 1;
      if (__OFADD__(j, 1)) {
        goto LABEL_21;
      }
      id v10 = [v7 address];
      if (!v10) {
        goto LABEL_4;
      }
      uint64_t v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      if (v12 == a2 && v14 == a3)
      {

        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v16)
      {
      }
      else
      {
LABEL_4:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
LABEL_5:
      if (v9 == i) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    ;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1003EAA18()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003EAA50()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003EAA98(uint64_t a1)
{
  return sub_1003EA198(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003EAAA4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListTemporaryItemSet()
{
  return self;
}

uint64_t sub_1003EAB08()
{
  swift_beginAccess();
  *(void *)(v0 + 24) = &_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003EAB4C(uint64_t a1, char a2)
{
  id v4 = (int *)type metadata accessor for TTRRemindersListViewModel.ListInfo();
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v14 - v8;
  if (!a2) {
    return TTRRemindersListViewModel.ListInfo.completedRemindersState(completedRowHasShowHide:)();
  }
  if (a2 == 1)
  {
    int v10 = *(unsigned __int8 *)(a1 + v4[12]);
    sub_1003EACA4(a1, (uint64_t)&v14 - v8);
    if (v10 == 1)
    {
      char v11 = v9[v4[18]];
      sub_1002F7C20((uint64_t)v9);
      sub_1003EACA4(a1, (uint64_t)v6);
      if (v11)
      {
        int v12 = v6[v4[14]];
        sub_1002F7C20((uint64_t)v6);
        if (v12 != 1) {
          return 0;
        }
        return TTRRemindersListViewModel.ListInfo.completedRemindersState(completedRowHasShowHide:)();
      }
    }
    else
    {
      sub_1002F7C20((uint64_t)v9);
      sub_1003EACA4(a1, (uint64_t)v6);
    }
    sub_1002F7C20((uint64_t)v6);
  }
  else if (*(unsigned char *)(a1 + v4[12]))
  {
    return TTRRemindersListViewModel.ListInfo.completedRemindersState(completedRowHasShowHide:)();
  }
  return 0;
}

uint64_t sub_1003EACA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListPresentationTreeConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListPresentationTreeConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003EAE78);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListPresentationTreeConfiguration()
{
  return &type metadata for TTRRemindersListPresentationTreeConfiguration;
}

unsigned char *storeEnumTagSinglePayload for TTRRemindersListPresentationTreeConfiguration.CompletedRowVisibility(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003EAF7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListPresentationTreeConfiguration.CompletedRowVisibility()
{
  return &type metadata for TTRRemindersListPresentationTreeConfiguration.CompletedRowVisibility;
}

unint64_t sub_1003EAFB8()
{
  unint64_t result = qword_10079DC78;
  if (!qword_10079DC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079DC78);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRIRemindersListNavigationBarTemplatesItemVisibilityOverride(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003EB0D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarTemplatesItemVisibilityOverride()
{
  return &type metadata for TTRIRemindersListNavigationBarTemplatesItemVisibilityOverride;
}

unint64_t sub_1003EB114()
{
  unint64_t result = qword_10079DC80;
  if (!qword_10079DC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079DC80);
  }
  return result;
}

void *sub_1003EB168(uint64_t *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for TTRIRemindersListNavigationBarInteractor();
  swift_allocObject();
  uint64_t v10 = sub_1005DB1CC((uint64_t)a2, (uint64_t)a3);
  uint64_t v25 = type metadata accessor for TTRIRemindersListNavigationBarRouter();
  id v26 = &off_10074C030;
  v24[0] = swift_allocObject();
  type metadata accessor for TTRIRemindersListNavigationBarPresenter();
  char v11 = (void *)swift_allocObject();
  uint64_t v12 = sub_100038E88((uint64_t)v24, v25);
  __chkstk_darwin(v12);
  uint64_t v14 = (void *)((char *)&v24[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  char v16 = sub_1003EB448(v10, *v14, a4, a5, v11);
  id v17 = a2;
  sub_100057BB8(a3);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_100038CD8((uint64_t)v24);
  uint64_t v18 = type metadata accessor for TTRIRemindersListNavigationBarController();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = swift_retain();
  uint64_t v21 = sub_1003EB390(v20, v19);
  *(void *)(v10 + 24) = &off_1007366A0;
  swift_unknownObjectWeakAssign();
  void v16[3] = &off_100737F60;
  swift_unknownObjectWeakAssign();
  a1[3] = v18;
  swift_release();
  *a1 = v21;
  return v16;
}

uint64_t sub_1003EB390(uint64_t a1, uint64_t a2)
{
  id v4 = [self currentTraitCollection];
  id v5 = [v4 horizontalSizeClass];

  *(unsigned char *)(a2 + 16) = v5 == (id)1;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_OWORD *)(a2 + 152) = 0u;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_OWORD *)(a2 + 184) = 0u;
  *(_OWORD *)(a2 + 200) = 0u;
  *(_OWORD *)(a2 + 216) = 0u;
  *(_OWORD *)(a2 + 232) = 0u;
  *(void *)(a2 + 24) = a1;
  *(void *)(a2 + 32) = &off_1007366C0;
  return a2;
}

void *sub_1003EB448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[13] = type metadata accessor for TTRIRemindersListNavigationBarRouter();
  a5[14] = &off_10074C030;
  a5[10] = a2;
  a5[3] = 0;
  swift_unknownObjectWeakInit();
  a5[5] = 0;
  swift_unknownObjectWeakInit();
  a5[7] = 0;
  swift_unknownObjectWeakInit();
  a5[15] = 0;
  uint64_t v10 = (char *)a5 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetConfiguration;
  uint64_t v11 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (char *)a5
      + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource;
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  v12[16] = -4;
  *((unsigned char *)a5 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride) = 2;
  *((unsigned char *)a5 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) = 0;
  a5[8] = a1;
  a5[9] = &off_100751A60;
  a5[16] = a3;
  a5[17] = a4;
  return a5;
}

char *sub_1003EB568(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v118 = v8;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              Class v58 = *a2;
              *(void *)a1 = *a2;
              unint64_t v59 = v58;
              goto LABEL_35;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v57 = type metadata accessor for Date();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
LABEL_35:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
              break;
          }
          uint64_t v60 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v61 = v60[5];
          uint64_t v62 = &a1[v61];
          uint64_t v63 = (char *)a2 + v61;
          uint64_t v64 = *(uint64_t *)((char *)a2 + v61 + 8);
          if (!v64) {
            goto LABEL_39;
          }
          *(void *)uint64_t v62 = *(void *)v63;
          *((void *)v62 + 1) = v64;
          uint64_t v65 = (void *)*((void *)v63 + 2);
          uint64_t v66 = *((void *)v63 + 3);
          uint64_t v67 = *((void *)v63 + 4);
          uint64_t v68 = *((void *)v63 + 5);
          uint64_t v104 = *((void *)v63 + 6);
          uint64_t v114 = *((void *)v63 + 7);
          unsigned __int8 v109 = v63[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v65, v66, v67, v68, v104, v114, v109);
          *((void *)v62 + 2) = v65;
          *((void *)v62 + 3) = v66;
          *((void *)v62 + 4) = v67;
          *((void *)v62 + 5) = v68;
          *((void *)v62 + 6) = v104;
          *((void *)v62 + 7) = v114;
          v62[64] = v109;
          *(_DWORD *)(v62 + 65) = *(_DWORD *)(v63 + 65);
          int v69 = v63[120];
          if (v69 == 255)
          {
            long long v70 = *(_OWORD *)(v63 + 88);
            *(_OWORD *)(v62 + 72) = *(_OWORD *)(v63 + 72);
            *(_OWORD *)(v62 + 88) = v70;
            *(_OWORD *)(v62 + 104) = *(_OWORD *)(v63 + 104);
            v62[120] = v63[120];
          }
          else
          {
            char v115 = v69 & 1;
            uint64_t v74 = *((void *)v63 + 10);
            uint64_t v75 = *((void *)v63 + 11);
            uint64_t v76 = *((void *)v63 + 12);
            uint64_t v77 = *((void *)v63 + 13);
            uint64_t v105 = *((void *)v63 + 14);
            uint64_t v110 = (void *)*((void *)v63 + 9);
            sub_10003BED8(v110, v74, v75, v76, v77, v105, v69 & 1);
            *((void *)v62 + 9) = v110;
            *((void *)v62 + 10) = v74;
            *((void *)v62 + 11) = v75;
            *((void *)v62 + 12) = v76;
            *((void *)v62 + 13) = v77;
            *((void *)v62 + 14) = v105;
            v62[120] = v115;
          }
          uint64_t v8 = v118;
          v62[121] = v63[121];
          goto LABEL_42;
        case 1u:
          uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v119 = v8;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v82 = *a2;
              *(void *)a1 = *a2;
              unint64_t v83 = v82;
              goto LABEL_46;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v81 = type metadata accessor for Date();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
LABEL_46:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
              break;
          }
          uint64_t v60 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v84 = v60[5];
          uint64_t v62 = &a1[v84];
          uint64_t v63 = (char *)a2 + v84;
          uint64_t v85 = *(uint64_t *)((char *)a2 + v84 + 8);
          if (v85)
          {
            *(void *)uint64_t v62 = *(void *)v63;
            *((void *)v62 + 1) = v85;
            uint64_t v86 = (void *)*((void *)v63 + 2);
            uint64_t v87 = *((void *)v63 + 3);
            uint64_t v88 = *((void *)v63 + 4);
            uint64_t v89 = *((void *)v63 + 5);
            uint64_t v106 = *((void *)v63 + 6);
            uint64_t v116 = *((void *)v63 + 7);
            unsigned __int8 v111 = v63[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v86, v87, v88, v89, v106, v116, v111);
            *((void *)v62 + 2) = v86;
            *((void *)v62 + 3) = v87;
            *((void *)v62 + 4) = v88;
            *((void *)v62 + 5) = v89;
            *((void *)v62 + 6) = v106;
            *((void *)v62 + 7) = v116;
            v62[64] = v111;
            *(_DWORD *)(v62 + 65) = *(_DWORD *)(v63 + 65);
            int v90 = v63[120];
            if (v90 == 255)
            {
              long long v91 = *(_OWORD *)(v63 + 88);
              *(_OWORD *)(v62 + 72) = *(_OWORD *)(v63 + 72);
              *(_OWORD *)(v62 + 88) = v91;
              *(_OWORD *)(v62 + 104) = *(_OWORD *)(v63 + 104);
              v62[120] = v63[120];
            }
            else
            {
              char v117 = v90 & 1;
              uint64_t v92 = *((void *)v63 + 10);
              uint64_t v93 = *((void *)v63 + 11);
              uint64_t v94 = *((void *)v63 + 12);
              uint64_t v95 = *((void *)v63 + 13);
              uint64_t v107 = *((void *)v63 + 14);
              uint64_t v112 = (void *)*((void *)v63 + 9);
              sub_10003BED8(v112, v92, v93, v94, v95, v107, v90 & 1);
              *((void *)v62 + 9) = v112;
              *((void *)v62 + 10) = v92;
              *((void *)v62 + 11) = v93;
              *((void *)v62 + 12) = v94;
              *((void *)v62 + 13) = v95;
              *((void *)v62 + 14) = v107;
              v62[120] = v117;
            }
            uint64_t v8 = v119;
            v62[121] = v63[121];
          }
          else
          {
LABEL_39:
            long long v71 = *((_OWORD *)v63 + 5);
            *((_OWORD *)v62 + 4) = *((_OWORD *)v63 + 4);
            *((_OWORD *)v62 + 5) = v71;
            *((_OWORD *)v62 + 6) = *((_OWORD *)v63 + 6);
            *(_OWORD *)(v62 + 106) = *(_OWORD *)(v63 + 106);
            long long v72 = *((_OWORD *)v63 + 1);
            *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
            *((_OWORD *)v62 + 1) = v72;
            long long v73 = *((_OWORD *)v63 + 3);
            *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
            *((_OWORD *)v62 + 3) = v73;
          }
LABEL_42:
          a1[v60[6]] = *((unsigned char *)a2 + v60[6]);
          a1[v60[7]] = *((unsigned char *)a2 + v60[7]);
          a1[v60[8]] = *((unsigned char *)a2 + v60[8]);
          a1[v60[9]] = *((unsigned char *)a2 + v60[9]);
          a1[v60[10]] = *((unsigned char *)a2 + v60[10]);
          uint64_t v78 = v60[11];
          uint64_t v79 = *(char **)((char *)a2 + v78);
          *(void *)&a1[v78] = v79;
          id v80 = v79;
          goto LABEL_67;
        case 2u:
          uint64_t v12 = *a2;
          *(void *)a1 = *a2;
          uint64_t v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v14 = (void **)&a1[v13];
          uint64_t v15 = (void **)((char *)a2 + v13);
          uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v17 = *(void *)(v16 - 8);
          uint64_t v18 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48);
          uint64_t v19 = v12;
          if (v18(v15, 1, v16)) {
            goto LABEL_13;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v97 = *v15;
              *uint64_t v14 = *v15;
              id v98 = v97;
              goto LABEL_56;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v96 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v96 - 8) + 16))(v14, v15, v96);
LABEL_56:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v14, v15, *(void *)(v17 + 64));
              break;
          }
          goto LABEL_66;
        case 3u:
          uint64_t v20 = *a2;
          *(void *)a1 = *a2;
          uint64_t v21 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v14 = (void **)&a1[v21];
          uint64_t v15 = (void **)((char *)a2 + v21);
          uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v17 = *(void *)(v16 - 8);
          uint64_t v22 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48);
          uint64_t v23 = v20;
          if (v22(v15, 1, v16)) {
            goto LABEL_13;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v43 = *v15;
              *uint64_t v14 = *v15;
              id v44 = v43;
              goto LABEL_65;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v102 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v102 - 8) + 16))(v14, v15, v102);
LABEL_65:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v14, v15, *(void *)(v17 + 64));
              break;
          }
          goto LABEL_66;
        case 4u:
          unint64_t v24 = *a2;
          *(void *)a1 = *a2;
          uint64_t v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v14 = (void **)&a1[v25];
          uint64_t v15 = (void **)((char *)a2 + v25);
          uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v17 = *(void *)(v16 - 8);
          id v26 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48);
          uint64_t v27 = v24;
          if (v26(v15, 1, v16))
          {
LABEL_13:
            uint64_t v28 = sub_10003B754(&qword_10078C890);
            memcpy(v14, v15, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                unint64_t v100 = *v15;
                *uint64_t v14 = *v15;
                id v101 = v100;
                goto LABEL_62;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v99 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v99 - 8) + 16))(v14, v15, v99);
LABEL_62:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v14, v15, *(void *)(v17 + 64));
                break;
            }
LABEL_66:
            (*(void (**)(void **, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
          }
LABEL_67:
          swift_storeEnumTagMultiPayload();
LABEL_68:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
          break;
        case 5u:
          *(void *)a1 = *a2;
          a1[8] = *((unsigned char *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          id v29 = a2[2];
          *((void *)a1 + 2) = v29;
          uint64_t v30 = v29;
          goto LABEL_67;
        case 6u:
          uint64_t v38 = *a2;
          *(void *)a1 = *a2;
          os_log_type_t v39 = v38;
          goto LABEL_67;
        case 7u:
          uint64_t v31 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v32 = *(void *)(v31 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v32 + 48))(a2, 1, v31))
          {
            uint64_t v33 = sub_10003B754(&qword_10078C518);
            memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
            *(void *)a1 = *a2;
            uint64_t v45 = *(int *)(v31 + 20);
            uint64_t v108 = (char *)a2 + v45;
            uint64_t v113 = &a1[v45];
            uint64_t v46 = type metadata accessor for REMHashtagLabelSpecifier();
            uint64_t v47 = v8;
            os_log_type_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
            swift_bridgeObjectRetain();
            v48(v113, v108, v46);
            uint64_t v8 = v47;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(a1, 0, 1, v31);
          }
          uint64_t v49 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v50 = &a1[v49];
          uint64_t v51 = (char **)((char *)a2 + v49);
          uint64_t v52 = v51[1];
          if (v52)
          {
            *(void *)uint64_t v50 = *v51;
            *((void *)v50 + 1) = v52;
            uint64_t v53 = (void *)v51[2];
            *((void *)v50 + 2) = v53;
            swift_bridgeObjectRetain();
            id v54 = v53;
          }
          else
          {
            *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
            *((void *)v50 + 2) = v51[2];
          }
          goto LABEL_67;
        case 8u:
          uint64_t v40 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v41 = *(void *)(v40 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v41 + 48))(a2, 1, v40))
          {
            uint64_t v42 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(a1, a2, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            uint64_t v55 = type metadata accessor for Date();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
            a1[*(int *)(v40 + 20)] = *((unsigned char *)a2 + *(int *)(v40 + 20));
            (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(a1, 0, 1, v40);
          }
          uint64_t v56 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void *)&a1[*(int *)(v56 + 20)] = *(char **)((char *)a2 + *(int *)(v56 + 20));
          goto LABEL_67;
        case 9u:
          *a1 = *(unsigned char *)a2;
          uint64_t v34 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v35 = &a1[v34];
          id v36 = (char *)a2 + v34;
          uint64_t v37 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
          goto LABEL_67;
        default:
          memcpy(a1, a2, *(void *)(v8 + 64));
          goto LABEL_68;
      }
    }
  }
  return a1;
}

void sub_1003ECBD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_25;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_6;
          default:
            goto LABEL_26;
        }
        goto LABEL_26;
      case 1u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_25:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_6:
            uint64_t v3 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
            break;
          default:
            break;
        }
LABEL_26:
        uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v15 = a1 + *(int *)(v14 + 20);
        if (*(void *)(v15 + 8))
        {
          swift_bridgeObjectRelease();
          sub_1000510EC(*(void **)(v15 + 16), *(void *)(v15 + 24), *(void *)(v15 + 32), *(void *)(v15 + 40), *(void *)(v15 + 48), *(void *)(v15 + 56), *(unsigned char *)(v15 + 64));
          int v16 = *(unsigned __int8 *)(v15 + 120);
          if (v16 != 255) {
            sub_10003B9C0(*(void **)(v15 + 72), *(void *)(v15 + 80), *(void *)(v15 + 88), *(void *)(v15 + 96), *(void *)(v15 + 104), *(void *)(v15 + 112), v16 & 1);
          }
        }
        id v7 = *(id *)(a1 + *(int *)(v14 + 44));
        goto LABEL_30;
      case 2u:

        a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 3u:

        a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(a1, 1, v5))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 4u:

        a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 5u:
        goto LABEL_18;
      case 6u:
LABEL_13:
        id v7 = *(id *)a1;
        goto LABEL_30;
      case 7u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(a1, 1, v8))
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = a1 + *(int *)(v8 + 20);
          uint64_t v10 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
        }
        a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        if (!*(void *)(a1 + 8)) {
          return;
        }
        swift_bridgeObjectRelease();
LABEL_18:
        id v7 = *(id *)(a1 + 16);
LABEL_30:

        break;
      case 8u:
        uint64_t v11 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(a1, 1, v11)) {
          return;
        }
LABEL_20:
        uint64_t v12 = type metadata accessor for Date();
LABEL_22:
        uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
        v13(a1, v12);
        break;
      case 9u:
        a1 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v12 = type metadata accessor for AnyTip();
        goto LABEL_22;
      default:
        return;
    }
  }
}

void **sub_1003ED1BC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v116 = v7;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v56 = *a2;
            *a1 = *a2;
            id v57 = v56;
            goto LABEL_33;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v55 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
LABEL_33:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        Class v58 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v59 = v58[5];
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        uint64_t v62 = *(uint64_t *)((char *)a2 + v59 + 8);
        if (!v62) {
          goto LABEL_37;
        }
        *(void *)uint64_t v60 = *(void *)v61;
        *((void *)v60 + 1) = v62;
        uint64_t v63 = (void *)*((void *)v61 + 2);
        uint64_t v64 = *((void *)v61 + 3);
        uint64_t v65 = *((void *)v61 + 4);
        uint64_t v66 = *((void *)v61 + 5);
        uint64_t v102 = *((void *)v61 + 6);
        uint64_t v112 = *((void *)v61 + 7);
        unsigned __int8 v107 = v61[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v63, v64, v65, v66, v102, v112, v107);
        *((void *)v60 + 2) = v63;
        *((void *)v60 + 3) = v64;
        *((void *)v60 + 4) = v65;
        *((void *)v60 + 5) = v66;
        *((void *)v60 + 6) = v102;
        *((void *)v60 + 7) = v112;
        v60[64] = v107;
        *(_DWORD *)(v60 + 65) = *(_DWORD *)(v61 + 65);
        int v67 = v61[120];
        if (v67 == 255)
        {
          long long v68 = *(_OWORD *)(v61 + 88);
          *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
          *(_OWORD *)(v60 + 88) = v68;
          *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
          v60[120] = v61[120];
        }
        else
        {
          char v113 = v67 & 1;
          uint64_t v72 = *((void *)v61 + 10);
          uint64_t v73 = *((void *)v61 + 11);
          uint64_t v74 = *((void *)v61 + 12);
          uint64_t v75 = *((void *)v61 + 13);
          uint64_t v103 = *((void *)v61 + 14);
          uint64_t v108 = (void *)*((void *)v61 + 9);
          sub_10003BED8(v108, v72, v73, v74, v75, v103, v67 & 1);
          *((void *)v60 + 9) = v108;
          *((void *)v60 + 10) = v72;
          *((void *)v60 + 11) = v73;
          *((void *)v60 + 12) = v74;
          *((void *)v60 + 13) = v75;
          *((void *)v60 + 14) = v103;
          v60[120] = v113;
        }
        uint64_t v7 = v116;
        v60[121] = v61[121];
        goto LABEL_40;
      case 1u:
        uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v117 = v7;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v80 = *a2;
            *a1 = *a2;
            id v81 = v80;
            goto LABEL_44;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v79 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
LABEL_44:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
            break;
        }
        Class v58 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v82 = v58[5];
        uint64_t v60 = (char *)a1 + v82;
        uint64_t v61 = (char *)a2 + v82;
        uint64_t v83 = *(uint64_t *)((char *)a2 + v82 + 8);
        if (v83)
        {
          *(void *)uint64_t v60 = *(void *)v61;
          *((void *)v60 + 1) = v83;
          uint64_t v84 = (void *)*((void *)v61 + 2);
          uint64_t v85 = *((void *)v61 + 3);
          uint64_t v86 = *((void *)v61 + 4);
          uint64_t v87 = *((void *)v61 + 5);
          uint64_t v104 = *((void *)v61 + 6);
          uint64_t v114 = *((void *)v61 + 7);
          unsigned __int8 v109 = v61[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v84, v85, v86, v87, v104, v114, v109);
          *((void *)v60 + 2) = v84;
          *((void *)v60 + 3) = v85;
          *((void *)v60 + 4) = v86;
          *((void *)v60 + 5) = v87;
          *((void *)v60 + 6) = v104;
          *((void *)v60 + 7) = v114;
          v60[64] = v109;
          *(_DWORD *)(v60 + 65) = *(_DWORD *)(v61 + 65);
          int v88 = v61[120];
          if (v88 == 255)
          {
            long long v89 = *(_OWORD *)(v61 + 88);
            *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
            *(_OWORD *)(v60 + 88) = v89;
            *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
            v60[120] = v61[120];
          }
          else
          {
            char v115 = v88 & 1;
            uint64_t v90 = *((void *)v61 + 10);
            uint64_t v91 = *((void *)v61 + 11);
            uint64_t v92 = *((void *)v61 + 12);
            uint64_t v93 = *((void *)v61 + 13);
            uint64_t v105 = *((void *)v61 + 14);
            uint64_t v110 = (void *)*((void *)v61 + 9);
            sub_10003BED8(v110, v90, v91, v92, v93, v105, v88 & 1);
            *((void *)v60 + 9) = v110;
            *((void *)v60 + 10) = v90;
            *((void *)v60 + 11) = v91;
            *((void *)v60 + 12) = v92;
            *((void *)v60 + 13) = v93;
            *((void *)v60 + 14) = v105;
            v60[120] = v115;
          }
          uint64_t v7 = v117;
          v60[121] = v61[121];
        }
        else
        {
LABEL_37:
          long long v69 = *((_OWORD *)v61 + 5);
          *((_OWORD *)v60 + 4) = *((_OWORD *)v61 + 4);
          *((_OWORD *)v60 + 5) = v69;
          *((_OWORD *)v60 + 6) = *((_OWORD *)v61 + 6);
          *(_OWORD *)(v60 + 106) = *(_OWORD *)(v61 + 106);
          long long v70 = *((_OWORD *)v61 + 1);
          *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
          *((_OWORD *)v60 + 1) = v70;
          long long v71 = *((_OWORD *)v61 + 3);
          *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
          *((_OWORD *)v60 + 3) = v71;
        }
LABEL_40:
        *((unsigned char *)a1 + v58[6]) = *((unsigned char *)a2 + v58[6]);
        *((unsigned char *)a1 + v58[7]) = *((unsigned char *)a2 + v58[7]);
        *((unsigned char *)a1 + v58[8]) = *((unsigned char *)a2 + v58[8]);
        *((unsigned char *)a1 + v58[9]) = *((unsigned char *)a2 + v58[9]);
        *((unsigned char *)a1 + v58[10]) = *((unsigned char *)a2 + v58[10]);
        uint64_t v76 = v58[11];
        uint64_t v77 = *(void **)((char *)a2 + v76);
        *(void **)((char *)a1 + v76) = v77;
        id v78 = v77;
        goto LABEL_65;
      case 2u:
        uint64_t v10 = *a2;
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v12 = (void **)((char *)a1 + v11);
        uint64_t v13 = (void **)((char *)a2 + v11);
        uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v15 = *(void *)(v14 - 8);
        int v16 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v15 + 48);
        id v17 = v10;
        if (v16(v13, 1, v14)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v95 = *v13;
            *uint64_t v12 = *v13;
            id v96 = v95;
            goto LABEL_54;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v94 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v94 - 8) + 16))(v12, v13, v94);
LABEL_54:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v12, v13, *(void *)(v15 + 64));
            break;
        }
        goto LABEL_64;
      case 3u:
        uint64_t v18 = *a2;
        *a1 = *a2;
        uint64_t v19 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v12 = (void **)((char *)a1 + v19);
        uint64_t v13 = (void **)((char *)a2 + v19);
        uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v15 = *(void *)(v14 - 8);
        uint64_t v20 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v15 + 48);
        id v21 = v18;
        if (v20(v13, 1, v14)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v41 = *v13;
            *uint64_t v12 = *v13;
            id v42 = v41;
            goto LABEL_63;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v100 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v100 - 8) + 16))(v12, v13, v100);
LABEL_63:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v12, v13, *(void *)(v15 + 64));
            break;
        }
        goto LABEL_64;
      case 4u:
        uint64_t v22 = *a2;
        *a1 = *a2;
        uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v12 = (void **)((char *)a1 + v23);
        uint64_t v13 = (void **)((char *)a2 + v23);
        uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v15 = *(void *)(v14 - 8);
        unint64_t v24 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v15 + 48);
        id v25 = v22;
        if (v24(v13, 1, v14))
        {
LABEL_11:
          uint64_t v26 = sub_10003B754(&qword_10078C890);
          memcpy(v12, v13, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v98 = *v13;
              *uint64_t v12 = *v13;
              id v99 = v98;
              goto LABEL_60;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v97 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v97 - 8) + 16))(v12, v13, v97);
LABEL_60:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v12, v13, *(void *)(v15 + 64));
              break;
          }
LABEL_64:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
LABEL_65:
        swift_storeEnumTagMultiPayload();
LABEL_66:
        (*(void (**)(void **, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        break;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        uint64_t v27 = a2[2];
        a1[2] = v27;
        id v28 = v27;
        goto LABEL_65;
      case 6u:
        id v36 = *a2;
        *a1 = *a2;
        id v37 = v36;
        goto LABEL_65;
      case 7u:
        uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v30 + 48))(a2, 1, v29))
        {
          uint64_t v31 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v43 = *(int *)(v29 + 20);
          uint64_t v106 = (char *)a2 + v43;
          unsigned __int8 v111 = (char *)a1 + v43;
          uint64_t v44 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v45 = v7;
          uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
          swift_bridgeObjectRetain();
          v46(v111, v106, v44);
          uint64_t v7 = v45;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v29);
        }
        uint64_t v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        os_log_type_t v48 = (void **)((char *)a1 + v47);
        uint64_t v49 = (void **)((char *)a2 + v47);
        uint64_t v50 = v49[1];
        if (v50)
        {
          *os_log_type_t v48 = *v49;
          v48[1] = v50;
          uint64_t v51 = (void *)v49[2];
          _OWORD v48[2] = v51;
          swift_bridgeObjectRetain();
          id v52 = v51;
        }
        else
        {
          *(_OWORD *)os_log_type_t v48 = *(_OWORD *)v49;
          _OWORD v48[2] = v49[2];
        }
        goto LABEL_65;
      case 8u:
        uint64_t v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v39 = *(void *)(v38 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          uint64_t v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          *((unsigned char *)a1 + *(int *)(v38 + 20)) = *((unsigned char *)a2 + *(int *)(v38 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        uint64_t v54 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v54 + 20)) = *(void **)((char *)a2 + *(int *)(v54 + 20));
        goto LABEL_65;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v32 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        goto LABEL_65;
      default:
        memcpy(a1, a2, *(void *)(v7 + 64));
        goto LABEL_66;
    }
  }
  return a1;
}

void **sub_1003EE7F0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v234 = v7;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v102 = *a2;
              *a1 = *a2;
              id v103 = v102;
              goto LABEL_63;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v101 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v101 - 8) + 16))(a1, a2, v101);
LABEL_63:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
              break;
          }
          uint64_t v104 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v105 = v104[5];
          uint64_t v106 = (char *)a1 + v105;
          unsigned __int8 v107 = (char *)a2 + v105;
          if (!*(void **)((char *)a2 + v105 + 8)) {
            goto LABEL_67;
          }
          uint64_t v221 = v104;
          *(void *)uint64_t v106 = *(void *)v107;
          *((void *)v106 + 1) = *((void *)v107 + 1);
          uint64_t v108 = (void *)*((void *)v107 + 2);
          uint64_t v109 = *((void *)v107 + 3);
          uint64_t v111 = *((void *)v107 + 4);
          uint64_t v110 = *((void *)v107 + 5);
          uint64_t v112 = *((void *)v107 + 7);
          uint64_t v216 = *((void *)v107 + 6);
          unsigned __int8 v228 = v107[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v108, v109, v111, v110, v216, v112, v228);
          *((void *)v106 + 2) = v108;
          *((void *)v106 + 3) = v109;
          *((void *)v106 + 4) = v111;
          *((void *)v106 + 5) = v110;
          *((void *)v106 + 6) = v216;
          *((void *)v106 + 7) = v112;
          v106[64] = v228;
          v106[65] = v107[65];
          v106[66] = v107[66];
          v106[67] = v107[67];
          v106[68] = v107[68];
          int v113 = v107[120];
          if (v113 == 255)
          {
            long long v114 = *(_OWORD *)(v107 + 72);
            long long v115 = *(_OWORD *)(v107 + 88);
            long long v116 = *(_OWORD *)(v107 + 104);
            v106[120] = v107[120];
            *(_OWORD *)(v106 + 88) = v115;
            *(_OWORD *)(v106 + 104) = v116;
            *(_OWORD *)(v106 + 72) = v114;
          }
          else
          {
            char v229 = v113 & 1;
            unint64_t v123 = (void *)*((void *)v107 + 9);
            uint64_t v124 = *((void *)v107 + 10);
            uint64_t v125 = *((void *)v107 + 11);
            uint64_t v126 = *((void *)v107 + 12);
            uint64_t v127 = *((void *)v107 + 13);
            uint64_t v217 = *((void *)v107 + 14);
            sub_10003BED8(v123, v124, v125, v126, v127, v217, v113 & 1);
            *((void *)v106 + 9) = v123;
            *((void *)v106 + 10) = v124;
            *((void *)v106 + 11) = v125;
            *((void *)v106 + 12) = v126;
            *((void *)v106 + 13) = v127;
            *((void *)v106 + 14) = v217;
            v106[120] = v229;
          }
          uint64_t v7 = v234;
          v106[121] = v107[121];
          uint64_t v104 = v221;
          goto LABEL_70;
        case 1u:
          uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v234 = v7;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              char v132 = *a2;
              *a1 = *a2;
              id v133 = v132;
              goto LABEL_74;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v131 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v131 - 8) + 16))(a1, a2, v131);
LABEL_74:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
              break;
          }
          uint64_t v104 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v134 = v104[5];
          uint64_t v106 = (char *)a1 + v134;
          unsigned __int8 v107 = (char *)a2 + v134;
          if (*(void **)((char *)a2 + v134 + 8))
          {
            uint64_t v222 = v104;
            *(void *)uint64_t v106 = *(void *)v107;
            *((void *)v106 + 1) = *((void *)v107 + 1);
            uint64_t v135 = (void *)*((void *)v107 + 2);
            uint64_t v136 = *((void *)v107 + 3);
            uint64_t v138 = *((void *)v107 + 4);
            uint64_t v137 = *((void *)v107 + 5);
            uint64_t v139 = *((void *)v107 + 7);
            uint64_t v218 = *((void *)v107 + 6);
            unsigned __int8 v230 = v107[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v135, v136, v138, v137, v218, v139, v230);
            *((void *)v106 + 2) = v135;
            *((void *)v106 + 3) = v136;
            *((void *)v106 + 4) = v138;
            *((void *)v106 + 5) = v137;
            *((void *)v106 + 6) = v218;
            *((void *)v106 + 7) = v139;
            v106[64] = v230;
            v106[65] = v107[65];
            v106[66] = v107[66];
            v106[67] = v107[67];
            v106[68] = v107[68];
            int v140 = v107[120];
            if (v140 == 255)
            {
              long long v141 = *(_OWORD *)(v107 + 72);
              long long v142 = *(_OWORD *)(v107 + 88);
              long long v143 = *(_OWORD *)(v107 + 104);
              v106[120] = v107[120];
              *(_OWORD *)(v106 + 88) = v142;
              *(_OWORD *)(v106 + 104) = v143;
              *(_OWORD *)(v106 + 72) = v141;
            }
            else
            {
              char v231 = v140 & 1;
              uint64_t v144 = (void *)*((void *)v107 + 9);
              uint64_t v145 = *((void *)v107 + 10);
              uint64_t v146 = *((void *)v107 + 11);
              uint64_t v147 = *((void *)v107 + 12);
              uint64_t v148 = *((void *)v107 + 13);
              uint64_t v219 = *((void *)v107 + 14);
              sub_10003BED8(v144, v145, v146, v147, v148, v219, v140 & 1);
              *((void *)v106 + 9) = v144;
              *((void *)v106 + 10) = v145;
              *((void *)v106 + 11) = v146;
              *((void *)v106 + 12) = v147;
              *((void *)v106 + 13) = v148;
              *((void *)v106 + 14) = v219;
              v106[120] = v231;
            }
            uint64_t v7 = v234;
            v106[121] = v107[121];
            uint64_t v104 = v222;
          }
          else
          {
LABEL_67:
            long long v117 = *(_OWORD *)v107;
            long long v118 = *((_OWORD *)v107 + 1);
            long long v119 = *((_OWORD *)v107 + 3);
            *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
            *((_OWORD *)v106 + 3) = v119;
            *(_OWORD *)uint64_t v106 = v117;
            *((_OWORD *)v106 + 1) = v118;
            long long v120 = *((_OWORD *)v107 + 4);
            long long v121 = *((_OWORD *)v107 + 5);
            long long v122 = *((_OWORD *)v107 + 6);
            *(_OWORD *)(v106 + 106) = *(_OWORD *)(v107 + 106);
            *((_OWORD *)v106 + 5) = v121;
            *((_OWORD *)v106 + 6) = v122;
            *((_OWORD *)v106 + 4) = v120;
            uint64_t v7 = v234;
          }
LABEL_70:
          *((unsigned char *)a1 + v104[6]) = *((unsigned char *)a2 + v104[6]);
          *((unsigned char *)a1 + v104[7]) = *((unsigned char *)a2 + v104[7]);
          *((unsigned char *)a1 + v104[8]) = *((unsigned char *)a2 + v104[8]);
          *((unsigned char *)a1 + v104[9]) = *((unsigned char *)a2 + v104[9]);
          *((unsigned char *)a1 + v104[10]) = *((unsigned char *)a2 + v104[10]);
          uint64_t v128 = v104[11];
          uint64_t v129 = *(void **)((char *)a2 + v128);
          *(void **)((char *)a1 + v128) = v129;
          id v130 = v129;
          goto LABEL_117;
        case 2u:
          uint64_t v15 = *a2;
          *a1 = *a2;
          uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          id v17 = (void **)((char *)a1 + v16);
          uint64_t v18 = (void **)((char *)a2 + v16);
          uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v20 = *(void *)(v19 - 8);
          id v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v20 + 48);
          id v22 = v15;
          if (v21(v18, 1, v19)) {
            goto LABEL_16;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v198 = *v18;
              NSObject *v17 = *v18;
              id v199 = v198;
              goto LABEL_105;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v197 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v197 - 8) + 16))(v17, v18, v197);
LABEL_105:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v17, v18, *(void *)(v20 + 64));
              break;
          }
          goto LABEL_116;
        case 3u:
          uint64_t v23 = *a2;
          *a1 = *a2;
          uint64_t v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          id v17 = (void **)((char *)a1 + v24);
          uint64_t v18 = (void **)((char *)a2 + v24);
          uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v20 = *(void *)(v19 - 8);
          id v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v20 + 48);
          id v26 = v23;
          if (v25(v18, 1, v19)) {
            goto LABEL_16;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v201 = *v18;
              NSObject *v17 = *v18;
              id v202 = v201;
              goto LABEL_110;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v200 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v200 - 8) + 16))(v17, v18, v200);
LABEL_110:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v17, v18, *(void *)(v20 + 64));
              break;
          }
          goto LABEL_116;
        case 4u:
          id v28 = *a2;
          *a1 = *a2;
          uint64_t v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          id v17 = (void **)((char *)a1 + v29);
          uint64_t v18 = (void **)((char *)a2 + v29);
          uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v20 = *(void *)(v19 - 8);
          uint64_t v30 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v20 + 48);
          id v31 = v28;
          if (v30(v18, 1, v19))
          {
LABEL_16:
            uint64_t v27 = sub_10003B754(&qword_10078C890);
            memcpy(v17, v18, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                uint64_t v204 = *v18;
                NSObject *v17 = *v18;
                id v205 = v204;
                goto LABEL_115;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v203 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v203 - 8) + 16))(v17, v18, v203);
LABEL_115:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v17, v18, *(void *)(v20 + 64));
                break;
            }
LABEL_116:
            (*(void (**)(void **, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
          }
LABEL_117:
          swift_storeEnumTagMultiPayload();
LABEL_118:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
          break;
        case 5u:
          *a1 = *a2;
          *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
          *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
          *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
          uint64_t v32 = a2[2];
          a1[2] = v32;
          id v33 = v32;
          goto LABEL_117;
        case 6u:
          uint64_t v41 = *a2;
          *a1 = *a2;
          id v42 = v41;
          goto LABEL_117;
        case 7u:
          uint64_t v34 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48))(a2, 1, v34))
          {
            uint64_t v36 = sub_10003B754(&qword_10078C518);
            memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            uint64_t v73 = *(int *)(v34 + 20);
            uint64_t v220 = (char *)a2 + v73;
            uint64_t v227 = (char *)a1 + v73;
            uint64_t v74 = type metadata accessor for REMHashtagLabelSpecifier();
            uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
            swift_bridgeObjectRetain();
            v75(v227, v220, v74);
            (*(void (**)(void **, void, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
          }
          uint64_t v76 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v77 = (void **)((char *)a1 + v76);
          id v78 = (void **)((char *)a2 + v76);
          if (v78[1])
          {
            *uint64_t v77 = *v78;
            v77[1] = v78[1];
            uint64_t v79 = (void *)v78[2];
            v77[2] = v79;
            swift_bridgeObjectRetain();
            id v80 = v79;
          }
          else
          {
            long long v81 = *(_OWORD *)v78;
            v77[2] = v78[2];
            *(_OWORD *)uint64_t v77 = v81;
          }
          goto LABEL_117;
        case 8u:
          uint64_t v43 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v44 = *(void *)(v43 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48))(a2, 1, v43))
          {
            uint64_t v45 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            uint64_t v87 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v87 - 8) + 16))(a1, a2, v87);
            *((unsigned char *)a1 + *(int *)(v43 + 20)) = *((unsigned char *)a2 + *(int *)(v43 + 20));
            (*(void (**)(void **, void, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v43);
          }
          uint64_t v88 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void **)((char *)a1 + *(int *)(v88 + 20)) = *(void **)((char *)a2 + *(int *)(v88 + 20));
          goto LABEL_117;
        case 9u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v37 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v38 = (char *)a1 + v37;
          uint64_t v39 = (char *)a2 + v37;
          uint64_t v40 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
          goto LABEL_117;
        default:
          memcpy(a1, a2, *(void *)(v7 + 64));
          goto LABEL_118;
      }
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_10005FD1C((uint64_t)a1);
LABEL_7:
    size_t v12 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v12);
    return a1;
  }
  if (a1 != a2)
  {
    sub_10005FD1C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v150 = *a2;
            *a1 = *a2;
            id v151 = v150;
            goto LABEL_84;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v149 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v149 - 8) + 16))(a1, a2, v149);
LABEL_84:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        uint64_t v152 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v153 = v152[5];
        uint64_t v154 = (char *)a1 + v153;
        os_log_type_t v155 = (char *)a2 + v153;
        if (!*(void **)((char *)a2 + v153 + 8)) {
          goto LABEL_88;
        }
        int v232 = v152;
        *(void *)uint64_t v154 = *(void *)v155;
        *((void *)v154 + 1) = *((void *)v155 + 1);
        uint64_t v156 = (void *)*((void *)v155 + 2);
        uint64_t v157 = *((void *)v155 + 3);
        uint64_t v158 = *((void *)v155 + 4);
        uint64_t v159 = *((void *)v155 + 5);
        uint64_t v160 = *((void *)v155 + 7);
        uint64_t v223 = *((void *)v155 + 6);
        unsigned __int8 v236 = v155[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v156, v157, v158, v159, v223, v160, v236);
        *((void *)v154 + 2) = v156;
        *((void *)v154 + 3) = v157;
        *((void *)v154 + 4) = v158;
        *((void *)v154 + 5) = v159;
        *((void *)v154 + 6) = v223;
        *((void *)v154 + 7) = v160;
        v154[64] = v236;
        v154[65] = v155[65];
        v154[66] = v155[66];
        v154[67] = v155[67];
        v154[68] = v155[68];
        int v161 = v155[120];
        if (v161 == 255)
        {
          long long v162 = *(_OWORD *)(v155 + 72);
          long long v163 = *(_OWORD *)(v155 + 88);
          long long v164 = *(_OWORD *)(v155 + 104);
          v154[120] = v155[120];
          *(_OWORD *)(v154 + 88) = v163;
          *(_OWORD *)(v154 + 104) = v164;
          *(_OWORD *)(v154 + 72) = v162;
        }
        else
        {
          char v237 = v161 & 1;
          uint64_t v172 = (void *)*((void *)v155 + 9);
          uint64_t v171 = *((void *)v155 + 10);
          uint64_t v173 = *((void *)v155 + 11);
          uint64_t v174 = *((void *)v155 + 12);
          uint64_t v175 = *((void *)v155 + 13);
          uint64_t v224 = *((void *)v155 + 14);
          sub_10003BED8(v172, v171, v173, v174, v175, v224, v161 & 1);
          *((void *)v154 + 9) = v172;
          *((void *)v154 + 10) = v171;
          *((void *)v154 + 11) = v173;
          *((void *)v154 + 12) = v174;
          *((void *)v154 + 13) = v175;
          *((void *)v154 + 14) = v224;
          v154[120] = v237;
        }
        v154[121] = v155[121];
        uint64_t v152 = v232;
        goto LABEL_91;
      case 1u:
        uint64_t v46 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v180 = *a2;
            *a1 = *a2;
            id v181 = v180;
            goto LABEL_95;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v179 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v179 - 8) + 16))(a1, a2, v179);
LABEL_95:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
            break;
        }
        uint64_t v152 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v182 = v152[5];
        uint64_t v154 = (char *)a1 + v182;
        os_log_type_t v155 = (char *)a2 + v182;
        if (*(void **)((char *)a2 + v182 + 8))
        {
          uint64_t v233 = v152;
          *(void *)uint64_t v154 = *(void *)v155;
          *((void *)v154 + 1) = *((void *)v155 + 1);
          uint64_t v183 = (void *)*((void *)v155 + 2);
          uint64_t v184 = *((void *)v155 + 3);
          uint64_t v185 = *((void *)v155 + 4);
          uint64_t v186 = *((void *)v155 + 5);
          uint64_t v187 = *((void *)v155 + 7);
          uint64_t v225 = *((void *)v155 + 6);
          unsigned __int8 v238 = v155[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v183, v184, v185, v186, v225, v187, v238);
          *((void *)v154 + 2) = v183;
          *((void *)v154 + 3) = v184;
          *((void *)v154 + 4) = v185;
          *((void *)v154 + 5) = v186;
          *((void *)v154 + 6) = v225;
          *((void *)v154 + 7) = v187;
          v154[64] = v238;
          v154[65] = v155[65];
          v154[66] = v155[66];
          v154[67] = v155[67];
          v154[68] = v155[68];
          int v188 = v155[120];
          if (v188 == 255)
          {
            long long v189 = *(_OWORD *)(v155 + 72);
            long long v190 = *(_OWORD *)(v155 + 88);
            long long v191 = *(_OWORD *)(v155 + 104);
            v154[120] = v155[120];
            *(_OWORD *)(v154 + 88) = v190;
            *(_OWORD *)(v154 + 104) = v191;
            *(_OWORD *)(v154 + 72) = v189;
          }
          else
          {
            char v239 = v188 & 1;
            uint64_t v193 = (void *)*((void *)v155 + 9);
            uint64_t v192 = *((void *)v155 + 10);
            uint64_t v194 = *((void *)v155 + 11);
            uint64_t v195 = *((void *)v155 + 12);
            uint64_t v196 = *((void *)v155 + 13);
            uint64_t v226 = *((void *)v155 + 14);
            sub_10003BED8(v193, v192, v194, v195, v196, v226, v188 & 1);
            *((void *)v154 + 9) = v193;
            *((void *)v154 + 10) = v192;
            *((void *)v154 + 11) = v194;
            *((void *)v154 + 12) = v195;
            *((void *)v154 + 13) = v196;
            *((void *)v154 + 14) = v226;
            v154[120] = v239;
          }
          v154[121] = v155[121];
          uint64_t v152 = v233;
        }
        else
        {
LABEL_88:
          long long v165 = *(_OWORD *)v155;
          long long v166 = *((_OWORD *)v155 + 1);
          long long v167 = *((_OWORD *)v155 + 3);
          *((_OWORD *)v154 + 2) = *((_OWORD *)v155 + 2);
          *((_OWORD *)v154 + 3) = v167;
          *(_OWORD *)uint64_t v154 = v165;
          *((_OWORD *)v154 + 1) = v166;
          long long v168 = *((_OWORD *)v155 + 4);
          long long v169 = *((_OWORD *)v155 + 5);
          long long v170 = *((_OWORD *)v155 + 6);
          *(_OWORD *)(v154 + 106) = *(_OWORD *)(v155 + 106);
          *((_OWORD *)v154 + 5) = v169;
          *((_OWORD *)v154 + 6) = v170;
          *((_OWORD *)v154 + 4) = v168;
        }
LABEL_91:
        *((unsigned char *)a1 + v152[6]) = *((unsigned char *)a2 + v152[6]);
        *((unsigned char *)a1 + v152[7]) = *((unsigned char *)a2 + v152[7]);
        *((unsigned char *)a1 + v152[8]) = *((unsigned char *)a2 + v152[8]);
        *((unsigned char *)a1 + v152[9]) = *((unsigned char *)a2 + v152[9]);
        *((unsigned char *)a1 + v152[10]) = *((unsigned char *)a2 + v152[10]);
        uint64_t v176 = v152[11];
        unint64_t v177 = *(void **)((char *)a2 + v176);
        *(void **)((char *)a1 + v176) = v177;
        id v178 = v177;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 2u:
        uint64_t v47 = *a2;
        *a1 = *a2;
        uint64_t v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v49 = (void **)((char *)a1 + v48);
        uint64_t v50 = (void **)((char *)a2 + v48);
        uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v52 = *(void *)(v51 - 8);
        uint64_t v53 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48);
        id v54 = v47;
        if (v53(v50, 1, v51)) {
          goto LABEL_33;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v208 = *v50;
            *uint64_t v49 = *v50;
            id v209 = v208;
            goto LABEL_123;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v207 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v207 - 8) + 16))(v49, v50, v207);
LABEL_123:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v49, v50, *(void *)(v52 + 64));
            break;
        }
        goto LABEL_134;
      case 3u:
        uint64_t v55 = *a2;
        *a1 = *a2;
        uint64_t v56 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v49 = (void **)((char *)a1 + v56);
        uint64_t v50 = (void **)((char *)a2 + v56);
        uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v52 = *(void *)(v51 - 8);
        id v57 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48);
        id v58 = v55;
        if (v57(v50, 1, v51)) {
          goto LABEL_33;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v211 = *v50;
            *uint64_t v49 = *v50;
            id v212 = v211;
            goto LABEL_128;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v210 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v210 - 8) + 16))(v49, v50, v210);
LABEL_128:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v49, v50, *(void *)(v52 + 64));
            break;
        }
        goto LABEL_134;
      case 4u:
        uint64_t v59 = *a2;
        *a1 = *a2;
        uint64_t v60 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v49 = (void **)((char *)a1 + v60);
        uint64_t v50 = (void **)((char *)a2 + v60);
        uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v52 = *(void *)(v51 - 8);
        uint64_t v61 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48);
        id v62 = v59;
        if (v61(v50, 1, v51))
        {
LABEL_33:
          uint64_t v63 = sub_10003B754(&qword_10078C890);
          memcpy(v49, v50, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v214 = *v50;
              *uint64_t v49 = *v50;
              id v215 = v214;
              goto LABEL_133;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v213 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v213 - 8) + 16))(v49, v50, v213);
LABEL_133:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v49, v50, *(void *)(v52 + 64));
              break;
          }
LABEL_134:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
LABEL_135:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
        *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
        uint64_t v64 = a2[2];
        a1[2] = v64;
        id v65 = v64;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
        uint64_t v82 = *a2;
        *a1 = *a2;
        id v83 = v82;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 7u:
        uint64_t v66 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v67 = *(void *)(v66 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v67 + 48))(a2, 1, v66))
        {
          uint64_t v68 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v89 = *(int *)(v66 + 20);
          uint64_t v235 = (char *)a1 + v89;
          uint64_t v90 = (char *)a2 + v89;
          uint64_t v91 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
          swift_bridgeObjectRetain();
          v92(v235, v90, v91);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v67 + 56))(a1, 0, 1, v66);
        }
        uint64_t v93 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v94 = (void **)((char *)a1 + v93);
        uint64_t v95 = (void **)((char *)a2 + v93);
        if (v95[1])
        {
          *uint64_t v94 = *v95;
          v94[1] = v95[1];
          id v96 = (void *)v95[2];
          v94[2] = v96;
          swift_bridgeObjectRetain();
          id v97 = v96;
        }
        else
        {
          long long v98 = *(_OWORD *)v95;
          v94[2] = v95[2];
          *(_OWORD *)uint64_t v94 = v98;
        }
        goto LABEL_135;
      case 8u:
        uint64_t v84 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v85 = *(void *)(v84 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v85 + 48))(a2, 1, v84))
        {
          uint64_t v86 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          uint64_t v99 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v99 - 8) + 16))(a1, a2, v99);
          *((unsigned char *)a1 + *(int *)(v84 + 20)) = *((unsigned char *)a2 + *(int *)(v84 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v85 + 56))(a1, 0, 1, v84);
        }
        uint64_t v100 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v100 + 20)) = *(void **)((char *)a2 + *(int *)(v100 + 20));
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v69 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        long long v70 = (char *)a1 + v69;
        long long v71 = (char *)a2 + v69;
        uint64_t v72 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        size_t v12 = *(void *)(v7 + 64);
        goto LABEL_8;
    }
  }
  return a1;
}

void *sub_1003F1404(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v38 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 32))(a1, a2, v38);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        goto LABEL_28;
      case 1u:
        uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v47 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 32))(a1, a2, v47);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
            break;
        }
LABEL_28:
        uint64_t v39 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v40 = v39[5];
        uint64_t v41 = (_OWORD *)((char *)a1 + v40);
        id v42 = (_OWORD *)((char *)a2 + v40);
        long long v43 = v42[3];
        v41[2] = v42[2];
        v41[3] = v43;
        long long v44 = v42[1];
        *uint64_t v41 = *v42;
        v41[1] = v44;
        *(_OWORD *)((char *)v41 + 106) = *(_OWORD *)((char *)v42 + 106);
        long long v45 = v42[6];
        long long v46 = v42[4];
        v41[5] = v42[5];
        v41[6] = v45;
        v41[4] = v46;
        *((unsigned char *)a1 + v39[6]) = *((unsigned char *)a2 + v39[6]);
        *((unsigned char *)a1 + v39[7]) = *((unsigned char *)a2 + v39[7]);
        *((unsigned char *)a1 + v39[8]) = *((unsigned char *)a2 + v39[8]);
        *((unsigned char *)a1 + v39[9]) = *((unsigned char *)a2 + v39[9]);
        *((unsigned char *)a1 + v39[10]) = *((unsigned char *)a2 + v39[10]);
        *(void *)((char *)a1 + v39[11]) = *(void *)((char *)a2 + v39[11]);
        goto LABEL_40;
      case 2u:
        *a1 = *a2;
        uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (char *)a1 + v10;
        size_t v12 = (char *)a2 + v10;
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
          goto LABEL_9;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v48 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v11, v12, v48);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_39;
      case 3u:
        *a1 = *a2;
        uint64_t v15 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (char *)a1 + v15;
        size_t v12 = (char *)a2 + v15;
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
          goto LABEL_9;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v49 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v11, v12, v49);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_39;
      case 4u:
        *a1 = *a2;
        uint64_t v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (char *)a1 + v17;
        size_t v12 = (char *)a2 + v17;
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
LABEL_9:
          uint64_t v16 = sub_10003B754(&qword_10078C890);
          memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v28 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v11, v12, v28);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v11, v12, *(void *)(v14 + 64));
              break;
          }
LABEL_39:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
LABEL_40:
        swift_storeEnumTagMultiPayload();
LABEL_41:
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        break;
      case 7u:
        uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
        {
          uint64_t v20 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v29 = *(int *)(v18 + 20);
          uint64_t v30 = (char *)a1 + v29;
          id v31 = (char *)a2 + v29;
          uint64_t v32 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
        }
        uint64_t v33 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        *((void *)v34 + 2) = *((void *)v35 + 2);
        goto LABEL_40;
      case 8u:
        uint64_t v21 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(a2, 1, v21))
        {
          uint64_t v23 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v36 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
          *((unsigned char *)a1 + *(int *)(v21 + 20)) = *((unsigned char *)a2 + *(int *)(v21 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(a1, 0, 1, v21);
        }
        uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)a1 + *(int *)(v37 + 20)) = *(void *)((char *)a2 + *(int *)(v37 + 20));
        goto LABEL_40;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v24 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        id v25 = (char *)a1 + v24;
        id v26 = (char *)a2 + v24;
        uint64_t v27 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        goto LABEL_40;
      default:
        memcpy(a1, a2, *(void *)(v7 + 64));
        goto LABEL_41;
    }
  }
  return a1;
}

void *sub_1003F2588(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v61 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
              break;
          }
          goto LABEL_47;
        case 1u:
          uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v70 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 32))(a1, a2, v70);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
              break;
          }
LABEL_47:
          id v62 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v63 = v62[5];
          uint64_t v64 = (_OWORD *)((char *)a1 + v63);
          id v65 = (_OWORD *)((char *)a2 + v63);
          long long v66 = v65[3];
          v64[2] = v65[2];
          v64[3] = v66;
          long long v67 = v65[1];
          *uint64_t v64 = *v65;
          v64[1] = v67;
          *(_OWORD *)((char *)v64 + 106) = *(_OWORD *)((char *)v65 + 106);
          long long v68 = v65[6];
          long long v69 = v65[4];
          v64[5] = v65[5];
          v64[6] = v68;
          v64[4] = v69;
          *((unsigned char *)a1 + v62[6]) = *((unsigned char *)a2 + v62[6]);
          *((unsigned char *)a1 + v62[7]) = *((unsigned char *)a2 + v62[7]);
          *((unsigned char *)a1 + v62[8]) = *((unsigned char *)a2 + v62[8]);
          *((unsigned char *)a1 + v62[9]) = *((unsigned char *)a2 + v62[9]);
          *((unsigned char *)a1 + v62[10]) = *((unsigned char *)a2 + v62[10]);
          *(void *)((char *)a1 + v62[11]) = *(void *)((char *)a2 + v62[11]);
          goto LABEL_73;
        case 2u:
          *a1 = *a2;
          uint64_t v15 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v16 = (char *)a1 + v15;
          uint64_t v17 = (char *)a2 + v15;
          uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
            goto LABEL_16;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v90 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v16, v17, v90);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v16, v17, *(void *)(v19 + 64));
              break;
          }
          goto LABEL_72;
        case 3u:
          *a1 = *a2;
          uint64_t v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v16 = (char *)a1 + v20;
          uint64_t v17 = (char *)a2 + v20;
          uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
            goto LABEL_16;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v91 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v16, v17, v91);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v16, v17, *(void *)(v19 + 64));
              break;
          }
          goto LABEL_72;
        case 4u:
          *a1 = *a2;
          uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v16 = (char *)a1 + v22;
          uint64_t v17 = (char *)a2 + v22;
          uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
          {
LABEL_16:
            uint64_t v21 = sub_10003B754(&qword_10078C890);
            memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v92 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v16, v17, v92);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v16, v17, *(void *)(v19 + 64));
                break;
            }
LABEL_72:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
          }
LABEL_73:
          swift_storeEnumTagMultiPayload();
LABEL_74:
          (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
          break;
        case 7u:
          uint64_t v23 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v24 = *(void *)(v23 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(a2, 1, v23))
          {
            uint64_t v25 = sub_10003B754(&qword_10078C518);
            memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            uint64_t v52 = *(int *)(v23 + 20);
            uint64_t v53 = (char *)a1 + v52;
            id v54 = (char *)a2 + v52;
            uint64_t v55 = type metadata accessor for REMHashtagLabelSpecifier();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
          }
          uint64_t v56 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          id v57 = (char *)a1 + v56;
          id v58 = (char *)a2 + v56;
          *(_OWORD *)id v57 = *(_OWORD *)v58;
          *((void *)v57 + 2) = *((void *)v58 + 2);
          goto LABEL_73;
        case 8u:
          uint64_t v26 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v27 = *(void *)(v26 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(a2, 1, v26))
          {
            uint64_t v28 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            uint64_t v59 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 32))(a1, a2, v59);
            *((unsigned char *)a1 + *(int *)(v26 + 20)) = *((unsigned char *)a2 + *(int *)(v26 + 20));
            (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
          }
          uint64_t v60 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void *)((char *)a1 + *(int *)(v60 + 20)) = *(void *)((char *)a2 + *(int *)(v60 + 20));
          goto LABEL_73;
        case 9u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v29 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v30 = (char *)a1 + v29;
          id v31 = (char *)a2 + v29;
          uint64_t v32 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          goto LABEL_73;
        default:
          memcpy(a1, a2, *(void *)(v7 + 64));
          goto LABEL_74;
      }
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_10005FD1C((uint64_t)a1);
LABEL_7:
    size_t v12 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v12);
    return a1;
  }
  if (a1 != a2)
  {
    sub_10005FD1C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v80 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v80 - 8) + 32))(a1, a2, v80);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        goto LABEL_60;
      case 1u:
        uint64_t v33 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v89 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v89 - 8) + 32))(a1, a2, v89);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
            break;
        }
LABEL_60:
        long long v81 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v82 = v81[5];
        id v83 = (_OWORD *)((char *)a1 + v82);
        uint64_t v84 = (_OWORD *)((char *)a2 + v82);
        long long v85 = v84[3];
        v83[2] = v84[2];
        v83[3] = v85;
        long long v86 = v84[1];
        *id v83 = *v84;
        v83[1] = v86;
        *(_OWORD *)((char *)v83 + 106) = *(_OWORD *)((char *)v84 + 106);
        long long v87 = v84[6];
        long long v88 = v84[4];
        v83[5] = v84[5];
        v83[6] = v87;
        v83[4] = v88;
        *((unsigned char *)a1 + v81[6]) = *((unsigned char *)a2 + v81[6]);
        *((unsigned char *)a1 + v81[7]) = *((unsigned char *)a2 + v81[7]);
        *((unsigned char *)a1 + v81[8]) = *((unsigned char *)a2 + v81[8]);
        *((unsigned char *)a1 + v81[9]) = *((unsigned char *)a2 + v81[9]);
        *((unsigned char *)a1 + v81[10]) = *((unsigned char *)a2 + v81[10]);
        *(void *)((char *)a1 + v81[11]) = *(void *)((char *)a2 + v81[11]);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 2u:
        *a1 = *a2;
        uint64_t v34 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37)) {
          goto LABEL_31;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v94 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v35, v36, v94);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v35, v36, *(void *)(v38 + 64));
            break;
        }
        goto LABEL_84;
      case 3u:
        *a1 = *a2;
        uint64_t v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v35 = (char *)a1 + v39;
        uint64_t v36 = (char *)a2 + v39;
        uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37)) {
          goto LABEL_31;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v95 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v35, v36, v95);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v35, v36, *(void *)(v38 + 64));
            break;
        }
        goto LABEL_84;
      case 4u:
        *a1 = *a2;
        uint64_t v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v35 = (char *)a1 + v40;
        uint64_t v36 = (char *)a2 + v40;
        uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
        {
LABEL_31:
          uint64_t v41 = sub_10003B754(&qword_10078C890);
          memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v96 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v35, v36, v96);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v35, v36, *(void *)(v38 + 64));
              break;
          }
LABEL_84:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v43 = *(void *)(v42 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v43 + 48))(a2, 1, v42))
        {
          uint64_t v44 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v71 = *(int *)(v42 + 20);
          uint64_t v72 = (char *)a1 + v71;
          uint64_t v73 = (char *)a2 + v71;
          uint64_t v74 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(a1, 0, 1, v42);
        }
        uint64_t v75 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v76 = (char *)a1 + v75;
        uint64_t v77 = (char *)a2 + v75;
        *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
        *((void *)v76 + 2) = *((void *)v77 + 2);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 8u:
        uint64_t v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v46 = *(void *)(v45 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
        {
          uint64_t v47 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          uint64_t v78 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 32))(a1, a2, v78);
          *((unsigned char *)a1 + *(int *)(v45 + 20)) = *((unsigned char *)a2 + *(int *)(v45 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
        }
        uint64_t v79 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)a1 + *(int *)(v79 + 20)) = *(void *)((char *)a2 + *(int *)(v79 + 20));
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v48 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v49 = (char *)a1 + v48;
        uint64_t v50 = (char *)a2 + v48;
        uint64_t v51 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        size_t v12 = *(void *)(v7 + 64);
        goto LABEL_8;
    }
  }
  return a1;
}

uint64_t sub_1003F47C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F47DC);
}

uint64_t sub_1003F47DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1003F4848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F485C);
}

uint64_t sub_1003F485C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1003F48DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1003F4944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarEditingTarget()
{
  uint64_t result = qword_10079DCF8;
  if (!qword_10079DCF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003F4A00()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Item();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1003F4A78()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListPresenter()
{
  return self;
}

uint64_t sub_1003F4AE4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v10 = (char *)v30 - v9;
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem();
  __chkstk_darwin(v11);
  uint64_t v13 = (id *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1003F7438((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v27 = (void *)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
      switch(v28)
      {
        case 1:

          sub_1003F7438((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          if (a2)
          {
            uint64_t v16 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
            uint64_t v17 = (uint64_t)v7;
            goto LABEL_3;
          }
          int v29 = v7[*(int *)(v5 + 32)];
          sub_1003F74A0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          if (v29) {
            uint64_t result = 2;
          }
          else {
            uint64_t result = 0;
          }
          break;
        case 3:
          uint64_t v16 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          uint64_t v17 = (uint64_t)v10;
          goto LABEL_3;
        default:

          uint64_t v18 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          uint64_t v19 = (uint64_t)v10;
          goto LABEL_6;
      }
      return result;
    case 2:
      uint64_t v20 = *(void *)(v2 + 48);
      uint64_t v21 = *(void *)(v3 + 56);
      uint64_t ObjectType = swift_getObjectType();
      v30[1] = v20;
      (*(void (**)(uint64_t, uint64_t))(v21 + 16))(ObjectType, v21);
      uint64_t v24 = v23;
      uint64_t v25 = swift_getObjectType();
      char v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 128))(v25, v24);
      swift_unknownObjectRelease();
      sub_1003F74A0((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
      if (a2) {
        return 1;
      }
      else {
        return v26 & 1 | 2u;
      }
    case 3:
    case 4:
      uint64_t v18 = &type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem;
      uint64_t v19 = (uint64_t)v13;
LABEL_6:
      sub_1003F74A0(v19, (uint64_t (*)(void))v18);
      if (a2) {
        return 0;
      }
      else {
        return 2;
      }
    case 5:

      return 0;
    case 6:

      return 0;
    case 10:
    case 11:
    case 12:
      return result;
    default:
      uint64_t v16 = &type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem;
      uint64_t v17 = (uint64_t)v13;
LABEL_3:
      sub_1003F74A0(v17, (uint64_t (*)(void))v16);
      return 0;
  }
}

uint64_t sub_1003F4E7C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a2) {
    goto LABEL_7;
  }
  uint64_t v7 = sub_1003F5110(0, a1)[2];
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1003F5110(1, a1)[2];
  swift_bridgeObjectRelease();
  if (!v7)
  {
    if (!v8) {
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v14 = sub_1003F5110(0, a3);
    uint64_t v15 = v14[2];
    if (v15)
    {
      uint64_t v16 = v15 - 1;
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.Item();
      uint64_t v18 = *(void *)(v17 - 8);
      sub_1003F73C8((uint64_t)v14+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v16, a4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(a4, 0, 1, v17);
    }
    else
    {
      uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a4, 1, 1, v22);
    }
LABEL_14:
    return swift_bridgeObjectRelease();
  }
  if (!v8)
  {
    uint64_t v9 = sub_1003F5110(0, a3);
    uint64_t v10 = v9[2];
    uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = v12;
    if (v10)
    {
      sub_1003F73C8((uint64_t)v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), a4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a4, 0, 1, v11);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a4, 1, 1, v11);
    }
    goto LABEL_14;
  }
LABEL_9:
  uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);

  return v20(a4, 1, 1, v19);
}

void *sub_1003F5110(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem();
  __chkstk_darwin(v4);
  uint64_t v6 = (void **)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v26 = (uint64_t)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v23 - v11;
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v27 = _swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v14)
  {
    uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = *(void *)(v8 + 72);
    v23[1] = a2;
    uint64_t v25 = (v15 + 32) & ~v15;
    uint64_t v17 = a2 + v25;
    uint64_t v18 = _swiftEmptyArrayStorage;
    uint64_t v24 = v6;
    do
    {
      sub_1003F73C8(v17, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      TTRRemindersListViewModel.Item.iOSListCasesOnly.getter();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1003F74A0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
          if (!a1) {
            goto LABEL_14;
          }
          goto LABEL_4;
        case 2u:
          sub_1003F74A0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
          if (a1 == 1) {
            goto LABEL_14;
          }
          goto LABEL_4;
        case 5u:
          uint64_t v19 = v6[2];
          goto LABEL_12;
        case 6u:
          uint64_t v19 = *v6;
LABEL_12:

          break;
        case 0xAu:
        case 0xBu:
        case 0xCu:
          break;
        default:
          sub_1003F74A0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
          break;
      }
      if (a1 == 2)
      {
LABEL_14:
        sub_1003F7438((uint64_t)v12, v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1004D3504(0, v18[2] + 1, 1);
        }
        uint64_t v18 = v27;
        unint64_t v21 = v27[2];
        unint64_t v20 = v27[3];
        if (v21 >= v20 >> 1)
        {
          sub_1004D3504(v20 > 1, v21 + 1, 1);
          uint64_t v18 = v27;
        }
        void v18[2] = v21 + 1;
        sub_1003F7438(v26, (uint64_t)v18 + v25 + v21 * v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v6 = v24;
      }
      else
      {
LABEL_4:
        sub_1003F74A0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      v17 += v16;
      --v14;
    }
    while (v14);
    uint64_t v13 = v27;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1003F5494()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  if (![Strong isViewLoaded])
  {
    swift_unknownObjectRelease();
    return 0;
  }
  unint64_t v1 = sub_100377F30();
  uint64_t result = *(uint64_t *)((char *)&v1->isa + qword_1007A59E8);
  if (result)
  {
    unsigned __int8 v3 = [(id)result hasActiveDrag];

    if (v3)
    {
      swift_unknownObjectRelease();
      return 1;
    }
    uint64_t v5 = sub_100377F30();
    uint64_t result = *(uint64_t *)((char *)&v5->isa + qword_1007A59E8);
    if (result)
    {
      id v4 = [(id)result hasActiveDrop];
      swift_unknownObjectRelease();

      return (uint64_t)v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003F556C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t ObjectType = swift_getObjectType();
  v17[1] = v6;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  uint64_t v10 = v9;
  uint64_t v11 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v10 + 136))(v11, v10);
  swift_unknownObjectRelease();
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v5, 1, v12) == 1)
  {
    sub_10003B6F8((uint64_t)v5, &qword_100786EF0);
LABEL_5:
    uint64_t v14 = type metadata accessor for TTRIDefaultPresentationTreeMaker();
    uint64_t v15 = &off_1007385F0;
    goto LABEL_6;
  }
  int v13 = v5[*(int *)(v12 + 64)];
  sub_1003F74A0((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (v13 != 1) {
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for TTRIEditableSectionsPresentationTreeMaker();
  uint64_t v15 = &off_1007385C8;
LABEL_6:
  uint64_t result = swift_allocObject();
  a1[3] = v14;
  a1[4] = (uint64_t)v15;
  *a1 = result;
  return result;
}

uint64_t sub_1003F5718(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_10078ADA0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10044B668(v16);
    sub_10037DD68((uint64_t)v16);
    sub_10006A2C4((uint64_t)v16);
    sub_10003B694(a1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_itemToStartEditing, (uint64_t)v4, &qword_10078ADA8);
    uint64_t v12 = sub_10003B754(&qword_10078ADB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v4, 1, v12) == 1)
    {
      sub_10003B6F8((uint64_t)v4, &qword_10078ADA8);
      return swift_unknownObjectRelease();
    }
    else
    {
      char v13 = v4[*(int *)(v12 + 48)];
      uint64_t v14 = *(int *)(v5 + 48);
      sub_1003F7438((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v7[v14] = v13;
      char v15 = v7[*(int *)(v5 + 48)];
      sub_1003F7438((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10037E2AC((uint64_t)v10, v15);
      swift_unknownObjectRelease();
      return sub_1003F74A0((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  return result;
}

void sub_1003F596C()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v0 = sub_100377F30();
    __chkstk_darwin(v0);
    uint64_t v2 = *(void **)(v1 + qword_1007A59F0);
    if (v2)
    {
      id v3 = v2;
      sub_100136390(0, 0, 0, 0, (uint64_t)v3, (void (*)(uint64_t))sub_1003F7430);
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1003F5A40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    sub_1003F73C8(a1, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    uint64_t v10 = v9 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
    swift_beginAccess();
    sub_1003F73C8(v10, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_beginAccess();
    sub_1000CC97C((uint64_t)v7, v10);
    swift_endAccess();
    sub_100342F5C((uint64_t)v4);
    sub_1003F74A0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    sub_1003F74A0((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1003F5BA4()
{
  uint64_t v0 = type metadata accessor for REMFeatureFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if ([Strong isViewLoaded])
    {
      (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for REMFeatureFlags.viewAnnotation(_:), v0);
      char v5 = REMFeatureFlags.isEnabled.getter();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      if (v5)
      {
        uint64_t v6 = (void *)TTRListOrCustomSmartList.objectID.getter();
        char v7 = TTRListOrCustomSmartList.isGroup.getter();
        sub_1003459FC(v6, v7 & 1);
        swift_unknownObjectRelease();

        return;
      }
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
    swift_unknownObjectRelease();
  }
}

void sub_1003F5D44(uint64_t a1)
{
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v3 = Strong;
  if (![Strong isViewLoaded])
  {
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v4 = *(char **)&v3[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController];
  if (!v4)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)(*(void *)&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_scrollSessionController]
                 + 24);
  if (v5 && (*(unsigned char *)(v5 + 24) & 1) != 0)
  {
    uint64_t v6 = v4;
LABEL_12:
    swift_beginAccess();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1005B4540(v8);
    swift_endAccess();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    return;
  }
  char v7 = *(void **)(*(void *)&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView]
                + qword_1007A59E8);
  if (!v7)
  {
LABEL_18:
    __break(1u);
    return;
  }
  uint64_t v9 = v4;
  if ([v7 hasActiveDrop]) {
    goto LABEL_12;
  }
  (*(void (**)(uint64_t))&v9[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_reloadItemsImmediately])(a1);
  swift_unknownObjectRelease();
}

uint64_t sub_1003F5EC8(void *a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (char *)result;
    uint64_t v4 = a1[3];
    uint64_t v5 = a1[4];
    sub_100038D28(a1, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5) & 1;
    sub_10033A8AC();
    if (v6 == [v3 isEditing])
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      UIViewController.endFirstResponderEditing()();
      v7.receiver = v3;
      v7.super_class = (Class)type metadata accessor for TTRIShowRemindersViewController();
      [super setEditing:v6 animated:1];
      [*(id *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController] setEditing:v6 animated:1];
      sub_10033C13C(1, 1);
      sub_10033D6DC();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1003F5FF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10003B754(&qword_100791C80);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10003B754(&qword_10078AD98);
  __chkstk_darwin(v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v13 = result + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_swHighlightToShowInNavBar;
    swift_beginAccess();
    uint64_t v14 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_10003B694(v13, (uint64_t)v11, &qword_100791C80);
    sub_10003B694(a1, v14, &qword_100791C80);
    char v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v15((uint64_t)v11, 1, v2) == 1)
    {
      if (v15(v14, 1, v2) == 1)
      {
        sub_10003B6F8((uint64_t)v11, &qword_100791C80);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_10003B694((uint64_t)v11, (uint64_t)v8, &qword_100791C80);
      if (v15(v14, 1, v2) != 1)
      {
        sub_1003F7438(v14, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        char v16 = static TTRSharedWithYouHighlight.__derived_struct_equals(_:_:)();
        sub_1003F74A0((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        sub_1003F74A0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        sub_10003B6F8((uint64_t)v11, &qword_100791C80);
        if (v16) {
          return swift_unknownObjectRelease();
        }
LABEL_9:
        swift_beginAccess();
        sub_1000CC914(a1, v13);
        swift_endAccess();
        sub_10033A8AC();
        return swift_unknownObjectRelease();
      }
      sub_1003F74A0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
    }
    sub_10003B6F8((uint64_t)v11, &qword_10078AD98);
    goto LABEL_9;
  }
  return result;
}

void sub_1003F630C(uint64_t a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = [Strong viewIfLoaded];
    if (v3 && (uint64_t v4 = v3, v37 = (id)UIView.firstResponderDescendant.getter(), v4, v37))
    {
      uint64_t v5 = *(void *)(a1 + 16);
      if (v5)
      {
        uint64_t v6 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
        uint64_t v39 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        uint64_t v38 = *(void *)(v6 + 72);
        swift_bridgeObjectRetain();
        uint64_t v7 = 0;
        uint64_t v34 = v5;
        while (1)
        {
          uint64_t v8 = sub_100377F30();
          uint64_t v9 = *(char **)((char *)&v8->isa + qword_1007A59F0);
          if (!v9) {
            break;
          }
          uint64_t v10 = v8;
          if (v9[qword_10078DED8] == 1)
          {
            uint64_t v11 = qword_1007852B8;
            uint64_t v12 = v9;
            if (v11 != -1) {
              swift_once();
            }
            uint64_t v13 = type metadata accessor for Logger();
            sub_100018BF8(v13, (uint64_t)qword_10078DE60);
            uint64_t v14 = Logger.logObject.getter();
            os_log_type_t v15 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v14, v15))
            {
              char v16 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)char v16 = 0;
              _os_log_impl((void *)&_mh_execute_header, v14, v15, "Attempting to read sectionMetadata while it is being modified", v16, 2u);
              swift_slowDealloc();
            }
          }
          else
          {
            uint64_t v17 = v9;
          }
          uint64_t v18 = &v9[qword_10078DED0];
          uint64_t v19 = *(void *)&v9[qword_10078DED0];
          uint64_t v20 = *(void *)&v9[qword_10078DED0 + 8];
          uint64_t v21 = *(void *)&v9[qword_10078DED0 + 16];
          if (v19)
          {
            char v22 = v9[qword_10078DED0 + 24] & 1;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v36 = v10;
            sub_10003B754((uint64_t *)&unk_10078E3A0);
            uint64_t v23 = swift_allocObject();
            *(void *)(v23 + 16) = sub_10008FE70((int64_t)_swiftEmptyArrayStorage);
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
            {
              uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
              if (v30)
              {
                uint64_t v31 = v30;
                if (v30 < 1) {
                  goto LABEL_36;
                }
                uint64_t v32 = &_swiftEmptyArrayStorage[4];
                do
                {
                  uint64_t v33 = *v32++;
                  swift_weakAssign();
                  swift_beginAccess();
                  *(void *)(v33 + 64) = _swiftEmptyArrayStorage;
                  swift_bridgeObjectRelease();
                  --v31;
                }
                while (v31);
              }
            }
            sub_10008EDE8(v23);
            uint64_t v19 = v24;
            uint64_t v20 = v25;
            uint64_t v21 = v26;
            char v22 = v27;
            swift_release();
            uint64_t v35 = *(void *)v18;
            *(void *)uint64_t v18 = v19;
            *((void *)v18 + 1) = v20;
            *((void *)v18 + 2) = v21;
            v18[24] = v22 & 1;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1000349CC(v35);
            sub_1000349CC(0);
            uint64_t v5 = v34;
            uint64_t v10 = v36;
          }
          char v28 = (void *)sub_10008E820(v39 + v38 * v7, v19, v20, v21, v22 & 1);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28)
          {
            unsigned __int8 v29 = [v37 isDescendantOfView:v28];

            if (v29)
            {
              swift_bridgeObjectRelease();
              [v37 resignFirstResponder];
              swift_unknownObjectRelease();

              return;
            }
          }
          if (++v7 == v5)
          {
            swift_unknownObjectRelease();

            swift_bridgeObjectRelease();
            return;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_1003F67B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  long long v5 = 0uLL;
  if (!Strong)
  {
    uint64_t v14 = 0;
    uint64_t v17 = 0;
    char v18 = 0;
    uint64_t v16 = 254;
    long long v19 = 0uLL;
    goto LABEL_13;
  }
  uint64_t v6 = sub_100377F30();
  uint64_t v7 = *(Class *)((char *)&v6->isa + qword_1007A59F0);
  if (v7)
  {
    uint64_t v8 = v6;
    id v9 = v7;
    uint64_t v10 = sub_1000890D8();
    uint64_t v14 = (void *)sub_10008E820(a1, v10, v12, v13, v11 & 1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14)
    {
      type metadata accessor for TTRIRemindersListReminderCell();
      if (swift_dynamicCastClass())
      {
        os_log_type_t v15 = (void *)TTRIRemindersListReminderCell.viewForAnchoringPopover.getter();

        if (v15)
        {
          static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)();
          uint64_t v14 = v22;
          uint64_t v16 = v23;
          uint64_t v17 = v24;
          char v18 = v25;
          swift_unknownObjectRelease();

          long long v19 = v21;
          long long v5 = v20;
LABEL_13:
          *(_OWORD *)a2 = v5;
          *(_OWORD *)(a2 + 16) = v19;
          *(void *)(a2 + 32) = v14;
          *(void *)(a2 + 40) = v16;
          *(void *)(a2 + 48) = v17;
          *(unsigned char *)(a2 + 56) = v18;
          return;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      uint64_t v14 = 0;
    }
    else
    {
      swift_unknownObjectRelease();
    }
    uint64_t v17 = 0;
    char v18 = 0;
    uint64_t v16 = 254;
    long long v19 = 0uLL;
    long long v5 = 0uLL;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1003F6958()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v0 = TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)();
    swift_unknownObjectRelease();
    return v0;
  }
  else
  {
    uint64_t v2 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, enum case for PromiseError.cancelled(_:), v2);
    sub_10003B754(&qword_10078AD88);
    swift_allocObject();
    return Promise.init(error:)();
  }
}

void sub_1003F6A48(uint64_t a1@<X8>)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if ([Strong isViewLoaded])
    {
      uint64_t v6 = sub_100377F30();
      sub_10016A010();
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 1, 1, v5);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    v4(a1, 1, 1, v3);
  }
}

void sub_1003F6BB4(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_1003F73C8(a1, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
    uint64_t v8 = (uint64_t)v6 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_firstVisibleItemToRestore;
    swift_beginAccess();
    sub_100347698((uint64_t)v4, v8);
    swift_endAccess();
    id v9 = [v6 viewIfLoaded];
    [v9 setNeedsLayout];
    swift_unknownObjectRelease();
  }
}

void sub_1003F6D24()
{
}

uint64_t sub_1003F6D2C(uint64_t a1, char a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10037E2AC(a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003F6D9C(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10037E438(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003F6DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003F67B4(a1, (uint64_t)v4);
  return sub_1000C77A4((uint64_t)v4, a2);
}

uint64_t sub_1003F6E34(uint64_t a1, char a2)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v4 = sub_10037EA24(a1, a2 & 1);
    swift_unknownObjectRelease();
    return v4;
  }
  else
  {
    uint64_t v6 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for PromiseError.cancelled(_:), v6);
    sub_10003B754(&qword_10079F3B0);
    swift_allocObject();
    return Promise.init(error:)();
  }
}

uint64_t sub_1003F6F18(uint64_t a1, uint64_t a2, char a3)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v6 = sub_10037E5D8(a1, a2, a3 & 1);
    swift_unknownObjectRelease();
    return (uint64_t)v6;
  }
  else
  {
    uint64_t v8 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for PromiseError.cancelled(_:), v8);
    sub_10003B754(&qword_10078AD88);
    swift_allocObject();
    return Promise.init(error:)();
  }
}

uint64_t sub_1003F7014(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMFeatureFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter();
  char v13 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1003F7438((uint64_t)v12, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      os_log_type_t v15 = (void *)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
      char v17 = v16;
      sub_1003F74A0((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      char v13 = 0;
      switch(v17)
      {
        case 1:
        case 2:

          goto LABEL_3;
        case 3:
          return v13 & 1;
        default:

          char v13 = a2 ^ 1;
          break;
      }
      break;
    case 2u:
      sub_1003F74A0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
      char v13 = 1;
      break;
    case 3u:
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for REMFeatureFlags.indentOutdentUncommittedReminder(_:), v6);
      char v13 = REMFeatureFlags.isEnabled.getter();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1003F74A0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
      break;
    case 0xAu:
    case 0xBu:
    case 0xCu:
      return v13 & 1;
    default:
      sub_1003F74A0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
LABEL_3:
      char v13 = 0;
      break;
  }
  return v13 & 1;
}

void sub_1003F7318(void (*a1)(id))
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v2 = sub_100377F30();
    uint64_t v3 = *(Class *)((char *)&v2->isa + qword_1007A59E8);
    if (v3)
    {
      uint64_t v4 = v2;
      id v5 = v3;

      a1(v5);
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1003F73C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003F7430()
{
  return sub_10037DEBC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003F7438(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003F74A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003F7500(char a1)
{
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v66 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_100799F20);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v61 - v9;
  uint64_t v67 = type metadata accessor for Date();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  os_log_type_t v15 = (char *)&v61 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v19 = type metadata accessor for DateComponents();
  __chkstk_darwin(v19);
  long long v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v61 - v25;
  switch(a1)
  {
    case 1:
      unint64_t v27 = 0xD000000000000029;
      unint64_t v28 = 0x80000001006B9940;
      unint64_t v29 = 0x74654420776F6853;
      unint64_t v30 = 0xEC000000736C6961;
      break;
    case 2:
      unint64_t v27 = 0xD000000000000025;
      unint64_t v28 = 0x80000001006B9910;
      unint64_t v29 = 1734437958;
      unint64_t v30 = 0xE400000000000000;
      break;
    case 3:
      unint64_t v27 = 0xD000000000000027;
      unint64_t v28 = 0x80000001006B98E0;
      unint64_t v29 = 0x67616C666E55;
      goto LABEL_7;
    case 4:
      unint64_t v27 = 0xD000000000000060;
      unint64_t v28 = 0x80000001006B9870;
      unint64_t v29 = 0x746E65646E49;
      goto LABEL_7;
    case 5:
      unint64_t v27 = 0xD00000000000006FLL;
      unint64_t v28 = 0x80000001006B9800;
      unint64_t v29 = 0x746E656474754FLL;
      unint64_t v30 = 0xE700000000000000;
      break;
    case 6:
      uint64_t v63 = v24;
      uint64_t v64 = v23;
      sub_10003B754((uint64_t *)&unk_100791C60);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_10066C6F0;
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v33._uint64_t countAndFlagsBits = 0xD000000000000037;
      v32._object = (void *)0x80000001006B97A0;
      v33._object = (void *)0x80000001006B97C0;
      *(Swift::String *)(v31 + 32) = TTRLocalizedString(_:comment:)(v32, v33);
      type metadata accessor for TTRReminderEditor();
      Date.init()();
      static TTRReminderEditor.tomorrowDueDateComponents(now:)();
      uint64_t v34 = v65;
      uint64_t v35 = v18;
      uint64_t v36 = v67;
      id v62 = *(void (**)(char *, uint64_t))(v65 + 8);
      v62(v35, v67);
      id v37 = [self currentCalendar];
      static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

      Calendar.date(from:)();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v4, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v10, 1, v36) == 1)
      {
        sub_10003B6F8((uint64_t)v10, &qword_100799F20);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v15, v10, v36);
        uint64_t v47 = Date.rem_localizedAccessibilityDueDateIconString.getter();
        uint64_t v49 = v48;
        unint64_t v51 = *(void *)(v31 + 16);
        unint64_t v50 = *(void *)(v31 + 24);
        if (v51 >= v50 >> 1) {
          uint64_t v31 = (uint64_t)sub_100022F98((char *)(v50 > 1), v51 + 1, 1, (char *)v31);
        }
        uint64_t v52 = v62;
        *(void *)(v31 + 16) = v51 + 1;
        uint64_t v53 = v31 + 16 * v51;
        *(void *)(v53 + 32) = v47;
        *(void *)(v53 + 40) = v49;
        v52(v15, v67);
      }
      uint64_t v68 = v31;
      TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      sub_10003B754(&qword_10078E670);
      sub_1000B542C();
      uint64_t v54 = BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v64);
      return v54;
    case 7:
      uint64_t v63 = v24;
      uint64_t v64 = v23;
      sub_10003B754((uint64_t *)&unk_100791C60);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_10066C6F0;
      v39._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
      v40._object = (void *)0x80000001006B9740;
      v39._object = (void *)0x80000001006B9760;
      v40._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      *(Swift::String *)(v38 + 32) = TTRLocalizedString(_:comment:)(v40, v39);
      type metadata accessor for TTRReminderEditor();
      Date.init()();
      static TTRReminderEditor.thisWeekendDueDateComponents(now:)();
      uint64_t v41 = v65;
      uint64_t v42 = v18;
      uint64_t v43 = v67;
      id v62 = *(void (**)(char *, uint64_t))(v65 + 8);
      v62(v42, v67);
      id v44 = [self currentCalendar];
      static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

      Calendar.date(from:)();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v4, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v7, 1, v43) == 1)
      {
        sub_10003B6F8((uint64_t)v7, &qword_100799F20);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v12, v7, v43);
        uint64_t v55 = Date.rem_localizedAccessibilityDueDateIconString.getter();
        uint64_t v57 = v56;
        unint64_t v59 = *(void *)(v38 + 16);
        unint64_t v58 = *(void *)(v38 + 24);
        if (v59 >= v58 >> 1) {
          uint64_t v38 = (uint64_t)sub_100022F98((char *)(v58 > 1), v59 + 1, 1, (char *)v38);
        }
        *(void *)(v38 + 16) = v59 + 1;
        uint64_t v60 = v38 + 16 * v59;
        *(void *)(v60 + 32) = v55;
        *(void *)(v60 + 40) = v57;
        v62(v12, v67);
      }
      uint64_t v68 = v38;
      TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      sub_10003B754(&qword_10078E670);
      sub_1000B542C();
      uint64_t v54 = BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v21, v64);
      return v54;
    case 8:
      unint64_t v27 = 0xD00000000000003BLL;
      unint64_t v30 = 0x80000001006B96E0;
      unint64_t v28 = 0x80000001006B9700;
      unint64_t v29 = 0xD00000000000001FLL;
      break;
    case 9:
      unint64_t v29 = 0xD000000000000016;
      unint64_t v27 = 0xD000000000000041;
      unint64_t v30 = 0x80000001006B9670;
      uint64_t v45 = "Accessibility string to change the due date to a custom date&time";
      goto LABEL_17;
    case 10:
      unint64_t v29 = 0xD000000000000012;
      unint64_t v27 = 0xD000000000000033;
      unint64_t v30 = 0x80000001006B9610;
      uint64_t v45 = "Accessibility string to permanently delete reminder";
      goto LABEL_17;
    case 11:
      unint64_t v29 = 0xD000000000000010;
      unint64_t v27 = 0xD000000000000031;
      unint64_t v30 = 0x80000001006B95B0;
      uint64_t v45 = "Accessibility string to move reminder to any list";
LABEL_17:
      unint64_t v28 = (unint64_t)(v45 - 32) | 0x8000000000000000;
      break;
    default:
      unint64_t v27 = 0xD000000000000027;
      unint64_t v28 = 0x80000001006B9970;
      unint64_t v29 = 0x6574656C6544;
LABEL_7:
      unint64_t v30 = 0xE600000000000000;
      break;
  }

  return TTRLocalizedString(_:comment:)(*(Swift::String *)&v29, *(Swift::String *)&v27)._countAndFlagsBits;
}

uint64_t sub_1003F7E4C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();

  return Set.init()();
}

uint64_t sub_1003F7ED0()
{
  return Set.removeAll(where:)();
}

uint64_t sub_1003F7F88(uint64_t a1)
{
  return sub_100024FB4(1, a1);
}

uint64_t sub_1003F7F98()
{
  return (*(uint64_t (**)(void))(v0 + 32))() & 1;
}

uint64_t sub_1003F7FCC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079DE38);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079DE38);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for TTRIListSharingRouter()
{
  return self;
}

void sub_1003F80B8(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = [objc_allocWithZone((Class)REMICloudIsOffDataView) initWithStore:a1];
  id v8 = 0;
  id v4 = [v3 fetchICloudIsOffCloudConfigurationPropertiesWithError:&v8];
  if (v4)
  {
    id v5 = v4;
    id v6 = v8;

    *a2 = v5;
  }
  else
  {
    id v7 = v8;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

void sub_1003F81A4()
{
  if (!*(void *)(v0 + 72))
  {
    *(void *)(v0 + 72) = (*(uint64_t (**)(void))(v0 + 80))();
    swift_unknownObjectRelease();
  }
}

BOOL sub_1003F8400()
{
  uint64_t v1 = sub_10003B754(&qword_100799F20);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - v9;
  sub_1003F81A4();
  uint64_t v11 = (void *)v0[9];
  if (v11)
  {
    swift_unknownObjectRetain();
    Date.init()();
    swift_beginAccess();
    uint64_t v12 = v0[7];
    uint64_t v13 = v0[8];
    sub_100038D28(v0 + 4, v12);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    swift_endAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      static Date.distantPast.getter();
      sub_1001089E0((uint64_t)v3);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    }
    Date.timeIntervalSince(_:)();
    double v20 = v19;
    long long v21 = *(void (**)(char *, uint64_t))(v5 + 8);
    v21(v8, v4);
    v21(v10, v4);
    [v11 iCloudIsOffTimeIntervalSinceLastPrompt];
    double v23 = v22;
    swift_unknownObjectRelease();
    return v20 < v23;
  }
  else
  {
    if (qword_100785568 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100018BF8(v14, (uint64_t)qword_10079DEF0);
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "TTRICloudIsOffProvider: Failed to fetch REMICloudIsOffCloudConfiguration properties", v17, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
}

uint64_t sub_1003F8714()
{
  sub_100038CD8(v0 + 32);
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

id sub_1003F8764()
{
  id result = [self defaultStore];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result aa_appleAccounts];

    if (!v2) {
      return 0;
    }
    sub_1003F88D8();
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62) {
      goto LABEL_15;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v5 = ACAccountDataclassReminders;
      uint64_t v6 = 4;
      while (1)
      {
        id v7 = (v3 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v3 + 8 * v6);
        id v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        id v10 = [v7 isEnabledForDataclass:v5];

        if ((v10 & 1) == 0)
        {
          ++v6;
          if (v9 != v4) {
            continue;
          }
        }
        goto LABEL_17;
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
    }
    id v10 = 0;
LABEL_17:
    swift_bridgeObjectRelease_n();
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1003F88D8()
{
  unint64_t result = qword_10078A9E0;
  if (!qword_10078A9E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10078A9E0);
  }
  return result;
}

void *sub_1003F8918(uint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  v2[3] = 0;
  swift_unknownObjectWeakInit();
  v2[5] = 0;
  uint64_t v6 = *(void **)(a1 + 16);
  v2[4] = a1;
  swift_beginAccess();
  uint64_t v7 = v6[6];
  v3[7] = v6[5];
  v3[8] = v7;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  [(id)TTRListDetailCreationChangeItem.storage.getter() copyWithZone:0];
  swift_release();
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for TTRListDetailCreationChangeItem.Storage();
  if (swift_dynamicCast())
  {
    uint64_t v8 = v17;
  }
  else
  {
    if (qword_1007852A0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100018BF8(v9, (uint64_t)qword_10078D388);
    swift_retain_n();
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      swift_beginAccess();
      uint64_t v18 = (void *)v6[4];
      id v13 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v16 = v18;
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to set initialListStorage by copying REMListStorage {listID: %@}", v12, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v8 = 0;
  }
  v3[6] = v8;
  uint64_t v14 = NSUndoManager.observeChanges<A>(target:handler:)();
  swift_release();
  swift_release();

  v3[5] = v14;
  swift_release();
  return v3;
}

void *sub_1003F8C28(uint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  v2[3] = 0;
  swift_unknownObjectWeakInit();
  v2[5] = 0;
  uint64_t v6 = *(void **)(a1 + 16);
  v2[4] = a1;
  id v7 = v6;
  swift_retain();
  id v8 = [v7 customContext];
  uint64_t v9 = v8;
  if (v8)
  {
    id v10 = [v8 name];

    uint64_t v9 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;
  }
  else
  {
    unint64_t v12 = 0xE000000000000000;
  }
  v3[7] = v9;
  v3[8] = v12;
  id v13 = [v7 storage];
  [v13 copyWithZone:0];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1000368FC(0, &qword_10078D580);
  if (swift_dynamicCast())
  {
    uint64_t v14 = v23;
  }
  else
  {
    if (qword_1007852A0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100018BF8(v15, (uint64_t)qword_10078D388);
    os_log_type_t v16 = v7;
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v17, v18))
    {
      double v19 = (uint8_t *)swift_slowAlloc();
      double v20 = (void *)swift_slowAlloc();
      *(_DWORD *)double v19 = 138412290;
      id v24 = [v16 objectID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *double v20 = v24;

      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to set initialListStorage by copying REMListStorage {listID: %@}", v19, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      os_log_type_t v16 = v17;
    }
    else
    {
    }
    uint64_t v14 = 0;
  }
  v3[6] = v14;
  uint64_t v21 = NSUndoManager.observeChanges<A>(target:handler:)();

  swift_release();
  v3[5] = v21;
  swift_release();
  return v3;
}

void *sub_1003F8F78(uint64_t a1, void *a2, unint64_t *a3)
{
  uint64_t v5 = v3;
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  v3[5] = 0;
  id v8 = *(void **)(a1 + 16);
  v3[4] = a1;
  id v9 = v8;
  swift_retain();
  id v10 = [v9 name];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  v5[7] = v11;
  v5[8] = v13;
  id v14 = [v9 storage];
  [v14 copyWithZone:0];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1000368FC(0, a3);
  if (swift_dynamicCast())
  {
    uint64_t v15 = v24;
  }
  else
  {
    if (qword_1007852A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100018BF8(v16, (uint64_t)qword_10078D388);
    uint64_t v17 = v9;
    os_log_type_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      double v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)double v20 = 138412290;
      id v25 = [v17 objectID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v21 = v25;

      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to set initialListStorage by copying REMListStorage {listID: %@}", v20, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v17 = v18;
    }
    else
    {
    }
    uint64_t v15 = 0;
  }
  v5[6] = v15;
  uint64_t v22 = NSUndoManager.observeChanges<A>(target:handler:)();

  swift_release();
  v5[5] = v22;
  swift_release();
  return v5;
}

uint64_t sub_1003F928C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1003F92F4(a1, a2, a3, sub_1000890D8, (uint64_t (*)(uint64_t))sub_100091DF0, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, uint64_t *))sub_10020B4F8);
}

uint64_t sub_1003F92F4(uint64_t a1, uint64_t a2, int a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t), void (*a8)(uint64_t, uint64_t *))
{
  uint64_t v65 = a8;
  int v56 = a3;
  uint64_t v57 = a2;
  uint64_t v14 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v14 - 8);
  uint64_t v61 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t result = __chkstk_darwin(v16);
  id v62 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v8;
  double v20 = *(void **)(v8 + qword_1007A59F0);
  if (!v20) {
    goto LABEL_63;
  }
  id v59 = v20;
  uint64_t v63 = a4();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v60 = v25;
  uint64_t v26 = a5(a1);
  uint64_t v64 = v22;
  if (!v26)
  {
    uint64_t v44 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v61, 1, 1, v16);
LABEL_44:
    uint64_t v48 = v62;
    uint64_t v49 = v59;
    goto LABEL_45;
  }
  uint64_t v27 = v26;
  if (!*(void *)(v22 + 16)) {
    goto LABEL_42;
  }
  uint64_t result = a6(v26);
  if ((v28 & 1) == 0) {
    goto LABEL_42;
  }
  uint64_t v29 = *(void *)(v64 + 56);
  unint64_t v30 = *(void *)(v29 + 8 * result);
  if ((v24 & 1) == 0)
  {
    if ((v30 & 0x8000000000000000) != 0) {
      goto LABEL_60;
    }
    if (v30 >= *(void *)(v63 + 16))
    {
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    uint64_t v45 = swift_bridgeObjectRetain();
    a7(v45, v27);
    char v47 = v46;
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
    {
      uint64_t v44 = (uint64_t)v61;
      IndexPath.init(row:section:)();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v44, 0, 1, v16);
LABEL_43:
      swift_release();
      goto LABEL_44;
    }
LABEL_42:
    uint64_t v44 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v61, 1, 1, v16);
    goto LABEL_43;
  }
  v53[0] = *(void *)(v29 + 8 * result);
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t result = swift_retain();
  uint64_t v32 = 0;
  if (Strong)
  {
    uint64_t v33 = v27;
    uint64_t v54 = v17;
    uint64_t v55 = v16;
    v53[1] = v27;
    do
    {
      BOOL v34 = __OFADD__(v32++, 1);
      if (v34)
      {
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      uint64_t v35 = Strong;
      swift_beginAccess();
      unint64_t v36 = *(void *)(Strong + 64);
      if (v36 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v37 = result;
        if (!result)
        {
LABEL_8:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        uint64_t result = swift_bridgeObjectRetain();
        if (!v37) {
          goto LABEL_8;
        }
      }
      if ((v36 & 0xC000000000000001) != 0)
      {
        uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v38 = result;
        if (result != v33) {
          goto LABEL_16;
        }
      }
      else
      {
        if (!*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_59;
        }
        uint64_t v38 = *(void *)(v36 + 32);
        uint64_t result = swift_retain();
        if (v38 != v33)
        {
LABEL_16:
          uint64_t v39 = 0;
          uint64_t v40 = v37 - 1;
          while (1)
          {
            uint64_t v41 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              break;
            }
            if (*(unsigned char *)(v38 + 48))
            {
              uint64_t v66 = 0;
              v65(v38, &v66);
              uint64_t v42 = v66;
              *(void *)(v38 + 40) = v66;
              *(unsigned char *)(v38 + 48) = 0;
            }
            else
            {
              uint64_t v42 = *(void *)(v38 + 40);
            }
            uint64_t result = swift_release();
            BOOL v34 = __OFADD__(v41, v42);
            uint64_t v32 = v41 + v42;
            if (v34) {
              goto LABEL_55;
            }
            if (v40 == v39)
            {
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_32;
            }
            unint64_t v43 = v39 + 1;
            if ((v36 & 0xC000000000000001) != 0)
            {
              uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v38 = result;
              if (__OFADD__(v43, 1)) {
                goto LABEL_56;
              }
            }
            else
            {
              if (v43 >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_57;
              }
              uint64_t v38 = *(void *)(v36 + 8 * v39 + 40);
              uint64_t result = swift_retain();
              if (__OFADD__(v43, 1)) {
                goto LABEL_56;
              }
            }
            ++v39;
            if (v38 == v33) {
              goto LABEL_30;
            }
          }
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
      }
LABEL_30:
      swift_bridgeObjectRelease();
      swift_release_n();
LABEL_32:
      uint64_t v17 = v54;
      uint64_t v16 = v55;
LABEL_9:
      uint64_t Strong = swift_weakLoadStrong();
      uint64_t result = swift_release();
      uint64_t v33 = v35;
    }
    while (Strong);
  }
  swift_release();
  uint64_t result = v32 - 1;
  if (__OFSUB__(v32, 1)) {
    goto LABEL_62;
  }
  uint64_t v44 = (uint64_t)v61;
  uint64_t v48 = v62;
  uint64_t v49 = v59;
  if (result < 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v61, 1, 1, v16);
  }
  else
  {
    IndexPath.init(row:section:)();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v44, 0, 1, v16);
  }
  swift_release();
LABEL_45:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v44, 1, v16) == 1) {
    return sub_10003B6F8(v44, &qword_10078E8F0);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 32))(v48, v44, v16);
  unint64_t v50 = *(void **)(v58 + qword_1007A59E8);
  if (v50)
  {
    id v51 = v50;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v51 scrollToRowAtIndexPath:isa atScrollPosition:v57 animated:v56 & 1];

    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v48, v16);
  }
LABEL_64:
  __break(1u);
  return result;
}

void sub_1003F98F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v10 = *(void **)a1;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v10;
  id v11 = v10;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_retain();
  uint64_t v12 = (void *)TTRAccountsListsViewModel.remList(for:)();
  swift_release();
  if (v12)
  {
    if ([v12 sharingStatus] == (id)3)
    {
      id v13 = [v12 account];
      if ([v13 type] == (id)3)
      {
        sub_1000145EC(v2 + 112, (uint64_t)&v47);
        sub_100038D28(&v47, v49);
        id v14 = [v12 sharedOwnerName];
        if (v14)
        {
          uint64_t v15 = v14;
          uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          os_log_type_t v18 = v17;
        }
        else
        {
          uint64_t v16 = 0;
          os_log_type_t v18 = 0;
        }
        uint64_t v34 = *(void *)(a1 + 8);
        uint64_t v35 = *(void *)(a1 + 16);
        uint64_t v36 = swift_allocObject();
        swift_weakInit();
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v36;
        *(void *)(v37 + 24) = v12;
        long long v38 = *(_OWORD *)(a1 + 176);
        *(_OWORD *)(v37 + 192) = *(_OWORD *)(a1 + 160);
        *(_OWORD *)(v37 + 208) = v38;
        *(_OWORD *)(v37 + 224) = *(_OWORD *)(a1 + 192);
        *(_OWORD *)(v37 + 234) = *(_OWORD *)(a1 + 202);
        long long v39 = *(_OWORD *)(a1 + 112);
        *(_OWORD *)(v37 + 128) = *(_OWORD *)(a1 + 96);
        *(_OWORD *)(v37 + 144) = v39;
        long long v40 = *(_OWORD *)(a1 + 144);
        *(_OWORD *)(v37 + 160) = *(_OWORD *)(a1 + 128);
        *(_OWORD *)(v37 + 176) = v40;
        long long v41 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)(v37 + 64) = *(_OWORD *)(a1 + 32);
        *(_OWORD *)(v37 + 80) = v41;
        long long v42 = *(_OWORD *)(a1 + 80);
        *(_OWORD *)(v37 + 96) = *(_OWORD *)(a1 + 64);
        *(_OWORD *)(v37 + 112) = v42;
        long long v43 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)(v37 + 32) = *(_OWORD *)a1;
        *(_OWORD *)(v37 + 48) = v43;
        swift_retain();
        id v44 = v12;
        sub_1000326C4(a1);
        sub_100263F94(v34, v35, v16, v18, (uint64_t)sub_100416D78, v37);
        swift_release();
        swift_release();

        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)&v47);
      }
      else
      {
        id v24 = v13;
        sub_1000326C4(a1);
        id v25 = v24;
        sub_1000326C4(a1);
        id v26 = v25;
        uint64_t v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = swift_slowAlloc();
          unint64_t v30 = (void *)swift_slowAlloc();
          uint64_t v46 = swift_slowAlloc();
          uint64_t v47 = (uint64_t)v11;
          uint64_t v51 = v46;
          *(_DWORD *)uint64_t v29 = 138412802;
          os_log_t v45 = v27;
          id v31 = v11;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *unint64_t v30 = v11;
          sub_10003B798(a1);
          sub_10003B798(a1);
          *(_WORD *)(v29 + 12) = 2112;
          id v32 = [v26 objectID];
          uint64_t v47 = (uint64_t)v32;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v30[1] = v32;

          *(_WORD *)(v29 + 22) = 2080;
          uint64_t v47 = 0;
          unint64_t v48 = 0xE000000000000000;
          id v50 = [v26 type];
          type metadata accessor for REMAccountType(0);
          _print_unlocked<A, B>(_:_:)();
          uint64_t v47 = sub_1000385A8(v47, v48, &v51);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          os_log_t v33 = v45;
          _os_log_impl((void *)&_mh_execute_header, v45, v28, "Responding to share invitation is not supported for the account {list.objectID: %@, account.objectID: %@, account.type: %s}", (uint8_t *)v29, 0x20u);
          sub_10003B754(&qword_10078AC60);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          sub_10003B798(a1);
          sub_10003B798(a1);
        }
      }
      return;
    }
  }
  sub_1000326C4(a1);
  sub_1000326C4(a1);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138412290;
    uint64_t v47 = (uint64_t)v11;
    id v23 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v22 = v11;
    sub_10003B798(a1);
    sub_10003B798(a1);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to get placeholder list for share invitation for {list.objectID: %@}", v21, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10003B798(a1);
    sub_10003B798(a1);
  }
}

void sub_1003FA018(void **a1, int a2)
{
  uint64_t v3 = v2;
  int v28 = a2;
  uint64_t v5 = type metadata accessor for TTRListType();
  __chkstk_darwin(v5);
  id v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100018BF8(v8, (uint64_t)qword_10079DFC8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v14 = *a1;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v14;
  id v15 = v14;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  swift_retain();
  uint64_t v16 = (void *)TTRAccountsListsViewModel.remList(for:)();
  swift_release();
  if (v16)
  {
    uint64_t v17 = *(void *)(v3 + 72);
    uint64_t ObjectType = swift_getObjectType();
    void *v7 = v15;
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = *(void (**)(void *, uint64_t, uint64_t))(v17 + 32);
    id v20 = v15;
    v19(v7, ObjectType, v17);
    sub_100030930((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRListType);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      sub_100413ABC(v16, v28 & 1, Strong);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  else
  {
    sub_1000326C4((uint64_t)a1);
    sub_1000326C4((uint64_t)a1);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      id v25 = (void *)swift_slowAlloc();
      *(_DWORD *)id v24 = 138412290;
      id v29 = v15;
      id v26 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v25 = v15;
      sub_10003B798((uint64_t)a1);
      sub_10003B798((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to find remList in viewModel -- failed to show reminders {list.objectID: %@}", v24, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10003B798((uint64_t)a1);
      sub_10003B798((uint64_t)a1);
    }
  }
}

void sub_1003FA41C(void **a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRListType();
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v28[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100018BF8(v7, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v13 = *a1;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v13;
  id v14 = v13;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_retain();
  id v15 = (void *)TTRAccountsListsViewModel.remSmartList(for:)();
  swift_release();
  if (v15)
  {
    uint64_t v16 = *(void *)(v2 + 72);
    uint64_t ObjectType = swift_getObjectType();
    *uint64_t v6 = v14;
    swift_storeEnumTagMultiPayload();
    os_log_type_t v18 = *(void (**)(void *, uint64_t, uint64_t))(v16 + 32);
    id v19 = v14;
    v18(v6, ObjectType, v16);
    sub_100030930((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRListType);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v21 = Strong;
      sub_100038D28((void *)(Strong + 48), *(void *)(Strong + 72));
      sub_100349A4C(v15, v21, (uint64_t)&off_100743640, v28);
      sub_100038CD8((uint64_t)v28);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  else
  {
    sub_1000326C4((uint64_t)a1);
    sub_1000326C4((uint64_t)a1);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      id v25 = (void *)swift_slowAlloc();
      *(_DWORD *)id v24 = 138412290;
      v28[0] = (uint64_t)v14;
      id v26 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v25 = v14;
      sub_10003B798((uint64_t)a1);
      sub_10003B798((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to find remSmartList in viewModel -- failed to show reminders {smartList.objectID: %@}", v24, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10003B798((uint64_t)a1);
      sub_10003B798((uint64_t)a1);
    }
  }
}

uint64_t sub_1003FA838(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRListType();
  __chkstk_darwin(v6);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100018BF8(v9, (uint64_t)qword_10079DFC8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  unint64_t v15 = 0xE500000000000000;
  uint64_t v16 = 0x7961646F74;
  switch(a1)
  {
    case 1:
      uint64_t v16 = 0x656C756465686373;
      goto LABEL_10;
    case 2:
      unint64_t v15 = 0xE300000000000000;
      uint64_t v16 = 7105633;
      break;
    case 3:
      unint64_t v15 = 0xE700000000000000;
      uint64_t v16 = 0x64656767616C66;
      break;
    case 4:
      unint64_t v15 = 0xE800000000000000;
      uint64_t v16 = 0x64656E6769737361;
      break;
    case 5:
      unint64_t v15 = 0xEF737070416E4964;
      uint64_t v16 = 0x6E756F4669726973;
      break;
    case 6:
      uint64_t v16 = 0x6574656C706D6F63;
LABEL_10:
      unint64_t v15 = 0xE900000000000064;
      break;
    default:
      break;
  }
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v15;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v17 = *(void *)(v3 + 72);
  uint64_t ObjectType = swift_getObjectType();
  *uint64_t v8 = a1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v8, ObjectType, v17);
  sub_100030930((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRListType);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 8))(ObjectType);
    sub_100413B60(a1, v21, a2 & 1, v20);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1003FABBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRListType();
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100018BF8(v7, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v13 = *(void **)(a1 + 48);
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v13;
  id v14 = v13;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_retain();
  unint64_t v15 = (void *)TTRAccountsListsViewModel.remList(for:)();
  swift_release();
  if (v15)
  {
    uint64_t v16 = *(void *)(v2 + 72);
    uint64_t ObjectType = swift_getObjectType();
    *uint64_t v6 = v14;
    swift_storeEnumTagMultiPayload();
    os_log_type_t v18 = *(void (**)(void *, uint64_t, uint64_t))(v16 + 32);
    id v19 = v14;
    v18(v6, ObjectType, v16);
    sub_100030930((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRListType);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      sub_100413ABC(v15, 0, Strong);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  else
  {
    sub_100416C88(a1);
    sub_100416C88(a1);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
      id v24 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v23 = 138412290;
      v26[1] = v14;
      id v25 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v24 = v14;
      sub_1000953E8(a1);
      sub_1000953E8(a1);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to find remList for group in viewModel -- failed to show reminders {group.objectID: %@}", v23, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000953E8(a1);
      sub_1000953E8(a1);
    }
  }
}

void sub_1003FAFB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v10 = (void *)TTRAccountsListsViewModel.remAccount(for:)();
  swift_release();
  if (v10)
  {
    uint64_t v35 = v10;
    v34[0] = v5;
    uint64_t v11 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    type metadata accessor for REMAnalyticsManager();
    id v12 = v11;
    v34[1] = v2;
    id v13 = v12;
    static REMAnalyticsManager.shared.getter();
    uint64_t v14 = sub_10003B754(&qword_100791F78);
    unint64_t v15 = (uint64_t *)&v9[*(int *)(v14 + 48)];
    uint64_t v16 = &v9[*(int *)(v14 + 80)];
    uint64_t v17 = enum case for REMUserOperation.openRecentlyDeletedList(_:);
    uint64_t v18 = type metadata accessor for REMUserOperation();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v9, v17, v18);
    *unint64_t v15 = TTRUserDefaults.activitySessionId.getter();
    v15[1] = v19;
    id v36 = v13;
    TTRUserDefaults.activitySessionBeginTime.getter();
    uint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    uint64_t v20 = _typeName(_:qualified:)();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v37 = v20;
    unint64_t v38 = v22;
    v23._uint64_t countAndFlagsBits = 0x756F636341202D20;
    v23._object = (void *)0xEE007473694C746ELL;
    String.append(_:)(v23);
    unint64_t v24 = v38;
    *(void *)uint64_t v16 = v37;
    *((void *)v16 + 1) = v24;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for REMAnalyticsEvent.userOperation(_:), v6);
    REMAnalyticsManager.post(event:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v26 = Strong;
      uint64_t v27 = v1[9];
      uint64_t ObjectType = swift_getObjectType();
      id v29 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v27 + 8) + 8))(ObjectType);
      unint64_t v30 = sub_100038D28((void *)(v26 + 48), *(void *)(v26 + 72));
      uint64_t v31 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      uint64_t v32 = v34[0];
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v34[0], 1, 1, v31);
      os_log_t v33 = v35;
      sub_100410738(v35, v32, v29, v26, *v30);
      sub_10003B6F8(v32, (uint64_t *)&unk_10078E360);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_1003FB368()
{
  uint64_t v0 = sub_10003B754(&qword_10079E230);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for REMAccountsListDataView.Model();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
    swift_beginAccess();
    sub_10003B694(v8, (uint64_t)v2, &qword_10079E230);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      swift_release();
      return sub_10003B6F8((uint64_t)v2, &qword_10079E230);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v6, v2, v3);
      sub_100026B84((uint64_t)v6, 0, 2, 1);
      swift_release();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return result;
}

uint64_t sub_1003FB558(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003FB5FC(a1, a2, a3, a4 & 0x101010101FFLL, 0, 0, 3);
    return swift_release();
  }
  return result;
}

void sub_1003FB5FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v8 = v7;
  int v36 = a7;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100018BF8(v10, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = a3;
  id v16 = a3;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_retain();
  uint64_t v17 = (void *)TTRAccountsListsViewModel.remAccount(for:)();
  swift_release();
  if (v17)
  {
    id v18 = [v17 store];
    id v19 = [objc_allocWithZone((Class)REMSaveRequest) initWithStore:v18];

    type metadata accessor for TTRListDetailCreationChangeItem();
    swift_allocObject();
    id v20 = v19;
    id v21 = v17;
    uint64_t v22 = TTRListDetailCreationChangeItem.init(saveRequest:account:)((uint64_t)v20, (uint64_t)v21);
    uint64_t v23 = v35;
    if (v35)
    {
      swift_beginAccess();
      *(void *)(v22 + 40) = v34;
      *(void *)(v22 + 48) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    char v24 = v36;
    if (v36 != 3)
    {
      swift_beginAccess();
      *(unsigned char *)(v22 + 80) = v24;
    }
    sub_100038D28((void *)(v8 + 112), *(void *)(v8 + 136));
    id v25 = sub_100411E00(v22, v8, v8, (uint64_t)&off_10074A528);
    swift_unknownObjectRelease();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v27 = Strong;
      [Strong presentViewController:v25 animated:1 completion:0];

      swift_release();
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRetain_n();
    id v28 = v16;
    id v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138412290;
      id v37 = v28;
      id v33 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v32 = v28;

      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Failed to find model for account -- Failed to add new list {account.objectID: %@}", v31, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

Class sub_1003FBAC4()
{
  swift_retain();
  uint64_t v1 = TTRAccountsListsViewModel.accounts.getter();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v3 = (char *)(v1 + 61);
    uint64_t v52 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v4 = *(void *)(v3 - 29);
      uint64_t v5 = *(void *)(v3 - 21);
      uint64_t v6 = *(void **)(v3 - 13);
      char v7 = *(v3 - 3);
      char v8 = *(v3 - 4);
      uint64_t v46 = *(v3 - 5);
      uint64_t v9 = 256;
      if (!v8) {
        uint64_t v9 = 0;
      }
      uint64_t v10 = 0x10000;
      if (!*(v3 - 3)) {
        uint64_t v10 = 0;
      }
      char v44 = *(v3 - 2);
      uint64_t v11 = 0x1000000;
      if (!v44) {
        uint64_t v11 = 0;
      }
      char v48 = *(v3 - 1);
      char v50 = *v3;
      uint64_t v12 = &_mh_execute_header;
      if (!v48) {
        uint64_t v12 = 0;
      }
      uint64_t v13 = 0x10000000000;
      if (!*v3) {
        uint64_t v13 = 0;
      }
      unint64_t v0 = v0 & 0xFFFF000000000000 | v46 | v13 | (unint64_t)v12 | v11 | v10 | v9;
      swift_retain();
      swift_bridgeObjectRetain();
      id v14 = v6;
      unint64_t v15 = (void *)TTRAccountsListsViewModel.remAccount(for:)();
      swift_release();
      if (v15 && (id v16 = [v15 groupContext], v15, v16))
      {
        swift_bridgeObjectRetain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v17 = v52;
        }
        else {
          uint64_t v17 = sub_100570BDC(0, v52[2] + 1, 1, v52);
        }
        unint64_t v19 = v17[2];
        unint64_t v18 = v17[3];
        unint64_t v20 = v19 + 1;
        if (v19 >= v18 >> 1)
        {
          uint64_t v22 = sub_100570BDC((void *)(v18 > 1), v19 + 1, 1, v17);
          unint64_t v20 = v19 + 1;
          uint64_t v17 = v22;
        }
        void v17[2] = v20;
        uint64_t v52 = v17;
        id v21 = &v17[7 * v19];
        double v21[4] = v4;
        v21[5] = v5;
        void v21[6] = v14;
        *((unsigned char *)v21 + 56) = v46;
        *((unsigned char *)v21 + 57) = v8;
        *((unsigned char *)v21 + 58) = v7;
        *((unsigned char *)v21 + 59) = v44;
        *((unsigned char *)v21 + 60) = v48;
        *((unsigned char *)v21 + 61) = v50;
        v21[8] = v4;
        v21[9] = v5;
        v21[10] = v16;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      v3 += 32;
      --v2;
    }
    while (v2);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = v52;
  }
  else
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  unint64_t v25 = v23[2];
  if (v25 <= 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t v53 = v23;
    specialized ContiguousArray.reserveCapacity(_:)();
    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    uint64_t v42 = v24;
    uint64_t v26 = 0;
    do
    {
      uint64_t v28 = v53[v26 + 4];
      uint64_t v27 = v53[v26 + 5];
      id v29 = (void *)v53[v26 + 6];
      char v49 = v53[v26 + 7];
      char v30 = BYTE1(v53[v26 + 7]);
      char v31 = BYTE2(v53[v26 + 7]);
      char v45 = BYTE4(v53[v26 + 7]);
      char v47 = BYTE3(v53[v26 + 7]);
      char v43 = BYTE5(v53[v26 + 7]);
      uint64_t v32 = v53[v26 + 8];
      uint64_t v33 = v53[v26 + 9];
      unint64_t v51 = v25;
      uint64_t v34 = (void *)v53[v26 + 10];
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v28;
      *(void *)(v35 + 24) = v27;
      *(void *)(v35 + 32) = v29;
      *(unsigned char *)(v35 + 40) = v49;
      *(unsigned char *)(v35 + 41) = v30;
      *(unsigned char *)(v35 + 42) = v31;
      *(unsigned char *)(v35 + 43) = v47;
      *(unsigned char *)(v35 + 44) = v45;
      *(unsigned char *)(v35 + 45) = v43;
      *(void *)(v35 + 48) = v32;
      *(void *)(v35 + 56) = v33;
      *(void *)(v35 + 64) = v34;
      *(void *)(v35 + 72) = sub_100417344;
      *(void *)(v35 + 80) = v42;
      swift_bridgeObjectRetain();
      id v36 = v29;
      swift_bridgeObjectRetain_n();
      id v37 = v34;
      swift_retain();
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v26 += 7;
      unint64_t v25 = v51 - 1;
    }
    while (v51 != 1);
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      sub_1000368FC(0, &qword_10079AF80);
      preferredElementSize = (void *)_bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_1000368FC(0, &qword_10079AF80);
      preferredElementSize = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    sub_1000368FC(0, &qword_1007894E0);
    v39._uint64_t countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    v54.value.super.Class isa = 0;
    v54.is_nil = 0;
    v40.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v54, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, 0).super.super.isa;
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v40.super.super.isa;
}

uint64_t sub_1003FBFFC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = *a5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003FC09C(a1, a2, a3, a4 & 0x101010101FFLL, v9);
    return swift_release();
  }
  return result;
}

void sub_1003FC09C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v37 = a5;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100018BF8(v9, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = a3;
  id v15 = a3;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_retain();
  id v16 = (void *)TTRAccountsListsViewModel.remAccount(for:)();
  swift_release();
  if (v16)
  {
    v36[1] = a2;
    uint64_t v17 = v6[9];
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v19 = (void *)(*(uint64_t (**)(void *, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 72))(v16, v37, _swiftEmptyArrayStorage, 1, 512, ObjectType, v17);
    id v20 = [v19 sublistContext];
    if (v20)
    {
      id v21 = v20;
      id v22 = [v19 saveRequest];
      id v23 = [v22 updateAccount:v16];
      swift_retain();
      uint64_t v24 = TTRAccountsListsViewModel.remListsOrCustomSmartLists(in:)();
      swift_release();
      id v25 = v22;
      uint64_t v26 = sub_1004139A8(v24, v25);
      swift_bridgeObjectRelease();

      sub_100038D28(v6 + 14, v6[17]);
      id v27 = sub_100411F64(v23, v19, v21, (uint64_t)v26, (uint64_t)v6, 0);
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v29 = Strong;
        [Strong presentViewController:v27 animated:1 completion:0];

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRetain_n();
    id v30 = v15;
    char v31 = Logger.logObject.getter();
    uint64_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138412290;
      id v38 = v30;
      id v35 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v34 = v30;

      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v32, "Failed to find model account - Failed to add new group {account.objectID: %@}", v33, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

Class sub_1003FC594(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(*(void *)(v3 + 184) + direct field offset for TTRAccountsListsViewModel.accountsCapabilities);
  if ((*(void *)TTRAccountsListsViewModel.AccountsCapabilities.supportsTemplates.unsafeMutableAddressor() & ~v6) != 0) {
    return 0;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  char v8 = self;
  id v9 = [v8 _systemImageNamed:v7];

  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  v10._uint64_t countAndFlagsBits = 0x73694C2074696445;
  v10._object = (void *)0xEA00000000007374;
  v11._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v11._object = (void *)0x80000001006B9DC0;
  TTRLocalizedString(_:comment:)(v10, v11);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  id v13 = v9;
  swift_retain();
  id v14 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v8 _systemImageNamed:v15];

  v17._uint64_t countAndFlagsBits = 0x6574616C706D6554;
  v17._object = (void *)0xE900000000000073;
  v18._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v18._object = (void *)0x80000001006B9DC0;
  TTRLocalizedString(_:comment:)(v17, v18);
  swift_allocObject();
  swift_weakInit();
  id v19 = v16;
  id v20 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_1000368FC(0, &qword_1007894E0);
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v24.value.super.Class isa = 0;
  v24.is_nil = 0;
  v22.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v21, (Swift::String_optional)0, v24, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, 0).super.super.isa;

  return v22.super.super.isa;
}

void sub_1003FC928()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    swift_retain();
    uint64_t v2 = (void *)TTRAccountsListsViewModel.remAccountForTemplates.getter();
    swift_release();
    if (v2)
    {
      sub_100038D28((void *)(v1 + 112), *(void *)(v1 + 136));
      uint64_t v3 = swift_unknownObjectWeakLoadStrong();
      if (v3)
      {
        uint64_t v4 = (void *)v3;
        id v5 = sub_1005084A8(1, v2, v1, (uint64_t)&off_10074A528);
        id v6 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v5];
        [v6 setModalPresentationStyle:2];
        swift_unknownObjectRelease();

        [v4 presentViewController:v6 animated:1 completion:0];
        swift_release();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
}

double sub_1003FCA78@<D0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  id v5 = (void *)a1[2];
  uint64_t v6 = 256;
  if (!*((unsigned char *)a1 + 25)) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x10000;
  if (!*((unsigned char *)a1 + 26)) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 0x1000000;
  if (!*((unsigned char *)a1 + 27)) {
    uint64_t v8 = 0;
  }
  id v9 = &_mh_execute_header;
  if (!*((unsigned char *)a1 + 28)) {
    id v9 = 0;
  }
  uint64_t v10 = 0x10000000000;
  if (!*((unsigned char *)a1 + 29)) {
    uint64_t v10 = 0;
  }
  unint64_t v11 = v6 | *((unsigned __int8 *)a1 + 24) | v7 | v8 | (unint64_t)v9 | v10;
  swift_retain();
  uint64_t v12 = (void *)TTRAccountsListsViewModel.remAccount(for:)();
  swift_release();
  if (v12 && (id v13 = [v12 groupContext], v12, v13))
  {
    *a2 = v4;
    a2[1] = v3;
    a2[2] = v5;
    a2[3] = v11;
    a2[4] = v13;
    swift_bridgeObjectRetain();
    id v14 = v5;
  }
  else
  {
    a2[4] = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
  return result;
}

uint64_t sub_1003FCBA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000245E0(a1, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
    case 5u:
      char v6 = v4[217];
      char v7 = v4[216];
      char v8 = v4[148];
      char v9 = v4[147];
      char v10 = v4[146];
      char v11 = v4[145];
      char v12 = v4[144];
      char v13 = v4[120];
      uint64_t v15 = *((void *)v4 + 5);
      uint64_t v14 = *((void *)v4 + 6);
      uint64_t v16 = *((void *)v4 + 2);
      long long v17 = *(_OWORD *)v4;
      *(void *)&v18[0] = v16;
      *(_OWORD *)((char *)v18 + 8) = *(_OWORD *)(v4 + 24);
      *((void *)&v18[1] + 1) = v15;
      *(void *)&v19[0] = v14;
      *(_OWORD *)((char *)v19 + 8) = *(_OWORD *)(v4 + 56);
      *(_OWORD *)((char *)&v19[1] + 8) = *(_OWORD *)(v4 + 72);
      *(_OWORD *)((char *)&v19[2] + 8) = *(_OWORD *)(v4 + 88);
      *(_OWORD *)((char *)&v19[3] + 8) = *(_OWORD *)(v4 + 104);
      BYTE8(v19[4]) = v13;
      long long v20 = *((_OWORD *)v4 + 8);
      LOBYTE(v21[0]) = v12;
      BYTE1(v21[0]) = v11;
      BYTE2(v21[0]) = v10;
      BYTE3(v21[0]) = v9;
      BYTE4(v21[0]) = v8;
      *(_OWORD *)((char *)v21 + 8) = *(_OWORD *)(v4 + 152);
      *(_OWORD *)((char *)&v21[1] + 8) = *(_OWORD *)(v4 + 168);
      *(_OWORD *)((char *)&v21[2] + 8) = *(_OWORD *)(v4 + 184);
      *(_OWORD *)((char *)&v21[3] + 8) = *(_OWORD *)(v4 + 200);
      BYTE8(v21[4]) = v7;
      BYTE9(v21[4]) = v6;
      void v22[2] = v18[1];
      void v22[3] = v19[0];
      void v22[4] = v19[1];
      v22[5] = v19[2];
      v22[0] = v17;
      v22[1] = v18[0];
      v22[10] = v21[1];
      v22[11] = v21[2];
      v23[0] = v21[3];
      *(_OWORD *)((char *)v23 + 10) = *(_OWORD *)((char *)&v21[3] + 10);
      v22[8] = v20;
      v22[9] = v21[0];
      v22[6] = v19[3];
      v22[7] = v19[4];
      sub_1003FCDD8((uint64_t)v22);
      uint64_t result = sub_10003B798((uint64_t)&v17);
      break;
    default:
      uint64_t result = sub_100030930((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      break;
  }
  return result;
}

void sub_1003FCDD8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  char v10 = *(void **)a1;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v10;
  id v11 = v10;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_retain();
  char v12 = (void *)TTRAccountsListsViewModel.listOrCustomSmartList(for:)();
  char v14 = v13;
  int v15 = ~v13;
  swift_release();
  if (v15)
  {
    swift_retain();
    Swift::Bool v16 = TTRAccountsListsViewModel.exceedsMaximumNumberOfPinnedListsAdding(count:)(1);
    swift_release();
    if (v16)
    {
      sub_100409600();
      sub_100095434(v12, v14);
    }
    else
    {
      long long v20 = self;
      static TTRLocalizableStrings.UndoAction.pinList.getter();
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v22 = swift_allocObject();
      long long v23 = *(_OWORD *)(a1 + 176);
      *(_OWORD *)(v22 + 200) = *(_OWORD *)(a1 + 160);
      *(_OWORD *)(v22 + 216) = v23;
      *(_OWORD *)(v22 + 232) = *(_OWORD *)(a1 + 192);
      *(_OWORD *)(v22 + 242) = *(_OWORD *)(a1 + 202);
      long long v24 = *(_OWORD *)(a1 + 112);
      *(_OWORD *)(v22 + 136) = *(_OWORD *)(a1 + 96);
      *(_OWORD *)(v22 + 152) = v24;
      long long v25 = *(_OWORD *)(a1 + 144);
      *(_OWORD *)(v22 + 168) = *(_OWORD *)(a1 + 128);
      *(_OWORD *)(v22 + 184) = v25;
      long long v26 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v22 + 72) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v22 + 88) = v26;
      long long v27 = *(_OWORD *)(a1 + 80);
      *(_OWORD *)(v22 + 104) = *(_OWORD *)(a1 + 64);
      *(_OWORD *)(v22 + 120) = v27;
      long long v28 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v22 + 40) = *(_OWORD *)a1;
      *(void *)(v22 + 16) = v2;
      *(void *)(v22 + 24) = v12;
      *(unsigned char *)(v22 + 32) = v14 & 1;
      *(_OWORD *)(v22 + 56) = v28;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = sub_100419D28;
      *(void *)(v29 + 24) = v22;
      aBlock[4] = sub_1000499FC;
      aBlock[5] = v29;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100021888;
      aBlock[3] = &unk_10074B388;
      id v30 = _Block_copy(aBlock);
      swift_retain();
      sub_1000DFA7C(v12, v14);
      sub_1000326C4(a1);
      swift_retain();
      swift_release();
      [v20 withActionName:v21 block:v30];
      sub_100095434(v12, v14);

      _Block_release(v30);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
    }
  }
  else
  {
    long long v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to find listOrCustomSmartList to pin list", v19, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1003FD258(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  char v10 = *(void **)a1;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v10;
  id v11 = v10;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_retain();
  char v12 = (void *)TTRAccountsListsViewModel.listOrCustomSmartList(for:)();
  char v14 = v13;
  int v15 = ~v13;
  swift_release();
  if (v15)
  {
    Swift::Bool v16 = self;
    static TTRLocalizableStrings.UndoAction.unpinList.getter();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v18 = swift_allocObject();
    long long v19 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v18 + 200) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v18 + 216) = v19;
    *(_OWORD *)(v18 + 232) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v18 + 242) = *(_OWORD *)(a1 + 202);
    long long v20 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v18 + 136) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v18 + 152) = v20;
    long long v21 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v18 + 168) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v18 + 184) = v21;
    long long v22 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v18 + 72) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v18 + 88) = v22;
    long long v23 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v18 + 104) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v18 + 120) = v23;
    long long v24 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v18 + 40) = *(_OWORD *)a1;
    *(void *)(v18 + 16) = v2;
    *(void *)(v18 + 24) = v12;
    *(unsigned char *)(v18 + 32) = v14 & 1;
    *(_OWORD *)(v18 + 56) = v24;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_100419C5C;
    *(void *)(v25 + 24) = v18;
    aBlock[4] = sub_1000499FC;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021888;
    aBlock[3] = &unk_10074B310;
    long long v26 = _Block_copy(aBlock);
    swift_retain();
    sub_1000DFA7C(v12, v14);
    sub_1000326C4(a1);
    swift_retain();
    swift_release();
    [v16 withActionName:v17 block:v26];
    sub_100095434(v12, v14);

    _Block_release(v26);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  long long v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    id v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to find listOrCustomSmartList to unpin list", v30, 2u);
    swift_slowDealloc();
  }
}

void sub_1003FD69C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000245E0(a1, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:

      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 4u:
      long long v9 = *((_OWORD *)v4 + 11);
      long long v36 = *((_OWORD *)v4 + 10);
      long long v37 = v9;
      v38[0] = *((_OWORD *)v4 + 12);
      *(_OWORD *)((char *)v38 + 10) = *(_OWORD *)(v4 + 202);
      long long v10 = *((_OWORD *)v4 + 7);
      long long v32 = *((_OWORD *)v4 + 6);
      long long v33 = v10;
      long long v11 = *((_OWORD *)v4 + 9);
      long long v34 = *((_OWORD *)v4 + 8);
      long long v35 = v11;
      long long v12 = *((_OWORD *)v4 + 3);
      long long v28 = *((_OWORD *)v4 + 2);
      long long v29 = v12;
      long long v13 = *((_OWORD *)v4 + 5);
      long long v30 = *((_OWORD *)v4 + 4);
      long long v31 = v13;
      long long v14 = *((_OWORD *)v4 + 1);
      long long v26 = *(_OWORD *)v4;
      long long v27 = v14;
      int v15 = 0;
      goto LABEL_12;
    case 5u:
      long long v16 = *((_OWORD *)v4 + 11);
      long long v36 = *((_OWORD *)v4 + 10);
      long long v37 = v16;
      v38[0] = *((_OWORD *)v4 + 12);
      *(_OWORD *)((char *)v38 + 10) = *(_OWORD *)(v4 + 202);
      long long v17 = *((_OWORD *)v4 + 7);
      long long v32 = *((_OWORD *)v4 + 6);
      long long v33 = v17;
      long long v18 = *((_OWORD *)v4 + 9);
      long long v34 = *((_OWORD *)v4 + 8);
      long long v35 = v18;
      long long v19 = *((_OWORD *)v4 + 3);
      long long v28 = *((_OWORD *)v4 + 2);
      long long v29 = v19;
      long long v20 = *((_OWORD *)v4 + 5);
      long long v30 = *((_OWORD *)v4 + 4);
      long long v31 = v20;
      long long v21 = *((_OWORD *)v4 + 1);
      long long v26 = *(_OWORD *)v4;
      long long v27 = v21;
      int v15 = 1;
LABEL_12:
      sub_1003FD9C8((uint64_t)&v26, v15);
      sub_10003B798((uint64_t)&v26);
      return;
    case 6u:
      long long v22 = *((_OWORD *)v4 + 1);
      long long v26 = *(_OWORD *)v4;
      long long v23 = *((_OWORD *)v4 + 2);
      long long v24 = *((_OWORD *)v4 + 3);
      long long v27 = v22;
      long long v28 = v23;
      long long v29 = v24;
      sub_1003FE4AC((uint64_t)&v26);
      sub_1000953E8((uint64_t)&v26);
      return;
    case 8u:
      sub_100096424(*(void **)v4, *((void *)v4 + 1), *((void *)v4 + 2), *((void **)v4 + 3), *((void *)v4 + 4), *((void *)v4 + 5), *((void **)v4 + 6), *((void *)v4 + 7), *((void *)v4 + 8), *((void *)v4 + 9), *((void **)v4 + 10), v4[88]);
      goto LABEL_3;
    case 0xAu:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 0xDu:
      uint64_t v25 = *(void **)v4;
      swift_bridgeObjectRelease();

      goto LABEL_3;
    default:
      sub_100030930((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
LABEL_3:
      if (qword_100785570 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_100018BF8(v5, (uint64_t)qword_10079DFC8);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Trying to delete unexpected item", v8, 2u);
        swift_slowDealloc();
      }

      return;
  }
}

void sub_1003FD9C8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  long long v10 = (void *)sub_100018BF8(v6, (uint64_t)qword_10079DFC8);
  long long v11 = *(void (**)(char *))(v7 + 16);
  uint64_t v63 = v10;
  v11(v9);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  long long v13 = *(void **)a1;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 80) = 0xD000000000000011;
  LODWORD(v60) = a2;
  if (a2) {
    uint64_t v14 = 1702195828;
  }
  else {
    uint64_t v14 = 0x65736C6166;
  }
  if (a2) {
    unint64_t v15 = 0xE400000000000000;
  }
  else {
    unint64_t v15 = 0xE500000000000000;
  }
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 88) = 0x80000001006BA0C0;
  *(void *)(inited + 96) = v14;
  uint64_t v61 = v14;
  *(void *)(inited + 104) = v15;
  id v62 = v13;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10003B754(&qword_10078EA10);
  uint64_t v16 = *(void *)(type metadata accessor for TTRAccountsListsViewModel.Item() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10066C6F0;
  long long v19 = (_OWORD *)(v18 + v17);
  long long v20 = *(_OWORD *)(a1 + 176);
  v19[10] = *(_OWORD *)(a1 + 160);
  v19[11] = v20;
  v19[12] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v19 + 202) = *(_OWORD *)(a1 + 202);
  long long v21 = *(_OWORD *)(a1 + 112);
  v19[6] = *(_OWORD *)(a1 + 96);
  v19[7] = v21;
  long long v22 = *(_OWORD *)(a1 + 144);
  v19[8] = *(_OWORD *)(a1 + 128);
  v19[9] = v22;
  long long v23 = *(_OWORD *)(a1 + 48);
  long long v19[2] = *(_OWORD *)(a1 + 32);
  void v19[3] = v23;
  long long v24 = *(_OWORD *)(a1 + 80);
  void v19[4] = *(_OWORD *)(a1 + 64);
  _OWORD v19[5] = v24;
  long long v25 = *(_OWORD *)(a1 + 16);
  _OWORD *v19 = *(_OWORD *)a1;
  v19[1] = v25;
  swift_storeEnumTagMultiPayload();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_100038D28((void *)(Strong + 48), *(void *)(Strong + 72));
    sub_1000326C4(a1);
    swift_retain();
    sub_10034D540();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1000326C4(a1);
    swift_retain();
  }
  TTRAccountsListsInteractorDeleteArguments.init(items:viewModel:currentList:)();
  sub_100028C3C((uint64_t)&v67, (uint64_t)v68, &qword_10079E300);
  if (!*(void *)&v68[0])
  {
    sub_1000326C4(a1);
    sub_1000326C4(a1);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v63 = (void *)swift_slowAlloc();
      *(void *)&long long v69 = v63;
      *(_DWORD *)uint64_t v48 = 138412546;
      id v49 = v62;
      *(void *)&long long v64 = v62;
      id v50 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)uint64_t v60 = v49;
      sub_10003B798(a1);
      sub_10003B798(a1);
      *(_WORD *)(v48 + 12) = 2080;
      *(void *)&long long v64 = sub_1000385A8(v61, v15, (uint64_t *)&v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Failed to construct delete arguments for deleting list {list.objectID: %@, isCustomSmartList: %s}", (uint8_t *)v48, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_31:

      return;
    }
    goto LABEL_30;
  }
  long long v69 = v68[0];
  long long v70 = v68[1];
  long long v71 = v68[2];
  uint64_t v27 = swift_allocObject();
  uint64_t v61 = v3;
  swift_weakInit();
  uint64_t v72 = v69;
  long long v73 = v71;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v27;
  *(_OWORD *)(v28 + 24) = v69;
  long long v29 = v71;
  *(_OWORD *)(v28 + 40) = v70;
  *(_OWORD *)(v28 + 56) = v29;
  char v30 = BYTE8(v69);
  sub_100028CA0((uint64_t)&v72);
  sub_100028CA0((uint64_t)&v73);
  sub_100028CA0((uint64_t)&v73 + 8);
  if ((v30 & 1) == 0)
  {
    swift_retain();
    if ((static UIAccessibility.ttriIsAccessibilityRunning.getter() & 1) == 0)
    {
      sub_1003FECB4(v27, (uint64_t *)&v69);
      swift_release();
      swift_release();
      sub_10006A2C4((uint64_t)&v72);
      sub_10006A2C4((uint64_t)&v73);
      sub_10006A2C4((uint64_t)&v73 + 8);
      return;
    }
    swift_release();
  }
  long long v64 = v69;
  long long v65 = v70;
  long long v66 = v71;
  sub_100419B98();
  uint64_t v31 = TTRAccountsListsDeleteArgumentsType.allListsToDelete()();
  sub_10006A2C4((uint64_t)&v72);
  sub_10006A2C4((uint64_t)&v73);
  sub_10006A2C4((uint64_t)&v73 + 8);
  if (!*(void *)(v31 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1000326C4(a1);
    sub_1000326C4(a1);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    BOOL v52 = os_log_type_enabled(v46, v51);
    if (v60)
    {
      if (v52)
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v63 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 138412290;
        id v54 = v62;
        *(void *)&long long v64 = v62;
        id v55 = v62;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v63 = v54;
        sub_10003B798(a1);
        sub_10003B798(a1);
        os_log_type_t v56 = v51;
        uint64_t v57 = "Failed to find REMSmartList -- failed to delete list {list.objectID: %@}";
LABEL_28:
        _os_log_impl((void *)&_mh_execute_header, v46, v56, v57, v53, 0xCu);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();
        goto LABEL_31;
      }
    }
    else if (v52)
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 138412290;
      id v58 = v62;
      *(void *)&long long v64 = v62;
      id v59 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v63 = v58;
      sub_10003B798(a1);
      sub_10003B798(a1);
      os_log_type_t v56 = v51;
      uint64_t v57 = "Failed to find REMList -- failed to delete list {list.objectID: %@}";
      goto LABEL_28;
    }
    swift_release();
LABEL_30:
    sub_10003B798(a1);
    sub_10003B798(a1);
    goto LABEL_31;
  }
  long long v32 = *(void **)(v31 + 32);
  char v33 = *(unsigned char *)(v31 + 40);
  uint64_t v63 = v32;
  swift_bridgeObjectRelease();
  sub_1002BEBDC(v32, v33);
  sub_1002BEE24(v32, v33);
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v36 = [self alertControllerWithTitle:v34 message:v35 preferredStyle:1];

  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = self;
  id v39 = [v38 actionWithTitle:v37 style:1 handler:0];

  static TTRLocalizableStrings.Common.deleteButton.getter();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_100419B8C;
  *(void *)(v40 + 24) = v28;
  swift_retain();
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)&long long v66 = sub_10003F248;
  *((void *)&v66 + 1) = v40;
  *(void *)&long long v64 = _NSConcreteStackBlock;
  *((void *)&v64 + 1) = 1107296256;
  *(void *)&long long v65 = sub_1001077FC;
  *((void *)&v65 + 1) = &unk_10074B1F8;
  uint64_t v42 = _Block_copy(&v64);
  swift_release();
  id v43 = [v38 actionWithTitle:v41 style:2 handler:v42];
  _Block_release(v42);

  [v36 addAction:v39];
  [v36 addAction:v43];
  sub_100038D28((void *)(v61 + 112), *(void *)(v61 + 136));
  char v44 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v44)
  {
    char v45 = v44;
    [v44 presentViewController:v36 animated:1 completion:0];

    swift_release();
  }
  else
  {

    swift_release();
  }
}

void sub_1003FE4AC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10003B754(&qword_10078EA10);
  uint64_t v4 = *(void *)(type metadata accessor for TTRAccountsListsViewModel.Item() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10066C6F0;
  uint64_t v7 = (_OWORD *)(v6 + v5);
  long long v8 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v8;
  long long v9 = *(_OWORD *)(a1 + 16);
  _OWORD *v7 = *(_OWORD *)a1;
  v7[1] = v9;
  swift_storeEnumTagMultiPayload();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_100038D28((void *)(Strong + 48), *(void *)(Strong + 72));
    sub_100416C88(a1);
    swift_retain();
    sub_10034D540();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_100416C88(a1);
    swift_retain();
  }
  TTRAccountsListsInteractorDeleteArguments.init(items:viewModel:currentList:)();
  sub_100028C3C((uint64_t)v50, (uint64_t)v51, &qword_10079E300);
  if (!*(void *)&v51[0])
  {
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_100018BF8(v38, (uint64_t)qword_10079DFC8);
    sub_100416C88(a1);
    sub_100416C88(a1);
    NSString v37 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      NSString v41 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138412290;
      uint64_t v42 = *(void **)(a1 + 48);
      *(void *)&long long v52 = v42;
      id v43 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *NSString v41 = v42;
      sub_1000953E8(a1);
      sub_1000953E8(a1);
      _os_log_impl((void *)&_mh_execute_header, v37, v39, "Failed to construct delete arguments for deleting group {group.objectID: %@}", v40, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000953E8(a1);
      sub_1000953E8(a1);
    }
    goto LABEL_14;
  }
  long long v52 = v51[0];
  long long v53 = v51[1];
  long long v54 = v51[2];
  if (BYTE8(v51[0]) & 1) != 0 || (static UIAccessibility.ttriIsAccessibilityRunning.getter())
  {
    uint64_t v12 = *(void *)a1;
    uint64_t v11 = *(void *)(a1 + 8);
    swift_bridgeObjectRetain();
    v13._uint64_t countAndFlagsBits = 0xD000000000000031;
    v14._object = (void *)0x80000001006BA2D0;
    v13._object = (void *)0x80000001006BA2F0;
    v14._uint64_t countAndFlagsBits = 0x100000000000001ALL;
    TTRLocalizedString(_:comment:)(v14, v13);
    sub_10003B754((uint64_t *)&unk_100788EE0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_10066C6F0;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_1000965C8();
    *(void *)(v15 + 32) = v12;
    *(void *)(v15 + 40) = v11;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100419B98();
    TTRAccountsListsDeleteArgumentsType.allListsToDelete()();
    sub_1002BF2EC();
    swift_bridgeObjectRelease();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = [self alertControllerWithTitle:v16 message:v17 preferredStyle:1];

    static TTRLocalizableStrings.Common.alertCancelButton.getter();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    long long v20 = self;
    id v21 = [v20 actionWithTitle:v19 style:1 handler:0];

    [v18 addAction:v21];
    v22._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v23._object = (void *)0x80000001006BA330;
    v22._object = (void *)0x80000001006BA350;
    v23._uint64_t countAndFlagsBits = 0xD000000000000011;
    TTRLocalizedString(_:comment:)(v23, v22);
    uint64_t v55 = v52;
    long long v56 = v54;
    uint64_t v24 = swift_allocObject();
    long long v25 = v53;
    *(_OWORD *)(v24 + 16) = v52;
    *(_OWORD *)(v24 + 32) = v25;
    *(_OWORD *)(v24 + 48) = v54;
    *(void *)(v24 + 64) = v2;
    sub_100028CA0((uint64_t)&v55);
    sub_100028CA0((uint64_t)&v56);
    sub_100028CA0((uint64_t)&v56 + 8);
    swift_retain();
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_10041ABBC;
    uint64_t v49 = v24;
    aBlock = _NSConcreteStackBlock;
    uint64_t aBlock_8 = 1107296256;
    uint64_t v46 = sub_1001077FC;
    os_log_type_t v47 = &unk_10074B6D0;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_release();
    id v28 = [v20 actionWithTitle:v26 style:0 handler:v27];
    _Block_release(v27);

    v29._uint64_t countAndFlagsBits = 0xD000000000000016;
    v30._uint64_t countAndFlagsBits = 0xD000000000000023;
    v29._object = (void *)0x80000001006BA370;
    v30._object = (void *)0x80000001006BA390;
    TTRLocalizedString(_:comment:)(v29, v30);
    uint64_t v31 = swift_allocObject();
    long long v32 = v53;
    *(_OWORD *)(v31 + 16) = v52;
    *(_OWORD *)(v31 + 32) = v32;
    *(_OWORD *)(v31 + 48) = v54;
    *(void *)(v31 + 64) = v2;
    swift_retain();
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_10041AC20;
    uint64_t v49 = v31;
    aBlock = _NSConcreteStackBlock;
    uint64_t aBlock_8 = 1107296256;
    uint64_t v46 = sub_1001077FC;
    os_log_type_t v47 = &unk_10074B720;
    NSString v34 = _Block_copy(&aBlock);
    swift_release();
    id v35 = [v20 actionWithTitle:v33 style:2 handler:v34];
    _Block_release(v34);

    [v18 addAction:v28];
    [v18 addAction:v35];
    sub_100038D28((void *)(v2 + 112), *(void *)(v2 + 136));
    id v36 = swift_unknownObjectWeakLoadStrong();
    if (v36)
    {
      NSString v37 = v36;
      [v36 presentViewController:v18 animated:1 completion:0];

LABEL_14:
      return;
    }
  }
  else
  {
    sub_100401894(0, (uint64_t *)&v52, v1);
    *(void *)&long long v56 = v52;
    sub_10006A2C4((uint64_t)&v56);
    *((void *)&v56 + 1) = v54;
    sub_10006A2C4((uint64_t)&v56 + 8);
    aBlock = (void **)*((void *)&v54 + 1);
    sub_10006A2C4((uint64_t)&aBlock);
  }
}

uint64_t sub_1003FECB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100018BF8(v3, (uint64_t)qword_10079DFC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
    sub_10003B754((uint64_t *)&unk_100788E30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(void *)(inited + 32) = 0x746E656D75677261;
    *(void *)(inited + 40) = 0xE900000000000073;
    uint64_t v11 = TTRAccountsListsInteractorDeleteArguments.description.getter();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v11;
    *(void *)(inited + 56) = v12;
    sub_10003D820(inited);
    sub_10001A078();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    static TTRLocalizableStrings.AccountsList.deleteListUndoAction.getter();
    Swift::String v13 = self;
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v15 = *a2;
    uint64_t v16 = a2[5];
    uint64_t v24 = a2[4];
    uint64_t v25 = v15;
    uint64_t v23 = v16;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v8;
    long long v18 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(v17 + 24) = *(_OWORD *)a2;
    *(_OWORD *)(v17 + 40) = v18;
    *(_OWORD *)(v17 + 56) = *((_OWORD *)a2 + 2);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100419BF4;
    *(void *)(v19 + 24) = v17;
    aBlock[4] = sub_1000499FC;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021888;
    aBlock[3] = &unk_10074B270;
    long long v20 = _Block_copy(aBlock);
    swift_retain();
    sub_100028CA0((uint64_t)&v25);
    sub_100028CA0((uint64_t)&v24);
    sub_100028CA0((uint64_t)&v23);
    swift_retain();
    swift_release();
    [v13 withActionName:v14 block:v20];

    swift_release();
    _Block_release(v20);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1003FF038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t ObjectType = swift_getObjectType();
  v6._rawValue = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v14 = v7;
  v12[3] = &type metadata for TTRAccountsListsInteractorDeleteArguments;
  v12[4] = sub_100419B98();
  uint64_t v8 = (_OWORD *)swift_allocObject();
  v12[0] = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  v8[1] = *(_OWORD *)a2;
  void v8[2] = v9;
  v8[3] = *(_OWORD *)(a2 + 32);
  long long v10 = *(void (**)(void *, void, uint64_t, uint64_t))(v4 + 136);
  swift_bridgeObjectRetain();
  sub_100028CA0((uint64_t)&v14);
  sub_100028CA0((uint64_t)&v13);
  v10(v12, 0, ObjectType, v4);
  uint64_t result = sub_100038CD8((uint64_t)v12);
  if (*(uint64_t *)(a2 + 16) >= 1)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        sub_1004173F4(result);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      v12[0] = *(void *)(a1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
      type metadata accessor for TTRIPrivacyChecker();
      swift_retain();
      TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)(v6);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1003FF190(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((a1 & 1) == 0)
  {
    uint64_t v5 = 2;
    goto LABEL_6;
  }
  swift_retain();
  uint64_t v5 = 1;
  Swift::Bool v6 = TTRAccountsListsViewModel.exceedsMaximumNumberOfPinnedListsAdding(count:)(1);
  swift_release();
  if (!v6)
  {
LABEL_6:
    uint64_t v14 = *(void *)(v2 + 72);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 8) + 32))(v5, a2, ObjectType);
    return 1;
  }
  static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertTitle.getter();
  static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertMessage.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self alertControllerWithTitle:v7 message:v8 preferredStyle:1];

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [self actionWithTitle:v10 style:1 handler:0];

  [v9 addAction:v11];
  sub_100038D28((void *)(v3 + 112), *(void *)(v3 + 136));
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    [Strong presentViewController:v9 animated:1 completion:0];
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1003FF35C(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100026B84(a2, 1, a3 & 1, 1);
    return swift_release();
  }
  return result;
}

void sub_1003FF3D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000245E0(a1, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:

      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 4u:
    case 5u:
      long long v9 = *((_OWORD *)v4 + 11);
      long long v29 = *((_OWORD *)v4 + 10);
      long long v30 = v9;
      v31[0] = *((_OWORD *)v4 + 12);
      *(_OWORD *)((char *)v31 + 10) = *(_OWORD *)(v4 + 202);
      long long v10 = *((_OWORD *)v4 + 7);
      long long v25 = *((_OWORD *)v4 + 6);
      long long v26 = v10;
      long long v11 = *((_OWORD *)v4 + 9);
      long long v27 = *((_OWORD *)v4 + 8);
      long long v28 = v11;
      long long v12 = *((_OWORD *)v4 + 3);
      long long v21 = *((_OWORD *)v4 + 2);
      long long v22 = v12;
      long long v13 = *((_OWORD *)v4 + 5);
      long long v23 = *((_OWORD *)v4 + 4);
      long long v24 = v13;
      long long v14 = *((_OWORD *)v4 + 1);
      long long v19 = *(_OWORD *)v4;
      long long v20 = v14;
      sub_1003FF6AC((void **)&v19);
      sub_10003B798((uint64_t)&v19);
      return;
    case 6u:
      long long v15 = *((_OWORD *)v4 + 1);
      long long v19 = *(_OWORD *)v4;
      long long v16 = *((_OWORD *)v4 + 2);
      long long v17 = *((_OWORD *)v4 + 3);
      long long v20 = v15;
      long long v21 = v16;
      long long v22 = v17;
      sub_1003FFD84((uint64_t)&v19);
      sub_1000953E8((uint64_t)&v19);
      return;
    case 8u:
      sub_100096424(*(void **)v4, *((void *)v4 + 1), *((void *)v4 + 2), *((void **)v4 + 3), *((void *)v4 + 4), *((void *)v4 + 5), *((void **)v4 + 6), *((void *)v4 + 7), *((void *)v4 + 8), *((void *)v4 + 9), *((void **)v4 + 10), v4[88]);
      goto LABEL_3;
    case 0xAu:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 0xDu:
      long long v18 = *(void **)v4;
      swift_bridgeObjectRelease();

      goto LABEL_3;
    default:
      sub_100030930((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
LABEL_3:
      if (qword_100785570 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_100018BF8(v5, (uint64_t)qword_10079DFC8);
      Swift::Bool v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v6, v7))
      {
        NSString v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Trying to edit unexpected item", v8, 2u);
        swift_slowDealloc();
      }

      return;
  }
}

void sub_1003FF6AC(void **a1)
{
  uint64_t v45 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  uint64_t v2 = *(void *)(v45 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v45);
  id v43 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v44 = (char *)&v43 - v5;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100018BF8(v6, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  long long v12 = *a1;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v12;
  id v13 = v12;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_retain();
  long long v14 = (void *)TTRAccountsListsViewModel.remList(for:)();
  swift_release();
  if (v14)
  {
    long long v16 = v44;
    uint64_t v15 = v45;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v44, enum case for REMNavigationSpecifier.ListPathSpecifier.DetailSection.none(_:), v45);
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    long long v18 = v43;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v43, v16, v15);
    unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v17;
    *(void *)(v20 + 24) = v14;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v20 + v19, v18, v15);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_10041947C;
    *(void *)(v21 + 24) = v20;
    swift_retain();
    id v22 = v14;
    long long v23 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v16, v15);
    long long v24 = (uint64_t *)TTRITipKitSignalContext.AccountsList.SwipeCell.list.unsafeMutableAddressor();
LABEL_7:
    uint64_t v34 = *v24;
    id v35 = (void *)v24[1];
    swift_bridgeObjectRetain();
    v36.value._uint64_t countAndFlagsBits = v34;
    v36.value._object = v35;
    TTRITipKitSignal.donate(signalContext:)(v36);

    swift_bridgeObjectRelease();
    return;
  }
  swift_retain();
  long long v25 = (void *)TTRAccountsListsViewModel.remSmartList(for:)();
  swift_release();
  if (v25)
  {
    long long v27 = v44;
    uint64_t v26 = v45;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v44, enum case for REMNavigationSpecifier.ListPathSpecifier.DetailSection.none(_:), v45);
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    long long v29 = v43;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v43, v27, v26);
    unint64_t v30 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v28;
    *(void *)(v31 + 24) = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v31 + v30, v29, v26);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_100419460;
    *(void *)(v32 + 24) = v31;
    swift_retain();
    id v22 = v25;
    NSString v33 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v27, v26);
    long long v24 = (uint64_t *)TTRITipKitSignalContext.AccountsList.SwipeCell.smartList.unsafeMutableAddressor();
    goto LABEL_7;
  }
  NSString v37 = v13;
  sub_1000326C4((uint64_t)a1);
  sub_1000326C4((uint64_t)a1);
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    NSString v41 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 138412290;
    uint64_t v46 = v37;
    id v42 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *NSString v41 = v37;
    sub_10003B798((uint64_t)a1);
    sub_10003B798((uint64_t)a1);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Failed to find REMList or REMSmartList -- failed to edit list {list.objectID: %@}", v40, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10003B798((uint64_t)a1);
    sub_10003B798((uint64_t)a1);
  }
}

void sub_1003FFD84(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v10 = *(void **)(a1 + 48);
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v10;
  id v11 = v10;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_retain();
  long long v12 = TTRAccountsListsViewModel.remList(for:)();
  swift_release();
  if (!v12) {
    goto LABEL_11;
  }
  id v54 = v11;
  swift_retain();
  id v13 = [v12 account];
  id v14 = [v13 objectID];

  uint64_t v15 = TTRAccountsListsViewModel.account(with:)();
  uint64_t v17 = v16;
  unint64_t v19 = v18;
  uint64_t v21 = v20;
  swift_release();

  if (!v17)
  {
LABEL_10:

    id v11 = v54;
LABEL_11:
    sub_100416C88(a1);
    sub_100416C88(a1);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v36))
    {
      NSString v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = (void *)swift_slowAlloc();
      *(_DWORD *)NSString v37 = 138412290;
      id v55 = v11;
      id v39 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v38 = v11;
      sub_1000953E8(a1);
      sub_1000953E8(a1);
      _os_log_impl((void *)&_mh_execute_header, v26, v36, "Failed to find models group -- failed to edit group {group.objectID: %@}", v37, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000953E8(a1);
      sub_1000953E8(a1);
    }
    goto LABEL_19;
  }
  long long v53 = v12;
  swift_retain();
  id v22 = (void *)TTRAccountsListsViewModel.remAccount(for:)();
  swift_release();
  if (!v22)
  {
    sub_100234AFC(v15, v17, v19);
    long long v12 = v53;
    goto LABEL_10;
  }
  uint64_t v51 = v17;
  long long v52 = v19;
  uint64_t v50 = v21;
  uint64_t v23 = v2[9];
  uint64_t ObjectType = swift_getObjectType();
  long long v25 = (void *)(*(uint64_t (**)(NSObject *, uint64_t, uint64_t))(v23 + 104))(v53, ObjectType, v23);
  uint64_t v26 = [v25 saveRequest];
  id v27 = [v25 sublistContext];
  if (v27)
  {
    uint64_t v28 = v27;
    id v29 = [v26 updateAccount:v22];
    swift_retain();
    uint64_t v30 = TTRAccountsListsViewModel.remListsOrCustomSmartLists(in:)();
    swift_release();
    uint64_t v31 = v26;
    uint64_t v32 = sub_1004139A8(v30, v31);
    swift_bridgeObjectRelease();

    sub_100038D28(v2 + 14, v2[17]);
    id v33 = sub_100411F64(v29, v25, v28, (uint64_t)v32, (uint64_t)v2, 1);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v35 = Strong;
      [Strong presentViewController:v33 animated:1 completion:0];

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
    }

    sub_100234AFC(v15, v51, v52);
    uint64_t v26 = v53;
  }
  else
  {
    id v48 = v25;
    sub_100416C88(a1);
    sub_100416C88(a1);
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.fault.getter();
    os_log_t v49 = v40;
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = (uint8_t *)swift_slowAlloc();
      id v43 = (void *)swift_slowAlloc();
      *(_DWORD *)id v42 = 138412290;
      uint64_t v47 = v15;
      id v44 = v54;
      id v55 = v54;
      id v45 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v43 = v44;
      sub_1000953E8(a1);
      sub_1000953E8(a1);
      os_log_t v46 = v49;
      _os_log_impl((void *)&_mh_execute_header, v49, v41, "Tried to edit group without a sublist context {objectID: %@}", v42, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100234AFC(v47, v51, v52);
    }
    else
    {

      sub_100234AFC(v15, v51, v52);
      sub_1000953E8(a1);
      sub_1000953E8(a1);
      uint64_t v26 = v49;
    }
  }
LABEL_19:
}

void sub_10040048C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000245E0(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:

      goto LABEL_7;
    case 4u:
      long long v7 = *((_OWORD *)v6 + 11);
      long long v34 = *((_OWORD *)v6 + 10);
      long long v35 = v7;
      v36[0] = *((_OWORD *)v6 + 12);
      *(_OWORD *)((char *)v36 + 10) = *(_OWORD *)(v6 + 202);
      long long v8 = *((_OWORD *)v6 + 7);
      long long v30 = *((_OWORD *)v6 + 6);
      long long v31 = v8;
      long long v9 = *((_OWORD *)v6 + 9);
      long long v32 = *((_OWORD *)v6 + 8);
      long long v33 = v9;
      long long v10 = *((_OWORD *)v6 + 3);
      long long v26 = *((_OWORD *)v6 + 2);
      long long v27 = v10;
      long long v11 = *((_OWORD *)v6 + 5);
      long long v28 = *((_OWORD *)v6 + 4);
      long long v29 = v11;
      long long v12 = *((_OWORD *)v6 + 1);
      long long v24 = *(_OWORD *)v6;
      long long v25 = v12;
      sub_1004007BC((uint64_t)&v24, a2 & 1);
      sub_10003B798((uint64_t)&v24);
      return;
    case 5u:
      long long v13 = *((_OWORD *)v6 + 11);
      long long v34 = *((_OWORD *)v6 + 10);
      long long v35 = v13;
      v36[0] = *((_OWORD *)v6 + 12);
      *(_OWORD *)((char *)v36 + 10) = *(_OWORD *)(v6 + 202);
      long long v14 = *((_OWORD *)v6 + 7);
      long long v30 = *((_OWORD *)v6 + 6);
      long long v31 = v14;
      long long v15 = *((_OWORD *)v6 + 9);
      long long v32 = *((_OWORD *)v6 + 8);
      long long v33 = v15;
      long long v16 = *((_OWORD *)v6 + 3);
      long long v26 = *((_OWORD *)v6 + 2);
      long long v27 = v16;
      long long v17 = *((_OWORD *)v6 + 5);
      long long v28 = *((_OWORD *)v6 + 4);
      long long v29 = v17;
      long long v18 = *((_OWORD *)v6 + 1);
      long long v24 = *(_OWORD *)v6;
      long long v25 = v18;
      sub_10003B798((uint64_t)&v24);
      break;
    case 6u:

      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 8u:
      sub_100096424(*(void **)v6, *((void *)v6 + 1), *((void *)v6 + 2), *((void **)v6 + 3), *((void *)v6 + 4), *((void *)v6 + 5), *((void **)v6 + 6), *((void *)v6 + 7), *((void *)v6 + 8), *((void *)v6 + 9), *((void **)v6 + 10), v6[88]);
      break;
    case 0xAu:
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    case 0xDu:
      unint64_t v19 = *(void **)v6;
      swift_bridgeObjectRelease();

      break;
    default:
      sub_100030930((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      break;
  }
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100018BF8(v20, (uint64_t)qword_10079DFC8);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Trying to share unexpected item", v23, 2u);
    swift_slowDealloc();
  }
}

void sub_1004007BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v109 = *v2;
  uint64_t v6 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v110 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v115 = type metadata accessor for REMUserOperation();
  uint64_t isa = (uint64_t)v115[-1].isa;
  __chkstk_darwin(v115);
  uint64_t v108 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_10079E2C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v111 = (uint64_t)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v14 = (char *)&v105 - v13;
  __chkstk_darwin(v15);
  uint64_t v114 = (uint64_t)&v105 - v16;
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(a1 + 147) & 1) == 0)
  {
    if (qword_100785570 != -1) {
      swift_once();
    }
    sub_100018BF8(v17, (uint64_t)qword_10079DFC8);
    sub_1000326C4(a1);
    sub_1000326C4(a1);
    long long v115 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v115, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v22 = 138412290;
      id aBlock = *(id *)a1;
      id v24 = aBlock;
      id v25 = aBlock;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v24;
      sub_10003B798(a1);
      sub_10003B798(a1);
      long long v26 = "Cannot share list {list.objectID: %@}";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v115, v21, v26, v22, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
LABEL_19:
    sub_10003B798(a1);
    sub_10003B798(a1);
    id v48 = v115;

    return;
  }
  uint64_t v107 = v7;
  swift_retain();
  long long v27 = (void *)TTRAccountsListsViewModel.remList(for:)();
  swift_release();
  uint64_t v112 = v27;
  if (!v27)
  {
    if (qword_100785570 != -1) {
      swift_once();
    }
    sub_100018BF8(v17, (uint64_t)qword_10079DFC8);
    sub_1000326C4(a1);
    sub_1000326C4(a1);
    long long v115 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v115, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      id v45 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v22 = 138412290;
      id aBlock = *(id *)a1;
      id v46 = aBlock;
      id v47 = aBlock;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v45 = v46;
      sub_10003B798(a1);
      sub_10003B798(a1);
      long long v26 = "Failed to find REMList -- failed to edit list {list.objectID: %@}";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v106 = v6;
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_100018BF8(v17, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v28, v17);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v30 = *(id *)a1;
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v30;
  id v31 = v30;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v32 = isa;
  long long v33 = *(void (**)(uint64_t, uint64_t, uint64_t, NSObject *))(isa + 56);
  v33(v114, 1, 1, v115);
  id v34 = [v112 account];
  char v35 = REMAccount.listSharingUIType.getter();

  if (v35)
  {
    if (v35 == 1)
    {
      sub_100038D28(v3 + 14, v3[17]);
      os_log_type_t v36 = v112;
      sub_1004127A0(v112, (uint64_t)v3);
      unsigned int v37 = [v36 isShared];
      uint64_t v38 = v33;
      uint64_t v39 = v114;
      sub_10003B6F8(v114, &qword_10079E2C0);
      uint64_t v40 = enum case for REMSharedListUserOperationDetail.calDAVShare(_:);
      uint64_t v41 = type metadata accessor for REMSharedListUserOperationDetail();
      uint64_t v42 = *(void *)(v41 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v14, v40, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v14, 0, 1, v41);
      uint64_t v32 = isa;
      id v43 = (unsigned int *)&enum case for REMUserOperation.manageSharedList(_:);
      if (!v37) {
        id v43 = (unsigned int *)&enum case for REMUserOperation.startSharedList(_:);
      }
      id v44 = v115;
      (*(void (**)(char *, void, NSObject *))(isa + 104))(v14, *v43, v115);
      v38((uint64_t)v14, 0, 1, v44);
      sub_100028C3C((uint64_t)v14, v39, &qword_10079E2C0);
    }
    else
    {
      long long v69 = v112;
      long long v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        long long v73 = (void *)swift_slowAlloc();
        uint64_t v105 = v73;
        uint64_t v124 = swift_slowAlloc();
        *(_DWORD *)uint64_t v72 = 138412802;
        id v74 = [v69 objectID];
        id aBlock = v74;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v73 = v74;
        *(_WORD *)(v72 + 12) = 2080;
        id aBlock = 0;
        unint64_t v117 = 0xE000000000000000;
        id v75 = [v69 account];
        id v76 = [v75 type];

        id v123 = v76;
        type metadata accessor for REMAccountType(0);
        _print_unlocked<A, B>(_:_:)();
        id aBlock = (id)sub_1000385A8((uint64_t)aBlock, v117, &v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v72 + 22) = 2080;
        id aBlock = 0;
        unint64_t v117 = 0xE000000000000000;
        unsigned int v77 = [v69 canBeShared];
        BOOL v78 = v77 == 0;
        if (v77) {
          uint64_t v79 = 1702195828;
        }
        else {
          uint64_t v79 = 0x65736C6166;
        }
        if (v78) {
          unint64_t v80 = 0xE500000000000000;
        }
        else {
          unint64_t v80 = 0xE400000000000000;
        }
        unint64_t v81 = v80;
        String.append(_:)(*(Swift::String *)&v79);
        swift_bridgeObjectRelease();
        id aBlock = (id)sub_1000385A8((uint64_t)aBlock, v117, &v124);
        uint64_t v32 = isa;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Trying to share a list that doesn't support sharing. Probably list.canBeShared is wrong. {listID: %@, accountType: %s, canBeShared: %s}", (uint8_t *)v72, 0x20u);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v44 = v115;
      uint64_t v39 = v114;
    }
    goto LABEL_44;
  }
  os_log_t v49 = v33;
  if (![v112 isShared] || (a2 & 1) != 0)
  {
    sub_100038D28(v3 + 14, v3[17]);
    sub_100264588(v112);
    uint64_t v39 = v114;
    sub_10003B6F8(v114, &qword_10079E2C0);
    uint64_t v82 = enum case for REMSharedListUserOperationDetail.cloudKitShare(_:);
    uint64_t v83 = type metadata accessor for REMSharedListUserOperationDetail();
    uint64_t v84 = *(void *)(v83 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 104))(v39, v82, v83);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v39, 0, 1, v83);
    uint64_t v32 = isa;
    id v44 = v115;
    (*(void (**)(uint64_t, void, NSObject *))(isa + 104))(v39, enum case for REMUserOperation.startSharedList(_:), v115);
LABEL_43:
    v49(v39, 0, 1, v44);
    goto LABEL_44;
  }
  uint64_t v50 = (objc_class *)type metadata accessor for TTRIListSharingController();
  uint64_t v51 = (char *)objc_allocWithZone(v50);
  *(void *)&v51[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  long long v52 = v112;
  *(void *)&v51[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list] = v112;
  v122.receiver = v51;
  v122.super_class = v50;
  id v53 = v52;
  id v54 = [super init];
  id v55 = (void *)v3[19];
  v3[19] = v54;
  long long v56 = (char *)v54;

  *(void *)&v56[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate + 8] = &off_10074A3F0;
  swift_unknownObjectWeakAssign();
  id v57 = sub_1005E081C();
  id v44 = v115;
  uint64_t v39 = v114;
  if (v57)
  {
    id v58 = v57;
    sub_100038D28(v3 + 14, v3[17]);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v60 = Strong;
      id v61 = [Strong presentedViewController];
      if (v61)
      {
        id v62 = v61;
        uint64_t v63 = swift_allocObject();
        *(void *)(v63 + 16) = v60;
        *(void *)(v63 + 24) = v58;
        *(unsigned char *)(v63 + 32) = 1;
        long long v120 = sub_1001DC43C;
        uint64_t v121 = v63;
        id aBlock = _NSConcreteStackBlock;
        unint64_t v117 = 1107296256;
        long long v118 = sub_10000AD88;
        long long v119 = &unk_10074ADE8;
        long long v64 = v44;
        long long v65 = _Block_copy(&aBlock);
        id v66 = v60;
        id v67 = v58;
        swift_release();
        [v62 dismissViewControllerAnimated:1 completion:v65];

        uint64_t v68 = v65;
        id v44 = v64;
        _Block_release(v68);
      }
      else
      {
        [v60 presentViewController:v58 animated:1 completion:0];
      }
    }
    else
    {
    }
    sub_10003B6F8(v39, &qword_10079E2C0);
    uint64_t v85 = enum case for REMSharedListUserOperationDetail.cloudKitShare(_:);
    uint64_t v86 = type metadata accessor for REMSharedListUserOperationDetail();
    uint64_t v87 = *(void *)(v86 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 104))(v39, v85, v86);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v39, 0, 1, v86);
    uint64_t v32 = isa;
    (*(void (**)(uint64_t, void, NSObject *))(isa + 104))(v39, enum case for REMUserOperation.manageSharedList(_:), v44);
    goto LABEL_43;
  }

  uint64_t v32 = isa;
LABEL_44:
  uint64_t v88 = v111;
  sub_10003B694(v39, v111, &qword_10079E2C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, NSObject *))(v32 + 48))(v88, 1, v44) == 1)
  {
    sub_10003B6F8(v39, &qword_10079E2C0);

    uint64_t v89 = v88;
  }
  else
  {
    uint64_t v90 = v108;
    (*(void (**)(char *, uint64_t, NSObject *))(v32 + 32))(v108, v88, v44);
    type metadata accessor for REMAnalyticsManager();
    uint64_t isa = static REMAnalyticsManager.shared.getter();
    uint64_t v91 = sub_10003B754(&qword_100791F78);
    uint64_t v92 = v110;
    uint64_t v93 = v32;
    uint64_t v94 = (uint64_t *)&v110[*(int *)(v91 + 48)];
    uint64_t v95 = (uint64_t *)&v110[*(int *)(v91 + 80)];
    (*(void (**)(char *, char *, NSObject *))(v93 + 16))(v110, v90, v44);
    uint64_t v96 = (id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    id v97 = *v96;
    uint64_t v98 = TTRUserDefaults.activitySessionId.getter();
    uint64_t v100 = v99;

    *uint64_t v94 = v98;
    v94[1] = v100;
    id v101 = *v96;
    TTRUserDefaults.activitySessionBeginTime.getter();

    *uint64_t v95 = _typeName(_:qualified:)();
    v95[1] = v102;
    uint64_t v103 = v107;
    uint64_t v104 = v106;
    (*(void (**)(char *, void, uint64_t))(v107 + 104))(v92, enum case for REMAnalyticsEvent.userOperation(_:), v106);
    REMAnalyticsManager.post(event:)();

    swift_release();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v92, v104);
    (*(void (**)(char *, NSObject *))(v93 + 8))(v90, v115);
    uint64_t v89 = v114;
  }
  sub_10003B6F8(v89, &qword_10079E2C0);
}

uint64_t sub_100401894(char a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100018BF8(v6, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = 0x746E656D75677261;
  *(void *)(inited + 40) = 0xE900000000000073;
  *(void *)(inited + 48) = TTRAccountsListsInteractorDeleteArguments.description.getter();
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x7473694C7065656BLL;
  *(void *)(inited + 88) = 0xE900000000000073;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(unsigned char *)(inited + 96) = a1 & 1;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static TTRLocalizableStrings.UndoAction.deleteGroup.getter();
  uint64_t v13 = self;
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v15 = *a2;
  uint64_t v16 = a2[5];
  uint64_t v26 = a2[4];
  uint64_t v27 = v15;
  uint64_t v25 = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  long long v18 = *((_OWORD *)a2 + 1);
  *(_OWORD *)(v17 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v17 + 40) = v18;
  *(_OWORD *)(v17 + 56) = *((_OWORD *)a2 + 2);
  *(unsigned char *)(v17 + 72) = a1 & 1;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_10041AC94;
  *(void *)(v19 + 24) = v17;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_10074B798;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  sub_100028CA0((uint64_t)&v27);
  sub_100028CA0((uint64_t)&v26);
  sub_100028CA0((uint64_t)&v25);
  swift_retain();
  swift_release();
  [v13 withActionName:v14 block:v20];

  _Block_release(v20);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100401C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t ObjectType = swift_getObjectType();
  v8._rawValue = *(void **)a2;
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 40);
  uint64_t v16 = v9;
  void v14[3] = &type metadata for TTRAccountsListsInteractorDeleteArguments;
  v14[4] = sub_100419B98();
  uint64_t v10 = (_OWORD *)swift_allocObject();
  v14[0] = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  v10[1] = *(_OWORD *)a2;
  void v10[2] = v11;
  v10[3] = *(_OWORD *)(a2 + 32);
  uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v6 + 136);
  swift_bridgeObjectRetain();
  sub_100028CA0((uint64_t)&v16);
  sub_100028CA0((uint64_t)&v15);
  v12(v14, a3, ObjectType, v6);
  uint64_t result = sub_100038CD8((uint64_t)v14);
  if (*(uint64_t *)(a2 + 16) >= 1)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        sub_1004173F4(result);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      v14[0] = *(void *)(a1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
      type metadata accessor for TTRIPrivacyChecker();
      swift_retain();
      TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)(v8);
      return swift_release();
    }
  }
  return result;
}

void sub_100401D98(void *a1)
{
  uint64_t v3 = *v1;
  static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertTitle.getter();
  static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertMessage(withCount:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self alertControllerWithTitle:v4 message:v5 preferredStyle:1];

  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Swift::OpaquePointer v8 = self;
  id v9 = [v8 actionWithTitle:v7 style:1 handler:0];

  [v6 addAction:v9];
  static TTRLocalizableStrings.Common.alertDeleteButton.getter();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  long long v11 = (void *)swift_allocObject();
  long long v11[2] = v10;
  v11[3] = a1;
  v11[4] = v3;
  swift_retain();
  id v12 = a1;
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v18[4] = sub_100419554;
  _OWORD v18[5] = v11;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  _OWORD v18[2] = sub_1001077FC;
  v18[3] = &unk_10074AE88;
  NSString v14 = _Block_copy(v18);
  swift_release();
  id v15 = [v8 actionWithTitle:v13 style:2 handler:v14];
  _Block_release(v14);
  swift_release();

  [v6 addAction:v15];
  sub_100038D28(v1 + 14, v1[17]);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    [Strong presentViewController:v6 animated:1 completion:0];

    id v9 = v15;
    id v15 = v17;
  }
}

uint64_t sub_100402074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    id v12 = (void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    uint64_t v38 = a3;
    NSString v13 = *v12;
    type metadata accessor for REMAnalyticsManager();
    id v35 = v13;
    uint64_t v37 = static REMAnalyticsManager.shared.getter();
    uint64_t v14 = sub_10003B754(&qword_100791F78);
    uint64_t v15 = *(int *)(v14 + 48);
    uint64_t v36 = a4;
    uint64_t v16 = (uint64_t *)&v9[v15];
    uint64_t v17 = &v9[*(int *)(v14 + 80)];
    uint64_t v18 = enum case for REMRDLUserOperationDetail.rdl_permanentlyDeleteAll(_:);
    uint64_t v19 = type metadata accessor for REMRDLUserOperationDetail();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v9, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
    uint64_t v21 = enum case for REMUserOperation.permanentlyDeleteReminder(_:);
    uint64_t v22 = type metadata accessor for REMUserOperation();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v9, v21, v22);
    uint64_t v23 = v35;
    *uint64_t v16 = TTRUserDefaults.activitySessionId.getter();
    v16[1] = v24;
    TTRUserDefaults.activitySessionBeginTime.getter();
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    uint64_t v25 = _typeName(_:qualified:)();
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v39 = v25;
    unint64_t v40 = v27;
    v28._uint64_t countAndFlagsBits = 0x756F636341202D20;
    v28._object = (void *)0xEE007473694C746ELL;
    String.append(_:)(v28);
    unint64_t v29 = v40;
    *(void *)uint64_t v17 = v39;
    *((void *)v17 + 1) = v29;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for REMAnalyticsEvent.userOperation(_:), v6);
    REMAnalyticsManager.post(event:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v30 = *(void *)(v11 + 72);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v32 = *(void *)(v30 + 8);
    long long v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 72);
    swift_unknownObjectRetain();
    v33(v38, ObjectType, v32);
    swift_release();

    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1004023A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.SmartList();
  __chkstk_darwin(v2);
  NSString v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  __chkstk_darwin(v5);
  uint64_t v7 = (long long *)((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000245E0(a1, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v8 = v7[11];
    long long v41 = v7[10];
    long long v42 = v8;
    v43[0] = v7[12];
    *(_OWORD *)((char *)v43 + 10) = *(long long *)((char *)v7 + 202);
    long long v9 = v7[7];
    long long v37 = v7[6];
    long long v38 = v9;
    long long v10 = v7[9];
    long long v39 = v7[8];
    long long v40 = v10;
    long long v11 = v7[3];
    long long v33 = v7[2];
    long long v34 = v11;
    long long v12 = v7[5];
    long long v35 = v7[4];
    long long v36 = v12;
    long long v13 = v7[1];
    long long v31 = *v7;
    long long v32 = v13;
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    uint64_t v15 = swift_allocObject();
    long long v16 = v42;
    *(_OWORD *)(v15 + 184) = v41;
    *(_OWORD *)(v15 + 200) = v16;
    *(_OWORD *)(v15 + 216) = v43[0];
    *(_OWORD *)(v15 + 226) = *(_OWORD *)((char *)v43 + 10);
    long long v17 = v38;
    *(_OWORD *)(v15 + 120) = v37;
    *(_OWORD *)(v15 + 136) = v17;
    long long v18 = v40;
    *(_OWORD *)(v15 + 152) = v39;
    *(_OWORD *)(v15 + 168) = v18;
    long long v19 = v34;
    *(_OWORD *)(v15 + 56) = v33;
    *(_OWORD *)(v15 + 72) = v19;
    long long v20 = v36;
    *(_OWORD *)(v15 + 88) = v35;
    *(_OWORD *)(v15 + 104) = v20;
    long long v21 = v32;
    *(_OWORD *)(v15 + 24) = v31;
    *(void *)(v15 + 16) = v14;
    *(_OWORD *)(v15 + 40) = v21;
    uint64_t v22 = sub_100419D4C;
  }
  else
  {
    sub_1000400E4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    char v23 = v4[*(int *)(v2 + 20)];
    sub_100030930((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v24;
    *(unsigned char *)(v15 + 24) = v23;
    uint64_t v22 = sub_100419D58;
  }
  uint64_t v25 = v22;
  unint64_t v26 = self;
  v30[4] = v25;
  _OWORD v30[5] = v15;
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 1107296256;
  void v30[2] = sub_1001D0924;
  void v30[3] = &unk_10074B3D8;
  unint64_t v27 = _Block_copy(v30);
  swift_retain_n();
  swift_release();
  id v28 = [v26 configurationWithIdentifier:0 previewProvider:0 actionProvider:v27];
  swift_release();
  _Block_release(v27);
  swift_release();
  return v28;
}

UIMenu sub_100402700(uint64_t a1, uint64_t a2, char a3)
{
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  static TTRLocalizableStrings.AccountsList.hidePredefinedSmartListText.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self systemImageNamed:v4];

  uint64_t v6 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = a3;
  uint64_t v8 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1000368FC(0, &qword_1007894E0);
  uint64_t v9 = TTRListType.PredefinedSmartListType.longTitle.getter();
  long long v11 = v10;
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10066D470;
  *(void *)(v12 + 32) = v8;
  UIMenuElementSize preferredElementSize = v12;
  specialized Array._endMutation()();
  v13._uint64_t countAndFlagsBits = v9;
  v13._object = v11;
  v16.value.super.uint64_t isa = 0;
  v16.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v16, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0);
}

uint64_t sub_1004028F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(result + 72);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 8) + 32))(2, a3, ObjectType);
    return swift_release();
  }
  return result;
}

Class sub_100402988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  Class v4 = sub_1004029FC(a3, *(unsigned char *)(a3 + 216));
  swift_release();
  return v4;
}

Class sub_1004029FC(uint64_t a1, char a2)
{
  sub_100419834(a1 + 146, (uint64_t)&v83);
  sub_100419834((uint64_t)&v83, (uint64_t)&v84);
  if (v84 == 2)
  {
    if ((*(unsigned char *)(a1 + 145) & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    char v4 = v84 & 1;
    if (v84)
    {
      NSString v7 = String._bridgeToObjectiveC()();
      id v6 = [self _systemImageNamed:v7];

      static TTRLocalizableStrings.AccountsList.unpinText.getter();
    }
    else
    {
      NSString v5 = String._bridgeToObjectiveC()();
      id v6 = [self _systemImageNamed:v5];

      static TTRLocalizableStrings.AccountsList.pinText.getter();
    }
    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    uint64_t v9 = swift_allocObject();
    *(unsigned char *)(v9 + 16) = v4;
    *(void *)(v9 + 24) = v8;
    long long v10 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v9 + 192) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v9 + 208) = v10;
    *(_OWORD *)(v9 + 224) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v9 + 234) = *(_OWORD *)(a1 + 202);
    long long v11 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v9 + 128) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v9 + 144) = v11;
    long long v12 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v9 + 160) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v9 + 176) = v12;
    long long v13 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v9 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v9 + 80) = v13;
    long long v14 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v9 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v9 + 112) = v14;
    long long v15 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v9 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v9 + 48) = v15;
    id v16 = v6;
    sub_1000326C4(a1);
    id v17 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    if ((*(unsigned char *)(a1 + 145) & 1) == 0)
    {
LABEL_3:
      if ((*(unsigned char *)(a1 + 147) & 1) == 0) {
        goto LABEL_33;
      }
      goto LABEL_17;
    }
  }
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [self _systemImageNamed:v18];

  if (a2) {
    static TTRLocalizableStrings.AccountsList.showSmartListInfoText.getter();
  }
  else {
    static TTRLocalizableStrings.AccountsList.showListInfoText.getter();
  }
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = swift_allocObject();
  long long v22 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v21 + 184) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v21 + 200) = v22;
  *(_OWORD *)(v21 + 216) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v21 + 226) = *(_OWORD *)(a1 + 202);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v21 + 120) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v21 + 136) = v23;
  long long v24 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v21 + 152) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v21 + 168) = v24;
  long long v25 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v21 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v21 + 72) = v25;
  long long v26 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v21 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v21 + 104) = v26;
  long long v27 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v21 + 24) = *(_OWORD *)a1;
  *(void *)(v21 + 16) = v20;
  *(_OWORD *)(v21 + 40) = v27;
  sub_1000326C4(a1);
  id v28 = v19;
  id v29 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  if (*(unsigned char *)(a1 + 147))
  {
LABEL_17:
    char v82 = a2;
    char v30 = *(unsigned char *)(a1 + 148);
    if ((v30 & 1) == 0) {
      goto LABEL_21;
    }
    swift_retain();
    long long v31 = (void *)TTRAccountsListsViewModel.remList(for:)();
    swift_release();
    if (!v31) {
      goto LABEL_21;
    }
    id v32 = [v31 account];

    id v33 = [v32 accountTypeHost];
    LODWORD(v32) = [v33 isCalDav];

    if (v32)
    {
      v34._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v35._object = (void *)0x80000001006A6FF0;
      v34._object = (void *)0x80000001006BA090;
      v35._uint64_t countAndFlagsBits = 0xD000000000000012;
      TTRLocalizedString(_:comment:)(v35, v34);
      NSString v36 = String._bridgeToObjectiveC()();
      char v37 = 1;
    }
    else
    {
LABEL_21:
      v38._uint64_t countAndFlagsBits = 0xD000000000000025;
      v38._object = (void *)0x80000001006BA060;
      v39._uint64_t countAndFlagsBits = 0x694C206572616853;
      v39._object = (void *)0xEA00000000007473;
      TTRLocalizedString(_:comment:)(v39, v38);
      NSString v36 = String._bridgeToObjectiveC()();
      char v37 = 0;
    }
    id v40 = [self _systemImageNamed:v36];

    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    uint64_t v41 = swift_allocObject();
    swift_weakInit();
    uint64_t v42 = swift_allocObject();
    long long v43 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v42 + 184) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v42 + 200) = v43;
    *(_OWORD *)(v42 + 216) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v42 + 226) = *(_OWORD *)(a1 + 202);
    long long v44 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v42 + 120) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v42 + 136) = v44;
    long long v45 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v42 + 152) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v42 + 168) = v45;
    long long v46 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v42 + 56) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v42 + 72) = v46;
    long long v47 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v42 + 88) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v42 + 104) = v47;
    long long v48 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v42 + 24) = *(_OWORD *)a1;
    *(void *)(v42 + 16) = v41;
    *(_OWORD *)(v42 + 40) = v48;
    sub_1000326C4(a1);
    id v49 = v40;
    id v50 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (v30) {
      char v51 = v37;
    }
    else {
      char v51 = 1;
    }
    if (v51)
    {
      long long v52 = v49;
      id v49 = v50;
    }
    else
    {
      v53._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v54._object = (void *)0x80000001006A6FF0;
      v53._object = (void *)0x80000001006BA090;
      v54._uint64_t countAndFlagsBits = 0xD000000000000012;
      TTRLocalizedString(_:comment:)(v54, v53);
      NSString v55 = String._bridgeToObjectiveC()();
      id v56 = [self _systemImageNamed:v55];

      uint64_t v57 = swift_allocObject();
      swift_weakInit();
      uint64_t v58 = swift_allocObject();
      long long v59 = *(_OWORD *)(a1 + 176);
      *(_OWORD *)(v58 + 184) = *(_OWORD *)(a1 + 160);
      *(_OWORD *)(v58 + 200) = v59;
      *(_OWORD *)(v58 + 216) = *(_OWORD *)(a1 + 192);
      *(_OWORD *)(v58 + 226) = *(_OWORD *)(a1 + 202);
      long long v60 = *(_OWORD *)(a1 + 112);
      *(_OWORD *)(v58 + 120) = *(_OWORD *)(a1 + 96);
      *(_OWORD *)(v58 + 136) = v60;
      long long v61 = *(_OWORD *)(a1 + 144);
      *(_OWORD *)(v58 + 152) = *(_OWORD *)(a1 + 128);
      *(_OWORD *)(v58 + 168) = v61;
      long long v62 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v58 + 56) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v58 + 72) = v62;
      long long v63 = *(_OWORD *)(a1 + 80);
      *(_OWORD *)(v58 + 88) = *(_OWORD *)(a1 + 64);
      *(_OWORD *)(v58 + 104) = v63;
      long long v64 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v58 + 24) = *(_OWORD *)a1;
      *(void *)(v58 + 16) = v57;
      *(_OWORD *)(v58 + 40) = v64;
      sub_1000326C4(a1);
      id v65 = v56;
      id v66 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      long long v52 = v50;
    }

    a2 = v82;
  }
LABEL_33:
  NSString v67 = String._bridgeToObjectiveC()();
  id v68 = [self _systemImageNamed:v67];

  if (a2) {
    static TTRLocalizableStrings.RemindersList.deleteCustomSmartListActionText.getter();
  }
  else {
    static TTRLocalizableStrings.RemindersList.deleteListActionText.getter();
  }
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  uint64_t v69 = swift_allocObject();
  swift_weakInit();
  uint64_t v70 = swift_allocObject();
  long long v71 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v70 + 184) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v70 + 200) = v71;
  *(_OWORD *)(v70 + 216) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v70 + 226) = *(_OWORD *)(a1 + 202);
  long long v72 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v70 + 120) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v70 + 136) = v72;
  long long v73 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v70 + 152) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v70 + 168) = v73;
  long long v74 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v70 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v70 + 72) = v74;
  long long v75 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v70 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v70 + 104) = v75;
  long long v76 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v70 + 24) = *(_OWORD *)a1;
  *(void *)(v70 + 16) = v69;
  *(_OWORD *)(v70 + 40) = v76;
  sub_1000326C4(a1);
  id v77 = v68;
  id v78 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_1000368FC(0, &qword_1007894E0);
  v79._uint64_t countAndFlagsBits = 0;
  v79._object = (void *)0xE000000000000000;
  v85.value.super.Class isa = 0;
  v85.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v79, (Swift::String_optional)0, v85, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, (Swift::OpaquePointer)2).super.super.isa;

  return isa;
}

unint64_t sub_100403550(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.SmartList();
  __chkstk_darwin(v2);
  char v4 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  __chkstk_darwin(v5);
  NSString v7 = (long long *)((char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v98 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1000245E0(a1, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v8 = v7[10];
    long long v9 = v7[12];
    long long v110 = v7[11];
    *(_OWORD *)uint64_t v111 = v9;
    *(_OWORD *)&v111[10] = *(long long *)((char *)v7 + 202);
    long long v10 = v7[6];
    long long v11 = v7[8];
    long long v12 = v7[9];
    long long v106 = v7[7];
    long long v107 = v11;
    long long v108 = v12;
    long long v109 = v8;
    long long v13 = v7[3];
    long long v101 = v7[2];
    long long v102 = v13;
    long long v14 = v7[5];
    long long v103 = v7[4];
    long long v104 = v14;
    long long v105 = v10;
    long long v15 = v7[1];
    long long v99 = *v7;
    long long v100 = v15;
    sub_100419834((uint64_t)&v108 + 2, (uint64_t)&v112);
    sub_100419834((uint64_t)&v112, (uint64_t)v113);
    if (v113[0] == 2)
    {
      if ((BYTE1(v108) & 1) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      char v23 = v113[0] & 1;
      if (v113[0]) {
        static TTRLocalizableStrings.AccountsList.unpinText.getter();
      }
      else {
        static TTRLocalizableStrings.AccountsList.pinText.getter();
      }
      sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
      long long v24 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
      swift_bridgeObjectRelease();
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      uint64_t v26 = swift_allocObject();
      long long v27 = v110;
      long long v28 = *(_OWORD *)v111;
      long long v29 = v108;
      *(_OWORD *)(v26 + 192) = v109;
      *(_OWORD *)(v26 + 208) = v27;
      *(_OWORD *)(v26 + 224) = v28;
      *(_OWORD *)(v26 + 234) = *(_OWORD *)&v111[10];
      long long v30 = v106;
      long long v31 = v107;
      long long v32 = v104;
      *(_OWORD *)(v26 + 128) = v105;
      *(_OWORD *)(v26 + 144) = v30;
      *(void *)(v26 + 16) = v25;
      *(unsigned char *)(v26 + 24) = v23;
      *(_OWORD *)(v26 + 160) = v31;
      *(_OWORD *)(v26 + 176) = v29;
      long long v33 = v102;
      *(_OWORD *)(v26 + 64) = v101;
      *(_OWORD *)(v26 + 80) = v33;
      *(_OWORD *)(v26 + 96) = v103;
      *(_OWORD *)(v26 + 112) = v32;
      long long v34 = v100;
      *(_OWORD *)(v26 + 32) = v99;
      *(_OWORD *)(v26 + 48) = v34;
      id v35 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
      swift_retain();
      sub_1000326C4((uint64_t)&v99);
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v96 = sub_100419930;
      uint64_t v97 = v26;
      uint64_t v92 = _NSConcreteStackBlock;
      uint64_t v93 = 1107296256;
      uint64_t v94 = sub_10040FBBC;
      uint64_t v95 = &unk_10074AFA0;
      char v37 = _Block_copy(&v92);
      [v35 initWithName:v36 image:v24 actionHandler:v37];

      _Block_release(v37);
      swift_release();
      swift_release();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if ((BYTE1(v108) & 1) == 0)
      {
LABEL_4:
        if ((BYTE3(v108) & 1) == 0)
        {
LABEL_27:
          if (v111[24]) {
            static TTRLocalizableStrings.RemindersList.deleteCustomSmartListActionText.getter();
          }
          else {
            static TTRLocalizableStrings.RemindersList.deleteListActionText.getter();
          }
          sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
          id v78 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
          uint64_t v79 = swift_allocObject();
          swift_weakInit();
          uint64_t v80 = swift_allocObject();
          long long v81 = v108;
          *(_OWORD *)(v80 + 184) = v109;
          long long v82 = *(_OWORD *)v111;
          *(_OWORD *)(v80 + 200) = v110;
          *(_OWORD *)(v80 + 216) = v82;
          *(_OWORD *)(v80 + 226) = *(_OWORD *)&v111[10];
          long long v83 = v104;
          *(_OWORD *)(v80 + 120) = v105;
          long long v84 = v107;
          *(_OWORD *)(v80 + 136) = v106;
          *(_OWORD *)(v80 + 152) = v84;
          *(_OWORD *)(v80 + 168) = v81;
          long long v85 = v102;
          *(_OWORD *)(v80 + 56) = v101;
          *(_OWORD *)(v80 + 72) = v85;
          *(_OWORD *)(v80 + 88) = v103;
          *(_OWORD *)(v80 + 104) = v83;
          long long v86 = v100;
          *(_OWORD *)(v80 + 24) = v99;
          *(void *)(v80 + 16) = v79;
          *(_OWORD *)(v80 + 40) = v86;
          id v87 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          sub_1000326C4((uint64_t)&v99);
          swift_retain();
          NSString v88 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v96 = sub_100419944;
          uint64_t v97 = v80;
          uint64_t v92 = _NSConcreteStackBlock;
          uint64_t v93 = 1107296256;
          uint64_t v94 = sub_10040FBBC;
          uint64_t v95 = &unk_10074AFF0;
          uint64_t v89 = _Block_copy(&v92);
          [v87 initWithName:v88 image:v78 actionHandler:v89];

          _Block_release(v89);
          swift_release();
          swift_release();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          sub_10003B798((uint64_t)&v99);
          return v98;
        }
LABEL_21:
        v50._uint64_t countAndFlagsBits = 0xD000000000000025;
        v50._object = (void *)0x80000001006BA060;
        v51._uint64_t countAndFlagsBits = 0x694C206572616853;
        v51._object = (void *)0xEA00000000007473;
        TTRLocalizedString(_:comment:)(v51, v50);
        sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
        long long v52 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
        uint64_t v53 = swift_allocObject();
        swift_weakInit();
        uint64_t v54 = swift_allocObject();
        long long v55 = v108;
        *(_OWORD *)(v54 + 184) = v109;
        long long v56 = *(_OWORD *)v111;
        *(_OWORD *)(v54 + 200) = v110;
        *(_OWORD *)(v54 + 216) = v56;
        *(_OWORD *)(v54 + 226) = *(_OWORD *)&v111[10];
        long long v57 = v104;
        *(_OWORD *)(v54 + 120) = v105;
        long long v58 = v107;
        *(_OWORD *)(v54 + 136) = v106;
        *(_OWORD *)(v54 + 152) = v58;
        *(_OWORD *)(v54 + 168) = v55;
        long long v59 = v102;
        *(_OWORD *)(v54 + 56) = v101;
        *(_OWORD *)(v54 + 72) = v59;
        *(_OWORD *)(v54 + 88) = v103;
        *(_OWORD *)(v54 + 104) = v57;
        long long v60 = v100;
        *(_OWORD *)(v54 + 24) = v99;
        *(void *)(v54 + 16) = v53;
        *(_OWORD *)(v54 + 40) = v60;
        id v61 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
        sub_1000326C4((uint64_t)&v99);
        swift_retain();
        NSString v62 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v96 = sub_100419954;
        uint64_t v97 = v54;
        uint64_t v92 = _NSConcreteStackBlock;
        uint64_t v93 = 1107296256;
        uint64_t v94 = sub_10040FBBC;
        uint64_t v95 = &unk_10074B040;
        long long v63 = _Block_copy(&v92);
        [v61 initWithName:v62 image:v52 actionHandler:v63];

        _Block_release(v63);
        swift_release();
        swift_release();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        if (BYTE4(v108))
        {
          v64._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
          v65._object = (void *)0x80000001006A6FF0;
          v64._object = (void *)0x80000001006BA090;
          v65._uint64_t countAndFlagsBits = 0xD000000000000012;
          TTRLocalizedString(_:comment:)(v65, v64);
          id v66 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
          uint64_t v67 = swift_allocObject();
          swift_weakInit();
          uint64_t v68 = swift_allocObject();
          long long v69 = v108;
          *(_OWORD *)(v68 + 184) = v109;
          long long v70 = *(_OWORD *)v111;
          *(_OWORD *)(v68 + 200) = v110;
          *(_OWORD *)(v68 + 216) = v70;
          *(_OWORD *)(v68 + 226) = *(_OWORD *)&v111[10];
          long long v71 = v104;
          *(_OWORD *)(v68 + 120) = v105;
          long long v72 = v107;
          *(_OWORD *)(v68 + 136) = v106;
          *(_OWORD *)(v68 + 152) = v72;
          *(_OWORD *)(v68 + 168) = v69;
          long long v73 = v102;
          *(_OWORD *)(v68 + 56) = v101;
          *(_OWORD *)(v68 + 72) = v73;
          *(_OWORD *)(v68 + 88) = v103;
          *(_OWORD *)(v68 + 104) = v71;
          long long v74 = v100;
          *(_OWORD *)(v68 + 24) = v99;
          *(void *)(v68 + 16) = v67;
          *(_OWORD *)(v68 + 40) = v74;
          id v75 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          sub_1000326C4((uint64_t)&v99);
          swift_retain();
          NSString v76 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v96 = sub_100419998;
          uint64_t v97 = v68;
          uint64_t v92 = _NSConcreteStackBlock;
          uint64_t v93 = 1107296256;
          uint64_t v94 = sub_10040FBBC;
          uint64_t v95 = &unk_10074B090;
          id v77 = _Block_copy(&v92);
          [v75 initWithName:v76 image:v66 actionHandler:v77];

          _Block_release(v77);
          swift_release();
          swift_release();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        goto LABEL_27;
      }
    }
    if (v111[24]) {
      static TTRLocalizableStrings.AccountsList.showSmartListInfoText.getter();
    }
    else {
      static TTRLocalizableStrings.AccountsList.showListInfoText.getter();
    }
    sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
    Swift::String v38 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
    uint64_t v39 = swift_allocObject();
    swift_weakInit();
    uint64_t v40 = swift_allocObject();
    long long v41 = v108;
    *(_OWORD *)(v40 + 184) = v109;
    long long v42 = *(_OWORD *)v111;
    *(_OWORD *)(v40 + 200) = v110;
    *(_OWORD *)(v40 + 216) = v42;
    *(_OWORD *)(v40 + 226) = *(_OWORD *)&v111[10];
    long long v43 = v104;
    *(_OWORD *)(v40 + 120) = v105;
    long long v44 = v107;
    *(_OWORD *)(v40 + 136) = v106;
    *(_OWORD *)(v40 + 152) = v44;
    *(_OWORD *)(v40 + 168) = v41;
    long long v45 = v102;
    *(_OWORD *)(v40 + 56) = v101;
    *(_OWORD *)(v40 + 72) = v45;
    *(_OWORD *)(v40 + 88) = v103;
    *(_OWORD *)(v40 + 104) = v43;
    long long v46 = v100;
    *(_OWORD *)(v40 + 24) = v99;
    *(void *)(v40 + 16) = v39;
    *(_OWORD *)(v40 + 40) = v46;
    id v47 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    sub_1000326C4((uint64_t)&v99);
    swift_retain();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v96 = sub_1004199DC;
    uint64_t v97 = v40;
    uint64_t v92 = _NSConcreteStackBlock;
    uint64_t v93 = 1107296256;
    uint64_t v94 = sub_10040FBBC;
    uint64_t v95 = &unk_10074B0E0;
    id v49 = _Block_copy(&v92);
    [v47 initWithName:v48 image:v38 actionHandler:v49];

    _Block_release(v49);
    swift_release();
    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if ((BYTE3(v108) & 1) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
  sub_1000400E4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  char v16 = v4[*(int *)(v2 + 20)];
  static TTRLocalizableStrings.AccountsList.hidePredefinedSmartListText.getter();
  sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
  id v17 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(unsigned char *)(v19 + 24) = v16;
  id v20 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)&long long v101 = sub_1004199E8;
  *((void *)&v101 + 1) = v19;
  *(void *)&long long v99 = _NSConcreteStackBlock;
  *((void *)&v99 + 1) = 1107296256;
  *(void *)&long long v100 = sub_10040FBBC;
  *((void *)&v100 + 1) = &unk_10074B130;
  long long v22 = _Block_copy(&v99);
  [v20 initWithName:v21 image:v17 actionHandler:v22];

  _Block_release(v22);
  swift_release();
  swift_release();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_100030930((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  return v98;
}

BOOL sub_1004043EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v5 = Strong;
  if (Strong)
  {
    uint64_t v6 = *(void *)(Strong + 72);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + 32))(2, a3, ObjectType);
    swift_release();
  }
  return v5 != 0;
}

BOOL sub_100404484(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (a3) {
      sub_1003FD258(a4);
    }
    else {
      sub_1003FCDD8(a4);
    }
    swift_release();
  }
  return Strong != 0;
}

BOOL sub_100404504(uint64_t a1, uint64_t a2, void **a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1003FF6AC(a3);
    swift_release();
  }
  return Strong != 0;
}

uint64_t sub_10040456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_100404604, v7, v6);
}

uint64_t sub_100404604()
{
  v0[2] = *(void *)(v0[3] + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  uint64_t v2 = type metadata accessor for TTRIPrivacyChecker();
  *uint64_t v1 = v0;
  v1[1] = sub_1004046C8;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_1004046C8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10041BBEC, v3, v2);
}

BOOL sub_1004047E8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    type metadata accessor for MainActor();
    swift_retain();
    sub_1000326C4((uint64_t)a3);
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = swift_allocObject();
    long long v14 = a3[11];
    *(_OWORD *)(v13 + 200) = a3[10];
    *(_OWORD *)(v13 + 216) = v14;
    *(_OWORD *)(v13 + 232) = a3[12];
    *(_OWORD *)(v13 + 242) = *(_OWORD *)((char *)a3 + 202);
    long long v15 = a3[7];
    *(_OWORD *)(v13 + 136) = a3[6];
    *(_OWORD *)(v13 + 152) = v15;
    long long v16 = a3[9];
    *(_OWORD *)(v13 + 168) = a3[8];
    *(_OWORD *)(v13 + 184) = v16;
    long long v17 = a3[3];
    *(_OWORD *)(v13 + 72) = a3[2];
    *(_OWORD *)(v13 + 88) = v17;
    long long v18 = a3[5];
    *(_OWORD *)(v13 + 104) = a3[4];
    *(_OWORD *)(v13 + 120) = v18;
    long long v19 = a3[1];
    *(_OWORD *)(v13 + 40) = *a3;
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = &protocol witness table for MainActor;
    *(void *)(v13 + 32) = Strong;
    *(_OWORD *)(v13 + 56) = v19;
    sub_1000286A4((uint64_t)v9, a5, v13);
    swift_release();
    swift_release();
  }
  return Strong != 0;
}

uint64_t sub_10040499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_100404A34, v7, v6);
}

uint64_t sub_100404A34()
{
  v0[2] = *(void *)(v0[3] + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  uint64_t v2 = type metadata accessor for TTRIPrivacyChecker();
  *uint64_t v1 = v0;
  v1[1] = sub_100404AF8;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_100404AF8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10041BBF0, v3, v2);
}

BOOL sub_100404C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1003FD9C8(a3, *(unsigned __int8 *)(a3 + 216));
    swift_release();
  }
  return Strong != 0;
}

uint64_t sub_100404C84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  TTRAccountsListsPresenterCapability.paramsForCreatingGroup(byDropping:into:)();
  sub_10041A258((uint64_t)v14);
  sub_1000245E0(a2, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_100028C3C((uint64_t)v14, (uint64_t)v15, &qword_10079E358);
  if (sub_100096254(v15) == 1)
  {
    sub_1000245E0((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    uint64_t v10 = TTRAccountsListsPresenterCapability.paramsForMoving(_:into:atUnadjustedIndex:containerIsInEditMode:)();
    if (v10)
    {
      swift_beginAccess();
      char v11 = *(unsigned char *)(v10 + 24);
      swift_release();
      LOBYTE(v10) = v11 ^ 1;
    }
    sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_100788D10);
  }
  else
  {
    LOBYTE(v10) = 1;
  }
  sub_100030930((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return v10 & 1;
}

uint64_t sub_100404EBC()
{
  uint64_t v1 = v0;
  TTRAccountsListsPresenterCapability.paramsForCreatingGroup(byDropping:into:)();
  sub_100028C3C((uint64_t)v33, (uint64_t)v38, &qword_10079E358);
  if (sub_100096254((uint64_t *)v38) == 1) {
    return 0;
  }
  long long v52 = v38[12];
  long long v53 = v38[13];
  uint64_t v54 = v39;
  long long v48 = v38[8];
  long long v49 = v38[9];
  long long v50 = v38[10];
  long long v51 = v38[11];
  long long v44 = v38[4];
  long long v45 = v38[5];
  long long v46 = v38[6];
  long long v47 = v38[7];
  long long v40 = v38[0];
  long long v41 = v38[1];
  long long v42 = v38[2];
  long long v43 = v38[3];
  TTRAccountsListsPresenterCapability.groupCreationParams(for:)();
  uint64_t v3 = (void *)v34[0];
  uint64_t v2 = (void *)v34[1];
  uint64_t v5 = (void *)v34[2];
  char v4 = v35;
  uint64_t v6 = v36;
  sub_100028C3C((uint64_t)v34, (uint64_t)v37, &qword_10079E378);
  if (v37[40])
  {
    sub_10041A4F0();
    swift_willThrowTypedImpl();
LABEL_9:
    sub_10041A258((uint64_t)v33);
    return 0;
  }
  swift_retain();
  id v7 = [v3 objectID];
  uint64_t v30 = TTRAccountsListsViewModel.account(with:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();

  if (!v9)
  {
    swift_bridgeObjectRelease();

    goto LABEL_9;
  }
  uint64_t v27 = v9;
  long long v31 = v11;
  uint64_t v12 = v1[9];
  uint64_t ObjectType = swift_getObjectType();
  long long v28 = *(uint64_t (**)(void *, void *, uint64_t, void *, void, uint64_t, uint64_t))(v12 + 72);
  uint64_t v29 = ObjectType;
  id v14 = v5;
  long long v32 = v3;
  long long v15 = (void *)v28(v3, v2, v6, v5, v4 & 1, v29, v12);

  uint64_t result = (uint64_t)[v15 sublistContext];
  if (result)
  {
    long long v17 = (void *)result;
    id v18 = [v15 saveRequest];
    id v19 = [v18 updateAccount:v32];
    swift_retain();
    uint64_t v20 = TTRAccountsListsViewModel.remListsOrCustomSmartLists(in:)();
    swift_release();
    id v21 = v18;
    long long v22 = sub_1004139A8(v20, v21);
    swift_bridgeObjectRelease();

    sub_100038D28(v1 + 14, v1[17]);
    id v23 = sub_100411F64(v19, v15, v17, (uint64_t)v22, (uint64_t)v1, 0);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v25 = Strong;
      uint64_t v26 = 1;
      [Strong presentViewController:v23 animated:1 completion:0];

      sub_10041A258((uint64_t)v33);
      sub_100234AFC(v30, v27, v31);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10041A258((uint64_t)v33);
      sub_100234AFC(v30, v27, v31);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return 1;
    }
    return v26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004052E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v40 = a5;
  uint64_t v6 = sub_10003B754(&qword_10079E360);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v41 = v5;
  long long v42 = &v39[-v14];
  uint64_t v15 = TTRAccountsListsPresenterCapability.paramsForMoving(_:into:atUnadjustedIndex:containerIsInEditMode:)();
  if (!v15) {
    goto LABEL_7;
  }
  uint64_t v16 = v15;
  swift_beginAccess();
  if ((*(unsigned char *)(v16 + 24) & 1) != 0
    || (unint64_t v17 = (unint64_t)TTRAccountsListsPresenterCapability.RemindersInsertionPlan.generateOptimisticMoves()()) == 0)
  {
    swift_release();
    goto LABEL_7;
  }
  v18._rawValue = (void *)v17;
  TTRAccountsListsPresenterCapability.RemindersInsertionPlan.generateParamsForSaving()();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_10003B6F8((uint64_t)v8, &qword_10079E360);
LABEL_7:
    char v19 = 0;
    return v19 & 1;
  }
  id v21 = v42;
  sub_1000400E4((uint64_t)v8, (uint64_t)v42, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
  sub_1000245E0((uint64_t)v21, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v26 = *(void *)v13;
      uint64_t v27 = *((void *)v13 + 1);
      uint64_t v28 = *((void *)v13 + 2);
      __int16 v29 = *((_WORD *)v13 + 12);
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v26;
      *(void *)(v30 + 24) = v41;
      *(void *)(v30 + 32) = v27;
      *(void *)(v30 + 40) = v28;
      *(_WORD *)(v30 + 48) = v29;
      swift_retain();
      uint64_t v25 = sub_10041A478;
      break;
    case 2u:
      uint64_t v31 = *(void *)v13;
      uint64_t v32 = *((void *)v13 + 1);
      uint64_t v33 = *((void *)v13 + 2);
      __int16 v34 = *((_WORD *)v13 + 12);
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v31;
      *(void *)(v35 + 24) = v41;
      *(void *)(v35 + 32) = v32;
      *(void *)(v35 + 40) = v33;
      *(_WORD *)(v35 + 48) = v34;
      swift_retain();
      uint64_t v25 = sub_10041A404;
      break;
    case 3u:
      sub_100030930((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    default:
      uint64_t v22 = *(void *)v13;
      uint64_t v23 = (uint64_t)&v13[*(int *)(sub_10003B754(&qword_10079E368) + 48)];
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v22;
      *(void *)(v24 + 24) = v41;
      swift_retain();
      sub_10003B6F8(v23, &qword_10079E370);
      uint64_t v25 = sub_10041A4E8;
      break;
  }
  uint64_t v36 = v25;
  if (*((void *)v18._rawValue + 2))
  {
    swift_retain();
    TTRAccountsListsViewModel.performMoves(_:)(v18);
    swift_release();
    if ((v40 & 1) != 0 || !swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v38 = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = swift_retain();
      sub_1000842AC(v37);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v38 = swift_unknownObjectRelease();
    }
    char v19 = ((uint64_t (*)(uint64_t))v36)(v38);
    swift_release();
    swift_release();
    sub_100030930((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100030930((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
    char v19 = 1;
  }
  return v19 & 1;
}

uint64_t sub_100405794(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v40 = a5;
  int v37 = a4;
  uint64_t v38 = sub_10003B754(&qword_100788F28);
  uint64_t v8 = __chkstk_darwin(v38);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100018BF8(v16, (uint64_t)qword_10079DFC8);
  id v21 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v35 = v16;
  v21(v19, v20, v16);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100671350;
  *(void *)(inited + 32) = 1835365481;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v23 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v39 = a1;
  *(void *)(inited + 48) = Array.description.getter();
  *(void *)(inited + 56) = v24;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 49;
  *(void *)(inited + 88) = 0xE100000000000000;
  uint64_t v36 = a2;
  sub_10003B694(a2, (uint64_t)v15, (uint64_t *)&unk_100788D10);
  uint64_t v25 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v23) == 1)
  {
    sub_10003B6F8((uint64_t)v15, (uint64_t *)&unk_100788D10);
    uint64_t v26 = (uint64_t *)(inited + 96);
    *(void *)(inited + 120) = &type metadata for String;
  }
  else
  {
    uint64_t v34 = a3;
    sub_10041AA58(&qword_10079CA78, (void (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item);
    uint64_t v27 = TTRTreeStorageItem.treeItemDescription.getter();
    unint64_t v29 = v28;
    sub_100030930((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    uint64_t v26 = (uint64_t *)(inited + 96);
    *(void *)(inited + 120) = &type metadata for String;
    if (v29)
    {
      uint64_t *v26 = v27;
      a3 = v34;
      goto LABEL_9;
    }
    a3 = v34;
  }
  uint64_t *v26 = 7104878;
  unint64_t v29 = 0xE300000000000000;
LABEL_9:
  *(void *)(inited + 104) = v29;
  *(void *)(inited + 128) = 50;
  *(void *)(inited + 136) = 0xE100000000000000;
  *(void *)(inited + 168) = &type metadata for Int;
  *(void *)(inited + 144) = a3;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v35);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v10, 1, 1, v23);
  sub_10041A544(v36, (uint64_t)v10);
  uint64_t v30 = v38;
  *(void *)&v10[*(int *)(v38 + 36)] = a3;
  sub_100028C3C((uint64_t)v10, (uint64_t)v12, &qword_100788F28);
  uint64_t v31 = v39;
  if (v37)
  {
    swift_retain();
    TTRAccountsListsViewModel.unadjustInsertionLocation(_:forMoving:)();
    swift_release();
    sub_10003B6F8((uint64_t)v12, &qword_100788F28);
    sub_100028C3C((uint64_t)v10, (uint64_t)v12, &qword_100788F28);
  }
  sub_1004052E4(v31, (uint64_t)v12, *(void *)&v12[*(int *)(v30 + 36)], 0, v40 & 1);
  return sub_10003B6F8((uint64_t)v12, &qword_100788F28);
}

void sub_100405CA4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v6);
  uint64_t v8 = (long long *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (sub_1004E34D8(a1))
  {
    sub_1000245E0(a2, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      long long v9 = v8[11];
      long long v40 = v8[10];
      long long v41 = v9;
      v42[0] = v8[12];
      *(_OWORD *)((char *)v42 + 10) = *(long long *)((char *)v8 + 202);
      long long v10 = v8[7];
      long long v36 = v8[6];
      long long v37 = v10;
      long long v11 = v8[9];
      long long v38 = v8[8];
      long long v39 = v11;
      long long v12 = v8[3];
      long long v32 = v8[2];
      long long v33 = v12;
      long long v13 = v8[5];
      long long v34 = v8[4];
      long long v35 = v13;
      long long v14 = v8[1];
      long long v30 = *v8;
      long long v31 = v14;
      swift_retain();
      uint64_t v15 = (void *)TTRAccountsListsViewModel.remList(for:)();
      sub_10003B798((uint64_t)&v30);
      swift_release();
      if (v15)
      {
        unsigned __int8 v16 = 0;
LABEL_11:
        TTRMoveRemindersToListPresenterCapability.paramsForDropping(_:into:reminderForDragItem:)();
        long long v24 = v26[15];
        long long v25 = v26[14];
        char v19 = v27;
        sub_100065740(v15, v16);
        long long v20 = v24;
        long long v18 = v25;
        goto LABEL_13;
      }
    }
    else
    {
      sub_100030930((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    }
    long long v18 = 0uLL;
    char v19 = -1;
    long long v20 = 0uLL;
  }
  else
  {
    TTRAccountsListsViewModel.Item.listOrCustomSmartList.getter();
    sub_100028C3C((uint64_t)v26, (uint64_t)v28, &qword_100788E78);
    int v17 = sub_100096254((uint64_t *)v28);
    long long v18 = 0uLL;
    char v19 = -1;
    if (v17 != 1)
    {
      long long v40 = v28[10];
      long long v41 = v28[11];
      v42[0] = v29[0];
      *(_OWORD *)((char *)v42 + 10) = *(_OWORD *)((char *)v29 + 10);
      long long v36 = v28[6];
      long long v37 = v28[7];
      long long v38 = v28[8];
      long long v39 = v28[9];
      long long v32 = v28[2];
      long long v33 = v28[3];
      long long v34 = v28[4];
      long long v35 = v28[5];
      long long v30 = v28[0];
      long long v31 = v28[1];
      swift_retain();
      TTRAccountsListsViewModel.listOrCustomSmartList(for:)();
      int v22 = ~v21;
      sub_100417B60((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1000962F0);
      swift_release();
      if (!v22)
      {
        long long v20 = 0uLL;
        long long v18 = 0uLL;
        goto LABEL_13;
      }
      sub_1000368FC(0, (unint64_t *)&qword_100791B50);
      uint64_t v15 = (void *)TTRMoveRemindersToListPresenterCapability.TargetList.init(listOrCustomSmartList:)();
      unsigned __int8 v16 = v23;
      goto LABEL_11;
    }
    long long v20 = 0uLL;
  }
LABEL_13:
  *(_OWORD *)a3 = v18;
  *(_OWORD *)(a3 + 16) = v20;
  *(unsigned char *)(a3 + 32) = v19;
}

void *sub_100405F94(uint64_t a1, uint64_t a2)
{
  return sub_100406340(a1, a2, (uint64_t)"Accounts lists drop reminder(s) into list {target: %@}", 54, (uint64_t (*)(unsigned char *))sub_100405FB8);
}

uint64_t sub_100405FB8(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100028C3C(a1, (uint64_t)&v29, &qword_100788F00);
  char v4 = v29;
  sub_100028C3C(a1, (uint64_t)&v30, &qword_100788F00);
  if (!v33)
  {
    unsigned __int8 v16 = v30;
    uint64_t v17 = *((void *)&v31 + 1);
    uint64_t v15 = v31;
    uint64_t v18 = *(void *)(v2 + 72);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v20 = *(void *)(v18 + 8);
    char v21 = *(void (**)(uint64_t, void *, void, uint64_t, uint64_t))(v20 + 56);
    sub_1004196C4(a1, (void (*)(void, void, void, void, void))sub_100419634);
    id v22 = v16;
    v21(v17, v16, 0, ObjectType, v20);

    swift_bridgeObjectRetain();
    sub_1004196C4(a1, (void (*)(void, void, void, void, void))sub_100096668);
    return v15;
  }
  if (v33 != 1)
  {
    uint64_t v23 = *((void *)&v31 + 1);
    uint64_t v15 = v31;
    uint64_t v24 = *(void *)(v1 + 72);
    uint64_t v25 = v30;
    uint64_t v26 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 8) + 48))(v23, v25, v26);
    swift_bridgeObjectRetain();
    return v15;
  }
  uint64_t v5 = v30;
  uint64_t v6 = v32;
  id v7 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v27 = v31;
  TTRMoveRemindersToListPresenterCapability.showSmartListAddInfoAlertIfNeeded(_:)();
  static TTRLocalizableStrings.UndoAction.dropOnCustomSmartList.getter();
  uint64_t v8 = self;
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  *(void *)(v10 + 24) = v5;
  *(_OWORD *)(v10 + 32) = v27;
  *(void *)(v10 + 48) = v6;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1004195C0;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_10074AF00;
  long long v12 = _Block_copy(aBlock);
  sub_1004196C4(a1, (void (*)(void, void, void, void, void))sub_100419634);
  swift_retain();
  swift_retain();
  swift_release();
  [v8 withActionName:v9 block:v12];

  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v15 = v27;
    swift_bridgeObjectRetain();
    sub_1004196C4(a1, (void (*)(void, void, void, void, void))sub_100096668);
    swift_release();
    return v15;
  }
  __break(1u);
  return result;
}

void *sub_10040631C(uint64_t a1, uint64_t a2)
{
  return sub_100406340(a1, a2, (uint64_t)"Accounts lists drop deleted reminder(s) into list for recovery {target: %@}", 75, (uint64_t (*)(unsigned char *))sub_1004065E4);
}

void *sub_100406340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unsigned char *))
{
  uint64_t v18 = a5;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100018BF8(v7, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x746567726174;
  *(void *)(inited + 40) = 0xE600000000000000;
  type metadata accessor for TTRAccountsListsViewModel.Item();
  sub_10041AA58(&qword_10079CA78, (void (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item);
  uint64_t v13 = TTRTreeStorageItem.treeItemDescription.getter();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 56) = v14;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100405CA4(a1, a2, (uint64_t)v19);
  sub_100028C3C((uint64_t)v19, (uint64_t)v20, &qword_10079A090);
  if (v20[32] == 255) {
    return _swiftEmptyArrayStorage;
  }
  sub_100028C3C((uint64_t)v20, (uint64_t)v21, &qword_100788F00);
  uint64_t v15 = v18(v21);
  sub_1004196C4((uint64_t)v19, (void (*)(void, void, void, void, void))sub_100096654);
  return (void *)v15;
}

void *sub_1004065E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100028C3C(a1, (uint64_t)v33, &qword_100788F00);
  if (v34) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v30 = v4;
  id v9 = v33[1];
  id v31 = v33[2];
  id v32 = v33[0];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v28 = v10;
  uint64_t v29 = static REMAnalyticsManager.shared.getter();
  uint64_t v11 = (int *)sub_10003B754(&qword_100791F78);
  long long v12 = (uint64_t *)&v8[v11[12]];
  v27[1] = &v8[v11[16]];
  uint64_t v13 = (uint64_t *)&v8[v11[20]];
  uint64_t v14 = enum case for REMRDLUserOperationDetail.rdl_dragToRecover(_:);
  uint64_t v15 = type metadata accessor for REMRDLUserOperationDetail();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v8, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  uint64_t v17 = enum case for REMUserOperation.recoverReminder(_:);
  uint64_t v18 = type metadata accessor for REMUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v8, v17, v18);
  char v19 = v28;
  *long long v12 = TTRUserDefaults.activitySessionId.getter();
  v12[1] = v20;
  TTRUserDefaults.activitySessionBeginTime.getter();
  uint64_t *v13 = _typeName(_:qualified:)();
  v13[1] = v21;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for REMAnalyticsEvent.userOperation(_:), v5);
  REMAnalyticsManager.post(event:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v22 = v2[9];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v24 = *(void (**)(id, id, uint64_t))(*(void *)(v22 + 8) + 64);
  uint64_t v25 = v32;
  v24(v31, v32, ObjectType);
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_1004068FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100018BF8(v8, (uint64_t)qword_10079DFC8);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1004E34D8(a1);
  if ((result & 1) == 0)
  {
    aBlock[0] = a1;
    sub_10003B754(&qword_100798568);
    sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
    sub_10041A1B4((unint64_t *)&qword_100798578, &qword_100798568);
    uint64_t result = Sequence.completeCompactMap<A>(_:)();
    if (result)
    {
      uint64_t v10 = result;
      static TTRLocalizableStrings.UndoAction.hashtagsChange.getter();
      uint64_t v11 = self;
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v13 = (void *)swift_allocObject();
      v13[2] = v4;
      void v13[3] = v10;
      v13[4] = a2;
      v13[5] = a3;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_100416C08;
      *(void *)(v14 + 24) = v13;
      aBlock[4] = sub_1000218B0;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100021888;
      aBlock[3] = &unk_10074AA00;
      uint64_t v15 = _Block_copy(aBlock);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      [v11 withActionName:v12 block:v15];

      _Block_release(v15);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
    }
  }
  return result;
}

void sub_100406BB8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.SmartList();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  __chkstk_darwin(v9);
  uint64_t v11 = (long long *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v14 = (long long *)((char *)&v35 - v13);
  if ((sub_1004E34D8(a1) & 1) == 0)
  {
    sub_1000245E0(a2, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v23 = v11[11];
      long long v50 = v11[10];
      long long v51 = v23;
      v52[0] = v11[12];
      *(_OWORD *)((char *)v52 + 10) = *(long long *)((char *)v11 + 202);
      long long v24 = v11[7];
      long long v46 = v11[6];
      long long v47 = v24;
      long long v25 = v11[9];
      long long v48 = v11[8];
      long long v49 = v25;
      long long v26 = v11[3];
      long long v42 = v11[2];
      long long v43 = v26;
      long long v27 = v11[5];
      long long v44 = v11[4];
      long long v45 = v27;
      long long v28 = v11[1];
      long long v40 = *v11;
      long long v41 = v28;
      swift_retain();
      TTRAccountsListsViewModel.listOrCustomSmartList(for:)();
      char v29 = -1;
      int v31 = ~v30;
      sub_10003B798((uint64_t)&v40);
      swift_release();
      if (!v31)
      {
        long long v33 = 0uLL;
        long long v34 = 0uLL;
        goto LABEL_12;
      }
      sub_1000368FC(0, (unint64_t *)&qword_100791B50);
      uint64_t v21 = TTRMoveRemindersToListPresenterCapability.TargetList.init(listOrCustomSmartList:)();
      unsigned __int8 v22 = v32;
    }
    else
    {
      sub_1000400E4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      uint64_t v21 = v8[*(int *)(v6 + 20)];
      sub_100030930((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      unsigned __int8 v22 = 2;
    }
    goto LABEL_11;
  }
  sub_1000245E0(a2, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v15 = v14[11];
    long long v50 = v14[10];
    long long v51 = v15;
    v52[0] = v14[12];
    *(_OWORD *)((char *)v52 + 10) = *(long long *)((char *)v14 + 202);
    long long v16 = v14[7];
    long long v46 = v14[6];
    long long v47 = v16;
    long long v17 = v14[9];
    long long v48 = v14[8];
    long long v49 = v17;
    long long v18 = v14[3];
    long long v42 = v14[2];
    long long v43 = v18;
    long long v19 = v14[5];
    long long v44 = v14[4];
    long long v45 = v19;
    long long v20 = v14[1];
    long long v40 = *v14;
    long long v41 = v20;
    swift_retain();
    uint64_t v21 = TTRAccountsListsViewModel.remList(for:)();
    sub_10003B798((uint64_t)&v40);
    swift_release();
    if (v21)
    {
      unsigned __int8 v22 = 0;
LABEL_11:
      TTRMoveRemindersToListPresenterCapability.paramsForDropping(_:into:reminderForDragItem:)();
      long long v35 = v38;
      long long v36 = v37;
      char v29 = v39;
      sub_100065740((id)v21, v22);
      long long v34 = v35;
      long long v33 = v36;
      goto LABEL_12;
    }
  }
  else
  {
    sub_100030930((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  }
  long long v33 = 0uLL;
  char v29 = -1;
  long long v34 = 0uLL;
LABEL_12:
  *(_OWORD *)a3 = v33;
  *(_OWORD *)(a3 + 16) = v34;
  *(unsigned char *)(a3 + 32) = v29;
}

void *sub_100406F44(uint64_t a1, uint64_t a2)
{
  return sub_100406F8C(a1, a2, (uint64_t)"Accounts lists drop reminder(s) into pinned list {id: %@}", 57, (uint64_t (*)(unsigned char *))sub_100405FB8);
}

void *sub_100406F68(uint64_t a1, uint64_t a2)
{
  return sub_100406F8C(a1, a2, (uint64_t)"Accounts lists drop deleted reminder(s) into pinned list for recovery {id: %@}", 78, (uint64_t (*)(unsigned char *))sub_1004065E4);
}

void *sub_100406F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unsigned char *))
{
  long long v16 = a5;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100018BF8(v7, (uint64_t)qword_10079DFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 25705;
  *(void *)(inited + 40) = 0xE200000000000000;
  *(void *)(inited + 72) = type metadata accessor for UUID();
  sub_1000394A8((uint64_t *)(inited + 48));
  TTRAccountsListsViewModel.PinnedList.id.getter();
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100406BB8(a1, a2, (uint64_t)v17);
  sub_100028C3C((uint64_t)v17, (uint64_t)v18, &qword_10079A090);
  if (v18[32] == 255) {
    return _swiftEmptyArrayStorage;
  }
  sub_100028C3C((uint64_t)v18, (uint64_t)v19, &qword_100788F00);
  uint64_t v13 = v16(v19);
  sub_1004196C4((uint64_t)v17, (void (*)(void, void, void, void, void))sub_100096654);
  return (void *)v13;
}

void sub_1004071EC(char a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        uint64_t v8 = *(void *)(Strong + 72);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v8 + 8) + 8))(ObjectType);
        id v11 = [v10 nonUserInteractiveStore];

        sub_1000368FC(0, (unint64_t *)&qword_100788E40);
        uint64_t v12 = static OS_dispatch_queue.main.getter();
        uint64_t v13 = (_OWORD *)swift_allocObject();
        long long v14 = a4[11];
        v13[11] = a4[10];
        v13[12] = v14;
        v13[13] = a4[12];
        *(_OWORD *)((char *)v13 + 218) = *(_OWORD *)((char *)a4 + 202);
        long long v15 = a4[7];
        v13[7] = a4[6];
        v13[8] = v15;
        long long v16 = a4[9];
        v13[9] = a4[8];
        v13[10] = v16;
        long long v17 = a4[3];
        void v13[3] = a4[2];
        v13[4] = v17;
        long long v18 = a4[5];
        v13[5] = a4[4];
        void v13[6] = v18;
        long long v19 = a4[1];
        v13[1] = *a4;
        v13[2] = v19;
        long long v42 = sub_100416D88;
        long long v43 = v13;
        id aBlock = _NSConcreteStackBlock;
        uint64_t v39 = 1107296256;
        long long v40 = sub_100009ADC;
        long long v41 = &unk_10074AA78;
        long long v20 = _Block_copy(&aBlock);
        sub_1000326C4((uint64_t)a4);
        swift_release();
        [v11 rejectCalDAVSharedList:a3 queue:v12 completion:v20];
        _Block_release(v20);
        swift_release();
      }
      else
      {
        if (qword_100785570 != -1) {
          swift_once();
        }
        uint64_t v33 = type metadata accessor for Logger();
        sub_100018BF8(v33, (uint64_t)qword_10079DFC8);
        sub_1000326C4((uint64_t)a4);
        sub_1000326C4((uint64_t)a4);
        uint64_t v12 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v12, v34))
        {
          long long v35 = (uint8_t *)swift_slowAlloc();
          long long v36 = (void *)swift_slowAlloc();
          *(_DWORD *)long long v35 = 138412290;
          id aBlock = *(void ***)a4;
          long long v37 = aBlock;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *long long v36 = aBlock;
          sub_10003B798((uint64_t)a4);
          sub_10003B798((uint64_t)a4);
          _os_log_impl((void *)&_mh_execute_header, v12, v34, "Canceled CalDAV share invitation response {list.objectID: %@}", v35, 0xCu);
          sub_10003B754(&qword_10078AC60);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_release();
        }
        else
        {
          swift_release();
          sub_10003B798((uint64_t)a4);
          sub_10003B798((uint64_t)a4);
        }
      }
    }
    else
    {
      uint64_t v21 = *(void *)(Strong + 72);
      uint64_t v22 = swift_getObjectType();
      long long v23 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 8))(v22);
      id v24 = [v23 nonUserInteractiveStore];

      sub_1000368FC(0, (unint64_t *)&qword_100788E40);
      uint64_t v12 = static OS_dispatch_queue.main.getter();
      long long v25 = (_OWORD *)swift_allocObject();
      long long v26 = a4[11];
      v25[11] = a4[10];
      v25[12] = v26;
      v25[13] = a4[12];
      *(_OWORD *)((char *)v25 + 218) = *(_OWORD *)((char *)a4 + 202);
      long long v27 = a4[7];
      v25[7] = a4[6];
      char v25[8] = v27;
      long long v28 = a4[9];
      v25[9] = a4[8];
      v25[10] = v28;
      long long v29 = a4[3];
      v25[3] = a4[2];
      v25[4] = v29;
      long long v30 = a4[5];
      v25[5] = a4[4];
      uint64_t v25[6] = v30;
      long long v31 = a4[1];
      v25[1] = *a4;
      v25[2] = v31;
      long long v42 = sub_100416E50;
      long long v43 = v25;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v39 = 1107296256;
      long long v40 = sub_100009ADC;
      long long v41 = &unk_10074AAC8;
      unsigned __int8 v32 = _Block_copy(&aBlock);
      sub_1000326C4((uint64_t)a4);
      swift_release();
      [v24 acceptCalDAVSharedList:a3 queue:v12 completion:v32];
      swift_release();
      _Block_release(v32);
    }
  }
}

void sub_1004076B8(uint64_t a1, id *a2, const char *a3, const char *a4)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100018BF8(v6, (uint64_t)qword_10079DFC8);
    sub_1000326C4((uint64_t)a2);
    swift_errorRetain();
    sub_1000326C4((uint64_t)a2);
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412546;
      uint64_t v21 = a3;
      id v11 = *a2;
      id v23 = v10;
      id v12 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v9 = v11;
      sub_10003B798((uint64_t)a2);
      sub_10003B798((uint64_t)a2);
      *(_WORD *)(v8 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v13 = Error.localizedDescription.getter();
      sub_1000385A8(v13, v14, (uint64_t *)&v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, v21, (uint8_t *)v8, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    sub_10003B798((uint64_t)a2);
    sub_10003B798((uint64_t)a2);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100018BF8(v16, (uint64_t)qword_10079DFC8);
    sub_1000326C4((uint64_t)a2);
    sub_1000326C4((uint64_t)a2);
    oslog = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v17))
    {
      long long v18 = (uint8_t *)swift_slowAlloc();
      long long v19 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v18 = 138412290;
      id v23 = *a2;
      id v20 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v19 = v23;
      sub_10003B798((uint64_t)a2);
      sub_10003B798((uint64_t)a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, a4, v18, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    sub_10003B798((uint64_t)a2);
    sub_10003B798((uint64_t)a2);
  }
}

Class sub_100407AD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (void **)((char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  id v11 = (long long *)((char *)v29 - v10);
  TTRAccountsListsViewModel.Item.listOrCustomSmartList.getter();
  sub_100028C3C((uint64_t)v31, (uint64_t)v32, &qword_100788E78);
  if (sub_100096254((uint64_t *)v32) != 1)
  {
    long long v44 = v32[10];
    long long v45 = v32[11];
    v46[0] = v33[0];
    *(_OWORD *)((char *)v46 + 10) = *(_OWORD *)((char *)v33 + 10);
    long long v40 = v32[6];
    long long v41 = v32[7];
    long long v42 = v32[8];
    long long v43 = v32[9];
    long long v36 = v32[2];
    long long v37 = v32[3];
    long long v38 = v32[4];
    long long v39 = v32[5];
    long long v34 = v32[0];
    long long v35 = v32[1];
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      Class isa = sub_1004029FC((uint64_t)&v34, a4 & 1);
      sub_100417B60((uint64_t)v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1000962F0);
      swift_release();
      return isa;
    }
    sub_100417B60((uint64_t)v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1000962F0);
    return 0;
  }
  sub_1000245E0(a2, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    long long v12 = v11[1];
    long long v34 = *v11;
    long long v35 = v12;
    long long v13 = v11[3];
    long long v36 = v11[2];
    long long v37 = v13;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      Class isa = sub_100407FC4(&v34);
      sub_1000953E8((uint64_t)&v34);
      swift_release();
      return isa;
    }
    sub_1000953E8((uint64_t)&v34);
    return 0;
  }
  sub_100030930((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_1000245E0(a2, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 13)
  {
    sub_100030930((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return 0;
  }
  long long v15 = *v9;
  uint64_t v16 = v9[1];
  os_log_type_t v17 = v9[2];
  long long v18 = v9[3];
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  UIMenuElementSize v30 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [self _systemImageNamed:v19];

  _OWORD v29[2] = sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  v29[1] = static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = (void *)swift_allocObject();
  void v22[2] = v21;
  void v22[3] = v15;
  void v22[4] = v16;
  v22[5] = v17;
  v22[6] = v18;
  id v23 = v20;
  id v24 = v15;
  swift_bridgeObjectRetain();
  id v25 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_1000368FC(0, &qword_1007894E0);
  v26._uint64_t countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v47.value.super.Class isa = 0;
  v47.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v47, 0, 0xFFFFFFFFFFFFFFFFLL, v30, v28).super.super.isa;
  swift_release();
  swift_bridgeObjectRelease();

  return isa;
}

Class sub_100407FC4(_OWORD *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t v3 = self;
  id v4 = [v3 _systemImageNamed:v2];

  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  static TTRLocalizableStrings.GroupDetail.showGroupInfoActionText.getter();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  long long v7 = a1[1];
  *(_OWORD *)(v6 + 24) = *a1;
  *(_OWORD *)(v6 + 40) = v7;
  long long v8 = a1[3];
  *(_OWORD *)(v6 + 56) = a1[2];
  *(_OWORD *)(v6 + 72) = v8;
  id v9 = v4;
  sub_100416C88((uint64_t)a1);
  id v10 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v3 _systemImageNamed:v11];

  static TTRLocalizableStrings.GroupDetail.deleteGroupActionText.getter();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  long long v15 = a1[1];
  *(_OWORD *)(v14 + 24) = *a1;
  *(_OWORD *)(v14 + 40) = v15;
  long long v16 = a1[3];
  *(_OWORD *)(v14 + 56) = a1[2];
  *(_OWORD *)(v14 + 72) = v16;
  sub_100416C88((uint64_t)a1);
  id v17 = v12;
  id v18 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_1000368FC(0, &qword_1007894E0);
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v22.value.super.Class isa = 0;
  v22.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v19, (Swift::String_optional)0, v22, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, (Swift::OpaquePointer)2).super.super.isa;

  return isa;
}

id sub_100408348(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100018BF8(v6, (uint64_t)qword_10079DFC8);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a1;
  *(void *)(v8 + 32) = a2;
  long long v9 = a3[1];
  *(_OWORD *)(v8 + 40) = *a3;
  *(_OWORD *)(v8 + 56) = v9;
  *(_OWORD *)(v8 + 72) = a3[2];
  *(_OWORD *)(v8 + 81) = *(_OWORD *)((char *)a3 + 41);
  id v10 = self;
  v14[4] = sub_100416AC4;
  void v14[5] = v8;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1001D0924;
  void v14[3] = &unk_10074A8E8;
  NSString v11 = _Block_copy(v14);
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_10040FB84((uint64_t)a3);
  swift_release();
  id v12 = [v10 configurationWithIdentifier:0 previewProvider:0 actionProvider:v11];
  swift_release();
  _Block_release(v11);
  swift_release();
  return v12;
}

Class sub_100408544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v9 = *(void *)(Strong + 88);
  uint64_t ObjectType = swift_getObjectType();
  char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
  long long v31 = (void *)(v11 & 1);
  char v33 = v11;
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter();
  NSString v12 = String._bridgeToObjectiveC()();
  uint64_t v13 = self;
  id v14 = [v13 _systemImageNamed:v12];

  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = a3;
  *(void *)(v16 + 32) = a4;
  long long v17 = a5[1];
  *(_OWORD *)(v16 + 40) = *a5;
  *(_OWORD *)(v16 + 56) = v17;
  *(_OWORD *)(v16 + 72) = a5[2];
  *(_OWORD *)(v16 + 81) = *(_OWORD *)((char *)a5 + 41);
  swift_bridgeObjectRetain();
  sub_10040FB84((uint64_t)a5);
  children._rawValue = v31;
  uint64_t v32 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v13 _systemImageNamed:v18];

  if (v33) {
    uint64_t v20 = 3;
  }
  else {
    uint64_t v20 = 2;
  }
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = a3;
  *(void *)(v22 + 32) = a4;
  long long v23 = a5[1];
  *(_OWORD *)(v22 + 40) = *a5;
  *(_OWORD *)(v22 + 56) = v23;
  *(_OWORD *)(v22 + 72) = a5[2];
  *(_OWORD *)(v22 + 81) = *(_OWORD *)((char *)a5 + 41);
  swift_bridgeObjectRetain();
  sub_10040FB84((uint64_t)a5);
  childrena._rawValue = (void *)v20;
  uint64_t v24 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1000368FC(0, &qword_1007894E0);
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_10066C430;
  *(void *)(v25 + 32) = v32;
  *(void *)(v25 + 40) = v24;
  UIMenuElementSize preferredElementSize = v25;
  specialized Array._endMutation()();
  v26._uint64_t countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v35.value.super.Class isa = 0;
  v35.is_nil = 0;
  v27.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v35, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, childrena).super.super.isa;
  swift_release();
  return v27.super.super.isa;
}

uint64_t sub_1004088CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v8 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100018BF8(v13, (uint64_t)qword_10079DFC8);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10001A078();
    swift_bridgeObjectRelease();
    uint64_t v14 = *sub_100038D28((void *)(v12 + 112), *(void *)(v12 + 136));
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v16 = Strong;
      uint64_t v17 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = 0;
      *(void *)(v18 + 24) = 0;
      *(void *)(v18 + 32) = v14;
      *(void *)(v18 + 40) = a3;
      *(void *)(v18 + 48) = a4;
      *(unsigned char *)(v18 + 56) = 1;
      long long v19 = a5[1];
      *(_OWORD *)(v18 + 64) = *a5;
      *(_OWORD *)(v18 + 80) = v19;
      *(_OWORD *)(v18 + 96) = a5[2];
      *(_OWORD *)(v18 + 105) = *(_OWORD *)((char *)a5 + 41);
      *(void *)(v18 + 128) = v16;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_10040FB84((uint64_t)a5);
      sub_1000286A4((uint64_t)v10, (uint64_t)&unk_10079E228, v18);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100408B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v8 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100018BF8(v13, (uint64_t)qword_10079DFC8);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10001A078();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_100038D28((void *)(v12 + 112), *(void *)(v12 + 136));
    sub_10003B754((uint64_t *)&unk_100791C60);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(void *)(inited + 32) = a3;
    *(void *)(inited + 40) = a4;
    swift_bridgeObjectRetain();
    Swift::Int v16 = sub_10000B844(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v17 = *v14;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v19 = Strong;
      uint64_t v20 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = 0;
      *(void *)(v21 + 24) = 0;
      *(void *)(v21 + 32) = v17;
      *(void *)(v21 + 40) = v16;
      *(void *)(v21 + 48) = 0;
      *(unsigned char *)(v21 + 56) = 0;
      long long v22 = a5[1];
      *(_OWORD *)(v21 + 64) = *a5;
      *(_OWORD *)(v21 + 80) = v22;
      *(_OWORD *)(v21 + 96) = a5[2];
      *(_OWORD *)(v21 + 105) = *(_OWORD *)((char *)a5 + 41);
      *(void *)(v21 + 128) = v19;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_10040FB84((uint64_t)a5);
      sub_1000286A4((uint64_t)v10, (uint64_t)&unk_10079E220, v21);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

BOOL sub_100408DB0(uint64_t a1)
{
  uint64_t v59 = a1;
  long long v60 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
  uint64_t v1 = __chkstk_darwin(v60);
  uint64_t v3 = (char *)v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)v52 - v4;
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (_OWORD *)((char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (long long *)((char *)v52 - v11);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v52 - v14;
  __chkstk_darwin(v13);
  uint64_t v55 = (uint64_t)v52 - v16;
  uint64_t v17 = sub_10003B754((uint64_t *)&unk_10078E620);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  long long v57 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v56 = (uint64_t)v52 - v20;
  swift_retain();
  uint64_t v21 = TTRAccountsListsViewModel.visiblePinnedLists.getter();
  swift_release();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
    uint64_t v37 = 1;
LABEL_32:
    uint64_t v38 = v58;
    uint64_t v39 = (uint64_t)v57;
    uint64_t v40 = v56;
    goto LABEL_35;
  }
  long long v53 = v9;
  uint64_t v54 = v3;
  uint64_t v23 = v21 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
  uint64_t v24 = *(void *)(v58 + 72);
  v52[1] = v21;
  swift_bridgeObjectRetain();
  uint64_t v59 = v59;
  while (1)
  {
    sub_1000245E0(v23, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    sub_1000245E0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    long long v25 = v12[11];
    long long v71 = v12[10];
    long long v72 = v25;
    *(_OWORD *)long long v73 = v12[12];
    *(_OWORD *)&v73[10] = *(long long *)((char *)v12 + 202);
    long long v26 = v12[7];
    long long v67 = v12[6];
    long long v68 = v26;
    long long v27 = v12[9];
    long long v69 = v12[8];
    long long v70 = v27;
    long long v28 = v12[3];
    long long v63 = v12[2];
    long long v64 = v28;
    long long v29 = v12[5];
    long long v65 = v12[4];
    long long v66 = v29;
    long long v30 = v12[1];
    long long v61 = *v12;
    long long v62 = v30;
    sub_10003B798((uint64_t)&v61);
LABEL_4:
    sub_100030930((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    v23 += v24;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = 1;
      uint64_t v3 = v54;
      uint64_t v9 = v53;
      goto LABEL_32;
    }
  }
  sub_1000400E4((uint64_t)v12, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  unint64_t v31 = 0xE500000000000000;
  uint64_t v32 = 0x7961646F74;
  switch(v5[v60[5]])
  {
    case 1:
      uint64_t v32 = 0x656C756465686373;
      goto LABEL_13;
    case 2:
      unint64_t v31 = 0xE300000000000000;
      uint64_t v32 = 7105633;
      break;
    case 3:
      unint64_t v31 = 0xE700000000000000;
      uint64_t v32 = 0x64656767616C66;
      break;
    case 4:
      unint64_t v31 = 0xE800000000000000;
      uint64_t v32 = 0x64656E6769737361;
      break;
    case 5:
      uint64_t v32 = 0x6E756F4669726973;
      unint64_t v31 = 0xEF737070416E4964;
      break;
    case 6:
      uint64_t v32 = 0x6574656C706D6F63;
LABEL_13:
      unint64_t v31 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v33 = 0xE500000000000000;
  uint64_t v34 = 0x7961646F74;
  switch(v59)
  {
    case 1:
      uint64_t v35 = 0x656C756465686373;
      goto LABEL_26;
    case 2:
      unint64_t v33 = 0xE300000000000000;
      if (v32 != 7105633) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      unint64_t v33 = 0xE700000000000000;
      if (v32 != 0x64656767616C66) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 4:
      unint64_t v33 = 0xE800000000000000;
      if (v32 != 0x64656E6769737361) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 5:
      uint64_t v34 = 0x6E756F4669726973;
      unint64_t v33 = 0xEF737070416E4964;
      goto LABEL_23;
    case 6:
      uint64_t v35 = 0x6574656C706D6F63;
LABEL_26:
      unint64_t v33 = 0xE900000000000064;
      if (v32 == v35) {
        goto LABEL_27;
      }
      goto LABEL_28;
    default:
LABEL_23:
      if (v32 != v34) {
        goto LABEL_28;
      }
LABEL_27:
      if (v31 != v33)
      {
LABEL_28:
        char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100030930((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
        if (v36) {
          goto LABEL_34;
        }
        goto LABEL_4;
      }
      swift_bridgeObjectRelease_n();
      sub_100030930((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
LABEL_34:
      swift_bridgeObjectRelease();
      uint64_t v40 = v56;
      sub_1000400E4((uint64_t)v15, v56, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      uint64_t v37 = 0;
      uint64_t v3 = v54;
      uint64_t v9 = v53;
      uint64_t v38 = v58;
      uint64_t v39 = (uint64_t)v57;
LABEL_35:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v40, v37, 1, v6);
      swift_bridgeObjectRelease();
      sub_100028C3C(v40, v39, (uint64_t *)&unk_10078E620);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v39, 1, v6) == 1)
      {
        sub_10003B6F8(v39, (uint64_t *)&unk_10078E620);
        return 0;
      }
      uint64_t v41 = v39;
      uint64_t v42 = v55;
      sub_1000400E4(v41, v55, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      sub_1000400E4(v42, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v43 = v9[11];
        long long v71 = v9[10];
        long long v72 = v43;
        *(_OWORD *)long long v73 = v9[12];
        *(_OWORD *)&v73[10] = *(_OWORD *)((char *)v9 + 202);
        long long v44 = v9[7];
        long long v67 = v9[6];
        long long v68 = v44;
        long long v45 = v9[9];
        long long v69 = v9[8];
        long long v70 = v45;
        long long v46 = v9[3];
        long long v63 = v9[2];
        long long v64 = v46;
        long long v47 = v9[5];
        long long v65 = v9[4];
        long long v66 = v47;
        long long v48 = v9[1];
        long long v61 = *v9;
        long long v62 = v48;
        sub_10003B798((uint64_t)&v61);
        return 0;
      }
      else
      {
        sub_1000400E4((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
        unsigned int v50 = v3[v60[9]];
        if (v50 >= 2) {
          BOOL v49 = v50 != 2 && *(void *)&v3[v60[6]] > 0;
        }
        else {
          BOOL v49 = 1;
        }
        sub_100030930((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      }
      return v49;
  }
}

void sub_100409600()
{
  static TTRLocalizableStrings.AccountsList.cantPinListAlertTitle.getter();
  static TTRLocalizableStrings.AccountsList.cantPinListAlertMessage.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [self alertControllerWithTitle:v1 message:v2 preferredStyle:1];

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [self actionWithTitle:v3 style:1 handler:0];

  [v8 addAction:v4];
  sub_100038D28((void *)(v0 + 112), *(void *)(v0 + 136));
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    [Strong presentViewController:v8 animated:1 completion:0];

    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = v8;
  }
}

void sub_100409774(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_10079E230);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v34 - v13;
  uint64_t v15 = type metadata accessor for REMAccountsListDataView.Model();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v34 - v20;
  switch(a1 >> 61)
  {
    case 1uLL:
      uint64_t v24 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
      uint64_t v25 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
      long long v26 = (void *)swift_allocObject();
      void v26[2] = 0;
      v26[3] = 0;
      v26[4] = v25;
      swift_retain();
      sub_1000286A4((uint64_t)v8, (uint64_t)&unk_10079E240, (uint64_t)v26);
      swift_release();
      return;
    case 2uLL:
      TTRIPrivacyChecker.openSettingsApp(for:)();
      return;
    case 3uLL:
      if (a1)
      {
        id v32 = a2;
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id v28 = a2;
      swift_bridgeObjectRelease();
      if (v27)
      {
LABEL_15:
        sub_100414B40();
        goto LABEL_16;
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v30 = Strong;
        sub_100038D28((void *)(Strong + 48), *(void *)(Strong + 72));
        sub_10041229C(1, a2, v30);
        swift_unknownObjectRelease();
      }
      TTRITipKitSignal.donate(signalContext:)((Swift::String_optional)0);
LABEL_16:
      sub_100096568(a1, a2);
      return;
    case 4uLL:
      id v31 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
      if (a1) {
        TTRUserDefaults.iCloudSyncTipDismissed.setter();
      }
      else {
        TTRUserDefaults.migrationTipDismissed.setter();
      }

      uint64_t v33 = v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
      swift_beginAccess();
      sub_10003B694(v33, (uint64_t)v12, &qword_10079E230);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) == 1)
      {
        uint64_t v23 = (uint64_t)v12;
        goto LABEL_22;
      }
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v12, v15);
      sub_100026B84((uint64_t)v19, 0, 2, 1);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      return;
    default:
      v34[1] = *(void *)(v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
      type metadata accessor for TTRIPrivacyChecker();
      TTRPrivacyChecker.dismissInlineRequest(for:)();
      uint64_t v22 = v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
      swift_beginAccess();
      sub_10003B694(v22, (uint64_t)v14, &qword_10079E230);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        uint64_t v23 = (uint64_t)v14;
LABEL_22:
        sub_10003B6F8(v23, &qword_10079E230);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
        sub_100026B84((uint64_t)v21, 0, 2, 1);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      }
      return;
  }
}

uint64_t sub_100409CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = *a4;
  *(void *)(v4 + 16) = a4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_100409D70;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v5, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_100409D70()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  NSString v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void **sub_100409E64(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v7 = *(void *)(v3 + 88);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7)) {
    return 0;
  }
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10066C430;
  static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter();
  sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
  uint64_t v10 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = a1;
  uint64_t v28 = a1;
  uint64_t v14 = v12;
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v13;
  *(void *)(v12 + 32) = a2;
  long long v15 = a3[1];
  *(_OWORD *)(v12 + 40) = *a3;
  *(_OWORD *)(v12 + 56) = v15;
  *(_OWORD *)(v12 + 72) = a3[2];
  *(_OWORD *)(v12 + 81) = *(_OWORD *)((char *)a3 + 41);
  id v16 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10040FB84((uint64_t)a3);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_10040FB74;
  uint64_t v35 = v14;
  id aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  id v32 = sub_10040FBBC;
  uint64_t v33 = &unk_10074A7F8;
  uint64_t v18 = _Block_copy(&aBlock);
  id v19 = [v16 initWithName:v17 image:v10 actionHandler:v18];

  _Block_release(v18);
  swift_release();
  swift_release();
  *(void *)(v29 + 32) = v19;
  static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)();
  uint64_t v20 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v28;
  *(void *)(v22 + 32) = a2;
  long long v23 = a3[1];
  *(_OWORD *)(v22 + 40) = *a3;
  *(_OWORD *)(v22 + 56) = v23;
  *(_OWORD *)(v22 + 72) = a3[2];
  *(_OWORD *)(v22 + 81) = *(_OWORD *)((char *)a3 + 41);
  id v24 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_bridgeObjectRetain();
  sub_10040FB84((uint64_t)a3);
  swift_retain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_10040FC18;
  uint64_t v35 = v22;
  id aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  id v32 = sub_10040FBBC;
  uint64_t v33 = &unk_10074A848;
  long long v26 = _Block_copy(&aBlock);
  id v27 = [v24 initWithName:v25 image:v20 actionHandler:v26];

  _Block_release(v26);
  swift_release();
  swift_release();
  *(void *)(v29 + 40) = v27;
  id aBlock = (void **)v29;
  specialized Array._endMutation()();
  return aBlock;
}

BOOL sub_10040A234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v8 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100018BF8(v12, (uint64_t)qword_10079DFC8);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10001A078();
    swift_bridgeObjectRelease();
    uint64_t v13 = *sub_100038D28((void *)(Strong + 112), *(void *)(Strong + 136));
    uint64_t v14 = swift_unknownObjectWeakLoadStrong();
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = 0;
      *(void *)(v17 + 24) = 0;
      *(void *)(v17 + 32) = v13;
      *(void *)(v17 + 40) = a3;
      *(void *)(v17 + 48) = a4;
      *(unsigned char *)(v17 + 56) = 1;
      long long v18 = a5[1];
      *(_OWORD *)(v17 + 64) = *a5;
      *(_OWORD *)(v17 + 80) = v18;
      *(_OWORD *)(v17 + 96) = a5[2];
      *(_OWORD *)(v17 + 105) = *(_OWORD *)((char *)a5 + 41);
      *(void *)(v17 + 128) = v15;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_10040FB84((uint64_t)a5);
      sub_1000286A4((uint64_t)v10, (uint64_t)&unk_10079E218, v17);
      swift_release();
    }
    swift_release();
  }
  return Strong != 0;
}

BOOL sub_10040A474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v8 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100018BF8(v12, (uint64_t)qword_10079DFC8);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10001A078();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_100038D28((void *)(Strong + 112), *(void *)(Strong + 136));
    sub_10003B754((uint64_t *)&unk_100791C60);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(void *)(inited + 32) = a3;
    *(void *)(inited + 40) = a4;
    swift_bridgeObjectRetain();
    Swift::Int v15 = sub_10000B844(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v16 = *v13;
    uint64_t v17 = swift_unknownObjectWeakLoadStrong();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 1, 1, v19);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = 0;
      *(void *)(v20 + 24) = 0;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = v15;
      *(void *)(v20 + 48) = 0;
      *(unsigned char *)(v20 + 56) = 0;
      long long v21 = a5[1];
      *(_OWORD *)(v20 + 64) = *a5;
      *(_OWORD *)(v20 + 80) = v21;
      *(_OWORD *)(v20 + 96) = a5[2];
      *(_OWORD *)(v20 + 105) = *(_OWORD *)((char *)a5 + 41);
      *(void *)(v20 + 128) = v18;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_10040FB84((uint64_t)a5);
      sub_1000286A4((uint64_t)v10, (uint64_t)&unk_10079E210, v20);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_release();
  }
  return Strong != 0;
}

id sub_10040A724(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void **)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 8))(ObjectType);
  Swift::Int v15 = (char *)v11 + v9[7];
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = *(void **)(v4 + 176);
  *uint64_t v11 = (void *)v14;
  *(void **)((char *)v11 + v9[8]) = v17;
  uint64_t v18 = v9[9];
  long long v21 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)((char *)v11 + v18) = v21;
  *((unsigned char *)v11 + v9[10]) = 0;
  type metadata accessor for TTRIShowSearchResultAssembly();
  swift_retain();
  swift_unknownObjectRetain();
  id v19 = sub_10033464C(a1, v11, a2, a3, (void *)v4, &off_10074A430);
  sub_100030930((uint64_t)v11, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  return v19;
}

uint64_t sub_10040A8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)v24 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v24[1] = a1;
    uint64_t v25 = a2;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v13 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    uint64_t v14 = _swiftEmptyArrayStorage;
    uint64_t v26 = v4;
    do
    {
      sub_1000245E0(v12, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
      sub_1000245E0((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v15 = *(void *)v7;
        char v16 = v7[8];
        sub_100030930((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_100571BE4(0, v14[2] + 1, 1, v14);
        }
        unint64_t v18 = v14[2];
        unint64_t v17 = v14[3];
        if (v18 >= v17 >> 1) {
          uint64_t v14 = sub_100571BE4((void *)(v17 > 1), v18 + 1, 1, v14);
        }
        v14[2] = v18 + 1;
        id v19 = &v14[2 * v18];
        void v19[4] = v15;
        *((unsigned char *)v19 + 40) = v16;
      }
      else
      {
        sub_100030930((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
        sub_100030930((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
      }
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a2 = v25;
  }
  else
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
  }
  uint64_t v20 = *(void *)(a2 + 72);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t))(v20 + 120))(v14, ObjectType, v20);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v22 = TTRAccountsListsViewModel.activePinnedListsDisplayOrder()();
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 + 8) + 40))(v22, 0, ObjectType);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_10040AB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5;
  uint64_t v6 = a4;
  uint64_t v7 = a3;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    unsigned int v25 = a5;
    swift_bridgeObjectRetain();
    uint64_t v11 = (unsigned char *)(a1 + 40);
    do
    {
      uint64_t v12 = (void *)*((void *)v11 - 1);
      char v13 = *v11;
      id v14 = v12;
      if ([v14 isPinned])
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1004D3C8C(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v16 = _swiftEmptyArrayStorage[2];
        unint64_t v15 = _swiftEmptyArrayStorage[3];
        if (v16 >= v15 >> 1) {
          sub_1004D3C8C(v15 > 1, v16 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v16 + 1;
        unint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
        v17[4] = v12;
        *((unsigned char *)v17 + 40) = v13;
      }
      else
      {
      }
      v11 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v5 = v25;
    uint64_t v7 = a3;
    uint64_t v6 = a4;
  }
  uint64_t v18 = *(void *)(a2 + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = sub_1004E62F8((uint64_t)_swiftEmptyArrayStorage);
  swift_release();
  char v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 160))(a1, v7, v6, v5, v20, ObjectType, v18);
  swift_bridgeObjectRelease();
  return v21 & 1;
}

uint64_t sub_10040AD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5;
  uint64_t v6 = a4;
  uint64_t v7 = a3;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    unsigned int v25 = a5;
    swift_bridgeObjectRetain();
    uint64_t v11 = (unsigned char *)(a1 + 40);
    do
    {
      uint64_t v12 = (void *)*((void *)v11 - 1);
      char v13 = *v11;
      id v14 = v12;
      if ([v14 isPinned])
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1004D3C8C(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v16 = _swiftEmptyArrayStorage[2];
        unint64_t v15 = _swiftEmptyArrayStorage[3];
        if (v16 >= v15 >> 1) {
          sub_1004D3C8C(v15 > 1, v16 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v16 + 1;
        unint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
        v17[4] = v12;
        *((unsigned char *)v17 + 40) = v13;
      }
      else
      {
      }
      v11 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v5 = v25;
    uint64_t v7 = a3;
    uint64_t v6 = a4;
  }
  uint64_t v18 = *(void *)(a2 + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = sub_1004E62F8((uint64_t)_swiftEmptyArrayStorage);
  swift_release();
  char v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 168))(a1, v7, v6, v5, v20, ObjectType, v18);
  swift_bridgeObjectRelease();
  return v21 & 1;
}

id sub_10040AEE0(id *a1)
{
  NSString v1 = (char *)sub_1004E3820(*a1);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = *(id *)&v1[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];

  return v3;
}

void sub_10040AF38(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = (char *)sub_1004E3820(*a1);
  if (!v3) {
    goto LABEL_4;
  }
  uint64_t v4 = v3;
  id v5 = *(id *)&v3[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];

  id v6 = [v5 hashtagContext];
  if (!v6)
  {

LABEL_4:
    id v5 = 0;
  }
  *a2 = v5;
}

uint64_t sub_10040AFC8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    sub_1003FD258(a4);
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    sub_1003FCDD8(a4);
  }
  return swift_release();
}

uint64_t sub_10040B05C(uint64_t a1, uint64_t a2, void **a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003FF6AC(a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_10040B0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_10040B154, v7, v6);
}

uint64_t sub_10040B154()
{
  v0[2] = *(void *)(v0[3] + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  NSString v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  uint64_t v2 = type metadata accessor for TTRIPrivacyChecker();
  *NSString v1 = v0;
  v1[1] = sub_10040B218;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10040B218()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10040B338, v3, v2);
}

uint64_t sub_10040B338()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  sub_1004007BC(v1, 1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10040B3A8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    type metadata accessor for MainActor();
    swift_retain();
    sub_1000326C4((uint64_t)a3);
    uint64_t v13 = static MainActor.shared.getter();
    uint64_t v14 = swift_allocObject();
    long long v15 = a3[11];
    *(_OWORD *)(v14 + 200) = a3[10];
    *(_OWORD *)(v14 + 216) = v15;
    *(_OWORD *)(v14 + 232) = a3[12];
    *(_OWORD *)(v14 + 242) = *(_OWORD *)((char *)a3 + 202);
    long long v16 = a3[7];
    *(_OWORD *)(v14 + 136) = a3[6];
    *(_OWORD *)(v14 + 152) = v16;
    long long v17 = a3[9];
    *(_OWORD *)(v14 + 168) = a3[8];
    *(_OWORD *)(v14 + 184) = v17;
    long long v18 = a3[3];
    *(_OWORD *)(v14 + 72) = a3[2];
    *(_OWORD *)(v14 + 88) = v18;
    long long v19 = a3[5];
    *(_OWORD *)(v14 + 104) = a3[4];
    *(_OWORD *)(v14 + 120) = v19;
    long long v20 = a3[1];
    *(_OWORD *)(v14 + 40) = *a3;
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = &protocol witness table for MainActor;
    *(void *)(v14 + 32) = v11;
    *(_OWORD *)(v14 + 56) = v20;
    sub_1000286A4((uint64_t)v9, a5, v14);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10040B554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_10040B5EC, v7, v6);
}

uint64_t sub_10040B5EC()
{
  v0[2] = *(void *)(v0[3] + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  uint64_t v2 = type metadata accessor for TTRIPrivacyChecker();
  *uint64_t v1 = v0;
  v1[1] = sub_10040B6B0;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10040B6B0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10040B7D0, v3, v2);
}

uint64_t sub_10040B7D0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  sub_1004007BC(v1, 0);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10040B840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003FD9C8(a3, *(unsigned __int8 *)(a3 + 216));
    return swift_release();
  }
  return result;
}

uint64_t sub_10040B8A4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a4(a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_10040B918(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100401D98(a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_10040B98C(uint64_t a1, void *a2, char a3, _OWORD *a4)
{
  uint64_t v8 = sub_10003B754(&qword_10079E230);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for REMAccountsListDataView.Model();
  uint64_t v44 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v42 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1;
  uint64_t v13 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t ObjectType = swift_getObjectType();
  sub_10003B754(&qword_10079E310);
  uint64_t v17 = swift_allocObject();
  long long v39 = xmmword_10066C6F0;
  *(_OWORD *)(v17 + 16) = xmmword_10066C6F0;
  long long v18 = a2;
  *(void *)(v17 + 32) = a2;
  *(unsigned char *)(v17 + 40) = a3 & 1;
  long long v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 120);
  id v20 = v18;
  uint64_t v40 = v15;
  uint64_t v41 = v14;
  v19(v17, ObjectType, v15);
  uint64_t v21 = v11;
  uint64_t v22 = v44;
  swift_bridgeObjectRelease();
  uint64_t v23 = v43 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess();
  sub_10003B694(v23, (uint64_t)v10, &qword_10079E230);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 1, v21) == 1) {
    return sub_10003B6F8((uint64_t)v10, &qword_10079E230);
  }
  unsigned int v25 = v42;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v42, v10, v21);
  REMAccountsListDataView.Model.orderedPinnedLists.getter();
  uint64_t v26 = Array<A>.init(pinnedLists:)();
  sub_10003B754(&qword_10079E318);
  uint64_t inited = (_OWORD *)swift_initStackObject();
  inited[1] = v39;
  long long v28 = a4[1];
  inited[2] = *a4;
  inited[3] = v28;
  long long v29 = a4[5];
  long long v31 = a4[2];
  long long v30 = a4[3];
  inited[6] = a4[4];
  inited[7] = v29;
  inited[4] = v31;
  inited[5] = v30;
  long long v32 = a4[9];
  long long v34 = a4[6];
  long long v33 = a4[7];
  inited[10] = a4[8];
  inited[11] = v32;
  inited[8] = v34;
  inited[9] = v33;
  long long v36 = a4[11];
  long long v35 = a4[12];
  long long v37 = a4[10];
  *(_OWORD *)((char *)inited + 234) = *(_OWORD *)((char *)a4 + 202);
  inited[13] = v36;
  inited[14] = v35;
  inited[12] = v37;
  sub_1000326C4((uint64_t)a4);
  uint64_t v38 = Array<A>.appending(lists:)();
  swift_setDeallocating();
  swift_arrayDestroy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 + 8) + 40))(v38, v26, ObjectType);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
}

uint64_t sub_10040BCC4(uint64_t a1, void *a2, char a3, long long *a4)
{
  uint64_t v8 = sub_10003B754(&qword_10079E230);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for REMAccountsListDataView.Model();
  uint64_t v42 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v41 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t ObjectType = swift_getObjectType();
  sub_10003B754(&qword_10079E310);
  uint64_t v16 = swift_allocObject();
  long long v38 = xmmword_10066C6F0;
  *(_OWORD *)(v16 + 16) = xmmword_10066C6F0;
  uint64_t v17 = a2;
  *(void *)(v16 + 32) = a2;
  *(unsigned char *)(v16 + 40) = a3 & 1;
  long long v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 128);
  id v19 = v17;
  uint64_t v39 = v14;
  uint64_t v40 = v13;
  v18(v16, ObjectType, v14);
  uint64_t v20 = v11;
  uint64_t v21 = v42;
  swift_bridgeObjectRelease();
  uint64_t v22 = a1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess();
  sub_10003B694(v22, (uint64_t)v10, &qword_10079E230);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v20) == 1) {
    return sub_10003B6F8((uint64_t)v10, &qword_10079E230);
  }
  id v24 = v41;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v41, v10, v20);
  REMAccountsListDataView.Model.orderedPinnedLists.getter();
  uint64_t v25 = Array<A>.init(pinnedLists:)();
  sub_10003B754(&qword_10079E318);
  uint64_t v26 = (_OWORD *)swift_allocObject();
  long long v27 = a4[10];
  long long v28 = a4[12];
  v26[13] = a4[11];
  v26[14] = v28;
  *(_OWORD *)((char *)v26 + 234) = *(long long *)((char *)a4 + 202);
  long long v29 = a4[6];
  long long v30 = a4[8];
  long long v31 = a4[9];
  v26[9] = a4[7];
  v26[10] = v30;
  v26[11] = v31;
  v26[12] = v27;
  long long v32 = a4[2];
  long long v33 = a4[4];
  long long v34 = a4[5];
  v26[5] = a4[3];
  v26[6] = v33;
  v26[7] = v34;
  v26[8] = v29;
  long long v35 = *a4;
  long long v36 = a4[1];
  v26[1] = v38;
  void v26[2] = v35;
  v26[3] = v36;
  v26[4] = v32;
  sub_1000326C4((uint64_t)a4);
  uint64_t v37 = Array<A>.removing(lists:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 + 8) + 40))(v37, v25, ObjectType);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
}

void sub_10040BFD4(uint64_t a1)
{
  static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertTitle.getter();
  static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertMessage.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [self alertControllerWithTitle:v2 message:v3 preferredStyle:1];

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [self actionWithTitle:v5 style:1 handler:0];

  [v4 addAction:v8];
  sub_100038D28((void *)(a1 + 112), *(void *)(a1 + 136));
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong;
    [Strong presentViewController:v4 animated:1 completion:0];

    id v4 = v8;
    id v8 = v7;
  }
}

uint64_t sub_10040C148()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_100038CD8(v0 + 112);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, &qword_10079E230);

  swift_release();
  sub_100417114(*(void **)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest), *(void *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 8), *(void *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 16), *(void *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 24), *(void *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 32), *(void *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 40), *(void **)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 48), *(void *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 56), *(void *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 64), *(void *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 72), *(void **)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 80));

  return v0;
}

uint64_t sub_10040C248()
{
  sub_10040C148();

  return swift_deallocClassInstance();
}

uint64_t sub_10040C2A0()
{
  return type metadata accessor for TTRIAccountsListsPresenter(0);
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIAccountsListsPresenter.PostModelUpdateAction(uint64_t a1, uint64_t a2)
{
  NSString v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRIAccountsListsPresenter.PostModelUpdateAction(uint64_t a1, uint64_t a2)
{
  NSString v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for TTRIAccountsListsPresenter.PostModelUpdateAction(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsPresenter.PostModelUpdateAction()
{
  return &type metadata for TTRIAccountsListsPresenter.PostModelUpdateAction;
}

char *sub_10040C36C(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v6 = *a2;
    *(void *)a1 = *a2;
    a1 = &v6[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = (uint64_t)a2[8];
        long long v18 = a2[9];
        uint64_t v19 = (uint64_t)a2[10];
        uint64_t v20 = (uint64_t)a2[11];
        uint64_t v21 = (uint64_t)a2[12];
        uint64_t v22 = (uint64_t)a2[13];
        uint64_t v23 = (uint64_t)a2[14];
        id v24 = a2[15];
        uint64_t v25 = a2[16];
        uint64_t v26 = a2[17];
        long long v27 = a2[18];
        uint64_t v28 = (uint64_t)a2[19];
        uint64_t v29 = (uint64_t)a2[20];
        uint64_t v30 = (uint64_t)a2[21];
        uint64_t v31 = (uint64_t)a2[22];
        uint64_t v32 = (uint64_t)a2[23];
        long long v33 = a2[24];
        uint64_t v34 = (uint64_t)a2[25];
        uint64_t v35 = (uint64_t)a2[26];
        __int16 v36 = *((_WORD *)a2 + 108);
        id v8 = *a2;
        uint64_t v9 = (uint64_t)a2[1];
        uint64_t v10 = (uint64_t)a2[2];
        uint64_t v11 = (uint64_t)a2[3];
        uint64_t v12 = (uint64_t)a2[4];
        uint64_t v13 = (uint64_t)a2[5];
        uint64_t v14 = (uint64_t)a2[6];
        uint64_t v15 = (uint64_t)a2[7];
        sub_100095160(v8, v9, v10, v11, v12, v13, v14, v15, v17, v18, v19, v20, v21, v22, v23, (char)v24, v25, v26, (char)v27,
          v28,
          v29,
          v30,
          v31,
          v32,
          v33,
          v34,
          v35,
          v36);
        *(void *)a1 = v8;
        *((void *)a1 + 1) = v9;
        *((void *)a1 + 2) = v10;
        *((void *)a1 + 3) = v11;
        *((void *)a1 + 4) = v12;
        *((void *)a1 + 5) = v13;
        *((void *)a1 + 6) = v14;
        *((void *)a1 + 7) = v15;
        *((void *)a1 + 8) = v17;
        *((void *)a1 + 9) = v18;
        *((void *)a1 + 10) = v19;
        *((void *)a1 + 11) = v20;
        *((void *)a1 + 12) = v21;
        *((void *)a1 + 13) = v22;
        *((void *)a1 + 14) = v23;
        *((void *)a1 + 15) = v24;
        *((void *)a1 + 16) = v25;
        *((void *)a1 + 17) = v26;
        *((void *)a1 + 18) = v27;
        *((void *)a1 + 19) = v28;
        *((void *)a1 + 20) = v29;
        *((void *)a1 + 21) = v30;
        *((void *)a1 + 22) = v31;
        *((void *)a1 + 23) = v32;
        *((void *)a1 + 24) = v33;
        *((void *)a1 + 25) = v34;
        *((void *)a1 + 26) = v35;
        *((_WORD *)a1 + 108) = v36;
        break;
      case 2u:
        uint64_t v7 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 3u:
        *(void *)a1 = *a2;
        swift_retain();
        break;
      default:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10040C634(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
      uint64_t result = (uint64_t)sub_1000952A4(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void **)(a1 + 128), *(void **)(a1 + 136), *(_OWORD *)(a1 + 144),
                          *(void *)(a1 + 152),
                          *(void *)(a1 + 160),
                          *(void *)(a1 + 168),
                          *(void *)(a1 + 176),
                          *(void *)(a1 + 184),
                          *(void **)(a1 + 192),
                          *(void *)(a1 + 200),
                          *(void *)(a1 + 208),
                          *(_WORD *)(a1 + 216));
      break;
    case 2:
      uint64_t v3 = type metadata accessor for REMHashtagLabelSpecifier();
      char v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 3:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10040C784(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = *(void *)(a2 + 8);
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 24);
      uint64_t v8 = *(void *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 40);
      uint64_t v10 = *(void *)(a2 + 48);
      uint64_t v11 = *(void *)(a2 + 56);
      uint64_t v21 = *(void *)(a2 + 64);
      uint64_t v22 = *(void **)(a2 + 72);
      uint64_t v23 = *(void *)(a2 + 80);
      uint64_t v24 = *(void *)(a2 + 88);
      uint64_t v25 = *(void *)(a2 + 96);
      uint64_t v26 = *(void *)(a2 + 104);
      uint64_t v27 = *(void *)(a2 + 112);
      uint64_t v28 = *(void *)(a2 + 120);
      uint64_t v29 = *(void **)(a2 + 128);
      uint64_t v30 = *(void **)(a2 + 136);
      uint64_t v31 = *(void *)(a2 + 144);
      uint64_t v32 = *(void *)(a2 + 152);
      uint64_t v33 = *(void *)(a2 + 160);
      uint64_t v34 = *(void *)(a2 + 168);
      uint64_t v35 = *(void *)(a2 + 176);
      uint64_t v36 = *(void *)(a2 + 184);
      uint64_t v37 = *(void **)(a2 + 192);
      uint64_t v38 = *(void *)(a2 + 200);
      uint64_t v39 = *(void *)(a2 + 208);
      __int16 v40 = *(_WORD *)(a2 + 216);
      uint64_t v12 = *(void **)a2;
      uint64_t v13 = v5;
      uint64_t v14 = v6;
      uint64_t v15 = v7;
      uint64_t v16 = v8;
      uint64_t v17 = v9;
      uint64_t v18 = v10;
      uint64_t v19 = v11;
      sub_100095160(v12, v5, v6, v7, v8, v9, v10, v11, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31,
        v32,
        v33,
        v34,
        v35,
        v36,
        v37,
        v38,
        v39,
        v40);
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v13;
      *(void *)(a1 + 16) = v14;
      *(void *)(a1 + 24) = v15;
      *(void *)(a1 + 32) = v16;
      *(void *)(a1 + 40) = v17;
      *(void *)(a1 + 48) = v18;
      *(void *)(a1 + 56) = v19;
      *(void *)(a1 + 64) = v21;
      *(void *)(a1 + 72) = v22;
      *(void *)(a1 + 80) = v23;
      *(void *)(a1 + 88) = v24;
      *(void *)(a1 + 96) = v25;
      *(void *)(a1 + 104) = v26;
      *(void *)(a1 + 112) = v27;
      *(void *)(a1 + 120) = v28;
      *(void *)(a1 + 128) = v29;
      *(void *)(a1 + 136) = v30;
      *(void *)(a1 + 144) = v31;
      *(void *)(a1 + 152) = v32;
      *(void *)(a1 + 160) = v33;
      *(void *)(a1 + 168) = v34;
      *(void *)(a1 + 176) = v35;
      *(void *)(a1 + 184) = v36;
      *(void *)(a1 + 192) = v37;
      *(void *)(a1 + 200) = v38;
      *(void *)(a1 + 208) = v39;
      *(_WORD *)(a1 + 216) = v40;
      break;
    case 2u:
      uint64_t v4 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
    case 3u:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      break;
    default:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10040C9FC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100030930(a1, type metadata accessor for TTRIAccountsListsSelection);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = *(void *)(a2 + 64);
        uint64_t v15 = *(void **)(a2 + 72);
        uint64_t v16 = *(void *)(a2 + 80);
        uint64_t v17 = *(void *)(a2 + 88);
        uint64_t v18 = *(void *)(a2 + 96);
        uint64_t v19 = *(void *)(a2 + 104);
        uint64_t v20 = *(void *)(a2 + 112);
        uint64_t v21 = *(void *)(a2 + 120);
        uint64_t v22 = *(void **)(a2 + 128);
        uint64_t v23 = *(void **)(a2 + 136);
        uint64_t v24 = *(void *)(a2 + 144);
        uint64_t v25 = *(void *)(a2 + 152);
        uint64_t v26 = *(void *)(a2 + 160);
        uint64_t v27 = *(void *)(a2 + 168);
        uint64_t v28 = *(void *)(a2 + 176);
        uint64_t v29 = *(void *)(a2 + 184);
        uint64_t v30 = *(void **)(a2 + 192);
        uint64_t v31 = *(void *)(a2 + 200);
        uint64_t v32 = *(void *)(a2 + 208);
        __int16 v33 = *(_WORD *)(a2 + 216);
        uint64_t v4 = *(void **)a2;
        uint64_t v5 = *(void *)(a2 + 8);
        uint64_t v6 = *(void *)(a2 + 16);
        uint64_t v7 = *(void *)(a2 + 24);
        uint64_t v8 = *(void *)(a2 + 32);
        uint64_t v9 = *(void *)(a2 + 40);
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = *(void *)(a2 + 56);
        sub_100095160(v4, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24,
          v25,
          v26,
          v27,
          v28,
          v29,
          v30,
          v31,
          v32,
          v33);
        *(void *)a1 = v4;
        *(void *)(a1 + 8) = v5;
        *(void *)(a1 + 16) = v6;
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = v8;
        *(void *)(a1 + 40) = v9;
        *(void *)(a1 + 48) = v10;
        *(void *)(a1 + 56) = v11;
        *(void *)(a1 + 64) = v14;
        *(void *)(a1 + 72) = v15;
        *(void *)(a1 + 80) = v16;
        *(void *)(a1 + 88) = v17;
        *(void *)(a1 + 96) = v18;
        *(void *)(a1 + 104) = v19;
        *(void *)(a1 + 112) = v20;
        *(void *)(a1 + 120) = v21;
        *(void *)(a1 + 128) = v22;
        *(void *)(a1 + 136) = v23;
        *(void *)(a1 + 144) = v24;
        *(void *)(a1 + 152) = v25;
        *(void *)(a1 + 160) = v26;
        *(void *)(a1 + 168) = v27;
        *(void *)(a1 + 176) = v28;
        *(void *)(a1 + 184) = v29;
        *(void *)(a1 + 192) = v30;
        *(void *)(a1 + 200) = v31;
        *(void *)(a1 + 208) = v32;
        *(_WORD *)(a1 + 216) = v33;
        break;
      case 2u:
        uint64_t v12 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10040CC98(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = type metadata accessor for REMHashtagLabelSpecifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10040CD50(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100030930((uint64_t)a1, type metadata accessor for TTRIAccountsListsSelection);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10040CE2C(uint64_t a1)
{
  if (sub_1004E34D8(a1)) {
    return 0;
  }
  sub_10003B754(&qword_100798568);
  sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
  sub_10041A1B4((unint64_t *)&qword_100798578, &qword_100798568);
  uint64_t result = Sequence.completeCompactMap<A>(_:)();
  if (result)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t sub_10040CEEC()
{
  return swift_retain();
}

void sub_10040CEF4(void *a1, char a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (a2)
    {
      swift_release();
    }
    else
    {
      char v8 = a4 & 1;
      uint64_t v9 = Strong + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction;
      uint64_t v10 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction);
      *(void *)uint64_t v9 = a1;
      *(unsigned char *)(v9 + 8) = v8;
      id v11 = a1;
      swift_release();
    }
  }
}

uint64_t sub_10040CF90(uint64_t a1, uint64_t a2, uint64_t (*a3)(unsigned char *))
{
  return sub_100417E08(a3);
}

uint64_t sub_10040CF9C()
{
  uint64_t v1 = sub_10003B754(&qword_10079E230);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for REMAccountsListDataView.Model();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess();
  sub_10003B694(v8, (uint64_t)v3, &qword_10079E230);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_10003B6F8((uint64_t)v3, &qword_10079E230);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  sub_100026B84((uint64_t)v7, 0, 2, 1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10040D158(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10041832C(a3 & 1);
}

id sub_10040D160()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v1 = *(id *)(Strong + 128);
  swift_unknownObjectRelease();
  return v1;
}

void sub_10040D1AC(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4, char a5)
{
}

uint64_t sub_10040D1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(v4 + 104);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 24) = 0;
  id v11 = *(void (**)(uint64_t, uint64_t, void (*)(void *, char), uint64_t, uint64_t, uint64_t))(v7 + 24);
  swift_retain();
  v11(a3, a4, sub_10034EF00, v10, ObjectType, v7);
  swift_release();

  return swift_release();
}

uint64_t sub_10040D2B8(void *a1, void *a2, int a3)
{
  int v27 = a3;
  uint64_t v26 = a1;
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v8 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v24 = (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TTRLocalizableStrings.UndoAction.addList.getter();
  uint64_t v10 = self;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v3;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = sub_100417DA4;
  void v13[3] = v12;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_10074ACA8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  id v15 = a2;
  swift_retain();
  swift_release();
  [v10 withActionName:v11 block:v14];

  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v14)
  {
    __break(1u);
LABEL_12:

    goto LABEL_13;
  }
  if ((v27 & 1) == 0) {
    return swift_release();
  }
  swift_retain();
  uint64_t v16 = v26;
  TTRAccountsListsViewModel.item(with:)();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v25) == 1)
  {
    sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788D10);
    uint64_t v17 = v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction;
    uint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction);
    *(void *)uint64_t v17 = v16;
    *(unsigned char *)(v17 + 8) = 0;

    id v19 = v16;
    return swift_release();
  }
  uint64_t v20 = v24;
  sub_1000400E4((uint64_t)v7, v24, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_9:
    sub_100030930(v20, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return swift_release();
  }
  uint64_t v22 = [Strong view];
  if (v22)
  {
    uint64_t v13 = v22;
    type metadata accessor for TTRIAccountsListsTreeView(0);
    if (swift_dynamicCastClass())
    {
      sub_1003F92F4(v20, 3, 1, sub_100089354, (uint64_t (*)(uint64_t))sub_100091FDC, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, uint64_t *))sub_10020B4F8);
      swift_unknownObjectRelease();

      goto LABEL_9;
    }
    goto LABEL_12;
  }
LABEL_13:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10040D714(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return sub_10040D2B8(a3, a4, 1);
}

uint64_t sub_10040D724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v7;
  v4[11] = v6;
  return _swift_task_switch(sub_10040D818, v7, v6);
}

uint64_t sub_10040D818()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10079F3D0 + dword_10079F3D0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10040D8F4;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_10040D8F4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[7] + 8))(v2[8], v2[6]);
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[10];
  if (v0) {
    uint64_t v5 = sub_10040DB84;
  }
  else {
    uint64_t v5 = sub_10040DA7C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10040DA7C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = *(void *)(Strong + 72);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 8))(ObjectType);
    id v5 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    sub_100057580(v4, (uint64_t)v5);
    if (sub_100429F60()) {
      sub_10042AC74(0);
    }
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10040DB84()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10040DBF0(uint64_t a1, uint64_t a2, char a3)
{
}

uint64_t sub_10040DBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_100418780(a5 & 1);
}

void sub_10040DC00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_10079DFC8);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t v6 = TTRAccountsListsPresenterCapability.customSmartListCreationParams(forHashtagLabels:)();
  if (!v6) {
    goto LABEL_6;
  }
  uint64_t v10 = (void *)v6;
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  Class isa = v3[9].isa;
  uint64_t ObjectType = swift_getObjectType();
  os_log_t oslog = v3;
  uint64_t v16 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, uint64_t, Class))*((void *)isa + 8);
  char v23 = a2;
  id v17 = v13;
  uint64_t v18 = v16(v10, v11, v12, v13, ObjectType, isa);
  swift_bridgeObjectRelease();

  if (v18)
  {
    id v19 = (char *)oslog + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction;
    uint64_t v20 = *(NSObject **)((char *)&oslog->isa
                       + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction);
    *(void *)id v19 = v18;
    v19[8] = v23 & 1;
  }
  else
  {
LABEL_6:
    osloga = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(osloga, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, osloga, v21, "Failed to create custom smart list for hashtag labels", v22, 2u);
      swift_slowDealloc();
    }
    uint64_t v20 = osloga;
  }
}

uint64_t sub_10040DE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(result + 72);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(a2, ObjectType, v7);
    uint64_t v10 = *sub_100038D28((void *)(v6 + 112), *(void *)(v6 + 136));
    swift_retain();
    sub_100413308(v9, v6, a3, v10);

    return swift_release_n();
  }
  return result;
}

uint64_t sub_10040DEDC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 72);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 112))(a2, ObjectType, v5);
    sub_100038D28((void *)(v4 + 112), *(void *)(v4 + 136));
    swift_retain();
    sub_1004136D4(v7, v4);

    return swift_release_n();
  }
  return result;
}

void sub_10040DFB0(void *a1@<X2>, int a2@<W3>, unsigned char *a3@<X8>)
{
  uint64_t v138 = type metadata accessor for TTRIAccountsListsSelection(0);
  uint64_t v7 = __chkstk_darwin(v138);
  uint64_t v9 = (uint64_t *)&v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = (uint64_t *)&v56[-v10];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_32;
  }
  uint64_t v13 = Strong;
  LODWORD(v85) = a2;
  if ([a1 isGroup])
  {
    swift_retain();
    id v14 = [a1 objectID];
    TTRAccountsListsViewModel.group(with:)();
    uint64_t v83 = v104[4];
    id v84 = (id)v104[6];
    swift_release();

    sub_100028C3C((uint64_t)v104, (uint64_t)&v105, &qword_10079E280);
    if (*((void *)&v105 + 1))
    {
      long long v134 = v105;
      long long v135 = v106;
      long long v136 = v107;
      long long v137 = v108;
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10003B754(&qword_10078EA10);
        uint64_t v15 = *(unsigned __int8 *)(*(void *)(type metadata accessor for TTRAccountsListsViewModel.Item() - 8) + 80);
        uint64_t v82 = v13;
        uint64_t v16 = (v15 + 32) & ~v15;
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_10066C6F0;
        uint64_t v18 = (_OWORD *)(v17 + v16);
        long long v19 = v137;
        _OWORD v18[2] = v136;
        v18[3] = v19;
        long long v20 = v135;
        _OWORD *v18 = v134;
        v18[1] = v20;
        swift_storeEnumTagMultiPayload();
        *uint64_t v11 = v17;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v21 = v84;
        sub_10007E938((uint64_t)v11, 0, v85 & 1);
        sub_100030930((uint64_t)v11, type metadata accessor for TTRIAccountsListsSelection);
        swift_unknownObjectRelease();
      }
      sub_100417D08((uint64_t)v104);
      goto LABEL_26;
    }
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_100018BF8(v37, (uint64_t)qword_10079DFC8);
    uint64_t v38 = a1;
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v138 = v3;
      uint64_t v41 = (uint8_t *)v40;
      uint64_t v42 = (void *)swift_slowAlloc();
      id v84 = a3;
      *(_DWORD *)uint64_t v41 = 138412290;
      long long v85 = v41 + 4;
      id v43 = [v38 objectID];
      *(void *)&long long v134 = v43;
      a3 = v84;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v42 = v43;

      _os_log_impl((void *)&_mh_execute_header, v26, v39, "Couldn't find the group to select {list.objectID: %@}", v41, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v26 = v38;
    }
    goto LABEL_31;
  }
  id v84 = a3;
  swift_retain();
  id v22 = [a1 objectID];
  TTRAccountsListsViewModel.pinnedListInnerList(with:)();
  sub_100028C3C((uint64_t)v103, (uint64_t)v102, &qword_100788E78);
  swift_release();

  sub_100028C3C((uint64_t)v103, (uint64_t)&v134, &qword_100788E78);
  if (sub_100096254((uint64_t *)&v134) != 1)
  {
    sub_100028C3C((uint64_t)v102, (uint64_t)&v105, &qword_100788E78);
    LODWORD(v83) = v133;
    LODWORD(v82) = v132;
    uint64_t v71 = v131;
    uint64_t v72 = v130;
    uint64_t v77 = v129;
    uint64_t v78 = v126;
    uint64_t v80 = v125;
    uint64_t v81 = v127;
    uint64_t v79 = v124;
    int v60 = v123;
    int v57 = v122;
    char v32 = v121;
    char v33 = v120;
    uint64_t v75 = v128;
    uint64_t v76 = v117;
    char v34 = v119;
    uint64_t v73 = v118;
    uint64_t v74 = v111;
    uint64_t v69 = v113;
    uint64_t v70 = v112;
    char v35 = v116;
    uint64_t v67 = v110;
    uint64_t v68 = v114;
    uint64_t v64 = v115;
    uint64_t v65 = v109;
    uint64_t v66 = *((void *)&v108 + 1);
    uint64_t v62 = v108;
    long long v63 = v107;
    uint64_t v61 = *((void *)&v106 + 1);
    uint64_t v58 = v106;
    long long v59 = v105;
    uint64_t v36 = (long long *)v102;
LABEL_19:
    sub_100028C3C((uint64_t)v36, (uint64_t)v101, &qword_100788E78);
    long long v88 = v59;
    *(void *)&long long v89 = v58;
    *((void *)&v89 + 1) = v61;
    long long v90 = v63;
    *(void *)&long long v91 = v62;
    *((void *)&v91 + 1) = v66;
    *(void *)&long long v92 = v65;
    *((void *)&v92 + 1) = v67;
    *(void *)&long long v93 = v74;
    *((void *)&v93 + 1) = v70;
    *(void *)&long long v94 = v69;
    *((void *)&v94 + 1) = v68;
    *(void *)&long long v95 = v64;
    BYTE8(v95) = v35;
    *(void *)&long long v96 = v76;
    *((void *)&v96 + 1) = v73;
    LOBYTE(v97) = v34;
    BYTE1(v97) = v33;
    BYTE2(v97) = v32;
    BYTE3(v97) = v57;
    BYTE4(v97) = v60;
    *((void *)&v97 + 1) = v79;
    *(void *)&long long v98 = v80;
    *((void *)&v98 + 1) = v78;
    *(void *)&long long v99 = v81;
    *((void *)&v99 + 1) = v75;
    *(void *)&v100[0] = v77;
    *((void *)&v100[0] + 1) = v72;
    *(void *)&v100[1] = v71;
    BYTE8(v100[1]) = v82;
    BYTE9(v100[1]) = v83;
    if (!swift_unknownObjectWeakLoadStrong())
    {
      sub_100417B60((uint64_t)v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100417BE4);
      sub_100417B60((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1000962F0);
      sub_10003B798((uint64_t)&v88);
      swift_release();
      a3 = v84;
LABEL_27:
      *a3 = 1;
      return;
    }
    if (v32)
    {
      v86[10] = v98;
      v86[11] = v99;
      v87[0] = v100[0];
      *(_OWORD *)((char *)v87 + 10) = *(_OWORD *)((char *)v100 + 10);
      v86[6] = v94;
      v86[7] = v95;
      v86[8] = v96;
      v86[9] = v97;
      v86[2] = v90;
      v86[3] = v91;
      v86[4] = v92;
      v86[5] = v93;
      v86[0] = v88;
      v86[1] = v89;
      sub_10009575C((uint64_t)v86);
      sub_1000950E8((uint64_t)v86, (uint64_t)v9);
    }
    else
    {
      sub_10003B754(&qword_10078EA10);
      uint64_t v44 = *(void *)(type metadata accessor for TTRAccountsListsViewModel.Item() - 8);
      unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_10066C6F0;
      long long v47 = (_OWORD *)(v46 + v45);
      long long v48 = v89;
      *long long v47 = v88;
      v47[1] = v48;
      long long v49 = v93;
      v47[4] = v92;
      v47[5] = v49;
      long long v50 = v91;
      v47[2] = v90;
      void v47[3] = v50;
      long long v51 = v97;
      v47[8] = v96;
      v47[9] = v51;
      long long v52 = v95;
      v47[6] = v94;
      v47[7] = v52;
      *(_OWORD *)((char *)v47 + 202) = *(_OWORD *)((char *)v100 + 10);
      long long v53 = v100[0];
      long long v54 = v98;
      v47[11] = v99;
      v47[12] = v53;
      v47[10] = v54;
      swift_storeEnumTagMultiPayload();
      *uint64_t v9 = v46;
    }
    swift_storeEnumTagMultiPayload();
    a3 = v84;
    char v55 = (char)v85;
    sub_100417B60((uint64_t)v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100417BE4);
    sub_1000326C4((uint64_t)&v88);
    sub_10007E938((uint64_t)v9, 0, v55 & 1);
    sub_100030930((uint64_t)v9, type metadata accessor for TTRIAccountsListsSelection);
    sub_100417B60((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1000962F0);
    swift_unknownObjectRelease();
    sub_10003B798((uint64_t)&v88);
LABEL_26:
    swift_release();
    goto LABEL_27;
  }
  swift_retain();
  id v23 = [a1 objectID];
  TTRAccountsListsViewModel.list(with:)();
  sub_100028C3C((uint64_t)v104, (uint64_t)&v88, &qword_100788E78);
  swift_release();

  sub_100028C3C((uint64_t)v104, (uint64_t)&v105, &qword_100788E78);
  if (sub_100096254((uint64_t *)&v105) != 1)
  {
    long long v59 = v105;
    uint64_t v58 = v106;
    long long v63 = v107;
    uint64_t v61 = *((void *)&v106 + 1);
    uint64_t v62 = v108;
    uint64_t v65 = v109;
    uint64_t v66 = *((void *)&v108 + 1);
    uint64_t v69 = v113;
    uint64_t v70 = v112;
    uint64_t v67 = v110;
    uint64_t v68 = v114;
    uint64_t v64 = v115;
    uint64_t v76 = v117;
    uint64_t v73 = v118;
    uint64_t v74 = v111;
    char v32 = v121;
    uint64_t v79 = v124;
    uint64_t v80 = v125;
    uint64_t v81 = v127;
    LODWORD(v83) = v133 & 1;
    LODWORD(v82) = v132 & 1;
    uint64_t v75 = v128;
    uint64_t v77 = v129;
    uint64_t v78 = v126;
    int v60 = v123 & 1;
    int v57 = v122 & 1;
    char v33 = v120 & 1;
    char v34 = v119 & 1;
    char v35 = v116 & 1;
    uint64_t v71 = v131;
    uint64_t v72 = v130;
    sub_100028C3C((uint64_t)&v88, (uint64_t)v86, &qword_100788E78);
    sub_1000326C4((uint64_t)v86);
    uint64_t v36 = &v88;
    goto LABEL_19;
  }
  if (qword_100785570 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100018BF8(v24, (uint64_t)qword_10079DFC8);
  uint64_t v25 = a1;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v138 = v3;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v30 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 138412290;
    long long v85 = v29 + 4;
    id v31 = [v25 objectID];
    *(void *)&v86[0] = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v30 = v31;

    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Couldn't find the list to select {list.objectID: %@}", v29, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v26 = v25;
  }
  a3 = v84;
LABEL_31:
  swift_release();

LABEL_32:
  *a3 = 0;
}

void sub_10040EBB8(void *a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
LABEL_15:
    *a2 = 0;
    return;
  }
  long long v49 = a2;
  if ([a1 isPinned])
  {
    swift_retain();
    id v8 = [a1 objectID];
    TTRAccountsListsViewModel.pinnedListInnerList(with:)();
    sub_100028C3C((uint64_t)v48, (uint64_t)&v34, &qword_100788E78);
    swift_release();
  }
  else
  {
    swift_retain();
    id v9 = [a1 objectID];
    TTRAccountsListsViewModel.customSmartList(with:)();
    sub_100028C3C((uint64_t)v48, (uint64_t)&v34, &qword_100788E78);
    swift_release();
  }
  sub_100028C3C((uint64_t)&v34, (uint64_t)v47, &qword_100788E78);
  sub_100028C3C((uint64_t)v47, (uint64_t)&v34, &qword_100788E78);
  if (sub_100096254((uint64_t *)&v34) == 1)
  {
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_10079DFC8);
    uint64_t v11 = a1;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v31 = v2;
      id v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)id v14 = 138412290;
      id v16 = [v11 objectID];
      *(void *)&v32[0] = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v15 = v16;

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Couldn't find the list to select {list.objectID: %@}", v14, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v12 = v11;
    }
    a2 = v49;
    swift_release();

    goto LABEL_15;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v18 = v49;
  if (Strong)
  {
    uint64_t v31 = v2;
    if (BYTE2(v43))
    {
      v32[10] = v44;
      v32[11] = v45;
      v33[0] = v46[0];
      *(_OWORD *)((char *)v33 + 10) = *(_OWORD *)((char *)v46 + 10);
      v32[6] = v40;
      v32[7] = v41;
      v32[8] = v42;
      v32[9] = v43;
      v32[2] = v36;
      void v32[3] = v37;
      v32[4] = v38;
      v32[5] = v39;
      v32[0] = v34;
      v32[1] = v35;
      sub_10009575C((uint64_t)v32);
      sub_1000950E8((uint64_t)v32, (uint64_t)v7);
    }
    else
    {
      sub_10003B754(&qword_10078EA10);
      uint64_t v19 = *(void *)(type metadata accessor for TTRAccountsListsViewModel.Item() - 8);
      unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_10066C6F0;
      id v22 = (_OWORD *)(v21 + v20);
      long long v23 = v35;
      *id v22 = v34;
      v22[1] = v23;
      long long v24 = v39;
      void v22[4] = v38;
      v22[5] = v24;
      long long v25 = v37;
      void v22[2] = v36;
      void v22[3] = v25;
      long long v26 = v43;
      v22[8] = v42;
      v22[9] = v26;
      long long v27 = v41;
      v22[6] = v40;
      v22[7] = v27;
      *(_OWORD *)((char *)v22 + 202) = *(_OWORD *)((char *)v46 + 10);
      long long v28 = v46[0];
      long long v29 = v44;
      v22[11] = v45;
      _OWORD v22[12] = v28;
      v22[10] = v29;
      swift_storeEnumTagMultiPayload();
      uint64_t *v7 = v21;
      uint64_t v18 = v49;
    }
    swift_storeEnumTagMultiPayload();
    sub_100028C3C((uint64_t)v47, (uint64_t)v32, &qword_100788E78);
    sub_1000326C4((uint64_t)v32);
    sub_10007E938((uint64_t)v7, 0, 0);
    sub_100030930((uint64_t)v7, type metadata accessor for TTRIAccountsListsSelection);
    swift_unknownObjectRelease();
    sub_100417B60((uint64_t)v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1000962F0);
    swift_release();
  }
  else
  {
    sub_100417B60((uint64_t)v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1000962F0);
    swift_release();
  }
  unsigned char *v18 = 1;
}

uint64_t sub_10040F128@<X0>(char a1@<W2>, char a2@<W3>, char *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v6);
  id v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_6;
  }
  swift_retain();
  char v10 = TTRAccountsListsViewModel.canDisplay(_:)();
  swift_release();
  if ((v10 & 1) == 0)
  {
    uint64_t result = swift_release();
LABEL_6:
    char v11 = 0;
    goto LABEL_7;
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    v12[0] = a1;
    sub_100095794((uint64_t)v12);
    sub_1000950E8((uint64_t)v12, (uint64_t)v8);
    char v11 = 1;
    swift_storeEnumTagMultiPayload();
    sub_10007E938((uint64_t)v8, 0, a2 & 1);
    sub_100030930((uint64_t)v8, type metadata accessor for TTRIAccountsListsSelection);
    swift_release();
    uint64_t result = swift_unknownObjectRelease();
  }
  else
  {
    uint64_t result = swift_release();
    char v11 = 1;
  }
LABEL_7:
  *a3 = v11;
  return result;
}

uint64_t sub_10040F2BC@<X0>(uint64_t a1@<X2>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_4;
  }
  sub_10003B694(*(void *)(result + 184) + direct field offset for TTRAccountsListsViewModel.hashtagsItem, (uint64_t)v9, (uint64_t *)&unk_100788D10);
  uint64_t v11 = type metadata accessor for TTRAccountsListsViewModel.Item();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) == 1)
  {
    swift_release();
    uint64_t result = sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788D10);
LABEL_4:
    char v12 = 0;
    goto LABEL_9;
  }
  sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788D10);
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v6, a1, v13);
    swift_storeEnumTagMultiPayload();
    sub_10007E938((uint64_t)v6, 0, 0);
    sub_100030930((uint64_t)v6, type metadata accessor for TTRIAccountsListsSelection);
    swift_release();
    uint64_t result = swift_unknownObjectRelease();
  }
  else
  {
    uint64_t result = swift_release();
  }
  char v12 = 1;
LABEL_9:
  *a2 = v12;
  return result;
}

uint64_t sub_10040F510(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100026B84(a2, 0, 2, 1);
    return swift_release();
  }
  return result;
}

void *sub_10040F57C()
{
  uint64_t v30 = type metadata accessor for TTRAccountsListsViewModel.SmartList();
  __chkstk_darwin(v30);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v3 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v5 = (_OWORD *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - v7;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_isEditing)) {
    return _swiftEmptyArrayStorage;
  }
  swift_retain();
  uint64_t v9 = TTRAccountsListsViewModel.visiblePinnedLists.getter();
  swift_release();
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v11 = v9 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v33 = *(void *)(v3 + 72);
  uint64_t v29 = v9;
  swift_bridgeObjectRetain();
  char v12 = _swiftEmptyArrayStorage;
  char v32 = v2;
  uint64_t v31 = v8;
  do
  {
    sub_1000245E0(v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    sub_1000245E0((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      long long v14 = v5[11];
      v35[10] = v5[10];
      v35[11] = v14;
      *(_OWORD *)long long v36 = v5[12];
      *(_OWORD *)&v36[10] = *(_OWORD *)((char *)v5 + 202);
      long long v15 = v5[7];
      v35[6] = v5[6];
      v35[7] = v15;
      long long v16 = v5[9];
      v35[8] = v5[8];
      v35[9] = v16;
      long long v17 = v5[3];
      uint64_t v35[2] = v5[2];
      v35[3] = v17;
      long long v18 = v5[5];
      v35[4] = v5[4];
      v35[5] = v18;
      long long v19 = v5[1];
      v35[0] = *v5;
      v35[1] = v19;
      uint64_t v20 = v19;
      uint64_t v21 = *((void *)&v35[0] + 1);
      id v22 = *(void **)&v35[0];
      swift_bridgeObjectRetain();
      unint64_t v23 = v22;
      sub_10003B798((uint64_t)v35);
    }
    else
    {
      sub_1000400E4((uint64_t)v5, (uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      unint64_t v23 = v2[*(int *)(v30 + 20)];
      if (v23 == 5)
      {
        sub_100030930((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
        sub_100030930((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        goto LABEL_5;
      }
      uint64_t v21 = TTRListType.PredefinedSmartListType.title.getter();
      uint64_t v20 = v24;
      sub_100030930((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    }
    sub_100030930((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_1005717F8(0, v12[2] + 1, 1, v12);
    }
    unint64_t v26 = v12[2];
    unint64_t v25 = v12[3];
    if (v26 >= v25 >> 1) {
      char v12 = sub_1005717F8((void *)(v25 > 1), v26 + 1, 1, v12);
    }
    _OWORD v12[2] = v26 + 1;
    long long v27 = &v12[4 * v26];
    unsigned char v27[4] = v21;
    v27[5] = v20;
    v27[6] = v23;
    *((unsigned char *)v27 + 56) = EnumCaseMultiPayload == 1;
    uint64_t v2 = v32;
    uint64_t v8 = v31;
LABEL_5:
    v11 += v33;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease_n();
  return v12;
}

BOOL sub_10040F980(uint64_t a1, void (*a2)(void))
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_100094C1C(a2);
    swift_unknownObjectRelease();
  }
  return Strong == 0;
}

id sub_10040F9D8()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = *(id *)(Strong + 128);
    swift_unknownObjectRelease();
    return v1;
  }
  else
  {
    if (qword_100785570 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_10079DFC8);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Accounts list presenter's moduleDelegate is not set when presenting search result, so unable to return a proper undoManager.", v6, 2u);
      swift_slowDealloc();
    }

    id v7 = objc_allocWithZone((Class)TTRUndoManager);
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 initWithDebugIdentifier:v8];

    return v9;
  }
}

uint64_t sub_10040FB38()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_10040FB74(uint64_t a1)
{
  return sub_10040A234(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (_OWORD *)(v1 + 40));
}

uint64_t sub_10040FB84(uint64_t a1)
{
  return a1;
}

uint64_t sub_10040FBBC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

BOOL sub_10040FC18(uint64_t a1)
{
  return sub_10040A474(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (_OWORD *)(v1 + 40));
}

uint64_t sub_10040FC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID() - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  id v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t result = __chkstk_darwin(v8);
  long long v14 = (char *)&v34 - v13;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v15 = 0;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v34 = a1;
  uint64_t v35 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  int64_t v36 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v20 = a2 + 56;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v37 = (v19 - 1) & v19;
  int64_t v38 = v15;
  for (unint64_t i = __clz(__rbit64(v19)) | (v15 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = v12;
    uint64_t v27 = *(void *)(v12 + 72);
    sub_1000245E0(*(void *)(a1 + 48) + v27 * i, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    long long v28 = v14;
    sub_1000400E4((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.ItemID.hash(into:)();
    Swift::Int v29 = Hasher._finalize()();
    uint64_t v30 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v31 = v29 & ~v30;
    if (((*(void *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
LABEL_27:
      sub_100030930((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return 0;
    }
    uint64_t v32 = ~v30;
    while (1)
    {
      sub_1000245E0(*(void *)(a2 + 48) + v31 * v27, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      char v33 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
      sub_100030930((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if (v33) {
        break;
      }
      unint64_t v31 = (v31 + 1) & v32;
      if (((*(void *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
        goto LABEL_27;
      }
    }
    uint64_t result = sub_100030930((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    a1 = v34;
    uint64_t v12 = v26;
    long long v14 = v28;
    unint64_t v19 = v37;
    int64_t v15 = v38;
    if (v37) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v36) {
      return 1;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v22);
    int64_t v24 = v15 + 1;
    if (!v23)
    {
      int64_t v24 = v22 + 1;
      if (v22 + 1 >= v36) {
        return 1;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v22 + 2;
        if (v22 + 2 >= v36) {
          return 1;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v37 = (v23 - 1) & v23;
    int64_t v38 = v24;
  }
  int64_t v25 = v22 + 3;
  if (v25 >= v36) {
    return 1;
  }
  unint64_t v23 = *(void *)(v35 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v36) {
      return 1;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_10040FFC0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v25 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v27 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v10 >= v26) {
      return 1;
    }
    unint64_t v11 = *(void *)(v25 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v26) {
        return 1;
      }
      unint64_t v11 = *(void *)(v25 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v26) {
          return 1;
        }
        unint64_t v11 = *(void *)(v25 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v27 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    int64_t v15 = *(void **)(*(void *)(result + 48) + 8 * v9);
    Hasher.init(_seed:)();
    id v16 = v15;
    TTRSectionID.hash(into:)();
    Swift::Int v17 = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v7 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_31;
    }
    id v20 = *(id *)(*(void *)(a2 + 48) + 8 * v19);
    char v21 = static TTRSectionID.__derived_enum_equals(_:_:)();

    if ((v21 & 1) == 0)
    {
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v7 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(a2 + 48) + 8 * v19);
        char v24 = static TTRSectionID.__derived_enum_equals(_:_:)();

        if (v24) {
          goto LABEL_7;
        }
      }
LABEL_31:

      return 0;
    }
LABEL_7:

    uint64_t result = v14;
    int64_t v3 = v27;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v26) {
    return 1;
  }
  unint64_t v11 = *(void *)(v25 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v26) {
      return 1;
    }
    unint64_t v11 = *(void *)(v25 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100410230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier() - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  int64_t v10 = (char *)&v34 - v9;
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v14 = (char *)&v34 - v13;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v15 = 0;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v34 = a1;
  uint64_t v35 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  int64_t v36 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v20 = a2 + 56;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v37 = (v19 - 1) & v19;
  int64_t v38 = v15;
  for (unint64_t i = __clz(__rbit64(v19)) | (v15 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = v12;
    uint64_t v27 = *(void *)(v12 + 72);
    sub_1000245E0(*(void *)(a1 + 48) + v27 * i, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    long long v28 = v14;
    sub_1000400E4((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    Hasher.init(_seed:)();
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
    Swift::Int v29 = Hasher._finalize()();
    uint64_t v30 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v31 = v29 & ~v30;
    if (((*(void *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
LABEL_29:
      sub_100030930((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      return 0;
    }
    uint64_t v32 = ~v30;
    while (1)
    {
      sub_1000245E0(*(void *)(a2 + 48) + v31 * v27, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      char v33 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)();
      sub_100030930((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      if (v33) {
        break;
      }
      unint64_t v31 = (v31 + 1) & v32;
      if (((*(void *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
        goto LABEL_29;
      }
    }
    uint64_t result = sub_100030930((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    a1 = v34;
    uint64_t v12 = v26;
    uint64_t v14 = v28;
    unint64_t v19 = v37;
    int64_t v15 = v38;
    if (v37) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v22 >= v36) {
      return 1;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v22);
    int64_t v24 = v15 + 1;
    if (!v23)
    {
      int64_t v24 = v22 + 1;
      if (v22 + 1 >= v36) {
        return 1;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v22 + 2;
        if (v22 + 2 >= v36) {
          return 1;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v22 + 3;
          if (v22 + 3 >= v36) {
            return 1;
          }
          unint64_t v23 = *(void *)(v35 + 8 * v24);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v37 = (v23 - 1) & v23;
    int64_t v38 = v24;
  }
  int64_t v25 = v22 + 4;
  if (v25 >= v36) {
    return 1;
  }
  unint64_t v23 = *(void *)(v35 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v25;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v36) {
      return 1;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_24;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_1004105E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != __CocoaSet.count.getter()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = __CocoaSet.contains(_:)();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_100410738(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  unint64_t v11 = (int *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (void **)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v14 = *(void **)(a5 + 56);
  sub_10003B694(a2, (uint64_t)v13 + v11[7], (uint64_t *)&unk_10078E360);
  void *v13 = a3;
  *(void **)((char *)v13 + v11[8]) = v14;
  uint64_t v15 = v11[9];
  long long v19 = *(_OWORD *)(a5 + 64);
  *(_OWORD *)((char *)v13 + v15) = v19;
  *((unsigned char *)v13 + v11[10]) = 0;
  swift_retain();
  id v16 = a3;
  swift_unknownObjectRetain();
  uint64_t v17 = sub_10058622C(v22, v13, a1, a4);
  sub_1000145EC((uint64_t)v22, (uint64_t)v20);
  char v21 = 12;
  sub_10034A728(v20, v17);

  sub_100016998((uint64_t)v20);
  sub_100038CD8((uint64_t)v22);
  return sub_100030930((uint64_t)v13, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
}

uint64_t sub_100410898(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void **)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(a5 + 96, (uint64_t)&v26);
  if (v29 == 6)
  {
    sub_100038ED8(&v26, (uint64_t)v30);
    uint64_t v13 = v31;
    uint64_t v14 = v32;
    uint64_t v15 = sub_100038D28(v30, v31);
    sub_10034E630((uint64_t)v15, a5, v13, v14);
  }
  else
  {
    sub_100016998((uint64_t)&v26);
    id v16 = *(void **)(a5 + 56);
    sub_10003B694(a2, (uint64_t)v12 + v10[5], (uint64_t *)&unk_10078E360);
    *uint64_t v12 = a1;
    *(void **)((char *)v12 + v10[6]) = v16;
    uint64_t v17 = v10[7];
    long long v25 = *(_OWORD *)(a5 + 64);
    *(_OWORD *)((char *)v12 + v17) = v25;
    *((unsigned char *)v12 + v10[8]) = a4 & 1;
    type metadata accessor for TTRIShowTodayAssembly();
    swift_retain();
    id v18 = a1;
    swift_unknownObjectRetain();
    long long v19 = sub_1002F11EC(v30, v12, a3);
    uint64_t v20 = v31;
    uint64_t v21 = v32;
    int64_t v22 = sub_100038D28(v30, v31);
    uint64_t v27 = v20;
    uint64_t v28 = *(void *)(v21 + 8);
    unint64_t v23 = sub_1000394A8((uint64_t *)&v26);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
    char v29 = 6;
    sub_10034A728(&v26, v19);

    sub_100030930((uint64_t)v12, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_100016998((uint64_t)&v26);
  }
  return sub_100038CD8((uint64_t)v30);
}

uint64_t sub_100410AC0(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void **)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(a5 + 96, (uint64_t)&v26);
  if (v29 == 3)
  {
    sub_100038ED8(&v26, (uint64_t)v30);
    uint64_t v13 = v31;
    uint64_t v14 = v32;
    uint64_t v15 = sub_100038D28(v30, v31);
    sub_10034E630((uint64_t)v15, a5, v13, v14);
  }
  else
  {
    sub_100016998((uint64_t)&v26);
    id v16 = *(void **)(a5 + 56);
    sub_10003B694(a2, (uint64_t)v12 + v10[5], (uint64_t *)&unk_10078E360);
    *uint64_t v12 = a1;
    *(void **)((char *)v12 + v10[6]) = v16;
    uint64_t v17 = v10[7];
    long long v25 = *(_OWORD *)(a5 + 64);
    *(_OWORD *)((char *)v12 + v17) = v25;
    *((unsigned char *)v12 + v10[8]) = a4 & 1;
    type metadata accessor for TTRIShowScheduledAssembly();
    swift_retain();
    id v18 = a1;
    swift_unknownObjectRetain();
    long long v19 = sub_100112724(v30, v12, a3);
    uint64_t v20 = v31;
    uint64_t v21 = v32;
    int64_t v22 = sub_100038D28(v30, v31);
    uint64_t v27 = v20;
    uint64_t v28 = *(void *)(v21 + 8);
    unint64_t v23 = sub_1000394A8((uint64_t *)&v26);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
    char v29 = 3;
    sub_10034A728(&v26, v19);

    sub_100030930((uint64_t)v12, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_100016998((uint64_t)&v26);
  }
  return sub_100038CD8((uint64_t)v30);
}

uint64_t sub_100410CE8(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void **)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(a5 + 96, (uint64_t)&v26);
  if (v29 == 5)
  {
    sub_100038ED8(&v26, (uint64_t)v30);
    uint64_t v13 = v31;
    uint64_t v14 = v32;
    uint64_t v15 = sub_100038D28(v30, v31);
    sub_10034E630((uint64_t)v15, a5, v13, v14);
  }
  else
  {
    sub_100016998((uint64_t)&v26);
    id v16 = *(void **)(a5 + 56);
    sub_10003B694(a2, (uint64_t)v12 + v10[5], (uint64_t *)&unk_10078E360);
    *uint64_t v12 = a1;
    *(void **)((char *)v12 + v10[6]) = v16;
    uint64_t v17 = v10[7];
    long long v25 = *(_OWORD *)(a5 + 64);
    *(_OWORD *)((char *)v12 + v17) = v25;
    *((unsigned char *)v12 + v10[8]) = a4 & 1;
    type metadata accessor for TTRIShowAllRemindersAssembly();
    swift_retain();
    id v18 = a1;
    swift_unknownObjectRetain();
    id v19 = sub_1003A9350(v30, v12, a3);
    uint64_t v20 = v31;
    uint64_t v21 = v32;
    int64_t v22 = sub_100038D28(v30, v31);
    uint64_t v27 = v20;
    uint64_t v28 = *(void *)(v21 + 8);
    unint64_t v23 = sub_1000394A8((uint64_t *)&v26);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
    char v29 = 5;
    sub_10034A728(&v26, v19);

    sub_100030930((uint64_t)v12, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_100016998((uint64_t)&v26);
  }
  return sub_100038CD8((uint64_t)v30);
}

uint64_t sub_100410F10(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void **)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(a5 + 96, (uint64_t)&v26);
  if (v29 == 4)
  {
    sub_100038ED8(&v26, (uint64_t)v30);
    uint64_t v13 = v31;
    uint64_t v14 = v32;
    uint64_t v15 = sub_100038D28(v30, v31);
    sub_10034E630((uint64_t)v15, a5, v13, v14);
  }
  else
  {
    sub_100016998((uint64_t)&v26);
    id v16 = *(void **)(a5 + 56);
    sub_10003B694(a2, (uint64_t)v12 + v10[5], (uint64_t *)&unk_10078E360);
    *uint64_t v12 = a1;
    *(void **)((char *)v12 + v10[6]) = v16;
    uint64_t v17 = v10[7];
    long long v25 = *(_OWORD *)(a5 + 64);
    *(_OWORD *)((char *)v12 + v17) = v25;
    *((unsigned char *)v12 + v10[8]) = a4 & 1;
    type metadata accessor for TTRIShowFlaggedAssembly();
    swift_retain();
    id v18 = a1;
    swift_unknownObjectRetain();
    id v19 = sub_100259F4C(v30, v12, a3);
    uint64_t v20 = v31;
    uint64_t v21 = v32;
    int64_t v22 = sub_100038D28(v30, v31);
    uint64_t v27 = v20;
    uint64_t v28 = *(void *)(v21 + 8);
    unint64_t v23 = sub_1000394A8((uint64_t *)&v26);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
    char v29 = 4;
    sub_10034A728(&v26, v19);

    sub_100030930((uint64_t)v12, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_100016998((uint64_t)&v26);
  }
  return sub_100038CD8((uint64_t)v30);
}

uint64_t sub_100411138(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (void **)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(a4 + 96, (uint64_t)&v24);
  if (v27 == 8)
  {
    sub_100038ED8(&v24, (uint64_t)v28);
    uint64_t v11 = v29;
    uint64_t v12 = v30;
    uint64_t v13 = sub_100038D28(v28, v29);
    sub_10034E630((uint64_t)v13, a4, v11, v12);
  }
  else
  {
    sub_100016998((uint64_t)&v24);
    uint64_t v14 = *(void **)(a4 + 56);
    sub_10003B694(a2, (uint64_t)v10 + v8[5], (uint64_t *)&unk_10078E360);
    int *v10 = a1;
    *(void **)((char *)v10 + v8[6]) = v14;
    uint64_t v15 = v8[7];
    long long v23 = *(_OWORD *)(a4 + 64);
    *(_OWORD *)((char *)v10 + v15) = v23;
    *((unsigned char *)v10 + v8[8]) = 0;
    type metadata accessor for TTRIShowSiriFoundInAppsAssembly();
    swift_retain();
    id v16 = a1;
    swift_unknownObjectRetain();
    uint64_t v17 = sub_10044EFC4(v28, v10, a3);
    uint64_t v18 = v29;
    uint64_t v19 = v30;
    uint64_t v20 = sub_100038D28(v28, v29);
    uint64_t v25 = v18;
    uint64_t v26 = *(void *)(v19 + 8);
    uint64_t v21 = sub_1000394A8((uint64_t *)&v24);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
    char v27 = 8;
    sub_10034A728(&v24, v17);

    sub_100030930((uint64_t)v10, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_100016998((uint64_t)&v24);
  }
  return sub_100038CD8((uint64_t)v28);
}

uint64_t sub_100411358(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (void **)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(a4 + 96, (uint64_t)&v24);
  if (v27 == 7)
  {
    sub_100038ED8(&v24, (uint64_t)v28);
    uint64_t v11 = v29;
    uint64_t v12 = v30;
    uint64_t v13 = sub_100038D28(v28, v29);
    sub_10034E630((uint64_t)v13, a4, v11, v12);
  }
  else
  {
    sub_100016998((uint64_t)&v24);
    uint64_t v14 = *(void **)(a4 + 56);
    sub_10003B694(a2, (uint64_t)v10 + v8[5], (uint64_t *)&unk_10078E360);
    int *v10 = a1;
    *(void **)((char *)v10 + v8[6]) = v14;
    uint64_t v15 = v8[7];
    long long v23 = *(_OWORD *)(a4 + 64);
    *(_OWORD *)((char *)v10 + v15) = v23;
    *((unsigned char *)v10 + v8[8]) = 0;
    type metadata accessor for TTRIShowAssignedAssembly();
    swift_retain();
    id v16 = a1;
    swift_unknownObjectRetain();
    id v17 = sub_100105918(v28, v10, a3);
    uint64_t v18 = v29;
    uint64_t v19 = v30;
    uint64_t v20 = sub_100038D28(v28, v29);
    uint64_t v25 = v18;
    uint64_t v26 = *(void *)(v19 + 8);
    uint64_t v21 = sub_1000394A8((uint64_t *)&v24);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
    char v27 = 7;
    sub_10034A728(&v24, v17);

    sub_100030930((uint64_t)v10, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_100016998((uint64_t)&v24);
  }
  return sub_100038CD8((uint64_t)v28);
}

uint64_t sub_100411578(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (void **)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(a4 + 96, (uint64_t)&v22);
  if (v25 == 11)
  {
    sub_100038ED8(&v22, (uint64_t)v26);
    uint64_t v11 = v27;
    uint64_t v12 = v28;
    uint64_t v13 = sub_100038D28(v26, v27);
    uint64_t v23 = v11;
    uint64_t v14 = *(void *)(v12 + 8);
    uint64_t v24 = v14;
    uint64_t v15 = sub_1000394A8((uint64_t *)&v22);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v15, v13, v11);
    sub_10034E630((uint64_t)v15, a4, v11, v14);
    sub_100038CD8((uint64_t)&v22);
    return sub_100038CD8((uint64_t)v26);
  }
  else
  {
    sub_100016998((uint64_t)&v22);
    id v17 = *(void **)(a4 + 56);
    sub_10003B694(a2, (uint64_t)v10 + v8[5], (uint64_t *)&unk_10078E360);
    int *v10 = a1;
    *(void **)((char *)v10 + v8[6]) = v17;
    uint64_t v18 = v8[7];
    long long v21 = *(_OWORD *)(a4 + 64);
    *(_OWORD *)((char *)v10 + v18) = v21;
    *((unsigned char *)v10 + v8[8]) = 0;
    swift_retain();
    id v19 = a1;
    swift_unknownObjectRetain();
    uint64_t v20 = sub_1002FF594(v26, v10, a3);
    sub_1000145EC((uint64_t)v26, (uint64_t)&v22);
    char v25 = 11;
    sub_10034A728(&v22, v20);

    sub_100016998((uint64_t)&v22);
    sub_100038CD8((uint64_t)v26);
    return sub_100030930((uint64_t)v10, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  }
}

void *sub_100411798(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1004117F0(a1, a2, a3, a4, a5);
}

void *sub_1004117F0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_10003B754(&qword_10079B280);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10066C680;
  *(void *)(v10 + 32) = a2;
  *(void *)(v10 + 40) = &off_1007383E0;
  v43[0] = a5;
  if (a3)
  {
    swift_retain();
    sub_100335918(a3);

    uint64_t v11 = a4;
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v11 = 0;
    a5 = 0;
  }
  *(void *)(v10 + 48) = v11;
  *(void *)(v10 + 56) = a5;
  sub_10003B754(&qword_10079B288);
  sub_10003B754(&qword_10079B290);
  sub_10041A1B4((unint64_t *)&qword_10079B298, &qword_10079B288);
  uint64_t v12 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for TTRIListDetailContainerRouter();
  uint64_t v14 = swift_allocObject();
  uint64_t v44 = v14 + 16;
  swift_unknownObjectWeakInit();
  v45[3] = v13;
  v45[4] = &off_100736D58;
  v45[0] = v14;
  type metadata accessor for TTRIListDetailContainerPresenter();
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = sub_100038E88((uint64_t)v45, v13);
  __chkstk_darwin(v16);
  uint64_t v18 = (void *)((char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  uint64_t v20 = *v18;
  v15[9] = v13;
  v15[10] = &off_100736D58;
  void v15[6] = v20;
  void v15[3] = 0;
  swift_unknownObjectWeakInit();
  v15[5] = 0;
  swift_unknownObjectWeakInit();
  v15[11] = v12;
  v43[1] = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100038CD8((uint64_t)v45);
  sub_10003B754(&qword_10079B2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  v22._uint64_t countAndFlagsBits = 0xD000000000000013;
  v22._object = (void *)0x80000001006A8310;
  v23._uint64_t countAndFlagsBits = 0x7473694C2077654ELL;
  v23._object = (void *)0xE800000000000000;
  v24._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v24._object = (void *)0x80000001006A8330;
  Swift::String v25 = TTRLocalizedString(_:value:comment:)(v22, v23, v24);
  *(void *)(inited + 32) = 7824750;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(Swift::String *)(inited + 48) = v25;
  *(void *)(inited + 64) = a1;
  if (a3)
  {
    sub_100335918(a3);
    id v26 = a1;
    v27._uint64_t countAndFlagsBits = 0xD000000000000019;
    v27._object = (void *)0x80000001006B64A0;
    v28._uint64_t countAndFlagsBits = 0x6574616C706D6554;
    v28._object = (void *)0xE900000000000073;
    v29._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v29._object = (void *)0x80000001006A8330;
    Swift::String v30 = TTRLocalizedString(_:value:comment:)(v27, v28, v29);
    id v31 = a3;
    uint64_t inited = (uint64_t)sub_100570AB8((void *)1, 2, 1, (void *)inited);
    *(void *)(inited + 16) = 2;
    *(void *)(inited + 72) = 0x6574616C706D6574;
    *(void *)(inited + 80) = 0xE900000000000073;
    *(Swift::String *)(inited + 88) = v30;
    *(void *)(inited + 104) = v31;
    swift_unknownObjectRelease();
  }
  else
  {
    id v32 = a1;
  }
  char v33 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIListDetailContainerViewController())
      + OBJC_IVAR____TtC9Reminders37TTRIListDetailContainerViewController_presenter;
  void *v33 = v15;
  v33[1] = &off_10074E510;
  swift_retain();
  uint64_t v34 = (void *)sub_1003B6040(inited, 0);
  void v15[3] = &off_10073AEB0;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v35 = [v34 presentationController:v43[0]];
  if (v35)
  {
    int64_t v36 = v35;
    [v35 setDelegate:v34];
  }
  uint64_t v44 = v12;
  uint64_t v37 = *(void *)(v12 + 16);
  if (v37)
  {
    int64_t v38 = (uint64_t *)(v44 + 40);
    do
    {
      uint64_t v39 = *v38;
      uint64_t ObjectType = swift_getObjectType();
      long long v41 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v39 + 16);
      swift_retain();
      swift_unknownObjectRetain();
      v41(v15, &off_10074E4F0, ObjectType, v39);
      swift_unknownObjectRelease();
      v38 += 2;
      --v37;
    }
    while (v37);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v34;
}

uint64_t sub_100411CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  char v15 = a7 & 1;
  v18[3] = type metadata accessor for TTRIListDetailRouter();
  v18[4] = &off_100741398;
  v18[0] = a4;
  *(void *)(a8 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a8 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a8 + 88) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a8 + 160) = 0;
  *(void *)(a8 + 168) = 0;
  *(void *)(a8 + 144) = a2;
  *(void *)(a8 + 152) = a3;
  sub_1000145EC((uint64_t)v18, a8 + 104);
  *(unsigned char *)(a8 + 96) = v15;
  *(void *)(a8 + 16) = a1;
  *(void *)(a8 + 24) = a5;
  *(void *)(a8 + 32) = a6;
  uint64_t v16 = swift_retain();
  sub_1003B2B88(v16, (uint64_t)v19);
  swift_release();
  sub_1000B3298((uint64_t)v19);
  *(unsigned char *)(a8 + 40) = v19[184];
  sub_100038CD8((uint64_t)v18);
  return a8;
}

void *sub_100411E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = [*(id *)(a1 + 16) store];
  id v9 = sub_100414430(v8, a1, 0, a2, (uint64_t)&off_10074A540);
  uint64_t v11 = v10;

  uint64_t v12 = *(void **)(a1 + 24);
  id v13 = [v12 capabilities];
  unsigned int v14 = [v13 supportsTemplates];

  if (v14)
  {
    id v15 = sub_1005084A8(0, v12, a3, a4);
    uint64_t v17 = v16;
    uint64_t v19 = *(void *)(v18 + 8);
    id v20 = v15;
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v19 = 0;
    id v15 = 0;
    uint64_t v17 = 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  Swift::String v22 = sub_1003353C8(v9, v11, v15, v17, v19, ObjectType, (uint64_t)&off_1007383E0);
  sub_1001DC3BC(v15);
  sub_1001DC3BC(v15);

  return v22;
}

id sub_100411F64(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  char v10 = a6 & 1;
  id v11 = objc_allocWithZone((Class)TTRUndoManager);
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 initWithDebugIdentifier:v12];

  type metadata accessor for TTRIGroupDetailInteractor();
  swift_allocObject();
  id v14 = a1;
  id v15 = a2;
  id v16 = a3;
  swift_bridgeObjectRetain();
  id v17 = v13;
  uint64_t v18 = sub_1002A5820(v14, v15, v16, a4, v17);
  uint64_t v19 = type metadata accessor for TTRIGroupDetailRouter();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v34 = v19;
  id v35 = &off_10074C018;
  v32[0] = v20;
  type metadata accessor for TTRIGroupDetailPresenter();
  long long v21 = (void *)swift_allocObject();
  uint64_t v22 = sub_100038E88((uint64_t)v32, v19);
  __chkstk_darwin(v22);
  Swift::String v24 = (void *)((char *)&v32[-1] - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  uint64_t v26 = *v24;
  v21[11] = v19;
  v21[12] = &off_10074C018;
  v21[8] = v26;
  uint64_t v21[3] = 0;
  swift_unknownObjectWeakInit();
  _OWORD v21[5] = 0;
  swift_unknownObjectWeakInit();
  void v21[6] = v18;
  v21[7] = &off_100741360;
  v21[13] = v17;
  id v27 = v17;
  swift_retain();
  swift_retain();
  sub_100038CD8((uint64_t)v32);
  type metadata accessor for TTRIGroupDetailViewController();
  v32[0] = v21;
  v32[1] = &off_100739DC8;
  char v33 = v10;
  uint64_t v34 = (uint64_t)v27;
  static TTRTypedController<>.instantiateFromStoryboard(with:)();
  Swift::String v28 = v31;
  id v29 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v31];

  v18[3] = &off_100739DB8;
  swift_unknownObjectWeakAssign();
  swift_release();
  uint64_t v21[3] = &off_100750A30;
  swift_unknownObjectWeakAssign();

  _OWORD v21[5] = &off_10074A518;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v29;
}

void sub_10041229C(char a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  id v7 = *v6;
  char v8 = TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.getter();

  if (v8)
  {
    if (qword_1007854D0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100018BF8(v9, (uint64_t)qword_10079BB90);
    char v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      NSString v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "showWelcomeScreen: Showing upgrade screen because iCloud sync was enabled since last app start.", v12, 2u);
      swift_slowDealloc();
    }

    id v13 = *v6;
    TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.setter();
  }
  id v16 = sub_100412428(a3, a2);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = Strong;
    [Strong presentViewController:v16 animated:a1 & 1 completion:0];
  }
}

id sub_100412428(uint64_t a1, void *a2)
{
  type metadata accessor for TTRWelcomeNavigationInteractor();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = type metadata accessor for TTRIWelcomeNavigationRouter();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21[3] = v4;
  double v21[4] = &off_10074FBC0;
  v21[0] = v5;
  type metadata accessor for TTRIWelcomeNavigationPresenter();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = sub_100038E88((uint64_t)v21, v4);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  uint64_t v11 = *v9;
  v6[12] = v4;
  v6[13] = &off_10074FBC0;
  v6[9] = v11;
  v6[3] = 0;
  swift_unknownObjectWeakInit();
  v6[5] = 0;
  swift_unknownObjectWeakInit();
  v6[7] = v3;
  v6[8] = &off_10074C3F0;
  v6[6] = a2;
  swift_retain();
  swift_retain();
  sub_100416F34(a2);
  sub_100038CD8((uint64_t)v21);
  swift_retain();
  if (a2 == (void *)1) {
    id v12 = sub_1005E2B50((uint64_t)v6, (uint64_t)&off_10074C458);
  }
  else {
    id v12 = sub_10053FA0C((uint64_t)v6, (uint64_t)&off_10074C480, a2);
  }
  id v13 = v12;
  swift_release();
  swift_unknownObjectRelease();
  id v14 = (objc_class *)type metadata accessor for TTRIWelcomeNavigationViewController();
  id v15 = (char *)objc_allocWithZone(v14);
  id v16 = &v15[OBJC_IVAR____TtC9Reminders35TTRIWelcomeNavigationViewController_presenter];
  *(void *)id v16 = v6;
  *((void *)v16 + 1) = &off_10074C4B8;
  v20.receiver = v15;
  v20.super_class = v14;
  swift_retain_n();
  id v17 = [super initWithRootViewController:v13];
  swift_release();

  *(void *)(v3 + 24) = &off_10074C4B0;
  swift_unknownObjectWeakAssign();
  swift_release();
  v6[3] = &off_100740438;
  swift_unknownObjectWeakAssign();
  v6[5] = &off_100743550;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v17;
}

void *sub_10041270C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[12] = type metadata accessor for TTRIListSharingRouter();
  a5[13] = &off_10074A320;
  a5[9] = a2;
  a5[3] = 0;
  swift_unknownObjectWeakInit();
  a5[5] = 0;
  swift_unknownObjectWeakInit();
  a5[16] = 0;
  a5[6] = 0;
  a5[7] = a1;
  a5[8] = &off_100749B20;
  a5[14] = a3;
  a5[15] = a4;
  return a5;
}

void sub_1004127A0(void *a1, uint64_t a2)
{
  id v4 = [a1 store];
  id v5 = [a1 objectID];
  v18[0] = 0;
  id v6 = [v4 fetchListWithObjectID:v5 error:v18];

  if (v6)
  {
    id v7 = v18[0];
    id v8 = sub_100412A08(v6, a2, [v6 isOwnedByMe] ^ 1u);
    swift_unknownObjectRelease();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v10 = Strong;
      id v11 = [Strong presentedViewController];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v10;
        *(void *)(v13 + 24) = v8;
        *(unsigned char *)(v13 + 32) = 1;
        v18[4] = sub_10020A430;
        void v18[5] = (id)v13;
        v18[0] = _NSConcreteStackBlock;
        v18[1] = (id)1107296256;
        _OWORD v18[2] = sub_10000AD88;
        v18[3] = &unk_10074AE38;
        id v14 = _Block_copy(v18);
        id v15 = v10;
        id v16 = v8;
        swift_release();
        [v12 dismissViewControllerAnimated:1 completion:v14];

        _Block_release(v14);
      }
      else
      {
        [v10 presentViewController:v8 animated:1 completion:0];
      }
    }
    else
    {
    }
  }
  else
  {
    id v17 = v18[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
}

id sub_100412A08(void *a1, uint64_t a2, char a3)
{
  v27[1] = a2;
  char v4 = a3 & 1;
  id v5 = objc_allocWithZone((Class)TTRUndoManager);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithDebugIdentifier:v6];

  type metadata accessor for TTRListSharingInteractor();
  swift_allocObject();
  id v8 = a1;
  id v9 = v7;
  uint64_t v10 = sub_1003E83A0(v8, v9);
  uint64_t v11 = type metadata accessor for TTRIListSharingRouter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for TTRListSharingContactProvider();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 24) = 0;
  swift_unknownObjectWeakInit();
  id v14 = [self defaultProvider];
  id v15 = [v14 contactStore];

  *(void *)(v13 + 32) = v15;
  uint64_t v31 = v11;
  id v32 = &off_10074A320;
  v29[0] = v12;
  type metadata accessor for TTRIListSharingPresenter();
  id v16 = (void *)swift_allocObject();
  uint64_t v17 = sub_100038E88((uint64_t)v29, v11);
  double v18 = __chkstk_darwin(v17);
  objc_super v20 = (void *)((char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = sub_10041270C((uint64_t)v10, *v20, (uint64_t)v9, v13, v16);
  id v23 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038CD8((uint64_t)v29);
  type metadata accessor for TTRIListSharingViewController();
  v29[0] = v22;
  v29[1] = &off_100748E28;
  char v30 = v4;
  uint64_t v31 = (uint64_t)v23;
  static TTRTypedController<>.instantiateFromStoryboard(with:)();
  Swift::String v24 = v28;
  id v25 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v28];

  v10[3] = &off_100748E18;
  swift_unknownObjectWeakAssign();
  swift_release();
  void v22[3] = &off_100737848;
  swift_unknownObjectWeakAssign();

  uint64_t v22[5] = &off_10074A3E0;
  swift_unknownObjectWeakAssign();
  *(void *)(v13 + 24) = &off_100748E08;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v25;
}

id sub_100412D84(void *a1, uint64_t a2, char a3)
{
  v27[1] = a2;
  char v4 = a3 & 1;
  id v5 = objc_allocWithZone((Class)TTRUndoManager);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithDebugIdentifier:v6];

  type metadata accessor for TTRListSharingInteractor();
  swift_allocObject();
  id v8 = a1;
  id v9 = v7;
  uint64_t v10 = sub_1003E83A0(v8, v9);
  uint64_t v11 = type metadata accessor for TTRIListSharingRouter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for TTRListSharingContactProvider();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 24) = 0;
  swift_unknownObjectWeakInit();
  id v14 = [self defaultProvider];
  id v15 = [v14 contactStore];

  *(void *)(v13 + 32) = v15;
  uint64_t v31 = v11;
  id v32 = &off_10074A320;
  v29[0] = v12;
  type metadata accessor for TTRIListSharingPresenter();
  id v16 = (void *)swift_allocObject();
  uint64_t v17 = sub_100038E88((uint64_t)v29, v11);
  double v18 = __chkstk_darwin(v17);
  objc_super v20 = (void *)((char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = sub_10041270C((uint64_t)v10, *v20, (uint64_t)v9, v13, v16);
  id v23 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038CD8((uint64_t)v29);
  type metadata accessor for TTRIListSharingViewController();
  v29[0] = v22;
  v29[1] = &off_100748E28;
  char v30 = v4;
  uint64_t v31 = (uint64_t)v23;
  static TTRTypedController<>.instantiateFromStoryboard(with:)();
  Swift::String v24 = v28;
  id v25 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v28];

  v10[3] = &off_100748E18;
  swift_unknownObjectWeakAssign();
  swift_release();
  void v22[3] = &off_100737848;
  swift_unknownObjectWeakAssign();

  uint64_t v22[5] = &off_10073CA80;
  swift_unknownObjectWeakAssign();
  *(void *)(v13 + 24) = &off_100748E08;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v25;
}

uint64_t sub_100413100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, void (*a9)(void *__return_ptr, id))
{
  char v16 = a7 & 1;
  v18[3] = type metadata accessor for TTRIListDetailRouter();
  v18[4] = &off_100741398;
  v18[0] = a4;
  *(void *)(a8 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a8 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a8 + 88) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a8 + 160) = 0;
  *(void *)(a8 + 168) = 0;
  *(void *)(a8 + 144) = a2;
  *(void *)(a8 + 152) = a3;
  sub_1000145EC((uint64_t)v18, a8 + 104);
  *(unsigned char *)(a8 + 96) = v16;
  *(void *)(a8 + 16) = a1;
  *(void *)(a8 + 24) = a5;
  *(void *)(a8 + 32) = a6;
  a9(v19, *(id *)(*(void *)(a1 + 32) + 16));
  sub_1000B3298((uint64_t)v19);
  *(unsigned char *)(a8 + 40) = v20;
  sub_100038CD8((uint64_t)v18);
  return a8;
}

uint64_t sub_100413204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  char v15 = a7 & 1;
  v18[3] = type metadata accessor for TTRIListDetailRouter();
  v18[4] = &off_100741398;
  v18[0] = a4;
  *(void *)(a8 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a8 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a8 + 88) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a8 + 160) = 0;
  *(void *)(a8 + 168) = 0;
  *(void *)(a8 + 144) = a2;
  *(void *)(a8 + 152) = a3;
  sub_1000145EC((uint64_t)v18, a8 + 104);
  *(unsigned char *)(a8 + 96) = v15;
  *(void *)(a8 + 16) = a1;
  *(void *)(a8 + 24) = a5;
  *(void *)(a8 + 32) = a6;
  id v16 = *(id *)(*(void *)(a1 + 32) + 16);
  sub_1003B3AC8(v16, (uint64_t)v19);

  sub_1000B3298((uint64_t)v19);
  *(unsigned char *)(a8 + 40) = v19[184];
  sub_100038CD8((uint64_t)v18);
  return a8;
}

uint64_t sub_100413308(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v30[1] = a4;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v14 = (char *)v13 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
  void *v13 = [a1 objectID];
  uint64_t v15 = enum case for REMNavigationSpecifier.ListPathSpecifier.DetailSection.none(_:);
  uint64_t v16 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  uint64_t v17 = enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:);
  uint64_t v18 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v14, v17, v18);
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for REMNavigationSpecifier.list(_:), v10);
  if (qword_100785398 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100018BF8(v19, (uint64_t)qword_100793E40);
  REMNavigationSpecifier.url.getter();
  sub_1003AA514(0x73746E756F636341, 0xED00007473694C20, 0x746544207473694CLL, 0xEB000000006C6961, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v20 = [a1 saveRequest];
  id v21 = [v20 store];

  id v22 = sub_1004188E4(v21, a1, 1, a2, (uint64_t)&off_10074A540);
  uint64_t v24 = v23;

  id v25 = v22;
  swift_retain();
  uint64_t v26 = sub_1004117F0(v25, v24, 0, 0, 0);

  swift_release_n();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v28 = Strong;
    [Strong presentViewController:v26 animated:1 completion:0];

    uint64_t v26 = v28;
  }

  return (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_1004136D4(void *a1, uint64_t a2)
{
  id v4 = [a1 saveRequest];
  id v5 = [v4 store];

  id v6 = sub_100418E34(v5, a1, 1, a2, (uint64_t)&off_10074A540);
  uint64_t v8 = v7;

  id v9 = v6;
  swift_retain();
  id v12 = sub_1004117F0(v9, v8, 0, 0, 0);

  swift_release_n();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    [Strong presentViewController:v12 animated:1 completion:0];
  }
}

BOOL sub_1004137F0(void *a1, void *a2)
{
  if ((static TTRPermissionConfiguration.Header.__derived_struct_equals(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = a1[8];
  uint64_t v5 = a2[8];
  if (!v4) {
    return !v5;
  }
  if (!v5) {
    return 0;
  }
  uint64_t v6 = a1[7];
  unint64_t v7 = a1[9];
  uint64_t v8 = (void *)a1[10];
  uint64_t v9 = a2[7];
  unint64_t v10 = a2[9];
  uint64_t v11 = (void *)a2[10];
  if (v6 == v9 && v4 == v5 || (char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v12 & 1) != 0))
  {
    unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (v7 >> 2 == 0xFFFFFFFF)
    {
      if (v14 != 0x3FFFFFFFCLL) {
        return 0;
      }
    }
    else
    {
      if (v14 == 0x3FFFFFFFCLL) {
        return 0;
      }
      sub_1002C4D2C(v9, v5, v10, v11);
      sub_1002C4D2C(v6, v4, v7, v8);
      sub_100097108(v10, v11);
      sub_100097108(v7, v8);
      char v15 = static TTRPermissionConfiguration.Action.__derived_enum_equals(_:_:)();
      sub_100096554(v10, v11);
      sub_100096554(v7, v8);
      sub_10009657C(v9, v5, v10, v11);
      sub_10009657C(v6, v4, v7, v8);
      if ((v15 & 1) == 0) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

void *sub_1004139A8(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_1004D37E8(0, v2, 0);
    uint64_t v5 = (unsigned char *)(a1 + 40);
    do
    {
      char v6 = *v5;
      unint64_t v7 = &selRef_updateSmartList_;
      if (!*v5) {
        unint64_t v7 = &selRef_updateList_;
      }
      id v8 = [a2 *v7 *((void *)v5 - 1)];
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1004D37E8(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v8;
      *((unsigned char *)v11 + 40) = v6;
      v5 += 16;
      --v2;
    }
    while (v2);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100413ABC(void *a1, char a2, void *a3)
{
  unsigned int v6 = [a1 isGroup];
  sub_100038D28(a3 + 6, a3[9]);
  if (v6) {
    sub_10034A1D8(a1, (uint64_t)a3, (uint64_t)v8);
  }
  else {
    sub_100349508(a1, a3, (uint64_t)&off_100743650, a2 & 1, (uint64_t)v8);
  }
  return sub_100038CD8((uint64_t)v8);
}

uint64_t sub_100413B60(char a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      uint64_t v13 = sub_100038D28((void *)(a4 + 48), *(void *)(a4 + 72));
      uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 1, 1, v14);
      sub_100410AC0(a2, (uint64_t)v10, a4, a3 & 1, *v13);
      break;
    case 2:
      char v15 = sub_100038D28((void *)(a4 + 48), *(void *)(a4 + 72));
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
      sub_100410CE8(a2, (uint64_t)v10, a4, a3 & 1, *v15);
      break;
    case 3:
      uint64_t v17 = sub_100038D28((void *)(a4 + 48), *(void *)(a4 + 72));
      uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
      sub_100410F10(a2, (uint64_t)v10, a4, a3 & 1, *v17);
      break;
    case 4:
      uint64_t v19 = sub_100038D28((void *)(a4 + 48), *(void *)(a4 + 72));
      uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
      sub_100411358(a2, (uint64_t)v10, a4, *v19);
      break;
    case 5:
      id v21 = sub_100038D28((void *)(a4 + 48), *(void *)(a4 + 72));
      uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 1, 1, v22);
      sub_100411138(a2, (uint64_t)v10, a4, *v21);
      break;
    case 6:
      uint64_t v23 = sub_100038D28((void *)(a4 + 48), *(void *)(a4 + 72));
      uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
      sub_100411578(a2, (uint64_t)v10, a4, *v23);
      break;
    default:
      uint64_t v11 = sub_100038D28((void *)(a4 + 48), *(void *)(a4 + 72));
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
      sub_100410898(a2, (uint64_t)v10, a4, a3 & 1, *v11);
      break;
  }
  return sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_10078E360);
}