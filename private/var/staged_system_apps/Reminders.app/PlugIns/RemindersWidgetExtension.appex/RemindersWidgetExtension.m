uint64_t sub_100003B58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38[3];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v44 = a1;
  v38[2] = type metadata accessor for TTRTodayComplicationWidgetProvider();
  __chkstk_darwin();
  v2 = (char *)v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000AE1F8();
  v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000693C(&qword_1000D4AD8);
  v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000693C(&qword_1000D4AE0);
  v12 = *(void *)(v11 - 8);
  v40 = v11;
  v41 = v12;
  __chkstk_darwin();
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000693C(&qword_1000D4AE8);
  v16 = *(void *)(v15 - 8);
  v42 = v15;
  v43 = v16;
  __chkstk_darwin();
  v39 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for REMWidgetRefresh.WidgetKind.widgetForTodayList(_:), v3);
  sub_1000AE1E8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100006FF0(v38[1], (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetProvider);
  type metadata accessor for TTRTodayComplicationWidget.WidgetPlaceholderWrapper(0);
  sub_100006F50(&qword_1000D4AF0, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.WidgetPlaceholderWrapper);
  sub_100006F50(&qword_1000D4AF8, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidgetProvider);
  sub_1000AF2E8();
  sub_1000AEB88();
  v18 = sub_1000AEEC8();
  v20 = v19;
  LOBYTE(v4) = v21 & 1;
  v22 = sub_100009F50(&qword_1000D4B00, &qword_1000D4AD8);
  sub_1000AEC48();
  sub_100006FE0(v18, v20, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1000AEB88();
  v23 = sub_1000AEEC8();
  v25 = v24;
  v27 = v26 & 1;
  v45 = v7;
  v46 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v30 = v39;
  v29 = v40;
  sub_1000AEC08();
  sub_100006FE0(v23, v25, v27);
  swift_bridgeObjectRelease();
  v31 = v29;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v29);
  sub_10000693C(&qword_1000D4B08);
  v32 = sub_1000AF2A8();
  v33 = *(void *)(v32 - 8);
  v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1000B0270;
  (*(void (**)(unint64_t, void, uint64_t))(v33 + 104))(v35 + v34, enum case for WidgetFamily.accessoryInline(_:), v32);
  v45 = v31;
  v46 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v36 = v42;
  sub_1000AEC28();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v30, v36);
}

uint64_t sub_1000041D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRTodayComplicationWidgetTimelineEntry();
  return sub_100006FF0(a1 + *(int *)(v4 + 20), a2, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_100004228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v24 = sub_10000693C(&qword_1000D4BA0);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AE968();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  ((void (*)(void))__chkstk_darwin)();
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s10WidgetViewVMa();
  ((void (*)(void))__chkstk_darwin)();
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000693C(&qword_1000D4BA8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = ((uint64_t (*)(void))__chkstk_darwin)();
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v22 - v16;
  char v18 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for TTRTodayComplicationWidgetViewModel() + 20));
  sub_100006FF0(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetViewModel);
  if (v18)
  {
    sub_1000AE958();
    uint64_t v21 = sub_100006F50(&qword_1000D4BB0, (void (*)(uint64_t))_s10WidgetViewVMa);
    sub_1000AF018();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
    sub_10000803C((uint64_t)v10, (uint64_t (*)(void))_s10WidgetViewVMa);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v15, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v4, v17, v11);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = v8;
    uint64_t v27 = v21;
    swift_getOpaqueTypeConformance2();
    sub_1000AEC68();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    sub_100006FF0((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))_s10WidgetViewVMa);
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = sub_100006F50(&qword_1000D4BB0, (void (*)(uint64_t))_s10WidgetViewVMa);
    uint64_t v26 = v8;
    uint64_t v27 = v19;
    swift_getOpaqueTypeConformance2();
    sub_1000AEC68();
    return sub_10000803C((uint64_t)v10, (uint64_t (*)(void))_s10WidgetViewVMa);
  }
}

uint64_t sub_100004654@<X0>(uint64_t a1@<X8>)
{
  return sub_100004228(v1, a1);
}

uint64_t sub_10000465C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v49 = type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView(0);
  __chkstk_darwin(v49);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10000693C(&qword_1000D4CC8);
  __chkstk_darwin(v45);
  uint64_t v48 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView(0);
  __chkstk_darwin(v47);
  v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = sub_10000693C(&qword_1000D4CD0);
  __chkstk_darwin(v52);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for TTRTodayComplicationWidget.InlineReminderView(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10000693C(&qword_1000D4CB0);
  __chkstk_darwin(v51);
  v46 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000693C(&qword_1000D4CD8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000933C8((uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v44 = v9;
    sub_100009EF4((uint64_t)v16, &qword_1000D4CD8);
    uint64_t v21 = sub_100093ACC();
    if (v21 <= 0)
    {
      uint64_t v37 = sub_1000ADD48();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v4, a1, v37);
      uint64_t v38 = type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(0);
      uint64_t v39 = *(void *)(a1 + *(int *)(v38 + 20));
      uint64_t v40 = *(void *)(a1 + *(int *)(v38 + 24));
      uint64_t v41 = v48;
      uint64_t v42 = v49;
      *(void *)&v4[*(int *)(v49 + 20)] = v39;
      *(void *)&v4[*(int *)(v42 + 24)] = v40;
      sub_100006FF0((uint64_t)v4, v41, type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView);
      swift_storeEnumTagMultiPayload();
      sub_100006F50(&qword_1000D4CB8, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView);
      sub_100006F50(&qword_1000D4CC0, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView);
      swift_retain();
      swift_retain();
      uint64_t v29 = (uint64_t)v46;
      sub_1000AEC68();
      v30 = type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView;
      uint64_t v31 = (uint64_t)v4;
    }
    else
    {
      uint64_t v22 = v21;
      uint64_t v23 = v47;
      uint64_t v24 = (char *)v7 + *(int *)(v47 + 20);
      uint64_t v25 = sub_1000ADD48();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, a1, v25);
      uint64_t v26 = type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(0);
      uint64_t v27 = *(void *)(a1 + *(int *)(v26 + 20));
      uint64_t v28 = *(void *)(a1 + *(int *)(v26 + 24));
      uint64_t *v7 = v22;
      *(uint64_t *)((char *)v7 + *(int *)(v23 + 24)) = v27;
      *(uint64_t *)((char *)v7 + *(int *)(v23 + 28)) = v28;
      sub_100006FF0((uint64_t)v7, v48, type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView);
      swift_storeEnumTagMultiPayload();
      sub_100006F50(&qword_1000D4CB8, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView);
      sub_100006F50(&qword_1000D4CC0, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView);
      swift_retain();
      swift_retain();
      uint64_t v29 = (uint64_t)v46;
      sub_1000AEC68();
      v30 = type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView;
      uint64_t v31 = (uint64_t)v7;
    }
    sub_10000803C(v31, v30);
    sub_100009D6C(v29, (uint64_t)v44, &qword_1000D4CB0);
    swift_storeEnumTagMultiPayload();
    sub_100006F50(&qword_1000D4CA0, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.InlineReminderView);
    sub_100007EE8();
    sub_1000AEC68();
    return sub_100009EF4(v29, &qword_1000D4CB0);
  }
  else
  {
    sub_10000809C((uint64_t)v16, (uint64_t)v20, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    sub_100006FF0((uint64_t)v20, (uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    v32 = (int *)type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(0);
    uint64_t v33 = *(void *)(a1 + v32[5]);
    uint64_t v34 = *(void *)(a1 + v32[6]);
    uint64_t v35 = *(void *)(a1 + v32[7]);
    *(void *)&v12[v10[5]] = v33;
    *(void *)&v12[v10[6]] = v34;
    *(void *)&v12[v10[7]] = v35;
    sub_100006FF0((uint64_t)v12, (uint64_t)v9, type metadata accessor for TTRTodayComplicationWidget.InlineReminderView);
    swift_storeEnumTagMultiPayload();
    sub_100006F50(&qword_1000D4CA0, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.InlineReminderView);
    sub_100007EE8();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000AEC68();
    sub_10000803C((uint64_t)v12, type metadata accessor for TTRTodayComplicationWidget.InlineReminderView);
    return sub_10000803C((uint64_t)v20, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  }
}

uint64_t sub_100004E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AEDF8();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2;
  sub_10000809C(a1, a2, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetViewModel);
  v36 = (int *)type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(0);
  uint64_t v12 = v36[5];
  unsigned int v28 = enum case for Font.TextStyle.body(_:);
  uint64_t v29 = *(void (**)(char *))(v8 + 104);
  uint64_t v30 = v8 + 104;
  v29(v10);
  uint64_t v13 = enum case for Font.Design.default(_:);
  unsigned int v35 = enum case for Font.Design.default(_:);
  uint64_t v14 = sub_1000AED68();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v34(v6, v13, v14);
  uint64_t v33 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  v33(v6, 0, 1, v14);
  uint64_t v16 = sub_1000AEDB8();
  sub_100009EF4((uint64_t)v6, &qword_1000D4BD8);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v31 = v8 + 8;
  v32 = v17;
  v17(v10, v7);
  uint64_t v18 = v11;
  *(void *)(v11 + v12) = v16;
  uint64_t v27 = v36[6];
  uint64_t v19 = v28;
  uint64_t v20 = v7;
  uint64_t v21 = v7;
  uint64_t v22 = (void (*)(char *, uint64_t, uint64_t))v29;
  ((void (*)(char *, void, uint64_t))v29)(v10, v28, v20);
  v34(v6, v35, v14);
  v33(v6, 0, 1, v14);
  uint64_t v23 = sub_1000AEDB8();
  sub_100009EF4((uint64_t)v6, &qword_1000D4BD8);
  v32(v10, v21);
  *(void *)(v18 + v27) = v23;
  uint64_t v24 = v36[7];
  v22(v10, v19, v21);
  v34(v6, v35, v14);
  v33(v6, 0, 1, v14);
  sub_1000AEDB8();
  sub_100009EF4((uint64_t)v6, &qword_1000D4BD8);
  v32(v10, v21);
  sub_1000AED78();
  uint64_t v25 = sub_1000AEDC8();
  uint64_t result = swift_release();
  *(void *)(v18 + v24) = v25;
  return result;
}

uint64_t sub_1000051EC()
{
  uint64_t v1 = sub_10000693C(&qword_1000D4C78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D4C80);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000465C(v0, (uint64_t)v6);
  uint64_t v7 = sub_1000ADD48();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v3, v0, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
  sub_100007DA4(&qword_1000D4C88, &qword_1000D4C80, (void (*)(void))sub_100007E1C);
  sub_1000AEF18();
  sub_100009EF4((uint64_t)v3, &qword_1000D4C78);
  return sub_100009EF4((uint64_t)v6, &qword_1000D4C80);
}

id sub_1000053AC@<X0>(void **a1@<X0>, long long *a2@<X8>)
{
  uint64_t v4 = sub_1000ADBD8();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10000693C(&qword_1000D4E10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_1000ADC28();
  uint64_t v9 = *(v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  sub_100009D6C((uint64_t)a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_1000D4E10);
  int v13 = (*(uint64_t (**)(char *, uint64_t, void *))(v9 + 48))(v7, 1, v8);
  v79 = a2;
  if (v13 == 1)
  {
    sub_100009EF4((uint64_t)v7, &qword_1000D4E10);
    if (qword_1000D47E8 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_1000D47F0;
    uint64_t v15 = type metadata accessor for TTRTodayComplicationWidget.InlineReminderView(0);
    uint64_t v16 = *(uint64_t *)((char *)a1 + *(int *)(v15 + 24));
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v17 = *a1;
    *(void *)&long long v75 = v15;
    uint64_t v9 = *(uint64_t *)((char *)a1 + *(int *)(v15 + 28));
    v78 = (void *)v14;
    swift_retain();
    uint64_t v77 = v16;
    swift_retain();
    id result = [v17 string];
    if (!result)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    uint64_t v19 = result;
    long long v80 = xmmword_1000B0280;
    LOBYTE(v81) = 0;
    v82 = &_swiftEmptyArrayStorage;
    id v20 = [self attributeName];
    id v21 = [v17 length];
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = &v80;
    v11[3] = v19;
    v11[4] = v9;
    v11[5] = 0;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_100009E2C;
    *(void *)(v22 + 24) = v11;
    *(void *)&long long v89 = sub_100009E48;
    *((void *)&v89 + 1) = v22;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v88 = sub_100009C54;
    *((void *)&v88 + 1) = &unk_1000CF400;
    uint64_t v8 = _Block_copy(&aBlock);
    id v23 = v19;
    swift_retain();
    swift_retain();
    swift_release();
    [v17 enumerateAttribute:v20 inRange:0 options:v21 usingBlock:v8];

    _Block_release(v8);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      uint64_t v26 = *((void *)&v80 + 1);
      uint64_t v25 = v80;
      char v27 = v81;
      swift_release();
      uint64_t v28 = sub_1000AEEB8();
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      uint64_t v34 = v33 & 1;
      sub_100006FE0(v25, v26, v27);
      swift_bridgeObjectRelease();
      unsigned int v35 = v78;
      swift_retain_n();
      uint64_t v36 = v77;
      swift_retain_n();
      uint64_t v37 = KeyPath;
      swift_retain();
      sub_100009E88(v28, v30, v34);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100009E88(v28, v30, v34);
      swift_bridgeObjectRetain();
      sub_100006FE0(v28, v30, v34);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)&long long v80 = v35;
      *((void *)&v80 + 1) = v37;
      uint64_t v81 = v36;
      v82 = (void *)v28;
      uint64_t v83 = v30;
      uint64_t v84 = v34;
      uint64_t v85 = v32;
      char v86 = 1;
      sub_10000693C(&qword_1000D4EC0);
      sub_100009F50(&qword_1000D4EC8, &qword_1000D4EC0);
      sub_1000AEC68();
      sub_100006FE0(v28, v30, v34);
      swift_release();
      swift_release();
      swift_release();
      id result = (id)swift_bridgeObjectRelease();
      long long v38 = aBlock;
      long long v39 = v88;
      long long v40 = v89;
      uint64_t v41 = v90;
      char v42 = v91;
LABEL_11:
      v71 = v79;
      long long *v79 = v38;
      v71[1] = v39;
      v71[2] = v40;
      *((void *)v71 + 6) = v41;
      *((unsigned char *)v71 + 56) = v42;
      return result;
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(void *, char *, void *))(v9 + 32))(v11, v7, v8);
    if (qword_1000D47D8 == -1) {
      goto LABEL_8;
    }
  }
  swift_once();
LABEL_8:
  uint64_t v77 = v9;
  v78 = v8;
  uint64_t v43 = qword_1000D47E0;
  uint64_t v44 = type metadata accessor for TTRTodayComplicationWidget.InlineReminderView(0);
  uint64_t v45 = *(uint64_t *)((char *)a1 + *(int *)(v44 + 24));
  *(void *)&long long v73 = swift_getKeyPath();
  v46 = *a1;
  v72[1] = v44;
  uint64_t v47 = *(uint64_t *)((char *)a1 + *(int *)(v44 + 28));
  *(void *)&long long v75 = v43;
  swift_retain();
  *(void *)&long long v74 = v45;
  swift_retain();
  uint64_t KeyPath = (uint64_t)v11;
  sub_1000ADBC8();
  sub_100006F50(&qword_1000D4ED0, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  uint64_t v48 = sub_1000AF508();
  uint64_t v50 = v49;
  id result = [v46 string];
  if (result)
  {
    uint64_t v51 = result;
    *(void *)&long long aBlock = v48;
    *((void *)&aBlock + 1) = v50;
    v72[0] = v50;
    swift_bridgeObjectRetain();
    v92._countAndFlagsBits = 32;
    v92._object = (void *)0xE100000000000000;
    sub_1000AF4D8(v92);
    long long v80 = aBlock;
    LOBYTE(v81) = 0;
    v82 = &_swiftEmptyArrayStorage;
    id v52 = [self attributeName];
    id v53 = [v46 length];
    v54 = (void *)swift_allocObject();
    v54[2] = &v80;
    v54[3] = v51;
    v54[4] = v47;
    v54[5] = 0;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_10000A0A0;
    *(void *)(v55 + 24) = v54;
    *(void *)&long long v89 = sub_10000A0A4;
    *((void *)&v89 + 1) = v55;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v88 = sub_100009C54;
    *((void *)&v88 + 1) = &unk_1000CF478;
    v56 = _Block_copy(&aBlock);
    id v57 = v51;
    swift_retain();
    swift_retain();
    swift_release();
    [v46 enumerateAttribute:v52 inRange:0 options:v53 usingBlock:v56];

    _Block_release(v56);
    char v58 = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((v58 & 1) == 0)
    {
      long long v59 = v80;
      char v60 = v81;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v61 = sub_1000AEEB8();
      uint64_t v63 = v62;
      uint64_t v65 = v64;
      uint64_t v67 = v66 & 1;
      sub_100006FE0(v59, *((uint64_t *)&v59 + 1), v60);
      swift_bridgeObjectRelease();
      uint64_t v68 = v75;
      swift_retain_n();
      uint64_t v69 = v74;
      swift_retain_n();
      uint64_t v70 = v73;
      swift_retain();
      sub_100009E88(v61, v63, v67);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100009E88(v61, v63, v67);
      swift_bridgeObjectRetain();
      sub_100006FE0(v61, v63, v67);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)&long long v80 = v68;
      *((void *)&v80 + 1) = v70;
      uint64_t v81 = v69;
      v82 = (void *)v61;
      uint64_t v83 = v63;
      uint64_t v84 = v67;
      uint64_t v85 = v65;
      char v86 = 0;
      sub_10000693C(&qword_1000D4EC0);
      sub_100009F50(&qword_1000D4EC8, &qword_1000D4EC0);
      sub_1000AEC68();
      sub_100006FE0(v61, v63, v67);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      long long v75 = aBlock;
      long long v74 = v88;
      long long v73 = v89;
      uint64_t v41 = v90;
      char v42 = v91;
      id result = (id)(*(uint64_t (**)(uint64_t, void *))(v77 + 8))(KeyPath, v78);
      long long v40 = v73;
      long long v39 = v74;
      long long v38 = v75;
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_100005E58()
{
  uint64_t v1 = sub_10000693C(&qword_1000D4C78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  uint64_t v4 = sub_1000AEB78();
  sub_1000053AC(v0, &v14);
  uint64_t v5 = *(void *)&v15[32];
  char v6 = v16;
  long long v7 = v14;
  long long v8 = *(_OWORD *)v15;
  long long v9 = *(_OWORD *)&v15[16];
  long long v14 = (unint64_t)v4;
  v15[0] = 1;
  *(_OWORD *)&v15[8] = v7;
  *(_OWORD *)&v15[24] = v8;
  long long v16 = v9;
  uint64_t v17 = v5;
  char v18 = v6;
  uint64_t v10 = (char *)v0 + *(int *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) + 28);
  uint64_t v11 = sub_1000ADD48();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 16))(v3, v10, v11);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  sub_10000693C(&qword_1000D4EB0);
  sub_100009F50(&qword_1000D4EB8, &qword_1000D4EB0);
  sub_1000AEF18();
  sub_100009EF4((uint64_t)v3, &qword_1000D4C78);
  return sub_100009CEC(*(uint64_t *)&v15[8], *(uint64_t *)&v15[16], *(uint64_t *)&v15[24], *(uint64_t *)&v15[32], v16, SBYTE8(v16));
}

uint64_t sub_10000601C()
{
  uint64_t v1 = sub_10000693C(&qword_1000D4C78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  uint64_t v4 = sub_1000AEB78();
  sub_100006208(v0, (uint64_t)&v16);
  uint64_t v5 = *(void *)&v17[16];
  char v6 = v18;
  uint64_t v7 = *((void *)&v18 + 1);
  long long v9 = v16;
  long long v8 = *(_OWORD *)v17;
  long long v16 = (unint64_t)v4;
  v17[0] = 1;
  *(_OWORD *)&v17[8] = v9;
  long long v18 = v8;
  uint64_t v19 = v5;
  char v20 = v6;
  uint64_t v21 = v7;
  uint64_t v10 = (char *)v0
      + *(int *)(type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView(0) + 20);
  uint64_t v11 = sub_1000ADD48();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 16))(v3, v10, v11);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  sub_10000693C(&qword_1000D4EE0);
  sub_100009F50(&qword_1000D4EE8, &qword_1000D4EE0);
  sub_1000AEF18();
  sub_100009EF4((uint64_t)v3, &qword_1000D4C78);
  uint64_t v13 = *((void *)&v18 + 1);
  uint64_t v14 = v19;
  LOBYTE(v11) = v20;
  swift_release();
  swift_release();
  swift_release();
  sub_100006FE0(v13, v14, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100006208@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1000D47E8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1000D47F0;
  uint64_t v5 = *(uint64_t *)((char *)a1
                  + *(int *)(type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView(0)
                           + 28));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = *a1;
  swift_retain();
  swift_retain();
  sub_10001DFF0(v7);
  uint64_t v8 = sub_1000AEEB8();
  uint64_t v10 = v9;
  char v12 = v11;
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v10;
  *(unsigned char *)(a2 + 40) = v12 & 1;
  *(void *)(a2 + 48) = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100009E88(v8, v10, v12 & 1);
  swift_bridgeObjectRetain();
  sub_100006FE0(v8, v10, v12 & 1);
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100006394()
{
  uint64_t v1 = sub_10000693C(&qword_1000D4C78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  uint64_t v4 = sub_1000AEB78();
  sub_100006570(v0, (uint64_t)&v15);
  uint64_t v5 = *(void *)&v16[16];
  char v6 = v17;
  uint64_t v7 = *((void *)&v17 + 1);
  long long v9 = v15;
  long long v8 = *(_OWORD *)v16;
  long long v15 = (unint64_t)v4;
  v16[0] = 1;
  *(_OWORD *)&v16[8] = v9;
  long long v17 = v8;
  uint64_t v18 = v5;
  char v19 = v6;
  uint64_t v20 = v7;
  uint64_t v10 = sub_1000ADD48();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v3, v0, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v10);
  sub_10000693C(&qword_1000D4EE0);
  sub_100009F50(&qword_1000D4EE8, &qword_1000D4EE0);
  sub_1000AEF18();
  sub_100009EF4((uint64_t)v3, &qword_1000D4C78);
  uint64_t v12 = *((void *)&v17 + 1);
  uint64_t v13 = v18;
  LOBYTE(v10) = v19;
  swift_release();
  swift_release();
  swift_release();
  sub_100006FE0(v12, v13, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100006570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1000D47E8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1000D47F0;
  uint64_t v5 = *(void *)(a1
                 + *(int *)(type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView(0) + 24));
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  swift_retain();
  v17._countAndFlagsBits = 0xD000000000000063;
  v16._object = (void *)0x80000001000B65A0;
  v17._object = (void *)0x80000001000B65C0;
  v16._countAndFlagsBits = 0xD000000000000012;
  sub_1000AE128(v16, v17);
  uint64_t v7 = sub_1000AEEB8();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v9;
  *(unsigned char *)(a2 + 40) = v11 & 1;
  *(void *)(a2 + 48) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100009E88(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  sub_100006FE0(v7, v9, v11 & 1);
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100006724()
{
  return sub_1000AEF98();
}

uint64_t sub_10000674C()
{
  uint64_t result = sub_1000AF0E8();
  qword_1000D47E0 = result;
  return result;
}

uint64_t sub_10000677C()
{
  uint64_t result = sub_1000AF0E8();
  qword_1000D47F0 = result;
  return result;
}

uint64_t sub_1000067B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D4A20);
  __chkstk_darwin(v4);
  sub_100009D6C(a1, (uint64_t)&v6, &qword_1000D4A30);
  if (v7)
  {
    sub_100006A40(&v6, (uint64_t)v8);
    sub_100006A40(v8, (uint64_t)&v6);
    sub_10000693C(&qword_1000D4A38);
    swift_dynamicCast();
    uint64_t result = v9;
  }
  else
  {
    sub_100009EF4((uint64_t)&v6, &qword_1000D4A30);
    sub_1000AEBE8();
    swift_getOpaqueTypeConformance2();
    uint64_t result = sub_1000AEC98();
  }
  *a2 = result;
  return result;
}

void *sub_1000068E8()
{
  if (sub_1000AD10C(2, 16, 1, 0)) {
    return &type metadata for LimitedAvailabilityWidget;
  }

  return (void *)sub_10000693C(&qword_1000D4A20);
}

uint64_t sub_10000693C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100006980()
{
  if (sub_1000AD10C(2, 16, 1, 0))
  {
    return sub_1000069EC();
  }
  else
  {
    return swift_getOpaqueTypeConformance2();
  }
}

unint64_t sub_1000069EC()
{
  unint64_t result = qword_1000D4A28;
  if (!qword_1000D4A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4A28);
  }
  return result;
}

uint64_t sub_100006A40(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t *sub_100006A58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TTRTodayComplicationWidgetProvider();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(int *)(v4 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000AE338();
    char v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_100006B48(uint64_t a1)
{
  swift_release();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider() + 20);
  uint64_t v3 = sub_1000AE338();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_100006BC4(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider() + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000AE338();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_100006C68(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider() + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000AE338();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_100006D00(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider() + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000AE338();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100006D88(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = *(int *)(type metadata accessor for TTRTodayComplicationWidgetProvider() + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000AE338();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100006E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100006E2C);
}

uint64_t sub_100006E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000740C(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetProvider);
}

uint64_t sub_100006E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100006E58);
}

uint64_t sub_100006E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000074A8(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetProvider);
}

uint64_t type metadata accessor for TTRTodayComplicationWidget(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D4A98);
}

uint64_t sub_100006E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100007534(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidgetProvider);
}

__n128 initializeWithTake for TTRNewWidgetViewModel.ShareeIcon(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.ReminderVStack.CacheData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.ReminderVStack.CacheData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_100006F14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.WidgetPlaceholderWrapper(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D4B68);
}

uint64_t sub_100006F50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100006F98(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100006FE0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100006FF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_100007058(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_1000ADD48();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(v6 + 20)) = *((unsigned char *)a2 + *(int *)(v6 + 20));
    *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10000713C(uint64_t a1)
{
  uint64_t v2 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for TTRTodayComplicationWidgetViewModel();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000071B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(a1 + *(int *)(v5 + 20)) = *(unsigned char *)(a2 + *(int *)(v5 + 20));
  *(void *)(a1 + *(int *)(v5 + 24)) = *(void *)(a2 + *(int *)(v5 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10000723C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(a1 + *(int *)(v5 + 20)) = *(unsigned char *)(a2 + *(int *)(v5 + 20));
  *(void *)(a1 + *(int *)(v5 + 24)) = *(void *)(a2 + *(int *)(v5 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000072D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(a1 + *(int *)(v5 + 20)) = *(unsigned char *)(a2 + *(int *)(v5 + 20));
  *(void *)(a1 + *(int *)(v5 + 24)) = *(void *)(a2 + *(int *)(v5 + 24));
  return a1;
}

uint64_t sub_100007354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(a1 + *(int *)(v5 + 20)) = *(unsigned char *)(a2 + *(int *)(v5 + 20));
  *(void *)(a1 + *(int *)(v5 + 24)) = *(void *)(a2 + *(int *)(v5 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000073E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000073F4);
}

uint64_t sub_1000073F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000740C(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_10000740C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t sub_10000747C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100007490);
}

uint64_t sub_100007490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000074A8(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_1000074A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t sub_10000751C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100007534(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_100007534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000075C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000076B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000076D0()
{
  return sub_100007DA4(&qword_1000D4BB8, &qword_1000D4BC0, (void (*)(void))sub_10000770C);
}

unint64_t sub_10000770C()
{
  unint64_t result = qword_1000D4BC8;
  if (!qword_1000D4BC8)
  {
    sub_100006F98(&qword_1000D4BD0);
    _s10WidgetViewVMa();
    sub_100006F50(&qword_1000D4BB0, (void (*)(uint64_t))_s10WidgetViewVMa);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4BC8);
  }
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D4C38);
}

void *sub_10000780C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000ADD48();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
    *((unsigned char *)v4 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
    *(void *)((char *)v4 + *(int *)(v8 + 24)) = *(void *)((char *)a2 + *(int *)(v8 + 24));
    uint64_t v9 = a3[6];
    *(void *)((char *)v4 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)v4 + v9) = *(void *)((char *)a2 + v9);
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10000792C(uint64_t a1)
{
  uint64_t v2 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for TTRTodayComplicationWidgetViewModel();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000079CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100007AA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100007B94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100007C44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_100007D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100007D2C);
}

uint64_t sub_100007D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000098F0(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_100007D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100007D58);
}

uint64_t sub_100007D58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000099E0(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_100007D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100009AB8(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidgetViewModel);
}

uint64_t sub_100007D88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100007DA4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100007E1C()
{
  unint64_t result = qword_1000D4C90;
  if (!qword_1000D4C90)
  {
    sub_100006F98(&qword_1000D4C98);
    sub_100006F50(&qword_1000D4CA0, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.InlineReminderView);
    sub_100007EE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4C90);
  }
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.InlineReminderView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D4E70);
}

unint64_t sub_100007EE8()
{
  unint64_t result = qword_1000D4CA8;
  if (!qword_1000D4CA8)
  {
    sub_100006F98(&qword_1000D4CB0);
    sub_100006F50(&qword_1000D4CB8, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView);
    sub_100006F50(&qword_1000D4CC0, (void (*)(uint64_t))type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4CA8);
  }
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.InlineOverdueRemindersCountView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D4DD0);
}

uint64_t type metadata accessor for TTRTodayComplicationWidget.InlineNoDueRemindersView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D4D38);
}

uint64_t sub_100008004(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000803C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000809C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_100008104(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000ADD48();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000081E0(uint64_t a1)
{
  uint64_t v2 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();

  return swift_release();
}

uint64_t sub_100008260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000082F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100008398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_10000841C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1000084B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000084C8);
}

uint64_t sub_1000084C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000098F0(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_1000084E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000084F4);
}

uint64_t sub_1000084F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000099E0(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_10000850C()
{
  uint64_t result = sub_1000ADD48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000085A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000086A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();

  return swift_release();
}

void *sub_100008730(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1000087DC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1000088A0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_100008940(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_1000089F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100008A08);
}

uint64_t sub_100008A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_100008ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100008AE0);
}

uint64_t sub_100008AE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000ADD48();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100008BA0()
{
  uint64_t result = sub_1000ADD48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_100008C4C(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[1];
    *((void *)a1 + 1) = v7;
    uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v9 = v8[6];
    __dst = &v6[v9];
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1000ADC28();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    long long v15 = v7;
    if (v13(v10, 1, v11))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = v8[7];
    uint64_t v18 = &v6[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v8[8];
    uint64_t v22 = *(char **)((char *)a2 + v21);
    *(void *)&v6[v21] = v22;
    *(void *)&v6[v8[9]] = *(char **)((char *)a2 + v8[9]);
    v6[v8[10]] = *((unsigned char *)a2 + v8[10]);
    v6[v8[11]] = *((unsigned char *)a2 + v8[11]);
    uint64_t v23 = a3[6];
    *(void *)&v6[a3[5]] = *(char **)((char *)a2 + a3[5]);
    *(void *)&v6[v23] = *(char **)((char *)a2 + v23);
    *(void *)&v6[a3[7]] = *(char **)((char *)a2 + a3[7]);
    id v24 = v22;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v6;
}

uint64_t sub_100008EA0(id *a1)
{
  uint64_t v2 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  int v3 = (char *)a1 + v2[6];
  uint64_t v4 = sub_1000ADC28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v6 = (char *)a1 + v2[7];
  uint64_t v7 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100008FE8(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v8 = v7[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  id v14 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v9, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v16 = v7[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = v7[8];
  uint64_t v21 = *(void **)(a2 + v20);
  *(void *)((char *)a1 + v20) = v21;
  *(void *)((char *)a1 + v7[9]) = *(void *)(a2 + v7[9]);
  *((unsigned char *)a1 + v7[10]) = *(unsigned char *)(a2 + v7[10]);
  *((unsigned char *)a1 + v7[11]) = *(unsigned char *)(a2 + v7[11]);
  uint64_t v22 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)((char *)a1 + v22) = *(void *)(a2 + v22);
  *(void *)((char *)a1 + a3[7]) = *(void *)(a2 + a3[7]);
  id v23 = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000091F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v7 = v5;

  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v9;
  id v10 = v9;

  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = v11[6];
  id v13 = (void *)(a1 + v12);
  id v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000ADC28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_10000693C(&qword_1000D4E10);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = v11[7];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = v11[8];
  uint64_t v26 = *(void **)(a1 + v25);
  char v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  id v28 = v27;

  *(void *)(a1 + v11[9]) = *(void *)(a2 + v11[9]);
  *(unsigned char *)(a1 + v11[10]) = *(unsigned char *)(a2 + v11[10]);
  *(unsigned char *)(a1 + v11[11]) = *(unsigned char *)(a2 + v11[11]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100009488(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D4E10);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = v6[7];
  id v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  uint64_t v17 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_100009650(uint64_t a1, void *a2, int *a3)
{
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000ADC28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000693C(&qword_1000D4E10);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = v7[7];
  uint64_t v18 = a1 + v17;
  int v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1000ADD48();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = v7[8];
  uint64_t v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)((char *)a2 + v21);

  *(void *)(a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
  *(unsigned char *)(a1 + v7[10]) = *((unsigned char *)a2 + v7[10]);
  *(unsigned char *)(a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
  *(void *)(a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_1000098C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000098D8);
}

uint64_t sub_1000098D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000098F0(a1, a2, a3, type metadata accessor for TTRNewWidgetViewModel.Reminder);
}

uint64_t sub_1000098F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1000099B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000099C8);
}

uint64_t sub_1000099C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000099E0(a1, a2, a3, a4, type metadata accessor for TTRNewWidgetViewModel.Reminder);
}

uint64_t sub_1000099E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100009AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100009AB8(a1, a2, a3, type metadata accessor for TTRNewWidgetViewModel.Reminder);
}

uint64_t sub_100009AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100009B58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100009BD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100009BF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100009C10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100009C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_100009C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_100009EF4((uint64_t)&v11, &qword_1000D4ED8);
}

uint64_t sub_100009CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  swift_release();
  swift_release();
  swift_release();
  sub_100006FE0(a4, a5, a6 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100009D6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000693C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100009DD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000AEAA8();
  *a1 = result;
  return result;
}

uint64_t sub_100009DFC()
{
  return sub_1000AEAB8();
}

uint64_t sub_100009E2C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_100091AE0(a1, a2, a3, a4, *(void *)(v4 + 16), *(id *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40));
}

uint64_t sub_100009E38()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100009E48()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100009E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100009E80()
{
  return swift_release();
}

uint64_t sub_100009E88(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100009E9C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100009EE4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100009EF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000693C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100009F50(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void sub_100009FA8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100009FF0(uint64_t a1)
{
  return sub_10000A004(a1, &qword_1000D4EB0, &qword_1000D4EB8);
}

uint64_t sub_10000A004(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000A088(uint64_t a1)
{
  return sub_10000A004(a1, &qword_1000D4EE0, &qword_1000D4EE8);
}

unint64_t sub_10000A0BC()
{
  unint64_t result = qword_1000D4F18;
  if (!qword_1000D4F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F18);
  }
  return result;
}

uint64_t sub_10000A110()
{
  return sub_100009F50(&qword_1000D4F20, &qword_1000D4F28);
}

uint64_t sub_10000A14C()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000ADB48();
  sub_10000EFDC(v10, qword_1000E1D60);
  sub_10000EFA4(v10, (uint64_t)qword_1000E1D60);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000ADB38();
}

uint64_t sub_10000A424@<X0>(uint64_t a1@<X8>)
{
  v22[3] = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D50B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v23 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v3 - 8);
  v22[0] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  v22[2] = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v22[1] = (char *)v22 - v15;
  sub_1000AF458();
  sub_1000ADF58();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  uint64_t v18 = v22[0];
  sub_1000ADCB8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  int v19 = v23;
  sub_1000ADA18();
  uint64_t v20 = sub_1000ADA28();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_10000693C(&qword_1000D50B8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000B0270;
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  sub_1000ADCB8();
  return sub_1000ADA38();
}

uint64_t sub_10000A94C(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E1D78);
}

uint64_t sub_10000A970()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10000693C(&qword_1000D5118);
  sub_10000EFDC(v10, qword_1000E1D90);
  uint64_t v11 = sub_10000EFA4(v10, (uint64_t)qword_1000E1D90);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v14[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  sub_1000AD998();
  uint64_t v12 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
}

uint64_t sub_10000AC94()
{
  uint64_t result = swift_getKeyPath();
  qword_1000E1DA8 = result;
  return result;
}

uint64_t sub_10000ACC0()
{
  sub_1000AD798();
  return v1;
}

uint64_t sub_10000ACF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_10000693C(&qword_1000D50E8);
  v3[9] = swift_task_alloc();
  sub_10000693C(&qword_1000D50F0);
  v3[10] = swift_task_alloc();
  sub_10000693C(&qword_1000D50F8);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_1000AD748();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_10000693C(&qword_1000D5100);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_10000AEB8, 0, 0);
}

uint64_t sub_10000AEB8()
{
  sub_1000AD798();
  unsigned __int8 v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  unint64_t v2 = sub_10000C338();
  *unsigned __int8 v1 = v0;
  v1[1] = sub_10000AF8C;
  uint64_t v3 = *(void *)(v0 + 144);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v0 + 16, sub_10000B648, 0, &type metadata for ShowSuggestionsEntity, v2);
}

uint64_t sub_10000AF8C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10000B088, 0, 0);
}

uint64_t sub_10000B088()
{
  sub_1000AD798();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 160) = v1;
  sub_1000AD798();
  *(unsigned char *)(v0 + 193) = *(unsigned char *)(v0 + 192);
  if (qword_1000D4810 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1000E1DA8;
  *(void *)(v0 + 168) = qword_1000E1DA8;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = sub_100009F50(&qword_1000D50D0, &qword_1000D50D8);
  *uint64_t v3 = v0;
  v3[1] = sub_10000B1E0;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v4);
}

uint64_t sub_10000B1E0()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10000B584;
  }
  else {
    uint64_t v2 = sub_10000B334;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000B334()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_1000AD798();
  uint64_t v7 = sub_1000ADB18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = sub_1000ADB58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_10000A0BC();
  sub_10000C650();
  sub_1000AD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_1000AD738();
  sub_1000AD758();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10000B584()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[18], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10000B64C()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5108);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D4810 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000AD9F8();
  swift_release();
  sub_10000C650();
  sub_100009F50(&qword_1000D5110, &qword_1000D5108);
  sub_1000AD9E8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10000B7B4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000AD798();
  *a1 = v3;
  return result;
}

uint64_t sub_10000B7F0()
{
  return swift_release();
}

uint64_t (*sub_10000B838(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000AD788();
  return sub_10000B894;
}

uint64_t sub_10000B898@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000AD798();
  *a1 = v3;
  return result;
}

uint64_t sub_10000B8D4()
{
  return sub_1000AD7A8();
}

uint64_t (*sub_10000B90C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000AD788();
  return sub_10000B894;
}

uint64_t sub_10000B968()
{
  if (qword_1000D4810 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10000B9C8()
{
  return 0xD000000000000015;
}

unint64_t sub_10000B9EC()
{
  unint64_t result = qword_1000D4F30;
  if (!qword_1000D4F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F30);
  }
  return result;
}

unint64_t sub_10000BA44()
{
  unint64_t result = qword_1000D4F38;
  if (!qword_1000D4F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F38);
  }
  return result;
}

uint64_t sub_10000BA98()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10000BACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000D5C4(a1, a2, a3, (void (*)(void))sub_10000A0BC);
}

uint64_t sub_10000BAE4@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D4800, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1D78, a1);
}

uint64_t sub_10000BB2C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D4808 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000693C(&qword_1000D5118);
  uint64_t v3 = sub_10000EFA4(v2, (uint64_t)qword_1000E1D90);

  return sub_10000F060(v3, a1);
}

uint64_t sub_10000BBA8(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000F290;
  return sub_10000ACF4(a1, v5, v4);
}

uint64_t sub_10000BC54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10000E620();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10000BC7C()
{
  return 0xD000000000000026;
}

unint64_t sub_10000BC9C()
{
  unint64_t result = qword_1000D4F48;
  if (!qword_1000D4F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F48);
  }
  return result;
}

unint64_t sub_10000BCF4()
{
  unint64_t result = qword_1000D4F50;
  if (!qword_1000D4F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F50);
  }
  return result;
}

uint64_t sub_10000BD48(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10000BD68, 0, 0);
}

uint64_t sub_10000BD68()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 16);
  id v2 = [self daemonUserDefaults];
  unsigned __int8 v3 = [v2 enableAutoCompleteReminders];

  *uint64_t v1 = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10000BE0C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10000BE30, 0, 0);
}

uint64_t sub_10000BE30()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self daemonUserDefaults];
  [v2 setEnableAutoCompleteReminders:v1];

  unsigned __int8 v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10000BEC8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_1000ADCA8();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10000BF58, 0, 0);
}

uint64_t sub_10000BF58()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_10000693C(&qword_1000D4F28);
  sub_1000ADC88();
  sub_100009F50(&qword_1000D50D0, &qword_1000D50D8);
  *uint64_t v1 = sub_1000ADB78();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_10000C06C()
{
  unint64_t result = qword_1000D4F60;
  if (!qword_1000D4F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F60);
  }
  return result;
}

uint64_t sub_10000C0C0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10000C984();
  *uint64_t v4 = v2;
  v4[1] = sub_10000C170;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_10000C170(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

unint64_t sub_10000C288()
{
  unint64_t result = qword_1000D4F70;
  if (!qword_1000D4F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F70);
  }
  return result;
}

unint64_t sub_10000C2E0()
{
  unint64_t result = qword_1000D4F78;
  if (!qword_1000D4F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F78);
  }
  return result;
}

unint64_t sub_10000C338()
{
  unint64_t result = qword_1000D4F80[0];
  if (!qword_1000D4F80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D4F80);
  }
  return result;
}

uint64_t sub_10000C390(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10000C984();
  *uint64_t v5 = v2;
  v5[1] = sub_10000C444;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10000C444(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_10000C544(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10000C984();
  *uint64_t v4 = v2;
  v4[1] = sub_10000F28C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10000C5F8()
{
  unint64_t result = qword_1000D4F98;
  if (!qword_1000D4F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F98);
  }
  return result;
}

unint64_t sub_10000C650()
{
  unint64_t result = qword_1000D4FA0;
  if (!qword_1000D4FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4FA0);
  }
  return result;
}

unint64_t sub_10000C6A8()
{
  unint64_t result = qword_1000D4FA8;
  if (!qword_1000D4FA8)
  {
    sub_100006F98(qword_1000D4FB0);
    sub_10000C650();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4FA8);
  }
  return result;
}

uint64_t sub_10000C71C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10000C06C();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C7D0;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10000C7D0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10000C8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10000C7D0;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

unint64_t sub_10000C984()
{
  unint64_t result = qword_1000D4FC8;
  if (!qword_1000D4FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4FC8);
  }
  return result;
}

uint64_t sub_10000C9D8()
{
  uint64_t v0 = qword_1000D4EF8;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10000CA14()
{
  unint64_t result = qword_1000D4FD0;
  if (!qword_1000D4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4FD0);
  }
  return result;
}

unint64_t sub_10000CA6C()
{
  unint64_t result = qword_1000D4FD8;
  if (!qword_1000D4FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4FD8);
  }
  return result;
}

unint64_t sub_10000CAC4()
{
  unint64_t result = qword_1000D4FE0;
  if (!qword_1000D4FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4FE0);
  }
  return result;
}

void *sub_10000CB18()
{
  return &protocol witness table for String;
}

unint64_t sub_10000CB28()
{
  unint64_t result = qword_1000D4FE8;
  if (!qword_1000D4FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4FE8);
  }
  return result;
}

unint64_t sub_10000CB80()
{
  unint64_t result = qword_1000D4FF0;
  if (!qword_1000D4FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4FF0);
  }
  return result;
}

unint64_t sub_10000CBD8()
{
  unint64_t result = qword_1000D4FF8;
  if (!qword_1000D4FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4FF8);
  }
  return result;
}

void *sub_10000CC2C()
{
  return &protocol witness table for String;
}

uint64_t sub_10000CC38@<X0>(uint64_t *a1@<X8>)
{
  sub_10000BCF4();
  uint64_t result = sub_1000AD778();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000CC78@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D47F8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000E1D60, a1);
}

uint64_t sub_10000CCB0()
{
  return sub_100009F50(&qword_1000D5000, &qword_1000D5008);
}

uint64_t sub_10000CCEC(uint64_t a1)
{
  unint64_t v2 = sub_10000C338();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10000CD3C()
{
  unint64_t result = qword_1000D5010;
  if (!qword_1000D5010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5010);
  }
  return result;
}

uint64_t sub_10000CD94(uint64_t a1)
{
  unint64_t v2 = sub_10000CBD8();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10000CDE4()
{
  unint64_t result = qword_1000D5018;
  if (!qword_1000D5018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5018);
  }
  return result;
}

uint64_t sub_10000CE38(uint64_t a1)
{
  if (qword_1000D4880 != -1) {
    swift_once();
  }
  sub_1000AF4D8((Swift::String)xmmword_1000E1E38);
  unint64_t v2 = sub_10000C338();

  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x80000001000B67A0, a1, v2);
}

uint64_t sub_10000CEF8()
{
  sub_10000EF50();
  uint64_t v2 = sub_1000ADA88();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000F040(v3, v0, v2, v1);
}

unint64_t sub_10000CF90()
{
  unint64_t result = qword_1000D5028;
  if (!qword_1000D5028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5028);
  }
  return result;
}

uint64_t sub_10000CFE4(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E1DB0);
}

uint64_t sub_10000D008(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000ADCA8();
  sub_10000EFDC(v3, a2);
  sub_10000EFA4(v3, (uint64_t)a2);
  return sub_1000ADC88();
}

uint64_t sub_10000D068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_1000AD998();
  uint64_t v13 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

void sub_10000D360(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_10000D3B0()
{
  unint64_t result = qword_1000D5030;
  if (!qword_1000D5030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5030);
  }
  return result;
}

unint64_t sub_10000D408()
{
  unint64_t result = qword_1000D5038;
  if (!qword_1000D5038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5038);
  }
  return result;
}

uint64_t sub_10000D45C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10000EEA8();
  unint64_t v5 = sub_10000EF50();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10000D4C4()
{
  uint64_t v0 = qword_1000D4F08;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10000D500()
{
  unint64_t result = qword_1000D5040;
  if (!qword_1000D5040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5040);
  }
  return result;
}

unint64_t sub_10000D558()
{
  unint64_t result = qword_1000D5048;
  if (!qword_1000D5048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5048);
  }
  return result;
}

uint64_t sub_10000D5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000D5C4(a1, a2, a3, (void (*)(void))sub_10000D3B0);
}

uint64_t sub_10000D5C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000D618@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D4818, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1DB0, a1);
}

uint64_t sub_10000D650@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10000EFA4(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10000D6F4()
{
  return 0;
}

uint64_t sub_10000D6FC()
{
  return 1;
}

uint64_t sub_10000D708(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10000EEA8();
  unint64_t v7 = sub_10000EEFC();
  unint64_t v8 = sub_10000EF50();
  *unint64_t v5 = v2;
  v5[1] = sub_10000D7DC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10000D7DC()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    unint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_10000D8E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10000EA60();
  *a1 = result;
  return result;
}

uint64_t sub_10000D90C(uint64_t a1)
{
  unint64_t v2 = sub_10000D3B0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenShowSuggestionsDeepLink()
{
  return &type metadata for OpenShowSuggestionsDeepLink;
}

ValueMetadata *type metadata accessor for ShowSuggestionsEntity.ShowSuggestionsQuery()
{
  return &type metadata for ShowSuggestionsEntity.ShowSuggestionsQuery;
}

ValueMetadata *type metadata accessor for ShowSuggestionsEntity()
{
  return &type metadata for ShowSuggestionsEntity;
}

uint64_t destroy for ShowSuggestionsEntity.UpdateIntent_value()
{
  swift_release();

  return swift_release();
}

void *_s24RemindersWidgetExtension21ShowSuggestionsEntityV18UpdateIntent_valueVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ShowSuggestionsEntity.UpdateIntent_value(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ShowSuggestionsEntity.UpdateIntent_value(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRNewWidgetViewModel.ShareeIcon(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRNewWidgetViewModel.ShareeIcon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowSuggestionsEntity.UpdateIntent_value()
{
  return &type metadata for ShowSuggestionsEntity.UpdateIntent_value;
}

uint64_t sub_10000DB24()
{
  return sub_100009F50(&qword_1000D5058, &qword_1000D5060);
}

uint64_t sub_10000DB60()
{
  return sub_100009F50(&qword_1000D5068, &qword_1000D5060);
}

uint64_t sub_10000DB9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D5120);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D5128);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D5130);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D5138);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10000693C(&qword_1000D5140);
  sub_10000693C(&qword_1000D5148);
  sub_10000BCF4();
  sub_100009F50(&qword_1000D5150, &qword_1000D5140);
  sub_10000F0F4();
  sub_1000AF2B8();
  sub_1000AEB88();
  uint64_t v16 = sub_100009F50(&qword_1000D5160, &qword_1000D5120);
  sub_1000AEC38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  sub_1000AEB88();
  uint64_t v31 = v1;
  uint64_t v32 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  sub_1000AEBF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v18);
  uint64_t v31 = v18;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_1000AEC58();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  sub_1000AEC18();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v21);
}

uint64_t sub_10000E0CC()
{
  uint64_t v0 = sub_1000AEB88();

  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_10000E13C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000ADC98();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  __chkstk_darwin(v8 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000ADCB8();
  uint64_t result = sub_1000AEEE8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

double sub_10000E350@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000ADC98();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000ADF68();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000AF468();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000ADCA8();
  __chkstk_darwin(v10 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  sub_1000ADCB8();
  v17[1] = sub_1000AEEE8();
  v17[2] = v11;
  v17[3] = v12 & 1;
  v17[4] = v13;
  BOOL v18 = (a1 & 1) == 0;
  sub_1000AEC68();
  double result = *(double *)&v19;
  long long v15 = v20;
  char v16 = v21;
  *(_OWORD *)a2 = v19;
  *(_OWORD *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 32) = v16;
  return result;
}

uint64_t sub_10000E620()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5088);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000ADA78();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000693C(&qword_1000D5070);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000ADCA8();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10000693C(&qword_1000D5080);
  sub_1000ADC88();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000AD748();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  BOOL v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10000C338();
  long long v19 = v23;
  uint64_t v24 = sub_1000AD7B8();
  sub_10000693C(&qword_1000D5090);
  sub_1000ADC88();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000AF5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000AD7C8();
  return v24;
}

uint64_t sub_10000EA60()
{
  uint64_t v0 = sub_1000ADA78();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000693C(&qword_1000D5070);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000ADC98();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000ADF68();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000AF468();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000ADCA8();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v21[1] = sub_10000693C(&qword_1000D5080);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v26 = 0;
  uint64_t v18 = sub_1000AD748();
  long long v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_10000C338();
  return sub_1000AD7B8();
}

unint64_t sub_10000EEA8()
{
  unint64_t result = qword_1000D5098;
  if (!qword_1000D5098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5098);
  }
  return result;
}

unint64_t sub_10000EEFC()
{
  unint64_t result = qword_1000D50A0;
  if (!qword_1000D50A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D50A0);
  }
  return result;
}

unint64_t sub_10000EF50()
{
  unint64_t result = qword_1000D50A8;
  if (!qword_1000D50A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D50A8);
  }
  return result;
}

uint64_t sub_10000EFA4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_10000EFDC(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10000F040(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_10000F054@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10000F060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000693C(&qword_1000D5118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ShowSuggestionsToggleControl()
{
  return &type metadata for ShowSuggestionsToggleControl;
}

uint64_t sub_10000F0D8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10000F0F4()
{
  unint64_t result = qword_1000D5158;
  if (!qword_1000D5158)
  {
    sub_100006F98(&qword_1000D5148);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5158);
  }
  return result;
}

uint64_t sub_10000F160()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000F294(unsigned __int8 *a1, char *a2)
{
  return sub_10000F2F8(*a1, *a2);
}

unint64_t sub_10000F2A4()
{
  unint64_t result = qword_1000D5188;
  if (!qword_1000D5188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5188);
  }
  return result;
}

uint64_t sub_10000F2F8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x746F6F7223;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x746F6F7223;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x5F544C5541464544;
      unint64_t v3 = 0xEC0000005453494CLL;
      break;
    case 2:
      unint64_t v5 = 0x474E414C5F444441;
      unint64_t v3 = 0xEC00000045474155;
      break;
    case 3:
      unint64_t v3 = 0x80000001000B6440;
      unint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC0000005453494CLL;
      if (v5 == 0x5F544C5541464544) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x474E414C5F444441;
      unint64_t v6 = 0xEC00000045474155;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x80000001000B6440;
      if (v5 == 0xD000000000000011) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1000AFA38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Swift::Int sub_10000F4A8()
{
  return sub_10000F4B0();
}

Swift::Int sub_10000F4B0()
{
  return sub_1000AFAB8();
}

uint64_t sub_10000F59C()
{
  sub_1000AF4C8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10000F670()
{
  return sub_10000F678();
}

Swift::Int sub_10000F678()
{
  return sub_1000AFAB8();
}

uint64_t sub_10000F760@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10001238C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10000F790(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x746F6F7223;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC0000005453494CLL;
      uint64_t v3 = 0x5F544C5541464544;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "ADD_LANGUAGE");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000011;
      *(void *)(a1 + 8) = 0x80000001000B6440;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_10000F83C()
{
  return sub_100009F50(&qword_1000D5190, &qword_1000D5198);
}

void sub_10000F878(void *a1@<X8>)
{
  *a1 = &off_1000CF150;
}

unint64_t sub_10000F888()
{
  unint64_t result = 0x746F6F7223;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x5F544C5541464544;
      break;
    case 2:
      unint64_t result = 0x474E414C5F444441;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10000F928@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_10001238C(a1, a2);
  *a3 = result;
  return result;
}

unint64_t sub_10000F974()
{
  unint64_t result = qword_1000D51A0;
  if (!qword_1000D51A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D51A0);
  }
  return result;
}

unint64_t sub_10000F9CC()
{
  unint64_t result = qword_1000D51A8;
  if (!qword_1000D51A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D51A8);
  }
  return result;
}

unint64_t sub_10000FA24()
{
  unint64_t result = qword_1000D51B0[0];
  if (!qword_1000D51B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D51B0);
  }
  return result;
}

uint64_t sub_10000FA78()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  unint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000ADB48();
  sub_10000EFDC(v10, qword_1000E1DC8);
  sub_10000EFA4(v10, (uint64_t)qword_1000E1DC8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000ADB38();
}

uint64_t sub_10000FD50@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D50B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v7 - 8);
  uint64_t v49 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000ADC98();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000ADF68();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_1000AF468();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000ADCA8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  v46 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v47 = a2;
  uint64_t v48 = (char *)v42 - v19;
  uint64_t v50 = v6;
  switch(a1)
  {
    case 1:
      sub_1000AF458();
      sub_1000ADF58();
      uint64_t v36 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
      v37(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
      uint64_t v45 = (uint64_t)v37;
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v37(v12, v36, v9);
      long long v38 = v49;
      sub_1000ADCB8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v38, 0, 1, v15);
      sub_1000ADA18();
      uint64_t v39 = sub_1000ADA28();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v50, 0, 1, v39);
      sub_10000693C(&qword_1000D50B8);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000B0E30;
      sub_1000AF458();
      sub_1000ADF58();
      long long v40 = (void (*)(char *, uint64_t, uint64_t))v45;
      ((void (*)(char *, uint64_t, uint64_t))v45)(v12, v36, v9);
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v40(v12, v36, v9);
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v40(v12, v36, v9);
      break;
    case 2:
      sub_1000AF458();
      sub_1000ADF58();
      uint64_t v28 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
      v29(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v29(v12, v28, v9);
      uint64_t v30 = v49;
      sub_1000ADCB8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v30, 0, 1, v15);
      sub_1000ADA18();
      uint64_t v31 = sub_1000ADA28();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v50, 0, 1, v31);
      sub_10000693C(&qword_1000D50B8);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000B0270;
      sub_1000AF458();
      sub_1000ADF58();
      v29(v12, v28, v9);
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v29(v12, v28, v9);
      break;
    case 3:
      sub_1000AF458();
      sub_1000ADF58();
      uint64_t v32 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
      v33(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v33(v12, v32, v9);
      uint64_t v34 = v49;
      sub_1000ADCB8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v34, 0, 1, v15);
      sub_1000ADA18();
      uint64_t v35 = sub_1000ADA28();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v50, 0, 1, v35);
      sub_10000693C(&qword_1000D50B8);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000B0270;
      sub_1000AF458();
      sub_1000ADF58();
      v33(v12, v32, v9);
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v33(v12, v32, v9);
      break;
    default:
      sub_1000AF458();
      sub_1000ADF58();
      uint64_t v20 = *(void (**)(char *))(v10 + 104);
      uint64_t v21 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      unsigned int v43 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      v20(v12);
      uint64_t v44 = v20;
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      ((void (*)(char *, uint64_t, uint64_t))v20)(v12, v21, v9);
      uint64_t v22 = v49;
      sub_1000ADCB8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      sub_1000ADA18();
      uint64_t v23 = sub_1000ADA28();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 0, 1, v23);
      sub_10000693C(&qword_1000D50B8);
      v42[2] = 2 * *(void *)(v16 + 72);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_1000B0E40;
      v42[1] = 0xD000000000000019;
      sub_1000AF458();
      sub_1000ADF58();
      uint64_t v24 = v43;
      uint64_t v25 = v9;
      v42[0] = v10 + 104;
      uint64_t v26 = v9;
      unsigned int v27 = (void (*)(char *, uint64_t, uint64_t))v44;
      ((void (*)(char *, void, uint64_t))v44)(v12, v43, v25);
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v27(v12, v24, v26);
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v27(v12, v24, v26);
      sub_1000ADCB8();
      sub_1000AF458();
      sub_1000ADF58();
      v27(v12, v24, v26);
      break;
  }
  sub_1000ADCB8();
  return sub_1000ADA38();
}

uint64_t sub_100010BE0(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1000D52E0 + dword_1000D52E0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000C444;
  return v5(a1);
}

uint64_t sub_100010C88(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1000D52D8 + dword_1000D52D8);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_10000F28C;
  return v4();
}

unint64_t sub_100010D30()
{
  unint64_t result = qword_1000D51C8;
  if (!qword_1000D51C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D51C8);
  }
  return result;
}

uint64_t sub_100010D84(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1000D52D0 + dword_1000D52D0);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_10000C170;
  return v4();
}

unint64_t sub_100010E2C()
{
  unint64_t result = qword_1000D51D8;
  if (!qword_1000D51D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D51D8);
  }
  return result;
}

unint64_t sub_100010E84()
{
  unint64_t result = qword_1000D51E0;
  if (!qword_1000D51E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D51E0);
  }
  return result;
}

unint64_t sub_100010EDC()
{
  unint64_t result = qword_1000D51E8;
  if (!qword_1000D51E8)
  {
    sub_100006F98(qword_1000D51F0);
    sub_100010E84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D51E8);
  }
  return result;
}

uint64_t sub_100010F50(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100010D30();
  *uint64_t v5 = v2;
  v5[1] = sub_10000C7D0;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100011004(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1000D52C8 + dword_1000D52C8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000110A8;
  return v4();
}

uint64_t sub_1000110A8(char a1)
{
  uint64_t v3 = *(unsigned char **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

unint64_t sub_1000111BC()
{
  unint64_t result = qword_1000D5208;
  if (!qword_1000D5208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5208);
  }
  return result;
}

uint64_t sub_100011210()
{
  uint64_t v0 = sub_10000693C(&qword_1000D52B8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D52C0);
  __chkstk_darwin(v4);
  sub_10000FA24();
  sub_1000ADAE8();
  v7._object = (void *)0x80000001000B7730;
  v7._countAndFlagsBits = 0xD000000000000042;
  sub_1000ADAD8(v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for _EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  sub_1000ADAC8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  sub_1000ADAD8(v8);
  return sub_1000ADAF8();
}

uint64_t sub_1000113CC()
{
  uint64_t v0 = qword_1000D5168;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100011408()
{
  unint64_t result = qword_1000D5210;
  if (!qword_1000D5210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5210);
  }
  return result;
}

unint64_t sub_100011460()
{
  unint64_t result = qword_1000D5218;
  if (!qword_1000D5218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5218);
  }
  return result;
}

unint64_t sub_1000114B8()
{
  unint64_t result = qword_1000D5220;
  if (!qword_1000D5220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5220);
  }
  return result;
}

unint64_t sub_100011514()
{
  unint64_t result = qword_1000D5228;
  if (!qword_1000D5228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5228);
  }
  return result;
}

uint64_t sub_100011568()
{
  sub_1000134C0();
  uint64_t v2 = sub_1000ADA88();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000F040(v3, v0, v2, v1);
}

unint64_t sub_100011600()
{
  unint64_t result = qword_1000D5238;
  if (!qword_1000D5238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5238);
  }
  return result;
}

unint64_t sub_100011658()
{
  unint64_t result = qword_1000D5240;
  if (!qword_1000D5240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5240);
  }
  return result;
}

unint64_t sub_1000116B4()
{
  unint64_t result = qword_1000D5248;
  if (!qword_1000D5248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5248);
  }
  return result;
}

unint64_t sub_10001170C()
{
  unint64_t result = qword_1000D5250;
  if (!qword_1000D5250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5250);
  }
  return result;
}

void sub_100011760(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10001176C@<X0>(uint64_t a1@<X8>)
{
  return sub_100011FC4(&qword_1000D4820, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000E1DC8, a1);
}

uint64_t sub_1000117A4()
{
  return sub_100009F50(&qword_1000D5258, &qword_1000D5260);
}

uint64_t sub_1000117E0(uint64_t a1)
{
  unint64_t v2 = sub_10000FA24();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100011830()
{
  unint64_t result = qword_1000D5268;
  if (!qword_1000D5268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5268);
  }
  return result;
}

uint64_t sub_100011884@<X0>(uint64_t a1@<X8>)
{
  return sub_10000FD50(*v1, a1);
}

uint64_t sub_10001188C(uint64_t a1)
{
  unint64_t v2 = sub_1000116B4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1000118DC()
{
  unint64_t result = qword_1000D5270;
  if (!qword_1000D5270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5270);
  }
  return result;
}

uint64_t sub_100011934()
{
  uint64_t v0 = sub_1000ADCA8();
  sub_10000EFDC(v0, qword_1000E1DE0);
  sub_10000EFA4(v0, (uint64_t)qword_1000E1DE0);
  return sub_1000ADC88();
}

uint64_t sub_100011998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_1000AD998();
  uint64_t v13 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t sub_100011C90()
{
  sub_1000AD798();
  return v1;
}

uint64_t sub_100011CC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000AD798();
  *a1 = v3;
  return result;
}

uint64_t sub_100011D00()
{
  return sub_1000AD7A8();
}

void (*sub_100011D38(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000AD788();
  return sub_10000D360;
}

unint64_t sub_100011D98()
{
  unint64_t result = qword_1000D5278;
  if (!qword_1000D5278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5278);
  }
  return result;
}

uint64_t sub_100011DEC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100013418();
  unint64_t v5 = sub_1000134C0();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100011E54()
{
  uint64_t v0 = qword_1000D5178;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100011E90()
{
  unint64_t result = qword_1000D5280;
  if (!qword_1000D5280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5280);
  }
  return result;
}

unint64_t sub_100011EE8()
{
  unint64_t result = qword_1000D5288;
  if (!qword_1000D5288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5288);
  }
  return result;
}

uint64_t sub_100011F3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100011F8C@<X0>(uint64_t a1@<X8>)
{
  return sub_100011FC4(&qword_1000D4828, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1DE0, a1);
}

uint64_t sub_100011FC4@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10000EFA4(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10001206C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100013418();
  unint64_t v7 = sub_10001346C();
  unint64_t v8 = sub_1000134C0();
  *unint64_t v5 = v2;
  v5[1] = sub_10000D7DC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100012140@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100012FCC();
  *a1 = result;
  return result;
}

uint64_t sub_100012168(uint64_t a1)
{
  unint64_t v2 = sub_100011D98();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenRemindersSettingsDeepLink()
{
  return &type metadata for OpenRemindersSettingsDeepLink;
}

unsigned char *initializeBufferWithCopyOfBuffer for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for RemindersSettingsDeepLinks()
{
  return &type metadata for RemindersSettingsDeepLinks;
}

ValueMetadata *type metadata accessor for RemindersSettingsDeepLinks.AvailableRemindersDestinationQuery()
{
  return &type metadata for RemindersSettingsDeepLinks.AvailableRemindersDestinationQuery;
}

uint64_t _s24RemindersWidgetExtension28RemindersSettingsDestinationOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s24RemindersWidgetExtension28RemindersSettingsDestinationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100012344);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_10001236C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100012374(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for RemindersSettingsDestination()
{
  return &type metadata for RemindersSettingsDestination;
}

uint64_t sub_10001238C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000CF0D0;
  v6._object = a2;
  unint64_t v4 = sub_1000AF9E8(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000123D8()
{
  return _swift_task_switch(sub_1000123F4, 0, 0);
}

uint64_t sub_1000123F4()
{
  uint64_t v1 = sub_100012534((uint64_t)&off_1000CF178);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_1000A7974(0, v2, 0);
    uint64_t v3 = 0;
    uint64_t v4 = *((void *)&_swiftEmptyArrayStorage + 2);
    do
    {
      char v5 = *(unsigned char *)(v1 + v3 + 32);
      unint64_t v6 = *((void *)&_swiftEmptyArrayStorage + 3);
      if (v4 + v3 >= v6 >> 1) {
        sub_1000A7974(v6 > 1, v4 + v3 + 1, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v4 + v3 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage + v4 + v3++ + 32) = v5;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  BOOL v7 = *(uint64_t (**)(void *))(v0 + 8);
  return v7(&_swiftEmptyArrayStorage);
}

uint64_t sub_100012534(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v40 = sub_1000AE1B8();
  uint64_t v4 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1000ADF68();
  uint64_t v6 = __chkstk_darwin(v44);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v33 - v10;
  unint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v41 = v9;
    unint64_t v13 = 0;
    uint64_t v14 = a1 + 32;
    unsigned int v43 = (void (**)(char *, uint64_t))(v8 + 8);
    unsigned int v37 = enum case for REMFeatureFlags.groceryMultilingual(_:);
    uint64_t v35 = (uint64_t (**)(char *, uint64_t))(v4 + 8);
    uint64_t v36 = (void (**)(char *, void, uint64_t))(v4 + 104);
    uint64_t v15 = &_swiftEmptyArrayStorage;
    uint64_t v33 = v14;
    unint64_t v34 = v12;
    while (1)
    {
      long long v38 = v15;
      uint64_t v16 = 0;
      uint64_t v17 = v13 <= v12 ? v12 : v13;
      unint64_t v46 = v13 - v17;
      unint64_t v42 = v13;
      while (1)
      {
        if (!(v46 + v16))
        {
          __break(1u);
          return result;
        }
        int v19 = *(unsigned __int8 *)(v14 + v13);
        int v45 = v19;
        if (v19 == 2) {
          break;
        }
        if (v19 != 3) {
          goto LABEL_20;
        }
        uint64_t v20 = v11;
        uint64_t v21 = v41;
        sub_1000ADF58();
        sub_1000AE2A8();
        sub_1000ADF18();
        char v22 = sub_1000AE298();
        if (v2)
        {
          uint64_t v18 = v21;
          uint64_t v11 = v20;
          unint64_t v13 = v42;
LABEL_8:
          (*v43)(v18, v44);
          swift_bridgeObjectRelease();
          uint64_t result = swift_errorRelease();
          uint64_t v2 = 0;
          goto LABEL_9;
        }
        char v23 = v22;
        (*v43)(v21, v44);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v11 = v20;
        unint64_t v13 = v42;
        if (v23) {
          goto LABEL_20;
        }
LABEL_9:
        ++v16;
        ++v14;
        if (v13 == --v12) {
          return (uint64_t)v38;
        }
      }
      sub_1000ADF58();
      sub_1000AE2A8();
      sub_1000ADF18();
      char v24 = sub_1000AE298();
      if (v2) {
        break;
      }
      char v25 = v24;
      (*v43)(v11, v44);
      uint64_t result = swift_bridgeObjectRelease();
      if ((v25 & 1) == 0) {
        goto LABEL_9;
      }
      unsigned int v27 = v39;
      uint64_t v26 = v40;
      (*v36)(v39, v37, v40);
      char v28 = sub_1000AE1A8();
      uint64_t result = (*v35)(v27, v26);
      if ((v28 & 1) == 0) {
        goto LABEL_9;
      }
LABEL_20:
      uint64_t v15 = v38;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v47 = v15;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1000A7994(0, v15[2] + 1, 1);
        uint64_t v15 = v47;
      }
      uint64_t v14 = v33;
      unint64_t v30 = v15[2];
      unint64_t v29 = v15[3];
      if (v30 >= v29 >> 1)
      {
        uint64_t result = sub_1000A7994(v29 > 1, v30 + 1, 1);
        uint64_t v15 = v47;
      }
      unint64_t v31 = v13 + 1;
      v13 += 1 + v16;
      v15[2] = v30 + 1;
      *((unsigned char *)v15 + v30 + 32) = v45;
      BOOL v32 = v31 == v12;
      unint64_t v12 = v34;
      if (v32) {
        return (uint64_t)v15;
      }
    }
    uint64_t v18 = v11;
    goto LABEL_8;
  }
  return (uint64_t)&_swiftEmptyArrayStorage;
}

uint64_t sub_100012930(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100012950, 0, 0);
}

uint64_t sub_100012950()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100012534(v1);
  swift_bridgeObjectRelease();
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_1000A7974(0, v3, 0);
    uint64_t v4 = 0;
    uint64_t v5 = *((void *)&_swiftEmptyArrayStorage + 2);
    do
    {
      char v6 = *(unsigned char *)(v2 + v4 + 32);
      unint64_t v7 = *((void *)&_swiftEmptyArrayStorage + 3);
      if (v5 + v4 >= v7 >> 1) {
        sub_1000A7974(v7 > 1, v5 + v4 + 1, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v5 + v4 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage + v5 + v4++ + 32) = v6;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = *(uint64_t (**)(void *))(v0 + 8);
  return v8(&_swiftEmptyArrayStorage);
}

uint64_t sub_100012A9C()
{
  uint64_t v1 = sub_1000AE1B8();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  uint64_t v2 = sub_1000ADF68();
  v0[5] = v2;
  v0[6] = *(void *)(v2 - 8);
  v0[7] = swift_task_alloc();
  v0[8] = swift_task_alloc();
  return _swift_task_switch(sub_100012BC4, 0, 0);
}

uint64_t sub_100012BC4()
{
  uint64_t v1 = 0;
  uint64_t v2 = v0[3];
  int64_t v3 = (void (**)(void, void))(v0[6] + 8);
  unsigned int v14 = enum case for REMFeatureFlags.groceryMultilingual(_:);
  unint64_t v13 = (void (**)(uint64_t, void, uint64_t))(v2 + 104);
  uint64_t v4 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  do
  {
    uint64_t v5 = *((unsigned __int8 *)&off_1000CF1A0 + v1 + 32);
    if (v5 == 2)
    {
      sub_1000ADF58();
      sub_1000AE2A8();
      sub_1000ADF18();
      char v7 = sub_1000AE298();
      (*v3)(v0[8], v0[5]);
      swift_bridgeObjectRelease();
      if (v7)
      {
        uint64_t v8 = v0[4];
        uint64_t v9 = v0[2];
        (*v13)(v8, v14, v9);
        char v10 = sub_1000AE1A8();
        (*v4)(v8, v9);
        if (v10)
        {
          uint64_t v5 = 2;
          goto LABEL_11;
        }
      }
    }
    else
    {
      if (v5 != 3) {
        goto LABEL_11;
      }
      sub_1000ADF58();
      sub_1000AE2A8();
      sub_1000ADF18();
      char v6 = sub_1000AE298();
      (*v3)(v0[7], v0[5]);
      swift_bridgeObjectRelease();
      if (v6)
      {
        uint64_t v5 = 3;
        goto LABEL_11;
      }
    }
    ++v1;
  }
  while (v1 != 4);
  uint64_t v5 = 4;
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v5);
}

uint64_t sub_100012E04()
{
  return _swift_task_switch(sub_100012E20, 0, 0);
}

uint64_t sub_100012E20()
{
  sub_1000A7974(0, 4, 0);
  unint64_t v2 = *((void *)&_swiftEmptyArrayStorage + 2);
  unint64_t v1 = *((void *)&_swiftEmptyArrayStorage + 3);
  int64_t v3 = v1 >> 1;
  unint64_t v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    sub_1000A7974(v1 > 1, v2 + 1, 1);
    unint64_t v1 = *((void *)&_swiftEmptyArrayStorage + 3);
    int64_t v3 = v1 >> 1;
  }
  *((void *)&_swiftEmptyArrayStorage + 2) = v4;
  *((unsigned char *)&_swiftEmptyArrayStorage + v2 + 32) = 0;
  unint64_t v5 = v2 + 2;
  if (v3 < (uint64_t)(v2 + 2))
  {
    sub_1000A7974(v1 > 1, v2 + 2, 1);
    unint64_t v1 = *((void *)&_swiftEmptyArrayStorage + 3);
    int64_t v3 = v1 >> 1;
  }
  *((void *)&_swiftEmptyArrayStorage + 2) = v5;
  *((unsigned char *)&_swiftEmptyArrayStorage + v4 + 32) = 1;
  unint64_t v6 = v2 + 3;
  if (v3 < (uint64_t)(v2 + 3)) {
    sub_1000A7974(v1 > 1, v2 + 3, 1);
  }
  *((void *)&_swiftEmptyArrayStorage + 2) = v6;
  *((unsigned char *)&_swiftEmptyArrayStorage + v5 + 32) = 2;
  unint64_t v7 = *((void *)&_swiftEmptyArrayStorage + 3);
  if ((uint64_t)(v2 + 4) > (uint64_t)(v7 >> 1)) {
    sub_1000A7974(v7 > 1, v2 + 4, 1);
  }
  *((void *)&_swiftEmptyArrayStorage + 2) = v2 + 4;
  *((unsigned char *)&_swiftEmptyArrayStorage + v6 + 32) = 3;
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100012FCC()
{
  uint64_t v0 = sub_1000ADA78();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  char v23 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000693C(&qword_1000D5070);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000ADC98();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000ADF68();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000AF468();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000ADCA8();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v21 = sub_10000693C(&qword_1000D5298);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  char v26 = 4;
  uint64_t v18 = sub_1000AD748();
  int v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_10000FA24();
  return sub_1000AD7B8();
}

unint64_t sub_100013418()
{
  unint64_t result = qword_1000D52A0;
  if (!qword_1000D52A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D52A0);
  }
  return result;
}

unint64_t sub_10001346C()
{
  unint64_t result = qword_1000D52A8;
  if (!qword_1000D52A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D52A8);
  }
  return result;
}

unint64_t sub_1000134C0()
{
  unint64_t result = qword_1000D52B0;
  if (!qword_1000D52B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D52B0);
  }
  return result;
}

uint64_t sub_100013514(uint64_t a1)
{
  uint64_t v2 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000029;
  v7._countAndFlagsBits = 0x80000001000B7840;
  v8._object = (void *)0x80000001000B7810;
  v9.value._object = (void *)0x80000001000B77B0;
  v9.value._countAndFlagsBits = 0xD000000000000011;
  v3.super.isa = v2;
  v10._countAndFlagsBits = 0x6174627553206425;
  v10._object = (void *)0xEB00000000736B73;
  sub_1000ADC48(v8, v9, v3, v10, v7);

  sub_10000693C(&qword_1000D52E8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000B0270;
  *(void *)(v4 + 56) = &type metadata for Int;
  *(void *)(v4 + 64) = &protocol witness table for Int;
  *(void *)(v4 + 32) = a1;
  uint64_t v5 = sub_1000AF488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100013654(uint64_t a1)
{
  uint64_t v2 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000023;
  v7._countAndFlagsBits = 0x80000001000B77D0;
  v8._object = (void *)0x80000001000B7780;
  v9.value._object = (void *)0x80000001000B77B0;
  v9.value._countAndFlagsBits = 0xD000000000000011;
  v3.super.isa = v2;
  v10._countAndFlagsBits = 0x6E696D6572206425;
  v10._object = (void *)0xEC00000073726564;
  sub_1000ADC48(v8, v9, v3, v10, v7);

  sub_10000693C(&qword_1000D52E8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000B0270;
  *(void *)(v4 + 56) = &type metadata for Int;
  *(void *)(v4 + 64) = &protocol witness table for Int;
  *(void *)(v4 + 32) = a1;
  uint64_t v5 = sub_1000AF488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

BOOL sub_100013794(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000137A8()
{
  Swift::UInt v1 = *v0;
  sub_1000AFA98();
  sub_1000AFAA8(v1);
  return sub_1000AFAB8();
}

void sub_1000137F0()
{
  sub_1000AFAA8(*v0);
}

Swift::Int sub_10001381C()
{
  Swift::UInt v1 = *v0;
  sub_1000AFA98();
  sub_1000AFAA8(v1);
  return sub_1000AFAB8();
}

void sub_100013860(void *a1@<X8>)
{
  *a1 = &off_1000CF218;
}

void *sub_100013870()
{
  uint64_t v0 = sub_1000AF2A8();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  NSBundle v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_1000A79B4(0, 3, 0);
  uint64_t v4 = v15;
  uint64_t v5 = enum case for WidgetFamily.systemLarge(_:);
  unint64_t v6 = (void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  HIDWORD(v14) = enum case for WidgetFamily.systemMedium(_:);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for WidgetFamily.systemSmall(_:), v0);
  uint64_t v15 = v4;
  unint64_t v8 = v4[2];
  unint64_t v7 = v4[3];
  if (v8 >= v7 >> 1)
  {
    sub_1000A79B4(v7 > 1, v8 + 1, 1);
    uint64_t v4 = v15;
  }
  v4[2] = v8 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v4+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v8, v3, v0);
  (*v6)(v3, HIDWORD(v14), v0);
  uint64_t v15 = v4;
  unint64_t v10 = v4[2];
  unint64_t v9 = v4[3];
  if (v10 >= v9 >> 1)
  {
    sub_1000A79B4(v9 > 1, v10 + 1, 1);
    uint64_t v4 = v15;
  }
  v4[2] = v10 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v4+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v10, v3, v0);
  (*v6)(v3, v5, v0);
  uint64_t v15 = v4;
  unint64_t v12 = v4[2];
  unint64_t v11 = v4[3];
  if (v12 >= v11 >> 1)
  {
    sub_1000A79B4(v11 > 1, v12 + 1, 1);
    uint64_t v4 = v15;
  }
  v4[2] = v12 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v4+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v12, v3, v0);
  return v4;
}

uint64_t getEnumTagSinglePayload for TTRSupportedSystemWidgetFamily(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TTRSupportedSystemWidgetFamily(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100013CB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSupportedSystemWidgetFamily()
{
  return &type metadata for TTRSupportedSystemWidgetFamily;
}

unint64_t sub_100013CF4()
{
  unint64_t result = qword_1000D52F0;
  if (!qword_1000D52F0)
  {
    sub_100006F98(&qword_1000D52F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D52F0);
  }
  return result;
}

unint64_t sub_100013D54()
{
  unint64_t result = qword_1000D5300;
  if (!qword_1000D5300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5300);
  }
  return result;
}

void *sub_100013DA8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    int v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v9 = v8[9];
    __dst = (void **)((char *)v4 + v9);
    unint64_t v10 = (void **)((char *)a2 + v9);
    uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
    uint64_t v14 = (int *)v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v14))
    {
      uint64_t v15 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = *v10;
      uint64_t v18 = v10[1];
      char *__dst = *v10;
      __dst[1] = v18;
      uint64_t v19 = v14[6];
      long long v59 = (char *)__dst + v19;
      uint64_t v60 = v12;
      uint64_t v64 = v10;
      uint64_t v20 = (char *)v10 + v19;
      uint64_t v21 = sub_1000ADC28();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      id v23 = v17;
      id v24 = v18;
      if (v62(v20, 1, v21))
      {
        uint64_t v25 = sub_10000693C(&qword_1000D4E10);
        memcpy(v59, v20, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v59, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v59, 0, 1, v21);
      }
      uint64_t v26 = v14[7];
      unsigned int v27 = (char *)__dst + v26;
      char v28 = (char *)v64 + v26;
      uint64_t v29 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v30 = v14[8];
      unint64_t v31 = *(void **)((char *)v64 + v30);
      *(void **)((char *)__dst + v30) = v31;
      *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v64 + v14[9]);
      *((unsigned char *)__dst + v14[10]) = *((unsigned char *)v64 + v14[10]);
      *((unsigned char *)__dst + v14[11]) = *((unsigned char *)v64 + v14[11]);
      BOOL v32 = *(void (**)(void **, void, uint64_t, int *))(v60 + 56);
      id v33 = v31;
      v32(__dst, 0, 1, v14);
    }
    uint64_t v34 = v8[10];
    __dsta = *(void **)((char *)a2 + v34);
    *(void *)((char *)v4 + v34) = __dsta;
    uint64_t v35 = v8[11];
    uint64_t v36 = (void *)((char *)v4 + v35);
    unsigned int v37 = (uint64_t *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    void *v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = v8[12];
    uint64_t v40 = *(void **)((char *)a2 + v39);
    *(void *)((char *)v4 + v39) = v40;
    uint64_t v41 = v8[13];
    unint64_t v42 = (void *)((char *)v4 + v41);
    unsigned int v43 = (uint64_t *)((char *)a2 + v41);
    uint64_t v44 = v43[1];
    *unint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = v8[14];
    unint64_t v46 = (void *)((char *)v4 + v45);
    uint64_t v47 = (uint64_t *)((char *)a2 + v45);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    *((unsigned char *)v4 + v8[15]) = *((unsigned char *)a2 + v8[15]);
    uint64_t v49 = v8[16];
    uint64_t v50 = (void *)((char *)v4 + v49);
    uint64_t v51 = (uint64_t *)((char *)a2 + v49);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    *(void *)((char *)v4 + v8[17]) = *(uint64_t *)((char *)a2 + v8[17]);
    uint64_t v53 = v8[18];
    uint64_t v63 = (uint64_t)a2 + v53;
    uint64_t v65 = (char *)v4 + v53;
    uint64_t v54 = sub_1000ADD48();
    uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
    id v55 = __dsta;
    swift_bridgeObjectRetain();
    id v56 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61(v65, v63, v54);
    *(void *)((char *)v4 + v8[19]) = *(uint64_t *)((char *)a2 + v8[19]);
    *((unsigned char *)v4 + v8[20]) = *((unsigned char *)a2 + v8[20]);
    uint64_t v57 = *(int *)(a3 + 24);
    *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)v4 + v57) = *(uint64_t *)((char *)a2 + v57);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100014224(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v2 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  int v3 = (id *)(a1 + v2[9]);
  unsigned int v4 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v4 - 1) + 48))(v3, 1, v4))
  {

    int v5 = (char *)v3 + v4[6];
    uint64_t v6 = sub_1000ADC28();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    }
    int v8 = (char *)v3 + v4[7];
    uint64_t v9 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + v2[18];
  uint64_t v11 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100014460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = v7[9];
  __dst = (void **)(a1 + v8);
  uint64_t v9 = (void **)(a2 + v8);
  uint64_t v10 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void **, uint64_t, int *))(v11 + 48);
  unint64_t v13 = (int *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v13))
  {
    uint64_t v14 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v60 = v9;
    uint64_t v62 = v11;
    uint64_t v15 = *v9;
    uint64_t v16 = v9[1];
    char *__dst = *v9;
    __dst[1] = v16;
    uint64_t v17 = v13[6];
    char v58 = (char *)__dst + v17;
    uint64_t v18 = (char *)v9 + v17;
    uint64_t v19 = sub_1000ADC28();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    id v21 = v15;
    id v22 = v16;
    if (v57(v18, 1, v19))
    {
      uint64_t v23 = sub_10000693C(&qword_1000D4E10);
      memcpy(v58, v18, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v58, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v58, 0, 1, v19);
    }
    uint64_t v24 = v13[7];
    uint64_t v25 = (char *)__dst + v24;
    uint64_t v26 = (char *)v60 + v24;
    uint64_t v27 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = v13[8];
    uint64_t v29 = *(void **)((char *)v60 + v28);
    *(void **)((char *)__dst + v28) = v29;
    *(void **)((char *)__dst + v13[9]) = *(void **)((char *)v60 + v13[9]);
    *((unsigned char *)__dst + v13[10]) = *((unsigned char *)v60 + v13[10]);
    *((unsigned char *)__dst + v13[11]) = *((unsigned char *)v60 + v13[11]);
    uint64_t v30 = *(void (**)(void **, void, uint64_t, int *))(v62 + 56);
    id v31 = v29;
    v30(__dst, 0, 1, v13);
  }
  uint64_t v32 = v7[10];
  __dsta = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = __dsta;
  uint64_t v33 = v7[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = v7[12];
  uint64_t v38 = *(void **)(a2 + v37);
  *(void *)(a1 + v37) = v38;
  uint64_t v39 = v7[13];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = v7[14];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  void *v44 = *v45;
  v44[1] = v46;
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  uint64_t v47 = v7[16];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  uint64_t v51 = v7[18];
  uint64_t v61 = a2 + v51;
  uint64_t v63 = a1 + v51;
  uint64_t v52 = sub_1000ADD48();
  long long v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16);
  id v53 = __dsta;
  swift_bridgeObjectRetain();
  id v54 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v59(v63, v61, v52);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  uint64_t v55 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v55) = *(void *)(a2 + v55);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100014888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v6 = v5[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_10001A248((uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v21 = (void *)*v8;
    id v22 = (void *)*v7;
    void *v7 = *v8;
    id v23 = v21;

    uint64_t v24 = (void *)v7[1];
    uint64_t v25 = (void *)v8[1];
    v7[1] = v25;
    id v26 = v25;

    uint64_t v27 = v9[6];
    uint64_t v28 = (char *)v7 + v27;
    __dsta = (char *)v8 + v27;
    uint64_t v29 = sub_1000ADC28();
    uint64_t v78 = *(void *)(v29 - 8);
    long long v80 = v28;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
    LODWORD(v28) = v30(v28, 1, v29);
    int v31 = v30(__dsta, 1, v29);
    if (v28)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v78 + 16))(v80, __dsta, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v80, 0, 1, v29);
        goto LABEL_18;
      }
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v80;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v78 + 24))(v80, __dsta, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v78 + 8))(v80, v29);
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v80;
    }
    memcpy(v33, __dsta, v32);
LABEL_18:
    uint64_t v42 = v9[7];
    uint64_t v43 = (char *)v7 + v42;
    uint64_t v44 = (char *)v8 + v42;
    uint64_t v45 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
    uint64_t v46 = v9[8];
    uint64_t v47 = *(void **)((char *)v7 + v46);
    uint64_t v48 = *(void **)((char *)v8 + v46);
    *(void *)((char *)v7 + v46) = v48;
    id v49 = v48;

    *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
    *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
    *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v20 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v14 = (void *)*v8;
  void *v7 = *v8;
  v79 = (void *)v8[1];
  v7[1] = v79;
  uint64_t v15 = v9[6];
  __dst = (char *)v7 + v15;
  uint64_t v77 = (char *)v8 + v15;
  uint64_t v16 = sub_1000ADC28();
  uint64_t v75 = *(void *)(v16 - 8);
  v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
  id v17 = v14;
  id v18 = v79;
  if (v76(v77, 1, v16))
  {
    uint64_t v19 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v77, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(__dst, v77, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v34 = v9[7];
  uint64_t v35 = (char *)v7 + v34;
  uint64_t v36 = (char *)v8 + v34;
  uint64_t v37 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = v9[8];
  uint64_t v39 = *(void **)((char *)v8 + v38);
  *(void *)((char *)v7 + v38) = v39;
  *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
  *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
  *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
  uint64_t v40 = *(void (**)(void *, void, uint64_t, int *))(v10 + 56);
  id v41 = v39;
  v40(v7, 0, 1, v9);
LABEL_19:
  uint64_t v50 = v5[10];
  uint64_t v51 = *(void **)(a2 + v50);
  uint64_t v52 = *(void **)(a1 + v50);
  *(void *)(a1 + v50) = v51;
  id v53 = v51;

  uint64_t v54 = v5[11];
  uint64_t v55 = (void *)(a1 + v54);
  id v56 = (void *)(a2 + v54);
  *uint64_t v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = v5[12];
  char v58 = *(void **)(a1 + v57);
  long long v59 = *(void **)(a2 + v57);
  *(void *)(a1 + v57) = v59;
  id v60 = v59;

  uint64_t v61 = v5[13];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  *uint64_t v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = v5[14];
  uint64_t v65 = (void *)(a1 + v64);
  char v66 = (void *)(a2 + v64);
  *uint64_t v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
  uint64_t v67 = v5[16];
  uint64_t v68 = (void *)(a1 + v67);
  uint64_t v69 = (void *)(a2 + v67);
  *uint64_t v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v70 = v5[18];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  *(void *)(a1 + v5[19]) = *(void *)(a2 + v5[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[20]) = *(unsigned char *)(a2 + v5[20]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100014F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[6];
    uint64_t v28 = a3;
    __dst = (char *)v8 + v13;
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = sub_1000ADC28();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v18 = v10[7];
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = (char *)v9 + v18;
    uint64_t v21 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(void *)((char *)v8 + v10[8]) = *(void *)((char *)v9 + v10[8]);
    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    a3 = v28;
  }
  *(void *)(a1 + v6[10]) = *(void *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  *(_OWORD *)(a1 + v6[13]) = *(_OWORD *)(a2 + v6[13]);
  *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  uint64_t v22 = v6[18];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  uint64_t v26 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  return a1;
}

uint64_t sub_100015300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = v7[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_10001A248((uint64_t)v9, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    uint64_t v22 = (void *)*v9;
    *uint64_t v9 = *v10;

    uint64_t v23 = (void *)v9[1];
    v9[1] = v10[1];

    uint64_t v24 = v11[6];
    uint64_t v25 = (char *)v9 + v24;
    __dsta = (char *)v10 + v24;
    uint64_t v26 = sub_1000ADC28();
    uint64_t v72 = *(void *)(v26 - 8);
    uint64_t v73 = v25;
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
    LODWORD(v25) = v27(v25, 1, v26);
    int v28 = v27(__dsta, 1, v26);
    if (v25)
    {
      if (!v28)
      {
        (*(void (**)(void *, char *, uint64_t))(v72 + 32))(v73, __dsta, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(v73, 0, 1, v26);
        goto LABEL_20;
      }
      size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v30 = v73;
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(void *, char *, uint64_t))(v72 + 40))(v73, __dsta, v26);
        goto LABEL_20;
      }
      (*(void (**)(void *, uint64_t))(v72 + 8))(v73, v26);
      size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v30 = v73;
    }
    memcpy(v30, __dsta, v29);
LABEL_20:
    uint64_t v35 = a3;
    uint64_t v66 = v11[7];
    uint64_t v67 = (char *)v9 + v66;
    uint64_t v68 = (char *)v10 + v66;
    uint64_t v69 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
    uint64_t v70 = v11[8];
    uint64_t v71 = *(void **)((char *)v9 + v70);
    *(void *)((char *)v9 + v70) = *(void *)((char *)v10 + v70);

    *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
    *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
    *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
    goto LABEL_14;
  }
  if (!v15)
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    uint64_t v16 = v11[6];
    __dst = (char *)v9 + v16;
    uint64_t v17 = (char *)v10 + v16;
    uint64_t v18 = sub_1000ADC28();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v31 = v11[7];
    size_t v32 = (char *)v9 + v31;
    uint64_t v33 = (char *)v10 + v31;
    uint64_t v34 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    *(void *)((char *)v9 + v11[8]) = *(void *)((char *)v10 + v11[8]);
    *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
    *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
    *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
    (*(void (**)(void *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v21 = sub_10000693C(&qword_1000D4CD8);
  memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_13:
  uint64_t v35 = a3;
LABEL_14:
  uint64_t v36 = v7[10];
  uint64_t v37 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = *(void *)(a2 + v36);

  uint64_t v38 = v7[11];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *uint64_t v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = v7[12];
  uint64_t v44 = *(void **)(a1 + v43);
  *(void *)(a1 + v43) = *(void *)(a2 + v43);

  uint64_t v45 = v7[13];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  void *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v7[14];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  uint64_t v55 = v7[16];
  id v56 = (void *)(a1 + v55);
  uint64_t v57 = (uint64_t *)(a2 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  void *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  swift_bridgeObjectRelease();
  uint64_t v60 = v7[18];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  uint64_t v63 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 40))(v61, v62, v63);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  uint64_t v64 = *(int *)(v35 + 24);
  *(void *)(a1 + *(int *)(v35 + 20)) = *(void *)(a2 + *(int *)(v35 + 20));
  *(void *)(a1 + v64) = *(void *)(a2 + v64);
  return a1;
}

uint64_t sub_10001593C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100015950);
}

uint64_t sub_100015954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100015968);
}

uint64_t type metadata accessor for TTRIAnyListComplicationWidgetView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D5388);
}

uint64_t sub_10001598C()
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100015A28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100015A44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v80 = sub_10000693C(&qword_1000D5478);
  __chkstk_darwin(v80);
  uint64_t v81 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_10000693C(&qword_1000D5480);
  __chkstk_darwin(v71);
  uint64_t v73 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10000693C(&qword_1000D5488);
  __chkstk_darwin(v72);
  uint64_t v69 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10000693C(&qword_1000D5490);
  __chkstk_darwin(v78);
  long long v74 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10000693C(&qword_1000D5498);
  uint64_t v11 = __chkstk_darwin(v70);
  uint64_t v68 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  int v15 = (char *)&v66 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v66 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v21 = sub_10000693C(&qword_1000D54A0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v79 = (uint64_t)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v77 = (char *)&v66 - v24;
  uint64_t v25 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v83 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = *(void *)(a1 + *(int *)(v25 + 76));
  if (*(void *)(v29 + 16) <= 1uLL)
  {
    uint64_t v67 = (uint64_t *)v20;
    uint64_t v28 = *(void *)a1;
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v83 = v30;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1000AF098();
    uint64_t v26 = v31;
    unint64_t v32 = *(void *)(v29 + 16);
    if (v32 < 2)
    {
      uint64_t v75 = v31;
      uint64_t v76 = v28;
      if (v32)
      {
        uint64_t v55 = *(void *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) - 8);
        sub_10001A138(v29 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80)), (uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
        v10[v8[5]] = 1;
        id v56 = &v10[v8[6]];
        *(void *)id v56 = swift_getKeyPath();
        v56[8] = 0;
        uint64_t v57 = &v10[v8[7]];
        *(void *)uint64_t v57 = swift_getKeyPath();
        v57[8] = 0;
        uint64_t v58 = sub_1000AF1B8();
        sub_10002D0AC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v18, 0.0, 1, INFINITY, 0, v58, v59);
        sub_10001A248((uint64_t)v10, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
        uint64_t v60 = (uint64_t)v67;
        sub_10001D8DC((uint64_t)v18, (uint64_t)v67, &qword_1000D5498);
        sub_100009D6C(v60, v73, &qword_1000D5498);
        swift_storeEnumTagMultiPayload();
        sub_100009F50(&qword_1000D54A8, &qword_1000D5488);
        sub_10001A2A8();
        uint64_t v61 = (uint64_t)v74;
        sub_1000AEC68();
        sub_100009D6C(v61, (uint64_t)v81, &qword_1000D5490);
        swift_storeEnumTagMultiPayload();
        sub_10001A39C();
        sub_10001A43C();
        uint64_t v48 = (uint64_t)v77;
        sub_1000AEC68();
        sub_100009EF4(v61, &qword_1000D5490);
        sub_100009EF4(v60, &qword_1000D5498);
      }
      else
      {
        char v62 = *(unsigned char *)(a1 + 40);
        uint64_t v63 = swift_getKeyPath();
        uint64_t v64 = sub_1000AF098();
        uint64_t v65 = v81;
        *uint64_t v81 = v62;
        *((void *)v65 + 1) = v63;
        v65[16] = 0;
        *((void *)v65 + 3) = v64;
        swift_storeEnumTagMultiPayload();
        sub_10001A39C();
        sub_10001A43C();
        uint64_t v48 = (uint64_t)v77;
        sub_1000AEC68();
      }
      goto LABEL_6;
    }
    uint64_t v27 = KeyPath;
    uint64_t v20 = (char *)v67;
  }
  uint64_t v75 = v26;
  uint64_t v76 = v28;
  uint64_t v67 = a2;
  uint64_t v33 = *(void *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) - 8);
  uint64_t v34 = v29 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
  sub_10001A138(v34, (uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  v10[v8[5]] = 0;
  uint64_t v35 = &v10[v8[6]];
  *(void *)uint64_t v35 = swift_getKeyPath();
  v35[8] = 0;
  uint64_t v36 = &v10[v8[7]];
  *(void *)uint64_t v36 = swift_getKeyPath();
  v36[8] = 0;
  uint64_t v37 = sub_1000AF1B8();
  sub_10002D0AC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v18, 0.0, 1, INFINITY, 0, v37, v38);
  sub_10001A248((uint64_t)v10, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
  uint64_t result = sub_10001D8DC((uint64_t)v18, (uint64_t)v20, &qword_1000D5498);
  if (*(void *)(v29 + 16) >= 2uLL)
  {
    uint64_t KeyPath = v27;
    sub_10001A138(v34 + *(void *)(v33 + 72), (uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    v10[v8[5]] = 0;
    uint64_t v40 = &v10[v8[6]];
    *(void *)uint64_t v40 = swift_getKeyPath();
    v40[8] = 0;
    uint64_t v41 = &v10[v8[7]];
    *(void *)uint64_t v41 = swift_getKeyPath();
    v41[8] = 0;
    uint64_t v42 = sub_1000AF1B8();
    sub_10002D0AC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0, v42, v43);
    sub_10001A248((uint64_t)v10, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
    sub_10001D8DC((uint64_t)v15, (uint64_t)v18, &qword_1000D5498);
    sub_100009D6C((uint64_t)v20, (uint64_t)v15, &qword_1000D5498);
    uint64_t v44 = v68;
    sub_100009D6C((uint64_t)v18, v68, &qword_1000D5498);
    uint64_t v45 = v69;
    sub_100009D6C((uint64_t)v15, v69, &qword_1000D5498);
    uint64_t v46 = sub_10000693C(&qword_1000D54D8);
    sub_100009D6C(v44, v45 + *(int *)(v46 + 48), &qword_1000D5498);
    sub_100009EF4(v44, &qword_1000D5498);
    sub_100009EF4((uint64_t)v15, &qword_1000D5498);
    sub_100009D6C(v45, v73, &qword_1000D5488);
    swift_storeEnumTagMultiPayload();
    sub_100009F50(&qword_1000D54A8, &qword_1000D5488);
    sub_10001A2A8();
    uint64_t v47 = (uint64_t)v74;
    sub_1000AEC68();
    sub_100009EF4(v45, &qword_1000D5488);
    sub_100009D6C(v47, (uint64_t)v81, &qword_1000D5490);
    swift_storeEnumTagMultiPayload();
    sub_10001A39C();
    sub_10001A43C();
    uint64_t v48 = (uint64_t)v77;
    sub_1000AEC68();
    sub_100009EF4(v47, &qword_1000D5490);
    sub_100009EF4((uint64_t)v18, &qword_1000D5498);
    sub_100009EF4((uint64_t)v20, &qword_1000D5498);
    a2 = v67;
LABEL_6:
    uint64_t v49 = v79;
    sub_100009D6C(v48, v79, &qword_1000D54A0);
    uint64_t v51 = v75;
    uint64_t v50 = v76;
    uint64_t v53 = KeyPath;
    uint64_t v52 = v83;
    *a2 = v76;
    a2[1] = v52;
    a2[2] = v53;
    a2[3] = 0;
    a2[4] = v51;
    uint64_t v54 = sub_10000693C(&qword_1000D54D0);
    sub_100009D6C(v49, (uint64_t)a2 + *(int *)(v54 + 48), &qword_1000D54A0);
    sub_10001A490(v50, v52);
    sub_100009EF4(v48, &qword_1000D54A0);
    sub_100009EF4(v49, &qword_1000D54A0);
    return sub_10001A4E0(v50, v52);
  }
  __break(1u);
  return result;
}

uint64_t sub_100016464()
{
  uint64_t v1 = sub_10000693C(&qword_1000D4C78);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D5460);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_1000AEBD8();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_10000693C(&qword_1000D5468);
  sub_100015A44(v0, (uint64_t *)&v6[*(int *)(v7 + 44)]);
  uint64_t v8 = v0 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 72);
  uint64_t v9 = sub_1000ADD48();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v3, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v3, 0, 1, v9);
  sub_100009F50(&qword_1000D5470, &qword_1000D5460);
  sub_1000AEF18();
  sub_100009EF4((uint64_t)v3, &qword_1000D4C78);
  return sub_100009EF4((uint64_t)v6, &qword_1000D5460);
}

uint64_t sub_100016650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 24);
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_retain();
  sub_10002DA48(v4, v3);
  swift_release();
  uint64_t v5 = sub_1000AEEB8();
  uint64_t v7 = v6;
  char v9 = v8;
  swift_bridgeObjectRelease();
  swift_release();
  char v10 = v9 & 1;
  uint64_t v11 = sub_1000AEE88();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_100006FE0(v5, v7, v10);
  swift_bridgeObjectRelease();
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  sub_100009E88(v11, v13, v17);
  swift_bridgeObjectRetain();
  sub_100006FE0(v11, v13, v17);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10001679C()
{
  return sub_100018544((void (*)(void))sub_10001A5D8);
}

__n128 sub_1000167BC@<Q0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v15[0] = *(_OWORD *)v1;
  v15[1] = v3;
  uint64_t v16 = *(void *)(v1 + 32);
  uint64_t v4 = sub_1000AEB78();
  sub_100016650((uint64_t)v15, (uint64_t)&v10);
  char v5 = v11;
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  char v8 = v14;
  __n128 result = v10;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  return result;
}

id sub_100016830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v79 = a1;
  uint64_t v74 = sub_10000693C(&qword_1000D5598);
  __chkstk_darwin(v74);
  uint64_t v78 = (uint64_t *)((char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v76 = type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(0);
  __chkstk_darwin(v76);
  uint64_t v4 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_10000693C(&qword_1000D55A0);
  uint64_t v71 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10000693C(&qword_1000D55A8);
  uint64_t v7 = *(void *)(v77 - 8);
  uint64_t v8 = __chkstk_darwin(v77);
  uint64_t v70 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v72 = (char *)&v69 - v10;
  uint64_t v11 = type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000693C(&qword_1000D4E10);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v17 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  sub_100009D6C((uint64_t)v1 + v17[6], (uint64_t)v16, &qword_1000D4E10);
  uint64_t v18 = sub_1000ADC28();
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v16, 1, v18);
  sub_100009EF4((uint64_t)v16, &qword_1000D4E10);
  sub_10001A138((uint64_t)v1, (uint64_t)v13, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
  if (v19 == 1)
  {
    uint64_t v20 = *(void *)&v13[v17[9]];
    sub_10001A248((uint64_t)v13, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
    uint64_t v21 = 1;
    if (v20 < 1) {
      uint64_t v21 = 2;
    }
  }
  else
  {
    sub_10001A248((uint64_t)v13, type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
    uint64_t v21 = 1;
  }
  uint64_t v73 = v21;
  uint64_t v22 = *(void **)((char *)v1 + v17[8]);
  if (v22)
  {
    int v23 = *((unsigned __int8 *)v1 + v17[10]);
    uint64_t v24 = (void *)*v1;
    id v25 = v22;
    id v69 = v25;
    id v26 = [v24 string];
    uint64_t v27 = sub_1000AF498();
    uint64_t v29 = v28;

    uint64_t aBlock = sub_1000A8F20((uint64_t)v25, v27, v29, v23 ^ 1u);
    uint64_t v81 = v30;
    v82 = v31;
    sub_10001C45C();
    sub_1000AF178();
    sub_10001A138((uint64_t)v1, (uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    unint64_t v32 = (int *)v76;
    v4[*(int *)(v76 + 20)] = *((unsigned char *)v1 + *(int *)(v11 + 20));
    *(void *)&v4[v32[6]] = v73;
    uint64_t v33 = &v4[v32[7]];
    *(void *)uint64_t v33 = swift_getKeyPath();
    v33[8] = 0;
    uint64_t v34 = &v4[v32[8]];
    *(void *)uint64_t v34 = swift_getKeyPath();
    v34[8] = 0;
    uint64_t v35 = &v4[v32[9]];
    *(void *)uint64_t v35 = swift_getKeyPath();
    v35[8] = 0;
    uint64_t v36 = sub_100009F50(&qword_1000D55B8, &qword_1000D55A0);
    uint64_t v37 = sub_10001A354(&qword_1000D55C0, (void (*)(uint64_t))type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
    uint64_t v38 = v70;
    uint64_t v39 = v75;
    sub_1000AEF68();
    sub_10001A248((uint64_t)v4, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v6, v39);
    uint64_t v40 = v72;
    uint64_t v41 = v77;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v72, v38, v77);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v78, v40, v41);
    swift_storeEnumTagMultiPayload();
    sub_10000693C(&qword_1000D55B0);
    uint64_t aBlock = v39;
    uint64_t v81 = (uint64_t)v32;
    v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v36;
    uint64_t v83 = (void *)v37;
    swift_getOpaqueTypeConformance2();
    sub_10001C2D0();
    sub_1000AEC68();

    return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v40, v41);
  }
  uint64_t v43 = (void *)*v1;
  uint64_t v72 = (char *)v11;
  char v44 = *((unsigned char *)v1 + *(int *)(v11 + 28) + 8);
  uint64_t v45 = swift_retain();
  uint64_t v46 = sub_10002DA48(v45, v44);
  swift_release();
  id result = [v43 string];
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v47 = result;
  long long v86 = xmmword_1000B0280;
  char v87 = 0;
  long long v88 = &_swiftEmptyArrayStorage;
  id v48 = [self attributeName];
  id v49 = [v43 length];
  uint64_t v50 = (void *)swift_allocObject();
  v50[2] = &v86;
  v50[3] = v47;
  v50[4] = v46;
  v50[5] = 0;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = sub_100009E2C;
  *(void *)(v51 + 24) = v50;
  uint64_t v84 = sub_10001C1E8;
  uint64_t v85 = v51;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v81 = 1107296256;
  v82 = sub_100009C54;
  uint64_t v83 = &unk_1000CF9F8;
  uint64_t v52 = _Block_copy(&aBlock);
  id v53 = v47;
  uint64_t v71 = v46;
  swift_retain();
  swift_retain();
  swift_release();
  [v43 enumerateAttribute:v48 inRange:0 options:v49 usingBlock:v52];

  _Block_release(v52);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  id result = (id)swift_release();
  if (v49)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  long long v54 = v86;
  char v55 = v87;
  swift_release();
  swift_release();
  char v56 = *((unsigned char *)v1 + *((int *)v72 + 6) + 8);
  uint64_t v57 = swift_retain();
  sub_10002DA48(v57, v56);
  swift_release();
  uint64_t v58 = sub_1000AEEB8();
  uint64_t v60 = v59;
  char v62 = v61;
  uint64_t v64 = v63;
  swift_release();
  sub_100006FE0(v54, *((uint64_t *)&v54 + 1), v55);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v66 = v78;
  uint64_t *v78 = v58;
  v66[1] = v60;
  *((unsigned char *)v66 + 16) = v62 & 1;
  v66[3] = v64;
  v66[4] = KeyPath;
  v66[5] = v73;
  *((unsigned char *)v66 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  sub_10000693C(&qword_1000D55B0);
  uint64_t v67 = sub_100009F50(&qword_1000D55B8, &qword_1000D55A0);
  uint64_t v68 = sub_10001A354(&qword_1000D55C0, (void (*)(uint64_t))type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
  uint64_t aBlock = v75;
  uint64_t v81 = v76;
  v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v67;
  uint64_t v83 = (void *)v68;
  swift_getOpaqueTypeConformance2();
  sub_10001C2D0();
  return (id)sub_1000AEC68();
}

uint64_t sub_100017238()
{
  return sub_100018544((void (*)(void))sub_10001A6D4);
}

uint64_t sub_100017258()
{
  return sub_100018544((void (*)(void))sub_10001A680);
}

uint64_t sub_10001727C@<X0>(void **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v59 = sub_10000693C(&qword_1000D56C0);
  __chkstk_darwin(v59);
  uint64_t v60 = (uint64_t *)((char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1000AF108();
  uint64_t v61 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D56C8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000693C(&qword_1000D56D0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v74 = (uint64_t *)((char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v75 = (uint64_t)&v53 - v20;
  int v63 = sub_1000AEC88();
  uint64_t v67 = sub_1000AEBD8();
  sub_1000179D0(a1, (uint64_t)v78);
  uint64_t v69 = v78[1];
  uint64_t v70 = v78[0];
  int v68 = v79;
  uint64_t v77 = v80;
  uint64_t v62 = v81;
  uint64_t v66 = v82;
  int v65 = v83;
  int v64 = v84;
  uint64_t v72 = v86;
  uint64_t v73 = v85;
  uint64_t v71 = v87;
  uint64_t v76 = v88;
  char v21 = sub_1000AEC88();
  sub_10001A138((uint64_t)a1, (uint64_t)v16, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
  if ((v21 & 1) == 0)
  {
    sub_10001A248((uint64_t)v16, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
    goto LABEL_5;
  }
  uint64_t v55 = v8;
  uint64_t v57 = v11;
  char v56 = v7;
  uint64_t v22 = v61;
  uint64_t v58 = v13;
  char v23 = v16[*(int *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) + 44)];
  sub_10001A248((uint64_t)v16, type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
  if ((v23 & 1) == 0)
  {
LABEL_5:
    uint64_t v38 = sub_10000693C(&qword_1000D56D8);
    uint64_t v37 = v75;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v75, 1, 1, v38);
    goto LABEL_6;
  }
  uint64_t v54 = sub_1000AF0E8();
  char v24 = *((unsigned char *)a1 + *(int *)(v14 + 28) + 8);
  uint64_t v25 = swift_retain();
  uint64_t v26 = sub_10002DA48(v25, v24);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  int v28 = sub_1000AEC78();
  uint64_t v29 = v56;
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v56, enum case for Image.Scale.small(_:), v5);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = v60;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))((char *)v60 + *(int *)(v59 + 28), v29, v5);
  *uint64_t v31 = v30;
  uint64_t v32 = (uint64_t)v57;
  sub_100009D6C((uint64_t)v31, (uint64_t)&v57[*(int *)(v55 + 36)], &qword_1000D56C0);
  *(void *)uint64_t v32 = v54;
  *(void *)(v32 + 8) = KeyPath;
  *(void *)(v32 + 16) = v26;
  *(_DWORD *)(v32 + 24) = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100009EF4((uint64_t)v31, &qword_1000D56C0);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v29, v5);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v33 = (uint64_t)v58;
  sub_10001D8DC(v32, (uint64_t)v58, &qword_1000D56C8);
  sub_100009D6C(v33, v32, &qword_1000D56C8);
  uint64_t v34 = v74;
  *uint64_t v74 = 0;
  *((unsigned char *)v34 + 8) = 1;
  uint64_t v35 = sub_10000693C(&qword_1000D56E8);
  sub_100009D6C(v32, (uint64_t)v34 + *(int *)(v35 + 48), &qword_1000D56C8);
  sub_100009EF4(v33, &qword_1000D56C8);
  sub_100009EF4(v32, &qword_1000D56C8);
  uint64_t v36 = sub_10000693C(&qword_1000D56D8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v34, 0, 1, v36);
  uint64_t v37 = v75;
  sub_10001D8DC((uint64_t)v34, v75, &qword_1000D56D0);
LABEL_6:
  char v39 = v63 & 1;
  uint64_t v40 = v37;
  uint64_t v41 = v74;
  sub_100009D6C(v40, (uint64_t)v74, &qword_1000D56D0);
  *(unsigned char *)a2 = v39;
  *(void *)(a2 + 8) = v67;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  uint64_t v42 = v69;
  uint64_t v43 = v70;
  *(void *)(a2 + 32) = v70;
  *(void *)(a2 + 40) = v42;
  char v44 = v68;
  *(unsigned char *)(a2 + 48) = v68;
  uint64_t v45 = v62;
  *(void *)(a2 + 56) = v77;
  *(void *)(a2 + 64) = v45;
  *(void *)(a2 + 72) = v66;
  *(unsigned char *)(a2 + 80) = v65;
  *(_DWORD *)(a2 + 84) = v64;
  uint64_t v47 = v72;
  uint64_t v46 = v73;
  *(void *)(a2 + 88) = v73;
  *(void *)(a2 + 96) = v47;
  char v48 = v71;
  uint64_t v49 = v76;
  *(void *)(a2 + 104) = v71;
  *(void *)(a2 + 112) = v49;
  *(void *)(a2 + 120) = 0;
  *(unsigned char *)(a2 + 128) = 0;
  uint64_t v50 = sub_10000693C(&qword_1000D56E0);
  sub_100009D6C((uint64_t)v41, a2 + *(int *)(v50 + 80), &qword_1000D56D0);
  sub_100009E88(v43, v42, v44);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v51 = v76;
  sub_10001D824(v46, v47, v48, v76);
  sub_100009EF4(v75, &qword_1000D56D0);
  sub_100009EF4((uint64_t)v41, &qword_1000D56D0);
  sub_100006FE0(v43, v42, v44);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10001D868(v46, v47, v48, v51);
}

id sub_1000179D0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D4E10);
  __chkstk_darwin(v4 - 8);
  int v68 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v70 = sub_1000ADC28();
  uint64_t v69 = *(void *)(v70 - 8);
  uint64_t v6 = __chkstk_darwin(v70);
  uint64_t v66 = &v63[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v67 = &v63[-v8];
  uint64_t v9 = *a1;
  uint64_t v76 = type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(0);
  uint64_t v77 = a1;
  char v10 = *((unsigned char *)a1 + *(int *)(v76 + 36) + 8);
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_10002DA48(v11, v10);
  swift_release();
  id result = [v9 string];
  if (result)
  {
    uint64_t v14 = result;
    long long v79 = xmmword_1000B0280;
    char v80 = 0;
    uint64_t v81 = &_swiftEmptyArrayStorage;
    id v15 = [self attributeName];
    id v16 = [v9 length];
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = &v79;
    *(void *)(v17 + 24) = v14;
    *(void *)(v17 + 32) = v12;
    *(void *)(v17 + 40) = 0;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_10000A0A0;
    *(void *)(v18 + 24) = v17;
    aBlock[4] = sub_10001DC9C;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009C54;
    aBlock[3] = &unk_1000CFA90;
    uint64_t v19 = _Block_copy(aBlock);
    id v20 = v14;
    swift_retain();
    swift_retain();
    swift_release();
    [v9 enumerateAttribute:v15 inRange:0 options:v16 usingBlock:v19];

    _Block_release(v19);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      uint64_t v22 = *((void *)&v79 + 1);
      uint64_t v23 = v79;
      char v24 = v80;
      swift_release();
      swift_release();
      uint64_t v26 = v76;
      uint64_t v25 = v77;
      uint64_t v27 = (char *)v77 + *(int *)(v76 + 28);
      char v28 = v27[8];
      uint64_t v29 = swift_retain();
      sub_10002DA48(v29, v28);
      swift_release();
      uint64_t v72 = sub_1000AEEB8();
      uint64_t v74 = v31;
      uint64_t v75 = v30;
      int v71 = v32;
      swift_release();
      sub_100006FE0(v23, v22, v24);
      swift_bridgeObjectRelease();
      uint64_t v33 = *(uint64_t *)((char *)v25 + *(int *)(v26 + 24));
      uint64_t KeyPath = swift_getKeyPath();
      int v35 = sub_1000AEC78();
      int v36 = *((unsigned __int8 *)v25 + *(int *)(v26 + 20));
      uint64_t v73 = v33;
      if (v36 != 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        id v15 = v74;
        uint64_t v18 = v72;
        char v45 = v71;
        goto LABEL_9;
      }
      LODWORD(v76) = v35;
      uint64_t v37 = v68;
      sub_1000180CC(v68);
      uint64_t v38 = v69;
      uint64_t v39 = v70;
      int v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48))(v37, 1, v70);
      id v15 = v74;
      if (v40 == 1)
      {
        sub_100009EF4((uint64_t)v37, &qword_1000D4E10);
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        uint64_t v18 = v72;
        char v45 = v71;
        int v35 = v76;
LABEL_9:
        char v61 = v45 & 1;
        uint64_t v62 = v75;
        *(void *)a2 = v18;
        *(void *)(a2 + 8) = v62;
        *(unsigned char *)(a2 + 16) = v45 & 1;
        *(void *)(a2 + 24) = v15;
        *(void *)(a2 + 32) = KeyPath;
        *(void *)(a2 + 40) = v73;
        *(unsigned char *)(a2 + 48) = 0;
        *(_DWORD *)(a2 + 52) = v35;
        *(void *)(a2 + 56) = v41;
        *(void *)(a2 + 64) = v42;
        *(void *)(a2 + 72) = v43;
        *(void *)(a2 + 80) = v44;
        sub_100009E88(v18, v62, v45 & 1);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_10001D824(v41, v42, v43, v44);
        sub_10001D868(v41, v42, v43, v44);
        sub_100006FE0(v18, v62, v61);
        swift_release();
        return (id)swift_bridgeObjectRelease();
      }
      uint64_t v65 = KeyPath;
      uint64_t v17 = (uint64_t)v67;
      (*(void (**)(unsigned char *, char *, uint64_t))(v38 + 32))(v67, v37, v39);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v38 + 16))(v66, v17, v39);
      uint64_t v46 = sub_1000AEED8();
      uint64_t v48 = v47;
      char v50 = v49 & 1;
      char v51 = v27[8];
      uint64_t v52 = swift_retain();
      sub_10002DA48(v52, v51);
      swift_release();
      int v68 = (char *)sub_1000AEEB8();
      uint64_t v66 = v53;
      LOBYTE(v17) = v54;
      uint64_t v77 = v55;
      swift_release();
      sub_100006FE0(v46, v48, v50);
      swift_bridgeObjectRelease();
      uint64_t v18 = v72;
      if (qword_1000D4930 == -1)
      {
LABEL_8:
        swift_retain();
        char v56 = v68;
        uint64_t v57 = (uint64_t)v66;
        uint64_t v41 = sub_1000AEE88();
        uint64_t v42 = v58;
        int v64 = v59;
        uint64_t v44 = v60;
        swift_release();
        uint64_t v43 = v64 & 1;
        sub_100006FE0((uint64_t)v56, v57, v17 & 1);
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v67, v70);
        char v45 = v71;
        int v35 = v76;
        uint64_t KeyPath = v65;
        goto LABEL_9;
      }
    }
    swift_once();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000180CC@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_10000693C(&qword_1000D4E10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADC28();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  sub_100009D6C(v1 + *(int *)(v10 + 24), (uint64_t)v5, &qword_1000D4E10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100009EF4((uint64_t)v5, &qword_1000D4E10);
    uint64_t v11 = *(void *)(v1 + *(int *)(v10 + 36));
    if (v11 < 1)
    {
      uint64_t v13 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v13, 1, v6);
    }
    sub_100013514(v11);
    sub_1000ADBE8();
  }
  else
  {
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v12(v9, v5, v6);
    v12(a1, v9, v6);
  }
  uint64_t v13 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v13, 1, v6);
}

uint64_t sub_1000182A4()
{
  return sub_100018544((void (*)(void))sub_10001C560);
}

uint64_t sub_1000182C4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1000AEB78();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_10000693C(&qword_1000D56B8);
  return sub_10001727C(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100018320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000AF0E8();
  uint64_t v3 = sub_1000AED58();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = sub_1000AF0A8();
  uint64_t result = swift_getKeyPath();
  *a1 = v2;
  a1[1] = KeyPath;
  a1[2] = v3;
  a1[3] = result;
  a1[4] = v5;
  return result;
}

uint64_t sub_1000183C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100018320(a1);
}

uint64_t sub_1000183CC(uint64_t a1, uint64_t a2, char a3)
{
  sub_1000AE168();
  if (!v4) {
    sub_1000AE148();
  }
  uint64_t v5 = swift_retain();
  sub_10002DA48(v5, a3 & 1);
  swift_release();
  uint64_t v6 = sub_1000AEEB8();
  uint64_t v8 = v7;
  char v10 = v9;
  swift_bridgeObjectRelease();
  swift_release();
  char v11 = v10 & 1;
  uint64_t v12 = sub_1000AEE88();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_100006FE0(v6, v8, v11);
  swift_bridgeObjectRelease();
  sub_1000AF028();
  sub_100006FE0(v12, v14, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100018524()
{
  return sub_100018544((void (*)(void))sub_10001A62C);
}

uint64_t sub_100018544(void (*a1)(void))
{
  a1();
  sub_1000AEB38();
  return v2;
}

uint64_t sub_10001858C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_1000AEB48();
}

uint64_t sub_1000185F0()
{
  return sub_1000183CC(*v0, *((void *)v0 + 1), v0[16]);
}

uint64_t sub_10001860C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001A138(v1, a1, type metadata accessor for TTRNewWidgetViewModel);
}

uint64_t sub_100018640(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetViewModel(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = *(int *)(v4 + 36);
    __dst = (void **)(a1 + v9);
    char v10 = (void **)((char *)a2 + v9);
    uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
    uint64_t v14 = v10;
    char v15 = (int *)v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v14, 1, v15))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v18 = *v14;
      uint64_t v19 = v14[1];
      char *__dst = *v14;
      __dst[1] = v19;
      uint64_t v20 = v15[6];
      int v59 = (char *)__dst + v20;
      uint64_t v60 = v12;
      int v64 = v14;
      char v21 = (char *)v14 + v20;
      uint64_t v22 = sub_1000ADC28();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      id v24 = v18;
      id v25 = v19;
      if (v62(v21, 1, v22))
      {
        uint64_t v26 = sub_10000693C(&qword_1000D4E10);
        memcpy(v59, v21, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v59, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v59, 0, 1, v22);
      }
      uint64_t v27 = v15[7];
      char v28 = (char *)__dst + v27;
      uint64_t v29 = (char *)v64 + v27;
      uint64_t v30 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v31 = v15[8];
      int v32 = *(void **)((char *)v64 + v31);
      *(void **)((char *)__dst + v31) = v32;
      *(void **)((char *)__dst + v15[9]) = *(void **)((char *)v64 + v15[9]);
      *((unsigned char *)__dst + v15[10]) = *((unsigned char *)v64 + v15[10]);
      *((unsigned char *)__dst + v15[11]) = *((unsigned char *)v64 + v15[11]);
      uint64_t v33 = *(void (**)(void **, void, uint64_t, int *))(v60 + 56);
      id v34 = v32;
      v33(__dst, 0, 1, v15);
    }
    uint64_t v35 = v6[10];
    __dsta = *(void **)((char *)a2 + v35);
    *(void *)(a1 + v35) = __dsta;
    uint64_t v36 = v6[11];
    uint64_t v37 = (void *)(a1 + v36);
    uint64_t v38 = (uint64_t *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = v6[12];
    uint64_t v41 = *(void **)((char *)a2 + v40);
    *(void *)(a1 + v40) = v41;
    uint64_t v42 = v6[13];
    uint64_t v43 = (void *)(a1 + v42);
    uint64_t v44 = (uint64_t *)((char *)a2 + v42);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = v6[14];
    uint64_t v47 = (void *)(a1 + v46);
    uint64_t v48 = (uint64_t *)((char *)a2 + v46);
    uint64_t v49 = v48[1];
    *uint64_t v47 = *v48;
    v47[1] = v49;
    *(unsigned char *)(a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    uint64_t v50 = v6[16];
    char v51 = (void *)(a1 + v50);
    uint64_t v52 = (uint64_t *)((char *)a2 + v50);
    uint64_t v53 = v52[1];
    *char v51 = *v52;
    v51[1] = v53;
    *(void *)(a1 + v6[17]) = *(uint64_t *)((char *)a2 + v6[17]);
    uint64_t v54 = v6[18];
    uint64_t v63 = (uint64_t)a2 + v54;
    uint64_t v65 = a1 + v54;
    uint64_t v55 = sub_1000ADD48();
    char v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16);
    id v56 = __dsta;
    swift_bridgeObjectRetain();
    id v57 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61(v65, v63, v55);
    *(void *)(a1 + v6[19]) = *(uint64_t *)((char *)a2 + v6[19]);
    *(unsigned char *)(a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100018A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = v6[9];
  __dst = (void **)(a1 + v7);
  uint64_t v8 = (void **)(a2 + v7);
  uint64_t v9 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(void **, uint64_t, int *))(v10 + 48);
  uint64_t v12 = (int *)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v12))
  {
    uint64_t v13 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = *v8;
    char v15 = v8[1];
    char *__dst = *v8;
    __dst[1] = v15;
    uint64_t v16 = v12[6];
    id v56 = (char *)__dst + v16;
    uint64_t v58 = v10;
    uint64_t v60 = v8;
    uint64_t v17 = (char *)v8 + v16;
    uint64_t v18 = sub_1000ADC28();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    id v20 = v14;
    id v21 = v15;
    if (v55(v17, 1, v18))
    {
      uint64_t v22 = sub_10000693C(&qword_1000D4E10);
      memcpy(v56, v17, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v56, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v56, 0, 1, v18);
    }
    uint64_t v23 = v12[7];
    id v24 = (char *)__dst + v23;
    id v25 = (char *)v60 + v23;
    uint64_t v26 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    uint64_t v27 = v12[8];
    char v28 = *(void **)((char *)v60 + v27);
    *(void **)((char *)__dst + v27) = v28;
    *(void **)((char *)__dst + v12[9]) = *(void **)((char *)v60 + v12[9]);
    *((unsigned char *)__dst + v12[10]) = *((unsigned char *)v60 + v12[10]);
    *((unsigned char *)__dst + v12[11]) = *((unsigned char *)v60 + v12[11]);
    uint64_t v29 = *(void (**)(void **, void, uint64_t, int *))(v58 + 56);
    id v30 = v28;
    v29(__dst, 0, 1, v12);
  }
  uint64_t v31 = v6[10];
  __dsta = *(void **)(a2 + v31);
  *(void *)(a1 + v31) = __dsta;
  uint64_t v32 = v6[11];
  uint64_t v33 = (void *)(a1 + v32);
  id v34 = (void *)(a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = v6[12];
  uint64_t v37 = *(void **)(a2 + v36);
  *(void *)(a1 + v36) = v37;
  uint64_t v38 = v6[13];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v6[14];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  uint64_t v45 = v44[1];
  *uint64_t v43 = *v44;
  v43[1] = v45;
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  uint64_t v46 = v6[16];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  uint64_t v50 = v6[18];
  uint64_t v59 = a2 + v50;
  uint64_t v61 = a1 + v50;
  uint64_t v51 = sub_1000ADD48();
  id v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16);
  id v52 = __dsta;
  swift_bridgeObjectRetain();
  id v53 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57(v61, v59, v51);
  *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100018EA4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v5 = v4[9];
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v9 = *((void *)v8 - 1);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, int *))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (v12)
    {
      sub_10001A248((uint64_t)v6, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v20 = (void *)*v7;
    id v21 = (void *)*v6;
    *uint64_t v6 = *v7;
    id v22 = v20;

    uint64_t v23 = (void *)v6[1];
    id v24 = (void *)v7[1];
    v6[1] = v24;
    id v25 = v24;

    uint64_t v26 = v8[6];
    uint64_t v27 = (char *)v6 + v26;
    __dsta = (char *)v7 + v26;
    uint64_t v28 = sub_1000ADC28();
    uint64_t v77 = *(void *)(v28 - 8);
    long long v79 = v27;
    uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    LODWORD(v27) = v29(v27, 1, v28);
    int v30 = v29(__dsta, 1, v28);
    if (v27)
    {
      if (!v30)
      {
        (*(void (**)(void *, char *, uint64_t))(v77 + 16))(v79, __dsta, v28);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v79, 0, 1, v28);
        goto LABEL_18;
      }
      size_t v31 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v32 = v79;
    }
    else
    {
      if (!v30)
      {
        (*(void (**)(void *, char *, uint64_t))(v77 + 24))(v79, __dsta, v28);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v77 + 8))(v79, v28);
      size_t v31 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v32 = v79;
    }
    memcpy(v32, __dsta, v31);
LABEL_18:
    uint64_t v41 = v8[7];
    uint64_t v42 = (char *)v6 + v41;
    uint64_t v43 = (char *)v7 + v41;
    uint64_t v44 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
    uint64_t v45 = v8[8];
    uint64_t v46 = *(void **)((char *)v6 + v45);
    uint64_t v47 = *(void **)((char *)v7 + v45);
    *(void *)((char *)v6 + v45) = v47;
    id v48 = v47;

    *(void *)((char *)v6 + v8[9]) = *(void *)((char *)v7 + v8[9]);
    *((unsigned char *)v6 + v8[10]) = *((unsigned char *)v7 + v8[10]);
    *((unsigned char *)v6 + v8[11]) = *((unsigned char *)v7 + v8[11]);
    goto LABEL_19;
  }
  if (v12)
  {
LABEL_7:
    uint64_t v19 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v6, v7, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v13 = (void *)*v7;
  *uint64_t v6 = *v7;
  uint64_t v78 = (void *)v7[1];
  v6[1] = v78;
  uint64_t v14 = v8[6];
  __dst = (char *)v6 + v14;
  uint64_t v76 = (char *)v7 + v14;
  uint64_t v15 = sub_1000ADC28();
  uint64_t v74 = *(void *)(v15 - 8);
  uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  id v16 = v13;
  id v17 = v78;
  if (v75(v76, 1, v15))
  {
    uint64_t v18 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v76, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(__dst, v76, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v33 = v8[7];
  id v34 = (char *)v6 + v33;
  uint64_t v35 = (char *)v7 + v33;
  uint64_t v36 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v37 = v8[8];
  uint64_t v38 = *(void **)((char *)v7 + v37);
  *(void *)((char *)v6 + v37) = v38;
  *(void *)((char *)v6 + v8[9]) = *(void *)((char *)v7 + v8[9]);
  *((unsigned char *)v6 + v8[10]) = *((unsigned char *)v7 + v8[10]);
  *((unsigned char *)v6 + v8[11]) = *((unsigned char *)v7 + v8[11]);
  uint64_t v39 = *(void (**)(void *, void, uint64_t, int *))(v9 + 56);
  id v40 = v38;
  v39(v6, 0, 1, v8);
LABEL_19:
  uint64_t v49 = v4[10];
  uint64_t v50 = *(void **)(a2 + v49);
  uint64_t v51 = *(void **)(a1 + v49);
  *(void *)(a1 + v49) = v50;
  id v52 = v50;

  uint64_t v53 = v4[11];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  void *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = v4[12];
  id v57 = *(void **)(a1 + v56);
  uint64_t v58 = *(void **)(a2 + v56);
  *(void *)(a1 + v56) = v58;
  id v59 = v58;

  uint64_t v60 = v4[13];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  *uint64_t v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v4[14];
  int v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  *int v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
  uint64_t v66 = v4[16];
  uint64_t v67 = (void *)(a1 + v66);
  int v68 = (void *)(a2 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v4[17]) = *(void *)(a2 + v4[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = v4[18];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  uint64_t v72 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 24))(v70, v71, v72);
  *(void *)(a1 + v4[19]) = *(void *)(a2 + v4[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v4[20]) = *(unsigned char *)(a2 + v4[20]);
  return a1;
}

uint64_t sub_100019588(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v5 = v4[9];
  uint64_t v6 = (_OWORD *)(a1 + v5);
  uint64_t v7 = (_OWORD *)(a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v9 = *((void *)v8 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v6 = *v7;
    uint64_t v11 = v8[6];
    __dst = (char *)v6 + v11;
    int v12 = (char *)v7 + v11;
    uint64_t v13 = sub_1000ADC28();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v16 = v8[7];
    id v17 = (char *)v6 + v16;
    uint64_t v18 = (char *)v7 + v16;
    uint64_t v19 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    *(void *)((char *)v6 + v8[8]) = *(void *)((char *)v7 + v8[8]);
    *(void *)((char *)v6 + v8[9]) = *(void *)((char *)v7 + v8[9]);
    *((unsigned char *)v6 + v8[10]) = *((unsigned char *)v7 + v8[10]);
    *((unsigned char *)v6 + v8[11]) = *((unsigned char *)v7 + v8[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
  }
  *(void *)(a1 + v4[10]) = *(void *)(a2 + v4[10]);
  *(_OWORD *)(a1 + v4[11]) = *(_OWORD *)(a2 + v4[11]);
  *(void *)(a1 + v4[12]) = *(void *)(a2 + v4[12]);
  *(_OWORD *)(a1 + v4[13]) = *(_OWORD *)(a2 + v4[13]);
  *(_OWORD *)(a1 + v4[14]) = *(_OWORD *)(a2 + v4[14]);
  *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
  *(_OWORD *)(a1 + v4[16]) = *(_OWORD *)(a2 + v4[16]);
  *(void *)(a1 + v4[17]) = *(void *)(a2 + v4[17]);
  uint64_t v20 = v4[18];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  *(void *)(a1 + v4[19]) = *(void *)(a2 + v4[19]);
  *(unsigned char *)(a1 + v4[20]) = *(unsigned char *)(a2 + v4[20]);
  return a1;
}

uint64_t sub_1000198E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *((void *)v10 - 1);
  int v12 = *(uint64_t (**)(void *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10001A248((uint64_t)v8, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    uint64_t v21 = (void *)*v8;
    *uint64_t v8 = *v9;

    uint64_t v22 = (void *)v8[1];
    v8[1] = v9[1];

    uint64_t v23 = v10[6];
    id v24 = (char *)v8 + v23;
    __dsta = (char *)v9 + v23;
    uint64_t v25 = sub_1000ADC28();
    uint64_t v69 = *(void *)(v25 - 8);
    uint64_t v70 = v24;
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
    LODWORD(v24) = v26(v24, 1, v25);
    int v27 = v26(__dsta, 1, v25);
    if (v24)
    {
      if (!v27)
      {
        (*(void (**)(void *, char *, uint64_t))(v69 + 32))(v70, __dsta, v25);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v25);
        goto LABEL_18;
      }
      size_t v28 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v29 = v70;
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(void *, char *, uint64_t))(v69 + 40))(v70, __dsta, v25);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v69 + 8))(v70, v25);
      size_t v28 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v29 = v70;
    }
    memcpy(v29, __dsta, v28);
LABEL_18:
    uint64_t v34 = v10[7];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    uint64_t v37 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
    uint64_t v38 = v10[8];
    uint64_t v39 = *(void **)((char *)v8 + v38);
    *(void *)((char *)v8 + v38) = *(void *)((char *)v9 + v38);

    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v20 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  uint64_t v15 = v10[6];
  __dst = (char *)v8 + v15;
  uint64_t v16 = (char *)v9 + v15;
  uint64_t v17 = sub_1000ADC28();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v30 = v10[7];
  size_t v31 = (char *)v8 + v30;
  uint64_t v32 = (char *)v9 + v30;
  uint64_t v33 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  *(void *)((char *)v8 + v10[8]) = *(void *)((char *)v9 + v10[8]);
  *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
  *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
  *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
  (*(void (**)(void *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_19:
  uint64_t v40 = v6[10];
  uint64_t v41 = *(void **)(a1 + v40);
  *(void *)(a1 + v40) = *(void *)(a2 + v40);

  uint64_t v42 = v6[11];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (uint64_t *)(a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = v6[12];
  id v48 = *(void **)(a1 + v47);
  *(void *)(a1 + v47) = *(void *)(a2 + v47);

  uint64_t v49 = v6[13];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = v6[14];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (uint64_t *)(a2 + v54);
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  *uint64_t v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  uint64_t v59 = v6[16];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  *uint64_t v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  swift_bridgeObjectRelease();
  uint64_t v64 = v6[18];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  uint64_t v67 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
  *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  return a1;
}

uint64_t sub_100019EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100019F10);
}

uint64_t sub_100019F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100019F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100019F94);
}

uint64_t sub_100019F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveRemindersView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D5420);
}

uint64_t sub_10001A028()
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10001A0B4()
{
  return sub_10001A354(&qword_1000D5458, (void (*)(uint64_t))type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveRemindersView);
}

uint64_t sub_10001A0FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D5558);
}

uint64_t sub_10001A138(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001A1A0@<X0>(void *a1@<X8>)
{
  return sub_10001C4D0((void (*)(void))sub_10001A6D4, a1);
}

uint64_t sub_10001A1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001858C(a1, a2, a3, a4, (void (*)(void))sub_10001A6D4);
}

uint64_t sub_10001A1F4@<X0>(void *a1@<X8>)
{
  return sub_10001C4D0((void (*)(void))sub_10001A680, a1);
}

uint64_t sub_10001A214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001858C(a1, a2, a3, a4, (void (*)(void))sub_10001A680);
}

uint64_t sub_10001A248(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10001A2A8()
{
  unint64_t result = qword_1000D54B0;
  if (!qword_1000D54B0)
  {
    sub_100006F98(&qword_1000D5498);
    sub_10001A354(&qword_1000D54B8, (void (*)(uint64_t))type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D54B0);
  }
  return result;
}

uint64_t sub_10001A354(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001A39C()
{
  unint64_t result = qword_1000D54C0;
  if (!qword_1000D54C0)
  {
    sub_100006F98(&qword_1000D5490);
    sub_100009F50(&qword_1000D54A8, &qword_1000D5488);
    sub_10001A2A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D54C0);
  }
  return result;
}

unint64_t sub_10001A43C()
{
  unint64_t result = qword_1000D54C8;
  if (!qword_1000D54C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D54C8);
  }
  return result;
}

uint64_t sub_10001A490(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10001A4E0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10001A530@<X0>(void *a1@<X8>)
{
  return sub_10001C4D0((void (*)(void))sub_10001A62C, a1);
}

uint64_t sub_10001A550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001858C(a1, a2, a3, a4, (void (*)(void))sub_10001A62C);
}

uint64_t sub_10001A584@<X0>(void *a1@<X8>)
{
  return sub_10001C4D0((void (*)(void))sub_10001A5D8, a1);
}

uint64_t sub_10001A5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001858C(a1, a2, a3, a4, (void (*)(void))sub_10001A5D8);
}

unint64_t sub_10001A5D8()
{
  unint64_t result = qword_1000D54E0;
  if (!qword_1000D54E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D54E0);
  }
  return result;
}

unint64_t sub_10001A62C()
{
  unint64_t result = qword_1000D54E8;
  if (!qword_1000D54E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D54E8);
  }
  return result;
}

unint64_t sub_10001A680()
{
  unint64_t result = qword_1000D54F0;
  if (!qword_1000D54F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D54F0);
  }
  return result;
}

unint64_t sub_10001A6D4()
{
  unint64_t result = qword_1000D54F8;
  if (!qword_1000D54F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D54F8);
  }
  return result;
}

ValueMetadata *_s34AnyListComplicationReminderFontKeyOMa()
{
  return &_s34AnyListComplicationReminderFontKeyON;
}

ValueMetadata *_s33AnyListComplicationHashtagFontKeyOMa()
{
  return &_s33AnyListComplicationHashtagFontKeyON;
}

ValueMetadata *_s36AnyListComplicationNoReminderFontKeyOMa()
{
  return &_s36AnyListComplicationNoReminderFontKeyON;
}

ValueMetadata *_s34AnyListComplicationListNameFontKeyOMa()
{
  return &_s34AnyListComplicationListNameFontKeyON;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for TTRIAnyListComplicationWidgetView.NoReminderView()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TTRIAnyListComplicationWidgetView.NoReminderView(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.NoReminderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIAnyListComplicationWidgetView.NoReminderView()
{
  return &type metadata for TTRIAnyListComplicationWidgetView.NoReminderView;
}

char *sub_10001A994(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  char v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[1];
    *((void *)a1 + 1) = v7;
    uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v9 = v8[6];
    __dst = &v6[v9];
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1000ADC28();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    int v14 = v4;
    uint64_t v15 = v7;
    if (v13(v10, 1, v11))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = v8[7];
    uint64_t v18 = &v6[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v8[8];
    uint64_t v22 = *(char **)((char *)a2 + v21);
    *(void *)&v6[v21] = v22;
    *(void *)&v6[v8[9]] = *(char **)((char *)a2 + v8[9]);
    v6[v8[10]] = *((unsigned char *)a2 + v8[10]);
    v6[v8[11]] = *((unsigned char *)a2 + v8[11]);
    uint64_t v23 = a3[6];
    v6[a3[5]] = *((unsigned char *)a2 + a3[5]);
    id v24 = &v6[v23];
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = *v25;
    LOBYTE(v25) = *((unsigned char *)v25 + 8);
    *(void *)id v24 = v26;
    v24[8] = (char)v25;
    uint64_t v27 = a3[7];
    size_t v28 = &v6[v27];
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = *v29;
    LOBYTE(v29) = *((unsigned char *)v29 + 8);
    *(void *)size_t v28 = v30;
    v28[8] = (char)v29;
    id v31 = v22;
    swift_retain();
  }
  swift_retain();
  return v6;
}

uint64_t sub_10001AC00(id *a1)
{
  unint64_t v2 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  int v3 = (char *)a1 + v2[6];
  uint64_t v4 = sub_1000ADC28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v6 = (char *)a1 + v2[7];
  uint64_t v7 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return swift_release();
}

void *sub_10001AD3C(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v8 = v7[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  id v14 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v9, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v16 = v7[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = v7[8];
  uint64_t v21 = *(void **)(a2 + v20);
  *(void *)((char *)a1 + v20) = v21;
  *(void *)((char *)a1 + v7[9]) = *(void *)(a2 + v7[9]);
  *((unsigned char *)a1 + v7[10]) = *(unsigned char *)(a2 + v7[10]);
  *((unsigned char *)a1 + v7[11]) = *(unsigned char *)(a2 + v7[11]);
  uint64_t v22 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v23 = (char *)a1 + v22;
  id v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  LOBYTE(v24) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  v23[8] = (char)v24;
  uint64_t v26 = a3[7];
  uint64_t v27 = (char *)a1 + v26;
  size_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  LOBYTE(v28) = *((unsigned char *)v28 + 8);
  *(void *)uint64_t v27 = v29;
  v27[8] = (char)v28;
  id v30 = v21;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10001AF5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v7 = v5;

  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v9;
  id v10 = v9;

  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = v11[6];
  id v13 = (void *)(a1 + v12);
  id v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000ADC28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_10000693C(&qword_1000D4E10);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = v11[7];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = v11[8];
  uint64_t v26 = *(void **)(a1 + v25);
  uint64_t v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  id v28 = v27;

  *(void *)(a1 + v11[9]) = *(void *)(a2 + v11[9]);
  *(unsigned char *)(a1 + v11[10]) = *(unsigned char *)(a2 + v11[10]);
  *(unsigned char *)(a1 + v11[11]) = *(unsigned char *)(a2 + v11[11]);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v29 = a3[6];
  uint64_t v30 = a1 + v29;
  id v31 = (uint64_t *)(a2 + v29);
  uint64_t v32 = *v31;
  LOBYTE(v31) = *((unsigned char *)v31 + 8);
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = (_BYTE)v31;
  swift_retain();
  swift_release();
  uint64_t v33 = a3[7];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = (_BYTE)v35;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10001B204(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D4E10);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = v6[7];
  id v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  uint64_t v17 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  int v18 = (char *)a1 + v17;
  int v19 = (char *)a2 + v17;
  *(void *)int v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  v21[8] = v22[8];
  *(void *)uint64_t v21 = *(void *)v22;
  return a1;
}

uint64_t sub_10001B3EC(uint64_t a1, void *a2, int *a3)
{
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000ADC28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000693C(&qword_1000D4E10);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = v7[7];
  uint64_t v18 = a1 + v17;
  int v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1000ADD48();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = v7[8];
  uint64_t v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)((char *)a2 + v21);

  *(void *)(a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
  *(unsigned char *)(a1 + v7[10]) = *((unsigned char *)a2 + v7[10]);
  *(unsigned char *)(a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
  uint64_t v23 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  LOBYTE(v25) = v25[8];
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = (_BYTE)v25;
  swift_release();
  uint64_t v27 = a3[7];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  LOBYTE(v29) = v29[8];
  *(void *)uint64_t v28 = v30;
  *(unsigned char *)(v28 + 8) = (_BYTE)v29;
  swift_release();
  return a1;
}

uint64_t sub_10001B674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001B688);
}

uint64_t sub_10001B68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001B6A0);
}

uint64_t sub_10001B6A4()
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel.Reminder(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TTRIAnyListComplicationWidgetView.ListInfoView()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.ListInfoView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIAnyListComplicationWidgetView.ListInfoView()
{
  return &type metadata for TTRIAnyListComplicationWidgetView.ListInfoView;
}

uint64_t sub_10001B984()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001BA04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001BA20()
{
  uint64_t v0 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AEDF8();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.headline(_:), v3);
  uint64_t v7 = sub_1000AED68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  uint64_t v8 = sub_1000AEDB8();
  sub_100009EF4((uint64_t)v2, &qword_1000D4BD8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_1000D5308 = v8;
  return result;
}

uint64_t sub_10001BBC0@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D4830, &qword_1000D5308, a1);
}

uint64_t sub_10001BBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_10001C5B4();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_10001BC48(uint64_t a1)
{
  return sub_10001BCC8(a1, &qword_1000D5310);
}

uint64_t sub_10001BC54@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D4838, &qword_1000D5310, a1);
}

uint64_t sub_10001BC78(uint64_t a1)
{
  return sub_10001BF00(a1, (void (*)(uint64_t))&static Font.Weight.semibold.getter, &qword_1000D5318);
}

uint64_t sub_10001BC98@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D4840, &qword_1000D5318, a1);
}

uint64_t sub_10001BCBC(uint64_t a1)
{
  return sub_10001BCC8(a1, &qword_1000D5320);
}

uint64_t sub_10001BCC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AEDF8();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.body(_:), v6);
  uint64_t v10 = enum case for Font.Design.default(_:);
  uint64_t v11 = sub_1000AED68();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v5, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  uint64_t v13 = sub_1000AEDB8();
  sub_100009EF4((uint64_t)v5, &qword_1000D4BD8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v13;
  return result;
}

uint64_t sub_10001BEBC@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D4848, &qword_1000D5320, a1);
}

uint64_t sub_10001BEE0(uint64_t a1)
{
  return sub_10001BF00(a1, (void (*)(uint64_t))&static Font.Weight.bold.getter, &qword_1000D5328);
}

uint64_t sub_10001BF00(uint64_t a1, void (*a2)(uint64_t), uint64_t *a3)
{
  uint64_t v5 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AEDF8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Font.TextStyle.body(_:), v8);
  uint64_t v12 = enum case for Font.Design.default(_:);
  uint64_t v13 = sub_1000AED68();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v7, v12, v13);
  uint64_t v15 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
  a2(v15);
  uint64_t v16 = sub_1000AEDB8();
  sub_100009EF4((uint64_t)v7, &qword_1000D4BD8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a3 = v16;
  return result;
}

uint64_t sub_10001C100@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D4850, &qword_1000D5328, a1);
}

uint64_t sub_10001C124@<X0>(void *a1@<X2>, void *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_retain();
}

uint64_t sub_10001C17C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001C198()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D5650);
}

uint64_t sub_10001C1D8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001C1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100009C2C(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_10001C1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C200()
{
  return swift_release();
}

uint64_t sub_10001C208@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000AEAF8();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10001C23C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000AEAF8();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10001C270()
{
  return sub_1000AEB08();
}

uint64_t sub_10001C2A0()
{
  return sub_1000AEB08();
}

unint64_t sub_10001C2D0()
{
  unint64_t result = qword_1000D55C8;
  if (!qword_1000D55C8)
  {
    sub_100006F98(&qword_1000D55B0);
    sub_100009F50(&qword_1000D55D0, &qword_1000D55D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55C8);
  }
  return result;
}

uint64_t sub_10001C370()
{
  return sub_1000AE9F8();
}

uint64_t sub_10001C394(uint64_t a1)
{
  uint64_t v2 = sub_1000AF108();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1000AEA08();
}

unint64_t sub_10001C45C()
{
  unint64_t result = qword_1000D55E0;
  if (!qword_1000D55E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55E0);
  }
  return result;
}

uint64_t sub_10001C4B0@<X0>(void *a1@<X8>)
{
  return sub_10001C4D0((void (*)(void))sub_10001C560, a1);
}

uint64_t sub_10001C4D0@<X0>(void (*a1)(void)@<X3>, void *a2@<X8>)
{
  a1();
  uint64_t result = sub_1000AEB38();
  *a2 = v4;
  return result;
}

uint64_t sub_10001C52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001858C(a1, a2, a3, a4, (void (*)(void))sub_10001C560);
}

unint64_t sub_10001C560()
{
  unint64_t result = qword_1000D55E8;
  if (!qword_1000D55E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55E8);
  }
  return result;
}

unint64_t sub_10001C5B4()
{
  unint64_t result = qword_1000D55F0;
  if (!qword_1000D55F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55F0);
  }
  return result;
}

ValueMetadata *_s46AnyListComplicationReminderWithSubtasksFontKeyOMa()
{
  return &_s46AnyListComplicationReminderWithSubtasksFontKeyON;
}

char *sub_10001C618(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[1];
    *((void *)a1 + 1) = v8;
    uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v10 = v9[6];
    uint64_t v38 = (char *)a2 + v10;
    __dst = &v7[v10];
    uint64_t v11 = sub_1000ADC28();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    uint64_t v15 = v8;
    if (v13(v38, 1, v11))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v38, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v38, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = v9[7];
    uint64_t v18 = &v7[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v9[8];
    uint64_t v22 = *(char **)((char *)a2 + v21);
    *(void *)&v7[v21] = v22;
    *(void *)&v7[v9[9]] = *(char **)((char *)a2 + v9[9]);
    v7[v9[10]] = *((unsigned char *)a2 + v9[10]);
    v7[v9[11]] = *((unsigned char *)a2 + v9[11]);
    uint64_t v23 = a3[6];
    v7[a3[5]] = *((unsigned char *)a2 + a3[5]);
    *(void *)&v7[v23] = *(char **)((char *)a2 + v23);
    uint64_t v24 = a3[7];
    uint64_t v25 = a3[8];
    uint64_t v26 = &v7[v24];
    uint64_t v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = *v27;
    LOBYTE(v27) = *((unsigned char *)v27 + 8);
    *(void *)uint64_t v26 = v28;
    v26[8] = (char)v27;
    uint64_t v29 = &v7[v25];
    uint64_t v30 = (uint64_t *)((char *)a2 + v25);
    uint64_t v31 = *v30;
    LOBYTE(v30) = *((unsigned char *)v30 + 8);
    *(void *)uint64_t v29 = v31;
    v29[8] = (char)v30;
    uint64_t v32 = a3[9];
    uint64_t v33 = &v7[v32];
    uint64_t v34 = (uint64_t *)((char *)a2 + v32);
    uint64_t v35 = *v34;
    LOBYTE(v34) = *((unsigned char *)v34 + 8);
    *(void *)uint64_t v33 = v35;
    v33[8] = (char)v34;
    id v36 = v22;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_10001C8B0(id *a1)
{
  uint64_t v2 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  int v3 = (char *)a1 + v2[6];
  uint64_t v4 = sub_1000ADC28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v6 = (char *)a1 + v2[7];
  uint64_t v7 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  swift_release();

  return swift_release();
}

void *sub_10001C9F8(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v8 = v7[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  id v14 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v9, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v16 = v7[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = v7[8];
  uint64_t v21 = *(void **)(a2 + v20);
  *(void *)((char *)a1 + v20) = v21;
  *(void *)((char *)a1 + v7[9]) = *(void *)(a2 + v7[9]);
  *((unsigned char *)a1 + v7[10]) = *(unsigned char *)(a2 + v7[10]);
  *((unsigned char *)a1 + v7[11]) = *(unsigned char *)(a2 + v7[11]);
  uint64_t v22 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)((char *)a1 + v22) = *(void *)(a2 + v22);
  uint64_t v23 = a3[7];
  uint64_t v24 = a3[8];
  uint64_t v25 = (char *)a1 + v23;
  uint64_t v26 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v26;
  LOBYTE(v26) = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  v25[8] = (char)v26;
  uint64_t v28 = (char *)a1 + v24;
  uint64_t v29 = (uint64_t *)(a2 + v24);
  uint64_t v30 = *v29;
  LOBYTE(v29) = *((unsigned char *)v29 + 8);
  *(void *)uint64_t v28 = v30;
  v28[8] = (char)v29;
  uint64_t v31 = a3[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  LOBYTE(v33) = *((unsigned char *)v33 + 8);
  *(void *)uint64_t v32 = v34;
  v32[8] = (char)v33;
  id v35 = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10001CC44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v7 = v5;

  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v9;
  id v10 = v9;

  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = v11[6];
  id v13 = (void *)(a1 + v12);
  id v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000ADC28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_10000693C(&qword_1000D4E10);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = v11[7];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = v11[8];
  uint64_t v26 = *(void **)(a1 + v25);
  uint64_t v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  id v28 = v27;

  *(void *)(a1 + v11[9]) = *(void *)(a2 + v11[9]);
  *(unsigned char *)(a1 + v11[10]) = *(unsigned char *)(a2 + v11[10]);
  *(unsigned char *)(a1 + v11[11]) = *(unsigned char *)(a2 + v11[11]);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v29 = a3[7];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v32 = *v31;
  LOBYTE(v31) = *((unsigned char *)v31 + 8);
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = (_BYTE)v31;
  swift_retain();
  swift_release();
  uint64_t v33 = a3[8];
  uint64_t v34 = a1 + v33;
  id v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = (_BYTE)v35;
  swift_retain();
  swift_release();
  uint64_t v37 = a3[9];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v40 = *v39;
  LOBYTE(v39) = *((unsigned char *)v39 + 8);
  *(void *)uint64_t v38 = v40;
  *(unsigned char *)(v38 + 8) = (_BYTE)v39;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10001CF24(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D4E10);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = v6[7];
  id v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  uint64_t v17 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = (char *)a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = (char *)a1 + v19;
  uint64_t v23 = (char *)a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  return a1;
}

uint64_t sub_10001D130(uint64_t a1, void *a2, int *a3)
{
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000ADC28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000693C(&qword_1000D4E10);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = v7[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1000ADD48();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = v7[8];
  uint64_t v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)((char *)a2 + v21);

  *(void *)(a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
  *(unsigned char *)(a1 + v7[10]) = *((unsigned char *)a2 + v7[10]);
  *(unsigned char *)(a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
  uint64_t v23 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(void *)(a1 + v23) = *(void *)((char *)a2 + v23);
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  LOBYTE(v26) = v26[8];
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = (_BYTE)v26;
  swift_release();
  uint64_t v28 = a3[8];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)v30;
  LOBYTE(v30) = v30[8];
  *(void *)uint64_t v29 = v31;
  *(unsigned char *)(v29 + 8) = (_BYTE)v30;
  swift_release();
  uint64_t v32 = a3[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  LOBYTE(v34) = v34[8];
  *(void *)uint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = (_BYTE)v34;
  swift_release();
  return a1;
}

uint64_t sub_10001D3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001D3FC);
}

uint64_t sub_10001D400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10001D4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001D4E4);
}

uint64_t sub_10001D4E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_10001D5A4()
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel.Reminder(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10001D658()
{
  unint64_t result = qword_1000D5698;
  if (!qword_1000D5698)
  {
    sub_100006F98(&qword_1000D56A0);
    sub_100006F98(&qword_1000D55A0);
    type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle(255);
    sub_100009F50(&qword_1000D55B8, &qword_1000D55A0);
    sub_10001A354(&qword_1000D55C0, (void (*)(uint64_t))type metadata accessor for TTRIAnyListComplicationWidgetView.ReminderToggleStyle);
    swift_getOpaqueTypeConformance2();
    sub_10001C2D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5698);
  }
  return result;
}

uint64_t sub_10001D77C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001D7CC()
{
  return sub_100009F50(&qword_1000D56A8, &qword_1000D56B0);
}

uint64_t sub_10001D808()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001D824(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100009E88(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10001D868(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100006FE0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10001D8B4()
{
  return sub_1000AE9F8();
}

uint64_t sub_10001D8DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000693C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001D944()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t getEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.CompletedView(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TTRIAnyListComplicationWidgetView.CompletedView(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001DAC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIAnyListComplicationWidgetView.CompletedView()
{
  return &type metadata for TTRIAnyListComplicationWidgetView.CompletedView;
}

uint64_t sub_10001DAF8()
{
  return sub_100009F50(&qword_1000D56F0, &qword_1000D56F8);
}

uint64_t sub_10001DB34()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10001DB5C()
{
  unint64_t result = qword_1000D5700;
  if (!qword_1000D5700)
  {
    sub_100006F98(&qword_1000D5708);
    sub_10001DBFC();
    sub_100009F50(&qword_1000D5730, &qword_1000D5738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5700);
  }
  return result;
}

unint64_t sub_10001DBFC()
{
  unint64_t result = qword_1000D5710;
  if (!qword_1000D5710)
  {
    sub_100006F98(&qword_1000D5718);
    sub_100009F50(&qword_1000D5720, &qword_1000D5728);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5710);
  }
  return result;
}

uint64_t sub_10001DCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001DCC4);
}

uint64_t sub_10001DCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10001DD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001DD44);
}

uint64_t sub_10001DD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t _s10WidgetViewVMa()
{
  uint64_t result = qword_1000D5798;
  if (!qword_1000D5798) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001DE00()
{
  uint64_t result = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10001DE8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001DEA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001DF30(v1, (uint64_t)v5);
  return sub_100004E30((uint64_t)v5, a1);
}

uint64_t sub_10001DF30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10001DF98()
{
  unint64_t result = qword_1000D57D0;
  if (!qword_1000D57D0)
  {
    type metadata accessor for TTRTodayComplicationWidget.TodayInlineView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D57D0);
  }
  return result;
}

uint64_t sub_10001DFF0(uint64_t a1)
{
  int v2 = (objc_class *)*(id *)sub_1000AF7C8();
  v8._countAndFlagsBits = 0xD00000000000001ELL;
  v7._countAndFlagsBits = 0x80000001000B78C0;
  v8._object = (void *)0x80000001000B78A0;
  v9.value._object = (void *)0x80000001000B77B0;
  v9.value._countAndFlagsBits = 0xD000000000000011;
  v3.super.isa = v2;
  v10._countAndFlagsBits = 0x647265764F206425;
  v10._object = (void *)0xEA00000000006575;
  sub_1000ADC48(v8, v9, v3, v10, v7);

  sub_10000693C(&qword_1000D52E8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000B0270;
  *(void *)(v4 + 56) = &type metadata for Int;
  *(void *)(v4 + 64) = &protocol witness table for Int;
  *(void *)(v4 + 32) = a1;
  uint64_t v5 = sub_1000AF488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t *sub_10001E118(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    Swift::String v7 = (char *)a1 + v6;
    Swift::String v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1000AE338();
    Swift::String v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_10001E1FC(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000AE338();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10001E274(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000AE338();
  Swift::String v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_10001E30C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  Swift::String v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000AE338();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_10001E3A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000AE338();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_10001E41C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  Swift::String v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000AE338();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_10001E4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001E4BC);
}

uint64_t sub_10001E4BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000AE338();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10001E56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001E580);
}

void *sub_10001E580(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000AE338();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidgetProvider()
{
  uint64_t result = qword_1000D5848;
  if (!qword_1000D5848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001E674()
{
  uint64_t result = sub_1000AE338();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10001E710()
{
  uint64_t v0 = sub_1000AE768();
  sub_10000EFDC(v0, qword_1000D57D8);
  uint64_t v1 = sub_10000EFA4(v0, (uint64_t)qword_1000D57D8);
  if (qword_1000D4888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000EFA4(v0, (uint64_t)qword_1000E1E48);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10001E7D8(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TTRTodayComplicationWidgetTimelineEntry();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_1000AF368();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AF388();
  swift_getKeyPath();
  sub_1000AF378();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v12 = type metadata accessor for TTRTodayComplicationWidgetProvider();
  uint64_t v13 = a1 + *(int *)(v2 + 20);
  sub_1000AE328();
  uint64_t v14 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(void *)(v13 + *(int *)(v14 + 24)) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(v13 + *(int *)(v14 + 20)) = 1;
  sub_1000ADEF8();
  uint64_t v15 = a1 + *(int *)(v2 + 24);
  uint64_t v16 = sub_1000AF358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  swift_bridgeObjectRelease();
  if (qword_1000D4858 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1000AE768();
  sub_10000EFA4(v17, (uint64_t)qword_1000D57D8);
  sub_100023344(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
  uint64_t v18 = sub_1000AE758();
  os_log_type_t v19 = sub_1000AF718();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v12;
    uint64_t v27 = v21;
    *(_DWORD *)uint64_t v20 = 136446467;
    sub_10000693C(&qword_1000D58C8);
    uint64_t v22 = sub_1000AF4B8();
    uint64_t v26 = sub_1000A53D8(v22, v23, &v27);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2081;
    sub_100023344((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    uint64_t v24 = sub_1000AF4B8();
    uint64_t v26 = sub_1000A53D8(v24, v25, &v27);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    sub_1000233AC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s: Created placeholder {entry: %{private}s}", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000233AC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
  }
}

uint64_t sub_10001EC08@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000AEA28();
  *a1 = v3;
  return result;
}

uint64_t sub_10001EC34()
{
  return sub_1000AEA38();
}

uint64_t sub_10001EC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v71 = a2;
  uint64_t v72 = a3;
  uint64_t v5 = sub_1000ADF08();
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  __chkstk_darwin(v5);
  uint64_t v73 = &v55[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for TTRTodayComplicationWidgetProvider();
  uint64_t v66 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v67 = v8;
  uint64_t v70 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v76 = sub_1000AF398();
  uint64_t v9 = *(void *)(v76 - 8);
  uint64_t v10 = __chkstk_darwin(v76);
  uint64_t v60 = &v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v13 = &v55[-v12];
  uint64_t v14 = sub_1000AF368();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v55[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1000AE338();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v63 = v21;
  uint64_t v64 = &v55[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  uint64_t v59 = v7;
  uint64_t v68 = v22;
  uint64_t v69 = v3;
  uint64_t v65 = v19;
  uint64_t v24 = *(void (**)(void))(v19 + 16);
  uint64_t v23 = v19 + 16;
  uint64_t v77 = &v55[-v25];
  uint64_t v62 = v24;
  v24();
  sub_1000AF388();
  swift_getKeyPath();
  uint64_t v61 = sub_1000AF378();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
  if (qword_1000D4858 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1000AE768();
  sub_10000EFA4(v26, (uint64_t)qword_1000D57D8);
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16);
  v27(v13, a1, v76);
  uint64_t v28 = sub_1000AE758();
  os_log_type_t v29 = sub_1000AF718();
  int v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v57 = v32;
    *(_DWORD *)uint64_t v31 = 136446466;
    uint64_t v58 = v23;
    uint64_t v33 = v9;
    uint64_t v34 = v76;
    int v56 = v30;
    uint64_t v78 = v59;
    v79[0] = v32;
    sub_10000693C(&qword_1000D58C8);
    uint64_t v35 = sub_1000AF4B8();
    uint64_t v78 = sub_1000A53D8(v35, v36, v79);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    v27(v60, (uint64_t)v13, v34);
    uint64_t v37 = sub_1000AF4B8();
    uint64_t v78 = sub_1000A53D8(v37, v38, v79);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v13, v34);
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v56, "%{public}s: Requesting snapshot {context: %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v13, v76);
  }

  if (v61) {
    uint64_t v39 = (_UNKNOWN **)v61;
  }
  else {
    uint64_t v39 = &off_1000CF268;
  }
  uint64_t v41 = v68;
  uint64_t v40 = (uint64_t)v69;
  uint64_t v76 = *v69;
  uint64_t v42 = v64;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v62)(v64, v77, v68);
  uint64_t v43 = v70;
  sub_100023344(v40, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetProvider);
  uint64_t v44 = v65;
  unint64_t v45 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  unint64_t v46 = (v63 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (*(unsigned __int8 *)(v66 + 80) + v46 + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  unint64_t v48 = (v67 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v44 + 32))(v49 + v45, v42, v41);
  uint64_t v50 = (void *)(v49 + v46);
  uint64_t v51 = v72;
  *uint64_t v50 = v71;
  v50[1] = v51;
  sub_1000232DC((uint64_t)v43, v49 + v47, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetProvider);
  *(void *)(v49 + v48) = v39;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v52 = (uint64_t)v73;
  sub_1000ADEF8();
  uint64_t v53 = v77;
  sub_10007F96C((uint64_t)v77, 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v39, v52, (uint64_t)sub_100023590, v49);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v52, v75);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v44 + 8))(v53, v41);
}

uint64_t sub_10001F3A0(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v72 = a2;
  uint64_t v73 = a5;
  uint64_t v77 = a4;
  uint64_t v78 = a3;
  uint64_t v76 = sub_1000ADD48();
  uint64_t v6 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000693C(&qword_1000D5928);
  __chkstk_darwin(v9 - 8);
  uint64_t v74 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TTRTodayComplicationWidgetTimelineEntry();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v75 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v69 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v69 - v21;
  uint64_t v23 = sub_1000AE338();
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    sub_100023344(a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for TTRNewWidgetTimelineEntry);
    uint64_t v28 = sub_1000ADF08();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v20, v14, v28);
    os_log_type_t v29 = &v14[*(int *)(v11 + 20)];
    int v30 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v31 = &v20[*(int *)(v15 + 20)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v31, &v29[v30[18]], v76);
    uint64_t v32 = v30[20];
    uint64_t v33 = *(void *)&v29[v30[19]];
    LOBYTE(v29) = v29[v32];
    uint64_t v34 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
    *(void *)&v31[*(int *)(v34 + 24)] = v33;
    v31[*(int *)(v34 + 20)] = (char)v29;
    uint64_t v35 = (uint64_t)v74;
    sub_10002320C((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v74);
    swift_bridgeObjectRetain();
    sub_1000233AC((uint64_t)v14, type metadata accessor for TTRNewWidgetTimelineEntry);
    sub_100023274(v35, (uint64_t)&v20[*(int *)(v15 + 24)]);
    sub_1000232DC((uint64_t)v20, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    if (qword_1000D4858 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1000AE768();
    sub_10000EFA4(v36, (uint64_t)qword_1000D57D8);
    uint64_t v37 = v75;
    sub_100023344((uint64_t)v22, v75, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    unint64_t v38 = sub_1000AE758();
    os_log_type_t v39 = sub_1000AF718();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v76 = (uint64_t)v22;
      uint64_t v80 = v41;
      *(_DWORD *)uint64_t v40 = 136446467;
      uint64_t v79 = type metadata accessor for TTRTodayComplicationWidgetProvider();
      sub_10000693C(&qword_1000D58C8);
      uint64_t v42 = sub_1000AF4B8();
      uint64_t v79 = sub_1000A53D8(v42, v43, &v80);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2085;
      sub_100023344(v37, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
      uint64_t v44 = sub_1000AF4B8();
      uint64_t v79 = sub_1000A53D8(v44, v45, &v80);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      sub_1000233AC(v37, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "%{public}s: Completed snapshot {entry: %{sensitive}s}", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v22 = (char *)v76;
    }
    else
    {
      sub_1000233AC(v37, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    }
  }
  else
  {
    uint64_t v46 = v72;
    uint64_t v47 = v25;
    uint64_t v48 = v24;
    uint64_t v49 = v8;
    uint64_t v71 = v6;
    uint64_t v74 = v20;
    uint64_t v75 = v15;
    if (qword_1000D4858 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1000AE768();
    sub_10000EFA4(v50, (uint64_t)qword_1000D57D8);
    uint64_t v51 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v27, v46, v48);
    uint64_t v52 = sub_1000AE758();
    os_log_type_t v53 = sub_1000AF718();
    int v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v55 = swift_slowAlloc();
      int v70 = v54;
      uint64_t v56 = v55;
      uint64_t v72 = swift_slowAlloc();
      uint64_t v80 = v72;
      *(_DWORD *)uint64_t v56 = 136446467;
      os_log_t v69 = v52;
      uint64_t v79 = type metadata accessor for TTRTodayComplicationWidgetProvider();
      sub_10000693C(&qword_1000D58C8);
      uint64_t v57 = sub_1000AF4B8();
      uint64_t v79 = sub_1000A53D8(v57, v58, &v80);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2081;
      sub_1000AE328();
      uint64_t v59 = sub_1000ADCF8();
      unint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v49, v76);
      uint64_t v79 = sub_1000A53D8(v59, v61, &v80);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v51);
      os_log_t v62 = v69;
      _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v70, "%{public}s: No timeline entries created placeholder snapshot {url: %{private}s}", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v51);
    }
    uint64_t v22 = v74;
    uint64_t v63 = v75;
    type metadata accessor for TTRTodayComplicationWidgetProvider();
    uint64_t v64 = &v22[*(int *)(v63 + 20)];
    sub_1000AE328();
    uint64_t v65 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
    *(void *)&v64[*(int *)(v65 + 24)] = &_swiftEmptyArrayStorage;
    v64[*(int *)(v65 + 20)] = 1;
    sub_1000ADEF8();
    uint64_t v66 = &v22[*(int *)(v63 + 24)];
    uint64_t v67 = sub_1000AF358();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v66, 1, 1, v67);
  }
  v78(v22);
  return sub_1000233AC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
}

uint64_t sub_10001FCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v5 = sub_1000ADF08();
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  __chkstk_darwin(v5);
  uint64_t v59 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for TTRTodayComplicationWidgetProvider();
  uint64_t v51 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v52 = v8;
  uint64_t v55 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000AF398();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v48 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v14 = &v45[-v13];
  uint64_t v15 = sub_1000AF368();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v45[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_1000AE338();
  __chkstk_darwin(v19);
  uint64_t v56 = v3;
  uint64_t v53 = v22;
  uint64_t v54 = v21;
  uint64_t v23 = *(void (**)(void))(v22 + 16);
  uint64_t v50 = &v45[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23();
  sub_1000AF388();
  swift_getKeyPath();
  uint64_t v49 = sub_1000AF378();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
  if (qword_1000D4858 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1000AE768();
  sub_10000EFA4(v24, (uint64_t)qword_1000D57D8);
  uint64_t v25 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16);
  v25(v14, a1, v9);
  uint64_t v26 = sub_1000AE758();
  os_log_type_t v27 = sub_1000AF718();
  int v28 = v27;
  os_log_type_t v29 = v14;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v62 = v7;
    uint64_t v63 = v47;
    *(_DWORD *)uint64_t v30 = 136446466;
    sub_10000693C(&qword_1000D58C8);
    int v46 = v28;
    uint64_t v31 = sub_1000AF4B8();
    uint64_t v62 = sub_1000A53D8(v31, v32, &v63);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    v25(v48, (uint64_t)v29, v9);
    uint64_t v33 = sub_1000AF4B8();
    uint64_t v62 = sub_1000A53D8(v33, v34, &v63);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v29, v9);
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v46, "%{public}s: Requesting timeline {context: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v14, v9);
  }

  if (v49) {
    uint64_t v35 = (_UNKNOWN **)v49;
  }
  else {
    uint64_t v35 = &off_1000CF290;
  }
  uint64_t v36 = v55;
  sub_100023344(v56, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetProvider);
  unint64_t v37 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  unint64_t v38 = (v52 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = swift_allocObject();
  sub_1000232DC((uint64_t)v36, v39 + v37, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetProvider);
  *(void *)(v39 + v38) = v35;
  uint64_t v40 = (void *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v41 = v58;
  *uint64_t v40 = v57;
  v40[1] = v41;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v42 = (uint64_t)v59;
  sub_1000ADEF8();
  unint64_t v43 = v50;
  sub_10007F96C((uint64_t)v50, 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v35, v42, (uint64_t)sub_100022E1C, v39);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v42, v61);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v53 + 8))(v43, v54);
}

uint64_t sub_100020334(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v104 = a5;
  v105 = a4;
  v119 = (char *)a2;
  uint64_t v6 = sub_1000ADF08();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AF308();
  __chkstk_darwin(v10 - 8);
  v102 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D5928);
  __chkstk_darwin(v12 - 8);
  uint64_t v117 = (uint64_t)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  uint64_t v109 = *(void *)(v116 - 8);
  uint64_t v14 = __chkstk_darwin(v116);
  uint64_t v113 = (uint64_t)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v115 = (char *)&v97 - v16;
  uint64_t v17 = type metadata accessor for TTRTodayComplicationWidgetTimelineEntry();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  v114 = (char *)&v97 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v97 - v24;
  uint64_t v107 = sub_10000693C(&qword_1000D5930);
  uint64_t v26 = __chkstk_darwin(v107);
  uint64_t v27 = __chkstk_darwin(v26);
  v100 = (char *)&v97 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v101 = (char *)&v97 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v97 - v32;
  int64_t v34 = *(void *)(a1 + 16);
  v106 = (char *)&v97 - v32;
  uint64_t v103 = v35;
  if (v34)
  {
    uint64_t v112 = v18;
    uint64_t v118 = v17;
    v98 = v9;
    v121[0] = (uint64_t)_swiftEmptyArrayStorage;
    v119 = (char *)v34;
    sub_1000A7A30(0, v34, 0);
    uint64_t v36 = a1 + ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80));
    uint64_t v109 = *(void *)(v109 + 72);
    uint64_t v99 = v7;
    v108 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v110 = v25;
    uint64_t v111 = v6;
    uint64_t v37 = (uint64_t)v114;
    uint64_t v38 = (uint64_t)v115;
    uint64_t v39 = v116;
    do
    {
      sub_100023344(v36, v38, type metadata accessor for TTRNewWidgetTimelineEntry);
      uint64_t v40 = v113;
      sub_100023344(v38, v113, type metadata accessor for TTRNewWidgetTimelineEntry);
      (*v108)(v37, v40, v6);
      uint64_t v41 = v40 + *(int *)(v39 + 20);
      uint64_t v42 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
      uint64_t v43 = v41 + v42[18];
      uint64_t v44 = v118;
      uint64_t v45 = v37 + *(int *)(v118 + 20);
      uint64_t v46 = sub_1000ADD48();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v45, v43, v46);
      uint64_t v47 = v42[20];
      uint64_t v48 = *(void *)(v41 + v42[19]);
      LOBYTE(v43) = *(unsigned char *)(v41 + v47);
      uint64_t v49 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
      *(void *)(v45 + *(int *)(v49 + 24)) = v48;
      *(unsigned char *)(v45 + *(int *)(v49 + 20)) = v43;
      uint64_t v50 = v117;
      sub_10002320C(v40 + *(int *)(v39 + 24), v117);
      swift_bridgeObjectRetain();
      uint64_t v51 = v40;
      uint64_t v52 = (uint64_t)v110;
      sub_1000233AC(v51, type metadata accessor for TTRNewWidgetTimelineEntry);
      sub_100023274(v50, v37 + *(int *)(v44 + 24));
      sub_1000232DC(v37, v52, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
      sub_1000233AC(v38, type metadata accessor for TTRNewWidgetTimelineEntry);
      uint64_t v53 = v121[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000A7A30(0, *(void *)(v53 + 16) + 1, 1);
        uint64_t v53 = v121[0];
      }
      unint64_t v55 = *(void *)(v53 + 16);
      unint64_t v54 = *(void *)(v53 + 24);
      uint64_t v6 = v111;
      uint64_t v56 = v112;
      if (v55 >= v54 >> 1)
      {
        sub_1000A7A30(v54 > 1, v55 + 1, 1);
        uint64_t v53 = v121[0];
      }
      *(void *)(v53 + 16) = v55 + 1;
      sub_1000232DC(v52, v53+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v55, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
      v36 += v109;
      --v119;
    }
    while (v119);
    uint64_t v57 = v98;
    sub_1000ADE38();
    sub_1000AF2F8();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v57, v6);
    sub_100022194();
    uint64_t v58 = v106;
    sub_1000AF3A8();
    if (qword_1000D4858 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_1000AE768();
    sub_10000EFA4(v59, (uint64_t)qword_1000D57D8);
    uint64_t v60 = v103;
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
    uint64_t v62 = v101;
    uint64_t v63 = v107;
    v61(v101, v58, v107);
    uint64_t v64 = sub_1000AE758();
    os_log_type_t v65 = sub_1000AF718();
    int v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v67 = swift_slowAlloc();
      LODWORD(v118) = v66;
      uint64_t v68 = v67;
      v119 = (char *)swift_slowAlloc();
      v121[0] = (uint64_t)v119;
      *(_DWORD *)uint64_t v68 = 136446467;
      uint64_t v120 = type metadata accessor for TTRTodayComplicationWidgetProvider();
      sub_10000693C(&qword_1000D58C8);
      uint64_t v69 = sub_1000AF4B8();
      uint64_t v120 = sub_1000A53D8(v69, v70, v121);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2085;
      v61(v100, v62, v63);
      uint64_t v71 = sub_1000AF4B8();
      uint64_t v120 = sub_1000A53D8(v71, v72, v121);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      uint64_t v73 = *(void (**)(char *, uint64_t))(v60 + 8);
      v73(v62, v63);
      _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v118, "%{public}s: Completed timeline {timeline: %{sensitive}s}", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      uint64_t v58 = v106;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v73 = *(void (**)(char *, uint64_t))(v60 + 8);
      v73(v62, v63);
    }

    goto LABEL_19;
  }
  uint64_t v118 = v31;
  uint64_t v74 = v9;
  uint64_t v75 = v7;
  uint64_t v76 = type metadata accessor for TTRTodayComplicationWidgetProvider();
  uint64_t v77 = &v21[*(int *)(v17 + 20)];
  sub_1000AE328();
  uint64_t v78 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(void *)&v77[*(int *)(v78 + 24)] = _swiftEmptyArrayStorage;
  v77[*(int *)(v78 + 20)] = 1;
  sub_1000ADEF8();
  uint64_t v79 = &v21[*(int *)(v17 + 24)];
  uint64_t v80 = sub_1000AF358();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 1, 1, v80);
  sub_10000693C(&qword_1000D5938);
  unint64_t v81 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_1000B0270;
  sub_100023344((uint64_t)v21, v82 + v81, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
  sub_1000ADE38();
  sub_1000AF2F8();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v6);
  sub_100022194();
  sub_1000AF3A8();
  if (qword_1000D4858 != -1) {
    swift_once();
  }
  v119 = v21;
  uint64_t v83 = sub_1000AE768();
  sub_10000EFA4(v83, (uint64_t)qword_1000D57D8);
  uint64_t v84 = v103;
  uint64_t v85 = *(void (**)(uint64_t, char *, uint64_t))(v103 + 16);
  uint64_t v86 = v118;
  uint64_t v63 = v107;
  v85(v118, v33, v107);
  uint64_t v87 = sub_1000AE758();
  os_log_type_t v88 = sub_1000AF718();
  if (!os_log_type_enabled(v87, v88))
  {

    uint64_t v73 = *(void (**)(char *, uint64_t))(v84 + 8);
    v73((char *)v86, v63);
    sub_1000233AC((uint64_t)v119, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
    uint64_t v58 = v106;
LABEL_19:
    v95 = v105;
    goto LABEL_20;
  }
  uint64_t v89 = swift_slowAlloc();
  uint64_t v117 = swift_slowAlloc();
  uint64_t v120 = v76;
  v121[0] = v117;
  *(_DWORD *)uint64_t v89 = 136446467;
  sub_10000693C(&qword_1000D58C8);
  uint64_t v90 = sub_1000AF4B8();
  uint64_t v120 = sub_1000A53D8(v90, v91, v121);
  sub_1000AF808();
  swift_bridgeObjectRelease();
  *(_WORD *)(v89 + 12) = 2081;
  v85((uint64_t)v100, (char *)v86, v107);
  uint64_t v92 = sub_1000AF4B8();
  uint64_t v120 = sub_1000A53D8(v92, v93, v121);
  sub_1000AF808();
  swift_bridgeObjectRelease();
  uint64_t v73 = *(void (**)(char *, uint64_t))(v84 + 8);
  v73((char *)v86, v107);
  _os_log_impl((void *)&_mh_execute_header, v87, v88, "%{public}s: No timeline entries created placeholder {timeline %{private}s}", (uint8_t *)v89, 0x16u);
  swift_arrayDestroy();
  v94 = v105;
  uint64_t v63 = v107;
  swift_slowDealloc();
  swift_slowDealloc();

  v95 = v94;
  sub_1000233AC((uint64_t)v119, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
  uint64_t v58 = v106;
LABEL_20:
  v95(v58);
  return ((uint64_t (*)(char *, uint64_t))v73)(v58, v63);
}

uint64_t sub_100020FEC(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_10000693C(&qword_1000D58A8);
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  sub_10000693C(&qword_1000D58B0);
  v2[15] = swift_task_alloc();
  uint64_t v4 = sub_1000AD7E8();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  sub_10000693C(&qword_1000D58B8);
  v2[22] = swift_task_alloc();
  uint64_t v5 = sub_1000ADF08();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  uint64_t v6 = sub_1000AE1B8();
  v2[27] = v6;
  v2[28] = *(void *)(v6 - 8);
  v2[29] = swift_task_alloc();
  return _swift_task_switch(sub_10002125C, 0, 0);
}

uint64_t sub_10002125C()
{
  uint64_t v19 = v0;
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for REMFeatureFlags.smartStack(_:), v3);
  char v4 = sub_1000AE1A8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
  {
    if (qword_1000D4858 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1000AE768();
    *(void *)(v0 + 240) = sub_10000EFA4(v5, (uint64_t)qword_1000D57D8);
    uint64_t v6 = sub_1000AE758();
    os_log_type_t v7 = sub_1000AF718();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446210;
      *(void *)(v0 + 64) = type metadata accessor for TTRTodayComplicationWidgetProvider();
      sub_10000693C(&qword_1000D58C8);
      uint64_t v9 = sub_1000AF4B8();
      *(void *)(v0 + 72) = sub_1000A53D8(v9, v10, &v18);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: Requesting relevances for today...", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v11 = *(void *)(v0 + 208);
    uint64_t v12 = **(void **)(v0 + 88);
    sub_1000ADEF8();
    uint64_t v13 = swift_task_alloc();
    *(void *)(v0 + 248) = v13;
    *(void *)(v13 + 16) = v12;
    *(unsigned char *)(v13 + 24) = 0;
    *(void *)(v13 + 32) = 0x7FFFFFFFFFFFFFFFLL;
    *(void *)(v13 + 40) = v11;
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v14;
    uint64_t v15 = sub_10000693C(&qword_1000D58C0);
    *uint64_t v14 = v0;
    v14[1] = sub_100021608;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000003FLL, 0x80000001000B7940, sub_1000221EC, v13, v15);
  }
  else
  {
    sub_1000AF228();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_100021608()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100021720, 0, 0);
}

uint64_t sub_100021720()
{
  unint64_t v70 = v0;
  uint64_t v1 = v0[2];
  uint64_t v67 = (void (**)(uint64_t, uint64_t))(v0[24] + 8);
  os_log_type_t v65 = *v67;
  (*v67)(v0[26], v0[23]);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[24];
    char v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v3 += 16;
    uint64_t v62 = v4;
    uint64_t v5 = v0[17];
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 64));
    uint64_t v68 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 40);
    os_log_type_t v7 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    uint64_t v61 = *(void *)(v3 + 56);
    uint64_t v58 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v59 = (void (**)(uint64_t, void, uint64_t))(v3 + 16);
    uint64_t v56 = v5;
    uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v8 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    swift_bridgeObjectRetain();
    uint64_t v60 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v10 = v0[22];
      uint64_t v9 = v0[23];
      v62(v10, v6, v9);
      uint64_t v11 = *v68;
      (*v68)(v10, 0, 1, v9);
      if ((*v7)(v10, 1, v9) == 1) {
        break;
      }
      uint64_t v12 = v0[25];
      uint64_t v13 = v0[23];
      uint64_t v14 = v0[15];
      uint64_t v15 = v0[16];
      (*v59)(v12, v0[22], v13);
      sub_1000AD7D8();
      (*v58)(v14, 0, 1, v15);
      v65(v12, v13);
      if ((*v57)(v14, 1, v15) == 1)
      {
        sub_100022A3C(v0[15]);
      }
      else
      {
        uint64_t v17 = v0[20];
        uint64_t v16 = v0[21];
        uint64_t v18 = v0[16];
        uint64_t v19 = *v8;
        (*v8)(v16, v0[15], v18);
        v19(v17, v16, v18);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v20 = (unint64_t)v60;
        }
        else {
          unint64_t v20 = sub_100022464(0, v60[2] + 1, 1, (unint64_t)v60, &qword_1000D58D0, (uint64_t (*)(void))&type metadata accessor for RelevantContext, (uint64_t (*)(void))&type metadata accessor for RelevantContext);
        }
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        if (v22 >= v21 >> 1) {
          unint64_t v20 = sub_100022464(v21 > 1, v22 + 1, 1, v20, &qword_1000D58D0, (uint64_t (*)(void))&type metadata accessor for RelevantContext, (uint64_t (*)(void))&type metadata accessor for RelevantContext);
        }
        uint64_t v23 = v0[20];
        uint64_t v24 = v0[16];
        *(void *)(v20 + 16) = v22 + 1;
        uint64_t v60 = (void *)v20;
        v19(v20+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v22, v23, v24);
      }
      v6 += v61;
      if (!--v2)
      {
        v11(v0[22], 1, 1, v0[23]);
        break;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v30 = v60;
    swift_bridgeObjectRetain_n();
    uint64_t v32 = sub_1000AE758();
    os_log_type_t v33 = sub_1000AF718();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446467;
      v0[3] = type metadata accessor for TTRTodayComplicationWidgetProvider();
      sub_10000693C(&qword_1000D58C8);
      uint64_t v35 = sub_1000AF4B8();
      v0[4] = sub_1000A53D8(v35, v36, (uint64_t *)&v69);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1000AF598();
      unint64_t v39 = v38;
      swift_bridgeObjectRelease();
      v0[5] = sub_1000A53D8(v37, v39, (uint64_t *)&v69);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}s: Completed adding timeline relevances. {timeline: %{sensitive}s}", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    int64_t v31 = v60[2];
    if (v31) {
      goto LABEL_22;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_1000AE758();
    os_log_type_t v26 = sub_1000AF718();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136446210;
      v0[6] = type metadata accessor for TTRTodayComplicationWidgetProvider();
      sub_10000693C(&qword_1000D58C8);
      uint64_t v28 = sub_1000AF4B8();
      v0[7] = sub_1000A53D8(v28, v29, (uint64_t *)&v69);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s: No timeline relevances to add.", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v30 = _swiftEmptyArrayStorage;
    int64_t v31 = _swiftEmptyArrayStorage[2];
    if (v31)
    {
LABEL_22:
      uint64_t v40 = v0[17];
      uint64_t v41 = v0;
      uint64_t v42 = v0[13];
      uint64_t v69 = _swiftEmptyArrayStorage;
      sub_1000A7A6C(0, v31, 0);
      uint64_t v43 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 16);
      v40 += 16;
      uint64_t v44 = (char *)v30 + ((*(unsigned __int8 *)(v40 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 64));
      uint64_t v64 = *(void *)(v40 + 56);
      uint64_t v66 = v42;
      uint64_t v63 = (void (**)(uint64_t, uint64_t))(v40 - 8);
      uint64_t v45 = v69;
      uint64_t v46 = v43;
      do
      {
        uint64_t v48 = v41[18];
        uint64_t v47 = (char *)v41[19];
        uint64_t v49 = v41[16];
        uint64_t v0 = v41;
        v46((uint64_t)v47, v44, v49);
        v46(v48, v47, v49);
        sub_1000AF278();
        (*v63)((uint64_t)v47, v49);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000A7A6C(0, v45[2] + 1, 1);
          uint64_t v45 = v69;
        }
        unint64_t v51 = v45[2];
        unint64_t v50 = v45[3];
        if (v51 >= v50 >> 1)
        {
          sub_1000A7A6C(v50 > 1, v51 + 1, 1);
          uint64_t v45 = v69;
        }
        uint64_t v52 = v41[14];
        uint64_t v53 = v41[12];
        v45[2] = v51 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v66 + 32))((unint64_t)v45+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v51, v52, v53);
        v44 += v64;
        --v31;
      }
      while (v31);
    }
  }
  swift_bridgeObjectRelease();
  sub_1000AF228();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v54 = (uint64_t (*)(void))v0[1];
  return v54();
}

uint64_t sub_100021FAC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000C7D0;
  return sub_100020FEC(a1);
}

uint64_t sub_100022044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10000F290;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_1000220F8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000F290;
  return sub_100020FEC(a1);
}

unint64_t sub_100022194()
{
  unint64_t result = qword_1000D5888[0];
  if (!qword_1000D5888[0])
  {
    type metadata accessor for TTRTodayComplicationWidgetTimelineEntry();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D5888);
  }
  return result;
}

uint64_t sub_1000221EC(uint64_t a1)
{
  return sub_100082220(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void *sub_1000221FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000693C(&qword_1000D58E0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100022AA0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100022320(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000693C(&qword_1000D5940);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100022BB0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100022430(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022464(a1, a2, a3, a4, &qword_1000D4B08, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100022464(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000693C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1000AF988();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100022EC8(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1000226E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022464(a1, a2, a3, a4, &qword_1000D58D8, (uint64_t (*)(void))&type metadata accessor for REMRemindersListDataView.ReminderLite, (uint64_t (*)(void))&type metadata accessor for REMRemindersListDataView.ReminderLite);
}

uint64_t sub_100022718(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022464(a1, a2, a3, a4, &qword_1000D5918, type metadata accessor for TTRNewWidgetPresenter.Division, type metadata accessor for TTRNewWidgetPresenter.Division);
}

uint64_t sub_10002274C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022464(a1, a2, a3, a4, &qword_1000D58F0, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_100022780(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022464(a1, a2, a3, a4, &qword_1000D5908, type metadata accessor for TTRNewWidgetViewModel.Reminder, type metadata accessor for TTRNewWidgetViewModel.Reminder);
}

uint64_t sub_1000227B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022464(a1, a2, a3, a4, &qword_1000D5910, type metadata accessor for TTRNewWidgetPresenter.Snapshot, type metadata accessor for TTRNewWidgetPresenter.Snapshot);
}

uint64_t sub_1000227E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022464(a1, a2, a3, a4, &qword_1000D5920, type metadata accessor for TTRNewWidgetInteractorReminderWrapper, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
}

char *sub_10002281C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000693C(&qword_1000D58F8);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100023118(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10002292C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000693C(&qword_1000D5900);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100023024(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100022A3C(uint64_t a1)
{
  uint64_t v2 = sub_10000693C(&qword_1000D58B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100022AA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_10000693C(&qword_1000D58E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_100022BB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_100022CA4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000AEA28();
  *a1 = v3;
  return result;
}

uint64_t sub_100022CD0()
{
  return sub_1000AEA38();
}

uint64_t sub_100022CF8()
{
  uint64_t v1 = (int *)(type metadata accessor for TTRTodayComplicationWidgetProvider() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_1000AE338();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v5 + 16, v4);
}

uint64_t sub_100022E1C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRTodayComplicationWidgetProvider() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v1 + v4;
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(char *))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  return sub_100020334(a1, v6, v7, v9, v10);
}

uint64_t sub_100022EC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_100023024(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_100023118(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_10002320C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000693C(&qword_1000D5928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100023274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000693C(&qword_1000D5928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000232DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100023344(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000233AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002340C()
{
  uint64_t v1 = sub_1000AE338();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (int *)(type metadata accessor for TTRTodayComplicationWidgetProvider() - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v5 + v7 + 16) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = ((*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v11 = v0 + v4;
  unint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  swift_release();
  swift_release();
  v12(v0 + v8 + v6[7], v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v10, v9);
}

uint64_t sub_100023590(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000AE338() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for TTRTodayComplicationWidgetProvider() - 8);
  uint64_t v7 = *(void (**)(char *))(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_10001F3A0(a1, v1 + v4, v7, v8, v9);
}

uint64_t sub_1000236A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v29 = sub_10000693C(&qword_1000D5950);
  __chkstk_darwin(v29);
  uint64_t v28 = (uint64_t)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000693C(&qword_1000D5958);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_10000693C(&qword_1000D5960);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v27 - v14);
  uint64_t v16 = type metadata accessor for TTRTodayComplicationWidget(0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  size_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v27 - v20;
  sub_1000A4BF4((uint64_t *)((char *)&v27 - v20));
  sub_10000693C(&qword_1000D5968);
  sub_1000AE7D8();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_100023E0C(&qword_1000D5970, &qword_1000D5958);
  uint64_t v22 = sub_1000AEC98();
  v32[3] = &type metadata for LimitedAvailabilityWidget;
  v32[4] = sub_1000069EC();
  v32[0] = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  sub_100023D40((uint64_t)v32, (uint64_t)v31);
  sub_1000067B8((uint64_t)v31, v15);
  sub_100009EF4((uint64_t)v31, &qword_1000D4A30);
  sub_100023B0C((uint64_t)v32);
  sub_100023B5C((uint64_t)v21, (uint64_t)v19);
  unint64_t v23 = *(void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
  v23(v13, v15, v9);
  uint64_t v24 = v28;
  sub_100023B5C((uint64_t)v19, v28);
  v23((char *)(v24 + *(int *)(v29 + 64)), (uint64_t *)v13, v9);
  sub_1000AE7D8();
  uint64_t v25 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  v25(v15, v9);
  sub_100023BC0((uint64_t)v21);
  v25((uint64_t *)v13, v9);
  return sub_100023BC0((uint64_t)v19);
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_100023A8C()
{
  unint64_t result = qword_1000D5948;
  if (!qword_1000D5948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5948);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIWidgetBundle()
{
  return &type metadata for TTRIWidgetBundle;
}

uint64_t sub_100023AF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100023B0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100023B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTodayComplicationWidget(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100023BC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRTodayComplicationWidget(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100023C1C()
{
  if (qword_1000D4978 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1000D8208;
  v6[3] = type metadata accessor for TTRNewWidgetInteractor(0);
  v6[4] = &off_1000D0498;
  v6[0] = v0;
  sub_1000AD668();
  swift_retain();
  sub_1000AD658();
  uint64_t v5 = 0;
  memset(v4, 0, sizeof(v4));
  sub_100023D40((uint64_t)v6, (uint64_t)v3);
  uint64_t v1 = swift_allocObject();
  sub_100006A40(v3, v1 + 16);
  sub_10000693C(&qword_1000D5978);
  sub_1000AD648();
  swift_release();
  swift_release();
  sub_100009EF4((uint64_t)v4, &qword_1000D5980);
  return sub_100023B0C((uint64_t)v6);
}

uint64_t sub_100023D40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100023DA4()
{
  sub_100023B0C(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100023DDC@<X0>(uint64_t a1@<X8>)
{
  return sub_100091250(v1 + 16, a1);
}

uint64_t sub_100023DE4()
{
  return sub_100023E0C(&qword_1000D5988, &qword_1000D5990);
}

uint64_t sub_100023E0C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100023E5C(uint64_t a1)
{
  return sub_100023ED4(a1, (uint64_t)&REMSettingsTodayNotificationIdentifier, &qword_1000E1DF8, &qword_1000E1E00);
}

uint64_t sub_100023E74(uint64_t a1)
{
  return sub_100023ED4(a1, (uint64_t)&REMSettingsIncludeDueTodayIdentifier, &qword_1000E1E08, &qword_1000E1E10);
}

uint64_t sub_100023E8C(uint64_t a1)
{
  return sub_100023ED4(a1, (uint64_t)&REMSettingsMuteNotificationsIdentifier, &qword_1000E1E18, &qword_1000E1E20);
}

uint64_t sub_100023EA4(uint64_t a1)
{
  return sub_100023ED4(a1, (uint64_t)&REMSettingsShowAsOverdueIdentifier, &qword_1000E1E28, &qword_1000E1E30);
}

uint64_t sub_100023EBC(uint64_t a1)
{
  return sub_100023ED4(a1, (uint64_t)&REMSettingsShowSuggestionsIdentifier, &qword_1000E1E38, &qword_1000E1E40);
}

uint64_t sub_100023ED4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  v7._countAndFlagsBits = sub_1000AF498();
  sub_1000AF4D8(v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = 35;
  *a4 = 0xE100000000000000;
  return result;
}

uint64_t sub_100023F3C()
{
  uint64_t v0 = sub_1000AE768();
  sub_10000EFDC(v0, qword_1000E1E48);
  sub_10000EFA4(v0, (uint64_t)qword_1000E1E48);
  id v1 = [self ui];
  return sub_1000AE778();
}

uint64_t sub_100023FAC()
{
  uint64_t v0 = sub_1000AE768();
  sub_10000EFDC(v0, qword_1000D5998);
  uint64_t v1 = sub_10000EFA4(v0, (uint64_t)qword_1000D5998);
  if (qword_1000D4888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000EFA4(v0, (uint64_t)qword_1000E1E48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100024074()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 44));
  sub_10002CF0C(v1, (uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  if (v6 != 1)
  {
    sub_10002CF74((uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    return sub_1000ADCD8();
  }
  char v7 = v5[*(int *)(v2 + 40)];
  sub_10002CF74((uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  if ((v7 & 1) == 0) {
    return sub_1000ADCD8();
  }
  v12[0] = sub_1000ADCD8();
  v12[1] = v8;
  v13._countAndFlagsBits = 45;
  v13._object = (void *)0xE100000000000000;
  sub_1000AF4D8(v13);
  if (*(unsigned char *)(v1 + *(int *)(v2 + 40))) {
    v9._countAndFlagsBits = 1702195828;
  }
  else {
    v9._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v1 + *(int *)(v2 + 40))) {
    uint64_t v10 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v10 = (void *)0xE500000000000000;
  }
  v9._object = v10;
  sub_1000AF4D8(v9);
  swift_bridgeObjectRelease();
  return v12[0];
}

BOOL sub_1000241DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_1000241F4(double a1)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 68));
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    if (v5)
    {
      double v6 = fabs(a1);
      swift_bridgeObjectRetain();
      for (i = (double *)(v3 + 40); ; i += 2)
      {
        double v8 = *i;
        id v9 = *((id *)i - 1);
        if ((~*(void *)&v8 & 0x7FF0000000000000) == 0
          || (*(void *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          sub_10002D028();
          if (sub_1000AF3D8()) {
            goto LABEL_19;
          }
        }
        else
        {
          double v11 = fabs(v8);
          if (v11 <= v6) {
            double v11 = v6;
          }
          double v12 = v11 * 0.0000000149011612;
          double v13 = vabdd_f64(v8, a1);
          BOOL v14 = v11 > 2.22507386e-308;
          uint64_t v15 = 0x4000000;
          if (v14) {
            *(double *)&uint64_t v15 = v12;
          }
          if (v13 < *(double *)&v15)
          {
LABEL_19:
            sub_1000AF568();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1000AF5B8();
            }
            sub_1000AF5D8();
            sub_1000AF5A8();
            goto LABEL_5;
          }
        }

LABEL_5:
        if (!--v5)
        {
          swift_bridgeObjectRelease();
          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002439C()
{
  uint64_t v1 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000693C(&qword_1000D5940);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000B0270;
  uint64_t v5 = v0[1];
  *(void *)(v4 + 32) = *v0;
  *(void *)(v4 + 40) = v5;
  int v6 = *((unsigned __int8 *)v0 + v1[15]);
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    char v7 = (uint64_t *)sub_1000AE088();
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    unint64_t v10 = *(void *)(v4 + 16);
    unint64_t v11 = *(void *)(v4 + 24);
    swift_bridgeObjectRetain();
    if (v10 >= v11 >> 1) {
      uint64_t v4 = (uint64_t)sub_100022320((void *)(v11 > 1), v10 + 1, 1, (void *)v4);
    }
    *(void *)(v4 + 16) = v10 + 1;
    uint64_t v12 = v4 + 16 * v10;
    *(void *)(v12 + 32) = v9;
    *(void *)(v12 + 40) = v8;
  }
  uint64_t v13 = sub_100013654(v0[2]);
  uint64_t v15 = v14;
  unint64_t v17 = *(void *)(v4 + 16);
  unint64_t v16 = *(void *)(v4 + 24);
  if (v17 >= v16 >> 1) {
    uint64_t v4 = (uint64_t)sub_100022320((void *)(v16 > 1), v17 + 1, 1, (void *)v4);
  }
  *(void *)(v4 + 16) = v17 + 1;
  uint64_t v18 = v4 + 16 * v17;
  *(void *)(v18 + 32) = v13;
  *(void *)(v18 + 40) = v15;
  size_t v19 = (void *)((char *)v0 + v1[13]);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  sub_10002CF0C((uint64_t)v0, (uint64_t)v3, type metadata accessor for TTRNewWidgetViewModel);
  if (v20)
  {
    swift_bridgeObjectRetain();
    sub_10002CF74((uint64_t)v3, type metadata accessor for TTRNewWidgetViewModel);
  }
  else
  {
    uint64_t v22 = &v3[v1[14]];
    uint64_t v21 = *(void *)v22;
    uint64_t v20 = *((void *)v22 + 1);
    swift_bridgeObjectRetain();
    sub_10002CF74((uint64_t)v3, type metadata accessor for TTRNewWidgetViewModel);
    if (!v20) {
      goto LABEL_15;
    }
  }
  unint64_t v23 = (void *)((char *)v0 + v1[11]);
  uint64_t v24 = v23[1];
  if (v24)
  {
    uint64_t v25 = *v23;
    v39._countAndFlagsBits = 0xD00000000000006ELL;
    v37._object = (void *)0x80000001000B7B10;
    v39._object = (void *)0x80000001000B7B40;
    v37._countAndFlagsBits = 0xD00000000000002ALL;
    v38._countAndFlagsBits = 0x6567646162204025;
    v38._object = (void *)0xEC0000004025202CLL;
    sub_1000AE118(v37, v38, v39);
    sub_10000693C(&qword_1000D52E8);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1000B0E30;
    *(void *)(v26 + 56) = &type metadata for String;
    unint64_t v27 = sub_10002CFD4();
    *(void *)(v26 + 32) = v21;
    *(void *)(v26 + 40) = v20;
    *(void *)(v26 + 96) = &type metadata for String;
    *(void *)(v26 + 104) = v27;
    *(void *)(v26 + 64) = v27;
    *(void *)(v26 + 72) = v25;
    *(void *)(v26 + 80) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1000AF488();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v32 = *(void *)(v4 + 16);
    unint64_t v31 = *(void *)(v4 + 24);
    if (v32 >= v31 >> 1) {
      uint64_t v4 = (uint64_t)sub_100022320((void *)(v31 > 1), v32 + 1, 1, (void *)v4);
    }
    *(void *)(v4 + 16) = v32 + 1;
    uint64_t v33 = v4 + 16 * v32;
    *(void *)(v33 + 32) = v28;
    *(void *)(v33 + 40) = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_15:
  v36[1] = v4;
  sub_1000AE098();
  swift_bridgeObjectRetain();
  sub_10000693C(&qword_1000D5C78);
  sub_100009F50(&qword_1000D5C80, &qword_1000D5C78);
  uint64_t v34 = sub_1000AF3F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_10002475C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000ADF08();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1000247C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100009D6C(v2 + *(int *)(a1 + 24), a2, &qword_1000D5928);
}

uint64_t sub_1000247F0@<X0>(void *a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char **a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v54 = a6;
  uint64_t v50 = a4;
  uint64_t v51 = a5;
  int v53 = a3;
  int v49 = a2;
  uint64_t v52 = a7;
  uint64_t v8 = sub_1000ADD48();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000693C(&qword_1000D59C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AE338();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v45 = (uint64_t *)((char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v45 - v17;
  size_t v19 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_100024D3C(a1, v22);
  id v24 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
  if (!v24) {
    id v24 = [objc_allocWithZone((Class)NSAttributedString) init];
  }
  *(void *)uint64_t v21 = v24;
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  sub_100024D3C(a1, v25);
  *((void *)v21 + 1) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 104))(v25, v26);
  if (v53 == 2)
  {
    unint64_t v27 = &v21[v19[6]];
    uint64_t v28 = sub_1000ADC28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  }
  else
  {
    sub_100024DE4(a1, v53 & 1, v54, (uint64_t)&v21[v19[6]]);
  }
  uint64_t v29 = v51;
  sub_100009D6C(v51, (uint64_t)v12, &qword_1000D59C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100009EF4((uint64_t)v12, &qword_1000D59C0);
    uint64_t v30 = a1[3];
    uint64_t v31 = a1[4];
    sub_100024D3C(a1, v30);
    unint64_t v32 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    id v33 = [v32 urlRepresentation];

    sub_1000ADD18();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
    uint64_t v34 = v45;
    sub_100026B40(a1, v45);
    uint64_t v35 = v46;
    sub_1000AE328();
    unint64_t v36 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
    v36(v34, v13);
    v36((uint64_t *)v18, v13);
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v21[v19[7]], v35, v48);
  }
  uint64_t v37 = v52;
  uint64_t v38 = v50;
  char v39 = v49;
  uint64_t v40 = a1[3];
  uint64_t v41 = a1[4];
  sub_100024D3C(a1, v40);
  *(void *)&v21[v19[8]] = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v40, v41);
  v21[v19[10]] = v39 & 1;
  *(void *)&v21[v19[9]] = v38;
  sub_100024D3C(a1, a1[3]);
  char v42 = sub_1000AE138();
  uint64_t v43 = sub_1000ADF68();
  (*(void (**)(char **, uint64_t))(*(void *)(v43 - 8) + 8))(v54, v43);
  sub_100009EF4(v29, &qword_1000D59C0);
  v21[v19[11]] = v42 & 1;
  sub_100024D80((uint64_t)v21, v37);
  return sub_100023B0C((uint64_t)a1);
}

uint64_t type metadata accessor for TTRNewWidgetViewModel.Reminder(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D5AA0);
}

void *sub_100024D3C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100024D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100024DE4@<X0>(void *a1@<X0>, int a2@<W1>, char **a3@<X2>, uint64_t a4@<X8>)
{
  v236 = a3;
  LODWORD(v213) = a2;
  uint64_t v220 = a4;
  uint64_t v227 = sub_10000693C(&qword_1000D59C8);
  uint64_t v5 = __chkstk_darwin(v227);
  v226 = (char *)&v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v225 = (char *)&v180 - v7;
  uint64_t v224 = sub_10000693C(&qword_1000D59D0);
  uint64_t v8 = __chkstk_darwin(v224);
  v223 = (char *)&v180 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v222 = (uint64_t)&v180 - v10;
  uint64_t v230 = sub_1000ADBD8();
  uint64_t v183 = *(void *)(v230 - 8);
  __chkstk_darwin(v230);
  v229 = (char *)&v180 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D59D8);
  __chkstk_darwin(v12 - 8);
  uint64_t v228 = (uint64_t)&v180 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = sub_1000ADC18();
  uint64_t v182 = *(void *)(v237 - 8);
  uint64_t v14 = __chkstk_darwin(v237);
  v232 = (char *)&v180 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v233 = (char *)&v180 - v16;
  uint64_t v187 = sub_1000ADDC8();
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  v185 = (char *)&v180 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_1000ADE18();
  uint64_t v208 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  v199 = (char *)&v180 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_1000ADD98();
  uint64_t v191 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  v188 = (char *)&v180 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_1000ADDA8();
  uint64_t v193 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  v189 = (char *)&v180 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_1000ADDF8();
  uint64_t v197 = *(void *)(v198 - 8);
  uint64_t v21 = __chkstk_darwin(v198);
  v184 = (char *)&v180 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  v190 = (char *)&v180 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v195 = (char *)&v180 - v26;
  __chkstk_darwin(v25);
  v196 = (char *)&v180 - v27;
  uint64_t v207 = sub_1000ADFA8();
  uint64_t v206 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  v204 = (char *)&v180 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_1000ADFC8();
  uint64_t v203 = *(void *)(v205 - 8);
  __chkstk_darwin(v205);
  v200 = (char *)&v180 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000ADC28();
  uint64_t v221 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  v231 = (char *)&v180 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = (void (**)(void, void, void))sub_1000ADF68();
  uint64_t v219 = (uint64_t)*(v217 - 1);
  __chkstk_darwin(v217);
  v211 = (char *)&v180 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_10000693C(&qword_1000D59E0);
  uint64_t v33 = __chkstk_darwin(v216);
  uint64_t v235 = (uint64_t)&v180 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v210 = (uint64_t)&v180 - v35;
  uint64_t v36 = sub_10000693C(&qword_1000D59E8);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v212 = (uint64_t)&v180 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v180 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v44 = (char *)&v180 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v181 = (uint64_t)&v180 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v201 = (char *)&v180 - v48;
  __chkstk_darwin(v47);
  v202 = (char *)&v180 - v49;
  uint64_t v50 = sub_10000693C(&qword_1000D4E10);
  uint64_t v51 = __chkstk_darwin(v50 - 8);
  v218 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v180 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v51);
  uint64_t v215 = (uint64_t)&v180 - v53;
  uint64_t v54 = sub_1000ADF08();
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v57 = (char *)&v180 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a1[3];
  uint64_t v58 = a1[4];
  sub_100024D3C(a1, v59);
  uint64_t v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v58 + 104))(v59, v58);
  if (v60)
  {
    uint64_t v61 = v60;
    uint64_t v234 = v30;
    id v62 = [v60 date];
    sub_1000ADEB8();

    LOBYTE(v62) = sub_1000ADE28();
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    uint64_t v63 = (char *)(v55 + 8);
    v214 = v64;
    v64((uint64_t)v57, v54);
    unsigned __int8 v65 = [v61 isAllDay];
    uint64_t v66 = v57;
    if (v62)
    {
      if (v65)
      {

        uint64_t v67 = v215;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v221 + 56))(v215, 1, 1, v234);
LABEL_51:
        uint64_t v92 = v220;
        return sub_10001D8DC(v67, v92, &qword_1000D4E10);
      }
      id v180 = v61;
      if ((v213 & 1) == 0)
      {
        v233 = v63;
        if (qword_1000D4898 != -1) {
          swift_once();
        }
        uint64_t v237 = (uint64_t)v57;
        id v79 = [qword_1000D59B0 locale:v180];
        uint64_t v80 = v210;
        uint64_t v81 = (uint64_t)v202;
        uint64_t v82 = (uint64_t)v201;
        if (v79)
        {
          uint64_t v83 = v79;
          sub_1000ADF48();

          uint64_t v84 = v219;
          uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t, void (**)(void, void, void)))(v219 + 56);
          uint64_t v86 = (char *)v81;
          uint64_t v87 = 0;
        }
        else
        {
          uint64_t v84 = v219;
          uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t, void (**)(void, void, void)))(v219 + 56);
          uint64_t v86 = v202;
          uint64_t v87 = 1;
        }
        v157 = v217;
        v85(v86, v87, 1, v217);
        (*(void (**)(uint64_t, char **, void))(v84 + 16))(v82, v236, v157);
        v85((char *)v82, 0, 1, v157);
        uint64_t v158 = v80 + *(int *)(v216 + 48);
        sub_100009D6C(v81, v80, &qword_1000D59E8);
        sub_100009D6C(v82, v158, &qword_1000D59E8);
        v159 = *(uint64_t (**)(uint64_t, uint64_t, void))(v84 + 48);
        if (v159(v80, 1, v157) == 1)
        {
          sub_100009EF4(v82, &qword_1000D59E8);
          sub_100009EF4(v81, &qword_1000D59E8);
          int v160 = v159(v158, 1, v157);
          uint64_t v67 = v215;
          v161 = &TTRBundleLookupObject__metaData;
          if (v160 == 1)
          {
            sub_100009EF4(v80, &qword_1000D59E8);
            uint64_t v162 = v237;
            uint64_t v163 = v234;
            v164 = &qword_1000D5000;
LABEL_50:
            id v173 = (id)v164[310];
            id v174 = v180;
            id v175 = [v180 *(SEL *)&v161[19].ivar_base_size];
            sub_1000ADEB8();

            Class isa = sub_1000ADE88().super.isa;
            v214(v162, v54);
            id v177 = [v173 stringFromDate:isa];

            sub_1000AF498();
            uint64_t v178 = (uint64_t)v218;
            sub_1000ADBE8();

            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v221 + 56))(v178, 0, 1, v163);
            sub_10001D8DC(v178, v67, &qword_1000D4E10);
            goto LABEL_51;
          }
        }
        else
        {
          uint64_t v165 = v181;
          sub_100009D6C(v80, v181, &qword_1000D59E8);
          if (v159(v158, 1, v157) != 1)
          {
            uint64_t v167 = v219;
            v168 = v211;
            (*(void (**)(char *, uint64_t, void))(v219 + 32))(v211, v158, v157);
            sub_1000277EC(&qword_1000D59F0, (void (*)(uint64_t))&type metadata accessor for Locale);
            char v169 = sub_1000AF448();
            v170 = *(void (**)(void, void))(v167 + 8);
            v170(v168, v157);
            sub_100009EF4(v82, &qword_1000D59E8);
            sub_100009EF4(v81, &qword_1000D59E8);
            v170(v165, v157);
            sub_100009EF4(v210, &qword_1000D59E8);
            uint64_t v67 = v215;
            uint64_t v162 = v237;
            uint64_t v163 = v234;
            v161 = &TTRBundleLookupObject__metaData;
            v164 = &qword_1000D5000;
            if (v169) {
              goto LABEL_50;
            }
LABEL_49:
            id v171 = (id)v164[310];
            Class v172 = sub_1000ADF38().super.isa;
            [v171 setLocale:v172];

            goto LABEL_50;
          }
          sub_100009EF4(v82, &qword_1000D59E8);
          sub_100009EF4(v81, &qword_1000D59E8);
          (*(void (**)(uint64_t, void (**)(void, void, void)))(v219 + 8))(v165, v157);
          uint64_t v67 = v215;
          v161 = &TTRBundleLookupObject__metaData;
        }
        sub_100009EF4(v80, &qword_1000D59E0);
        uint64_t v162 = v237;
        uint64_t v163 = v234;
        v164 = &qword_1000D5000;
        goto LABEL_49;
      }
      v96 = v200;
      sub_1000ADF98();
      uint64_t v97 = v206;
      v98 = v204;
      uint64_t v99 = v207;
      (*(void (**)(char *, void, uint64_t))(v206 + 104))(v204, enum case for Calendar.Component.minute(_:), v207);
      id v100 = [v61 date];
      sub_1000ADEB8();

      uint64_t v101 = sub_1000ADFB8();
      uint64_t v213 = v54;
      v214((uint64_t)v66, v54);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
      (*(void (**)(char *, uint64_t))(v203 + 8))(v96, v205);
      if (v101 || (sub_1000ADF28() & 1) == 0)
      {
        id v122 = [v61 date:v180];
        sub_1000ADEB8();

        v123 = v184;
        sub_1000ADB88();
        v124 = v188;
        sub_1000ADD88();
        v125 = v189;
        sub_1000ADD78();
        (*(void (**)(char *, uint64_t))(v191 + 8))(v124, v192);
        v126 = v190;
        sub_1000ADD68();
        (*(void (**)(char *, uint64_t))(v193 + 8))(v125, v194);
        uint64_t v54 = v197 + 8;
        uint64_t v107 = *(void (**)(char *, uint64_t))(v197 + 8);
        uint64_t v108 = v198;
        v107(v123, v198);
        v127 = v185;
        sub_1000ADDB8();
        v128 = v195;
        sub_1000ADDE8();
        (*(void (**)(char *, uint64_t))(v186 + 8))(v127, v187);
        v107(v126, v108);
        uint64_t v109 = v196;
        sub_1000ADDD8();
        v110 = v128;
      }
      else
      {
        id v102 = [v61 date];
        sub_1000ADEB8();

        uint64_t v103 = v190;
        sub_1000ADB88();
        uint64_t v104 = v188;
        sub_1000ADD88();
        v105 = v189;
        sub_1000ADD78();
        (*(void (**)(char *, uint64_t))(v191 + 8))(v104, v192);
        v106 = v195;
        sub_1000ADD68();
        (*(void (**)(char *, uint64_t))(v193 + 8))(v105, v194);
        uint64_t v54 = v197 + 8;
        uint64_t v107 = *(void (**)(char *, uint64_t))(v197 + 8);
        uint64_t v108 = v198;
        v107(v103, v198);
        uint64_t v109 = v196;
        sub_1000ADDD8();
        v110 = v106;
      }
      v107(v110, v108);
      v129 = v199;
      sub_1000ADD58();
      v107(v109, v108);
      uint64_t v130 = v237;
      uint64_t v44 = v231;
      v131 = v232;
      sub_1000277EC(&qword_1000D59F8, (void (*)(uint64_t))&type metadata accessor for Date.AttributedStyle);
      uint64_t v132 = v209;
      sub_1000ADEE8();
      (*(void (**)(char *, uint64_t))(v208 + 8))(v129, v132);
      v214((uint64_t)v66, v213);
      v133 = (objc_class *)[self mainBundle];
      v179._countAndFlagsBits = 0x80000001000B7AB0;
      v239._object = (void *)0x80000001000B7A80;
      v239._countAndFlagsBits = 0xD00000000000002CLL;
      v240.value._countAndFlagsBits = 0;
      v240.value._object = 0;
      v134.super.Class isa = v133;
      v241._countAndFlagsBits = 49;
      v241._object = (void *)0xE100000000000000;
      uint64_t v135 = sub_1000ADC48(v239, v240, v134, v241, v179);
      uint64_t v137 = v136;

      uint64_t v67 = v215;
      if (v135 == 49 && v137 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        uint64_t v66 = v233;
      }
      else
      {
        char v138 = sub_1000AFA38();
        swift_bridgeObjectRelease();
        uint64_t v66 = v233;
        if ((v138 & 1) == 0)
        {

LABEL_47:
          uint64_t v166 = v234;
          (*(void (**)(uint64_t, char *, uint64_t))(v221 + 32))(v67, v44, v234);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v221 + 56))(v67, 0, 1, v166);
          goto LABEL_51;
        }
      }
      uint64_t v139 = 0;
      uint64_t v219 = v183 + 8;
      v218 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v182 + 48);
      v236 = (char **)(v182 + 32);
      v217 = (void (**)(void, void, void))(v182 + 16);
      uint64_t v216 = v182 + 8;
      while (1)
      {
        v140 = v229;
        sub_1000ADBC8();
        uint64_t v141 = v228;
        sub_100027498(v228);
        (*(void (**)(char *, uint64_t))v219)(v140, v230);
        if ((*v218)(v141, 1, v130) == 1)
        {

          sub_100009EF4(v141, &qword_1000D59D8);
          uint64_t v67 = v215;
          goto LABEL_47;
        }
        uint64_t v41 = *v236;
        ((void (*)(char *, uint64_t, uint64_t))*v236)(v66, v141, v130);
        sub_1000277EC(&qword_1000D5A00, (void (*)(uint64_t))&type metadata accessor for AttributedString);
        sub_1000ADCC8();
        sub_1000277EC(&qword_1000D5A08, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
        if ((sub_1000AF428() & 1) == 0) {
          break;
        }
        uint64_t v142 = v227;
        uint64_t v143 = *(int *)(v227 + 48);
        v144 = v225;
        uint64_t v235 = v139;
        v145 = &v225[v143];
        v146 = (void (*)(char *, char *, uint64_t))*v217;
        (*v217)(v225, v66, v130);
        ((void (*)(char *, char *, uint64_t))v41)(v145, v131, v130);
        v147 = v226;
        v148 = &v226[*(int *)(v142 + 48)];
        v146(v226, v144, v130);
        v146(v148, v145, v130);
        v149 = v223;
        ((void (*)(char *, char *, uint64_t))v41)(v223, v147, v237);
        v150 = *(void (**)(char *, uint64_t))v216;
        (*(void (**)(char *, uint64_t))v216)(v148, v237);
        v151 = &v147[*(int *)(v142 + 48)];
        ((void (*)(char *, char *, uint64_t))v41)(v147, v144, v237);
        v152 = v145;
        uint64_t v139 = v235;
        ((void (*)(char *, char *, uint64_t))v41)(v151, v152, v237);
        v153 = v151;
        uint64_t v66 = v233;
        ((void (*)(char *, char *, uint64_t))v41)(&v149[*(int *)(v224 + 36)], v153, v237);
        uint64_t v54 = (uint64_t)v232;
        v150(v147, v237);
        uint64_t v154 = (uint64_t)v149;
        uint64_t v130 = v237;
        uint64_t v155 = v222;
        sub_10001D8DC(v154, v222, &qword_1000D59D0);
        sub_100009F50(&qword_1000D5A10, &qword_1000D59D0);
        v156 = v231;
        sub_1000ADBF8();
        v131 = (char *)v54;
        sub_100009EF4(v155, &qword_1000D59D0);
        v150(v66, v130);
        uint64_t v44 = v156;
      }
      __break(1u);
    }
    else
    {
      v233 = v63;
      id v180 = v61;
      if (qword_1000D48A0 == -1) {
        goto LABEL_9;
      }
    }
    swift_once();
LABEL_9:
    uint64_t v237 = (uint64_t)v66;
    uint64_t v213 = v54;
    id v71 = [qword_1000D59B8 locale:v180];
    uint64_t v72 = v219;
    uint64_t v73 = v235;
    if (v71)
    {
      uint64_t v74 = v71;
      uint64_t v75 = v234;
      sub_1000ADF48();

      uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t, void (**)(void, void, void)))(v72 + 56);
      uint64_t v77 = v44;
      uint64_t v78 = 0;
    }
    else
    {
      uint64_t v75 = v234;
      uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t, void (**)(void, void, void)))(v219 + 56);
      uint64_t v77 = v44;
      uint64_t v78 = 1;
    }
    os_log_type_t v88 = v217;
    v76(v77, v78, 1, v217);
    (*(void (**)(char *, char **, void))(v72 + 16))(v41, v236, v88);
    v76(v41, 0, 1, v88);
    uint64_t v89 = v73 + *(int *)(v216 + 48);
    sub_100009D6C((uint64_t)v44, v73, &qword_1000D59E8);
    sub_100009D6C((uint64_t)v41, v89, &qword_1000D59E8);
    uint64_t v90 = v88;
    unint64_t v91 = *(unsigned int (**)(uint64_t, uint64_t, void))(v72 + 48);
    if (v91(v73, 1, v90) == 1)
    {
      sub_100009EF4((uint64_t)v41, &qword_1000D59E8);
      sub_100009EF4((uint64_t)v44, &qword_1000D59E8);
      if (v91(v89, 1, v90) == 1)
      {
        sub_100009EF4(v235, &qword_1000D59E8);
        uint64_t v92 = v220;
        uint64_t v93 = v237;
        v94 = &qword_1000D5000;
LABEL_28:
        id v116 = (id)v94[311];
        id v117 = v180;
        id v118 = [v180 date];
        sub_1000ADEB8();

        Class v119 = sub_1000ADE88().super.isa;
        v214(v93, v213);
        id v120 = [v116 stringFromDate:v119];

        sub_1000AF498();
        uint64_t v121 = (uint64_t)v218;
        sub_1000ADBE8();

        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v221 + 56))(v121, 0, 1, v75);
        uint64_t v67 = v215;
        sub_10001D8DC(v121, v215, &qword_1000D4E10);
        return sub_10001D8DC(v67, v92, &qword_1000D4E10);
      }
    }
    else
    {
      uint64_t v95 = v212;
      sub_100009D6C(v73, v212, &qword_1000D59E8);
      if (v91(v89, 1, v90) != 1)
      {
        uint64_t v111 = v211;
        (*(void (**)(char *, uint64_t, void))(v72 + 32))(v211, v89, v90);
        sub_1000277EC(&qword_1000D59F0, (void (*)(uint64_t))&type metadata accessor for Locale);
        char v112 = sub_1000AF448();
        uint64_t v113 = *(void (**)(void, void))(v72 + 8);
        v113(v111, v90);
        sub_100009EF4((uint64_t)v41, &qword_1000D59E8);
        sub_100009EF4((uint64_t)v44, &qword_1000D59E8);
        v113(v95, v90);
        sub_100009EF4(v73, &qword_1000D59E8);
        uint64_t v92 = v220;
        uint64_t v93 = v237;
        v94 = &qword_1000D5000;
        if (v112) {
          goto LABEL_28;
        }
LABEL_27:
        id v114 = (id)v94[311];
        Class v115 = sub_1000ADF38().super.isa;
        [v114 setLocale:v115];

        goto LABEL_28;
      }
      sub_100009EF4((uint64_t)v41, &qword_1000D59E8);
      sub_100009EF4((uint64_t)v44, &qword_1000D59E8);
      (*(void (**)(uint64_t, void (**)(void, void, void)))(v72 + 8))(v95, v90);
    }
    sub_100009EF4(v235, &qword_1000D59E0);
    uint64_t v92 = v220;
    uint64_t v93 = v237;
    v94 = &qword_1000D5000;
    goto LABEL_27;
  }
  uint64_t v68 = v220;
  uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v221 + 56);

  return v69(v68, 1, 1, v30);
}

uint64_t sub_100026B40@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v60 = a2;
  uint64_t v5 = sub_1000AE338();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v57 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (id *)((char *)&v57 - v13);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15((char *)&v57 - v13, v3, v5);
  uint64_t v16 = (*(uint64_t (**)(id *, uint64_t))(v6 + 88))(v14, v5);
  if (v16 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v6 + 96))(v14, v5);

    uint64_t v17 = (char *)v14 + *(int *)(sub_10000693C(&qword_1000D5A40) + 48);
    uint64_t v18 = sub_1000AE2B8();
LABEL_3:
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    goto LABEL_4;
  }
  uint64_t v29 = v16;
  if (v16 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v6 + 96))(v14, v5);

    uint64_t v30 = (char *)v14 + *(int *)(sub_10000693C(&qword_1000D5A28) + 48);
    sub_10000693C(&qword_1000D5A30);
    uint64_t v31 = v60;
    uint64_t v32 = a1[3];
    uint64_t v33 = a1[4];
    sub_100024D3C(a1, v32);
    *uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
    sub_1000AE308();
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v31, enum case for REMNavigationSpecifier.reminder(_:), v5);
    uint64_t v34 = sub_1000AE2E8();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v30, v34);
  }
  if (v16 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v6 + 96))(v14, v5);
    id v36 = *v14;
    uint64_t v37 = *(int *)(sub_10000693C(&qword_1000D5A28) + 48);
    uint64_t v38 = (char *)v14 + v37;
    uint64_t v39 = v60;
    uint64_t v40 = (uint64_t *)((char *)v60 + v37);
    *uint64_t v60 = (uint64_t)v36;
    uint64_t v41 = a1[3];
    uint64_t v42 = a1[4];
    sub_100024D3C(a1, v41);
    *uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
    uint64_t v43 = enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:);
    uint64_t v44 = sub_1000AE2E8();
    uint64_t v45 = *(void *)(v44 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v45 + 104))(v40, v43, v44);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104))(v39, v29, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v38, v44);
  }
  if (v16 == enum case for REMNavigationSpecifier.newList(_:)) {
    goto LABEL_15;
  }
  if (v16 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v6 + 96))(v14, v5);

    uint64_t v17 = (char *)v14 + *(int *)(sub_10000693C(&qword_1000D5A30) + 48);
    uint64_t v18 = sub_1000AE318();
    goto LABEL_3;
  }
  if (v16 == enum case for REMNavigationSpecifier.section(_:)
    || v16 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v6 + 96))(v14, v5);

    uint64_t v17 = (char *)v14 + *(int *)(sub_10000693C(&qword_1000D5A38) + 48);
    uint64_t v18 = sub_1000AE2C8();
    goto LABEL_3;
  }
  if (v16 == enum case for REMNavigationSpecifier.root(_:)) {
    goto LABEL_15;
  }
  if (v16 == enum case for REMNavigationSpecifier.today(_:)
    || v16 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v16 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v16 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_26;
  }
  if (v16 == enum case for REMNavigationSpecifier.search(_:))
  {
LABEL_15:
    (*(void (**)(id *, uint64_t))(v6 + 8))(v14, v5);
    goto LABEL_4;
  }
  if (v16 == enum case for REMNavigationSpecifier.assigned(_:))
  {
LABEL_26:
    uint64_t v46 = a1[3];
    uint64_t v47 = a1[4];
    sub_100024D3C(a1, v46);
    uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
    uint64_t v49 = v60;
    *uint64_t v60 = v48;
    uint64_t v50 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:);
    uint64_t v51 = sub_1000AE2D8();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v49, v50, v51);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104))(v49, v29, v5);
    return (*(uint64_t (**)(id *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v59 = v15;
  uint64_t v52 = v60;
  if (v16 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    uint64_t v53 = a1[3];
    uint64_t v54 = a1[4];
    sub_100024D3C(a1, v53);
    *uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v53, v54);
    uint64_t v55 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:);
    uint64_t v56 = sub_1000AE2D8();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v52, v55, v56);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104))(v52, v29, v5);
    return (*(uint64_t (**)(id *, uint64_t))(v6 + 8))(v14, v5);
  }
  if (v16 == enum case for REMNavigationSpecifier.tagged(_:)
    || v16 == enum case for REMNavigationSpecifier.completed(_:)
    || v16 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(v14, v5);
    uint64_t v15 = v59;
  }
  else
  {
    uint64_t v15 = v59;
    if (v16 != enum case for REMNavigationSpecifier.newReminder(_:)
      && v16 != enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
    {
      uint64_t result = sub_1000AFA28();
      __break(1u);
      return result;
    }
  }
LABEL_4:
  uint64_t v19 = v12;
  if (qword_1000D4890 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1000AE768();
  sub_10000EFA4(v20, (uint64_t)qword_1000D5998);
  v15(v12, v3, v5);
  uint64_t v21 = sub_1000AE758();
  os_log_type_t v22 = sub_1000AF708();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v24 = v60;
  if (v23)
  {
    uint64_t v58 = v3;
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v59 = v15;
    uint64_t v62 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v57 = v25 + 4;
    v59(v9, (uint64_t)v19, v5);
    uint64_t v27 = sub_1000AF4B8();
    uint64_t v61 = sub_1000A53D8(v27, v28, &v62);
    uint64_t v24 = v60;
    sub_1000AF808();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Can't select for %s", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v59;
    swift_slowDealloc();
    uint64_t v3 = v58;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }

  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v15)(v24, v3, v5);
}

uint64_t sub_100027498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v1 = sub_1000ADC18();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - v6;
  sub_1000ADBD8();
  sub_1000277EC(&qword_1000D5A18, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  sub_1000AF678();
  uint64_t v17 = v2;
  uint64_t v8 = (void (**)(char *, uint64_t))(v2 + 8);
  while (1)
  {
    sub_1000AF698();
    sub_1000277EC(&qword_1000D5A20, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
    char v9 = sub_1000AF448();
    uint64_t v10 = *v8;
    (*v8)(v5, v1);
    if (v9)
    {
      v10(v7, v1);
      uint64_t v13 = 1;
      uint64_t v15 = v17;
      uint64_t v14 = v18;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, v13, 1, v1);
    }
    uint64_t v11 = (void (*)(char *, void))sub_1000AF6B8();
    swift_bridgeObjectRetain();
    v11(v19, 0);
    char v12 = sub_1000AF3E8();
    swift_bridgeObjectRelease();
    if (v12) {
      break;
    }
    sub_1000AF6A8();
  }
  uint64_t v15 = v17;
  uint64_t v14 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v18, v7, v1);
  uint64_t v13 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, v13, 1, v1);
}

id sub_10002773C(uint64_t a1)
{
  return sub_100027764(a1, 0, 1, &qword_1000D59B0);
}

id sub_100027750(uint64_t a1)
{
  return sub_100027764(a1, 1, 0, &qword_1000D59B8);
}

id sub_100027764(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v7 setDoesRelativeDateFormatting:1];
  [v7 setDateStyle:a2];
  id result = [v7 setTimeStyle:a3];
  *a4 = v7;
  return result;
}

uint64_t sub_1000277EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_100027834(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a2[1];
    *((void *)a1 + 1) = v8;
    uint64_t v9 = a3[6];
    __dst = &a1[v9];
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1000ADC28();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    uint64_t v15 = v8;
    if (v13(v10, 1, v11))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = &v7[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    BOOL v23 = *(char **)((char *)a2 + v21);
    *(void *)&v7[v21] = v23;
    *(void *)&v7[v22] = *(char **)((char *)a2 + v22);
    uint64_t v24 = a3[11];
    v7[a3[10]] = *((unsigned char *)a2 + a3[10]);
    v7[v24] = *((unsigned char *)a2 + v24);
    id v25 = v23;
  }
  return v7;
}

void sub_100027A40(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[6];
  uint64_t v5 = sub_1000ADC28();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  id v7 = (char *)a1 + a2[7];
  uint64_t v8 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = *(id *)((char *)a1 + a2[8]);
}

void *sub_100027B58(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  id v7 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  id v14 = v7;
  if (v12(v9, 1, v10))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v9, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = *(void **)(a2 + v20);
  *(void *)((char *)a1 + v20) = v22;
  *(void *)((char *)a1 + v21) = *(void *)(a2 + v21);
  uint64_t v23 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *((unsigned char *)a1 + v23) = *(unsigned char *)(a2 + v23);
  id v24 = v22;
  return a1;
}

uint64_t sub_100027D10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  id v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v10;
  id v11 = v10;

  uint64_t v12 = a3[6];
  id v13 = (void *)(a1 + v12);
  id v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000ADC28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_10000693C(&qword_1000D4E10);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = *(void **)(a1 + v25);
  uint64_t v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  id v28 = v27;

  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

_OWORD *sub_100027F3C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  id v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000ADC28();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000693C(&qword_1000D4E10);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  id v13 = (char *)a1 + v12;
  id v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  return a1;
}

uint64_t sub_1000280D0(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  id v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000ADC28();
  uint64_t v12 = *(void *)(v11 - 8);
  id v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000693C(&qword_1000D4E10);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  int v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1000ADD48();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)((char *)a2 + v21);

  uint64_t v23 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(unsigned char *)(a1 + v23) = *((unsigned char *)a2 + v23);
  *(unsigned char *)(a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_1000282EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100028300);
}

uint64_t sub_100028300(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000693C(&qword_1000D4E10);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000ADD48();
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100028430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100028444);
}

void *sub_100028444(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_10000693C(&qword_1000D4E10);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000ADD48();
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100028574()
{
  sub_10002AD80(319, (unint64_t *)&unk_1000D5AB0, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  if (v0 <= 0x3F)
  {
    sub_1000ADD48();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10002868C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000ADF08();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v78 = a3;
    id v79 = a2;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v80 = a1;
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
    *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    v9[40] = v10[40];
    uint64_t v12 = *((void *)v10 + 7);
    *((void *)v9 + 6) = *((void *)v10 + 6);
    *((void *)v9 + 7) = v12;
    uint64_t v13 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v14 = v13[9];
    __dst = (void **)&v9[v14];
    uint64_t v15 = (void **)&v10[v14];
    uint64_t v16 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(void **, uint64_t, int *))(v17 + 48);
    int v19 = (int *)v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v19))
    {
      uint64_t v20 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v23 = *v15;
      uint64_t v24 = v15[1];
      char *__dst = *v15;
      __dst[1] = v24;
      uint64_t v25 = v19[6];
      id v71 = (char *)__dst + v25;
      uint64_t v72 = v17;
      uint64_t v76 = v15;
      uint64_t v26 = (char *)v15 + v25;
      uint64_t v27 = sub_1000ADC28();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      id v29 = v23;
      id v30 = v24;
      if (v74(v26, 1, v27))
      {
        uint64_t v31 = sub_10000693C(&qword_1000D4E10);
        memcpy(v71, v26, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v71, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v71, 0, 1, v27);
      }
      uint64_t v32 = v19[7];
      uint64_t v33 = (char *)__dst + v32;
      uint64_t v34 = (char *)v76 + v32;
      uint64_t v35 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      uint64_t v36 = v19[8];
      uint64_t v37 = *(void **)((char *)v76 + v36);
      *(void **)((char *)__dst + v36) = v37;
      *(void **)((char *)__dst + v19[9]) = *(void **)((char *)v76 + v19[9]);
      *((unsigned char *)__dst + v19[10]) = *((unsigned char *)v76 + v19[10]);
      *((unsigned char *)__dst + v19[11]) = *((unsigned char *)v76 + v19[11]);
      uint64_t v38 = *(void (**)(void **, void, uint64_t, int *))(v72 + 56);
      id v39 = v37;
      v38(__dst, 0, 1, v19);
    }
    uint64_t v40 = v13[10];
    __dsta = *(void **)&v10[v40];
    *(void *)&v9[v40] = __dsta;
    uint64_t v41 = v13[11];
    uint64_t v42 = &v9[v41];
    uint64_t v43 = &v10[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *(void *)uint64_t v42 = *(void *)v43;
    *((void *)v42 + 1) = v44;
    uint64_t v45 = v13[12];
    uint64_t v46 = *(void **)&v10[v45];
    *(void *)&v9[v45] = v46;
    uint64_t v47 = v13[13];
    uint64_t v48 = &v9[v47];
    uint64_t v49 = &v10[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    uint64_t v51 = v13[14];
    uint64_t v52 = &v9[v51];
    uint64_t v53 = &v10[v51];
    uint64_t v54 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = *(void *)v53;
    *((void *)v52 + 1) = v54;
    v9[v13[15]] = v10[v13[15]];
    uint64_t v55 = v13[16];
    uint64_t v56 = &v9[v55];
    uint64_t v57 = &v10[v55];
    uint64_t v58 = *((void *)v57 + 1);
    *(void *)uint64_t v56 = *(void *)v57;
    *((void *)v56 + 1) = v58;
    *(void *)&v9[v13[17]] = *(void *)&v10[v13[17]];
    uint64_t v59 = v13[18];
    uint64_t v75 = &v10[v59];
    uint64_t v77 = &v9[v59];
    uint64_t v60 = sub_1000ADD48();
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
    id v61 = __dsta;
    swift_bridgeObjectRetain();
    id v62 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v73(v77, v75, v60);
    *(void *)&v9[v13[19]] = *(void *)&v10[v13[19]];
    v9[v13[20]] = v10[v13[20]];
    uint64_t v63 = *(int *)(v78 + 24);
    uint64_t v22 = v80;
    uint64_t v64 = (char *)v80 + v63;
    unsigned __int8 v65 = (char *)v79 + v63;
    uint64_t v66 = sub_1000AF358();
    uint64_t v67 = *(void *)(v66 - 8);
    uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    swift_bridgeObjectRetain();
    if (v68(v65, 1, v66))
    {
      uint64_t v69 = sub_10000693C(&qword_1000D5928);
      memcpy(v64, v65, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
  }
  return v22;
}

uint64_t type metadata accessor for TTRNewWidgetViewModel(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D5BF0);
}

uint64_t sub_100028C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = (id *)(v5 + v6[9]);
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {

    uint64_t v9 = (char *)v7 + v8[6];
    uint64_t v10 = sub_1000ADC28();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = (char *)v7 + v8[7];
    uint64_t v13 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v5 + v6[18];
  uint64_t v15 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + *(int *)(a2 + 24);
  uint64_t v17 = sub_1000AF358();
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v16, 1, v17);
  if (!result)
  {
    int v19 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
    return v19(v16, v17);
  }
  return result;
}

uint64_t sub_100028F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v75 = a3;
  uint64_t v76 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v77 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a2 + v7 + 16);
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(a2 + v7 + 40);
  uint64_t v11 = *(void *)(a2 + v7 + 56);
  *(void *)(v8 + 48) = *(void *)(a2 + v7 + 48);
  *(void *)(v8 + 56) = v11;
  uint64_t v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v13 = v12[9];
  __dst = (void **)(v8 + v13);
  uint64_t v14 = (void **)(v9 + v13);
  uint64_t v15 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(void **, uint64_t, int *))(v16 + 48);
  uint64_t v18 = (int *)v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v18))
  {
    uint64_t v19 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v14, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    id v71 = v14;
    uint64_t v73 = v16;
    uint64_t v20 = *v14;
    uint64_t v21 = v14[1];
    char *__dst = *v14;
    __dst[1] = v21;
    uint64_t v22 = v18[6];
    uint64_t v69 = (char *)__dst + v22;
    uint64_t v23 = (char *)v14 + v22;
    uint64_t v24 = sub_1000ADC28();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    id v26 = v20;
    id v27 = v21;
    if (v68(v23, 1, v24))
    {
      uint64_t v28 = sub_10000693C(&qword_1000D4E10);
      memcpy(v69, v23, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v69, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v69, 0, 1, v24);
    }
    uint64_t v29 = v18[7];
    id v30 = (char *)__dst + v29;
    uint64_t v31 = (char *)v71 + v29;
    uint64_t v32 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    uint64_t v33 = v18[8];
    uint64_t v34 = *(void **)((char *)v71 + v33);
    *(void **)((char *)__dst + v33) = v34;
    *(void **)((char *)__dst + v18[9]) = *(void **)((char *)v71 + v18[9]);
    *((unsigned char *)__dst + v18[10]) = *((unsigned char *)v71 + v18[10]);
    *((unsigned char *)__dst + v18[11]) = *((unsigned char *)v71 + v18[11]);
    uint64_t v35 = *(void (**)(void **, void, uint64_t, int *))(v73 + 56);
    id v36 = v34;
    v35(__dst, 0, 1, v18);
  }
  uint64_t v37 = v12[10];
  __dsta = *(void **)(v9 + v37);
  *(void *)(v8 + v37) = __dsta;
  uint64_t v38 = v12[11];
  id v39 = (void *)(v8 + v38);
  uint64_t v40 = (void *)(v9 + v38);
  uint64_t v41 = v40[1];
  *id v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v12[12];
  uint64_t v43 = *(void **)(v9 + v42);
  *(void *)(v8 + v42) = v43;
  uint64_t v44 = v12[13];
  uint64_t v45 = (void *)(v8 + v44);
  uint64_t v46 = (void *)(v9 + v44);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  uint64_t v48 = v12[14];
  uint64_t v49 = (void *)(v8 + v48);
  uint64_t v50 = (void *)(v9 + v48);
  uint64_t v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  *(unsigned char *)(v8 + v12[15]) = *(unsigned char *)(v9 + v12[15]);
  uint64_t v52 = v12[16];
  uint64_t v53 = (void *)(v8 + v52);
  uint64_t v54 = (void *)(v9 + v52);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  *(void *)(v8 + v12[17]) = *(void *)(v9 + v12[17]);
  uint64_t v56 = v12[18];
  uint64_t v72 = v9 + v56;
  uint64_t v74 = v8 + v56;
  uint64_t v57 = sub_1000ADD48();
  unint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
  id v58 = __dsta;
  swift_bridgeObjectRetain();
  id v59 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v70(v74, v72, v57);
  *(void *)(v8 + v12[19]) = *(void *)(v9 + v12[19]);
  *(unsigned char *)(v8 + v12[20]) = *(unsigned char *)(v9 + v12[20]);
  uint64_t v60 = *(int *)(v75 + 24);
  id v61 = (void *)(v77 + v60);
  id v62 = (const void *)(v76 + v60);
  uint64_t v63 = sub_1000AF358();
  uint64_t v64 = *(void *)(v63 - 8);
  unsigned __int8 v65 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48);
  swift_bridgeObjectRetain();
  if (v65(v62, 1, v63))
  {
    uint64_t v66 = sub_10000693C(&qword_1000D5928);
    memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v64 + 16))(v61, v62, v63);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  return v77;
}

uint64_t sub_1000294B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v96 = a3;
  uint64_t v97 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v98 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(v9 + 40);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v11 = v10[9];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (void *)(v9 + v11);
  uint64_t v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_10002CF74((uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v26 = (void *)*v13;
    id v27 = (void *)*v12;
    *uint64_t v12 = *v13;
    id v28 = v26;

    uint64_t v29 = (void *)v12[1];
    id v30 = (void *)v13[1];
    v12[1] = v30;
    id v31 = v30;

    uint64_t v32 = v14[6];
    uint64_t v33 = (char *)v12 + v32;
    __dsta = (char *)v13 + v32;
    uint64_t v34 = sub_1000ADC28();
    uint64_t v91 = *(void *)(v34 - 8);
    uint64_t v93 = v33;
    uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
    LODWORD(v33) = v35(v33, 1, v34);
    int v36 = v35(__dsta, 1, v34);
    if (v33)
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v91 + 16))(v93, __dsta, v34);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v93, 0, 1, v34);
        goto LABEL_18;
      }
      size_t v37 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v38 = v93;
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v91 + 24))(v93, __dsta, v34);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v91 + 8))(v93, v34);
      size_t v37 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v38 = v93;
    }
    memcpy(v38, __dsta, v37);
LABEL_18:
    uint64_t v47 = v14[7];
    uint64_t v48 = (char *)v12 + v47;
    uint64_t v49 = (char *)v13 + v47;
    uint64_t v50 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
    uint64_t v51 = v14[8];
    uint64_t v52 = *(void **)((char *)v12 + v51);
    uint64_t v53 = *(void **)((char *)v13 + v51);
    *(void *)((char *)v12 + v51) = v53;
    id v54 = v53;

    *(void *)((char *)v12 + v14[9]) = *(void *)((char *)v13 + v14[9]);
    *((unsigned char *)v12 + v14[10]) = *((unsigned char *)v13 + v14[10]);
    *((unsigned char *)v12 + v14[11]) = *((unsigned char *)v13 + v14[11]);
    goto LABEL_19;
  }
  if (v18)
  {
LABEL_7:
    uint64_t v25 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v12, v13, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v19 = (void *)*v13;
  *uint64_t v12 = *v13;
  uint64_t v92 = (void *)v13[1];
  v12[1] = v92;
  uint64_t v20 = v14[6];
  __dst = (char *)v12 + v20;
  uint64_t v90 = (char *)v13 + v20;
  uint64_t v21 = sub_1000ADC28();
  uint64_t v88 = *(void *)(v21 - 8);
  uint64_t v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
  id v22 = v19;
  id v23 = v92;
  if (v89(v90, 1, v21))
  {
    uint64_t v24 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v90, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(__dst, v90, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(__dst, 0, 1, v21);
  }
  uint64_t v39 = v14[7];
  uint64_t v40 = (char *)v12 + v39;
  uint64_t v41 = (char *)v13 + v39;
  uint64_t v42 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = v14[8];
  uint64_t v44 = *(void **)((char *)v13 + v43);
  *(void *)((char *)v12 + v43) = v44;
  *(void *)((char *)v12 + v14[9]) = *(void *)((char *)v13 + v14[9]);
  *((unsigned char *)v12 + v14[10]) = *((unsigned char *)v13 + v14[10]);
  *((unsigned char *)v12 + v14[11]) = *((unsigned char *)v13 + v14[11]);
  uint64_t v45 = *(void (**)(void *, void, uint64_t, int *))(v15 + 56);
  id v46 = v44;
  v45(v12, 0, 1, v14);
LABEL_19:
  uint64_t v55 = v10[10];
  uint64_t v56 = *(void **)(v9 + v55);
  uint64_t v57 = *(void **)(v8 + v55);
  *(void *)(v8 + v55) = v56;
  id v58 = v56;

  uint64_t v59 = v10[11];
  uint64_t v60 = (void *)(v8 + v59);
  id v61 = (void *)(v9 + v59);
  *uint64_t v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v62 = v10[12];
  uint64_t v63 = *(void **)(v8 + v62);
  uint64_t v64 = *(void **)(v9 + v62);
  *(void *)(v8 + v62) = v64;
  id v65 = v64;

  uint64_t v66 = v10[13];
  uint64_t v67 = (void *)(v8 + v66);
  uint64_t v68 = (void *)(v9 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = v10[14];
  unint64_t v70 = (void *)(v8 + v69);
  id v71 = (void *)(v9 + v69);
  *unint64_t v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v10[15]) = *(unsigned char *)(v9 + v10[15]);
  uint64_t v72 = v10[16];
  uint64_t v73 = (void *)(v8 + v72);
  uint64_t v74 = (void *)(v9 + v72);
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v75 = v10[18];
  uint64_t v76 = v8 + v75;
  uint64_t v77 = v9 + v75;
  uint64_t v78 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 24))(v76, v77, v78);
  *(void *)(v8 + v10[19]) = *(void *)(v9 + v10[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v10[20]) = *(unsigned char *)(v9 + v10[20]);
  uint64_t v79 = *(int *)(v96 + 24);
  uint64_t v80 = (void *)(v98 + v79);
  uint64_t v81 = (void *)(v97 + v79);
  uint64_t v82 = sub_1000AF358();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v84 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v83 + 48);
  LODWORD(v76) = v84(v80, 1, v82);
  int v85 = v84(v81, 1, v82);
  if (!v76)
  {
    if (!v85)
    {
      (*(void (**)(void *, void *, uint64_t))(v83 + 24))(v80, v81, v82);
      return v98;
    }
    (*(void (**)(void *, uint64_t))(v83 + 8))(v80, v82);
    goto LABEL_24;
  }
  if (v85)
  {
LABEL_24:
    uint64_t v86 = sub_10000693C(&qword_1000D5928);
    memcpy(v80, v81, *(void *)(*(void *)(v86 - 8) + 64));
    return v98;
  }
  (*(void (**)(void *, void *, uint64_t))(v83 + 16))(v80, v81, v82);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
  return v98;
}

uint64_t sub_100029D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(a2 + v7 + 40);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + v7 + 48);
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v11 = v10[9];
  uint64_t v12 = (_OWORD *)(v8 + v11);
  uint64_t v13 = (_OWORD *)(v9 + v11);
  uint64_t v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v37 = a3;
    uint64_t v38 = a2;
    *uint64_t v12 = *v13;
    uint64_t v17 = v14[6];
    uint64_t v39 = a1;
    __dst = (char *)v12 + v17;
    int v18 = (char *)v13 + v17;
    uint64_t v19 = sub_1000ADC28();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v22 = v14[7];
    id v23 = (char *)v12 + v22;
    uint64_t v24 = (char *)v13 + v22;
    uint64_t v25 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    *(void *)((char *)v12 + v14[8]) = *(void *)((char *)v13 + v14[8]);
    *(void *)((char *)v12 + v14[9]) = *(void *)((char *)v13 + v14[9]);
    *((unsigned char *)v12 + v14[10]) = *((unsigned char *)v13 + v14[10]);
    *((unsigned char *)v12 + v14[11]) = *((unsigned char *)v13 + v14[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
    a2 = v38;
    a1 = v39;
    a3 = v37;
  }
  *(void *)(v8 + v10[10]) = *(void *)(v9 + v10[10]);
  *(_OWORD *)(v8 + v10[11]) = *(_OWORD *)(v9 + v10[11]);
  *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
  *(_OWORD *)(v8 + v10[13]) = *(_OWORD *)(v9 + v10[13]);
  *(_OWORD *)(v8 + v10[14]) = *(_OWORD *)(v9 + v10[14]);
  *(unsigned char *)(v8 + v10[15]) = *(unsigned char *)(v9 + v10[15]);
  *(_OWORD *)(v8 + v10[16]) = *(_OWORD *)(v9 + v10[16]);
  *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
  uint64_t v26 = v10[18];
  uint64_t v27 = v8 + v26;
  uint64_t v28 = v9 + v26;
  uint64_t v29 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  *(void *)(v8 + v10[19]) = *(void *)(v9 + v10[19]);
  *(unsigned char *)(v8 + v10[20]) = *(unsigned char *)(v9 + v10[20]);
  uint64_t v30 = *(int *)(a3 + 24);
  id v31 = (void *)(a1 + v30);
  uint64_t v32 = (const void *)(a2 + v30);
  uint64_t v33 = sub_1000AF358();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = sub_10000693C(&qword_1000D5928);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  return a1;
}

uint64_t sub_10002A1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v90 = a3;
  uint64_t v91 = a1;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v89 = a2;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(v9 + 40);
  uint64_t v11 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v13 = v12[9];
  uint64_t v14 = (void *)(v8 + v13);
  uint64_t v15 = (void *)(v9 + v13);
  uint64_t v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v17 = *((void *)v16 - 1);
  int v18 = *(uint64_t (**)(void *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v21 = v16[6];
      __dst = (char *)v14 + v21;
      uint64_t v22 = (char *)v15 + v21;
      uint64_t v23 = sub_1000ADC28();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = sub_10000693C(&qword_1000D4E10);
        memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(__dst, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      uint64_t v36 = v16[7];
      uint64_t v37 = (char *)v14 + v36;
      uint64_t v38 = (char *)v15 + v36;
      uint64_t v39 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      *(void *)((char *)v14 + v16[8]) = *(void *)((char *)v15 + v16[8]);
      *(void *)((char *)v14 + v16[9]) = *(void *)((char *)v15 + v16[9]);
      *((unsigned char *)v14 + v16[10]) = *((unsigned char *)v15 + v16[10]);
      *((unsigned char *)v14 + v16[11]) = *((unsigned char *)v15 + v16[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v26 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v14, v15, *(void *)(*(void *)(v26 - 8) + 64));
LABEL_13:
    uint64_t v40 = v91;
    uint64_t v41 = v89;
    goto LABEL_14;
  }
  if (v20)
  {
    sub_10002CF74((uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    goto LABEL_7;
  }
  uint64_t v27 = (void *)*v14;
  *uint64_t v14 = *v15;

  uint64_t v28 = (void *)v14[1];
  v14[1] = v15[1];

  uint64_t v29 = v16[6];
  uint64_t v30 = (char *)v14 + v29;
  __dsta = (char *)v15 + v29;
  uint64_t v31 = sub_1000ADC28();
  uint64_t v85 = *(void *)(v31 - 8);
  uint64_t v86 = v30;
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48);
  LODWORD(v30) = v32(v30, 1, v31);
  int v33 = v32(__dsta, 1, v31);
  if (v30)
  {
    if (!v33)
    {
      (*(void (**)(void *, char *, uint64_t))(v85 + 32))(v86, __dsta, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v86, 0, 1, v31);
      goto LABEL_27;
    }
    size_t v34 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v35 = v86;
  }
  else
  {
    if (!v33)
    {
      (*(void (**)(void *, char *, uint64_t))(v85 + 40))(v86, __dsta, v31);
      goto LABEL_27;
    }
    (*(void (**)(void *, uint64_t))(v85 + 8))(v86, v31);
    size_t v34 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v35 = v86;
  }
  memcpy(v35, __dsta, v34);
LABEL_27:
  uint64_t v41 = v89;
  uint64_t v79 = v16[7];
  uint64_t v80 = (char *)v14 + v79;
  uint64_t v81 = (char *)v15 + v79;
  uint64_t v82 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 40))(v80, v81, v82);
  uint64_t v83 = v16[8];
  uint64_t v84 = *(void **)((char *)v14 + v83);
  *(void *)((char *)v14 + v83) = *(void *)((char *)v15 + v83);

  *(void *)((char *)v14 + v16[9]) = *(void *)((char *)v15 + v16[9]);
  *((unsigned char *)v14 + v16[10]) = *((unsigned char *)v15 + v16[10]);
  *((unsigned char *)v14 + v16[11]) = *((unsigned char *)v15 + v16[11]);
  uint64_t v40 = v91;
LABEL_14:
  uint64_t v42 = v12[10];
  uint64_t v43 = *(void **)(v8 + v42);
  *(void *)(v8 + v42) = *(void *)(v9 + v42);

  uint64_t v44 = v12[11];
  uint64_t v45 = (void *)(v8 + v44);
  id v46 = (uint64_t *)(v9 + v44);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *uint64_t v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = v12[12];
  uint64_t v50 = *(void **)(v8 + v49);
  *(void *)(v8 + v49) = *(void *)(v9 + v49);

  uint64_t v51 = v12[13];
  uint64_t v52 = (void *)(v8 + v51);
  uint64_t v53 = (uint64_t *)(v9 + v51);
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  *uint64_t v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = v12[14];
  uint64_t v57 = (void *)(v8 + v56);
  id v58 = (uint64_t *)(v9 + v56);
  uint64_t v60 = *v58;
  uint64_t v59 = v58[1];
  *uint64_t v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v12[15]) = *(unsigned char *)(v9 + v12[15]);
  uint64_t v61 = v12[16];
  uint64_t v62 = (void *)(v8 + v61);
  uint64_t v63 = (uint64_t *)(v9 + v61);
  uint64_t v65 = *v63;
  uint64_t v64 = v63[1];
  *uint64_t v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  *(void *)(v8 + v12[17]) = *(void *)(v9 + v12[17]);
  swift_bridgeObjectRelease();
  uint64_t v66 = v12[18];
  uint64_t v67 = v8 + v66;
  uint64_t v68 = v9 + v66;
  uint64_t v69 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
  *(void *)(v8 + v12[19]) = *(void *)(v9 + v12[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v12[20]) = *(unsigned char *)(v9 + v12[20]);
  uint64_t v70 = *(int *)(v90 + 24);
  id v71 = (void *)(v40 + v70);
  uint64_t v72 = (void *)(v41 + v70);
  uint64_t v73 = sub_1000AF358();
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v75 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v74 + 48);
  LODWORD(v67) = v75(v71, 1, v73);
  int v76 = v75(v72, 1, v73);
  if (!v67)
  {
    if (!v76)
    {
      (*(void (**)(void *, void *, uint64_t))(v74 + 40))(v71, v72, v73);
      return v40;
    }
    (*(void (**)(void *, uint64_t))(v74 + 8))(v71, v73);
    goto LABEL_19;
  }
  if (v76)
  {
LABEL_19:
    uint64_t v77 = sub_10000693C(&qword_1000D5928);
    memcpy(v71, v72, *(void *)(*(void *)(v77 - 8) + 64));
    return v40;
  }
  (*(void (**)(void *, void *, uint64_t))(v74 + 32))(v71, v72, v73);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  return v40;
}

uint64_t sub_10002A96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002A980);
}

uint64_t sub_10002A980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_10000693C(&qword_1000D5928);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_10002AAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002AAE4);
}

uint64_t sub_10002AAE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000ADF08();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_10000693C(&qword_1000D5928);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for TTRNewWidgetTimelineEntry(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D5B50);
}

void sub_10002AC60()
{
  sub_1000ADF08();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TTRNewWidgetViewModel(319);
    if (v1 <= 0x3F)
    {
      sub_10002AD80(319, (unint64_t *)&qword_1000D5B60, (void (*)(uint64_t))&type metadata accessor for TimelineEntryRelevance);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10002AD80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000AF7F8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_10002ADD4(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v8 = a2[7];
    uint64_t v9 = a3[9];
    __dst = (void **)(a1 + v9);
    uint64_t v10 = (void **)((char *)a2 + v9);
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
    uint64_t v14 = v10;
    uint64_t v15 = (int *)v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v14, 1, v15))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v18 = *v14;
      uint64_t v19 = v14[1];
      char *__dst = *v14;
      __dst[1] = v19;
      uint64_t v20 = v15[6];
      uint64_t v64 = (char *)__dst + v20;
      uint64_t v65 = v12;
      uint64_t v69 = v14;
      uint64_t v21 = (char *)v14 + v20;
      uint64_t v22 = sub_1000ADC28();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      id v24 = v18;
      id v25 = v19;
      if (v67(v21, 1, v22))
      {
        uint64_t v26 = sub_10000693C(&qword_1000D4E10);
        memcpy(v64, v21, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v64, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v64, 0, 1, v22);
      }
      uint64_t v27 = v15[7];
      uint64_t v28 = (char *)__dst + v27;
      uint64_t v29 = (char *)v69 + v27;
      uint64_t v30 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v31 = v15[8];
      uint64_t v32 = *(void **)((char *)v69 + v31);
      *(void **)((char *)__dst + v31) = v32;
      *(void **)((char *)__dst + v15[9]) = *(void **)((char *)v69 + v15[9]);
      *((unsigned char *)__dst + v15[10]) = *((unsigned char *)v69 + v15[10]);
      *((unsigned char *)__dst + v15[11]) = *((unsigned char *)v69 + v15[11]);
      int v33 = *(void (**)(void **, void, uint64_t, int *))(v65 + 56);
      id v34 = v32;
      v33(__dst, 0, 1, v15);
    }
    uint64_t v35 = a3[10];
    uint64_t v36 = a3[11];
    __dsta = *(void **)((char *)a2 + v35);
    *(void *)((char *)v4 + v35) = __dsta;
    uint64_t v37 = (void *)((char *)v4 + v36);
    uint64_t v38 = (uint64_t *)((char *)a2 + v36);
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    uint64_t v41 = a3[12];
    uint64_t v42 = a3[13];
    uint64_t v43 = *(void **)((char *)a2 + v41);
    *uint64_t v37 = v39;
    v37[1] = v40;
    *(void *)((char *)v4 + v41) = v43;
    uint64_t v44 = (void *)((char *)v4 + v42);
    uint64_t v45 = *(uint64_t *)((char *)a2 + v42 + 8);
    void *v44 = *(uint64_t *)((char *)a2 + v42);
    v44[1] = v45;
    uint64_t v46 = a3[14];
    uint64_t v47 = a3[15];
    uint64_t v48 = (void *)((char *)v4 + v46);
    uint64_t v49 = (uint64_t *)((char *)a2 + v46);
    uint64_t v50 = *v49;
    uint64_t v51 = v49[1];
    LOBYTE(v49) = *((unsigned char *)a2 + v47);
    *uint64_t v48 = v50;
    v48[1] = v51;
    *((unsigned char *)v4 + v47) = (_BYTE)v49;
    uint64_t v52 = a3[16];
    uint64_t v53 = a3[17];
    uint64_t v54 = (void *)((char *)v4 + v52);
    uint64_t v55 = (uint64_t *)((char *)a2 + v52);
    uint64_t v56 = v55[1];
    uint64_t v57 = *(uint64_t *)((char *)a2 + v53);
    void *v54 = *v55;
    v54[1] = v56;
    *(void *)((char *)v4 + v53) = v57;
    uint64_t v58 = a3[18];
    uint64_t v68 = (char *)v4 + v58;
    uint64_t v70 = (uint64_t)a2 + v58;
    uint64_t v59 = sub_1000ADD48();
    uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16);
    id v60 = __dsta;
    swift_bridgeObjectRetain();
    id v61 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66(v68, v70, v59);
    uint64_t v62 = a3[20];
    *(void *)((char *)v4 + a3[19]) = *(uint64_t *)((char *)a2 + a3[19]);
    *((unsigned char *)v4 + v62) = *((unsigned char *)a2 + v62);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10002B214(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (id *)(a1 + a2[9]);
  int v5 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {

    uint64_t v6 = (char *)v4 + v5[6];
    uint64_t v7 = sub_1000ADC28();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = (char *)v4 + v5[7];
    uint64_t v10 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[18];
  uint64_t v12 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002B448(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = a3[9];
  __dst = (void **)(a1 + v8);
  uint64_t v9 = (void **)(a2 + v8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v10 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void **, uint64_t, int *))(v11 + 48);
  uint64_t v13 = v9;
  uint64_t v14 = (int *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v13, 1, v14))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = *v13;
    uint64_t v17 = v13[1];
    char *__dst = *v13;
    __dst[1] = v17;
    uint64_t v18 = v14[6];
    uint64_t v63 = (char *)__dst + v18;
    uint64_t v65 = v11;
    uint64_t v67 = v13;
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = sub_1000ADC28();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    id v22 = v16;
    id v23 = v17;
    if (v62(v19, 1, v20))
    {
      uint64_t v24 = sub_10000693C(&qword_1000D4E10);
      memcpy(v63, v19, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v63, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v63, 0, 1, v20);
    }
    uint64_t v25 = v14[7];
    uint64_t v26 = (char *)__dst + v25;
    uint64_t v27 = (char *)v67 + v25;
    uint64_t v28 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = v14[8];
    uint64_t v30 = *(void **)((char *)v67 + v29);
    *(void **)((char *)__dst + v29) = v30;
    *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v67 + v14[9]);
    *((unsigned char *)__dst + v14[10]) = *((unsigned char *)v67 + v14[10]);
    *((unsigned char *)__dst + v14[11]) = *((unsigned char *)v67 + v14[11]);
    uint64_t v31 = *(void (**)(void **, void, uint64_t, int *))(v65 + 56);
    id v32 = v30;
    v31(__dst, 0, 1, v14);
  }
  uint64_t v33 = a3[10];
  uint64_t v34 = a3[11];
  __dsta = *(void **)(a2 + v33);
  *(void *)(a1 + v33) = __dsta;
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  uint64_t v38 = v36[1];
  uint64_t v39 = a3[12];
  uint64_t v40 = a3[13];
  uint64_t v41 = *(void **)(a2 + v39);
  *uint64_t v35 = v37;
  v35[1] = v38;
  *(void *)(a1 + v39) = v41;
  uint64_t v42 = (void *)(a1 + v40);
  uint64_t v43 = *(void *)(a2 + v40 + 8);
  *uint64_t v42 = *(void *)(a2 + v40);
  v42[1] = v43;
  uint64_t v44 = a3[14];
  uint64_t v45 = a3[15];
  uint64_t v46 = (void *)(a1 + v44);
  uint64_t v47 = (uint64_t *)(a2 + v44);
  uint64_t v48 = *v47;
  uint64_t v49 = v47[1];
  LOBYTE(v47) = *(unsigned char *)(a2 + v45);
  void *v46 = v48;
  v46[1] = v49;
  *(unsigned char *)(a1 + v45) = (_BYTE)v47;
  uint64_t v50 = a3[16];
  uint64_t v51 = a3[17];
  uint64_t v52 = (void *)(a1 + v50);
  uint64_t v53 = (void *)(a2 + v50);
  uint64_t v54 = v53[1];
  uint64_t v55 = *(void *)(a2 + v51);
  *uint64_t v52 = *v53;
  v52[1] = v54;
  *(void *)(a1 + v51) = v55;
  uint64_t v56 = a3[18];
  uint64_t v66 = a1 + v56;
  uint64_t v68 = a2 + v56;
  uint64_t v57 = sub_1000ADD48();
  uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
  id v58 = __dsta;
  swift_bridgeObjectRetain();
  id v59 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v64(v66, v68, v57);
  uint64_t v60 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v60) = *(unsigned char *)(a2 + v60);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10002B838(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_10002CF74((uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    uint64_t v21 = (void *)*v8;
    id v22 = (void *)*v7;
    void *v7 = *v8;
    id v23 = v21;

    uint64_t v24 = (void *)v7[1];
    uint64_t v25 = (void *)v8[1];
    v7[1] = v25;
    id v26 = v25;

    uint64_t v27 = v9[6];
    uint64_t v28 = (char *)v7 + v27;
    __dsta = (char *)v8 + v27;
    uint64_t v29 = sub_1000ADC28();
    uint64_t v78 = *(void *)(v29 - 8);
    uint64_t v80 = v28;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
    LODWORD(v28) = v30(v28, 1, v29);
    int v31 = v30(__dsta, 1, v29);
    if (v28)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v78 + 16))(v80, __dsta, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v80, 0, 1, v29);
        goto LABEL_18;
      }
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v80;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v78 + 24))(v80, __dsta, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v78 + 8))(v80, v29);
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v80;
    }
    memcpy(v33, __dsta, v32);
LABEL_18:
    uint64_t v42 = v9[7];
    uint64_t v43 = (char *)v7 + v42;
    uint64_t v44 = (char *)v8 + v42;
    uint64_t v45 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
    uint64_t v46 = v9[8];
    uint64_t v47 = *(void **)((char *)v7 + v46);
    uint64_t v48 = *(void **)((char *)v8 + v46);
    *(void *)((char *)v7 + v46) = v48;
    id v49 = v48;

    *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
    *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
    *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v20 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v14 = (void *)*v8;
  void *v7 = *v8;
  uint64_t v79 = (void *)v8[1];
  v7[1] = v79;
  uint64_t v15 = v9[6];
  __dst = (char *)v7 + v15;
  uint64_t v77 = (char *)v8 + v15;
  uint64_t v16 = sub_1000ADC28();
  uint64_t v75 = *(void *)(v16 - 8);
  int v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
  id v17 = v14;
  id v18 = v79;
  if (v76(v77, 1, v16))
  {
    uint64_t v19 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v77, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(__dst, v77, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v34 = v9[7];
  uint64_t v35 = (char *)v7 + v34;
  uint64_t v36 = (char *)v8 + v34;
  uint64_t v37 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = v9[8];
  uint64_t v39 = *(void **)((char *)v8 + v38);
  *(void *)((char *)v7 + v38) = v39;
  *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
  *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
  *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
  uint64_t v40 = *(void (**)(void *, void, uint64_t, int *))(v10 + 56);
  id v41 = v39;
  v40(v7, 0, 1, v9);
LABEL_19:
  uint64_t v50 = a3[10];
  uint64_t v51 = *(void **)(a2 + v50);
  uint64_t v52 = *(void **)(a1 + v50);
  *(void *)(a1 + v50) = v51;
  id v53 = v51;

  uint64_t v54 = a3[11];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  *uint64_t v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[12];
  id v58 = *(void **)(a1 + v57);
  id v59 = *(void **)(a2 + v57);
  *(void *)(a1 + v57) = v59;
  id v60 = v59;

  uint64_t v61 = a3[13];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  *uint64_t v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = a3[14];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (void *)(a2 + v64);
  *uint64_t v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v67 = a3[16];
  uint64_t v68 = (void *)(a1 + v67);
  uint64_t v69 = (void *)(a2 + v67);
  *uint64_t v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v70 = a3[18];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  return a1;
}

uint64_t sub_10002BF14(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = a3[9];
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    _OWORD *v7 = *v8;
    uint64_t v12 = v9[6];
    __dst = (char *)v7 + v12;
    int v13 = (char *)v8 + v12;
    uint64_t v14 = sub_1000ADC28();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v17 = v9[7];
    id v18 = (char *)v7 + v17;
    uint64_t v19 = (char *)v8 + v17;
    uint64_t v20 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    *(void *)((char *)v7 + v9[8]) = *(void *)((char *)v8 + v9[8]);
    *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
    *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
    *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v21 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  uint64_t v22 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  uint64_t v23 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[18];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  uint64_t v29 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  return a1;
}

uint64_t sub_10002C250(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = *((void *)v11 - 1);
  int v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_10002CF74((uint64_t)v9, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    uint64_t v22 = (void *)*v9;
    *uint64_t v9 = *v10;

    uint64_t v23 = (void *)v9[1];
    v9[1] = v10[1];

    uint64_t v24 = v11[6];
    uint64_t v25 = (char *)v9 + v24;
    __dsta = (char *)v10 + v24;
    uint64_t v26 = sub_1000ADC28();
    uint64_t v70 = *(void *)(v26 - 8);
    uint64_t v71 = v25;
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
    LODWORD(v25) = v27(v25, 1, v26);
    int v28 = v27(__dsta, 1, v26);
    if (v25)
    {
      if (!v28)
      {
        (*(void (**)(void *, char *, uint64_t))(v70 + 32))(v71, __dsta, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v26);
        goto LABEL_18;
      }
      size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v30 = v71;
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(void *, char *, uint64_t))(v70 + 40))(v71, __dsta, v26);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v70 + 8))(v71, v26);
      size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v30 = v71;
    }
    memcpy(v30, __dsta, v29);
LABEL_18:
    uint64_t v35 = v11[7];
    uint64_t v36 = (char *)v9 + v35;
    uint64_t v37 = (char *)v10 + v35;
    uint64_t v38 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
    uint64_t v39 = v11[8];
    uint64_t v40 = *(void **)((char *)v9 + v39);
    *(void *)((char *)v9 + v39) = *(void *)((char *)v10 + v39);

    *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
    *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
    *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
    goto LABEL_19;
  }
  if (v15)
  {
LABEL_7:
    uint64_t v21 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  uint64_t v16 = v11[6];
  __dst = (char *)v9 + v16;
  uint64_t v17 = (char *)v10 + v16;
  uint64_t v18 = sub_1000ADC28();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  uint64_t v31 = v11[7];
  size_t v32 = (char *)v9 + v31;
  uint64_t v33 = (char *)v10 + v31;
  uint64_t v34 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  *(void *)((char *)v9 + v11[8]) = *(void *)((char *)v10 + v11[8]);
  *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
  *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
  *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
  (*(void (**)(void *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_19:
  uint64_t v41 = a3[10];
  uint64_t v42 = *(void **)(a1 + v41);
  *(void *)(a1 + v41) = *(void *)(a2 + v41);

  uint64_t v43 = a3[11];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (uint64_t *)(a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  void *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[12];
  id v49 = *(void **)(a1 + v48);
  *(void *)(a1 + v48) = *(void *)(a2 + v48);

  uint64_t v50 = a3[13];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = a3[14];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (uint64_t *)(a2 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  void *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (uint64_t *)(a2 + v60);
  uint64_t v64 = *v62;
  uint64_t v63 = v62[1];
  *uint64_t v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  uint64_t v65 = a3[18];
  uint64_t v66 = a1 + v65;
  uint64_t v67 = a2 + v65;
  uint64_t v68 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 40))(v66, v67, v68);
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  return a1;
}

uint64_t sub_10002C860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002C874);
}

uint64_t sub_10002C874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000693C(&qword_1000D4CD8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000ADD48();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 72);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10002C9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002C9B8);
}

uint64_t sub_10002C9B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_10000693C(&qword_1000D4CD8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000ADD48();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 72);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10002CAE8()
{
  sub_10002AD80(319, (unint64_t *)&unk_1000D5C00, (void (*)(uint64_t))type metadata accessor for TTRNewWidgetViewModel.Reminder);
  if (v0 <= 0x3F)
  {
    sub_1000ADD48();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for TTRNewWidgetViewModel.ShareeIcon(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

void destroy for TTRNewWidgetViewModel.ShareeIcon(id *a1)
{
}

uint64_t assignWithCopy for TTRNewWidgetViewModel.ShareeIcon(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for TTRNewWidgetViewModel.ShareeIcon(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for TTRNewWidgetViewModel.ShareeIcon()
{
  return &type metadata for TTRNewWidgetViewModel.ShareeIcon;
}

uint64_t getEnumTagSinglePayload for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TTRNewWidgetViewModel.BadgeShape(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002CE70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10002CE98(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetViewModel.BadgeShape()
{
  return &type metadata for TTRNewWidgetViewModel.BadgeShape;
}

unint64_t sub_10002CEB8()
{
  unint64_t result = qword_1000D5C70;
  if (!qword_1000D5C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C70);
  }
  return result;
}

uint64_t sub_10002CF0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002CF74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10002CFD4()
{
  unint64_t result = qword_1000D5C88;
  if (!qword_1000D5C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C88);
  }
  return result;
}

unint64_t sub_10002D028()
{
  unint64_t result = qword_1000D5C90;
  if (!qword_1000D5C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C90);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget()
{
  return &type metadata for TTRAnyListWidget;
}

uint64_t sub_10002D090()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10002D0AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10002D124(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for TTRIAnyListComplicationWidgetView.InteractiveReminderView, (void (*)(uint64_t, uint64_t, uint64_t))sub_100043D14, &qword_1000D5498).n128_u64[0];
  return result;
}

__n128 sub_10002D124@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v20 = a17;
  uint64_t v21 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  int v24 = a8 & 1;
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (v24) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000AF708();
    uint64_t v31 = (void *)sub_1000AECF8();
    sub_1000AE748();

    uint64_t v21 = a18;
    uint64_t v20 = a17;
  }
  sub_1000AE988();
  v20(v18, a9, a16);
  size_t v32 = (_OWORD *)(a9 + *(int *)(sub_10000693C(v21) + 36));
  v32[4] = v38;
  void v32[5] = v39;
  v32[6] = v40;
  _OWORD *v32 = v34;
  v32[1] = v35;
  __n128 result = v37;
  v32[2] = v36;
  v32[3] = v37;
  return result;
}

uint64_t sub_10002D308@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000AF708();
    uint64_t v23 = (void *)sub_1000AECF8();
    sub_1000AE748();
  }
  sub_1000AE988();
  long long v24 = v13[1];
  *a9 = *v13;
  a9[1] = v24;
  long long v25 = v13[3];
  a9[2] = v13[2];
  a9[3] = v25;
  a9[8] = v31;
  a9[9] = v32;
  a9[10] = v33;
  a9[4] = v27;
  a9[5] = v28;
  a9[6] = v29;
  a9[7] = v30;

  return sub_1000581D0((uint64_t)v13);
}

uint64_t sub_10002D4C0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000AF708();
    uint64_t v23 = (void *)sub_1000AECF8();
    sub_1000AE748();
  }
  sub_1000AE988();
  long long v24 = v13[1];
  *a9 = *v13;
  a9[1] = v24;
  long long v25 = v13[3];
  a9[2] = v13[2];
  a9[3] = v25;
  a9[8] = v31;
  a9[9] = v32;
  a9[10] = v33;
  a9[4] = v27;
  a9[5] = v28;
  a9[6] = v29;
  a9[7] = v30;

  return swift_retain();
}

__n128 sub_10002D678@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000AF708();
    long long v28 = (void *)sub_1000AECF8();
    sub_1000AE748();

    uint64_t v19 = a16;
  }
  sub_1000AE988();
  uint64_t v29 = sub_10000693C(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  long long v30 = (_OWORD *)(a9 + *(int *)(sub_10000693C(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *long long v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

uint64_t sub_10002D874@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000AF708();
    uint64_t v23 = (void *)sub_1000AECF8();
    sub_1000AE748();
  }
  sub_1000AE988();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 152) = v31;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 88) = v27;
  *(_OWORD *)(a9 + 104) = v28;
  *(unsigned char *)(a9 + 80) = *(unsigned char *)(v13 + 80);
  *(_OWORD *)(a9 + 120) = v29;

  return sub_1000579A0(v13);
}

uint64_t sub_10002DA48(uint64_t a1, char a2)
{
  return sub_10002E128(a1, a2, 1953394502, 0xE400000000000000);
}

uint64_t sub_10002DA58@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_1000AEB28();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  int v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000693C(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D6C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_1000AF708();
    uint64_t v21 = sub_1000AECF8();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_1000A53D8(v27, v25, &v29);
      sub_1000AF808();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1000AEB18();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_10002DD10(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000AEB28();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1000AF708();
  uint64_t v9 = sub_1000AECF8();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1000A53D8(1819242306, 0xE400000000000000, &v14);
    sub_1000AF808();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000AEB18();
  swift_getAtKeyPath();
  sub_10004C8C4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_10002DF14(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000AEB28();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_1000AF708();
    uint64_t v9 = sub_1000AECF8();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_1000A53D8(0x6C616E6F6974704FLL, 0xEF3E726F6C6F433CLL, &v14);
      sub_1000AF808();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1000AEB18();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_10002E128(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1000AEB28();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v12 = sub_1000AF708();
    uint64_t v13 = sub_1000AECF8();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      unint64_t v18 = a4;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v19 = sub_1000A53D8(a3, v18, &v20);
      sub_1000AF808();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1000AEB18();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v20;
  }
  return a1;
}

double sub_10002E330(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000AEB28();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1000AF708();
  uint64_t v9 = sub_1000AECF8();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1000A53D8(0x74616F6C464743, 0xE700000000000000, &v14);
    sub_1000AF808();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000AEB18();
  swift_getAtKeyPath();
  sub_10004C8C4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

__n128 sub_10002E53C()
{
  __asm { FMOV            V0.2D, #20.0 }
  xmmword_1000E1E60 = (__int128)result;
  return result;
}

uint64_t sub_10002E54C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v1 = sub_1000AE1F8();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000693C(&qword_1000D5D20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000693C(&qword_1000D5D28);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  uint64_t v41 = v10;
  __chkstk_darwin(v9);
  os_log_type_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000693C(&qword_1000D5D30);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  __chkstk_darwin(v13);
  long long v39 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for REMWidgetRefresh.WidgetKind.widgetForAnyList(_:), v1);
  sub_1000AE1E8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1000AE218();
  uint64_t v45 = sub_1000914A0();
  uint64_t v46 = v16;
  type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper(0);
  sub_100043D7C(&qword_1000D5D38, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper);
  sub_100043A70();
  sub_1000AF2D8();
  sub_1000AEB88();
  uint64_t v17 = sub_1000AEEC8();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v22 = sub_100009F50(&qword_1000D5D48, &qword_1000D5D20);
  sub_1000AEC48();
  sub_100006FE0(v17, v19, v21);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000AEB88();
  uint64_t v23 = sub_1000AEEC8();
  uint64_t v25 = v24;
  LOBYTE(v8) = v26 & 1;
  uint64_t v45 = v5;
  uint64_t v46 = v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = v39;
  uint64_t v28 = v40;
  sub_1000AEC08();
  sub_100006FE0(v23, v25, (char)v8);
  swift_bridgeObjectRelease();
  uint64_t v30 = v28;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v28);
  long long v31 = sub_100013870();
  sub_10000693C(&qword_1000D4B08);
  uint64_t v32 = sub_1000AF2A8();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1000B0270;
  (*(void (**)(unint64_t, void, uint64_t))(v33 + 104))(v35 + v34, enum case for WidgetFamily.accessoryRectangular(_:), v32);
  uint64_t v45 = (uint64_t)v31;
  sub_10006C704(v35);
  uint64_t v45 = v30;
  uint64_t v46 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = v42;
  sub_1000AEC28();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v29, v36);
}

uint64_t sub_10002EB8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  sub_100043D14(a1 + *(int *)(v4 + 20), a2, type metadata accessor for TTRNewWidgetViewModel);
  uint64_t v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper(0) + 20));
  *uint64_t v5 = swift_getKeyPath();
  sub_10000693C(&qword_1000D5D50);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10002EC24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v52 = a1;
  uint64_t v3 = sub_1000AECE8();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10000693C(&qword_1000D5F90);
  __chkstk_darwin(v42);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10000693C(&qword_1000D5F98);
  uint64_t v8 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000693C(&qword_1000D5FA0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v41 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10000693C(&qword_1000D5FA8);
  __chkstk_darwin(v46);
  uint64_t v50 = (uint64_t)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10000693C(&qword_1000D5FB0);
  __chkstk_darwin(v47);
  uint64_t v51 = (uint64_t)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_10000693C(&qword_1000D5FB8);
  __chkstk_darwin(v49);
  uint64_t v48 = (uint64_t)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F208(v2, (uint64_t)v7);
  sub_1000AECD8();
  sub_1000AF1B8();
  sub_10000693C(&qword_1000D5FC0);
  sub_10004726C(&qword_1000D5FC8, &qword_1000D5F90, (void (*)(void))sub_1000472D8);
  sub_1000474C0();
  uint64_t v17 = (uint64_t)v41;
  sub_1000AEFE8();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v45);
  sub_100009EF4((uint64_t)v7, &qword_1000D5F90);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = v40[1];
  uint64_t v20 = sub_10002FBE8();
  uint64_t v21 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v17, v10, v43);
  uint64_t v22 = (uint64_t *)(v17 + *(int *)(v12 + 44));
  *uint64_t v22 = KeyPath;
  v22[1] = v20;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
  if (sub_10004336C())
  {
    uint64_t v25 = sub_1000AF098();
  }
  else
  {
    id v26 = objc_retain(*(id *)(v19
                            + *(int *)(v24 + 20)
                            + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 40)));
    uint64_t v25 = sub_1000AF0C8();
  }
  uint64_t v27 = v25;
  uint64_t v28 = v50;
  sub_100009D6C(v17, v50, &qword_1000D5FA0);
  uint64_t v29 = (uint64_t *)(v28 + *(int *)(v46 + 36));
  *uint64_t v29 = v23;
  v29[1] = v27;
  sub_100009EF4(v17, &qword_1000D5FA0);
  uint64_t v30 = swift_getKeyPath();
  if (sub_10004336C())
  {
    if (qword_1000D4938 != -1) {
      swift_once();
    }
    long long v31 = &qword_1000E1E78;
  }
  else
  {
    if (qword_1000D4918 != -1) {
      swift_once();
    }
    long long v31 = &qword_1000D5D18;
  }
  uint64_t v32 = *v31;
  swift_retain();
  uint64_t v33 = v51;
  sub_100009D6C(v28, v51, &qword_1000D5FA8);
  unint64_t v34 = (uint64_t *)(v33 + *(int *)(v47 + 36));
  *unint64_t v34 = v30;
  v34[1] = v32;
  sub_100009EF4(v28, &qword_1000D5FA8);
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = sub_100030114();
  uint64_t v37 = v48;
  sub_100009D6C(v33, v48, &qword_1000D5FB0);
  uint64_t v38 = (uint64_t *)(v37 + *(int *)(v49 + 36));
  *uint64_t v38 = v35;
  v38[1] = v36;
  sub_100009EF4(v33, &qword_1000D5FB0);
  return sub_10001D8DC(v37, v52, &qword_1000D5FB8);
}

uint64_t sub_10002F208@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v53 = type metadata accessor for TTRAnyListWidget.InteractiveLarge(0);
  __chkstk_darwin(v53);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for TTRAnyListWidget.InteractiveMedium(0);
  __chkstk_darwin(v47);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_10000693C(&qword_1000D6058);
  __chkstk_darwin(v49);
  uint64_t v51 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10000693C(&qword_1000D6060);
  __chkstk_darwin(v46);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10000693C(&qword_1000D5FE8);
  __chkstk_darwin(v50);
  uint64_t v48 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText - 8);
  uint64_t v13 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10000693C(&qword_1000D6068);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for TTRNewWidgetViewModel(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (int *)type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v44 - v24;
  if (*a1)
  {
    if (*a1 == 1)
    {
      uint64_t v26 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
      sub_100043D14((uint64_t)&a1[*(int *)(v26 + 20)], (uint64_t)v19, type metadata accessor for TTRNewWidgetViewModel);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v28 = (int *)v47;
      *(void *)&v6[*(int *)(v47 + 20)] = KeyPath;
      sub_10000693C(&qword_1000D6070);
      swift_storeEnumTagMultiPayload();
      sub_1000478F8((uint64_t)v19, (uint64_t)v6, type metadata accessor for TTRNewWidgetViewModel);
      *(void *)&v6[v28[6]] = 0x4026000000000000;
      *(void *)&v6[v28[7]] = 0x4026000000000000;
      *(void *)&v6[v28[8]] = 0x4020000000000000;
      sub_100043D14((uint64_t)v6, (uint64_t)v9, type metadata accessor for TTRAnyListWidget.InteractiveMedium);
      swift_storeEnumTagMultiPayload();
      sub_100043D7C(&qword_1000D5FF0, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveSmall);
      sub_100043D7C(&qword_1000D5FF8, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveMedium);
      uint64_t v29 = (uint64_t)v48;
      sub_1000AEC68();
      sub_100009D6C(v29, v51, &qword_1000D5FE8);
      swift_storeEnumTagMultiPayload();
      sub_100047384();
      sub_100043D7C(&qword_1000D6000, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveLarge);
      sub_1000AEC68();
      sub_100009EF4(v29, &qword_1000D5FE8);
      uint64_t v30 = type metadata accessor for TTRAnyListWidget.InteractiveMedium;
      uint64_t v31 = (uint64_t)v6;
    }
    else
    {
      uint64_t v42 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
      sub_100043D14((uint64_t)&a1[*(int *)(v42 + 20)], (uint64_t)v19, type metadata accessor for TTRNewWidgetViewModel);
      *(void *)&v4[*(int *)(v53 + 20)] = swift_getKeyPath();
      sub_10000693C(&qword_1000D6070);
      swift_storeEnumTagMultiPayload();
      sub_1000478F8((uint64_t)v19, (uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel);
      sub_100043D14((uint64_t)v4, v51, type metadata accessor for TTRAnyListWidget.InteractiveLarge);
      swift_storeEnumTagMultiPayload();
      sub_100047384();
      sub_100043D7C(&qword_1000D6000, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveLarge);
      sub_1000AEC68();
      uint64_t v30 = type metadata accessor for TTRAnyListWidget.InteractiveLarge;
      uint64_t v31 = (uint64_t)v4;
    }
  }
  else
  {
    uint64_t v32 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
    sub_100043D14((uint64_t)&a1[*(int *)(v32 + 20)], (uint64_t)v19, type metadata accessor for TTRNewWidgetViewModel);
    *uint64_t v16 = swift_getKeyPath();
    sub_10000693C(&qword_1000D6070);
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = swift_getKeyPath();
    uint64_t v33 = swift_getKeyPath();
    uint64_t v34 = swift_getKeyPath();
    sub_1000478F8((uint64_t)v19, (uint64_t)v23, type metadata accessor for TTRNewWidgetViewModel);
    uint64_t v35 = &v23[v20[5]];
    *(void *)uint64_t v35 = swift_getKeyPath();
    v35[8] = 0;
    uint64_t v36 = (uint64_t *)&v23[v20[6]];
    uint64_t *v36 = swift_getKeyPath();
    sub_10000693C(&qword_1000D5E30);
    swift_storeEnumTagMultiPayload();
    sub_10001D8DC((uint64_t)v16, (uint64_t)&v23[v20[7]], &qword_1000D6068);
    uint64_t v37 = &v23[v20[8]];
    *(void *)uint64_t v37 = v45;
    v37[8] = 0;
    uint64_t v38 = &v23[v20[9]];
    *(void *)uint64_t v38 = v33;
    v38[8] = 0;
    long long v39 = &v23[v20[10]];
    *(void *)long long v39 = v34;
    v39[8] = 0;
    uint64_t v40 = (uint64_t)&v23[v20[11]];
    *uint64_t v13 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    sub_1000478F8((uint64_t)v13, v40, type metadata accessor for IsVibrantText);
    *(void *)&v23[v20[12]] = 0;
    *(void *)&v23[v20[13]] = 0x4040800000000000;
    sub_1000478F8((uint64_t)v23, (uint64_t)v25, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    sub_100043D14((uint64_t)v25, (uint64_t)v9, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    swift_storeEnumTagMultiPayload();
    sub_100043D7C(&qword_1000D5FF0, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    sub_100043D7C(&qword_1000D5FF8, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveMedium);
    uint64_t v41 = (uint64_t)v48;
    sub_1000AEC68();
    sub_100009D6C(v41, v51, &qword_1000D5FE8);
    swift_storeEnumTagMultiPayload();
    sub_100047384();
    sub_100043D7C(&qword_1000D6000, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveLarge);
    sub_1000AEC68();
    sub_100009EF4(v41, &qword_1000D5FE8);
    uint64_t v30 = type metadata accessor for TTRAnyListWidget.InteractiveSmall;
    uint64_t v31 = (uint64_t)v25;
  }
  return sub_100043DC4(v31, v30);
}

uint64_t sub_10002FB8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AE928();
  uint64_t result = sub_1000AED08();
  *(_WORD *)a1 = 256;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10002FBC8()
{
  return sub_100041F48((void (*)(void))sub_1000477AC);
}

uint64_t sub_10002FBE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AE968();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v25 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = sub_1000AF268();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AE1B8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for REMFeatureFlags.accentableWidgets(_:), v11);
  char v15 = sub_1000AE1A8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
    sub_10002DA58(&qword_1000D5E30, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B7C90, (uint64_t)v10);
    char v16 = sub_100030368();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v16) {
      return sub_1000AF068();
    }
  }
  uint64_t v18 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
  if (sub_10004336C())
  {
    if (qword_1000D4938 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_1000E1E78;
    swift_retain();
  }
  else
  {
    sub_10002DA58(&qword_1000D5ED8, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x80000001000B7CB0, (uint64_t)v6);
    sub_100043D7C(&qword_1000D6040, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    uint64_t v19 = v25;
    sub_1000AF828();
    sub_100043D7C(&qword_1000D6048, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    char v20 = sub_1000AF448();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v26 + 8);
    v21(v19, v2);
    v21(v6, v2);
    id v22 = objc_retain(*(id *)(v1
                            + *(int *)(v18 + 20)
                            + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 40)));
    uint64_t v17 = sub_1000AF0C8();
    if ((v20 & 1) == 0)
    {
      uint64_t v23 = sub_1000AF088();
      swift_release();
      return v23;
    }
  }
  return v17;
}

uint64_t sub_100030038()
{
  sub_100047758();
  sub_1000AEB38();
  return v1;
}

uint64_t sub_100030074()
{
  return sub_1000AEB48();
}

uint64_t sub_1000300D4()
{
  return sub_100041F48((void (*)(void))sub_100047704);
}

uint64_t sub_1000300F4()
{
  return sub_100041F48((void (*)(void))sub_1000476B0);
}

uint64_t sub_100030114()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v19 - v6;
  if (!*v0)
  {
    char v8 = sub_10004336C();
    sub_100043D14((uint64_t)v1, (uint64_t)v7, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    if (v8)
    {
      uint64_t v9 = &v7[*(int *)(v2 + 28)];
      uint64_t v10 = *(void *)v9;
      char v11 = v9[8];
      sub_10004C4D4(*(void *)v9, v11);
      char v12 = sub_10002DD10(v10, v11);
      sub_10004C8C4(v10, v11);
      sub_100043DC4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
      if ((v12 & 1) == 0) {
        return sub_1000AF098();
      }
    }
    else
    {
      sub_100043DC4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    }
    if (!*v1)
    {
      char v14 = sub_10004336C();
      sub_100043D14((uint64_t)v1, (uint64_t)v5, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
      if (v14)
      {
        char v15 = &v5[*(int *)(v2 + 28)];
        uint64_t v16 = *(void *)v15;
        char v17 = v15[8];
        sub_10004C4D4(*(void *)v15, v17);
        char v18 = sub_10002DD10(v16, v17);
        sub_10004C8C4(v16, v17);
        sub_100043DC4((uint64_t)v5, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
        if ((v18 & 1) == 0) {
          return sub_1000AF0A8();
        }
      }
      else
      {
        sub_100043DC4((uint64_t)v5, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
      }
    }
  }
  if (qword_1000D48F8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_100030368()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AF268();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v8 = (char *)&v13 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v13 - v7, v1, v2);
  sub_1000AF248();
  sub_100043D7C(&qword_1000D6030, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v9 = sub_1000AF448();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  if ((v9 & 1) == 0)
  {
    sub_1000AF258();
    char v11 = sub_1000AF448();
    v10(v6, v2);
    if ((v11 & 1) == 0)
    {
      sub_1000AF238();
      sub_1000AF448();
      v10(v6, v2);
    }
  }
  v10(v8, v2);
  return v9 & 1;
}

uint64_t sub_100030554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v24 = sub_10000693C(&qword_1000D5DF8);
  __chkstk_darwin(v24);
  uint64_t v25 = (uint64_t)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AE968();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s10WidgetViewVMa_0();
  __chkstk_darwin(v7);
  char v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000693C(&qword_1000D5E00);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - v15;
  char v17 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 80));
  type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper(0);
  sub_10002DA58(&qword_1000D5D50, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v9);
  sub_100043D14(a1, (uint64_t)&v9[*(int *)(v7 + 20)], type metadata accessor for TTRNewWidgetViewModel);
  if (v17)
  {
    sub_1000AE958();
    uint64_t v20 = sub_100043D7C(&qword_1000D5E08, (void (*)(uint64_t))_s10WidgetViewVMa_0);
    sub_1000AF018();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    sub_100043DC4((uint64_t)v9, (uint64_t (*)(void))_s10WidgetViewVMa_0);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v25, v16, v10);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = v7;
    uint64_t v28 = v20;
    swift_getOpaqueTypeConformance2();
    sub_1000AEC68();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  else
  {
    sub_100043D14((uint64_t)v9, v25, (uint64_t (*)(void))_s10WidgetViewVMa_0);
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = sub_100043D7C(&qword_1000D5E08, (void (*)(uint64_t))_s10WidgetViewVMa_0);
    uint64_t v27 = v7;
    uint64_t v28 = v18;
    swift_getOpaqueTypeConformance2();
    sub_1000AEC68();
    return sub_100043DC4((uint64_t)v9, (uint64_t (*)(void))_s10WidgetViewVMa_0);
  }
}

uint64_t sub_1000309DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100030554(v1, a1);
}

uint64_t sub_1000309E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000693C(&qword_1000D6918);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = sub_10000693C(&qword_1000D6920);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = sub_1000AEB78();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v12 = (uint64_t)&v11[*(int *)(sub_10000693C(&qword_1000D6928) + 44)];
  *(void *)uint64_t v8 = sub_1000AEBD8();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v13 = sub_10000693C(&qword_1000D6930);
  sub_100030BB4(v1, (uint64_t)&v8[*(int *)(v13 + 44)]);
  sub_100009D6C((uint64_t)v8, (uint64_t)v6, &qword_1000D6918);
  sub_100009D6C((uint64_t)v6, v12, &qword_1000D6918);
  uint64_t v14 = v12 + *(int *)(sub_10000693C(&qword_1000D6938) + 48);
  *(void *)uint64_t v14 = 0x4020000000000000;
  *(unsigned char *)(v14 + 8) = 0;
  sub_100009EF4((uint64_t)v8, &qword_1000D6918);
  sub_100009EF4((uint64_t)v6, &qword_1000D6918);
  sub_100030EA8(v1, &qword_1000D6940, &qword_1000D6948, &qword_1000D6920, &qword_1000D6950, a1);
  return sub_100009EF4((uint64_t)v11, &qword_1000D6920);
}

uint64_t sub_100030BB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRAnyListWidget.TitleTextView(0);
  uint64_t v5 = (int *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v34 = *(void **)((char *)a1 + v11[12]);
  uint64_t v12 = v11[15];
  uint64_t v13 = (void *)((char *)a1 + v11[14]);
  uint64_t v14 = v13[1];
  uint64_t v30 = *v13;
  int v33 = *((unsigned __int8 *)a1 + v12);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v16 = a1[2];
  uint64_t v17 = a1[4];
  uint64_t v31 = a1[3];
  uint64_t v32 = v16;
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = swift_getKeyPath();
  sub_100043D14((uint64_t)a1, (uint64_t)v8, type metadata accessor for TTRNewWidgetViewModel);
  *(void *)&v8[v5[7]] = 3;
  uint64_t v20 = &v8[v5[8]];
  *(void *)uint64_t v20 = swift_getKeyPath();
  v20[8] = 0;
  uint64_t v21 = &v8[v5[9]];
  *(void *)uint64_t v21 = swift_getKeyPath();
  v21[8] = 0;
  uint64_t v22 = (uint64_t *)&v8[v5[10]];
  *uint64_t v22 = swift_getKeyPath();
  sub_10000693C(&qword_1000D5ED8);
  swift_storeEnumTagMultiPayload();
  sub_1000478F8((uint64_t)v8, (uint64_t)v10, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_100043D14((uint64_t)v10, (uint64_t)v8, type metadata accessor for TTRAnyListWidget.TitleTextView);
  uint64_t v23 = v34;
  uint64_t v24 = v30;
  *(void *)a2 = v34;
  *(void *)(a2 + 8) = v24;
  *(void *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 24) = v33;
  *(void *)(a2 + 32) = KeyPath;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  uint64_t v25 = v31;
  *(void *)(a2 + 64) = v32;
  *(void *)(a2 + 72) = v25;
  *(void *)(a2 + 80) = v17;
  *(void *)(a2 + 88) = v18;
  *(unsigned char *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = v19;
  *(unsigned char *)(a2 + 112) = 0;
  uint64_t v26 = sub_10000693C(&qword_1000D6958);
  sub_100043D14((uint64_t)v8, a2 + *(int *)(v26 + 80), type metadata accessor for TTRAnyListWidget.TitleTextView);
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  id v27 = v23;
  sub_100043DC4((uint64_t)v10, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_100043DC4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.TitleTextView);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100030EA8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v48 = a3;
  uint64_t v52 = a6;
  uint64_t v53 = sub_1000AEBB8();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v50 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AECC8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10000693C(a2);
  uint64_t v46 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10000693C(a3);
  uint64_t v17 = __chkstk_darwin(v47);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v43 = (char *)&v43 - v21;
  __chkstk_darwin(v20);
  uint64_t v49 = (char *)&v43 - v22;
  sub_1000AECA8();
  uint64_t v23 = sub_10000693C(a4);
  uint64_t v24 = sub_100009F50(v45, a4);
  sub_1000AEFF8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v25 = a1;
  uint64_t v26 = sub_100042DFC(a1);
  uint64_t v28 = v27;
  LOBYTE(a1) = v29 & 1;
  uint64_t v54 = v23;
  uint64_t v55 = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v44;
  sub_1000AEF78();
  sub_100006FE0(v26, v28, (char)a1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v30);
  uint64_t v31 = sub_100042F8C((uint64_t)v25);
  uint64_t v33 = v32;
  LOBYTE(v26) = v34 & 1;
  uint64_t v35 = (uint64_t)v43;
  sub_1000AE8D8();
  sub_100006FE0(v31, v33, v26);
  swift_bridgeObjectRelease();
  uint64_t v36 = v48;
  sub_100009EF4((uint64_t)v19, v48);
  uint64_t v38 = *v25;
  uint64_t v37 = v25[1];
  v56._countAndFlagsBits = 0xD000000000000047;
  v58._countAndFlagsBits = 0xD00000000000004CLL;
  v56._object = (void *)0x80000001000B7D00;
  v57._object = (void *)0x80000001000B7D50;
  v58._object = (void *)0x80000001000B7D80;
  v57._countAndFlagsBits = 0xD000000000000022;
  sub_1000AE118(v56, v57, v58);
  sub_10000693C(&qword_1000D52E8);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1000B0270;
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = sub_10002CFD4();
  *(void *)(v39 + 32) = v38;
  *(void *)(v39 + 40) = v37;
  swift_bridgeObjectRetain();
  sub_1000AF488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t)v49;
  sub_1000AE8C8();
  swift_bridgeObjectRelease();
  sub_100009EF4(v35, v36);
  uint64_t v41 = v50;
  sub_1000AEBA8();
  sub_1000AE8E8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v41, v53);
  return sub_100009EF4(v40, v36);
}

uint64_t sub_1000313B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D69E0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23 - v8;
  *(void *)uint64_t v9 = sub_1000AEBD8();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v10 = sub_10000693C(&qword_1000D69E8);
  sub_10003156C(a1, (uint64_t)&v9[*(int *)(v10 + 44)]);
  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v12 = *(void **)((char *)a1 + v11[12]);
  uint64_t v13 = (void *)((char *)a1 + v11[14]);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  char v16 = *((unsigned char *)a1 + v11[15]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100009D6C((uint64_t)v9, (uint64_t)v7, &qword_1000D69E0);
  sub_100009D6C((uint64_t)v7, a2, &qword_1000D69E0);
  uint64_t v18 = sub_10000693C(&qword_1000D69F0);
  uint64_t v19 = a2 + *(int *)(v18 + 48);
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  uint64_t v20 = a2 + *(int *)(v18 + 64);
  *(void *)uint64_t v20 = v12;
  *(void *)(v20 + 8) = v15;
  *(void *)(v20 + 16) = v14;
  *(unsigned char *)(v20 + 24) = v16;
  *(void *)(v20 + 32) = KeyPath;
  *(unsigned char *)(v20 + 40) = 0;
  swift_bridgeObjectRetain_n();
  swift_retain();
  id v21 = v12;
  sub_100009EF4((uint64_t)v9, &qword_1000D69E0);
  swift_release();
  swift_bridgeObjectRelease();

  return sub_100009EF4((uint64_t)v7, &qword_1000D69E0);
}

uint64_t sub_10003156C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRAnyListWidget.TitleTextView(0);
  uint64_t v5 = (int *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = a1[2];
  uint64_t v23 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = swift_getKeyPath();
  swift_bridgeObjectRetain();
  char v15 = sub_1000AED08();
  sub_100043D14((uint64_t)a1, (uint64_t)v8, type metadata accessor for TTRNewWidgetViewModel);
  *(void *)&v8[v5[7]] = 1;
  char v16 = &v8[v5[8]];
  *(void *)char v16 = swift_getKeyPath();
  v16[8] = 0;
  uint64_t v17 = &v8[v5[9]];
  *(void *)uint64_t v17 = swift_getKeyPath();
  v17[8] = 0;
  uint64_t v18 = (uint64_t *)&v8[v5[10]];
  *uint64_t v18 = swift_getKeyPath();
  sub_10000693C(&qword_1000D5ED8);
  swift_storeEnumTagMultiPayload();
  sub_1000478F8((uint64_t)v8, (uint64_t)v10, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_100043D14((uint64_t)v10, (uint64_t)v8, type metadata accessor for TTRAnyListWidget.TitleTextView);
  uint64_t v19 = v23;
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v19;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = KeyPath;
  *(unsigned char *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = v14;
  *(unsigned char *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = v15;
  *(void *)(a2 + 64) = 0x4008000000000000;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  *(unsigned char *)(a2 + 96) = 0;
  uint64_t v20 = sub_10000693C(&qword_1000D69F8);
  sub_100043D14((uint64_t)v8, a2 + *(int *)(v20 + 48), type metadata accessor for TTRAnyListWidget.TitleTextView);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100043DC4((uint64_t)v10, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_100043DC4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.TitleTextView);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000317E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000693C(&qword_1000D69B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = sub_1000AEB78();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v6 = sub_10000693C(&qword_1000D69C0);
  sub_1000313B8(v1, (uint64_t)&v5[*(int *)(v6 + 44)]);
  sub_100030EA8(v1, &qword_1000D69C8, &qword_1000D69D0, &qword_1000D69B8, &qword_1000D69D8, a1);
  return sub_100009EF4((uint64_t)v5, &qword_1000D69B8);
}

uint64_t sub_1000318BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v51 = a1;
  uint64_t v44 = sub_1000AE1B8();
  uint64_t v43 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AE968();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v49 = sub_10000693C(&qword_1000D6B48);
  __chkstk_darwin(v49);
  uint64_t v46 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10000693C(&qword_1000D6B50);
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v47 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000693C(&qword_1000D6B58);
  __chkstk_darwin(v14 - 8);
  uint64_t v45 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1[1];
  uint64_t v42 = *v1;
  uint64_t v17 = (int *)type metadata accessor for TTRAnyListWidget.TitleTextView(0);
  swift_bridgeObjectRetain();
  sub_10002DA58(&qword_1000D5ED8, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x80000001000B7CB0, (uint64_t)v11);
  sub_100043D7C(&qword_1000D6040, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  sub_1000AF828();
  sub_100043D7C(&qword_1000D6048, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v18 = sub_1000AF448();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v9, v5);
  v19(v11, v5);
  if (v18) {
    uint64_t v20 = *(uint64_t *)((char *)v2 + v17[5]);
  }
  else {
    uint64_t v20 = 1;
  }
  uint64_t KeyPath = swift_getKeyPath();
  char v22 = *((unsigned char *)v2 + v17[6] + 8);
  uint64_t v23 = swift_retain();
  uint64_t v24 = sub_10002E128(v23, v22, 1953394502, 0xE400000000000000);
  swift_release();
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = (char *)v2 + v17[7];
  uint64_t v27 = *(void *)v26;
  char v28 = v26[8];
  j__swift_retain();
  uint64_t v29 = sub_10002DF14(v27, v28);
  j__swift_release();
  uint64_t v30 = swift_getKeyPath();
  uint64_t v54 = v42;
  uint64_t v55 = v16;
  char v56 = 0;
  Swift::String v57 = _swiftEmptyArrayStorage;
  uint64_t v58 = KeyPath;
  uint64_t v59 = v20;
  char v60 = 0;
  uint64_t v61 = v25;
  uint64_t v62 = v24;
  uint64_t v63 = v30;
  uint64_t v64 = v29;
  uint64_t v31 = v43;
  uint64_t v32 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v4, enum case for REMFeatureFlags.accentableWidgets(_:), v44);
  sub_1000AE1A8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v32);
  uint64_t v33 = sub_10000693C(&qword_1000D6B60);
  sub_10000693C(&qword_1000D6B68);
  unint64_t v34 = sub_10005932C();
  uint64_t v52 = v33;
  unint64_t v53 = v34;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = (uint64_t)v46;
  sub_1000AEEF8();
  sub_100006FE0(v54, v55, v56);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v36 = sub_10005E534(&qword_1000D6B88, &qword_1000D6B48, &qword_1000D6B60, (void (*)(void))sub_10005932C);
  uint64_t v37 = v47;
  uint64_t v38 = v49;
  sub_1000AEFC8();
  sub_100009EF4(v35, &qword_1000D6B48);
  uint64_t v54 = v38;
  uint64_t v55 = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v39 = (uint64_t)v45;
  uint64_t v40 = v50;
  sub_1000AEF88();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v40);
  return sub_10001D8DC(v39, v51, &qword_1000D6B58);
}

uint64_t sub_100031F30()
{
  return sub_1000AEF08();
}

uint64_t sub_100031FC4()
{
  return sub_100041F48((void (*)(void))sub_10004F21C);
}

uint64_t sub_100031FE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v2 = sub_1000AE9D8();
  uint64_t v70 = *(void *)(v2 - 8);
  uint64_t v71 = v2;
  __chkstk_darwin(v2);
  uint64_t v69 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000AE9B8();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v59 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000AE9E8();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  char v56 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10000693C(&qword_1000D6AE0);
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v52 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000693C(&qword_1000D6AE8) - 8;
  __chkstk_darwin(v54);
  unint64_t v53 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10000693C(&qword_1000D6AF0) - 8;
  __chkstk_darwin(v60);
  uint64_t v58 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10000693C(&qword_1000D6AF8);
  __chkstk_darwin(v68);
  uint64_t v62 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v57 = *(void *)(v1 + 8);
  char v11 = *(unsigned char *)(v1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_retain();
  sub_10002E128(v12, v11, 1953394502, 0xE400000000000000);
  swift_release();
  uint64_t v55 = v10;
  uint64_t v13 = sub_1000AEEB8();
  uint64_t v15 = v14;
  char v17 = v16;
  swift_bridgeObjectRelease();
  swift_release();
  char v18 = v17 & 1;
  char v19 = *(unsigned char *)(v1 + 48);
  uint64_t v20 = swift_retain();
  uint64_t v21 = sub_10002E128(v20, v19, 0x726F6C6F43, 0xE500000000000000);
  swift_release();
  uint64_t v73 = v21;
  uint64_t v22 = sub_1000AEE98();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  sub_100006FE0(v13, v15, v18);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v73 = v22;
  uint64_t v74 = v24;
  char v75 = v28;
  uint64_t v76 = v26;
  uint64_t v29 = v52;
  sub_1000AEF58();
  sub_100006FE0(v22, v24, v28);
  swift_bridgeObjectRelease();
  uint64_t v30 = v59;
  sub_1000AE9A8();
  uint64_t v31 = v56;
  sub_1000AE998();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v30, v66);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = (uint64_t)v53;
  unint64_t v34 = (uint64_t *)&v53[*(int *)(v54 + 44)];
  uint64_t v35 = sub_10000693C(&qword_1000D6B00);
  uint64_t v36 = v65;
  uint64_t v37 = v67;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))((char *)v34 + *(int *)(v35 + 28), v31, v67);
  *unint64_t v34 = KeyPath;
  uint64_t v38 = v61;
  uint64_t v39 = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v33, v29, v63);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v37);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v39);
  uint64_t v40 = swift_getKeyPath();
  uint64_t v41 = v69;
  sub_1000AE9C8();
  uint64_t v42 = (uint64_t)v58;
  uint64_t v43 = (uint64_t *)&v58[*(int *)(v60 + 44)];
  uint64_t v44 = sub_10000693C(&qword_1000D6B08);
  uint64_t v46 = v70;
  uint64_t v45 = v71;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))((char *)v43 + *(int *)(v44 + 28), v41, v71);
  *uint64_t v43 = v40;
  sub_100009D6C(v33, v42, &qword_1000D6AE8);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v45);
  sub_100009EF4(v33, &qword_1000D6AE8);
  uint64_t v47 = sub_1000AF1D8();
  uint64_t v48 = v62;
  sub_100009D6C(v42, v62, &qword_1000D6AF0);
  uint64_t v49 = (uint64_t *)(v48 + *(int *)(v68 + 36));
  uint64_t v50 = v57;
  *uint64_t v49 = v47;
  v49[1] = v50;
  v49[2] = v55;
  swift_bridgeObjectRetain();
  sub_100009EF4(v42, &qword_1000D6AF0);
  sub_1000590BC();
  sub_1000AF008();
  return sub_100009EF4(v48, &qword_1000D6AF8);
}

uint64_t sub_1000326BC()
{
  return sub_100041F48((void (*)(void))sub_10004FE04);
}

uint64_t sub_1000326DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100031FE8(a1);
}

uint64_t sub_100032720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v50 = type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner(0);
  __chkstk_darwin(v50);
  uint64_t v51 = (void *)((char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = sub_10000693C(&qword_1000D6DE8);
  __chkstk_darwin(v52);
  uint64_t v54 = (uint64_t)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000693C(&qword_1000D6DF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v49 = (uint64_t)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10000693C(&qword_1000D6DF8);
  uint64_t v7 = __chkstk_darwin(v56);
  unint64_t v53 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v55 = (uint64_t)v47 - v9;
  uint64_t v10 = sub_10000693C(&qword_1000D6E00);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for TTRAnyListWidget.ListBadge.Core(0);
  uint64_t v13 = __chkstk_darwin(v58);
  uint64_t v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v17 = (char *)v47 - v16;
  char v18 = *(unsigned char *)(a1 + 24);
  char v19 = *(unsigned char *)(a1 + 40);
  uint64_t v20 = swift_retain();
  uint64_t v21 = sub_10002E128(v20, v19, 0x726F6C6F43, 0xE500000000000000);
  swift_release();
  uint64_t v22 = a1 + 8;
  if (v18)
  {
    v47[1] = v10;
    uint64_t v48 = v12;
    uint64_t v23 = v56;
    sub_10001D8DC(a1, (uint64_t)&v60, &qword_1000D6E08);
    sub_10001D8DC(v22, (uint64_t)v59, &qword_1000D6E10);
    *(void *)char v17 = v21;
    sub_10001D8DC((uint64_t)&v60, (uint64_t)(v17 + 8), &qword_1000D6E08);
    sub_10001D8DC((uint64_t)v59, (uint64_t)(v17 + 16), &qword_1000D6E10);
    v17[32] = 1;
    uint64_t v24 = (uint64_t *)&v17[*(int *)(v58 + 32)];
    *uint64_t v24 = swift_getKeyPath();
    sub_10000693C(&qword_1000D5E30);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = v49;
    sub_100043D14((uint64_t)v17, v49, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    sub_10005B804(&v60);
    sub_10005B830((uint64_t)v59);
    sub_100043DC4((uint64_t)v17, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    uint64_t v26 = swift_retain();
    uint64_t v27 = sub_10002E128(v26, v19, 0x726F6C6F43, 0xE500000000000000);
    swift_release();
    uint64_t v28 = v50;
    uint64_t v29 = (uint64_t)v51;
    *uint64_t v51 = v27;
    uint64_t v30 = (uint64_t *)(v29 + *(int *)(v28 + 20));
    *uint64_t v30 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    if (qword_1000D48B0 != -1) {
      swift_once();
    }
    double v31 = *((double *)&xmmword_1000D5C98 + 1);
    uint64_t v32 = (uint64_t)v48;
    if (qword_1000D48B8 != -1) {
      swift_once();
    }
    double v33 = v31 - *((double *)&xmmword_1000D5CA8 + 1);
    double v34 = *(double *)&xmmword_1000D5C98 - *(double *)&xmmword_1000D5CA8;
    char v35 = sub_1000AED08();
    uint64_t v36 = v54;
    sub_100043D14(v29, v54, type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner);
    uint64_t v37 = v36 + *(int *)(v52 + 36);
    *(unsigned char *)uint64_t v37 = v35;
    *(double *)(v37 + 8) = v33;
    *(double *)(v37 + 16) = v34;
    *(void *)(v37 + 24) = 0;
    *(void *)(v37 + 32) = 0;
    *(unsigned char *)(v37 + 40) = 0;
    sub_100043DC4(v29, type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner);
    uint64_t v38 = sub_1000AF1B8();
    uint64_t v40 = v39;
    uint64_t v41 = (uint64_t)v53;
    uint64_t v42 = (uint64_t)&v53[*(int *)(v23 + 36)];
    sub_100009D6C(v36, v42, &qword_1000D6DE8);
    uint64_t v43 = (uint64_t *)(v42 + *(int *)(sub_10000693C(&qword_1000D6E18) + 36));
    *uint64_t v43 = v38;
    v43[1] = v40;
    sub_100009D6C(v25, v41, &qword_1000D6DF0);
    sub_100009EF4(v36, &qword_1000D6DE8);
    sub_100009EF4(v25, &qword_1000D6DF0);
    uint64_t v44 = v55;
    sub_10001D8DC(v41, v55, &qword_1000D6DF8);
    sub_100009D6C(v44, v32, &qword_1000D6DF8);
    swift_storeEnumTagMultiPayload();
    sub_100043D7C(&qword_1000D6E20, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    sub_10005B85C();
    sub_1000AEC68();
    return sub_100009EF4(v44, &qword_1000D6DF8);
  }
  else
  {
    sub_10001D8DC(a1, (uint64_t)&v60, &qword_1000D6E08);
    sub_10001D8DC(v22, (uint64_t)v59, &qword_1000D6E10);
    *(void *)uint64_t v15 = v21;
    sub_10001D8DC((uint64_t)&v60, (uint64_t)(v15 + 8), &qword_1000D6E08);
    sub_10001D8DC((uint64_t)v59, (uint64_t)(v15 + 16), &qword_1000D6E10);
    v15[32] = 0;
    uint64_t v46 = (uint64_t *)&v15[*(int *)(v58 + 32)];
    uint64_t *v46 = swift_getKeyPath();
    sub_10000693C(&qword_1000D5E30);
    swift_storeEnumTagMultiPayload();
    sub_1000478F8((uint64_t)v15, (uint64_t)v17, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    sub_100043D14((uint64_t)v17, (uint64_t)v12, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    swift_storeEnumTagMultiPayload();
    sub_10005B804(&v60);
    sub_10005B830((uint64_t)v59);
    sub_100043D7C(&qword_1000D6E20, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    sub_10005B85C();
    sub_1000AEC68();
    return sub_100043DC4((uint64_t)v17, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
  }
}

int64x2_t sub_100032E8C()
{
  int64x2_t result = vdupq_n_s64(0x4041000000000000uLL);
  xmmword_1000D5C98 = (__int128)result;
  return result;
}

__n128 sub_100032EA4()
{
  __asm { FMOV            V0.2D, #13.0 }
  xmmword_1000D5CA8 = (__int128)result;
  return result;
}

__n128 sub_100032EB8()
{
  __asm { FMOV            V0.2D, #14.0 }
  xmmword_1000D5CB8 = (__int128)result;
  return result;
}

uint64_t sub_100032ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v115 = a2;
  uint64_t v94 = sub_1000AF0F8();
  id v102 = *(char **)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v101 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D70F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v96 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10000693C(&qword_1000D70F8);
  uint64_t v6 = __chkstk_darwin(v110);
  uint64_t v95 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v93 - v8;
  uint64_t v116 = type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground(0);
  uint64_t v10 = __chkstk_darwin(v116);
  uint64_t v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v93 - v13;
  uint64_t v112 = sub_10000693C(&qword_1000D7100);
  __chkstk_darwin(v112);
  uint64_t v114 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10000693C(&qword_1000D7108);
  __chkstk_darwin(v108);
  uint64_t v109 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_10000693C(&qword_1000D7110);
  __chkstk_darwin(v113);
  uint64_t v111 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = (char *)type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground(0);
  __chkstk_darwin(v103);
  uint64_t v104 = (uint64_t *)((char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v107 = sub_10000693C(&qword_1000D7118);
  __chkstk_darwin(v107);
  v105 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000AF268();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v98 = (uint64_t)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for TTRAnyListWidget.ListBadge.Core(0);
  __chkstk_darwin(v97);
  uint64_t v22 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000AE1B8();
  uint64_t v23 = *(void *)(v106 - 8);
  uint64_t v24 = __chkstk_darwin(v106);
  uint64_t v26 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v93 - v27;
  uint64_t v29 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v29 - 8);
  double v31 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10000693C(&qword_1000D7120);
  __chkstk_darwin(v32 - 8);
  double v34 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 24))
  {
    id v102 = v34;
    uint64_t v35 = sub_1000AED68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v31, 1, 1, v35);
    swift_bridgeObjectRetain();
    sub_1000AEDA8();
    sub_100009EF4((uint64_t)v31, &qword_1000D4BD8);
    uint64_t v36 = sub_1000AEEB8();
    uint64_t v38 = v37;
    char v40 = v39;
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_1000D48B0 != -1) {
      swift_once();
    }
    sub_1000AF1B8();
    sub_1000AE7F8();
    uint64_t v117 = v36;
    uint64_t v118 = v38;
    char v119 = v40 & 1;
    uint64_t v120 = v42;
    uint64_t v121 = v127;
    LOBYTE(v122) = v128;
    *((void *)&v122 + 1) = v129;
    LOBYTE(v123) = v130;
    long long v124 = v131;
    uint64_t v43 = v106;
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v28, enum case for REMFeatureFlags.accentableWidgets(_:), v106);
    char v44 = sub_1000AE1A8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v43);
    sub_100043D14(a1, (uint64_t)v22, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    if (v44)
    {
      uint64_t v45 = v98;
      sub_10002DA58(&qword_1000D5E30, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B7C90, v98);
      sub_100030368();
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v45, v100);
    }
    sub_100043DC4((uint64_t)v22, type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    sub_10000693C(&qword_1000D7198);
    sub_10000693C(&qword_1000D71A0);
    sub_10005E240(&qword_1000D71A8, &qword_1000D7198);
    uint64_t v46 = sub_100006F98(&qword_1000D71B0);
    uint64_t v47 = sub_10004F028(&qword_1000D71B8, &qword_1000D71B0, (void (*)(void))sub_10005E2AC);
    uint64_t v125 = v46;
    unint64_t v126 = v47;
    swift_getOpaqueTypeConformance2();
    uint64_t v48 = (uint64_t)v102;
    sub_1000AEEF8();
    sub_100006FE0(v117, v118, v119);
    swift_bridgeObjectRelease();
    char v49 = *(unsigned char *)(a1 + 32);
    uint64_t v50 = v104;
    *uint64_t v104 = *(void *)a1;
    v50[8] = v49;
    uint64_t v51 = (uint64_t *)&v50[*((int *)v103 + 6)];
    *uint64_t v51 = swift_getKeyPath();
    sub_10000693C(&qword_1000D5E30);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    uint64_t v52 = sub_1000AF1B8();
    uint64_t v54 = v53;
    uint64_t v55 = (uint64_t)v105;
    uint64_t v56 = (uint64_t)&v105[*(int *)(v107 + 36)];
    uint64_t v57 = &qword_1000D7120;
    sub_100009D6C(v48, v56, &qword_1000D7120);
    uint64_t v58 = (uint64_t *)(v56 + *(int *)(sub_10000693C(&qword_1000D7148) + 36));
    *uint64_t v58 = v52;
    v58[1] = v54;
    sub_1000478F8((uint64_t)v50, v55, type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground);
    sub_100009D6C(v55, v109, &qword_1000D7118);
    swift_storeEnumTagMultiPayload();
    sub_10005DFE8();
    sub_10005E0B8();
    uint64_t v59 = (uint64_t)v111;
    sub_1000AEC68();
    sub_100009D6C(v59, v114, &qword_1000D7110);
    swift_storeEnumTagMultiPayload();
    sub_10005DF60(&qword_1000D7128, &qword_1000D7110, (void (*)(void))sub_10005DFE8, (void (*)(void))sub_10005E0B8);
    sub_100043D7C(&qword_1000D7158, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
    sub_1000AEC68();
    sub_100009EF4(v59, &qword_1000D7110);
    sub_100009EF4(v55, &qword_1000D7118);
    uint64_t v60 = v48;
    return sub_100009EF4(v60, v57);
  }
  uint64_t v61 = v101;
  uint64_t v62 = v102;
  v105 = v9;
  uint64_t v63 = *(void **)(a1 + 8);
  if (v63)
  {
    char v64 = *(unsigned char *)(a1 + 32);
    *(void *)uint64_t v14 = *(void *)a1;
    v14[8] = v64;
    uint64_t v65 = *(int *)(v116 + 24);
    uint64_t v103 = v14;
    *(void *)&v14[v65] = swift_getKeyPath();
    sub_10000693C(&qword_1000D5E30);
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = v63;
    swift_retain();
    uint64_t v104 = v66;
    sub_1000AF0D8();
    uint64_t v67 = v94;
    (*((void (**)(char *, void, uint64_t))v62 + 13))(v61, enum case for Image.ResizingMode.stretch(_:), v94);
    uint64_t v68 = sub_1000AF128();
    swift_release();
    (*((void (**)(char *, uint64_t))v62 + 1))(v61, v67);
    if (qword_1000D48B0 != -1) {
      swift_once();
    }
    sub_1000AF1B8();
    sub_1000AE7F8();
    uint64_t v69 = v127;
    char v70 = v128;
    uint64_t v71 = v129;
    char v72 = v130;
    long long v73 = v131;
    uint64_t v74 = sub_1000AF078();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v117 = v68;
    uint64_t v118 = v69;
    char v119 = v70;
    uint64_t v120 = v71;
    LOBYTE(v121) = v72;
    long long v122 = v73;
    uint64_t v123 = KeyPath;
    *(void *)&long long v124 = v74;
    uint64_t v76 = v106;
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v26, enum case for REMFeatureFlags.accentableWidgets(_:), v106);
    sub_1000AE1A8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v76);
    uint64_t v77 = sub_10000693C(&qword_1000D7170);
    sub_10000693C(&qword_1000D7178);
    unint64_t v78 = sub_10005E188();
    uint64_t v125 = v77;
    unint64_t v126 = v78;
    swift_getOpaqueTypeConformance2();
    uint64_t v79 = (uint64_t)v96;
    sub_1000AEEF8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v80 = sub_1000AF1B8();
    uint64_t v82 = v81;
    uint64_t v83 = (uint64_t)v95;
    uint64_t v84 = (uint64_t)&v95[*(int *)(v110 + 36)];
    sub_100009D6C(v79, v84, &qword_1000D70F0);
    uint64_t v85 = (uint64_t *)(v84 + *(int *)(sub_10000693C(&qword_1000D7168) + 36));
    *uint64_t v85 = v80;
    v85[1] = v82;
    uint64_t v86 = (uint64_t)v103;
    sub_100043D14((uint64_t)v103, v83, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
    sub_100009EF4(v79, &qword_1000D70F0);
    sub_100043DC4(v86, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
    uint64_t v57 = &qword_1000D70F8;
    uint64_t v87 = v83;
    uint64_t v88 = (uint64_t)v105;
    sub_10001D8DC(v87, (uint64_t)v105, &qword_1000D70F8);
    sub_100009D6C(v88, v109, &qword_1000D70F8);
    swift_storeEnumTagMultiPayload();
    sub_10005DFE8();
    sub_10005E0B8();
    uint64_t v89 = (uint64_t)v111;
    sub_1000AEC68();
    sub_100009D6C(v89, v114, &qword_1000D7110);
    swift_storeEnumTagMultiPayload();
    sub_10005DF60(&qword_1000D7128, &qword_1000D7110, (void (*)(void))sub_10005DFE8, (void (*)(void))sub_10005E0B8);
    sub_100043D7C(&qword_1000D7158, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
    sub_1000AEC68();

    sub_100009EF4(v89, &qword_1000D7110);
    uint64_t v60 = v88;
    return sub_100009EF4(v60, v57);
  }
  char v91 = *(unsigned char *)(a1 + 32);
  *(void *)uint64_t v12 = *(void *)a1;
  v12[8] = v91;
  uint64_t v92 = (uint64_t *)&v12[*(int *)(v116 + 24)];
  *uint64_t v92 = swift_getKeyPath();
  sub_10000693C(&qword_1000D5E30);
  swift_storeEnumTagMultiPayload();
  sub_1000478F8((uint64_t)v12, (uint64_t)v14, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
  sub_100043D14((uint64_t)v14, v114, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
  swift_storeEnumTagMultiPayload();
  sub_10005DF60(&qword_1000D7128, &qword_1000D7110, (void (*)(void))sub_10005DFE8, (void (*)(void))sub_10005E0B8);
  sub_100043D7C(&qword_1000D7158, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
  swift_retain();
  sub_1000AEC68();
  return sub_100043DC4((uint64_t)v14, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
}

uint64_t sub_100034040(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  sub_1000AF068();
  sub_1000AED08();
  sub_100009E88(v1, v2, v3);
  swift_bridgeObjectRetain();
  sub_10000693C(&qword_1000D71B0);
  sub_10004F028(&qword_1000D71B8, &qword_1000D71B0, (void (*)(void))sub_10005E2AC);
  sub_1000AEF08();
  sub_100006FE0(v1, v2, v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100034180()
{
  return sub_1000AEF08();
}

uint64_t sub_10003420C@<X0>(uint64_t a1@<X8>)
{
  return sub_100032ECC(v1, a1);
}

uint64_t sub_100034214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v25 = sub_1000AF268();
  uint64_t v24 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v23 = (uint64_t)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground(0);
  __chkstk_darwin(v22);
  uint64_t v28 = (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000AE1B8();
  uint64_t v26 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + 8))
  {
    if (qword_1000D48B0 != -1) {
      swift_once();
    }
    v52.size = (CGSize)xmmword_1000D5C98;
    v52.origin.x = 0.0;
    v52.origin.y = 0.0;
    CGRectInset(v52, -2.0, -2.0);
    sub_1000AEE68();
  }
  else
  {
    if (qword_1000D48B0 != -1) {
      swift_once();
    }
    sub_1000AEE58();
  }
  uint64_t v8 = v44;
  uint64_t v7 = v45;
  unsigned __int8 v9 = v46;
  uint64_t v11 = v42;
  uint64_t v10 = v43;
  uint64_t v12 = *(void *)v2;
  uint64_t v13 = qword_1000D48B0;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  sub_1000AF1B8();
  sub_1000AE7F8();
  uint64_t v30 = v11;
  uint64_t v31 = v10;
  uint64_t v32 = v8;
  uint64_t v33 = v7;
  unsigned __int8 v34 = v9;
  uint64_t v35 = v12;
  __int16 v36 = 256;
  uint64_t v37 = v47;
  char v38 = v48;
  uint64_t v39 = v49;
  char v40 = v50;
  long long v41 = v51;
  uint64_t v14 = v26;
  uint64_t v15 = v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v6, enum case for REMFeatureFlags.accentableWidgets(_:), v27);
  char v16 = sub_1000AE1A8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v15);
  uint64_t v17 = v2;
  uint64_t v18 = v28;
  sub_100043D14(v17, v28, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
  if (v16)
  {
    uint64_t v19 = v23;
    sub_10002DA58(&qword_1000D5E30, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B7C90, v23);
    sub_100030368();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v19, v25);
  }
  sub_100043DC4(v18, type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
  sub_10000693C(&qword_1000D7540);
  sub_10000693C(&qword_1000D7548);
  sub_10005FC5C();
  sub_10005FCFC();
  sub_1000AEEF8();
  sub_10005EA48(v30, v31, v32, v33, v34);
  return swift_release();
}

uint64_t sub_1000346E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D7560);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 49);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  char v14 = *(unsigned char *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 16);
  v17[0] = *(_OWORD *)a1;
  v17[1] = v15;
  char v18 = v6;
  uint64_t v19 = v8;
  char v20 = v9;
  char v21 = v10;
  uint64_t v22 = v11;
  char v23 = v12;
  uint64_t v24 = v13;
  char v25 = v14;
  long long v26 = *(_OWORD *)(a1 + 88);
  sub_10000693C(&qword_1000D7540);
  sub_10005FC5C();
  sub_1000AEF08();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  *(void *)(a2 + *(int *)(sub_10000693C(&qword_1000D7548) + 36)) = 0x3FBEB851EB851EB8;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10003487C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v3 = type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground(0);
  __chkstk_darwin(v3);
  uint64_t v38 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000AE1B8();
  uint64_t v34 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000693C(&qword_1000D74D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000693C(&qword_1000D74E0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AF268();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  long long v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v3;
  unint64_t v28 = (unint64_t)"nders in any list.";
  sub_10002DA58(&qword_1000D5E30, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B7C90, (uint64_t)v15);
  sub_100030368();
  char v16 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v31 = v12;
  uint64_t v30 = v13 + 8;
  uint64_t v29 = v16;
  v16(v15, v12);
  char v17 = *(unsigned char *)(v2 + 8);
  uint64_t v37 = v9;
  __int16 v36 = v11;
  if (v17)
  {
    if (qword_1000D48B0 != -1) {
      swift_once();
    }
    v51.size = (CGSize)xmmword_1000D5C98;
    v51.origin.x = 0.0;
    v51.origin.y = 0.0;
    CGRectInset(v51, -2.0, -2.0);
    sub_1000AEE68();
  }
  else
  {
    if (qword_1000D48B0 != -1) {
      swift_once();
    }
    sub_1000AEE58();
  }
  uint64_t v18 = *(void *)v2;
  long long v40 = v45;
  long long v41 = v46;
  unsigned __int8 v42 = v47;
  uint64_t v43 = v18;
  __int16 v44 = 256;
  __chkstk_darwin(v18);
  *(&v28 - 2) = v2;
  swift_retain();
  sub_10000693C(&qword_1000D72D0);
  sub_10000693C(&qword_1000D74E8);
  sub_100009F50(&qword_1000D72E0, &qword_1000D72D0);
  sub_10005F94C(&qword_1000D74F0, &qword_1000D74E8, &qword_1000D74F8, &qword_1000D7500);
  sub_1000AEEF8();
  sub_10005EA48(v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1), v42);
  swift_release();
  if (qword_1000D48B0 != -1) {
    swift_once();
  }
  sub_1000AF1B8();
  sub_1000AE7F8();
  uint64_t v19 = (uint64_t)v36;
  sub_100009D6C((uint64_t)v8, (uint64_t)v36, &qword_1000D74D8);
  char v20 = (_OWORD *)(v19 + *(int *)(v37 + 36));
  long long v21 = v49;
  _OWORD *v20 = v48;
  v20[1] = v21;
  v20[2] = v50;
  sub_100009EF4((uint64_t)v8, &qword_1000D74D8);
  uint64_t v22 = v34;
  char v23 = v33;
  uint64_t v24 = v35;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, enum case for REMFeatureFlags.accentableWidgets(_:), v35);
  char v25 = sub_1000AE1A8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  uint64_t v26 = v38;
  sub_100043D14(v2, v38, type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground);
  if (v25)
  {
    sub_10002DA58(&qword_1000D5E30, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, v28 | 0x8000000000000000, (uint64_t)v15);
    sub_100030368();
    v29(v15, v31);
  }
  sub_100043DC4(v26, type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground);
  sub_10000693C(&qword_1000D7508);
  sub_10005FA70();
  sub_10005FB60();
  sub_1000AEEF8();
  return sub_100009EF4(v19, &qword_1000D74E0);
}

uint64_t sub_100034F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v50 = a3;
  uint64_t v60 = sub_10000693C(&qword_1000D7500);
  __chkstk_darwin(v60);
  uint64_t v61 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AE978();
  __chkstk_darwin(v5 - 8);
  uint64_t v58 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AF1E8();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_10000693C(&qword_1000D7530);
  __chkstk_darwin(v49);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AF048();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  char v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)a1;
  uint64_t v56 = *(void *)(a1 + 8);
  uint64_t v57 = v17;
  uint64_t v55 = *(void *)(a1 + 16);
  uint64_t v54 = *(void *)(a1 + 24);
  int v53 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v59 = *(void *)(a1 + 40);
  int v52 = *(unsigned __int8 *)(a1 + 48);
  int v51 = *(unsigned __int8 *)(a1 + 49);
  sub_10000693C(&qword_1000D7538);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1000B0E30;
  uint64_t v19 = enum case for Color.RGBColorSpace.sRGB(_:);
  char v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v20(v16, enum case for Color.RGBColorSpace.sRGB(_:), v13);
  *(void *)(v18 + 32) = sub_1000AF0B8();
  v20(v16, v19, v13);
  *(void *)(v18 + 40) = sub_1000AF0B8();
  uint64_t v62 = v18;
  sub_1000AF5A8();
  sub_1000AF198();
  sub_1000AF208();
  sub_1000AF218();
  sub_1000AE878();
  uint64_t v47 = v62;
  uint64_t v21 = v63;
  uint64_t v22 = v64;
  uint64_t v23 = v65;
  uint64_t v24 = v66;
  if (*(unsigned char *)(v48 + 8))
  {
    if (qword_1000D48B0 != -1) {
      swift_once();
    }
    v72.size = (CGSize)xmmword_1000D5C98;
    v72.origin.x = 0.0;
    v72.origin.y = 0.0;
    CGRectInset(v72, -2.0, -2.0);
    sub_1000AEE68();
  }
  else
  {
    if (qword_1000D48B0 != -1) {
      swift_once();
    }
    sub_1000AEE58();
  }
  uint64_t v25 = v69;
  uint64_t v26 = v70;
  uint64_t v27 = v67;
  uint64_t v28 = v68;
  uint64_t v29 = v8;
  unsigned __int8 v30 = v71;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for BlendMode.screen(_:), v7);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v32 = (uint64_t)v58;
  v31(v58, v10, v7);
  sub_100043D14(v32, (uint64_t)&v12[*(int *)(v49 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v12 = v27;
  *((void *)v12 + 1) = v28;
  uint64_t v48 = v25;
  *((void *)v12 + 2) = v25;
  *((void *)v12 + 3) = v26;
  v12[32] = v30;
  *((void *)v12 + 5) = v47;
  *((void *)v12 + 6) = v21;
  *((void *)v12 + 7) = v22;
  *((void *)v12 + 8) = v23;
  *((void *)v12 + 9) = v24;
  *((_WORD *)v12 + 40) = 256;
  sub_10005FC44(v27, v28, v25, v26, v30);
  swift_bridgeObjectRetain();
  sub_100043DC4(v32, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v7);
  sub_10005EA48(v27, v28, v48, v26, v30);
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_1000AF1B8();
  uint64_t v35 = v34;
  uint64_t v36 = v61;
  sub_100009D6C((uint64_t)v12, v61, &qword_1000D7530);
  uint64_t v37 = (uint64_t *)(v36 + *(int *)(v60 + 36));
  *uint64_t v37 = v33;
  v37[1] = v35;
  uint64_t v38 = sub_10000693C(&qword_1000D74E8);
  uint64_t v39 = v50;
  sub_100009D6C(v36, v50 + *(int *)(v38 + 36), &qword_1000D7500);
  uint64_t v41 = v56;
  uint64_t v40 = v57;
  *(void *)uint64_t v39 = v57;
  *(void *)(v39 + 8) = v41;
  uint64_t v42 = v55;
  uint64_t v43 = v54;
  *(void *)(v39 + 16) = v55;
  *(void *)(v39 + 24) = v43;
  unsigned __int8 v44 = v53;
  *(unsigned char *)(v39 + 32) = v53;
  *(void *)(v39 + 40) = v59;
  *(unsigned char *)(v39 + 48) = v52;
  *(unsigned char *)(v39 + 49) = v51;
  sub_10005FC44(v40, v41, v42, v43, v44);
  swift_retain();
  sub_100009EF4(v36, &qword_1000D7500);
  return sub_100009EF4((uint64_t)v12, &qword_1000D7530);
}

uint64_t sub_100035580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000693C(&qword_1000D7528);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000693C(&qword_1000D74E0);
  sub_10005FA70();
  sub_1000AEF08();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  *(void *)(a1 + *(int *)(sub_10000693C(&qword_1000D7508) + 36)) = 0x3FBEB851EB851EB8;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

double sub_1000356BC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AEB98();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D48B0 != -1) {
    swift_once();
  }
  v55.origin.x = 0.0;
  v55.origin.y = 0.0;
  v55.size = (CGSize)xmmword_1000D5C98;
  CGRectInset(v55, -2.0, -2.0);
  sub_1000AEE68();
  uint64_t v32 = v34;
  uint64_t v31 = v35;
  uint64_t v30 = v36;
  uint64_t v29 = v37;
  int v28 = v38;
  uint64_t v33 = sub_1000AF068();
  uint64_t v6 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v7 = *(void (**)(void, void, void))(v3 + 104);
  v7(v5, enum case for RoundedCornerStyle.continuous(_:), v2);
  sub_1000AEE28();
  uint64_t v8 = v39;
  uint64_t v9 = v40;
  uint64_t v27 = v41;
  uint64_t v26 = v42;
  int v25 = v43;
  uint64_t v10 = sub_1000AF078();
  if (qword_1000D48C0 != -1) {
    swift_once();
  }
  v7(v5, v6, v2);
  sub_1000AEE18();
  *(_OWORD *)uint64_t v24 = v44;
  uint64_t v11 = v45;
  uint64_t v12 = v46;
  char v13 = v47;
  uint64_t v14 = sub_1000AF068();
  uint64_t v15 = sub_1000AF1B8();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1000AF1B8();
  uint64_t v19 = v31;
  *(void *)a1 = v32;
  *(void *)(a1 + 8) = v19;
  uint64_t v20 = v29;
  *(void *)(a1 + 16) = v30;
  *(void *)(a1 + 24) = v20;
  *(unsigned char *)(a1 + 32) = v28;
  *(_DWORD *)(a1 + 33) = *(_DWORD *)v52;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v52[3];
  *(void *)(a1 + 40) = v33;
  *(_WORD *)(a1 + 48) = 256;
  *(_DWORD *)(a1 + 50) = *(_DWORD *)&v50[7];
  *(_WORD *)(a1 + 54) = v51;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  uint64_t v21 = v26;
  *(void *)(a1 + 72) = v27;
  *(void *)(a1 + 80) = v21;
  *(unsigned char *)(a1 + 88) = v25;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a1 + 89) = *(_DWORD *)v50;
  *(void *)(a1 + 96) = v10;
  *(_WORD *)(a1 + 104) = 256;
  *(_WORD *)(a1 + 110) = v49;
  *(_DWORD *)(a1 + 106) = v48;
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v17;
  double result = v24[0];
  *(_OWORD *)(a1 + 128) = *(_OWORD *)v24;
  *(void *)(a1 + 144) = v11;
  *(void *)(a1 + 152) = v12;
  *(unsigned char *)(a1 + 160) = v13;
  LODWORD(v21) = v54[0];
  *(_DWORD *)(a1 + 164) = *(_DWORD *)((char *)v54 + 3);
  *(_DWORD *)(a1 + 161) = v21;
  *(void *)(a1 + 168) = v14;
  *(_WORD *)(a1 + 176) = 256;
  *(_DWORD *)(a1 + 178) = *(_DWORD *)&v52[7];
  *(_WORD *)(a1 + 182) = v53;
  *(void *)(a1 + 184) = v18;
  *(void *)(a1 + 192) = v23;
  return result;
}

uint64_t sub_100035A78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v56 = sub_1000AF268();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v54 = (uint64_t)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner(0);
  __chkstk_darwin(v53);
  uint64_t v65 = (uint64_t)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000AEB98();
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v63 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D72A8);
  __chkstk_darwin(v4 - 8);
  uint64_t v68 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10000693C(&qword_1000D72B0);
  __chkstk_darwin(v67);
  uint64_t v69 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AE1B8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v60 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v53 - v11;
  uint64_t v13 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000693C(&qword_1000D72B8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10000693C(&qword_1000D72C0);
  __chkstk_darwin(v59);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000AF0E8();
  sub_1000AED78();
  uint64_t v22 = sub_1000AED68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 1, 1, v22);
  uint64_t v23 = sub_1000AEDA8();
  sub_100009EF4((uint64_t)v15, &qword_1000D4BD8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = sub_1000AF078();
  uint64_t v26 = swift_getKeyPath();
  *(void *)&long long v71 = v21;
  *((void *)&v71 + 1) = KeyPath;
  *(void *)&long long v72 = v23;
  *((void *)&v72 + 1) = v26;
  *(void *)&long long v73 = v25;
  uint64_t v27 = enum case for REMFeatureFlags.accentableWidgets(_:);
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v58(v12, enum case for REMFeatureFlags.accentableWidgets(_:), v7);
  sub_1000AE1A8();
  int v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v61 = v7;
  uint64_t v57 = v28;
  v28(v12, v7);
  uint64_t v29 = sub_10000693C(&qword_1000D5708);
  sub_10000693C(&qword_1000D72C8);
  unint64_t v30 = sub_10001DB5C();
  *(void *)&long long v75 = v29;
  *((void *)&v75 + 1) = v30;
  swift_getOpaqueTypeConformance2();
  sub_1000AEEF8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (qword_1000D48B8 != -1) {
    swift_once();
  }
  sub_1000AF1B8();
  sub_1000AE7F8();
  sub_100009D6C((uint64_t)v18, (uint64_t)v20, &qword_1000D72B8);
  uint64_t v31 = &v20[*(int *)(v59 + 36)];
  long long v32 = v76;
  *(_OWORD *)uint64_t v31 = v75;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v77;
  sub_100009EF4((uint64_t)v18, &qword_1000D72B8);
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v63, enum case for RoundedCornerStyle.continuous(_:), v64);
  sub_1000AEE18();
  uint64_t v33 = (uint64_t)v66;
  uint64_t v34 = *v66;
  long long v71 = v78;
  long long v72 = v79;
  LOBYTE(v73) = v80;
  *((void *)&v73 + 1) = v34;
  __int16 v74 = 256;
  uint64_t v35 = v60;
  uint64_t v36 = v27;
  uint64_t v37 = v61;
  v58(v60, v36, v61);
  swift_retain();
  char v38 = sub_1000AE1A8();
  v57(v35, v37);
  uint64_t v39 = v65;
  sub_100043D14(v33, v65, type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner);
  uint64_t v40 = (uint64_t)v20;
  if (v38)
  {
    uint64_t v41 = v54;
    sub_10002DA58(&qword_1000D5E30, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B7C90, v54);
    sub_100030368();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v41, v56);
  }
  sub_100043DC4(v39, type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner);
  sub_10000693C(&qword_1000D72D0);
  sub_10000693C(&qword_1000D72D8);
  sub_100009F50(&qword_1000D72E0, &qword_1000D72D0);
  sub_10005E96C();
  uint64_t v42 = (uint64_t)v68;
  sub_1000AEEF8();
  sub_10005EA48(v71, *((uint64_t *)&v71 + 1), v72, *((uint64_t *)&v72 + 1), v73);
  swift_release();
  uint64_t v43 = sub_1000AF1B8();
  uint64_t v45 = v44;
  uint64_t v46 = (uint64_t)v69;
  uint64_t v47 = (uint64_t)&v69[*(int *)(v67 + 36)];
  sub_100009D6C(v40, v47, &qword_1000D72C0);
  int v48 = (uint64_t *)(v47 + *(int *)(sub_10000693C(&qword_1000D72F0) + 36));
  *int v48 = v43;
  v48[1] = v45;
  sub_10001D8DC(v42, v46, &qword_1000D72A8);
  sub_1000AF1B8();
  sub_1000AE7F8();
  uint64_t v49 = v70;
  sub_100009D6C(v46, v70, &qword_1000D72B0);
  uint64_t v50 = (_OWORD *)(v49 + *(int *)(sub_10000693C(&qword_1000D72F8) + 36));
  long long v51 = v72;
  *uint64_t v50 = v71;
  v50[1] = v51;
  v50[2] = v73;
  sub_100009EF4(v46, &qword_1000D72B0);
  return sub_100009EF4(v40, &qword_1000D72C0);
}

uint64_t sub_10003643C()
{
  return sub_1000AEF08();
}

uint64_t sub_1000364A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D7300);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 49);
  long long v11 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v11;
  char v14 = v6;
  uint64_t v15 = v8;
  char v16 = v9;
  char v17 = v10;
  sub_10000693C(&qword_1000D72D0);
  sub_100009F50(&qword_1000D72E0, &qword_1000D72D0);
  sub_1000AEF08();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  *(void *)(a2 + *(int *)(sub_10000693C(&qword_1000D72D8) + 36)) = 0x3FD3333333333333;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100036630@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[1];
  long long v4 = *v1;
  v5[0] = v2;
  *(_OWORD *)((char *)v5 + 9) = *(long long *)((char *)v1 + 25);
  return sub_100032720((uint64_t)&v4, a1);
}

uint64_t sub_100036664@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = sub_10000693C(&qword_1000D7240);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *uint64_t v8 = sub_1000AF1B8();
  v8[1] = v10;
  if (v9 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10000693C(&qword_1000D7248);
    *(void *)&v19[0] = 0;
    *((void *)&v19[0] + 1) = v9;
    swift_getKeyPath();
    sub_100043D14((uint64_t)v1, (uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    sub_1000478F8((uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
    sub_10000693C(&qword_1000D7250);
    sub_10000693C(&qword_1000D7258);
    sub_10005E77C();
    sub_10005E84C();
    uint64_t result = sub_1000AF188();
    if (qword_1000D48A8 == -1) {
      goto LABEL_5;
    }
  }
  uint64_t result = swift_once();
LABEL_5:
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1000AF998();
    swift_bridgeObjectRelease();
    if (v17 < 2) {
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1000AF998();
    uint64_t result = swift_bridgeObjectRelease();
    if (!__OFSUB__(v18, 1)) {
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v14 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14 <= 1 || !__OFSUB__(v14, 1))
    {
LABEL_8:
      sub_1000AF1B8();
      sub_1000AE7F8();
      sub_100009D6C((uint64_t)v8, a1, &qword_1000D7240);
      uint64_t v15 = (_OWORD *)(a1 + *(int *)(sub_10000693C(&qword_1000D72A0) + 36));
      long long v16 = v19[1];
      _OWORD *v15 = v19[0];
      v15[1] = v16;
      _OWORD v15[2] = v19[2];
      return sub_100009EF4((uint64_t)v8, &qword_1000D7240);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100036A18@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *a1;
  unint64_t v8 = *a2;
  if ((*a2 & 0xC000000000000001) == 0)
  {
    if (v7 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v7 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v9 = *(id *)(v8 + 8 * v7 + 32);
      goto LABEL_5;
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1000AF998();
    uint64_t result = swift_bridgeObjectRelease();
    if (v14 > 1) {
      goto LABEL_7;
    }
LABEL_12:
    double v12 = (double)v7;
    double v13 = 0.0;
    goto LABEL_13;
  }
  id v9 = (id)sub_1000AF8D8();
LABEL_5:
  id v3 = v9;
  uint64_t result = swift_getKeyPath();
  uint64_t v4 = result;
  if (v8 >> 62) {
    goto LABEL_11;
  }
  if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 1) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t result = type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0);
  double v11 = *(double *)((char *)a2 + *(int *)(result + 24));
  double v12 = (double)v7;
  double v13 = *(double *)((char *)a2 + *(int *)(result + 28)) * -0.5 - v11 + v11 * (double)v7;
LABEL_13:
  *(void *)a3 = v3;
  *(void *)(a3 + 8) = v4;
  *(unsigned char *)(a3 + 16) = 0;
  *(double *)(a3 + 24) = v13;
  *(void *)(a3 + 32) = 0;
  *(double *)(a3 + 40) = v12;
  return result;
}

uint64_t sub_100036B44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v51 = a3;
  uint64_t v54 = a4;
  uint64_t v52 = sub_10000693C(&qword_1000D7568);
  __chkstk_darwin(v52);
  uint64_t v53 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AE1B8();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000693C(&qword_1000D7570);
  __chkstk_darwin(v11 - 8);
  double v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000693C(&qword_1000D7578);
  __chkstk_darwin(v14);
  long long v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000693C(&qword_1000D7580);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D48A8 != -1) {
    swift_once();
  }
  id v20 = a1;
  uint64_t v63 = sub_1000AF0D8();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for REMFeatureFlags.accentableWidgets(_:), v7);
  sub_1000AE1A8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_10000693C(&qword_1000D7588);
  swift_getOpaqueTypeConformance2();
  sub_1000AEEF8();
  swift_release();
  sub_1000AF1B8();
  sub_1000AE7F8();
  sub_100009D6C((uint64_t)v13, (uint64_t)v16, &qword_1000D7570);
  uint64_t v21 = &v16[*(int *)(v14 + 36)];
  long long v22 = v56;
  *(_OWORD *)uint64_t v21 = v55;
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v57;
  sub_100009EF4((uint64_t)v13, &qword_1000D7570);
  uint64_t v23 = sub_1000AF078();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100009D6C((uint64_t)v16, (uint64_t)v19, &qword_1000D7578);
  uint64_t v25 = (uint64_t *)&v19[*(int *)(v17 + 36)];
  *uint64_t v25 = KeyPath;
  v25[1] = v23;
  sub_100009EF4((uint64_t)v16, &qword_1000D7578);
  uint64_t v50 = sub_1000AF078();
  sub_1000AE7C8();
  uint64_t v26 = v58;
  uint64_t v27 = v60;
  uint64_t v28 = v61;
  uint64_t v29 = v62;
  uint64_t v49 = sub_1000AF1B8();
  uint64_t v48 = v30;
  LOBYTE(v23) = v51 & 1;
  sub_10004C4D4(a2, v51 & 1);
  sub_10002E330(a2, v23);
  sub_10004C8C4(a2, v23);
  sub_10004C4D4(a2, v23);
  sub_10002E330(a2, v23);
  sub_10004C8C4(a2, v23);
  sub_1000AF1B8();
  sub_1000AE7F8();
  uint64_t v31 = v63;
  LOBYTE(v23) = v64;
  uint64_t v32 = v65;
  LOBYTE(KeyPath) = v66;
  uint64_t v33 = v67;
  uint64_t v34 = v68;
  uint64_t v35 = sub_1000AF1B8();
  uint64_t v37 = v36;
  char v72 = v23;
  char v70 = KeyPath;
  uint64_t v38 = (uint64_t)v19;
  uint64_t v39 = (uint64_t)v19;
  uint64_t v40 = v53;
  sub_100009D6C(v38, v53, &qword_1000D7580);
  uint64_t v41 = v40 + *(int *)(v52 + 36);
  uint64_t v42 = v59;
  *(void *)uint64_t v41 = v26;
  *(void *)(v41 + 8) = v42;
  *(void *)(v41 + 16) = v27;
  *(void *)(v41 + 24) = v28;
  *(void *)(v41 + 32) = v29;
  *(void *)(v41 + 40) = v50;
  *(_WORD *)(v41 + 48) = 256;
  *(_DWORD *)(v41 + 50) = v73;
  *(_WORD *)(v41 + 54) = v74;
  uint64_t v43 = v48;
  *(void *)(v41 + 56) = v49;
  *(void *)(v41 + 64) = v43;
  *(void *)(v41 + 72) = v31;
  *(unsigned char *)(v41 + 80) = v72;
  *(_DWORD *)(v41 + 84) = *(_DWORD *)&v71[3];
  *(_DWORD *)(v41 + 81) = *(_DWORD *)v71;
  *(void *)(v41 + 88) = v32;
  *(unsigned char *)(v41 + 96) = v70;
  *(_DWORD *)(v41 + 100) = *(_DWORD *)&v69[3];
  *(_DWORD *)(v41 + 97) = *(_DWORD *)v69;
  *(void *)(v41 + 104) = v33;
  *(void *)(v41 + 112) = v34;
  *(void *)(v41 + 120) = v35;
  *(void *)(v41 + 128) = v37;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000AF068();
  uint64_t v44 = sub_1000AF088();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v54;
  sub_100009D6C(v40, v54, &qword_1000D7568);
  uint64_t v46 = v45 + *(int *)(sub_10000693C(&qword_1000D7590) + 36);
  *(void *)uint64_t v46 = v44;
  *(_OWORD *)(v46 + 8) = xmmword_1000B2060;
  *(void *)(v46 + 24) = 0x3FF0000000000000;
  sub_100009EF4(v40, &qword_1000D7568);
  return sub_100009EF4(v39, &qword_1000D7580);
}

uint64_t sub_1000371CC()
{
  uint64_t v0 = sub_10000693C(&qword_1000D7598);
  __chkstk_darwin(v0 - 8);
  long long v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AF288();
  uint64_t v3 = sub_1000AF298();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  sub_1000AF118();
  return sub_100009EF4((uint64_t)v2, &qword_1000D7598);
}

uint64_t sub_1000372B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100036B44(*(void **)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

__n128 sub_1000372C0@<Q0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = swift_retain();
  sub_10002E128(v4, v3, 0x726F6C6F43, 0xE500000000000000);
  swift_release();
  sub_1000AF1B8();
  sub_1000AE7F8();
  sub_1000AF1B8();
  sub_10002D308(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v10, 0.0, 1, 0.0, 1);
  swift_release();
  long long v5 = v10[9];
  *(_OWORD *)(a1 + 128) = v10[8];
  *(_OWORD *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 160) = v10[10];
  long long v6 = v10[5];
  *(_OWORD *)(a1 + 64) = v10[4];
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = v10[7];
  *(_OWORD *)(a1 + 96) = v10[6];
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = v10[1];
  *(_OWORD *)a1 = v10[0];
  *(_OWORD *)(a1 + 16) = v8;
  __n128 result = (__n128)v10[3];
  *(_OWORD *)(a1 + 32) = v10[2];
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 sub_100037408@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v19 = v1[1];
  char v20 = *((unsigned char *)v1 + 16);
  uint64_t v17 = v1[3];
  char v18 = *((unsigned char *)v1 + 32);
  uint64_t v3 = swift_allocObject();
  long long v4 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v4;
  *(unsigned char *)(v3 + 48) = *((unsigned char *)v1 + 32);
  sub_1000581A0((uint64_t)&v19);
  sub_1000581D0((uint64_t)&v17);
  sub_1000AF1B8();
  sub_1000AE7F8();
  uint64_t v21 = sub_100058198;
  uint64_t v22 = v3;
  uint64_t v23 = v12;
  char v24 = v13;
  uint64_t v25 = v14;
  char v26 = v15;
  long long v27 = v16;
  sub_1000AF1B8();
  sub_10002D4C0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v29, 0.0, 1, 0.0, 1);
  swift_release();
  unint64_t v5 = *v1;
  unsigned __int8 v6 = sub_1000AED08();
  unsigned __int8 v28 = 0;
  __n128 v7 = v29[9];
  a1[8] = v29[8];
  a1[9] = v7;
  a1[10] = v29[10];
  __n128 v8 = v29[5];
  a1[4] = v29[4];
  a1[5] = v8;
  __n128 v9 = v29[7];
  a1[6] = v29[6];
  a1[7] = v9;
  __n128 v10 = v29[1];
  *a1 = v29[0];
  a1[1] = v10;
  __n128 result = v29[3];
  a1[2] = v29[2];
  a1[3] = result;
  a1[11].n128_u8[0] = v6;
  a1[11].n128_u64[1] = 0;
  a1[12].n128_u64[0] = v5;
  a1[12].n128_u64[1] = 0;
  a1[13].n128_u64[0] = 0;
  a1[13].n128_u8[8] = v28;
  return result;
}

double sub_1000375A8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1000AEE78();
  LOBYTE(a1) = *(unsigned char *)(a1 + 32);
  uint64_t v4 = swift_retain();
  uint64_t v5 = sub_10002E128(v4, a1, 0x726F6C6F43, 0xE500000000000000);
  swift_release();
  sub_10000693C(&qword_1000D6A00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1000B0E30;
  *(_OWORD *)(v6 + 32) = xmmword_1000B2070;
  sub_1000AE7C8();
  uint64_t v7 = sub_1000AF1B8();
  *(_OWORD *)a2 = v10;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v13;
  double result = v15;
  *(void *)(a2 + 40) = v14;
  *(double *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = v16;
  *(void *)(a2 + 64) = v17;
  *(void *)(a2 + 72) = v18;
  *(void *)(a2 + 80) = v5;
  *(_WORD *)(a2 + 88) = 256;
  *(void *)(a2 + 96) = v7;
  *(void *)(a2 + 104) = v9;
  return result;
}

void sub_1000376F0()
{
  v0.x = 0.0;
  v0.y = 0.0;
  sub_1000AEE38(v0);
  sub_1000AE808();
  v1.y = 0.0;
  sub_1000AEE48(v1);
}

double sub_100037740@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_100037408(a1).n128_u64[0];
  return result;
}

uint64_t sub_100037780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v3 - 8);
  uint64_t v62 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AEDF8();
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  __chkstk_darwin(v5);
  uint64_t v59 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000693C(&qword_1000D4C78);
  __chkstk_darwin(v7 - 8);
  uint64_t KeyPath = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10000693C(&qword_1000D6298);
  __chkstk_darwin(v65);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10000693C(&qword_1000D62A0);
  __chkstk_darwin(v64);
  char v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10000693C(&qword_1000D62A8);
  uint64_t v14 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000693C(&qword_1000D62B0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10000693C(&qword_1000D62B8);
  __chkstk_darwin(v68);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10000693C(&qword_1000D62C0);
  uint64_t v71 = *(void *)(v22 - 8);
  uint64_t v72 = v22;
  __chkstk_darwin(v22);
  uint64_t v67 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10000693C(&qword_1000D62C8);
  __chkstk_darwin(v69);
  char v70 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v13 = sub_1000AEBD8();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  uint64_t v25 = (uint64_t)&v13[*(int *)(sub_10000693C(&qword_1000D62D0) + 44)];
  uint64_t v73 = v1;
  sub_100038054(v1, v25);
  char v26 = (char *)enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v27 = sub_1000AE8B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 104))(v11, v26, v27);
  sub_100043D7C(&qword_1000D62D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((sub_1000AF448() & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v63 = a1;
  sub_100009F50(&qword_1000D62E0, &qword_1000D62A0);
  sub_100009F50(&qword_1000D62E8, &qword_1000D6298);
  sub_1000AEFB8();
  sub_100009EF4((uint64_t)v11, &qword_1000D6298);
  sub_100009EF4((uint64_t)v13, &qword_1000D62A0);
  uint64_t v28 = sub_1000AF1B8();
  __n128 v30 = sub_10002D678(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v19, 0.0, 1, INFINITY, 0, v28, v29, &qword_1000D62A8, &qword_1000D62B0);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v66, v30);
  uint64_t v31 = v73;
  sub_100039A20();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  char v40 = sub_1000AED08();
  sub_100009D6C((uint64_t)v19, (uint64_t)v21, &qword_1000D62B0);
  uint64_t v41 = &v21[*(int *)(v68 + 36)];
  *uint64_t v41 = v40;
  *((void *)v41 + 1) = v33;
  *((void *)v41 + 2) = v35;
  *((void *)v41 + 3) = v37;
  *((void *)v41 + 4) = v39;
  v41[40] = 0;
  sub_100009EF4((uint64_t)v19, &qword_1000D62B0);
  uint64_t v42 = v31 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 72);
  uint64_t v43 = sub_1000ADD48();
  uint64_t v44 = *(void *)(v43 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(KeyPath, v42, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(KeyPath, 0, 1, v43);
  sub_10004F028(&qword_1000D62F0, &qword_1000D62B8, (void (*)(void))sub_10004F0A4);
  char v26 = v67;
  sub_1000AEF18();
  sub_100009EF4((uint64_t)KeyPath, &qword_1000D4C78);
  sub_100009EF4((uint64_t)v21, &qword_1000D62B8);
  uint64_t KeyPath = (char *)swift_getKeyPath();
  if ((sub_100039B10() & 1) == 0)
  {
    if (qword_1000D48C8 == -1)
    {
LABEL_5:
      uint64_t v52 = qword_1000D5CC8;
      swift_retain();
      goto LABEL_6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v46 = v59;
  uint64_t v45 = v60;
  uint64_t v47 = v61;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v59, enum case for Font.TextStyle.headline(_:), v61);
  uint64_t v48 = enum case for Font.Design.rounded(_:);
  uint64_t v49 = sub_1000AED68();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v62, v48, v49);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
  uint64_t v52 = sub_1000AEDB8();
  sub_100009EF4(v51, &qword_1000D4BD8);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
LABEL_6:
  uint64_t v53 = v63;
  uint64_t v55 = (uint64_t)v70;
  uint64_t v54 = v71;
  uint64_t v56 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v26, v72);
  long long v57 = (char **)(v55 + *(int *)(v69 + 36));
  *long long v57 = KeyPath;
  v57[1] = (char *)v52;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v56);
  return sub_10001D8DC(v55, v53, &qword_1000D62C8);
}

uint64_t sub_100038054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_10000693C(&qword_1000D6308);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v34 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v32 - v6);
  uint64_t v8 = sub_1000ADD48();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D6310);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10000693C(&qword_1000D6318);
  uint64_t v16 = __chkstk_darwin(v33);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v32 - v20;
  __chkstk_darwin(v19);
  uint64_t v32 = (uint64_t)&v32 - v22;
  uint64_t v23 = type metadata accessor for TTRNewWidgetViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v23 + 72), v8);
  uint64_t v36 = a1;
  sub_10000693C(&qword_1000D6320);
  sub_10004F278();
  sub_1000AEE08();
  uint64_t v37 = sub_10002439C();
  uint64_t v38 = v24;
  sub_100009F50(&qword_1000D6340, &qword_1000D6310);
  sub_10004F318();
  sub_1000AEFD8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1000AEB88();
  sub_1000AE908();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100009EF4((uint64_t)v18, &qword_1000D6318);
  uint64_t v25 = v32;
  sub_10001D8DC((uint64_t)v21, v32, &qword_1000D6318);
  uint64_t *v7 = sub_1000AF1B8();
  v7[1] = v26;
  uint64_t v27 = sub_10000693C(&qword_1000D6350);
  sub_10003901C(a1, (uint64_t)v7 + *(int *)(v27 + 44));
  sub_100009D6C(v25, (uint64_t)v21, &qword_1000D6318);
  uint64_t v28 = v34;
  sub_100009D6C((uint64_t)v7, v34, &qword_1000D6308);
  uint64_t v29 = v35;
  sub_100009D6C((uint64_t)v21, v35, &qword_1000D6318);
  uint64_t v30 = sub_10000693C(&qword_1000D6358);
  sub_100009D6C(v28, v29 + *(int *)(v30 + 48), &qword_1000D6308);
  sub_100009EF4((uint64_t)v7, &qword_1000D6308);
  sub_100009EF4(v25, &qword_1000D6318);
  sub_100009EF4(v28, &qword_1000D6308);
  return sub_100009EF4((uint64_t)v21, &qword_1000D6318);
}

uint64_t sub_10003849C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D6338);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_1000AEB78();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_10000693C(&qword_1000D6410);
  sub_1000385AC(a1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  double v8 = sub_100038D74();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  LOBYTE(a1) = sub_1000AED08();
  sub_100009D6C((uint64_t)v6, a2, &qword_1000D6338);
  uint64_t v15 = a2 + *(int *)(sub_10000693C(&qword_1000D6320) + 36);
  *(unsigned char *)uint64_t v15 = (_BYTE)a1;
  *(double *)(v15 + 8) = v8;
  *(void *)(v15 + 16) = v10;
  *(void *)(v15 + 24) = v12;
  *(void *)(v15 + 32) = v14;
  *(unsigned char *)(v15 + 40) = 0;
  return sub_100009EF4((uint64_t)v6, &qword_1000D6338);
}

uint64_t sub_1000385AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = type metadata accessor for TTRAnyListWidget.TitleTextView(0);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000693C(&qword_1000D6418);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v42 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v42 - v14;
  sub_100043D14((uint64_t)a1, (uint64_t)v6, type metadata accessor for TTRNewWidgetViewModel);
  *(void *)&v6[v4[7]] = 1;
  uint64_t v16 = &v6[v4[8]];
  *(void *)uint64_t v16 = swift_getKeyPath();
  v16[8] = 0;
  uint64_t v17 = &v6[v4[9]];
  *(void *)uint64_t v17 = swift_getKeyPath();
  v17[8] = 0;
  uint64_t v18 = (uint64_t *)&v6[v4[10]];
  *uint64_t v18 = swift_getKeyPath();
  sub_10000693C(&qword_1000D5ED8);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v17) = sub_1000AED18();
  char v19 = sub_1000AED48();
  sub_1000AED48();
  if (sub_1000AED48() != v17) {
    char v19 = sub_1000AED48();
  }
  type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  sub_1000AE7A8();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_100043D14((uint64_t)v6, (uint64_t)v13, type metadata accessor for TTRAnyListWidget.TitleTextView);
  uint64_t v28 = &v13[*(int *)(v7 + 36)];
  *uint64_t v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_100043DC4((uint64_t)v6, type metadata accessor for TTRAnyListWidget.TitleTextView);
  sub_10001D8DC((uint64_t)v13, (uint64_t)v15, &qword_1000D6418);
  uint64_t v30 = a1[2];
  uint64_t v29 = a1[3];
  uint64_t v31 = a1[4];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = swift_getKeyPath();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_100038958();
  sub_100009D6C((uint64_t)v15, (uint64_t)v10, &qword_1000D6418);
  uint64_t v36 = (uint64_t)v10;
  uint64_t v42 = v10;
  uint64_t v37 = v43;
  sub_100009D6C(v36, v43, &qword_1000D6418);
  uint64_t v38 = sub_10000693C(&qword_1000D6420);
  uint64_t v39 = v37 + *(int *)(v38 + 48);
  *(void *)uint64_t v39 = 0;
  *(unsigned char *)(v39 + 8) = 1;
  uint64_t v40 = v37 + *(int *)(v38 + 64);
  *(void *)uint64_t v40 = v30;
  *(void *)(v40 + 8) = v29;
  *(void *)(v40 + 16) = v31;
  *(void *)(v40 + 24) = KeyPath;
  *(unsigned char *)(v40 + 32) = 0;
  *(void *)(v40 + 40) = v33;
  *(unsigned char *)(v40 + 48) = 0;
  *(void *)(v40 + 56) = v34;
  *(void *)(v40 + 64) = v35;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100009EF4((uint64_t)v15, &qword_1000D6418);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100009EF4((uint64_t)v42, &qword_1000D6418);
}

uint64_t sub_100038958()
{
  uint64_t v0 = sub_1000AEDD8();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AEDF8();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_100039B10())
  {
    if (sub_100039B10())
    {
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.headline(_:), v7);
      uint64_t v11 = enum case for Font.Design.rounded(_:);
      uint64_t v12 = sub_1000AED68();
      uint64_t v13 = *(void *)(v12 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v6, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
      uint64_t v14 = sub_1000AEDB8();
      sub_100009EF4((uint64_t)v6, &qword_1000D4BD8);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      if (qword_1000D48C8 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_1000D5CC8;
      swift_retain();
    }
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.title2(_:), v7);
    uint64_t v15 = enum case for Font.Design.rounded(_:);
    uint64_t v16 = sub_1000AED68();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v6, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
    sub_1000AEDB8();
    sub_100009EF4((uint64_t)v6, &qword_1000D4BD8);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1000AED78();
    sub_1000AEDC8();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
    uint64_t v14 = sub_1000AEDE8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v14;
}

double sub_100038D74()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AF268();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_100039B10()) {
    return 0.0;
  }
  uint64_t v10 = v0 + *(int *)(v6 + 20);
  uint64_t v11 = *(void *)v10;
  char v12 = *(unsigned char *)(v10 + 8);
  sub_10004C4D4(*(void *)v10, v12);
  char v13 = sub_10002DD10(v11, v12);
  sub_10004C8C4(v11, v12);
  double v9 = -5.0;
  if (v13)
  {
    char v14 = sub_10004336C();
    sub_100043D14(v1, (uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    if (v14)
    {
      sub_10002DA58(&qword_1000D5E30, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B7C90, (uint64_t)v5);
      char v15 = sub_100030368();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_100043DC4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
      if ((v15 & 1) == 0) {
        return v9;
      }
    }
    else
    {
      sub_100043DC4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    }
    id v16 = [self currentDevice];
    id v17 = [v16 userInterfaceIdiom];

    if (v17) {
      return 0.0;
    }
    else {
      return 1.0;
    }
  }
  return v9;
}

uint64_t sub_10003901C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v30[1] = a2;
  uint64_t v3 = sub_10000693C(&qword_1000D6360);
  __chkstk_darwin(v3);
  uint64_t v5 = (void *)((char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30[0] = sub_10000693C(&qword_1000D6368);
  __chkstk_darwin(v30[0]);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText - 8);
  uint64_t v10 = (void *)((char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView(0);
  __chkstk_darwin(v11);
  char v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000693C(&qword_1000D6370);
  uint64_t v15 = __chkstk_darwin(v14);
  id v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v30 - v18;
  if (*(void *)(*(void *)(a1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 76)) + 16))
  {
    *uint64_t v5 = 3;
    sub_100039428(a1);
    uint64_t v20 = &qword_1000D6360;
    sub_100009D6C((uint64_t)v5, (uint64_t)v7, &qword_1000D6360);
    swift_storeEnumTagMultiPayload();
    sub_10004F38C();
    sub_10004F45C();
    sub_1000AEC68();
    uint64_t v21 = (uint64_t)v5;
  }
  else
  {
    char v22 = *(unsigned char *)(a1 + 40);
    *char v13 = 0;
    v13[1] = v22;
    *((void *)v13 + 1) = swift_getKeyPath();
    v13[16] = 0;
    uint64_t v23 = (uint64_t)&v13[*(int *)(v11 + 28)];
    uint64_t *v10 = swift_getKeyPath();
    sub_10000693C(&qword_1000D5E30);
    swift_storeEnumTagMultiPayload();
    sub_1000478F8((uint64_t)v10, v23, type metadata accessor for IsVibrantText);
    uint64_t KeyPath = swift_getKeyPath();
    char v25 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for TTRAnyListWidget.InteractiveSmall(0) + 32) + 8);
    uint64_t v26 = swift_retain();
    uint64_t v27 = sub_10002E128(v26, v25, 1953394502, 0xE400000000000000);
    swift_release();
    sub_100043D14((uint64_t)v13, (uint64_t)v17, type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView);
    uint64_t v28 = (uint64_t *)&v17[*(int *)(v14 + 36)];
    *uint64_t v28 = KeyPath;
    v28[1] = v27;
    sub_100043DC4((uint64_t)v13, type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView);
    uint64_t v20 = &qword_1000D6370;
    sub_10001D8DC((uint64_t)v17, (uint64_t)v19, &qword_1000D6370);
    sub_100009D6C((uint64_t)v19, (uint64_t)v7, &qword_1000D6370);
    swift_storeEnumTagMultiPayload();
    sub_10004F38C();
    sub_10004F45C();
    sub_1000AEC68();
    uint64_t v21 = (uint64_t)v19;
  }
  return sub_100009EF4(v21, v20);
}

uint64_t sub_100039408()
{
  return sub_100041F48((void (*)(void))sub_10004F5E8);
}

uint64_t sub_100039428(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = *(void *)(a1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 76));
  if (*(void *)(v5 + 16) >= 3uLL) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = *(void *)(v5 + 16);
  }
  uint64_t v7 = *(void *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) - 8);
  uint64_t v8 = v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v9 = swift_bridgeObjectRetain();
  size_t v10 = sub_1000436CC(v9, v8, 0, (2 * v6) | 1);
  swift_bridgeObjectRelease();
  v15[1] = v10;
  swift_getKeyPath();
  sub_100043D14(a1, (uint64_t)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1000478F8((uint64_t)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  *(void *)(v12 + ((v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10004FAB8;
  *(void *)(v13 + 24) = v12;
  sub_10000693C(&qword_1000D63D8);
  sub_10000693C(&qword_1000D63C8);
  sub_100009F50(&qword_1000D63E0, &qword_1000D63D8);
  sub_100009F50(&qword_1000D63C0, &qword_1000D63C8);
  return sub_1000AF188();
}

uint64_t sub_1000396D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v35 = a4;
  uint64_t v8 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  __chkstk_darwin(v8 - 8);
  size_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRAnyListWidget.InteractiveReminderView(0);
  uint64_t v12 = (int *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v34 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v34 - v19;
  sub_100043D14(a2, (uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  uint64_t v21 = *(void *)(*(void *)(a3 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 76)) + 16);
  if (v21 == 2) {
    uint64_t v22 = 2;
  }
  else {
    uint64_t v22 = 1;
  }
  if (v21 == 1) {
    uint64_t v23 = 5;
  }
  else {
    uint64_t v23 = v22;
  }
  uint64_t v24 = &v15[v12[10]];
  *(void *)uint64_t v24 = swift_getKeyPath();
  v24[8] = 0;
  char v25 = &v15[v12[11]];
  *(void *)char v25 = swift_getKeyPath();
  v25[8] = 0;
  uint64_t v26 = &v15[v12[12]];
  *(void *)uint64_t v26 = swift_getKeyPath();
  v26[8] = 0;
  sub_1000478F8((uint64_t)v10, (uint64_t)v15, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  *(void *)&v15[v12[7]] = v23;
  uint64_t v27 = &v15[v12[8]];
  *(void *)uint64_t v27 = 0;
  v27[8] = 1;
  v15[v12[9]] = 1;
  sub_1000478F8((uint64_t)v15, (uint64_t)v18, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  uint64_t result = sub_1000478F8((uint64_t)v18, (uint64_t)v20, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  if (__OFSUB__(v35, 1))
  {
    __break(1u);
  }
  else
  {
    if (v35 - 1 <= v34)
    {
      uint64_t v29 = 0;
      uint64_t KeyPath = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 255;
    }
    else
    {
      uint64_t v29 = *(void *)(a3 + *(int *)(type metadata accessor for TTRAnyListWidget.InteractiveSmall(0) + 52));
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v31 = swift_getKeyPath();
      uint64_t v32 = 0;
    }
    sub_100043D14((uint64_t)v20, (uint64_t)v15, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    sub_100043D14((uint64_t)v15, a5, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    uint64_t v33 = a5 + *(int *)(sub_10000693C(&qword_1000D63F0) + 48);
    *(void *)uint64_t v33 = v29;
    *(void *)(v33 + 8) = KeyPath;
    *(void *)(v33 + 16) = v32;
    *(void *)(v33 + 24) = v31;
    *(unsigned char *)(v33 + 32) = 0;
    sub_10004FC38(v29, KeyPath, v32);
    sub_100043DC4((uint64_t)v20, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    sub_10004FC8C(v29, KeyPath, v32);
    return sub_100043DC4((uint64_t)v15, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  }
  return result;
}

uint64_t sub_100039A20()
{
  uint64_t v1 = type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  uint64_t v2 = v0 + *(int *)(v1 + 36);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_10004C4D4(*(void *)v2, v4);
  double v5 = sub_10002E330(v3, v4);
  sub_10004C8C4(v3, v4);
  uint64_t v6 = v0 + *(int *)(v1 + 40);
  uint64_t v7 = *(void *)v6;
  LOBYTE(v3) = *(unsigned char *)(v6 + 8);
  double v8 = 1.0 / v5;
  sub_10004C4D4(*(void *)v6, v3);
  double v9 = sub_10002E330(v7, v3);
  uint64_t result = sub_10004C8C4(v7, v3);
  if (v9 >= v8) {
    return sub_100039B10();
  }
  return result;
}

uint64_t sub_100039B10()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  uint64_t v3 = __chkstk_darwin(v2);
  double v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  double v8 = (char *)&v25 - v7;
  uint64_t v9 = v0 + *(int *)(v6 + 36);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_10004C4D4(*(void *)v9, v11);
  double v12 = sub_10002E330(v10, v11);
  sub_10004C8C4(v10, v11);
  uint64_t v13 = v1 + *(int *)(v2 + 40);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  double v16 = 1.0 / v12;
  sub_10004C4D4(*(void *)v13, v15);
  double v17 = sub_10002E330(v14, v15);
  sub_10004C8C4(v14, v15);
  sub_100043D14(v1, (uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  if (v17 < v16)
  {
    sub_100043DC4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    sub_100043D14(v1, (uint64_t)v5, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
LABEL_5:
    char v23 = 0;
    goto LABEL_6;
  }
  char v18 = sub_10004336C();
  sub_100043DC4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  sub_100043D14(v1, (uint64_t)v5, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  if ((v18 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v19 = &v5[*(int *)(v2 + 20)];
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_10004C4D4(*(void *)v19, v21);
  char v22 = sub_10002DD10(v20, v21);
  sub_10004C8C4(v20, v21);
  char v23 = v22 ^ 1;
LABEL_6:
  sub_100043DC4((uint64_t)v5, type metadata accessor for TTRAnyListWidget.InteractiveSmall);
  return v23 & 1;
}

uint64_t sub_100039D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = sub_1000AF1A8();
  a3[1] = v6;
  uint64_t v7 = (char *)a3 + *(int *)(sub_10000693C(&qword_1000D6440) + 44);
  *(void *)uint64_t v7 = sub_1000AEB68();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v8 = sub_10000693C(&qword_1000D6448);
  return sub_100039DC8(a2, a1, (uint64_t)&v7[*(int *)(v8 + 44)]);
}

uint64_t sub_100039DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v66 = a3;
  uint64_t v76 = sub_10000693C(&qword_1000D6298);
  __chkstk_darwin(v76);
  long long v75 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  uint64_t v6 = (int *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10000693C(&qword_1000D6450) - 8;
  __chkstk_darwin(v74);
  uint64_t v73 = (uint64_t)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10000693C(&qword_1000D6458);
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10000693C(&qword_1000D6460);
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v11 = __chkstk_darwin(v65);
  uint64_t v63 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v62 = (char *)v61 - v13;
  uint64_t v14 = sub_1000ADD48();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  double v17 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000693C(&qword_1000D6468);
  uint64_t v68 = *(void *)(v18 - 8);
  uint64_t v69 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10000693C(&qword_1000D6470);
  uint64_t v21 = __chkstk_darwin(v70);
  char v23 = (char *)v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v67 = (char *)v61 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v61 - v26;
  uint64_t v28 = type metadata accessor for TTRNewWidgetViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1 + *(int *)(v28 + 72), v14);
  uint64_t v78 = a1;
  uint64_t v79 = v77;
  sub_10000693C(&qword_1000D6478);
  uint64_t v29 = sub_100006F98(&qword_1000D6480);
  uint64_t v30 = sub_10004F028(&qword_1000D6488, &qword_1000D6480, (void (*)(void))sub_10005022C);
  uint64_t v31 = sub_100009F50(&qword_1000D62E8, &qword_1000D6298);
  *(void *)&long long v80 = v29;
  *((void *)&v80 + 1) = v76;
  *(void *)&long long v81 = v30;
  *((void *)&v81 + 1) = v31;
  uint64_t v32 = (uint64_t)v27;
  v61[1] = v31;
  swift_getOpaqueTypeConformance2();
  sub_1000AEE08();
  uint64_t v33 = a1;
  *(void *)&long long v80 = sub_10002439C();
  *((void *)&v80 + 1) = v34;
  sub_100009F50(&qword_1000D64A8, &qword_1000D6468);
  sub_10004F318();
  uint64_t v35 = v69;
  sub_1000AEFD8();
  swift_bridgeObjectRelease();
  uint64_t v36 = v35;
  uint64_t v37 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v36);
  uint64_t v38 = (uint64_t)v67;
  sub_1000AEB88();
  sub_1000AE908();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = (uint64_t)v23;
  uint64_t v40 = v72;
  sub_100009EF4(v39, &qword_1000D6470);
  sub_10001D8DC(v38, v32, &qword_1000D6470);
  sub_100043D14(v33, (uint64_t)&v8[v6[7]], type metadata accessor for TTRNewWidgetViewModel);
  *uint64_t v8 = 1;
  *(void *)&v8[v6[8]] = 4;
  uint64_t v41 = &v8[v6[9]];
  *(void *)uint64_t v41 = swift_getKeyPath();
  v41[8] = 0;
  *(void *)&v8[v6[10]] = 0x4040800000000000;
  uint64_t v42 = type metadata accessor for TTRAnyListWidget.InteractiveMedium(0);
  uint64_t v43 = *(void *)(v33 + *(int *)(v42 + 24));
  uint64_t v44 = *(void *)(v33 + *(int *)(v42 + 32));
  LOBYTE(v41) = sub_1000AED08();
  uint64_t v45 = v73;
  sub_100043D14((uint64_t)v8, v73, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  uint64_t v46 = v45 + *(int *)(v74 + 44);
  *(unsigned char *)uint64_t v46 = (_BYTE)v41;
  *(void *)(v46 + 8) = v43;
  *(void *)(v46 + 16) = 0;
  *(void *)(v46 + 24) = v44;
  *(void *)(v46 + 32) = 0x4030000000000000;
  uint64_t v47 = (uint64_t)v75;
  *(unsigned char *)(v46 + 40) = 0;
  sub_100043DC4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  sub_1000AE808();
  sub_1000AF1B8();
  sub_1000AE7F8();
  sub_100009D6C(v45, v37, &qword_1000D6450);
  uint64_t v48 = (_OWORD *)(v37 + *(int *)(v40 + 36));
  long long v49 = v81;
  *uint64_t v48 = v80;
  v48[1] = v49;
  v48[2] = v82;
  sub_100009EF4(v45, &qword_1000D6450);
  uint64_t v50 = enum case for DynamicTypeSize.xxxLarge(_:);
  uint64_t v51 = sub_1000AE8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v47, v50, v51);
  sub_100043D7C(&qword_1000D62D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_1000AF448();
  if (result)
  {
    sub_10004F028(&qword_1000D64B0, &qword_1000D6458, (void (*)(void))sub_1000502F8);
    uint64_t v53 = v63;
    sub_1000AEFB8();
    sub_100009EF4(v47, &qword_1000D6298);
    sub_100009EF4(v37, &qword_1000D6458);
    uint64_t v54 = v64;
    uint64_t v55 = v62;
    uint64_t v56 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v62, v53, v65);
    sub_100009D6C(v32, v38, &qword_1000D6470);
    long long v57 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    v57(v53, v55, v56);
    uint64_t v58 = v66;
    sub_100009D6C(v38, v66, &qword_1000D6470);
    uint64_t v59 = sub_10000693C(&qword_1000D64C8);
    v57((char *)(v58 + *(int *)(v59 + 48)), v53, v56);
    uint64_t v60 = *(void (**)(char *, uint64_t))(v54 + 8);
    v60(v55, v56);
    sub_100009EF4(v32, &qword_1000D6470);
    v60(v53, v56);
    return sub_100009EF4(v38, &qword_1000D6470);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003A714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v27[1] = a2;
  v27[0] = sub_10000693C(&qword_1000D6298);
  __chkstk_darwin(v27[0]);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAnyListWidget.MediumHeaderView(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D6498);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D6480);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100043D14(a1, (uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel);
  uint64_t v15 = *(void *)(a1 + *(int *)(type metadata accessor for TTRAnyListWidget.InteractiveMedium(0) + 28));
  LOBYTE(a1) = sub_1000AED08();
  sub_100043D14((uint64_t)v7, (uint64_t)v11, type metadata accessor for TTRAnyListWidget.MediumHeaderView);
  uint64_t v16 = &v11[*(int *)(v9 + 44)];
  *uint64_t v16 = a1;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v16 + 8) = _Q0;
  *((void *)v16 + 3) = v15;
  *((void *)v16 + 4) = 0;
  v16[40] = 0;
  sub_100043DC4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.MediumHeaderView);
  sub_1000AE808();
  sub_1000AF1B8();
  sub_1000AE7F8();
  sub_100009D6C((uint64_t)v11, (uint64_t)v14, &qword_1000D6498);
  uint64_t v22 = &v14[*(int *)(v12 + 36)];
  long long v23 = v29;
  *(_OWORD *)uint64_t v22 = v28;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v30;
  sub_100009EF4((uint64_t)v11, &qword_1000D6498);
  uint64_t v24 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v25 = sub_1000AE8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v4, v24, v25);
  sub_100043D7C(&qword_1000D62D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_1000AF448();
  if (result)
  {
    sub_10004F028(&qword_1000D6488, &qword_1000D6480, (void (*)(void))sub_10005022C);
    sub_100009F50(&qword_1000D62E8, &qword_1000D6298);
    sub_1000AEFB8();
    sub_100009EF4((uint64_t)v4, &qword_1000D6298);
    return sub_100009EF4((uint64_t)v14, &qword_1000D6480);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003AAC8(uint64_t a1)
{
  uint64_t v3 = sub_10000693C(&qword_1000D4C78);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v4);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100043D14(v1, (uint64_t)v9, type metadata accessor for TTRAnyListWidget.InteractiveMedium);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1000478F8((uint64_t)v9, v11 + v10, type metadata accessor for TTRAnyListWidget.InteractiveMedium);
  v16[0] = sub_100050184;
  v16[1] = v11;
  uint64_t v12 = v1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 72);
  uint64_t v13 = sub_1000ADD48();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  sub_10000693C(&qword_1000D6430);
  sub_100009F50(&qword_1000D6438, &qword_1000D6430);
  sub_1000AEF18();
  sub_100009EF4((uint64_t)v6, &qword_1000D4C78);
  return swift_release();
}

uint64_t sub_10003AD24()
{
  uint64_t v1 = sub_10000693C(&qword_1000D4C78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D64D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10000693C(&qword_1000D64D8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v6 = sub_1000AF1A8();
  v6[1] = v10;
  uint64_t v11 = (char *)v6 + *(int *)(sub_10000693C(&qword_1000D64E0) + 44);
  *(void *)uint64_t v11 = sub_1000AEBD8();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v12 = sub_10000693C(&qword_1000D64E8);
  sub_10003AFA4(v0, (uint64_t)&v11[*(int *)(v12 + 44)]);
  LOBYTE(v11) = sub_1000AED08();
  sub_100009D6C((uint64_t)v6, (uint64_t)v9, &qword_1000D64D0);
  uint64_t v13 = &v9[*(int *)(v7 + 36)];
  *uint64_t v13 = (char)v11;
  *(_OWORD *)(v13 + 8) = xmmword_1000B2080;
  *(_OWORD *)(v13 + 24) = xmmword_1000B2090;
  v13[40] = 0;
  sub_100009EF4((uint64_t)v6, &qword_1000D64D0);
  uint64_t v14 = v0 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 72);
  uint64_t v15 = sub_1000ADD48();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v3, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v3, 0, 1, v15);
  sub_1000503A4();
  sub_1000AEF18();
  sub_100009EF4((uint64_t)v3, &qword_1000D4C78);
  return sub_100009EF4((uint64_t)v9, &qword_1000D64D8);
}

uint64_t sub_10003AFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v71 = sub_10000693C(&qword_1000D6298);
  __chkstk_darwin(v71);
  uint64_t v68 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  uint64_t v5 = (int *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10000693C(&qword_1000D6450);
  __chkstk_darwin(v67);
  uint64_t v69 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000693C(&qword_1000D6500);
  uint64_t v61 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v60 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v58 - v12;
  uint64_t v13 = sub_1000ADD48();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000693C(&qword_1000D6508);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v64 = v17;
  uint64_t v65 = v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10000693C(&qword_1000D6510);
  uint64_t v21 = __chkstk_darwin(v66);
  long long v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v70 = (uint64_t)&v58 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v58 - v26;
  uint64_t v28 = type metadata accessor for TTRNewWidgetViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1 + *(int *)(v28 + 72), v13);
  uint64_t v72 = a1;
  uint64_t v29 = a1;
  sub_10000693C(&qword_1000D6518);
  uint64_t v30 = sub_100006F98(&qword_1000D6520);
  unint64_t v31 = sub_10005044C();
  uint64_t v32 = sub_100009F50(&qword_1000D62E8, &qword_1000D6298);
  uint64_t v73 = v30;
  uint64_t v74 = v71;
  unint64_t v75 = v31;
  uint64_t v76 = v32;
  uint64_t v58 = v32;
  swift_getOpaqueTypeConformance2();
  sub_1000AEE08();
  uint64_t v73 = sub_10002439C();
  uint64_t v74 = v33;
  sub_100009F50(&qword_1000D6538, &qword_1000D6508);
  sub_10004F318();
  uint64_t v34 = v64;
  sub_1000AEFD8();
  uint64_t v35 = (uint64_t)v68;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v20, v34);
  uint64_t v36 = v70;
  sub_1000AEB88();
  sub_1000AE908();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100009EF4((uint64_t)v23, &qword_1000D6510);
  uint64_t v37 = (uint64_t)v27;
  sub_10001D8DC(v36, (uint64_t)v27, &qword_1000D6510);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100043D14(v29, (uint64_t)&v7[v5[7]], type metadata accessor for TTRNewWidgetViewModel);
  unsigned char *v7 = 2;
  *(void *)&v7[v5[8]] = 7;
  uint64_t v39 = &v7[v5[9]];
  *(void *)uint64_t v39 = swift_getKeyPath();
  v39[8] = 0;
  uint64_t v40 = v5[10];
  uint64_t v41 = (uint64_t)v69;
  *(void *)&v7[v40] = 0x4040800000000000;
  LOBYTE(v39) = sub_1000AED08();
  sub_100043D14((uint64_t)v7, v41, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  uint64_t v42 = v41 + *(int *)(v67 + 36);
  *(unsigned char *)uint64_t v42 = (_BYTE)v39;
  *(void *)(v42 + 8) = 0x4024000000000000;
  *(void *)(v42 + 16) = 0;
  *(void *)(v42 + 24) = 0;
  *(void *)(v42 + 32) = 0;
  *(unsigned char *)(v42 + 40) = 0;
  sub_100043DC4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  uint64_t v43 = enum case for DynamicTypeSize.xxxLarge(_:);
  uint64_t v44 = sub_1000AE8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v35, v43, v44);
  sub_100043D7C(&qword_1000D62D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_1000AF448();
  if (result)
  {
    sub_1000502F8();
    uint64_t v46 = v60;
    sub_1000AEFB8();
    sub_100009EF4(v35, &qword_1000D6298);
    sub_100009EF4(v41, &qword_1000D6450);
    uint64_t v47 = v61;
    uint64_t v48 = v59;
    uint64_t v49 = KeyPath;
    uint64_t v50 = v62;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v59, v46, v62);
    uint64_t v51 = (uint64_t)v27;
    uint64_t v52 = v70;
    sub_100009D6C(v51, v70, &qword_1000D6510);
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v53(v46, v48, v50);
    uint64_t v54 = v63;
    sub_100009D6C(v52, v63, &qword_1000D6510);
    uint64_t v55 = sub_10000693C(&qword_1000D6540);
    uint64_t v56 = v54 + *(int *)(v55 + 48);
    *(void *)uint64_t v56 = v49;
    *(unsigned char *)(v56 + 8) = 0;
    *(void *)(v56 + 16) = 0x4000000000000000;
    v53((char *)(v54 + *(int *)(v55 + 64)), v46, v50);
    long long v57 = *(void (**)(char *, uint64_t))(v47 + 8);
    swift_retain();
    v57(v48, v50);
    sub_100009EF4(v37, &qword_1000D6510);
    v57(v46, v50);
    swift_release();
    return sub_100009EF4(v52, &qword_1000D6510);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003B7B8(uint64_t a1)
{
  uint64_t v2 = sub_10000693C(&qword_1000D6298);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAnyListWidget.LargeHeaderView(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D6520);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100043D14(a1, (uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel);
  sub_1000AF1B8();
  sub_1000AE7F8();
  sub_100043D14((uint64_t)v7, (uint64_t)v10, type metadata accessor for TTRAnyListWidget.LargeHeaderView);
  uint64_t v11 = &v10[*(int *)(v8 + 36)];
  long long v12 = v16[1];
  *(_OWORD *)uint64_t v11 = v16[0];
  *((_OWORD *)v11 + 1) = v12;
  *((_OWORD *)v11 + 2) = v16[2];
  sub_100043DC4((uint64_t)v7, type metadata accessor for TTRAnyListWidget.LargeHeaderView);
  uint64_t v13 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v14 = sub_1000AE8B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v4, v13, v14);
  sub_100043D7C(&qword_1000D62D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_1000AF448();
  if (result)
  {
    sub_10005044C();
    sub_100009F50(&qword_1000D62E8, &qword_1000D6298);
    sub_1000AEFB8();
    sub_100009EF4((uint64_t)v4, &qword_1000D6298);
    return sub_100009EF4((uint64_t)v10, &qword_1000D6520);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003BA8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = *(void *)&v1[*(int *)(v6 + 24)];
  uint64_t v20 = v8;
  uint64_t v9 = &v1[v7];
  uint64_t v10 = *(void *)&v1[v7 + 8 + v3[16]];
  sub_100043D14((uint64_t)&v1[v7], (uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel);
  if (v10)
  {
    uint64_t v11 = *(void *)&v5[v3[17]];
    swift_bridgeObjectRetain();
    sub_100043DC4((uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel);
    if (v11)
    {
      uint64_t result = swift_bridgeObjectRelease();
      if (__OFSUB__(v8--, 1))
      {
        __break(1u);
        return result;
      }
      uint64_t v20 = v8;
    }
  }
  else
  {
    sub_100043DC4((uint64_t)v5, type metadata accessor for TTRNewWidgetViewModel);
  }
  uint64_t v14 = *(void *)(*(void *)&v9[v3[19]] + 16);
  if (v8 < v14) {
    uint64_t v14 = v8;
  }
  if (v14 <= 1) {
    uint64_t v15 = 1;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *a1 = sub_1000AF1B8();
  a1[1] = v17;
  uint64_t v18 = sub_10000693C(&qword_1000D6960);
  sub_10003BC34(v1, v16, &v20, (uint64_t)a1 + *(int *)(v18 + 44));
  return swift_release();
}

uint64_t sub_10003BC34@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v31 = a4;
  uint64_t v32 = sub_10000693C(&qword_1000D6968);
  __chkstk_darwin(v32);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = sub_10000693C(&qword_1000D6970);
  __chkstk_darwin(v30);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText - 8);
  uint64_t v11 = (uint64_t *)((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10000693C(&qword_1000D6978);
  uint64_t v15 = __chkstk_darwin(v29);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v27 - v18;
  uint64_t v20 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  uint64_t v21 = &a1[*(int *)(v20 + 20)];
  if (*(void *)(*(void *)&v21[*(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 76)] + 16))
  {
    *uint64_t v6 = *(void *)&a1[*(int *)(v20 + 24)];
    sub_10003C014((uint64_t)a1, v27, v28, (uint64_t)v6 + *(int *)(v32 + 44));
    sub_100009D6C((uint64_t)v6, (uint64_t)v8, &qword_1000D6968);
    swift_storeEnumTagMultiPayload();
    sub_1000579F0();
    sub_100057ACC();
    sub_1000AEC68();
    uint64_t v22 = (uint64_t)v6;
    long long v23 = &qword_1000D6968;
  }
  else
  {
    char v24 = v21[40];
    *uint64_t v14 = *a1;
    v14[1] = v24;
    *((void *)v14 + 1) = swift_getKeyPath();
    v14[16] = 0;
    uint64_t v25 = (uint64_t)&v14[*(int *)(v12 + 28)];
    *uint64_t v11 = swift_getKeyPath();
    sub_10000693C(&qword_1000D5E30);
    swift_storeEnumTagMultiPayload();
    sub_1000478F8((uint64_t)v11, v25, type metadata accessor for IsVibrantText);
    sub_100043D7C(&qword_1000D6380, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView);
    sub_1000AEF88();
    sub_100043DC4((uint64_t)v14, type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView);
    sub_10001D8DC((uint64_t)v17, (uint64_t)v19, &qword_1000D6978);
    sub_100009D6C((uint64_t)v19, (uint64_t)v8, &qword_1000D6978);
    swift_storeEnumTagMultiPayload();
    sub_1000579F0();
    sub_100057ACC();
    sub_1000AEC68();
    uint64_t v22 = (uint64_t)v19;
    long long v23 = &qword_1000D6978;
  }
  return sub_100009EF4(v22, v23);
}

uint64_t sub_10003C014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a3;
  uint64_t v7 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  uint64_t v64 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v65 = v8;
  uint64_t v67 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10000693C(&qword_1000D63B8);
  uint64_t v69 = *(void *)(v62 - 8);
  uint64_t v9 = __chkstk_darwin(v62);
  uint64_t v68 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v70 = (char *)&v56 - v11;
  uint64_t v12 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = a2;
  uint64_t v16 = (unint64_t *)(a2 + 16);
  uint64_t v17 = a1;
  uint64_t v18 = a1 + *(int *)(v7 + 20);
  uint64_t v19 = (uint64_t *)(v18 + *(int *)(v13 + 64));
  uint64_t v20 = v19[1];
  sub_100043D14(v18, (uint64_t)v15, type metadata accessor for TTRNewWidgetViewModel);
  if (v20)
  {
    uint64_t v20 = *(void *)&v15[*(int *)(v12 + 68)];
    swift_bridgeObjectRetain();
    sub_100043DC4((uint64_t)v15, type metadata accessor for TTRNewWidgetViewModel);
    if (v20)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = v19[1];
      if (v20)
      {
        uint64_t v61 = *v19;
        uint64_t v21 = v17 + *(int *)(v7 + 28);
        uint64_t v22 = *(void *)v21;
        char v23 = *(unsigned char *)(v21 + 8);
        swift_bridgeObjectRetain();
        sub_10004C4D4(v22, v23);
        double v24 = sub_10002E330(v22, v23);
        sub_10004C8C4(v22, v23);
        uint64_t v25 = sub_1000241F4(v24);
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v27 = swift_getKeyPath();
        uint64_t v28 = swift_getKeyPath();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_10004C4D4(v27, 0);
        swift_retain();
        uint64_t v60 = v27;
        sub_10004C8C4(v27, 0);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = v28;
        swift_release();
        goto LABEL_7;
      }
    }
  }
  else
  {
    sub_100043DC4((uint64_t)v15, type metadata accessor for TTRNewWidgetViewModel);
  }
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t v25 = 0;
  uint64_t KeyPath = 0;
  uint64_t v59 = 0;
LABEL_7:
  uint64_t v29 = *(void *)(v18 + *(int *)(v12 + 76));
  uint64_t result = swift_beginAccess();
  unint64_t v31 = *v16;
  if ((*v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (*(void *)(v29 + 16) < v31)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v32 = *(void *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) - 8);
  uint64_t v33 = v29 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  uint64_t v58 = KeyPath;
  uint64_t v34 = swift_bridgeObjectRetain();
  size_t v35 = sub_1000436CC(v34, v33, 0, (2 * v31) | 1);
  swift_bridgeObjectRelease();
  if (*(void *)(v29 + 16) >= *v63) {
    uint64_t v36 = 1;
  }
  else {
    uint64_t v36 = 2;
  }
  size_t v71 = v35;
  swift_getKeyPath();
  uint64_t v63 = v25;
  uint64_t v37 = v67;
  sub_100043D14(v17, v67, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  unint64_t v38 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v36;
  *(void *)(v39 + 24) = v66;
  sub_1000478F8(v37, v39 + v38, type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_100057E84;
  *(void *)(v40 + 24) = v39;
  swift_retain();
  sub_10000693C(&qword_1000D63D8);
  uint64_t v41 = v62;
  uint64_t v42 = v20;
  uint64_t v57 = v20;
  sub_10000693C(&qword_1000D63C8);
  sub_100009F50(&qword_1000D63E0, &qword_1000D63D8);
  sub_100009F50(&qword_1000D63C0, &qword_1000D63C8);
  uint64_t v43 = v70;
  sub_1000AF188();
  uint64_t v44 = v68;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  uint64_t v46 = v43;
  uint64_t v47 = v41;
  v45(v68, v46, v41);
  uint64_t v49 = v60;
  uint64_t v48 = v61;
  *(void *)a4 = v61;
  *(void *)(a4 + 8) = v42;
  uint64_t v50 = (uint64_t)v63;
  uint64_t v51 = v58;
  uint64_t v52 = v59;
  *(void *)(a4 + 16) = v63;
  *(void *)(a4 + 24) = v51;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = v49;
  *(void *)(a4 + 56) = 0;
  *(void *)(a4 + 64) = v52;
  *(unsigned char *)(a4 + 72) = 0;
  uint64_t v53 = sub_10000693C(&qword_1000D69A8);
  v45((char *)(a4 + *(int *)(v53 + 48)), v44, v47);
  uint64_t v54 = v57;
  sub_100057FA8(v48, v57, v50, v51, 0, 0, v49, 0);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v69 + 8);
  v55(v70, v47);
  v55(v44, v47);
  return sub_100058028(v48, v54, v50, v51, 0, 0, v49, 0);
}

uint64_t sub_10003C6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v34 = a5;
  uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRAnyListWidget.InteractiveReminderView(0);
  uint64_t v15 = (int *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v34 - v19;
  sub_100043D14(a2, (uint64_t)v13, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  uint64_t v21 = &v18[v15[10]];
  *(void *)uint64_t v21 = swift_getKeyPath();
  v21[8] = 0;
  uint64_t v22 = &v18[v15[11]];
  *(void *)uint64_t v22 = swift_getKeyPath();
  v22[8] = 0;
  char v23 = &v18[v15[12]];
  *(void *)char v23 = swift_getKeyPath();
  v23[8] = 0;
  sub_1000478F8((uint64_t)v13, (uint64_t)v18, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  *(void *)&v18[v15[7]] = a3;
  double v24 = &v18[v15[8]];
  *(void *)double v24 = 0;
  v24[8] = 1;
  v18[v15[9]] = 0;
  sub_1000478F8((uint64_t)v18, (uint64_t)v20, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  uint64_t result = swift_beginAccess();
  uint64_t v26 = *(void *)(a4 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    if (v28 <= a1)
    {
      uint64_t v29 = 0;
      uint64_t KeyPath = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 255;
    }
    else
    {
      uint64_t v29 = *(void *)(v34
                      + *(int *)(type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0) + 32));
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v31 = swift_getKeyPath();
      uint64_t v32 = 0;
    }
    sub_100043D14((uint64_t)v20, (uint64_t)v18, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    sub_100043D14((uint64_t)v18, a6, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    uint64_t v33 = a6 + *(int *)(sub_10000693C(&qword_1000D63F0) + 48);
    *(void *)uint64_t v33 = v29;
    *(void *)(v33 + 8) = KeyPath;
    *(void *)(v33 + 16) = v32;
    *(void *)(v33 + 24) = v31;
    *(unsigned char *)(v33 + 32) = 0;
    sub_10004FC38(v29, KeyPath, v32);
    sub_100043DC4((uint64_t)v20, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
    sub_10004FC8C(v29, KeyPath, v32);
    return sub_100043DC4((uint64_t)v18, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
  }
  return result;
}

id sub_10003C9DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000693C(&qword_1000D6A08);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v183 = (int *)type metadata accessor for TTRAnyListWidget.InteractiveReminderView(0);
  __chkstk_darwin(v183);
  uint64_t v170 = (uint64_t)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D4E10);
  __chkstk_darwin(v8 - 8);
  uint64_t v166 = (uint64_t)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_1000AECC8();
  uint64_t v164 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v163 = (char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText - 8);
  v161 = (uint64_t *)((char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (int *)type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v153 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_10000693C(&qword_1000D55A0);
  uint64_t v157 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v17 = (char *)&v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000693C(&qword_1000D6A10);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v153 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_10000693C(&qword_1000D6A18);
  __chkstk_darwin(v180);
  uint64_t v159 = (uint64_t)&v153 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_10000693C(&qword_1000D6A20);
  uint64_t v162 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  int v160 = (char *)&v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_10000693C(&qword_1000D6A28);
  uint64_t v167 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v181 = (char *)&v153 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000693C(&qword_1000D6A30);
  uint64_t v25 = __chkstk_darwin(v24);
  char v169 = (char *)&v153 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v153 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  Class v172 = (char *)&v153 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  id v171 = (char *)&v153 - v33;
  __chkstk_darwin(v32);
  uint64_t v173 = (uint64_t)&v153 - v34;
  uint64_t v35 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v36 = *(void **)((char *)v2 + *(int *)(v35 + 32));
  uint64_t v179 = a1;
  uint64_t v178 = v6;
  uint64_t v177 = v4;
  v176 = v2;
  uint64_t v175 = v24;
  if (v36)
  {
    uint64_t v155 = v29;
    uint64_t v154 = v35;
    uint64_t v174 = *(int *)(v35 + 40);
    int v37 = *((unsigned __int8 *)v2 + v174);
    unint64_t v38 = *v2;
    id v39 = v36;
    id v40 = [v38 string];
    uint64_t v41 = sub_1000AF498();
    uint64_t v43 = v42;

    id v156 = v39;
    uint64_t aBlock = sub_1000A8F20((uint64_t)v39, v41, v43, v37 ^ 1u);
    uint64_t v185 = v44;
    uint64_t v186 = v45;
    sub_10001C45C();
    sub_1000AF178();
    uint64_t v46 = v183;
    uint64_t v47 = (double *)((char *)v2 + v183[6]);
    double v48 = *v47;
    LOBYTE(v43) = *((unsigned char *)v47 + 8);
    uint64_t v49 = sub_1000AF1B8();
    __n128 v51 = sub_10002D678(0.0, 1, 0.0, 1, 0.0, 1, v48, v43, (uint64_t)v20, 0.0, 1, 0.0, 1, v49, v50, &qword_1000D55A0, &qword_1000D6A10);
    (*(void (**)(char *, uint64_t, __n128))(v157 + 8))(v17, v158, v51);
    LOBYTE(v43) = sub_1000AED38();
    char v52 = sub_1000AED48();
    sub_1000AED48();
    if (sub_1000AED48() != v43) {
      char v52 = sub_1000AED48();
    }
    sub_1000AE7A8();
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    uint64_t v61 = v159;
    sub_100009D6C((uint64_t)v20, v159, &qword_1000D6A10);
    uint64_t v62 = v61 + *(int *)(v180 + 36);
    *(unsigned char *)uint64_t v62 = v52;
    *(void *)(v62 + 8) = v54;
    *(void *)(v62 + 16) = v56;
    *(void *)(v62 + 24) = v58;
    *(void *)(v62 + 32) = v60;
    *(unsigned char *)(v62 + 40) = 0;
    sub_100009EF4((uint64_t)v20, &qword_1000D6A10);
    uint64_t v63 = v176;
    sub_100043D14((uint64_t)v176, (uint64_t)v15, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    double v64 = *v47;
    char v65 = *((unsigned char *)v47 + 8);
    char v66 = *((unsigned char *)v63 + v46[7]);
    *(void *)&v15[v13[5]] = *(id *)((char *)v63 + v46[5]);
    uint64_t v67 = &v15[v13[6]];
    *(double *)uint64_t v67 = v64;
    v67[8] = v65;
    v15[v13[7]] = v66;
    uint64_t v68 = &v15[v13[8]];
    *(void *)uint64_t v68 = swift_getKeyPath();
    v68[8] = 0;
    uint64_t v69 = &v15[v13[9]];
    *(void *)uint64_t v69 = swift_getKeyPath();
    v69[8] = 0;
    uint64_t v70 = &v15[v13[10]];
    *(void *)uint64_t v70 = swift_getKeyPath();
    v70[8] = 0;
    size_t v71 = &v15[v13[11]];
    *(void *)size_t v71 = swift_getKeyPath();
    v71[8] = 0;
    uint64_t v72 = (uint64_t)&v15[v13[12]];
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v74 = (uint64_t)v161;
    uint64_t *v161 = KeyPath;
    sub_10000693C(&qword_1000D5E30);
    swift_storeEnumTagMultiPayload();
    sub_1000478F8(v74, v72, type metadata accessor for IsVibrantText);
    uint64_t v75 = sub_10004F028(&qword_1000D6A40, &qword_1000D6A18, (void (*)(void))sub_1000583F0);
    uint64_t v76 = sub_100043D7C(&qword_1000D6A50, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ReminderToggleStyle);
    uint64_t v77 = v160;
    uint64_t v78 = v180;
    sub_1000AEF68();
    sub_100043DC4((uint64_t)v15, type metadata accessor for TTRAnyListWidget.ReminderToggleStyle);
    sub_100009EF4(v61, &qword_1000D6A18);
    uint64_t v79 = v163;
    sub_1000AECB8();
    uint64_t aBlock = v78;
    uint64_t v185 = (uint64_t)v13;
    long long v80 = v63;
    uint64_t v186 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v75;
    uint64_t v187 = (void *)v76;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v82 = v182;
    sub_1000AEFF8();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v79, v165);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v77, v82);
    sub_10000693C(&qword_1000D6A58);
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_1000B20A0;
    id v84 = [*v63 string];
    uint64_t v85 = sub_1000AF498();
    uint64_t v87 = v86;

    *(void *)(v83 + 32) = v85;
    *(void *)(v83 + 40) = v87;
    *(void *)(v83 + 48) = sub_1000AE078();
    *(void *)(v83 + 56) = v88;
    uint64_t v89 = v154;
    uint64_t v90 = v166;
    sub_100009D6C((uint64_t)v63 + *(int *)(v154 + 24), v166, &qword_1000D4E10);
    uint64_t v91 = sub_1000ADC28();
    uint64_t v92 = *(void *)(v91 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91) == 1)
    {
      sub_100009EF4(v90, &qword_1000D4E10);
      uint64_t v93 = (uint64_t *)(v83 + 64);
      uint64_t v94 = v170;
      sub_100043D14((uint64_t)v80, v170, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
      uint64_t v95 = (uint64_t)v169;
    }
    else
    {
      uint64_t v128 = sub_1000ADC08();
      uint64_t v130 = v129;
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v90, v91);
      uint64_t v93 = (uint64_t *)(v83 + 64);
      uint64_t v94 = v170;
      sub_100043D14((uint64_t)v80, v170, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
      uint64_t v95 = (uint64_t)v169;
      if (v130)
      {
        *uint64_t v93 = v128;
LABEL_15:
        *(void *)(v83 + 72) = v130;
        sub_100043DC4(v94, type metadata accessor for TTRAnyListWidget.InteractiveReminderView);
        if (*((unsigned char *)v80 + *(int *)(v89 + 44)) == 1)
        {
          uint64_t v134 = sub_1000AE078();
        }
        else
        {
          uint64_t v134 = 0;
          uint64_t v135 = 0;
        }
        uint64_t v136 = v168;
        *(void *)(v83 + 80) = v134;
        *(void *)(v83 + 88) = v135;
        uint64_t aBlock = v83;
        sub_10000693C(&qword_1000D6A60);
        sub_100009F50(&qword_1000D6A68, &qword_1000D6A60);
        uint64_t v137 = sub_1000AF528();
        swift_bridgeObjectRelease();
        uint64_t aBlock = v137;
        sub_1000AE098();
        swift_bridgeObjectRetain();
        sub_10000693C(&qword_1000D5C78);
        sub_100009F50(&qword_1000D5C80, &qword_1000D5C78);
        uint64_t v138 = sub_1000AF3F8();
        uint64_t v140 = v139;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t aBlock = v138;
        uint64_t v185 = v140;
        *(void *)&long long v190 = v182;
        *((void *)&v190 + 1) = OpaqueTypeConformance2;
        swift_getOpaqueTypeConformance2();
        sub_10004F318();
        uint64_t v141 = v181;
        sub_1000AEFD8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v167 + 8))(v141, v136);
        sub_1000AEB88();
        uint64_t v142 = (uint64_t)v155;
        sub_1000AE908();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100009EF4(v95, &qword_1000D6A30);
        uint64_t aBlock = sub_1000AE068();
        uint64_t v185 = v143;
        uint64_t v144 = (uint64_t)v172;
        sub_1000AE8F8();
        swift_bridgeObjectRelease();
        sub_100009EF4(v142, &qword_1000D6A30);
        sub_10000693C(&qword_1000D5940);
        uint64_t v145 = swift_allocObject();
        *(_OWORD *)(v145 + 16) = xmmword_1000B0270;
        id v146 = [*v80 string];
        uint64_t v147 = sub_1000AF498();
        uint64_t v149 = v148;

        *(void *)(v145 + 32) = v147;
        *(void *)(v145 + 40) = v149;
        v150 = v171;
        sub_1000AE918();
        swift_bridgeObjectRelease();
        sub_100009EF4(v144, &qword_1000D6A30);
        uint64_t v151 = (uint64_t)v150;
        uint64_t v152 = v173;
        sub_10001D8DC(v151, v173, &qword_1000D6A30);
        sub_100009D6C(v152, (uint64_t)v178, &qword_1000D6A30);
        swift_storeEnumTagMultiPayload();
        sub_10000693C(&qword_1000D55B0);
        sub_100058258();
        sub_10001C2D0();
        sub_1000AEC68();

        return (id)sub_100009EF4(v152, &qword_1000D6A30);
      }
    }
    uint64_t v131 = *(void *)(v94 + *(int *)(v89 + 36));
    if (v131 < 1)
    {
      uint64_t v132 = 0;
      uint64_t v130 = 0;
    }
    else
    {
      uint64_t v132 = sub_100013514(v131);
      uint64_t v130 = v133;
    }
    *uint64_t v93 = v132;
    goto LABEL_15;
  }
  uint64_t v96 = *v2;
  uint64_t v97 = v183;
  char v98 = *((unsigned char *)v2 + v183[9] + 8);
  uint64_t v99 = swift_retain();
  uint64_t v100 = sub_10002E128(v99, v98, 1953394502, 0xE400000000000000);
  swift_release();
  char v101 = *((unsigned char *)v2 + v97[10] + 8);
  uint64_t v102 = swift_retain();
  uint64_t v103 = sub_10002E128(v102, v101, 0x726F6C6F43, 0xE500000000000000);
  swift_release();
  id result = [v96 string];
  if (result)
  {
    v105 = result;
    long long v190 = xmmword_1000B0280;
    char v191 = 0;
    uint64_t v192 = _swiftEmptyArrayStorage;
    id v106 = [self attributeName];
    id v107 = [v96 length];
    uint64_t v108 = (void *)swift_allocObject();
    v108[2] = &v190;
    v108[3] = v105;
    v108[4] = v100;
    v108[5] = v103;
    uint64_t v109 = swift_allocObject();
    *(void *)(v109 + 16) = sub_100009E2C;
    *(void *)(v109 + 24) = v108;
    v188 = sub_10001C1E8;
    uint64_t v189 = v109;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v185 = 1107296256;
    uint64_t v186 = sub_100009C54;
    uint64_t v187 = &unk_1000D0160;
    uint64_t v110 = _Block_copy(&aBlock);
    id v111 = v105;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    [v96 enumerateAttribute:v106 inRange:0 options:v107 usingBlock:v110];

    _Block_release(v110);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      long long v113 = v190;
      char v114 = v191;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v115 = v183;
      uint64_t v116 = (uint64_t)v176;
      char v117 = *((unsigned char *)v176 + v183[8] + 8);
      uint64_t v118 = swift_retain();
      sub_10002E128(v118, v117, 1953394502, 0xE400000000000000);
      swift_release();
      uint64_t v119 = sub_1000AEEB8();
      uint64_t v121 = v120;
      char v123 = v122;
      uint64_t v182 = v124;
      swift_release();
      sub_100006FE0(v113, *((uint64_t *)&v113 + 1), v114);
      swift_bridgeObjectRelease();
      uint64_t v125 = *(void *)(v116 + v115[5]);
      uint64_t v126 = swift_getKeyPath();
      uint64_t v127 = v178;
      *uint64_t v178 = v119;
      v127[1] = v121;
      *((unsigned char *)v127 + 16) = v123 & 1;
      v127[3] = v182;
      v127[4] = v126;
      v127[5] = v125;
      *((unsigned char *)v127 + 48) = 0;
      swift_storeEnumTagMultiPayload();
      sub_10000693C(&qword_1000D55B0);
      sub_100058258();
      sub_10001C2D0();
      return (id)sub_1000AEC68();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10003DD00()
{
  return sub_100041F48((void (*)(void))sub_100047960);
}

uint64_t sub_10003DD20()
{
  return sub_100041F48((void (*)(void))sub_10004FD34);
}

uint64_t sub_10003DD40()
{
  return sub_100041F48((void (*)(void))sub_10004FCE0);
}

uint64_t sub_10003DD64(uint64_t a1, int a2, uint64_t a3, char a4, char *a5, double *a6, uint64_t a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  uint64_t v62 = a7;
  uint64_t v63 = (char *)a5;
  double v64 = a6;
  uint64_t v65 = a1;
  int v66 = a2;
  uint64_t v17 = sub_10000693C(&qword_1000D6A78);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (double *)((char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1000AE838();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v68 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10000693C(&qword_1000D6A80);
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AE858();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v67 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000693C(&qword_1000D6A88);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10000693C(&qword_1000D6A90);
  uint64_t result = __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v53 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v34 = 0.0;
  if ((a4 & 1) != 0 || *(double *)&a3 == INFINITY)
  {
    uint64_t v35 = (uint64_t)v64;
  }
  else
  {
    uint64_t v35 = (uint64_t)v64;
    double v52 = v64[1];
    if (v52 < *(double *)&a3)
    {
      if (__OFSUB__(v62, 1)) {
        goto LABEL_20;
      }
      double v34 = (*(double *)&a3 - v52) / ((double)(v62 - 1) + (double)(v62 - 1));
    }
  }
  double v64 = v19;
  LOBYTE(v69[0]) = v66 & 1;
  char v70 = a4 & 1;
  uint64_t v36 = v63;
  uint64_t v62 = sub_100058CB4(v65, v66 & 1, a3, a4 & 1, (uint64_t)v63, v35, v34);
  v71.origin.x = a8;
  v71.origin.y = a9;
  v71.size.width = a10;
  v71.size.height = a11;
  double MinY = CGRectGetMinY(v71);
  unint64_t v38 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  uint64_t v61 = v25 + 16;
  uint64_t v60 = v38;
  v38(v29, v36, v24);
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v67, v29, v24);
  sub_100043D7C(&qword_1000D6A98, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_1000AF518();
  id v39 = (uint64_t *)&v33[*(int *)(v30 + 52)];
  *id v39 = v62;
  v39[1] = 0;
  uint64_t v62 = *(int *)(v30 + 56);
  v33[v62] = 0;
  id v40 = &v33[*(int *)(sub_10000693C(&qword_1000D6AA0) + 36)];
  sub_100043D7C(&qword_1000D6AA8, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  uint64_t v59 = (void (**)(char *))(v21 + 16);
  uint64_t v58 = (void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v63 = (char *)(v21 + 56);
  uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  uint64_t v41 = (uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 32);
  uint64_t v56 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v42 = v54;
  while (1)
  {
    uint64_t v43 = *(void *)v40;
    sub_1000AF698();
    if (v43 == v69[0])
    {
      uint64_t v45 = (uint64_t)v64;
      (*(void (**)(double *, uint64_t, uint64_t, uint64_t))v63)(v64, 1, 1, v20);
LABEL_12:
      sub_100009EF4(v45, &qword_1000D6A78);
      goto LABEL_14;
    }
    uint64_t v44 = (void (*)(uint64_t *, void))sub_1000AF6B8();
    uint64_t v45 = (uint64_t)v64;
    (*v59)((char *)v64);
    v44(v69, 0);
    uint64_t v46 = v67;
    v60(v67, v33, v24);
    sub_1000AF6A8();
    (*v58)(v46, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v63)(v45, 0, 1, v20);
    if ((*v57)(v45, 1, v20) == 1) {
      goto LABEL_12;
    }
    uint64_t v47 = *v41;
    uint64_t result = (*v41)(v68, v45, v20);
    unint64_t v48 = v39[1];
    unint64_t v49 = *(void *)(*v39 + 16);
    if (v48 == v49)
    {
      (*v56)(v68, v20);
LABEL_14:
      v33[v62] = 1;
      return sub_100009EF4((uint64_t)v33, &qword_1000D6A90);
    }
    if (v48 >= v49) {
      break;
    }
    double v50 = *(double *)(*v39 + 8 * v48 + 32);
    v39[1] = v48 + 1;
    uint64_t v51 = *(int *)(v55 + 48);
    v47(v42, (uint64_t)v68, v20);
    *(double *)&v42[v51] = v50;
    v72.origin.x = a8;
    v72.origin.y = a9;
    v72.size.width = a10;
    v72.size.height = a11;
    CGRectGetMinX(v72);
    sub_1000AF1F8();
    LOBYTE(v69[0]) = v66 & 1;
    char v70 = 0;
    sub_1000AE828();
    (*v56)(v42, v20);
    double MinY = MinY + v34 + v50;
    if (v33[v62] == 1) {
      return sub_100009EF4((uint64_t)v33, &qword_1000D6A90);
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

double sub_10003E488(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v2 = sub_10000693C(&qword_1000D6A78);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AE838();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_1000AE858();
  sub_100043D7C(&qword_1000D6AA8, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_1000AF678();
  sub_1000AF698();
  uint64_t v24 = v10;
  uint64_t v11 = sub_1000AF688();
  uint64_t v26 = v5;
  if (v11 < 1)
  {
    double v14 = 0.0;
  }
  else
  {
    uint64_t v12 = v11;
    uint64_t v13 = 0;
    double v14 = 0.0;
    do
    {
      if (__OFADD__(v13, 2)) {
        uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v15 = v13 + 2;
      }
      sub_1000AE868();
      char v29 = 0;
      char v28 = 1;
      sub_1000AE818();
      double v17 = v16;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
      if (v14 < v17) {
        double v14 = v17;
      }
      uint64_t v13 = v15;
    }
    while (v15 < v12);
  }
  sub_1000AF678();
  sub_1000AF698();
  if (sub_1000AF688() > 1)
  {
    uint64_t v18 = (uint64_t)v25;
    sub_1000AE868();
    uint64_t v19 = v26;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v18, 1, v4) != 1)
    {
      uint64_t v20 = v23;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v23, v18, v4);
      char v29 = 0;
      char v28 = 1;
      sub_1000AE818();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v4);
      return v14;
    }
  }
  else
  {
    uint64_t v18 = (uint64_t)v25;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v25, 1, 1, v4);
  }
  sub_100009EF4(v18, &qword_1000D6A78);
  return v14;
}

double sub_10003E83C(char a1, uint64_t a2, uint64_t a3)
{
  sub_1000AE818();
  double result = v5;
  if ((a1 & 1) == 0 && v5 < *(double *)a3) {
    return *(double *)a3;
  }
  return result;
}

unint64_t sub_10003E8A8(unint64_t result, uint64_t a2, uint64_t a3, double *a4)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)(a3 + 16) <= result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  double v4 = *(double *)(a3 + 8 * result + 32);
  if ((result & 1) == 0 && *a4 > 0.0)
  {
    double result = sub_1000AE818();
    if (v6 - v4 <= *a4) {
      *a4 = *a4 - (v6 - v4);
    }
  }
  return result;
}

uint64_t sub_10003E94C()
{
  return sub_1000AE938();
}

void sub_10003E978(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = sub_10003E488(a1, *v2);
  *(void *)(a2 + 8) = v4;
}

double sub_10003E9AC(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return INFINITY;
  }
  return result;
}

uint64_t sub_10003E9F0(uint64_t a1, char a2, uint64_t a3, char a4, char *a5, double *a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  return sub_10003DD64(a1, a2 & 1, a3, a4 & 1, a5, a6, *v10, a7, a8, a9, a10);
}

uint64_t sub_10003EA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10003EA7C(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_10003EA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10003EA7C(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_10003EA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_10003EAC0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000AE788();
  return sub_10003EB30;
}

void sub_10003EB30(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_10003EB7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v35 = a1;
  uint64_t v3 = sub_1000ADD48();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000693C(&qword_1000D6D10);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText - 8);
  uint64_t v13 = (uint64_t *)((char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for TTRAnyListWidget.CompletedView(0);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v31 - v19;
  *uint64_t v18 = sub_1000AEC88() & 1;
  *((void *)v18 + 1) = swift_getKeyPath();
  v18[16] = 0;
  uint64_t v21 = (uint64_t *)&v18[*(int *)(v15 + 32)];
  *uint64_t v21 = swift_getKeyPath();
  sub_10000693C(&qword_1000D5E30);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t)&v18[*(int *)(v15 + 36)];
  *uint64_t v13 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_1000478F8((uint64_t)v13, v22, type metadata accessor for IsVibrantText);
  sub_1000478F8((uint64_t)v18, (uint64_t)v20, type metadata accessor for TTRAnyListWidget.CompletedView);
  uint64_t v23 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v24 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v35 + *(int *)(v23 + 28), v34);
  uint64_t v39 = v24;
  uint64_t v40 = v37;
  sub_10000693C(&qword_1000D6D18);
  sub_10004F028(&qword_1000D6D20, &qword_1000D6D18, (void (*)(void))sub_10005B624);
  sub_1000AEE08();
  sub_100043D14((uint64_t)v20, (uint64_t)v18, type metadata accessor for TTRAnyListWidget.CompletedView);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v26 = v36;
  v25(v36, v10, v5);
  uint64_t v27 = v38;
  sub_100043D14((uint64_t)v18, v38, type metadata accessor for TTRAnyListWidget.CompletedView);
  uint64_t v28 = sub_10000693C(&qword_1000D6D48);
  v25((char *)(v27 + *(int *)(v28 + 48)), v26, v5);
  char v29 = *(void (**)(char *, uint64_t))(v6 + 8);
  v29(v10, v5);
  sub_100043DC4((uint64_t)v20, type metadata accessor for TTRAnyListWidget.CompletedView);
  v29(v26, v5);
  return sub_100043DC4((uint64_t)v18, type metadata accessor for TTRAnyListWidget.CompletedView);
}

uint64_t sub_10003EFCC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000693C(&qword_1000D6D40);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000693C(&qword_1000D6D30);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D6D18);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_1000AEB58();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v15 = sub_10000693C(&qword_1000D6D50);
  sub_10003F264(a1, a2, (uint64_t)&v8[*(int *)(v15 + 44)]);
  uint64_t v16 = (double *)((char *)a1 + *(int *)(type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(0) + 24));
  double v17 = *v16;
  LOBYTE(a2) = *((unsigned char *)v16 + 8);
  uint64_t v18 = sub_1000AF1B8();
  sub_10002D124(0.0, 1, 0.0, 1, 0.0, 1, v17, a2, (uint64_t)v11, 0.0, 1, 0.0, 1, v18, v19, (uint64_t)&qword_1000D6D40, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009D6C, &qword_1000D6D30);
  sub_100009EF4((uint64_t)v8, &qword_1000D6D40);
  unsigned __int8 v20 = sub_1000AED28();
  char v21 = sub_1000AED48();
  sub_1000AED48();
  if (sub_1000AED48() != v20) {
    char v21 = sub_1000AED48();
  }
  sub_1000AE7A8();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_100009D6C((uint64_t)v11, (uint64_t)v14, &qword_1000D6D30);
  uint64_t v30 = &v14[*(int *)(v12 + 36)];
  *uint64_t v30 = v21;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_100009EF4((uint64_t)v11, &qword_1000D6D30);
  return sub_10001D8DC((uint64_t)v14, a3, &qword_1000D6D18);
}

id sub_10003F264@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v184 = a2;
  uint64_t v182 = a3;
  uint64_t v171 = sub_1000ADC28();
  uint64_t v175 = *(void *)(v171 - 8);
  uint64_t v4 = __chkstk_darwin(v171);
  uint64_t v153 = (char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v155 = (char *)&v150 - v6;
  uint64_t v7 = sub_10000693C(&qword_1000D4E10);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v154 = (char *)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v157 = (uint64_t)&v150 - v10;
  uint64_t v172 = sub_10000693C(&qword_1000D6D58);
  __chkstk_darwin(v172);
  uint64_t v174 = (uint64_t *)((char *)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v166 = sub_10000693C(&qword_1000D6D60);
  __chkstk_darwin(v166);
  uint64_t v169 = (uint64_t)&v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_10000693C(&qword_1000D6D68);
  __chkstk_darwin(v167);
  uint64_t v168 = (uint64_t *)((char *)&v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = sub_10000693C(&qword_1000D6D70);
  __chkstk_darwin(v173);
  uint64_t v170 = (char *)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_10000693C(&qword_1000D56C0);
  __chkstk_darwin(v160);
  uint64_t v162 = (uint64_t *)((char *)&v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v164 = sub_1000AF108();
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  v161 = (char *)&v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_10000693C(&qword_1000D6D78);
  uint64_t v17 = __chkstk_darwin(v159);
  uint64_t v151 = (uint64_t *)((char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v152 = (uint64_t)&v150 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  id v156 = (char *)&v150 - v22;
  __chkstk_darwin(v21);
  uint64_t v165 = (uint64_t)&v150 - v23;
  uint64_t v24 = sub_10000693C(&qword_1000D6D80);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v181 = (char *)&v150 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v180 = (uint64_t)&v150 - v27;
  uint64_t v28 = *a1;
  uint64_t v29 = type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(0);
  char v30 = *((unsigned char *)a1 + *(int *)(v29 + 40) + 8);
  uint64_t v31 = swift_retain();
  uint64_t v32 = sub_10002E128(v31, v30, 1953394502, 0xE400000000000000);
  swift_release();
  uint64_t v183 = v29;
  uint64_t v33 = *(int *)(v29 + 44);
  uint64_t v185 = a1;
  char v34 = *((unsigned char *)a1 + v33 + 8);
  uint64_t v35 = swift_retain();
  uint64_t v36 = sub_10002E128(v35, v34, 0x726F6C6F43, 0xE500000000000000);
  swift_release();
  id result = [v28 string];
  if (result)
  {
    uint64_t v38 = result;
    long long v187 = xmmword_1000B0280;
    char v188 = 0;
    uint64_t v189 = _swiftEmptyArrayStorage;
    id v39 = [self attributeName];
    id v40 = [v28 length];
    uint64_t v41 = (void *)swift_allocObject();
    v41[2] = &v187;
    v41[3] = v38;
    v41[4] = v32;
    v41[5] = v36;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_10000A0A0;
    *(void *)(v42 + 24) = v41;
    aBlock[4] = sub_10001DC9C;
    aBlock[5] = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009C54;
    aBlock[3] = &unk_1000D03A8;
    uint64_t v43 = _Block_copy(aBlock);
    id v44 = v38;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    [v28 enumerateAttribute:v39 inRange:0 options:v40 usingBlock:v43];

    _Block_release(v43);
    LOBYTE(v43) = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((v43 & 1) == 0)
    {
      long long v45 = v187;
      char v46 = v188;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v47 = v185;
      sub_10004077C();
      uint64_t v48 = sub_1000AEEB8();
      uint64_t v50 = v49;
      char v52 = v51;
      swift_release();
      sub_100006FE0(v45, *((uint64_t *)&v45 + 1), v46);
      swift_bridgeObjectRelease();
      uint64_t v53 = v184;
      uint64_t v54 = sub_1000AEE88();
      uint64_t v56 = v55;
      int v58 = v57;
      uint64_t v179 = v59;
      sub_100006FE0(v48, v50, v52 & 1);
      swift_bridgeObjectRelease();
      uint64_t v60 = v183;
      uint64_t v61 = *(uint64_t *)((char *)v47 + *(int *)(v183 + 20));
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v62 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
      BOOL v63 = *((unsigned char *)v47 + *(int *)(v62 + 44)) == 1;
      uint64_t v178 = v56;
      int v176 = v58;
      if (v63)
      {
        uint64_t v64 = sub_1000AF0E8();
        uint64_t v157 = v61;
        uint64_t v65 = v64;
        uint64_t v66 = (uint64_t)v47 + *(int *)(v60 + 32);
        uint64_t v158 = v54;
        char v67 = *(unsigned char *)(v66 + 8);
        uint64_t v68 = swift_retain();
        uint64_t v69 = sub_10002E128(v68, v67, 1953394502, 0xE400000000000000);
        swift_release();
        uint64_t v70 = swift_getKeyPath();
        uint64_t v71 = swift_getKeyPath();
        uint64_t v72 = v163;
        uint64_t v73 = v161;
        uint64_t v74 = v164;
        (*(void (**)(char *, void, uint64_t))(v163 + 104))(v161, enum case for Image.Scale.small(_:), v164);
        uint64_t v75 = swift_getKeyPath();
        uint64_t v76 = v162;
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))((char *)v162 + *(int *)(v160 + 28), v73, v74);
        *uint64_t v76 = v75;
        uint64_t v77 = (uint64_t *)v156;
        sub_100009D6C((uint64_t)v76, (uint64_t)&v156[*(int *)(v159 + 36)], &qword_1000D56C0);
        *uint64_t v77 = v65;
        v77[1] = v70;
        v77[2] = v69;
        v77[3] = v71;
        v77[4] = v53;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_100009EF4((uint64_t)v76, &qword_1000D56C0);
        (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v78 = v165;
        sub_10001D8DC((uint64_t)v77, v165, &qword_1000D6D78);
        sub_100009D6C(v78, (uint64_t)v77, &qword_1000D6D78);
        uint64_t v79 = (uint64_t)v168;
        void *v168 = 0;
        *(unsigned char *)(v79 + 8) = 1;
        uint64_t v80 = sub_10000693C(&qword_1000D6DB8);
        sub_100009D6C((uint64_t)v77, v79 + *(int *)(v80 + 48), &qword_1000D6D78);
        sub_100009EF4((uint64_t)v77, &qword_1000D6D78);
        sub_100009D6C(v79, v169, &qword_1000D6D68);
        swift_storeEnumTagMultiPayload();
        sub_100009F50(&qword_1000D6DA8, &qword_1000D6D68);
        uint64_t v81 = (uint64_t)v170;
        sub_1000AEC68();
        sub_100009EF4(v79, &qword_1000D6D68);
        sub_100009D6C(v81, (uint64_t)v174, &qword_1000D6D70);
        swift_storeEnumTagMultiPayload();
        sub_10000693C(&qword_1000D6D98);
        sub_10005B6D8();
        sub_100009F50(&qword_1000D6DB0, &qword_1000D6D98);
        uint64_t v82 = (uint64_t)v181;
        uint64_t v88 = v158;
        uint64_t v87 = v157;
        sub_1000AEC68();
        char v83 = v176;
        sub_100009EF4(v81, &qword_1000D6D70);
        sub_100009EF4(v78, &qword_1000D6D78);
        uint64_t v84 = sub_10000693C(&qword_1000D6D88);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v82, 0, 1, v84);
        uint64_t v85 = v180;
        sub_10001D8DC(v82, v180, &qword_1000D6D80);
        uint64_t v86 = v182;
      }
      else
      {
        uint64_t v87 = v61;
        uint64_t v88 = v54;
        uint64_t v89 = (uint64_t)v47 + *(int *)(v62 + 24);
        uint64_t v90 = v157;
        sub_100009D6C(v89, v157, &qword_1000D4E10);
        uint64_t v91 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v175 + 48);
        uint64_t v92 = v171;
        int v93 = v91(v90, 1, v171);
        uint64_t v94 = v90;
        uint64_t v95 = v185;
        sub_100009EF4(v94, &qword_1000D4E10);
        if (v93 == 1 || *((unsigned char *)v95 + *(int *)(v60 + 28)) != 1)
        {
          uint64_t v102 = v154;
          sub_100040860(v154);
          if (v91((uint64_t)v102, 1, v92) != 1)
          {
            uint64_t v157 = v61;
            uint64_t v158 = v54;
            uint64_t v104 = v95;
            uint64_t v105 = v175;
            id v106 = v155;
            (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v155, v102, v92);
            (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v153, v106, v92);
            uint64_t v107 = sub_1000AEED8();
            uint64_t v109 = v108;
            char v111 = v110 & 1;
            char v112 = *((unsigned char *)v104 + *(int *)(v60 + 32) + 8);
            uint64_t v113 = swift_retain();
            sub_10002E128(v113, v112, 1953394502, 0xE400000000000000);
            swift_release();
            uint64_t v114 = sub_1000AEEB8();
            uint64_t v116 = v115;
            char v118 = v117;
            swift_release();
            sub_100006FE0(v107, v109, v111);
            swift_bridgeObjectRelease();
            if (sub_10004336C()) {
              sub_1000AF098();
            }
            else {
              sub_1000AF0A8();
            }
            char v119 = v118 & 1;
            uint64_t v120 = sub_1000AEE88();
            uint64_t v122 = v121;
            char v124 = v123;
            uint64_t v126 = v125;
            swift_release();
            v124 &= 1u;
            sub_100006FE0(v114, v116, v119);
            swift_bridgeObjectRelease();
            sub_100009E88(v120, v122, v124);
            swift_bridgeObjectRetain();
            sub_100009E88(v120, v122, v124);
            swift_bridgeObjectRetain();
            sub_100006FE0(v120, v122, v124);
            swift_bridgeObjectRelease();
            uint64_t v127 = v174;
            *uint64_t v174 = 0;
            *((unsigned char *)v127 + 8) = 1;
            v127[2] = v120;
            v127[3] = v122;
            *((unsigned char *)v127 + 32) = v124;
            v127[5] = v126;
            swift_storeEnumTagMultiPayload();
            sub_10000693C(&qword_1000D6D98);
            sub_10005B6D8();
            sub_100009F50(&qword_1000D6DB0, &qword_1000D6D98);
            uint64_t v128 = v181;
            sub_1000AEC68();
            uint64_t v129 = v122;
            uint64_t v82 = (uint64_t)v128;
            sub_100006FE0(v120, v129, v124);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v175 + 8))(v155, v171);
            uint64_t v130 = sub_10000693C(&qword_1000D6D88);
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v128, 0, 1, v130);
            uint64_t v131 = (uint64_t)v128;
            uint64_t v85 = v180;
            sub_10001D8DC(v131, v180, &qword_1000D6D80);
            uint64_t v86 = v182;
            uint64_t v88 = v158;
            char v83 = v176;
            uint64_t v87 = v157;
            goto LABEL_19;
          }
          sub_100009EF4((uint64_t)v102, &qword_1000D4E10);
          uint64_t v103 = sub_10000693C(&qword_1000D6D88);
          uint64_t v85 = v180;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v180, 1, 1, v103);
          uint64_t v82 = (uint64_t)v181;
          uint64_t v86 = v182;
        }
        else
        {
          uint64_t v157 = v61;
          uint64_t v184 = sub_1000AF0E8();
          char v96 = *((unsigned char *)v95 + *(int *)(v60 + 32) + 8);
          uint64_t v97 = swift_retain();
          uint64_t v98 = sub_10002E128(v97, v96, 1953394502, 0xE400000000000000);
          swift_release();
          uint64_t v99 = swift_getKeyPath();
          char v100 = sub_10004336C();
          uint64_t v158 = v54;
          if (v100) {
            uint64_t v101 = sub_1000AF098();
          }
          else {
            uint64_t v101 = sub_1000AF0A8();
          }
          uint64_t v132 = v101;
          uint64_t v133 = swift_getKeyPath();
          uint64_t v134 = v163;
          uint64_t v135 = v161;
          uint64_t v136 = v164;
          (*(void (**)(char *, void, uint64_t))(v163 + 104))(v161, enum case for Image.Scale.medium(_:), v164);
          uint64_t v137 = swift_getKeyPath();
          uint64_t v138 = v162;
          (*(void (**)(char *, char *, uint64_t))(v134 + 16))((char *)v162 + *(int *)(v160 + 28), v135, v136);
          *uint64_t v138 = v137;
          uint64_t v139 = v151;
          sub_100009D6C((uint64_t)v138, (uint64_t)v151 + *(int *)(v159 + 36), &qword_1000D56C0);
          *uint64_t v139 = v184;
          v139[1] = v99;
          v139[2] = v98;
          v139[3] = v133;
          v139[4] = v132;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_100009EF4((uint64_t)v138, &qword_1000D56C0);
          (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v140 = v152;
          sub_10001D8DC((uint64_t)v139, v152, &qword_1000D6D78);
          uint64_t v141 = v165;
          sub_100009D6C(v140, v165, &qword_1000D6D78);
          uint64_t v142 = (uint64_t)v168;
          void *v168 = 0;
          *(unsigned char *)(v142 + 8) = 1;
          uint64_t v143 = sub_10000693C(&qword_1000D6DB8);
          sub_100009D6C(v141, v142 + *(int *)(v143 + 48), &qword_1000D6D78);
          sub_100009EF4(v141, &qword_1000D6D78);
          sub_100009D6C(v142, v169, &qword_1000D6D68);
          swift_storeEnumTagMultiPayload();
          sub_100009F50(&qword_1000D6DA8, &qword_1000D6D68);
          uint64_t v144 = (uint64_t)v170;
          sub_1000AEC68();
          sub_100009EF4(v142, &qword_1000D6D68);
          sub_100009D6C(v144, (uint64_t)v174, &qword_1000D6D70);
          swift_storeEnumTagMultiPayload();
          sub_10000693C(&qword_1000D6D98);
          sub_10005B6D8();
          sub_100009F50(&qword_1000D6DB0, &qword_1000D6D98);
          uint64_t v82 = (uint64_t)v181;
          sub_1000AEC68();
          sub_100009EF4(v144, &qword_1000D6D70);
          sub_100009EF4(v140, &qword_1000D6D78);
          uint64_t v145 = sub_10000693C(&qword_1000D6D88);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v82, 0, 1, v145);
          uint64_t v85 = v180;
          sub_10001D8DC(v82, v180, &qword_1000D6D80);
          uint64_t v86 = v182;
          uint64_t v88 = v158;
          uint64_t v87 = v157;
        }
        char v83 = v176;
      }
LABEL_19:
      char v146 = v83 & 1;
      sub_100009D6C(v85, v82, &qword_1000D6D80);
      uint64_t v147 = v178;
      *(void *)uint64_t v86 = v88;
      *(void *)(v86 + 8) = v147;
      *(unsigned char *)(v86 + 16) = v146;
      uint64_t v148 = KeyPath;
      *(void *)(v86 + 24) = v179;
      *(void *)(v86 + 32) = v148;
      *(void *)(v86 + 40) = v87;
      *(unsigned char *)(v86 + 48) = 0;
      *(void *)(v86 + 56) = 0;
      *(unsigned char *)(v86 + 64) = 0;
      uint64_t v149 = sub_10000693C(&qword_1000D6D90);
      sub_100009D6C(v82, v86 + *(int *)(v149 + 64), &qword_1000D6D80);
      sub_100009E88(v88, v147, v146);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100009EF4(v85, &qword_1000D6D80);
      sub_100009EF4(v82, &qword_1000D6D80);
      sub_100006FE0(v88, v147, v146);
      swift_release();
      return (id)swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10004077C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) + 36));
  if (v1 < 1)
  {
    uint64_t v4 = 8;
  }
  else
  {
    uint64_t v2 = self;
    id v3 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v1];

    uint64_t v4 = 9;
  }
  char v5 = *(unsigned char *)(v0 + *(int *)(type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(0) + 4 * v4) + 8);
  uint64_t v6 = swift_retain();
  uint64_t v7 = sub_10002E128(v6, v5, 1953394502, 0xE400000000000000);
  swift_release();
  return v7;
}

uint64_t sub_100040860@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_1000ADC68();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_10000693C(&qword_1000D4E10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000ADC28();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  sub_100009D6C(v1 + *(int *)(v11 + 24), (uint64_t)v6, &qword_1000D4E10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100009EF4((uint64_t)v6, &qword_1000D4E10);
    uint64_t v12 = *(void *)(v1 + *(int *)(v11 + 36));
    if (v12 < 1)
    {
      uint64_t v17 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v17, 1, v7);
    }
    uint64_t v13 = self;
    id v14 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v12];
    id v15 = [v13 localizedStringFromNumber:v14 numberStyle:1];

    sub_1000AF498();
    sub_1000ADC58();
    sub_1000ADC38();
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v16(v10, v6, v7);
    v16(a1, v10, v7);
  }
  uint64_t v17 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v17, 1, v7);
}

uint64_t sub_100040B00()
{
  return sub_100041F48((void (*)(void))sub_100058540);
}

uint64_t sub_100040B20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  char v4 = sub_1000AEC88();
  if ((sub_10004336C() & 1) != 0 || (v4 & 1) == 0) {
    uint64_t v5 = sub_1000AF098();
  }
  else {
    uint64_t v5 = sub_1000AF0A8();
  }
  uint64_t v6 = v5;
  *(void *)a1 = sub_1000AEB78();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v7 = sub_10000693C(&qword_1000D6D08);
  sub_10003EB7C(v2, v6, a1 + *(int *)(v7 + 44));

  return swift_release();
}

uint64_t sub_100040BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v2 = sub_1000AE8B8();
  uint64_t v63 = *(void *)(v2 - 8);
  uint64_t v64 = v2;
  __chkstk_darwin(v2);
  uint64_t v62 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AF108();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRAnyListWidget.CompletedView(0);
  __chkstk_darwin(v6 - 8);
  char v51 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000AE1B8();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v49 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10000693C(&qword_1000D71F0);
  uint64_t v9 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10000693C(&qword_1000D71F8);
  __chkstk_darwin(v47);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000693C(&qword_1000D7200);
  __chkstk_darwin(v14 - 8);
  uint64_t v54 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10000693C(&qword_1000D7208);
  __chkstk_darwin(v56);
  int v58 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10000693C(&qword_1000D7210);
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v53 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AF0E8();
  uint64_t v19 = sub_1000AED58();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v66 = v18;
  unint64_t v67 = KeyPath;
  uint64_t v68 = v19;
  sub_1000AED88();
  sub_10000693C(&qword_1000D5718);
  sub_10001DBFC();
  sub_1000AEF48();
  swift_release();
  swift_release();
  uint64_t v21 = v47;
  swift_release();
  uint64_t v22 = v1;
  uint64_t v23 = sub_100041368();
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = v48;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v48);
  uint64_t v26 = (uint64_t *)&v13[*(int *)(v21 + 36)];
  *uint64_t v26 = v24;
  v26[1] = v23;
  uint64_t v27 = v11;
  uint64_t v28 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v27, v25);
  char v30 = v49;
  uint64_t v29 = v50;
  uint64_t v31 = v52;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, enum case for REMFeatureFlags.accentableWidgets(_:), v52);
  sub_1000AE1A8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  sub_100043D14(v22, v28, type metadata accessor for TTRAnyListWidget.CompletedView);
  sub_100043DC4(v28, type metadata accessor for TTRAnyListWidget.CompletedView);
  sub_10000693C(&qword_1000D7218);
  unint64_t v32 = sub_10005E394();
  uint64_t v66 = v21;
  unint64_t v67 = v32;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = (uint64_t)v54;
  sub_1000AEEF8();
  sub_100009EF4((uint64_t)v13, &qword_1000D71F8);
  uint64_t v35 = v59;
  uint64_t v34 = v60;
  uint64_t v36 = v61;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v59, enum case for Image.Scale.large(_:), v61);
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = (uint64_t)v58;
  id v39 = (uint64_t *)&v58[*(int *)(v56 + 36)];
  uint64_t v40 = sub_10000693C(&qword_1000D56C0);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v39 + *(int *)(v40 + 28), v35, v36);
  *id v39 = v37;
  sub_100009D6C(v33, v38, &qword_1000D7200);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  sub_100009EF4(v33, &qword_1000D7200);
  uint64_t v42 = v62;
  uint64_t v41 = v63;
  uint64_t v43 = v64;
  (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, enum case for DynamicTypeSize.large(_:), v64);
  sub_10005E468();
  id v44 = v53;
  sub_1000AEFA8();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  sub_100009EF4(v38, &qword_1000D7208);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v55 + 32))(v65, v44, v57);
}

uint64_t sub_100041368()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AF268();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AE1B8();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTRAnyListWidget.CompletedView(0);
  int v10 = sub_10004336C();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for REMFeatureFlags.accentableWidgets(_:), v6);
  char v11 = sub_1000AE1A8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v11)
  {
    sub_10002DA58(&qword_1000D5E30, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B7C90, (uint64_t)v5);
    char v12 = sub_100030368();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v12 & 1) == 0 && ((v10 ^ 1) & 1) == 0) {
      return sub_1000AF0A8();
    }
  }
  else if (v10)
  {
    return sub_1000AF0A8();
  }
  if (*(unsigned char *)v1 == 1)
  {
    uint64_t v14 = *(void *)(v1 + 8);
    char v15 = *(unsigned char *)(v1 + 16);
    j__swift_retain();
    uint64_t v13 = sub_10002DF14(v14, v15);
    j__swift_release();
  }
  else
  {
    if (qword_1000D4930 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1000E1E70;
    swift_retain();
  }
  return v13;
}

uint64_t sub_100041610()
{
  return sub_1000AEF08();
}

__n128 sub_100041668@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v18 = sub_1000AEBC8();
  sub_1000417D8(v1, (uint64_t)&v19);
  uint64_t v4 = v19;
  char v5 = BYTE8(v19);
  char v6 = BYTE9(v19);
  __n128 v7 = v20;
  char v8 = v21;
  uint64_t v10 = *((void *)&v21 + 1);
  uint64_t v9 = v22;
  char v17 = BYTE8(v22);
  if (*v2 >= 2u) {
    sub_1000AF1B8();
  }
  else {
    sub_1000AF1C8();
  }
  uint64_t v32 = v18;
  uint64_t v33 = 0;
  char v34 = 1;
  uint64_t v35 = v4;
  char v36 = v5;
  char v37 = v6;
  __n128 v38 = v7;
  char v39 = v8;
  uint64_t v40 = v10;
  uint64_t v41 = v9;
  char v42 = v17;
  sub_10002D874(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v19, 0.0, 1, 0.0, 1);
  sub_100006FE0(v7.n128_i64[0], v7.n128_i64[1], v8);
  swift_bridgeObjectRelease();
  long long v11 = v30;
  *(_OWORD *)(a1 + 160) = v29;
  *(_OWORD *)(a1 + 176) = v11;
  *(void *)(a1 + 192) = v31;
  long long v12 = v26;
  *(_OWORD *)(a1 + 96) = v25;
  *(_OWORD *)(a1 + 112) = v12;
  long long v13 = v28;
  *(_OWORD *)(a1 + 128) = v27;
  *(_OWORD *)(a1 + 144) = v13;
  long long v14 = v22;
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v14;
  long long v15 = v24;
  *(_OWORD *)(a1 + 64) = v23;
  *(_OWORD *)(a1 + 80) = v15;
  __n128 result = v20;
  *(_OWORD *)a1 = v19;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1000417D8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *a1;
  sub_1000AE168();
  if (!v5) {
    sub_1000AE148();
  }
  char v6 = a1[16];
  uint64_t v7 = swift_retain();
  sub_10002E128(v7, v6, 1953394502, 0xE400000000000000);
  swift_release();
  uint64_t v8 = sub_1000AEEB8();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView(0);
  if (sub_10004336C()) {
    sub_1000AF098();
  }
  else {
    sub_1000AF0A8();
  }
  char v13 = v12 & 1;
  BOOL v22 = v4 != 0;
  BOOL v23 = v4 == 0;
  uint64_t v14 = sub_1000AEE88();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  swift_release();
  sub_100006FE0(v8, v10, v13);
  swift_bridgeObjectRelease();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v22;
  *(unsigned char *)(a2 + 9) = v23;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v18 & 1;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  sub_100009E88(v14, v16, v18 & 1);
  swift_bridgeObjectRetain();
  sub_100006FE0(v14, v16, v18 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10004199C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v17[1] = a1;
  uint64_t v3 = sub_1000AECC8();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000693C(&qword_1000D6DC0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000693C(&qword_1000D6DC8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_1000AEB78();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v14 = sub_10000693C(&qword_1000D6DD0);
  sub_100041C38((uint64_t)v2, (uint64_t)&v9[*(int *)(v14 + 44)]);
  sub_1000AECA8();
  uint64_t v15 = sub_100009F50(&qword_1000D6DD8, &qword_1000D6DC0);
  sub_1000AEFF8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100009EF4((uint64_t)v9, &qword_1000D6DC0);
  long long v18 = *v2;
  _OWORD v17[2] = v7;
  v17[3] = v15;
  swift_getOpaqueTypeConformance2();
  sub_10004F318();
  sub_1000AEFD8();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_100041C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0);
  uint64_t v5 = (int *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v34 = (uint64_t)&v30 - v9;
  char v10 = *(unsigned char *)(a1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_retain();
  sub_10002E128(v11, v10, 1953394502, 0xE400000000000000);
  swift_release();
  uint64_t v12 = sub_1000AEEB8();
  uint64_t v14 = v13;
  char v16 = v15;
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000AF0A8();
  uint64_t v17 = sub_1000AEE88();
  uint64_t v31 = v18;
  uint64_t v32 = v17;
  char v20 = v19;
  uint64_t v33 = v21;
  swift_release();
  char v22 = v20 & 1;
  sub_100006FE0(v12, v14, v16 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = *(void *)(a1 + 16);
  *uint64_t v8 = v35;
  long long v24 = (void *)((char *)v8 + v5[7]);
  *long long v24 = swift_getKeyPath();
  sub_10000693C(&qword_1000D5E30);
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)v8 + v5[8]) = 0x4020000000000000;
  *(void *)((char *)v8 + v5[9]) = 0x3FF0000000000000;
  uint64_t v25 = v34;
  sub_1000478F8((uint64_t)v8, v34, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  sub_100043D14(v25, (uint64_t)v8, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  uint64_t v27 = v31;
  uint64_t v26 = v32;
  *(void *)a2 = v32;
  *(void *)(a2 + 8) = v27;
  *(unsigned char *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v33;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0x4030000000000000;
  *(unsigned char *)(a2 + 64) = 0;
  uint64_t v28 = sub_10000693C(&qword_1000D6DE0);
  sub_100043D14((uint64_t)v8, a2 + *(int *)(v28 + 64), type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  sub_100009E88(v26, v27, v22);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10005B798((uint64_t)&v35);
  sub_100043DC4(v25, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  sub_100043DC4((uint64_t)v8, type metadata accessor for TTRAnyListWidget.ListShareeBadgesView);
  sub_100006FE0(v26, v27, v22);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100041F28()
{
  return sub_100041F48((void (*)(void))sub_100058100);
}

uint64_t sub_100041F48(void (*a1)(void))
{
  a1();
  sub_1000AEB38();
  return v2;
}

uint64_t sub_100041F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_1000AEB48();
}

uint64_t sub_100041FF4@<X0>(uint64_t a1@<X8>)
{
  return sub_10004199C(a1);
}

uint64_t sub_100042030(uint64_t a1)
{
  return sub_1000425DC(a1, &enum case for Font.TextStyle.subheadline(_:), &qword_1000D5CC8);
}

uint64_t sub_100042044@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D48C8, &qword_1000D5CC8, a1);
}

uint64_t sub_100042068(uint64_t a1)
{
  return sub_1000422DC(a1, (unsigned int *)&enum case for Font.TextStyle.footnote(_:), &qword_1000D5CD0);
}

uint64_t sub_10004207C@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D48D0, &qword_1000D5CD0, a1);
}

uint64_t sub_1000420A0()
{
  uint64_t v0 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AEDF8();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.footnote(_:), v3);
  uint64_t v7 = enum case for Font.Design.rounded(_:);
  uint64_t v8 = sub_1000AED68();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  sub_1000AEDB8();
  sub_100009EF4((uint64_t)v2, &qword_1000D4BD8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1000AED78();
  uint64_t v10 = sub_1000AEDC8();
  uint64_t result = swift_release();
  qword_1000D5CD8 = v10;
  return result;
}

uint64_t sub_1000422A4@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D48D8, &qword_1000D5CD8, a1);
}

uint64_t sub_1000422C8(uint64_t a1)
{
  return sub_1000422DC(a1, (unsigned int *)&enum case for Font.TextStyle.body(_:), &qword_1000D5CE0);
}

uint64_t sub_1000422DC(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v21 = a3;
  uint64_t v4 = sub_1000AEDD8();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AEDF8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *a2, v11);
  uint64_t v15 = enum case for Font.Design.rounded(_:);
  uint64_t v16 = sub_1000AED68();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v10, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
  sub_1000AEDB8();
  sub_100009EF4((uint64_t)v10, &qword_1000D4BD8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  uint64_t v18 = sub_1000AEDE8();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *uint64_t v21 = v18;
  return result;
}

uint64_t sub_1000425A4@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D48E0, &qword_1000D5CE0, a1);
}

uint64_t sub_1000425C8(uint64_t a1)
{
  return sub_1000425DC(a1, (unsigned int *)&enum case for Font.TextStyle.footnote(_:), &qword_1000D5CE8);
}

uint64_t sub_1000425DC(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v21 = a3;
  uint64_t v4 = sub_1000AEDD8();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AEDF8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *a2, v11);
  uint64_t v15 = enum case for Font.Design.rounded(_:);
  uint64_t v16 = sub_1000AED68();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v10, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
  sub_1000AEDB8();
  sub_100009EF4((uint64_t)v10, &qword_1000D4BD8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1000AED98();
  sub_1000AEDC8();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  uint64_t v18 = sub_1000AEDE8();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *uint64_t v21 = v18;
  return result;
}

uint64_t sub_1000428BC@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D48E8, &qword_1000D5CE8, a1);
}

uint64_t sub_1000428E0()
{
  uint64_t v0 = sub_1000AEDD8();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D4BD8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AED78();
  uint64_t v7 = enum case for Font.Design.rounded(_:);
  uint64_t v8 = sub_1000AED68();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  sub_1000AEDA8();
  sub_100009EF4((uint64_t)v6, &qword_1000D4BD8);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v10 = sub_1000AEDE8();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1000D5CF0 = v10;
  return result;
}

uint64_t sub_100042AF4@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D48F0, &qword_1000D5CF0, a1);
}

uint64_t sub_100042B18()
{
  uint64_t result = sub_1000AF098();
  qword_1000D5CF8 = result;
  return result;
}

uint64_t sub_100042B38@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D48F8, &qword_1000D5CF8, a1);
}

uint64_t sub_100042B5C()
{
  if (qword_1000D48D0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000AED98();
  uint64_t v0 = sub_1000AEDC8();
  uint64_t result = swift_release();
  qword_1000D5D00 = v0;
  return result;
}

uint64_t sub_100042BD8@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D4900, &qword_1000D5D00, a1);
}

uint64_t sub_100042BFC()
{
  uint64_t result = sub_1000AF058();
  qword_1000D5D08 = result;
  return result;
}

uint64_t sub_100042C1C@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D4908, &qword_1000D5D08, a1);
}

uint64_t sub_100042C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_100050518();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void sub_100042CA4(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_100042CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10004726C(&qword_1000D6550, &qword_1000D6558, (void (*)(void))sub_100050518);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_100042D48()
{
  id v0 = *(id *)sub_1000AE058();
  uint64_t result = sub_1000AF0C8();
  qword_1000D5D10 = result;
  return result;
}

uint64_t sub_100042D74@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D4910, &qword_1000D5D10, a1);
}

uint64_t sub_100042D98()
{
  id v0 = [self separatorColor];
  uint64_t result = sub_1000AF0C8();
  qword_1000D5D18 = result;
  return result;
}

uint64_t sub_100042DD8@<X0>(void *a1@<X8>)
{
  return sub_10001C124(&qword_1000D4918, &qword_1000D5D18, a1);
}

uint64_t sub_100042DFC(void *a1)
{
  sub_10000693C(&qword_1000D5940);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000B0270;
  uint64_t v3 = a1[1];
  *(void *)(v2 + 32) = *a1;
  *(void *)(v2 + 40) = v3;
  LODWORD(a1) = *((unsigned __int8 *)a1 + *(int *)(type metadata accessor for TTRNewWidgetViewModel(0) + 60));
  swift_bridgeObjectRetain();
  if (a1 == 1)
  {
    v13._object = (void *)0x80000001000B7DD0;
    v12._countAndFlagsBits = 0x696C207472616D53;
    v12._object = (void *)0xEA00000000007473;
    v13._countAndFlagsBits = 0xD00000000000003CLL;
    uint64_t v4 = sub_1000AE128(v12, v13);
    uint64_t v6 = v5;
    unint64_t v8 = *(void *)(v2 + 16);
    unint64_t v7 = *(void *)(v2 + 24);
    if (v8 >= v7 >> 1) {
      uint64_t v2 = (uint64_t)sub_100022320((void *)(v7 > 1), v8 + 1, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v8 + 1;
    uint64_t v9 = v2 + 16 * v8;
    *(void *)(v9 + 32) = v4;
    *(void *)(v9 + 40) = v6;
  }
  sub_1000AE098();
  swift_bridgeObjectRetain();
  sub_10000693C(&qword_1000D5C78);
  sub_100009F50(&qword_1000D5C80, &qword_1000D5C78);
  uint64_t v10 = sub_1000AF3F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100042F8C(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)(a1 + 16) < 1)
  {
    uint64_t v5 = sub_1000AE168();
    if (!v6) {
      uint64_t v5 = sub_1000AE148();
    }
  }
  else
  {
    uint64_t v5 = sub_1000AE158();
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = sub_100022320(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_100022320((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  v9[2] = v11 + 1;
  Swift::String v12 = &v9[2 * v11];
  v12[4] = v7;
  v12[5] = v8;
  Swift::String v13 = (uint64_t *)(a1 + v2[13]);
  uint64_t v14 = v13[1];
  sub_100043D14(a1, (uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel);
  if (v14)
  {
    sub_100043DC4((uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel);
  }
  else
  {
    uint64_t v15 = *(void *)&v4[v2[11] + 8];
    sub_100043DC4((uint64_t)v4, type metadata accessor for TTRNewWidgetViewModel);
    if (!v15) {
      goto LABEL_21;
    }
  }
  if (v13[1])
  {
    uint64_t v16 = *v13;
    unint64_t v17 = v13[1];
  }
  else
  {
    uint64_t v18 = (uint64_t *)(a1 + v2[14]);
    unint64_t v17 = v18[1];
    if (v17)
    {
      uint64_t v16 = *v18;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
    }
  }
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  char v19 = (uint64_t *)(a1 + v2[11]);
  uint64_t v20 = (void *)v19[1];
  if (v20)
  {
    uint64_t v21 = *v19;
    swift_bridgeObjectRetain();
    v37._countAndFlagsBits = v21;
    v37._object = v20;
    sub_1000AF4D8(v37);
    BOOL v23 = v35;
    unint64_t v22 = v36;
  }
  else
  {
    swift_bridgeObjectRetain();
    BOOL v23 = 0;
    unint64_t v22 = 0xE000000000000000;
  }
  v40._countAndFlagsBits = 0xD00000000000006ELL;
  v38._object = (void *)0x80000001000B7B10;
  v40._object = (void *)0x80000001000B7B40;
  v38._countAndFlagsBits = 0xD00000000000002ALL;
  v39._countAndFlagsBits = 0x6567646162204025;
  v39._object = (void *)0xEC0000004025202CLL;
  sub_1000AE118(v38, v39, v40);
  sub_10000693C(&qword_1000D52E8);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1000B0E30;
  *(void *)(v24 + 56) = &type metadata for String;
  unint64_t v25 = sub_10002CFD4();
  *(void *)(v24 + 32) = v16;
  *(void *)(v24 + 40) = v17;
  *(void *)(v24 + 96) = &type metadata for String;
  *(void *)(v24 + 104) = v25;
  *(void *)(v24 + 64) = v25;
  *(void *)(v24 + 72) = v23;
  *(void *)(v24 + 80) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1000AF488();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v30 = v9[2];
  unint64_t v29 = v9[3];
  if (v30 >= v29 >> 1) {
    uint64_t v9 = sub_100022320((void *)(v29 > 1), v30 + 1, 1, v9);
  }
  v9[2] = v30 + 1;
  uint64_t v31 = &v9[2 * v30];
  v31[4] = v26;
  v31[5] = v28;
LABEL_21:
  uint64_t v35 = v9;
  sub_1000AE098();
  swift_bridgeObjectRetain();
  sub_10000693C(&qword_1000D5C78);
  sub_100009F50(&qword_1000D5C80, &qword_1000D5C78);
  uint64_t v32 = sub_1000AF3F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_10004336C()
{
  uint64_t v0 = sub_1000AF268();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - v5;
  sub_10002DA58(&qword_1000D5E30, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B7C90, (uint64_t)&v12 - v5);
  sub_1000AF258();
  sub_100043D7C(&qword_1000D6030, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v7 = sub_1000AF448();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  if (v7)
  {
    char v9 = 0;
  }
  else
  {
    sub_1000AF248();
    char v10 = sub_1000AF448();
    v8(v4, v0);
    if (v10)
    {
      char v9 = 1;
    }
    else
    {
      sub_1000AF238();
      char v9 = sub_1000AF448();
      v8(v4, v0);
    }
  }
  v8(v6, v0);
  return v9 & 1;
}

uint64_t sub_10004358C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static DynamicProperty._makeProperty<A>(in:container:fieldOffset:inputs:)(a1, a2, a3, a4, a6, a5);
}

uint64_t sub_1000435A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  char v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100043674@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000AEA58();
  *a1 = result;
  return result;
}

uint64_t sub_1000436A0()
{
  return sub_1000AEA68();
}

size_t sub_1000436CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v48 = a2;
  uint64_t v49 = sub_10000693C(&qword_1000D63E8);
  uint64_t v7 = __chkstk_darwin(v49);
  uint64_t v47 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (void *)((char *)v43 - v10);
  __chkstk_darwin(v9);
  Swift::String v13 = (char *)v43 - v12;
  uint64_t v50 = v14;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  unint64_t v16 = a4 >> 1;
  v43[1] = a1;
  size_t result = swift_unknownObjectRetain();
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (v16 == a3)
  {
    uint64_t v19 = 0;
LABEL_28:
    size_t result = swift_unknownObjectRelease();
    unint64_t v40 = v18[3];
    if (v40 < 2) {
      return (size_t)v18;
    }
    unint64_t v41 = v40 >> 1;
    BOOL v27 = __OFSUB__(v41, v19);
    uint64_t v42 = v41 - v19;
    if (!v27)
    {
      v18[2] = v42;
      return (size_t)v18;
    }
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v19 = 0;
    uint64_t v44 = (v15 + 32) & ~v15;
    uint64_t v21 = (char *)_swiftEmptyArrayStorage + v44;
    v43[2] = v15 | 7;
    uint64_t v45 = a3 - v16;
    uint64_t v46 = v16;
    unint64_t v22 = _swiftEmptyArrayStorage;
    while (a3 + v20 < v46)
    {
      uint64_t v23 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
      uint64_t v24 = v49;
      uint64_t v25 = (uint64_t)&v47[*(int *)(v49 + 48)];
      size_t result = sub_100043D14(v48 + *(void *)(*(void *)(v23 - 8) + 72) * (a3 + v20), v25, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      if (__OFADD__(v20, 1)) {
        goto LABEL_33;
      }
      uint64_t v26 = (uint64_t)v11 + *(int *)(v24 + 48);
      *unint64_t v11 = v20;
      sub_1000478F8(v25, v26, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      size_t result = sub_10001D8DC((uint64_t)v11, (uint64_t)v13, &qword_1000D63E8);
      if (v19)
      {
        uint64_t v18 = v22;
        BOOL v27 = __OFSUB__(v19--, 1);
        if (v27) {
          goto LABEL_34;
        }
      }
      else
      {
        unint64_t v28 = v22[3];
        if ((uint64_t)((v28 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        int64_t v29 = v28 & 0xFFFFFFFFFFFFFFFELL;
        if (v29 <= 1) {
          uint64_t v30 = 1;
        }
        else {
          uint64_t v30 = v29;
        }
        sub_10000693C(&qword_1000D6408);
        uint64_t v31 = *(void *)(v50 + 72);
        uint64_t v32 = v44;
        uint64_t v18 = (void *)swift_allocObject();
        size_t result = j__malloc_size(v18);
        if (!v31) {
          goto LABEL_36;
        }
        int64_t v33 = result - v32;
        if (result - v32 == 0x8000000000000000 && v31 == -1) {
          goto LABEL_37;
        }
        uint64_t v35 = v33 / v31;
        v18[2] = v30;
        v18[3] = 2 * (v33 / v31);
        unint64_t v36 = (char *)v18 + v32;
        uint64_t v37 = v22[3] >> 1;
        uint64_t v38 = v37 * v31;
        if (v22[2])
        {
          if (v18 < v22 || v36 >= (char *)v22 + v44 + v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v18 != v22)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v22[2] = 0;
        }
        uint64_t v21 = &v36[v38];
        uint64_t v39 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - v37;
        size_t result = swift_release();
        BOOL v27 = __OFSUB__(v39, 1);
        uint64_t v19 = v39 - 1;
        if (v27) {
          goto LABEL_34;
        }
      }
      size_t result = sub_10001D8DC((uint64_t)v13, (uint64_t)v21, &qword_1000D63E8);
      v21 += *(void *)(v50 + 72);
      ++v20;
      unint64_t v22 = v18;
      if (!(v45 + v20)) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.WidgetPlaceholderWrapper(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D5DB8);
}

unint64_t sub_100043A70()
{
  unint64_t result = qword_1000D5D40;
  if (!qword_1000D5D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5D40);
  }
  return result;
}

uint64_t sub_100043AC4()
{
  return sub_1000AEAD8();
}

void *sub_100043AE8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_100047A24(a1, a2, a3, &qword_1000D5D50, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100043B08(uint64_t a1, uint64_t a2)
{
  return sub_100047F48(a1, a2, &qword_1000D5D50, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100043B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100048248(a1, a2, a3, &qword_1000D5D50, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100043B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100048710(a1, a2, a3, &qword_1000D5D50, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100043B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100048EC8(a1, a2, a3, &qword_1000D5D50, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100043B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000492EC(a1, a2, a3, &qword_1000D5D50, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_100043BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100043BBC);
}

uint64_t sub_100043BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10004BB00(a1, a2, a3, &qword_1000D5D58);
}

uint64_t sub_100043BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100043BDC);
}

uint64_t sub_100043BDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10004BC1C(a1, a2, a3, a4, &qword_1000D5D58);
}

void sub_100043BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100043C08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100043CF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100043D14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100043D7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100043DC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100043E24()
{
  return sub_10004726C(&qword_1000D5E10, &qword_1000D5E18, (void (*)(void))sub_100043E74);
}

unint64_t sub_100043E74()
{
  unint64_t result = qword_1000D5E20;
  if (!qword_1000D5E20)
  {
    sub_100006F98(&qword_1000D5E28);
    _s10WidgetViewVMa_0();
    sub_100043D7C(&qword_1000D5E08, (void (*)(uint64_t))_s10WidgetViewVMa_0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5E20);
  }
  return result;
}

uint64_t *sub_100043F54(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_10000693C(&qword_1000D5E30) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_1000AF268();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100044060(uint64_t a1)
{
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1000AF268();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100044104(void *a1, void *a2)
{
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000441C0(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100009EF4((uint64_t)a1, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100044294(void *a1, const void *a2)
{
  uint64_t v4 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000AF268();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_100044358(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_100009EF4((uint64_t)a1, &qword_1000D5E30);
    uint64_t v4 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_1000AF268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100044434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044448);
}

uint64_t sub_100044448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000693C(&qword_1000D5E38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000444B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000444CC);
}

uint64_t sub_1000444CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000693C(&qword_1000D5E38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for IsVibrantText(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D5E98);
}

void sub_100044560()
{
  sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_100044608(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a3[5];
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = *(void *)((char *)a2 + v5 + 8);
    *(void *)uint64_t v6 = *(void *)((char *)a2 + v5);
    *((void *)v6 + 1) = v8;
    *((_OWORD *)v6 + 1) = *(_OWORD *)((char *)a2 + v5 + 16);
    *((void *)v6 + 4) = *(void *)((char *)a2 + v5 + 32);
    v6[40] = *((unsigned char *)a2 + v5 + 40);
    uint64_t v9 = *(void *)((char *)a2 + v5 + 56);
    *((void *)v6 + 6) = *(void *)((char *)a2 + v5 + 48);
    *((void *)v6 + 7) = v9;
    uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v11 = v10[9];
    __dst = (void **)&v6[v11];
    uint64_t v12 = (void **)&v7[v11];
    uint64_t v13 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(void **, uint64_t, int *))(v14 + 48);
    unint64_t v16 = (int *)v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v20 = *v12;
      uint64_t v21 = v12[1];
      char *__dst = *v12;
      __dst[1] = v21;
      uint64_t v22 = v16[6];
      uint64_t v78 = (char *)__dst + v22;
      uint64_t v79 = v14;
      char v83 = v12;
      uint64_t v23 = (char *)v12 + v22;
      uint64_t v24 = sub_1000ADC28();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      id v26 = v20;
      id v27 = v21;
      if (v81(v23, 1, v24))
      {
        uint64_t v28 = sub_10000693C(&qword_1000D4E10);
        memcpy(v78, v23, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v78, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v78, 0, 1, v24);
      }
      uint64_t v29 = v16[7];
      uint64_t v30 = (char *)__dst + v29;
      uint64_t v31 = (char *)v83 + v29;
      uint64_t v32 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      uint64_t v33 = v16[8];
      uint64_t v34 = *(void **)((char *)v83 + v33);
      *(void **)((char *)__dst + v33) = v34;
      *(void **)((char *)__dst + v16[9]) = *(void **)((char *)v83 + v16[9]);
      *((unsigned char *)__dst + v16[10]) = *((unsigned char *)v83 + v16[10]);
      *((unsigned char *)__dst + v16[11]) = *((unsigned char *)v83 + v16[11]);
      uint64_t v35 = *(void (**)(void **, void, uint64_t, int *))(v79 + 56);
      id v36 = v34;
      v35(__dst, 0, 1, v16);
    }
    uint64_t v37 = v10[10];
    __dsta = *(void **)&v7[v37];
    *(void *)&v6[v37] = __dsta;
    uint64_t v38 = v10[11];
    uint64_t v39 = &v6[v38];
    unint64_t v40 = &v7[v38];
    uint64_t v41 = *((void *)v40 + 1);
    *(void *)uint64_t v39 = *(void *)v40;
    *((void *)v39 + 1) = v41;
    uint64_t v42 = v10[12];
    uint64_t v43 = *(void **)&v7[v42];
    *(void *)&v6[v42] = v43;
    uint64_t v44 = v10[13];
    uint64_t v45 = &v6[v44];
    uint64_t v46 = &v7[v44];
    uint64_t v47 = *((void *)v46 + 1);
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = v47;
    uint64_t v48 = v10[14];
    uint64_t v49 = &v6[v48];
    uint64_t v50 = &v7[v48];
    uint64_t v51 = *((void *)v50 + 1);
    *(void *)uint64_t v49 = *(void *)v50;
    *((void *)v49 + 1) = v51;
    v6[v10[15]] = v7[v10[15]];
    uint64_t v52 = v10[16];
    uint64_t v53 = &v6[v52];
    uint64_t v54 = &v7[v52];
    uint64_t v55 = *((void *)v54 + 1);
    *(void *)uint64_t v53 = *(void *)v54;
    *((void *)v53 + 1) = v55;
    *(void *)&v6[v10[17]] = *(void *)&v7[v10[17]];
    uint64_t v56 = v10[18];
    uint64_t v82 = &v7[v56];
    uint64_t v84 = &v6[v56];
    uint64_t v57 = sub_1000ADD48();
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
    id v58 = __dsta;
    swift_bridgeObjectRetain();
    id v59 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v80(v84, v82, v57);
    *(void *)&v6[v10[19]] = *(void *)&v7[v10[19]];
    v6[v10[20]] = v7[v10[20]];
    uint64_t v60 = a3[6];
    uint64_t v19 = a1;
    uint64_t v61 = (void *)((char *)a1 + v60);
    uint64_t v62 = (void *)((char *)a2 + v60);
    swift_bridgeObjectRetain();
    sub_10000693C(&qword_1000D5ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v63 = sub_1000AE968();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    }
    else
    {
      *uint64_t v61 = *v62;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v64 = a3[7];
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    uint64_t v67 = *(void *)v66;
    char v68 = v66[8];
    sub_10004C4D4(*(void *)v66, v68);
    *(void *)uint64_t v65 = v67;
    v65[8] = v68;
    uint64_t v69 = a3[8];
    uint64_t v70 = (void *)((char *)a1 + v69);
    uint64_t v71 = (void *)((char *)a2 + v69);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v72 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
    }
    else
    {
      *uint64_t v70 = *v71;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v73 = a3[9];
    uint64_t v74 = (void *)((char *)a1 + v73);
    uint64_t v75 = (void *)((char *)a2 + v73);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v76 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
    }
    else
    {
      *uint64_t v74 = *v75;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v19;
}

uint64_t sub_100044C58(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v6 = (id *)(v4 + v5[9]);
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {

    uint64_t v8 = (char *)v6 + v7[6];
    uint64_t v9 = sub_1000ADC28();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = (char *)v6 + v7[7];
    uint64_t v12 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v4 + v5[18];
  uint64_t v14 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + a2[6];
  sub_10000693C(&qword_1000D5ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_1000AE968();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  sub_10004C8C4(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v17 = a1 + a2[8];
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_1000AF268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  uint64_t v19 = a1 + a2[9];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_1000AF268();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
    return v21(v19, v20);
  }
  else
  {
    return swift_release();
  }
}

unsigned char *sub_10004501C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  uint64_t v6 = *(void *)&a2[v3 + 8];
  *(void *)uint64_t v4 = *(void *)&a2[v3];
  *((void *)v4 + 1) = v6;
  *((_OWORD *)v4 + 1) = *(_OWORD *)&a2[v3 + 16];
  *((void *)v4 + 4) = *(void *)&a2[v3 + 32];
  v4[40] = a2[v3 + 40];
  uint64_t v7 = *(void *)&a2[v3 + 56];
  *((void *)v4 + 6) = *(void *)&a2[v3 + 48];
  *((void *)v4 + 7) = v7;
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = v8[9];
  __dst = (void **)&v4[v9];
  uint64_t v10 = (void **)&v5[v9];
  uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
  uint64_t v14 = (int *)v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v14))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v77 = v10;
    uint64_t v79 = v12;
    uint64_t v16 = *v10;
    uint64_t v17 = v10[1];
    char *__dst = *v10;
    __dst[1] = v17;
    uint64_t v18 = v14[6];
    uint64_t v75 = (char *)__dst + v18;
    uint64_t v19 = (char *)v10 + v18;
    uint64_t v20 = sub_1000ADC28();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    id v22 = v16;
    id v23 = v17;
    if (v74(v19, 1, v20))
    {
      uint64_t v24 = sub_10000693C(&qword_1000D4E10);
      memcpy(v75, v19, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v75, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v75, 0, 1, v20);
    }
    uint64_t v25 = v14[7];
    id v26 = (char *)__dst + v25;
    id v27 = (char *)v77 + v25;
    uint64_t v28 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = v14[8];
    uint64_t v30 = *(void **)((char *)v77 + v29);
    *(void **)((char *)__dst + v29) = v30;
    *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v77 + v14[9]);
    *((unsigned char *)__dst + v14[10]) = *((unsigned char *)v77 + v14[10]);
    *((unsigned char *)__dst + v14[11]) = *((unsigned char *)v77 + v14[11]);
    uint64_t v31 = *(void (**)(void **, void, uint64_t, int *))(v79 + 56);
    id v32 = v30;
    v31(__dst, 0, 1, v14);
  }
  uint64_t v33 = v8[10];
  __dsta = *(void **)&v5[v33];
  *(void *)&v4[v33] = __dsta;
  uint64_t v34 = v8[11];
  uint64_t v35 = &v4[v34];
  id v36 = &v5[v34];
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v8[12];
  uint64_t v39 = *(void **)&v5[v38];
  *(void *)&v4[v38] = v39;
  uint64_t v40 = v8[13];
  uint64_t v41 = &v4[v40];
  uint64_t v42 = &v5[v40];
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  uint64_t v44 = v8[14];
  uint64_t v45 = &v4[v44];
  uint64_t v46 = &v5[v44];
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  v4[v8[15]] = v5[v8[15]];
  uint64_t v48 = v8[16];
  uint64_t v49 = &v4[v48];
  uint64_t v50 = &v5[v48];
  uint64_t v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  *(void *)&v4[v8[17]] = *(void *)&v5[v8[17]];
  uint64_t v52 = v8[18];
  uint64_t v78 = &v5[v52];
  uint64_t v80 = &v4[v52];
  uint64_t v53 = sub_1000ADD48();
  uint64_t v76 = *(void **)(*(void *)(v53 - 8) + 16);
  id v54 = __dsta;
  swift_bridgeObjectRetain();
  id v55 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v76)(v80, v78, v53);
  *(void *)&v4[v8[19]] = *(void *)&v5[v8[19]];
  v4[v8[20]] = v5[v8[20]];
  uint64_t v56 = a3[6];
  uint64_t v57 = &a1[v56];
  id v58 = &a2[v56];
  swift_bridgeObjectRetain();
  sub_10000693C(&qword_1000D5ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v59 = sub_1000AE968();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
  }
  else
  {
    *uint64_t v57 = *v58;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v60 = a3[7];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  uint64_t v63 = *(void *)v62;
  char v64 = v62[8];
  sub_10004C4D4(*(void *)v62, v64);
  *(void *)uint64_t v61 = v63;
  v61[8] = v64;
  uint64_t v65 = a3[8];
  uint64_t v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v68 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
  }
  else
  {
    *uint64_t v66 = *v67;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v69 = a3[9];
  uint64_t v70 = &a1[v69];
  uint64_t v71 = &a2[v69];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v72 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
  }
  else
  {
    *uint64_t v70 = *v71;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *sub_10004560C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  *(void *)uint64_t v4 = *(void *)&a2[v3];
  *((void *)v4 + 1) = *(void *)&a2[v3 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 2) = *((void *)v5 + 2);
  *((void *)v4 + 3) = *((void *)v5 + 3);
  *((void *)v4 + 4) = *((void *)v5 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[40] = v5[40];
  *((void *)v4 + 6) = *((void *)v5 + 6);
  *((void *)v4 + 7) = *((void *)v5 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = &v4[v7];
  uint64_t v9 = &v5[v7];
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_100043DC4((uint64_t)v8, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v22 = (void *)*v9;
    id v23 = (void *)*v8;
    *uint64_t v8 = *v9;
    id v24 = v22;

    uint64_t v25 = (void *)v8[1];
    id v26 = (void *)v9[1];
    v8[1] = v26;
    id v27 = v26;

    uint64_t v28 = v10[6];
    uint64_t v29 = (char *)v8 + v28;
    __dsta = (char *)v9 + v28;
    uint64_t v30 = sub_1000ADC28();
    uint64_t v98 = *(void *)(v30 - 8);
    char v100 = v29;
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
    LODWORD(v29) = v31(v29, 1, v30);
    int v32 = v31(__dsta, 1, v30);
    if (v29)
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v98 + 16))(v100, __dsta, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v100, 0, 1, v30);
        goto LABEL_18;
      }
      size_t v33 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v34 = v100;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v98 + 24))(v100, __dsta, v30);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v98 + 8))(v100, v30);
      size_t v33 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v34 = v100;
    }
    memcpy(v34, __dsta, v33);
LABEL_18:
    uint64_t v43 = v10[7];
    uint64_t v44 = (char *)v8 + v43;
    uint64_t v45 = (char *)v9 + v43;
    uint64_t v46 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
    uint64_t v47 = v10[8];
    uint64_t v48 = *(void **)((char *)v8 + v47);
    uint64_t v49 = *(void **)((char *)v9 + v47);
    *(void *)((char *)v8 + v47) = v49;
    id v50 = v49;

    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v21 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v15 = (void *)*v9;
  *uint64_t v8 = *v9;
  uint64_t v99 = (void *)v9[1];
  v8[1] = v99;
  uint64_t v16 = v10[6];
  __dst = (char *)v8 + v16;
  uint64_t v97 = (char *)v9 + v16;
  uint64_t v17 = sub_1000ADC28();
  uint64_t v95 = *(void *)(v17 - 8);
  char v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
  id v18 = v15;
  id v19 = v99;
  if (v96(v97, 1, v17))
  {
    uint64_t v20 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v97, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(__dst, v97, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v35 = v10[7];
  id v36 = (char *)v8 + v35;
  uint64_t v37 = (char *)v9 + v35;
  uint64_t v38 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = v10[8];
  uint64_t v40 = *(void **)((char *)v9 + v39);
  *(void *)((char *)v8 + v39) = v40;
  *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
  *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
  *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
  uint64_t v41 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
  id v42 = v40;
  v41(v8, 0, 1, v10);
LABEL_19:
  uint64_t v51 = v6[10];
  uint64_t v52 = *(void **)&v5[v51];
  uint64_t v53 = *(void **)&v4[v51];
  *(void *)&v4[v51] = v52;
  id v54 = v52;

  uint64_t v55 = v6[11];
  uint64_t v56 = &v4[v55];
  uint64_t v57 = &v5[v55];
  void *v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = v6[12];
  uint64_t v59 = *(void **)&v4[v58];
  uint64_t v60 = *(void **)&v5[v58];
  *(void *)&v4[v58] = v60;
  id v61 = v60;

  uint64_t v62 = v6[13];
  uint64_t v63 = &v4[v62];
  char v64 = &v5[v62];
  *uint64_t v63 = *v64;
  v63[1] = v64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v65 = v6[14];
  uint64_t v66 = &v4[v65];
  uint64_t v67 = &v5[v65];
  *uint64_t v66 = *v67;
  v66[1] = v67[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[v6[15]] = v5[v6[15]];
  uint64_t v68 = v6[16];
  uint64_t v69 = &v4[v68];
  uint64_t v70 = &v5[v68];
  *uint64_t v69 = *v70;
  v69[1] = v70[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v4[v6[17]] = *(void *)&v5[v6[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v71 = v6[18];
  uint64_t v72 = &v4[v71];
  uint64_t v73 = &v5[v71];
  uint64_t v74 = sub_1000ADD48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v74 - 8) + 24))(v72, v73, v74);
  *(void *)&v4[v6[19]] = *(void *)&v5[v6[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[v6[20]] = v5[v6[20]];
  if (a1 != a2)
  {
    uint64_t v75 = a3[6];
    uint64_t v76 = &a1[v75];
    uint64_t v77 = &a2[v75];
    sub_100009EF4((uint64_t)&a1[v75], &qword_1000D5ED8);
    sub_10000693C(&qword_1000D5ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v78 = sub_1000AE968();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
    }
    else
    {
      *uint64_t v76 = *v77;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v79 = a3[7];
  uint64_t v80 = &a1[v79];
  uint64_t v81 = &a2[v79];
  uint64_t v82 = *(void *)v81;
  char v83 = v81[8];
  sub_10004C4D4(*(void *)v81, v83);
  uint64_t v84 = *(void *)v80;
  char v85 = v80[8];
  *(void *)uint64_t v80 = v82;
  v80[8] = v83;
  sub_10004C8C4(v84, v85);
  if (a1 != a2)
  {
    uint64_t v86 = a3[8];
    uint64_t v87 = &a1[v86];
    uint64_t v88 = &a2[v86];
    sub_100009EF4((uint64_t)&a1[v86], &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v89 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
    }
    else
    {
      *uint64_t v87 = *v88;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v90 = a3[9];
    uint64_t v91 = &a1[v90];
    uint64_t v92 = &a2[v90];
    sub_100009EF4((uint64_t)&a1[v90], &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v93 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
    }
    else
    {
      *uint64_t v91 = *v92;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_100045F30(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)&a2[v6];
  *((void *)v7 + 2) = *(void *)&a2[v6 + 16];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  v7[40] = a2[v6 + 40];
  *((_OWORD *)v7 + 3) = *(_OWORD *)&a2[v6 + 48];
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v10 = v9[9];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  int v13 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v47 = v3;
    uint64_t v48 = v4;
    *uint64_t v11 = *v12;
    uint64_t v16 = v13[6];
    uint64_t v49 = v5;
    __dst = (char *)v11 + v16;
    uint64_t v17 = (char *)v12 + v16;
    uint64_t v18 = sub_1000ADC28();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v21 = v13[7];
    id v22 = (char *)v11 + v21;
    id v23 = (char *)v12 + v21;
    uint64_t v24 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    *(void *)((char *)v11 + v13[8]) = *(void *)((char *)v12 + v13[8]);
    *(void *)((char *)v11 + v13[9]) = *(void *)((char *)v12 + v13[9]);
    *((unsigned char *)v11 + v13[10]) = *((unsigned char *)v12 + v13[10]);
    *((unsigned char *)v11 + v13[11]) = *((unsigned char *)v12 + v13[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
    uint64_t v4 = v48;
    uint64_t v5 = v49;
    uint64_t v3 = v47;
  }
  *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
  *(_OWORD *)&v7[v9[11]] = *(_OWORD *)&v8[v9[11]];
  *(void *)&v7[v9[12]] = *(void *)&v8[v9[12]];
  *(_OWORD *)&v7[v9[13]] = *(_OWORD *)&v8[v9[13]];
  *(_OWORD *)&v7[v9[14]] = *(_OWORD *)&v8[v9[14]];
  v7[v9[15]] = v8[v9[15]];
  *(_OWORD *)&v7[v9[16]] = *(_OWORD *)&v8[v9[16]];
  *(void *)&v7[v9[17]] = *(void *)&v8[v9[17]];
  uint64_t v25 = v9[18];
  id v26 = &v7[v25];
  id v27 = &v8[v25];
  uint64_t v28 = sub_1000ADD48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  *(void *)&v7[v9[19]] = *(void *)&v8[v9[19]];
  v7[v9[20]] = v8[v9[20]];
  uint64_t v29 = v3[6];
  uint64_t v30 = &v5[v29];
  uint64_t v31 = &v4[v29];
  uint64_t v32 = sub_10000693C(&qword_1000D5ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = sub_1000AE968();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  uint64_t v34 = v3[7];
  uint64_t v35 = v3[8];
  id v36 = &v5[v34];
  uint64_t v37 = &v4[v34];
  *(void *)id v36 = *(void *)v37;
  v36[8] = v37[8];
  uint64_t v38 = &v5[v35];
  uint64_t v39 = &v4[v35];
  uint64_t v40 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v41 = sub_1000AF268();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 32))(v38, v39, v41);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  uint64_t v42 = v3[9];
  uint64_t v43 = &v5[v42];
  uint64_t v44 = &v4[v42];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v45 = sub_1000AF268();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v43, v44, *(void *)(*(void *)(v40 - 8) + 64));
  }
  return v5;
}

unsigned char *sub_100046498(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  uint64_t v6 = *(void *)&a2[v3 + 8];
  *(void *)uint64_t v4 = *(void *)&a2[v3];
  *((void *)v4 + 1) = v6;
  swift_bridgeObjectRelease();
  *((_OWORD *)v4 + 1) = *((_OWORD *)v5 + 1);
  *((void *)v4 + 4) = *((void *)v5 + 4);
  swift_bridgeObjectRelease();
  v4[40] = v5[40];
  uint64_t v7 = *((void *)v5 + 7);
  *((void *)v4 + 6) = *((void *)v5 + 6);
  *((void *)v4 + 7) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = v8[9];
  uint64_t v10 = &v4[v9];
  uint64_t v11 = &v5[v9];
  uint64_t v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      uint64_t v17 = v12[6];
      __dst = (char *)v10 + v17;
      uint64_t v18 = (char *)v11 + v17;
      uint64_t v19 = sub_1000ADC28();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = sub_10000693C(&qword_1000D4E10);
        memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
      }
      uint64_t v32 = v12[7];
      uint64_t v33 = (char *)v10 + v32;
      uint64_t v34 = (char *)v11 + v32;
      uint64_t v35 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      *(void *)((char *)v10 + v12[8]) = *(void *)((char *)v11 + v12[8]);
      *(void *)((char *)v10 + v12[9]) = *(void *)((char *)v11 + v12[9]);
      *((unsigned char *)v10 + v12[10]) = *((unsigned char *)v11 + v12[10]);
      *((unsigned char *)v10 + v12[11]) = *((unsigned char *)v11 + v12[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v22 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v10, v11, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_13:
    id v36 = a1;
    goto LABEL_14;
  }
  if (v16)
  {
    sub_100043DC4((uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    goto LABEL_7;
  }
  id v23 = (void *)*v10;
  void *v10 = *v11;

  uint64_t v24 = (void *)v10[1];
  v10[1] = v11[1];

  uint64_t v25 = v12[6];
  id v26 = (char *)v10 + v25;
  __dsta = (char *)v11 + v25;
  uint64_t v27 = sub_1000ADC28();
  uint64_t v93 = *(void *)(v27 - 8);
  uint64_t v94 = v26;
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
  LODWORD(v26) = v28(v26, 1, v27);
  int v29 = v28(__dsta, 1, v27);
  if (v26)
  {
    if (!v29)
    {
      (*(void (**)(void *, char *, uint64_t))(v93 + 32))(v94, __dsta, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56))(v94, 0, 1, v27);
      goto LABEL_31;
    }
    size_t v30 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v31 = v94;
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, char *, uint64_t))(v93 + 40))(v94, __dsta, v27);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v93 + 8))(v94, v27);
    size_t v30 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v31 = v94;
  }
  memcpy(v31, __dsta, v30);
LABEL_31:
  id v36 = a1;
  uint64_t v87 = v12[7];
  uint64_t v88 = (char *)v10 + v87;
  uint64_t v89 = (char *)v11 + v87;
  uint64_t v90 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 40))(v88, v89, v90);
  uint64_t v91 = v12[8];
  uint64_t v92 = *(void **)((char *)v10 + v91);
  *(void *)((char *)v10 + v91) = *(void *)((char *)v11 + v91);

  *(void *)((char *)v10 + v12[9]) = *(void *)((char *)v11 + v12[9]);
  *((unsigned char *)v10 + v12[10]) = *((unsigned char *)v11 + v12[10]);
  *((unsigned char *)v10 + v12[11]) = *((unsigned char *)v11 + v12[11]);
LABEL_14:
  uint64_t v37 = v8[10];
  uint64_t v38 = *(void **)&v4[v37];
  *(void *)&v4[v37] = *(void *)&v5[v37];

  uint64_t v39 = v8[11];
  uint64_t v40 = &v4[v39];
  uint64_t v41 = (uint64_t *)&v5[v39];
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = v8[12];
  uint64_t v45 = *(void **)&v4[v44];
  *(void *)&v4[v44] = *(void *)&v5[v44];

  uint64_t v46 = v8[13];
  uint64_t v47 = &v4[v46];
  uint64_t v48 = (uint64_t *)&v5[v46];
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  *uint64_t v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = v8[14];
  uint64_t v52 = &v4[v51];
  uint64_t v53 = (uint64_t *)&v5[v51];
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  *uint64_t v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  v4[v8[15]] = v5[v8[15]];
  uint64_t v56 = v8[16];
  uint64_t v57 = &v4[v56];
  uint64_t v58 = (uint64_t *)&v5[v56];
  uint64_t v60 = *v58;
  uint64_t v59 = v58[1];
  *uint64_t v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  *(void *)&v4[v8[17]] = *(void *)&v5[v8[17]];
  swift_bridgeObjectRelease();
  uint64_t v61 = v8[18];
  uint64_t v62 = &v4[v61];
  uint64_t v63 = &v5[v61];
  uint64_t v64 = sub_1000ADD48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  *(void *)&v4[v8[19]] = *(void *)&v5[v8[19]];
  swift_bridgeObjectRelease();
  v4[v8[20]] = v5[v8[20]];
  if (v36 != a2)
  {
    uint64_t v65 = a3[6];
    uint64_t v66 = &v36[v65];
    uint64_t v67 = &a2[v65];
    sub_100009EF4((uint64_t)&v36[v65], &qword_1000D5ED8);
    uint64_t v68 = sub_10000693C(&qword_1000D5ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v69 = sub_1000AE968();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v69 - 8) + 32))(v66, v67, v69);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
  }
  uint64_t v70 = a3[7];
  uint64_t v71 = &v36[v70];
  uint64_t v72 = &a2[v70];
  uint64_t v73 = *(void *)v72;
  LOBYTE(v72) = v72[8];
  uint64_t v74 = *(void *)v71;
  char v75 = v71[8];
  *(void *)uint64_t v71 = v73;
  v71[8] = (_BYTE)v72;
  sub_10004C8C4(v74, v75);
  if (v36 != a2)
  {
    uint64_t v76 = a3[8];
    uint64_t v77 = &v36[v76];
    uint64_t v78 = &a2[v76];
    sub_100009EF4((uint64_t)&v36[v76], &qword_1000D5E30);
    uint64_t v79 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v80 = sub_1000AF268();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v80 - 8) + 32))(v77, v78, v80);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
    }
    uint64_t v81 = a3[9];
    uint64_t v82 = &v36[v81];
    char v83 = &a2[v81];
    sub_100009EF4((uint64_t)&v36[v81], &qword_1000D5E30);
    uint64_t v84 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v85 = sub_1000AF268();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v85 - 8) + 32))(v82, v83, v85);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
    }
  }
  return v36;
}

uint64_t sub_100046D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100046D30);
}

uint64_t sub_100046D30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetViewModel(0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v14(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_10000693C(&qword_1000D5EE0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_11;
  }
  if (a2 == 254)
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + a3[7] + 8);
    if (v11 > 1) {
      return (v11 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v13 = sub_10000693C(&qword_1000D5E38);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v7 = v13;
    uint64_t v8 = *(void *)(v13 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_11;
  }
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 48);
  uint64_t v17 = IsVibrantText;
  uint64_t v18 = a1 + a3[9];

  return v16(v18, a2, v17);
}

uint64_t sub_100046EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100046F10);
}

uint64_t sub_100046F10(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for TTRNewWidgetViewModel(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(a1 + v11, a2, a2, v9);
  }
  uint64_t result = sub_10000693C(&qword_1000D5EE0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[7] + 8) = -(char)a2;
    return result;
  }
  uint64_t v13 = sub_10000693C(&qword_1000D5E38);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 56);
  uint64_t v17 = IsVibrantText;
  uint64_t v18 = a1 + a4[9];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for TTRAnyListWidget.SystemWidgetView(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D5F40);
}

void sub_100047100()
{
  type metadata accessor for TTRNewWidgetViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100049B0C(319, (unint64_t *)&unk_1000D5F50, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    if (v1 <= 0x3F)
    {
      sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100047250()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004726C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000472D8()
{
  unint64_t result = qword_1000D5FD0;
  if (!qword_1000D5FD0)
  {
    sub_100006F98(&qword_1000D5FD8);
    sub_100047384();
    sub_100043D7C(&qword_1000D6000, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveLarge);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5FD0);
  }
  return result;
}

unint64_t sub_100047384()
{
  unint64_t result = qword_1000D5FE0;
  if (!qword_1000D5FE0)
  {
    sub_100006F98(&qword_1000D5FE8);
    sub_100043D7C(&qword_1000D5FF0, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveSmall);
    sub_100043D7C(&qword_1000D5FF8, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveMedium);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5FE0);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveSmall(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D6210);
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveMedium(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D6170);
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveLarge(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D60D8);
}

unint64_t sub_1000474C0()
{
  unint64_t result = qword_1000D6008;
  if (!qword_1000D6008)
  {
    sub_100006F98(&qword_1000D5FC0);
    sub_100009F50(&qword_1000D6010, &qword_1000D6018);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6008);
  }
  return result;
}

uint64_t sub_100047560@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_1000477AC, a1);
}

uint64_t sub_100047580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_1000477AC);
}

uint64_t sub_1000475B4@<X0>(void *a1@<X8>)
{
  sub_100047758();
  uint64_t result = sub_1000AEB38();
  *a1 = v3;
  return result;
}

uint64_t sub_100047608@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_100047704, a1);
}

uint64_t sub_100047628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_100047704);
}

uint64_t sub_10004765C@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_1000476B0, a1);
}

uint64_t sub_10004767C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_1000476B0);
}

unint64_t sub_1000476B0()
{
  unint64_t result = qword_1000D6020;
  if (!qword_1000D6020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6020);
  }
  return result;
}

unint64_t sub_100047704()
{
  unint64_t result = qword_1000D6028;
  if (!qword_1000D6028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6028);
  }
  return result;
}

unint64_t sub_100047758()
{
  unint64_t result = qword_1000D6038;
  if (!qword_1000D6038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6038);
  }
  return result;
}

unint64_t sub_1000477AC()
{
  unint64_t result = qword_1000D6050;
  if (!qword_1000D6050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6050);
  }
  return result;
}

uint64_t sub_100047800()
{
  return sub_1000AEA48();
}

uint64_t sub_100047824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000435A4(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100047864@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_100047960, a1);
}

uint64_t sub_100047884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_100047960);
}

uint64_t sub_1000478C0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000AEA18();
  *a1 = v3;
  return result;
}

uint64_t sub_1000478F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100047960()
{
  unint64_t result = qword_1000D6078;
  if (!qword_1000D6078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6078);
  }
  return result;
}

ValueMetadata *_s15ReminderFontKeyOMa()
{
  return &_s15ReminderFontKeyON;
}

ValueMetadata *_s13BadgeColorKeyOMa()
{
  return &_s13BadgeColorKeyON;
}

ValueMetadata *_s16ListTextColorKeyOMa()
{
  return &_s16ListTextColorKeyON;
}

ValueMetadata *_s15DividerColorKeyOMa()
{
  return &_s15DividerColorKeyON;
}

ValueMetadata *_s13CountColorKeyOMa()
{
  return &_s13CountColorKeyON;
}

void *sub_100047A04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_100047A24(a1, a2, a3, &qword_1000D6070, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize);
}

void *sub_100047A24(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v6 = (void *)a1;
  int v7 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v7 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v6 = *a2;
    uint64_t v6 = (void *)(v18 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v8;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v11 = v10[9];
    __dst = (void **)((char *)v6 + v11);
    uint64_t v12 = (void **)((char *)a2 + v11);
    uint64_t v13 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v14 = *(void *)(v13 - 8);
    int v15 = *(unsigned int (**)(void **, uint64_t, int *))(v14 + 48);
    int v16 = (int *)v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = *v12;
      uint64_t v20 = v12[1];
      char *__dst = *v12;
      __dst[1] = v20;
      uint64_t v21 = v16[6];
      uint64_t v65 = (char *)__dst + v21;
      uint64_t v66 = v14;
      uint64_t v70 = v12;
      uint64_t v22 = (char *)v12 + v21;
      uint64_t v23 = sub_1000ADC28();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      id v25 = v19;
      id v26 = v20;
      if (v68(v22, 1, v23))
      {
        uint64_t v27 = sub_10000693C(&qword_1000D4E10);
        memcpy(v65, v22, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v65, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v65, 0, 1, v23);
      }
      uint64_t v28 = v16[7];
      int v29 = (char *)__dst + v28;
      size_t v30 = (char *)v70 + v28;
      uint64_t v31 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      uint64_t v32 = v16[8];
      uint64_t v33 = *(void **)((char *)v70 + v32);
      *(void **)((char *)__dst + v32) = v33;
      *(void **)((char *)__dst + v16[9]) = *(void **)((char *)v70 + v16[9]);
      *((unsigned char *)__dst + v16[10]) = *((unsigned char *)v70 + v16[10]);
      *((unsigned char *)__dst + v16[11]) = *((unsigned char *)v70 + v16[11]);
      uint64_t v34 = *(void (**)(void **, void, uint64_t, int *))(v66 + 56);
      id v35 = v33;
      v34(__dst, 0, 1, v16);
    }
    uint64_t v36 = v10[10];
    __dsta = *(void **)((char *)a2 + v36);
    *(void *)((char *)v6 + v36) = __dsta;
    uint64_t v37 = v10[11];
    uint64_t v38 = (void *)((char *)v6 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    uint64_t v41 = v10[12];
    uint64_t v42 = *(void **)((char *)a2 + v41);
    *(void *)((char *)v6 + v41) = v42;
    uint64_t v43 = v10[13];
    uint64_t v44 = (void *)((char *)v6 + v43);
    uint64_t v45 = (uint64_t *)((char *)a2 + v43);
    uint64_t v46 = v45[1];
    void *v44 = *v45;
    v44[1] = v46;
    uint64_t v47 = v10[14];
    uint64_t v48 = (void *)((char *)v6 + v47);
    uint64_t v49 = (uint64_t *)((char *)a2 + v47);
    uint64_t v50 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v50;
    *((unsigned char *)v6 + v10[15]) = *((unsigned char *)a2 + v10[15]);
    uint64_t v51 = v10[16];
    uint64_t v52 = (void *)((char *)v6 + v51);
    uint64_t v53 = (uint64_t *)((char *)a2 + v51);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    *(void *)((char *)v6 + v10[17]) = *(uint64_t *)((char *)a2 + v10[17]);
    uint64_t v55 = v10[18];
    uint64_t v69 = (uint64_t)a2 + v55;
    uint64_t v71 = (char *)v6 + v55;
    uint64_t v56 = sub_1000ADD48();
    uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
    id v57 = __dsta;
    swift_bridgeObjectRetain();
    id v58 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v67(v71, v69, v56);
    *(void *)((char *)v6 + v10[19]) = *(uint64_t *)((char *)a2 + v10[19]);
    *((unsigned char *)v6 + v10[20]) = *((unsigned char *)a2 + v10[20]);
    uint64_t v59 = *(int *)(a3 + 20);
    uint64_t v60 = (void *)((char *)v6 + v59);
    uint64_t v61 = (uint64_t *)((char *)a2 + v59);
    swift_bridgeObjectRetain();
    sub_10000693C(a4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v62 = a5(0);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
    }
    else
    {
      *uint64_t v60 = *v61;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v6;
}

uint64_t sub_100047F28(uint64_t a1, uint64_t a2)
{
  return sub_100047F48(a1, a2, &qword_1000D6070, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_100047F48(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = (id *)(a1 + v8[9]);
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v10 - 1) + 48))(v9, 1, v10))
  {

    uint64_t v11 = (char *)v9 + v10[6];
    uint64_t v12 = sub_1000ADC28();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    }
    uint64_t v14 = (char *)v9 + v10[7];
    uint64_t v15 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + v8[18];
  uint64_t v17 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  swift_bridgeObjectRelease();
  uint64_t v18 = a1 + *(int *)(a2 + 20);
  sub_10000693C(a3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = a4(0);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
    return v20(v18, v19);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100048228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100048248(a1, a2, a3, &qword_1000D6070, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_100048248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v10 = v9[9];
  __dst = (void **)(a1 + v10);
  uint64_t v11 = (void **)(a2 + v10);
  uint64_t v12 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(void **, uint64_t, int *))(v13 + 48);
  uint64_t v15 = (int *)v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v15))
  {
    uint64_t v16 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v66 = v11;
    uint64_t v68 = v13;
    uint64_t v17 = *v11;
    uint64_t v18 = v11[1];
    char *__dst = *v11;
    __dst[1] = v18;
    uint64_t v19 = v15[6];
    uint64_t v64 = (char *)__dst + v19;
    uint64_t v20 = (char *)v11 + v19;
    uint64_t v21 = sub_1000ADC28();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    id v23 = v17;
    id v24 = v18;
    if (v63(v20, 1, v21))
    {
      uint64_t v25 = sub_10000693C(&qword_1000D4E10);
      memcpy(v64, v20, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v64, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v64, 0, 1, v21);
    }
    uint64_t v26 = v15[7];
    uint64_t v27 = (char *)__dst + v26;
    uint64_t v28 = (char *)v66 + v26;
    uint64_t v29 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    uint64_t v30 = v15[8];
    uint64_t v31 = *(void **)((char *)v66 + v30);
    *(void **)((char *)__dst + v30) = v31;
    *(void **)((char *)__dst + v15[9]) = *(void **)((char *)v66 + v15[9]);
    *((unsigned char *)__dst + v15[10]) = *((unsigned char *)v66 + v15[10]);
    *((unsigned char *)__dst + v15[11]) = *((unsigned char *)v66 + v15[11]);
    uint64_t v32 = *(void (**)(void **, void, uint64_t, int *))(v68 + 56);
    id v33 = v31;
    v32(__dst, 0, 1, v15);
  }
  uint64_t v34 = v9[10];
  __dsta = *(void **)(a2 + v34);
  *(void *)(a1 + v34) = __dsta;
  uint64_t v35 = v9[11];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = v37[1];
  void *v36 = *v37;
  v36[1] = v38;
  uint64_t v39 = v9[12];
  uint64_t v40 = *(void **)(a2 + v39);
  *(void *)(a1 + v39) = v40;
  uint64_t v41 = v9[13];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  uint64_t v45 = v9[14];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = v47[1];
  void *v46 = *v47;
  v46[1] = v48;
  *(unsigned char *)(a1 + v9[15]) = *(unsigned char *)(a2 + v9[15]);
  uint64_t v49 = v9[16];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (void *)(a2 + v49);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  *(void *)(a1 + v9[17]) = *(void *)(a2 + v9[17]);
  uint64_t v53 = v9[18];
  uint64_t v67 = a2 + v53;
  uint64_t v69 = a1 + v53;
  uint64_t v54 = sub_1000ADD48();
  uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
  id v55 = __dsta;
  swift_bridgeObjectRetain();
  id v56 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v65(v69, v67, v54);
  *(void *)(a1 + v9[19]) = *(void *)(a2 + v9[19]);
  *(unsigned char *)(a1 + v9[20]) = *(unsigned char *)(a2 + v9[20]);
  uint64_t v57 = *(int *)(a3 + 20);
  id v58 = (void *)(a1 + v57);
  uint64_t v59 = (void *)(a2 + v57);
  swift_bridgeObjectRetain();
  sub_10000693C(a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v60 = a5(0);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  }
  else
  {
    *id v58 = *v59;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000486F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100048710(a1, a2, a3, &qword_1000D6070, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_100048710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = v7[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_100043DC4((uint64_t)v9, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v23 = (void *)*v10;
    id v24 = (void *)*v9;
    *uint64_t v9 = *v10;
    id v25 = v23;

    uint64_t v26 = (void *)v9[1];
    uint64_t v27 = (void *)v10[1];
    v9[1] = v27;
    id v28 = v27;

    uint64_t v29 = v11[6];
    uint64_t v30 = (char *)v9 + v29;
    __dsta = (char *)v10 + v29;
    uint64_t v31 = sub_1000ADC28();
    uint64_t v84 = *(void *)(v31 - 8);
    uint64_t v86 = v30;
    uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
    LODWORD(v30) = v32(v30, 1, v31);
    int v33 = v32(__dsta, 1, v31);
    if (v30)
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v84 + 16))(v86, __dsta, v31);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v86, 0, 1, v31);
        goto LABEL_18;
      }
      size_t v34 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v35 = v86;
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v84 + 24))(v86, __dsta, v31);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v84 + 8))(v86, v31);
      size_t v34 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v35 = v86;
    }
    memcpy(v35, __dsta, v34);
LABEL_18:
    uint64_t v44 = v11[7];
    uint64_t v45 = (char *)v9 + v44;
    uint64_t v46 = (char *)v10 + v44;
    uint64_t v47 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
    uint64_t v48 = v11[8];
    uint64_t v49 = *(void **)((char *)v9 + v48);
    uint64_t v50 = *(void **)((char *)v10 + v48);
    *(void *)((char *)v9 + v48) = v50;
    id v51 = v50;

    *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
    *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
    *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
    goto LABEL_19;
  }
  if (v15)
  {
LABEL_7:
    uint64_t v22 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v9, v10, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v16 = (void *)*v10;
  *uint64_t v9 = *v10;
  uint64_t v85 = (void *)v10[1];
  v9[1] = v85;
  uint64_t v17 = v11[6];
  __dst = (char *)v9 + v17;
  char v83 = (char *)v10 + v17;
  uint64_t v18 = sub_1000ADC28();
  uint64_t v81 = *(void *)(v18 - 8);
  uint64_t v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
  id v19 = v16;
  id v20 = v85;
  if (v82(v83, 1, v18))
  {
    uint64_t v21 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v83, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(__dst, v83, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(__dst, 0, 1, v18);
  }
  uint64_t v36 = v11[7];
  uint64_t v37 = (char *)v9 + v36;
  uint64_t v38 = (char *)v10 + v36;
  uint64_t v39 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  uint64_t v40 = v11[8];
  uint64_t v41 = *(void **)((char *)v10 + v40);
  *(void *)((char *)v9 + v40) = v41;
  *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
  *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
  *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
  uint64_t v42 = *(void (**)(void *, void, uint64_t, int *))(v12 + 56);
  id v43 = v41;
  v42(v9, 0, 1, v11);
LABEL_19:
  uint64_t v52 = v7[10];
  uint64_t v53 = *(void **)(a2 + v52);
  uint64_t v54 = *(void **)(a1 + v52);
  *(void *)(a1 + v52) = v53;
  id v55 = v53;

  uint64_t v56 = v7[11];
  uint64_t v57 = (void *)(a1 + v56);
  id v58 = (void *)(a2 + v56);
  *uint64_t v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = v7[12];
  uint64_t v60 = *(void **)(a1 + v59);
  uint64_t v61 = *(void **)(a2 + v59);
  *(void *)(a1 + v59) = v61;
  id v62 = v61;

  uint64_t v63 = v7[13];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = v7[14];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (void *)(a2 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  uint64_t v69 = v7[16];
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (void *)(a2 + v69);
  *uint64_t v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = v7[18];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  uint64_t v75 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 24))(v73, v74, v75);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  if (a1 != a2)
  {
    uint64_t v76 = *(int *)(a3 + 20);
    uint64_t v77 = (void *)(a1 + v76);
    uint64_t v78 = (void *)(a2 + v76);
    sub_100009EF4(a1 + v76, a4);
    sub_10000693C(a4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v79 = a5(0);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
    }
    else
    {
      *uint64_t v77 = *v78;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100048EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100048EC8(a1, a2, a3, &qword_1000D6070, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_100048EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = v8[9];
  uint64_t v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = (_OWORD *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v13 = *((void *)v12 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    _OWORD *v10 = *v11;
    uint64_t v15 = v12[6];
    size_t v34 = a5;
    __dst = (char *)v10 + v15;
    uint64_t v16 = (char *)v11 + v15;
    uint64_t v17 = sub_1000ADC28();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v20 = v12[7];
    uint64_t v21 = (char *)v10 + v20;
    uint64_t v22 = (char *)v11 + v20;
    uint64_t v23 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    *(void *)((char *)v10 + v12[8]) = *(void *)((char *)v11 + v12[8]);
    *(void *)((char *)v10 + v12[9]) = *(void *)((char *)v11 + v12[9]);
    *((unsigned char *)v10 + v12[10]) = *((unsigned char *)v11 + v12[10]);
    *((unsigned char *)v10 + v12[11]) = *((unsigned char *)v11 + v12[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    a5 = v34;
  }
  *(void *)(a1 + v8[10]) = *(void *)(a2 + v8[10]);
  *(_OWORD *)(a1 + v8[11]) = *(_OWORD *)(a2 + v8[11]);
  *(void *)(a1 + v8[12]) = *(void *)(a2 + v8[12]);
  *(_OWORD *)(a1 + v8[13]) = *(_OWORD *)(a2 + v8[13]);
  *(_OWORD *)(a1 + v8[14]) = *(_OWORD *)(a2 + v8[14]);
  *(unsigned char *)(a1 + v8[15]) = *(unsigned char *)(a2 + v8[15]);
  *(_OWORD *)(a1 + v8[16]) = *(_OWORD *)(a2 + v8[16]);
  *(void *)(a1 + v8[17]) = *(void *)(a2 + v8[17]);
  uint64_t v24 = v8[18];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  *(void *)(a1 + v8[19]) = *(void *)(a2 + v8[19]);
  *(unsigned char *)(a1 + v8[20]) = *(unsigned char *)(a2 + v8[20]);
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = sub_10000693C(a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = a5(0);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000492CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000492EC(a1, a2, a3, &qword_1000D6070, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_1000492EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v10 = v9[9];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      uint64_t v18 = v13[6];
      __dst = (char *)v11 + v18;
      uint64_t v19 = (char *)v12 + v18;
      uint64_t v20 = sub_1000ADC28();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = sub_10000693C(&qword_1000D4E10);
        memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      uint64_t v33 = v13[7];
      size_t v34 = (char *)v11 + v33;
      uint64_t v35 = (char *)v12 + v33;
      uint64_t v36 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(void *)((char *)v11 + v13[8]) = *(void *)((char *)v12 + v13[8]);
      *(void *)((char *)v11 + v13[9]) = *(void *)((char *)v12 + v13[9]);
      *((unsigned char *)v11 + v13[10]) = *((unsigned char *)v12 + v13[10]);
      *((unsigned char *)v11 + v13[11]) = *((unsigned char *)v12 + v13[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_7;
  }
  if (v17)
  {
    sub_100043DC4((uint64_t)v11, type metadata accessor for TTRNewWidgetViewModel.Reminder);
LABEL_7:
    uint64_t v23 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v11, v12, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v24 = (void *)*v11;
  *uint64_t v11 = *v12;

  uint64_t v25 = (void *)v11[1];
  v11[1] = v12[1];

  uint64_t v26 = v13[6];
  uint64_t v27 = (char *)v11 + v26;
  __dsta = (char *)v12 + v26;
  uint64_t v28 = sub_1000ADC28();
  uint64_t v77 = *(void *)(v28 - 8);
  uint64_t v78 = v27;
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
  LODWORD(v27) = v29(v27, 1, v28);
  int v30 = v29(__dsta, 1, v28);
  if (v27)
  {
    if (!v30)
    {
      (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v78, __dsta, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v28);
      goto LABEL_18;
    }
    size_t v31 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v32 = v78;
  }
  else
  {
    if (!v30)
    {
      (*(void (**)(void *, char *, uint64_t))(v77 + 40))(v78, __dsta, v28);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v77 + 8))(v78, v28);
    size_t v31 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v32 = v78;
  }
  memcpy(v32, __dsta, v31);
LABEL_18:
  uint64_t v37 = v13[7];
  uint64_t v38 = (char *)v11 + v37;
  uint64_t v39 = (char *)v12 + v37;
  uint64_t v40 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 40))(v38, v39, v40);
  uint64_t v41 = v13[8];
  uint64_t v42 = *(void **)((char *)v11 + v41);
  *(void *)((char *)v11 + v41) = *(void *)((char *)v12 + v41);

  *(void *)((char *)v11 + v13[9]) = *(void *)((char *)v12 + v13[9]);
  *((unsigned char *)v11 + v13[10]) = *((unsigned char *)v12 + v13[10]);
  *((unsigned char *)v11 + v13[11]) = *((unsigned char *)v12 + v13[11]);
LABEL_19:
  uint64_t v43 = v9[10];
  uint64_t v44 = *(void **)(a1 + v43);
  *(void *)(a1 + v43) = *(void *)(a2 + v43);

  uint64_t v45 = v9[11];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  void *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v9[12];
  id v51 = *(void **)(a1 + v50);
  *(void *)(a1 + v50) = *(void *)(a2 + v50);

  uint64_t v52 = v9[13];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (uint64_t *)(a2 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  *uint64_t v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  uint64_t v57 = v9[14];
  id v58 = (void *)(a1 + v57);
  uint64_t v59 = (uint64_t *)(a2 + v57);
  uint64_t v61 = *v59;
  uint64_t v60 = v59[1];
  *id v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v9[15]) = *(unsigned char *)(a2 + v9[15]);
  uint64_t v62 = v9[16];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = (uint64_t *)(a2 + v62);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  *uint64_t v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v9[17]) = *(void *)(a2 + v9[17]);
  swift_bridgeObjectRelease();
  uint64_t v67 = v9[18];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  uint64_t v70 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
  *(void *)(a1 + v9[19]) = *(void *)(a2 + v9[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v9[20]) = *(unsigned char *)(a2 + v9[20]);
  if (a1 != a2)
  {
    uint64_t v71 = *(int *)(a3 + 20);
    uint64_t v72 = (void *)(a1 + v71);
    uint64_t v73 = (const void *)(a2 + v71);
    sub_100009EF4(a1 + v71, a4);
    uint64_t v74 = sub_10000693C(a4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v75 = a5(0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v75 - 8) + 32))(v72, v73, v75);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000499CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000499E0);
}

uint64_t sub_1000499E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10004BB00(a1, a2, a3, &qword_1000D6068);
}

uint64_t sub_1000499EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100049A00);
}

uint64_t sub_100049A00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10004BC1C(a1, a2, a3, a4, &qword_1000D6068);
}

void sub_100049A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100049A2C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  type metadata accessor for TTRNewWidgetViewModel(319);
  if (v7 <= 0x3F)
  {
    sub_100049B0C(319, a4, a5);
    if (v8 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100049B0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000AE7B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_100049B60(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    unint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v9 = v8[9];
    __dst = (void **)((char *)v4 + v9);
    uint64_t v10 = (void **)((char *)a2 + v9);
    uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
    uint64_t v14 = (int *)v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v14))
    {
      uint64_t v15 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      int v17 = *v10;
      uint64_t v18 = v10[1];
      char *__dst = *v10;
      __dst[1] = v18;
      uint64_t v19 = v14[6];
      uint64_t v63 = (char *)__dst + v19;
      uint64_t v64 = v12;
      uint64_t v68 = v10;
      uint64_t v20 = (char *)v10 + v19;
      uint64_t v21 = sub_1000ADC28();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      id v23 = v17;
      id v24 = v18;
      if (v66(v20, 1, v21))
      {
        uint64_t v25 = sub_10000693C(&qword_1000D4E10);
        memcpy(v63, v20, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v63, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v63, 0, 1, v21);
      }
      uint64_t v26 = v14[7];
      uint64_t v27 = (char *)__dst + v26;
      uint64_t v28 = (char *)v68 + v26;
      uint64_t v29 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v30 = v14[8];
      size_t v31 = *(void **)((char *)v68 + v30);
      *(void **)((char *)__dst + v30) = v31;
      *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v68 + v14[9]);
      *((unsigned char *)__dst + v14[10]) = *((unsigned char *)v68 + v14[10]);
      *((unsigned char *)__dst + v14[11]) = *((unsigned char *)v68 + v14[11]);
      uint64_t v32 = *(void (**)(void **, void, uint64_t, int *))(v64 + 56);
      id v33 = v31;
      v32(__dst, 0, 1, v14);
    }
    uint64_t v34 = v8[10];
    __dsta = *(void **)((char *)a2 + v34);
    *(void *)((char *)v4 + v34) = __dsta;
    uint64_t v35 = v8[11];
    uint64_t v36 = (void *)((char *)v4 + v35);
    uint64_t v37 = (uint64_t *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    void *v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = v8[12];
    uint64_t v40 = *(void **)((char *)a2 + v39);
    *(void *)((char *)v4 + v39) = v40;
    uint64_t v41 = v8[13];
    uint64_t v42 = (void *)((char *)v4 + v41);
    uint64_t v43 = (uint64_t *)((char *)a2 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = v8[14];
    uint64_t v46 = (void *)((char *)v4 + v45);
    uint64_t v47 = (uint64_t *)((char *)a2 + v45);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    *((unsigned char *)v4 + v8[15]) = *((unsigned char *)a2 + v8[15]);
    uint64_t v49 = v8[16];
    uint64_t v50 = (void *)((char *)v4 + v49);
    id v51 = (uint64_t *)((char *)a2 + v49);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    *(void *)((char *)v4 + v8[17]) = *(uint64_t *)((char *)a2 + v8[17]);
    uint64_t v53 = v8[18];
    uint64_t v67 = (uint64_t)a2 + v53;
    uint64_t v69 = (char *)v4 + v53;
    uint64_t v54 = sub_1000ADD48();
    uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
    id v55 = __dsta;
    swift_bridgeObjectRetain();
    id v56 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65(v69, v67, v54);
    *(void *)((char *)v4 + v8[19]) = *(uint64_t *)((char *)a2 + v8[19]);
    *((unsigned char *)v4 + v8[20]) = *((unsigned char *)a2 + v8[20]);
    uint64_t v57 = a3[5];
    id v58 = (void *)((char *)v4 + v57);
    uint64_t v59 = (uint64_t *)((char *)a2 + v57);
    swift_bridgeObjectRetain();
    sub_10000693C(&qword_1000D6070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v60 = sub_1000AE8B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
    }
    else
    {
      *id v58 = *v59;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(void *)((char *)v4 + v61) = *(uint64_t *)((char *)a2 + v61);
    *(void *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_10004A078(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  int v5 = (id *)(a1 + v4[9]);
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v6 - 1) + 48))(v5, 1, v6))
  {

    uint64_t v7 = (char *)v5 + v6[6];
    uint64_t v8 = sub_1000ADC28();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = (char *)v5 + v6[7];
    uint64_t v11 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + v4[18];
  uint64_t v13 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + *(int *)(a2 + 20);
  sub_10000693C(&qword_1000D6070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000AE8B8();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    return v16(v14, v15);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10004A344(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = v7[9];
  __dst = (void **)(a1 + v8);
  uint64_t v9 = (void **)(a2 + v8);
  uint64_t v10 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void **, uint64_t, int *))(v11 + 48);
  uint64_t v13 = (int *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v13))
  {
    uint64_t v14 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v64 = v9;
    uint64_t v66 = v11;
    uint64_t v15 = *v9;
    uint64_t v16 = v9[1];
    char *__dst = *v9;
    __dst[1] = v16;
    uint64_t v17 = v13[6];
    uint64_t v62 = (char *)__dst + v17;
    uint64_t v18 = (char *)v9 + v17;
    uint64_t v19 = sub_1000ADC28();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    id v21 = v15;
    id v22 = v16;
    if (v61(v18, 1, v19))
    {
      uint64_t v23 = sub_10000693C(&qword_1000D4E10);
      memcpy(v62, v18, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v62, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v62, 0, 1, v19);
    }
    uint64_t v24 = v13[7];
    uint64_t v25 = (char *)__dst + v24;
    uint64_t v26 = (char *)v64 + v24;
    uint64_t v27 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = v13[8];
    uint64_t v29 = *(void **)((char *)v64 + v28);
    *(void **)((char *)__dst + v28) = v29;
    *(void **)((char *)__dst + v13[9]) = *(void **)((char *)v64 + v13[9]);
    *((unsigned char *)__dst + v13[10]) = *((unsigned char *)v64 + v13[10]);
    *((unsigned char *)__dst + v13[11]) = *((unsigned char *)v64 + v13[11]);
    uint64_t v30 = *(void (**)(void **, void, uint64_t, int *))(v66 + 56);
    id v31 = v29;
    v30(__dst, 0, 1, v13);
  }
  uint64_t v32 = v7[10];
  __dsta = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = __dsta;
  uint64_t v33 = v7[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = v7[12];
  uint64_t v38 = *(void **)(a2 + v37);
  *(void *)(a1 + v37) = v38;
  uint64_t v39 = v7[13];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = v7[14];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  void *v44 = *v45;
  v44[1] = v46;
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  uint64_t v47 = v7[16];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  uint64_t v51 = v7[18];
  uint64_t v65 = a2 + v51;
  uint64_t v67 = a1 + v51;
  uint64_t v52 = sub_1000ADD48();
  uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16);
  id v53 = __dsta;
  swift_bridgeObjectRetain();
  id v54 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v63(v67, v65, v52);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  uint64_t v55 = a3[5];
  id v56 = (void *)(a1 + v55);
  uint64_t v57 = (void *)(a2 + v55);
  swift_bridgeObjectRetain();
  sub_10000693C(&qword_1000D6070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v58 = sub_1000AE8B8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  }
  else
  {
    void *v56 = *v57;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v59) = *(void *)(a2 + v59);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10004A808(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v6 = v5[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_100043DC4((uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v21 = (void *)*v8;
    id v22 = (void *)*v7;
    void *v7 = *v8;
    id v23 = v21;

    uint64_t v24 = (void *)v7[1];
    uint64_t v25 = (void *)v8[1];
    v7[1] = v25;
    id v26 = v25;

    uint64_t v27 = v9[6];
    uint64_t v28 = (char *)v7 + v27;
    __dsta = (char *)v8 + v27;
    uint64_t v29 = sub_1000ADC28();
    uint64_t v82 = *(void *)(v29 - 8);
    uint64_t v84 = v28;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
    LODWORD(v28) = v30(v28, 1, v29);
    int v31 = v30(__dsta, 1, v29);
    if (v28)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v82 + 16))(v84, __dsta, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v29);
        goto LABEL_18;
      }
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v84;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v82 + 24))(v84, __dsta, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v82 + 8))(v84, v29);
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v84;
    }
    memcpy(v33, __dsta, v32);
LABEL_18:
    uint64_t v42 = v9[7];
    uint64_t v43 = (char *)v7 + v42;
    uint64_t v44 = (char *)v8 + v42;
    uint64_t v45 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
    uint64_t v46 = v9[8];
    uint64_t v47 = *(void **)((char *)v7 + v46);
    uint64_t v48 = *(void **)((char *)v8 + v46);
    *(void *)((char *)v7 + v46) = v48;
    id v49 = v48;

    *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
    *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
    *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v20 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v14 = (void *)*v8;
  void *v7 = *v8;
  char v83 = (void *)v8[1];
  v7[1] = v83;
  uint64_t v15 = v9[6];
  __dst = (char *)v7 + v15;
  uint64_t v81 = (char *)v8 + v15;
  uint64_t v16 = sub_1000ADC28();
  uint64_t v79 = *(void *)(v16 - 8);
  uint64_t v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  id v17 = v14;
  id v18 = v83;
  if (v80(v81, 1, v16))
  {
    uint64_t v19 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v81, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(__dst, v81, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v34 = v9[7];
  uint64_t v35 = (char *)v7 + v34;
  uint64_t v36 = (char *)v8 + v34;
  uint64_t v37 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = v9[8];
  uint64_t v39 = *(void **)((char *)v8 + v38);
  *(void *)((char *)v7 + v38) = v39;
  *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
  *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
  *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
  uint64_t v40 = *(void (**)(void *, void, uint64_t, int *))(v10 + 56);
  id v41 = v39;
  v40(v7, 0, 1, v9);
LABEL_19:
  uint64_t v50 = v5[10];
  uint64_t v51 = *(void **)(a2 + v50);
  uint64_t v52 = *(void **)(a1 + v50);
  *(void *)(a1 + v50) = v51;
  id v53 = v51;

  uint64_t v54 = v5[11];
  uint64_t v55 = (void *)(a1 + v54);
  id v56 = (void *)(a2 + v54);
  *uint64_t v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = v5[12];
  uint64_t v58 = *(void **)(a1 + v57);
  uint64_t v59 = *(void **)(a2 + v57);
  *(void *)(a1 + v57) = v59;
  id v60 = v59;

  uint64_t v61 = v5[13];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  *uint64_t v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = v5[14];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (void *)(a2 + v64);
  *uint64_t v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
  uint64_t v67 = v5[16];
  uint64_t v68 = (void *)(a1 + v67);
  uint64_t v69 = (void *)(a2 + v67);
  *uint64_t v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v70 = v5[18];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  *(void *)(a1 + v5[19]) = *(void *)(a2 + v5[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[20]) = *(unsigned char *)(a2 + v5[20]);
  if (a1 != a2)
  {
    uint64_t v74 = a3[5];
    uint64_t v75 = (void *)(a1 + v74);
    uint64_t v76 = (void *)(a2 + v74);
    sub_100009EF4(a1 + v74, &qword_1000D6070);
    sub_10000693C(&qword_1000D6070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v77 = sub_1000AE8B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
    }
    else
    {
      *uint64_t v75 = *v76;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10004AFC0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[6];
    uint64_t v33 = a3;
    __dst = (char *)v8 + v13;
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = sub_1000ADC28();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v18 = v10[7];
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = (char *)v9 + v18;
    uint64_t v21 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(void *)((char *)v8 + v10[8]) = *(void *)((char *)v9 + v10[8]);
    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    a3 = v33;
  }
  *(void *)(a1 + v6[10]) = *(void *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  *(_OWORD *)(a1 + v6[13]) = *(_OWORD *)(a2 + v6[13]);
  *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  uint64_t v22 = v6[18];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  uint64_t v26 = a3[5];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = sub_10000693C(&qword_1000D6070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = sub_1000AE8B8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  uint64_t v31 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10004B3E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = v7[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v16 = v11[6];
      __dst = (char *)v9 + v16;
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v18 = sub_1000ADC28();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_10000693C(&qword_1000D4E10);
        memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      uint64_t v31 = v11[7];
      size_t v32 = (char *)v9 + v31;
      uint64_t v33 = (char *)v10 + v31;
      uint64_t v34 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      *(void *)((char *)v9 + v11[8]) = *(void *)((char *)v10 + v11[8]);
      *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
      *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
      *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v21 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_13:
    uint64_t v35 = a3;
    goto LABEL_14;
  }
  if (v15)
  {
    sub_100043DC4((uint64_t)v9, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    goto LABEL_7;
  }
  uint64_t v22 = (void *)*v9;
  *uint64_t v9 = *v10;

  uint64_t v23 = (void *)v9[1];
  v9[1] = v10[1];

  uint64_t v24 = v11[6];
  uint64_t v25 = (char *)v9 + v24;
  __dsta = (char *)v10 + v24;
  uint64_t v26 = sub_1000ADC28();
  uint64_t v77 = *(void *)(v26 - 8);
  uint64_t v78 = v25;
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
  LODWORD(v25) = v27(v25, 1, v26);
  int v28 = v27(__dsta, 1, v26);
  if (v25)
  {
    if (!v28)
    {
      (*(void (**)(void *, char *, uint64_t))(v77 + 32))(v78, __dsta, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v26);
      goto LABEL_24;
    }
    size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v30 = v78;
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, char *, uint64_t))(v77 + 40))(v78, __dsta, v26);
      goto LABEL_24;
    }
    (*(void (**)(void *, uint64_t))(v77 + 8))(v78, v26);
    size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v30 = v78;
  }
  memcpy(v30, __dsta, v29);
LABEL_24:
  uint64_t v35 = a3;
  uint64_t v71 = v11[7];
  uint64_t v72 = (char *)v9 + v71;
  uint64_t v73 = (char *)v10 + v71;
  uint64_t v74 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
  uint64_t v75 = v11[8];
  uint64_t v76 = *(void **)((char *)v9 + v75);
  *(void *)((char *)v9 + v75) = *(void *)((char *)v10 + v75);

  *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
  *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
  *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
LABEL_14:
  uint64_t v36 = v7[10];
  uint64_t v37 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = *(void *)(a2 + v36);

  uint64_t v38 = v7[11];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *uint64_t v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = v7[12];
  uint64_t v44 = *(void **)(a1 + v43);
  *(void *)(a1 + v43) = *(void *)(a2 + v43);

  uint64_t v45 = v7[13];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  void *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v7[14];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  uint64_t v55 = v7[16];
  id v56 = (void *)(a1 + v55);
  uint64_t v57 = (uint64_t *)(a2 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  void *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  swift_bridgeObjectRelease();
  uint64_t v60 = v7[18];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  uint64_t v63 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 40))(v61, v62, v63);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  if (a1 != a2)
  {
    uint64_t v64 = v35[5];
    uint64_t v65 = (void *)(a1 + v64);
    uint64_t v66 = (const void *)(a2 + v64);
    sub_100009EF4(a1 + v64, &qword_1000D6070);
    uint64_t v67 = sub_10000693C(&qword_1000D6070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v68 = sub_1000AE8B8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v66, v68);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
  }
  uint64_t v69 = v35[7];
  *(void *)(a1 + v35[6]) = *(void *)(a2 + v35[6]);
  *(void *)(a1 + v69) = *(void *)(a2 + v69);
  *(void *)(a1 + v35[8]) = *(void *)(a2 + v35[8]);
  return a1;
}

uint64_t sub_10004BAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004BAF4);
}

uint64_t sub_10004BAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10004BB00(a1, a2, a3, &qword_1000D6068);
}

uint64_t sub_10004BB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v10(a1, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_10000693C(a4);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 20);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_10004BBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004BC10);
}

uint64_t sub_10004BC10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10004BC1C(a1, a2, a3, a4, &qword_1000D6068);
}

uint64_t sub_10004BC1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    return v12(a1, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_10000693C(a5);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 20);
    return v15(v17, a2, a2, v16);
  }
}

void sub_10004BD30()
{
  type metadata accessor for TTRNewWidgetViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100049B0C(319, (unint64_t *)&unk_1000D60E8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10004BE24(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v9 = v8[9];
    __dst = (void **)((char *)v4 + v9);
    uint64_t v10 = (void **)((char *)a2 + v9);
    uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
    uint64_t v14 = (int *)v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v14))
    {
      uint64_t v15 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = *v10;
      uint64_t v18 = v10[1];
      char *__dst = *v10;
      __dst[1] = v18;
      uint64_t v19 = v14[6];
      uint64_t v89 = (char *)__dst + v19;
      uint64_t v90 = v12;
      uint64_t v94 = v10;
      uint64_t v20 = (char *)v10 + v19;
      uint64_t v21 = sub_1000ADC28();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      id v23 = v17;
      id v24 = v18;
      if (v92(v20, 1, v21))
      {
        uint64_t v25 = sub_10000693C(&qword_1000D4E10);
        memcpy(v89, v20, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v89, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v89, 0, 1, v21);
      }
      uint64_t v26 = v14[7];
      uint64_t v27 = (char *)__dst + v26;
      int v28 = (char *)v94 + v26;
      uint64_t v29 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v30 = v14[8];
      uint64_t v31 = *(void **)((char *)v94 + v30);
      *(void **)((char *)__dst + v30) = v31;
      *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v94 + v14[9]);
      *((unsigned char *)__dst + v14[10]) = *((unsigned char *)v94 + v14[10]);
      *((unsigned char *)__dst + v14[11]) = *((unsigned char *)v94 + v14[11]);
      size_t v32 = *(void (**)(void **, void, uint64_t, int *))(v90 + 56);
      id v33 = v31;
      v32(__dst, 0, 1, v14);
    }
    uint64_t v34 = v8[10];
    __dsta = *(void **)((char *)a2 + v34);
    *(void *)((char *)v4 + v34) = __dsta;
    uint64_t v35 = v8[11];
    uint64_t v36 = (void *)((char *)v4 + v35);
    uint64_t v37 = (uint64_t *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    void *v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = v8[12];
    uint64_t v40 = *(void **)((char *)a2 + v39);
    *(void *)((char *)v4 + v39) = v40;
    uint64_t v41 = v8[13];
    uint64_t v42 = (void *)((char *)v4 + v41);
    uint64_t v43 = (uint64_t *)((char *)a2 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = v8[14];
    uint64_t v46 = (void *)((char *)v4 + v45);
    uint64_t v47 = (uint64_t *)((char *)a2 + v45);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    *((unsigned char *)v4 + v8[15]) = *((unsigned char *)a2 + v8[15]);
    uint64_t v49 = v8[16];
    uint64_t v50 = (void *)((char *)v4 + v49);
    uint64_t v51 = (uint64_t *)((char *)a2 + v49);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    *(void *)((char *)v4 + v8[17]) = *(uint64_t *)((char *)a2 + v8[17]);
    uint64_t v53 = v8[18];
    uint64_t v93 = (uint64_t)a2 + v53;
    uint64_t v95 = (char *)v4 + v53;
    uint64_t v54 = sub_1000ADD48();
    uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
    id v55 = __dsta;
    swift_bridgeObjectRetain();
    id v56 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v91(v95, v93, v54);
    *(void *)((char *)v4 + v8[19]) = *(uint64_t *)((char *)a2 + v8[19]);
    *((unsigned char *)v4 + v8[20]) = *((unsigned char *)a2 + v8[20]);
    uint64_t v57 = a3[5];
    uint64_t v58 = (char *)v4 + v57;
    uint64_t v59 = (uint64_t)a2 + v57;
    uint64_t v60 = *(void *)v59;
    char v61 = *(unsigned char *)(v59 + 8);
    swift_bridgeObjectRetain();
    sub_10004C4D4(v60, v61);
    *(void *)uint64_t v58 = v60;
    v58[8] = v61;
    uint64_t v62 = a3[6];
    uint64_t v63 = (void *)((char *)v4 + v62);
    uint64_t v64 = (uint64_t *)((char *)a2 + v62);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v65 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
    }
    else
    {
      *uint64_t v63 = *v64;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = a3[7];
    uint64_t v67 = (void *)((char *)v4 + v66);
    uint64_t v68 = (uint64_t *)((char *)a2 + v66);
    sub_10000693C(&qword_1000D6070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v69 = sub_1000AE8B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
    }
    else
    {
      *uint64_t v67 = *v68;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v70 = a3[8];
    uint64_t v71 = a3[9];
    uint64_t v72 = (char *)v4 + v70;
    uint64_t v73 = (uint64_t *)((char *)a2 + v70);
    uint64_t v74 = *v73;
    LOBYTE(v73) = *((unsigned char *)v73 + 8);
    *(void *)uint64_t v72 = v74;
    v72[8] = (char)v73;
    uint64_t v75 = (char *)v4 + v71;
    uint64_t v76 = *(uint64_t *)((char *)a2 + v71);
    char v77 = *((unsigned char *)a2 + v71 + 8);
    swift_retain();
    sub_10004C4D4(v76, v77);
    *(void *)uint64_t v75 = v76;
    v75[8] = v77;
    uint64_t v78 = a3[10];
    uint64_t v79 = (char *)v4 + v78;
    uint64_t v80 = (uint64_t)a2 + v78;
    uint64_t v81 = *(void *)v80;
    char v82 = *(unsigned char *)(v80 + 8);
    sub_10004C4D4(*(void *)v80, v82);
    *(void *)uint64_t v79 = v81;
    v79[8] = v82;
    uint64_t v83 = a3[11];
    uint64_t v84 = (void *)((char *)v4 + v83);
    uint64_t v85 = (uint64_t *)((char *)a2 + v83);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v86 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
    }
    else
    {
      *uint64_t v84 = *v85;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v87 = a3[13];
    *(void *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(void *)((char *)v4 + v87) = *(uint64_t *)((char *)a2 + v87);
  }
  return v4;
}

uint64_t sub_10004C4D4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10004C4E0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  int v5 = (id *)(a1 + v4[9]);
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v6 - 1) + 48))(v5, 1, v6))
  {

    uint64_t v7 = (char *)v5 + v6[6];
    uint64_t v8 = sub_1000ADC28();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = (char *)v5 + v6[7];
    uint64_t v11 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + v4[18];
  uint64_t v13 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  sub_10004C8C4(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v14 = a1 + a2[6];
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000AF268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  uint64_t v16 = a1 + a2[7];
  sub_10000693C(&qword_1000D6070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1000AE8B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_10004C8C4(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_10004C8C4(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  uint64_t v18 = a1 + a2[11];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1000AF268();
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
    return v20(v18, v19);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10004C8C4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10004C8D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = v7[9];
  __dst = (void **)(a1 + v8);
  uint64_t v9 = (void **)(a2 + v8);
  uint64_t v10 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void **, uint64_t, int *))(v11 + 48);
  uint64_t v13 = (int *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v13))
  {
    uint64_t v14 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v90 = v9;
    uint64_t v92 = v11;
    uint64_t v15 = *v9;
    uint64_t v16 = v9[1];
    char *__dst = *v9;
    __dst[1] = v16;
    uint64_t v17 = v13[6];
    uint64_t v88 = (char *)__dst + v17;
    uint64_t v18 = (char *)v9 + v17;
    uint64_t v19 = sub_1000ADC28();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    id v21 = v15;
    id v22 = v16;
    if (v87(v18, 1, v19))
    {
      uint64_t v23 = sub_10000693C(&qword_1000D4E10);
      memcpy(v88, v18, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v88, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v88, 0, 1, v19);
    }
    uint64_t v24 = v13[7];
    uint64_t v25 = (char *)__dst + v24;
    uint64_t v26 = (char *)v90 + v24;
    uint64_t v27 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = v13[8];
    uint64_t v29 = *(void **)((char *)v90 + v28);
    *(void **)((char *)__dst + v28) = v29;
    *(void **)((char *)__dst + v13[9]) = *(void **)((char *)v90 + v13[9]);
    *((unsigned char *)__dst + v13[10]) = *((unsigned char *)v90 + v13[10]);
    *((unsigned char *)__dst + v13[11]) = *((unsigned char *)v90 + v13[11]);
    uint64_t v30 = *(void (**)(void **, void, uint64_t, int *))(v92 + 56);
    id v31 = v29;
    v30(__dst, 0, 1, v13);
  }
  uint64_t v32 = v7[10];
  __dsta = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = __dsta;
  uint64_t v33 = v7[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = v7[12];
  uint64_t v38 = *(void **)(a2 + v37);
  *(void *)(a1 + v37) = v38;
  uint64_t v39 = v7[13];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = v7[14];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  void *v44 = *v45;
  v44[1] = v46;
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  uint64_t v47 = v7[16];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  uint64_t v51 = v7[18];
  uint64_t v91 = a2 + v51;
  uint64_t v93 = a1 + v51;
  uint64_t v52 = sub_1000ADD48();
  uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16);
  id v53 = __dsta;
  swift_bridgeObjectRetain();
  id v54 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v89(v93, v91, v52);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  uint64_t v55 = a3[5];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = *(void *)v57;
  char v59 = *(unsigned char *)(v57 + 8);
  swift_bridgeObjectRetain();
  sub_10004C4D4(v58, v59);
  *(void *)uint64_t v56 = v58;
  *(unsigned char *)(v56 + 8) = v59;
  uint64_t v60 = a3[6];
  char v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v63 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
  }
  else
  {
    *char v61 = *v62;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = a3[7];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (void *)(a2 + v64);
  sub_10000693C(&qword_1000D6070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v67 = sub_1000AE8B8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
  }
  else
  {
    *uint64_t v65 = *v66;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v68 = a3[8];
  uint64_t v69 = a3[9];
  uint64_t v70 = a1 + v68;
  uint64_t v71 = (uint64_t *)(a2 + v68);
  uint64_t v72 = *v71;
  LOBYTE(v71) = *((unsigned char *)v71 + 8);
  *(void *)uint64_t v70 = v72;
  *(unsigned char *)(v70 + 8) = (_BYTE)v71;
  uint64_t v73 = a1 + v69;
  uint64_t v74 = *(void *)(a2 + v69);
  char v75 = *(unsigned char *)(a2 + v69 + 8);
  swift_retain();
  sub_10004C4D4(v74, v75);
  *(void *)uint64_t v73 = v74;
  *(unsigned char *)(v73 + 8) = v75;
  uint64_t v76 = a3[10];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = a2 + v76;
  uint64_t v79 = *(void *)v78;
  char v80 = *(unsigned char *)(v78 + 8);
  sub_10004C4D4(*(void *)v78, v80);
  *(void *)uint64_t v77 = v79;
  *(unsigned char *)(v77 + 8) = v80;
  uint64_t v81 = a3[11];
  char v82 = (void *)(a1 + v81);
  uint64_t v83 = (void *)(a2 + v81);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v84 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
  }
  else
  {
    void *v82 = *v83;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v85 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v85) = *(void *)(a2 + v85);
  return a1;
}

uint64_t sub_10004CF2C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v6 = v5[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_100043DC4((uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v21 = (void *)*v8;
    id v22 = (void *)*v7;
    void *v7 = *v8;
    id v23 = v21;

    uint64_t v24 = (void *)v7[1];
    uint64_t v25 = (void *)v8[1];
    v7[1] = v25;
    id v26 = v25;

    uint64_t v27 = v9[6];
    uint64_t v28 = (char *)v7 + v27;
    __dsta = (char *)v8 + v27;
    uint64_t v29 = sub_1000ADC28();
    uint64_t v114 = *(void *)(v29 - 8);
    uint64_t v116 = v28;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48);
    LODWORD(v28) = v30(v28, 1, v29);
    int v31 = v30(__dsta, 1, v29);
    if (v28)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v114 + 16))(v116, __dsta, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v116, 0, 1, v29);
        goto LABEL_18;
      }
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v116;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v114 + 24))(v116, __dsta, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v114 + 8))(v116, v29);
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v116;
    }
    memcpy(v33, __dsta, v32);
LABEL_18:
    uint64_t v42 = v9[7];
    uint64_t v43 = (char *)v7 + v42;
    uint64_t v44 = (char *)v8 + v42;
    uint64_t v45 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
    uint64_t v46 = v9[8];
    uint64_t v47 = *(void **)((char *)v7 + v46);
    uint64_t v48 = *(void **)((char *)v8 + v46);
    *(void *)((char *)v7 + v46) = v48;
    id v49 = v48;

    *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
    *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
    *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v20 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v14 = (void *)*v8;
  void *v7 = *v8;
  uint64_t v115 = (void *)v8[1];
  v7[1] = v115;
  uint64_t v15 = v9[6];
  __dst = (char *)v7 + v15;
  uint64_t v113 = (char *)v8 + v15;
  uint64_t v16 = sub_1000ADC28();
  uint64_t v111 = *(void *)(v16 - 8);
  char v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48);
  id v17 = v14;
  id v18 = v115;
  if (v112(v113, 1, v16))
  {
    uint64_t v19 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v113, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(__dst, v113, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v34 = v9[7];
  uint64_t v35 = (char *)v7 + v34;
  uint64_t v36 = (char *)v8 + v34;
  uint64_t v37 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = v9[8];
  uint64_t v39 = *(void **)((char *)v8 + v38);
  *(void *)((char *)v7 + v38) = v39;
  *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
  *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
  *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
  uint64_t v40 = *(void (**)(void *, void, uint64_t, int *))(v10 + 56);
  id v41 = v39;
  v40(v7, 0, 1, v9);
LABEL_19:
  uint64_t v50 = v5[10];
  uint64_t v51 = *(void **)(a2 + v50);
  uint64_t v52 = *(void **)(a1 + v50);
  *(void *)(a1 + v50) = v51;
  id v53 = v51;

  uint64_t v54 = v5[11];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  *uint64_t v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = v5[12];
  uint64_t v58 = *(void **)(a1 + v57);
  char v59 = *(void **)(a2 + v57);
  *(void *)(a1 + v57) = v59;
  id v60 = v59;

  uint64_t v61 = v5[13];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  *uint64_t v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = v5[14];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (void *)(a2 + v64);
  *uint64_t v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
  uint64_t v67 = v5[16];
  uint64_t v68 = (void *)(a1 + v67);
  uint64_t v69 = (void *)(a2 + v67);
  *uint64_t v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v70 = v5[18];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  *(void *)(a1 + v5[19]) = *(void *)(a2 + v5[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[20]) = *(unsigned char *)(a2 + v5[20]);
  uint64_t v74 = a3[5];
  uint64_t v75 = a1 + v74;
  uint64_t v76 = a2 + v74;
  uint64_t v77 = *(void *)v76;
  LOBYTE(v71) = *(unsigned char *)(v76 + 8);
  sub_10004C4D4(*(void *)v76, v71);
  uint64_t v78 = *(void *)v75;
  char v79 = *(unsigned char *)(v75 + 8);
  *(void *)uint64_t v75 = v77;
  *(unsigned char *)(v75 + 8) = v71;
  sub_10004C8C4(v78, v79);
  if (a1 != a2)
  {
    uint64_t v80 = a3[6];
    uint64_t v81 = (void *)(a1 + v80);
    char v82 = (void *)(a2 + v80);
    sub_100009EF4(a1 + v80, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v83 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
    }
    else
    {
      *uint64_t v81 = *v82;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v84 = a3[7];
    uint64_t v85 = (void *)(a1 + v84);
    uint64_t v86 = (void *)(a2 + v84);
    sub_100009EF4(a1 + v84, &qword_1000D6070);
    sub_10000693C(&qword_1000D6070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v87 = sub_1000AE8B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    }
    else
    {
      *uint64_t v85 = *v86;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v88 = a3[8];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = (uint64_t *)(a2 + v88);
  uint64_t v91 = *v90;
  LOBYTE(v90) = *((unsigned char *)v90 + 8);
  *(void *)uint64_t v89 = v91;
  *(unsigned char *)(v89 + 8) = (_BYTE)v90;
  swift_retain();
  swift_release();
  uint64_t v92 = a3[9];
  uint64_t v93 = a1 + v92;
  uint64_t v94 = a2 + v92;
  uint64_t v95 = *(void *)v94;
  char v96 = *(unsigned char *)(v94 + 8);
  sub_10004C4D4(*(void *)v94, v96);
  uint64_t v97 = *(void *)v93;
  char v98 = *(unsigned char *)(v93 + 8);
  *(void *)uint64_t v93 = v95;
  *(unsigned char *)(v93 + 8) = v96;
  sub_10004C8C4(v97, v98);
  uint64_t v99 = a3[10];
  uint64_t v100 = a1 + v99;
  uint64_t v101 = a2 + v99;
  uint64_t v102 = *(void *)v101;
  char v103 = *(unsigned char *)(v101 + 8);
  sub_10004C4D4(*(void *)v101, v103);
  uint64_t v104 = *(void *)v100;
  char v105 = *(unsigned char *)(v100 + 8);
  *(void *)uint64_t v100 = v102;
  *(unsigned char *)(v100 + 8) = v103;
  sub_10004C8C4(v104, v105);
  if (a1 != a2)
  {
    uint64_t v106 = a3[11];
    uint64_t v107 = (void *)(a1 + v106);
    uint64_t v108 = (void *)(a2 + v106);
    sub_100009EF4(a1 + v106, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v109 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
    }
    else
    {
      *uint64_t v107 = *v108;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_10004D8E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v54 = v11;
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[6];
    uint64_t v55 = (char *)v8 + v13;
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = sub_1000ADC28();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10000693C(&qword_1000D4E10);
      memcpy(v55, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v55, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v55, 0, 1, v15);
    }
    uint64_t v18 = v10[7];
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = (char *)v9 + v18;
    uint64_t v21 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(void *)((char *)v8 + v10[8]) = *(void *)((char *)v9 + v10[8]);
    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v54 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + v6[10]) = *(void *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  *(_OWORD *)(a1 + v6[13]) = *(_OWORD *)(a2 + v6[13]);
  *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  uint64_t v22 = v6[18];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  uint64_t v26 = a3[5];
  uint64_t v27 = a3[6];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  uint64_t v30 = (void *)(a1 + v27);
  int v31 = (const void *)(a2 + v27);
  uint64_t v32 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = sub_1000AF268();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  uint64_t v34 = a3[7];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = sub_10000693C(&qword_1000D6070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = sub_1000AE8B8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  uint64_t v39 = a3[8];
  uint64_t v40 = a3[9];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = a1 + v40;
  uint64_t v44 = a2 + v40;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  uint64_t v45 = a3[10];
  uint64_t v46 = a3[11];
  uint64_t v47 = a1 + v45;
  uint64_t v48 = a2 + v45;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  id v49 = (void *)(a1 + v46);
  uint64_t v50 = (const void *)(a2 + v46);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v51 = sub_1000AF268();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v49, v50, *(void *)(*(void *)(v32 - 8) + 64));
  }
  uint64_t v52 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v52) = *(void *)(a2 + v52);
  return a1;
}

uint64_t sub_10004DE98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = v7[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v16 = v11[6];
      __dst = (char *)v9 + v16;
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v18 = sub_1000ADC28();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_10000693C(&qword_1000D4E10);
        memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      uint64_t v31 = v11[7];
      uint64_t v32 = (char *)v9 + v31;
      uint64_t v33 = (char *)v10 + v31;
      uint64_t v34 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      *(void *)((char *)v9 + v11[8]) = *(void *)((char *)v10 + v11[8]);
      *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
      *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
      *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v21 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_13:
    uint64_t v35 = a3;
    goto LABEL_14;
  }
  if (v15)
  {
    sub_100043DC4((uint64_t)v9, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    goto LABEL_7;
  }
  uint64_t v22 = (void *)*v9;
  *uint64_t v9 = *v10;

  uint64_t v23 = (void *)v9[1];
  v9[1] = v10[1];

  uint64_t v24 = v11[6];
  uint64_t v25 = (char *)v9 + v24;
  __dsta = (char *)v10 + v24;
  uint64_t v26 = sub_1000ADC28();
  uint64_t v109 = *(void *)(v26 - 8);
  char v110 = v25;
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 48);
  LODWORD(v25) = v27(v25, 1, v26);
  int v28 = v27(__dsta, 1, v26);
  if (v25)
  {
    if (!v28)
    {
      (*(void (**)(void *, char *, uint64_t))(v109 + 32))(v110, __dsta, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56))(v110, 0, 1, v26);
      goto LABEL_31;
    }
    size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v30 = v110;
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, char *, uint64_t))(v109 + 40))(v110, __dsta, v26);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v109 + 8))(v110, v26);
    size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v30 = v110;
  }
  memcpy(v30, __dsta, v29);
LABEL_31:
  uint64_t v35 = a3;
  uint64_t v103 = v11[7];
  uint64_t v104 = (char *)v9 + v103;
  char v105 = (char *)v10 + v103;
  uint64_t v106 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 40))(v104, v105, v106);
  uint64_t v107 = v11[8];
  uint64_t v108 = *(void **)((char *)v9 + v107);
  *(void *)((char *)v9 + v107) = *(void *)((char *)v10 + v107);

  *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
  *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
  *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
LABEL_14:
  uint64_t v36 = v7[10];
  uint64_t v37 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = *(void *)(a2 + v36);

  uint64_t v38 = v7[11];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *uint64_t v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = v7[12];
  uint64_t v44 = *(void **)(a1 + v43);
  *(void *)(a1 + v43) = *(void *)(a2 + v43);

  uint64_t v45 = v7[13];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  void *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v7[14];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  uint64_t v55 = v7[16];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (uint64_t *)(a2 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  void *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  swift_bridgeObjectRelease();
  uint64_t v60 = v7[18];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  uint64_t v63 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 40))(v61, v62, v63);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  uint64_t v64 = v35[5];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = (uint64_t *)(a2 + v64);
  uint64_t v67 = *v66;
  LOBYTE(v66) = *((unsigned char *)v66 + 8);
  uint64_t v68 = *(void *)v65;
  char v69 = *(unsigned char *)(v65 + 8);
  *(void *)uint64_t v65 = v67;
  *(unsigned char *)(v65 + 8) = (_BYTE)v66;
  sub_10004C8C4(v68, v69);
  if (a1 != a2)
  {
    uint64_t v70 = v35[6];
    uint64_t v71 = (void *)(a1 + v70);
    uint64_t v72 = (const void *)(a2 + v70);
    sub_100009EF4(a1 + v70, &qword_1000D5E30);
    uint64_t v73 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v74 = sub_1000AF268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v74 - 8) + 32))(v71, v72, v74);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    uint64_t v75 = v35[7];
    uint64_t v76 = (void *)(a1 + v75);
    uint64_t v77 = (const void *)(a2 + v75);
    sub_100009EF4(a1 + v75, &qword_1000D6070);
    uint64_t v78 = sub_10000693C(&qword_1000D6070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v79 = sub_1000AE8B8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v79 - 8) + 32))(v76, v77, v79);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
  }
  uint64_t v80 = v35[8];
  uint64_t v81 = a1 + v80;
  char v82 = (uint64_t *)(a2 + v80);
  uint64_t v83 = *v82;
  LOBYTE(v82) = *((unsigned char *)v82 + 8);
  *(void *)uint64_t v81 = v83;
  *(unsigned char *)(v81 + 8) = (_BYTE)v82;
  swift_release();
  uint64_t v84 = v35[9];
  uint64_t v85 = a1 + v84;
  uint64_t v86 = (uint64_t *)(a2 + v84);
  uint64_t v87 = *v86;
  LOBYTE(v86) = *((unsigned char *)v86 + 8);
  uint64_t v88 = *(void *)v85;
  char v89 = *(unsigned char *)(v85 + 8);
  *(void *)uint64_t v85 = v87;
  *(unsigned char *)(v85 + 8) = (_BYTE)v86;
  sub_10004C8C4(v88, v89);
  uint64_t v90 = v35[10];
  uint64_t v91 = a1 + v90;
  uint64_t v92 = (uint64_t *)(a2 + v90);
  uint64_t v93 = *v92;
  LOBYTE(v92) = *((unsigned char *)v92 + 8);
  uint64_t v94 = *(void *)v91;
  char v95 = *(unsigned char *)(v91 + 8);
  *(void *)uint64_t v91 = v93;
  *(unsigned char *)(v91 + 8) = (_BYTE)v92;
  sub_10004C8C4(v94, v95);
  if (a1 != a2)
  {
    uint64_t v96 = v35[11];
    uint64_t v97 = (void *)(a1 + v96);
    char v98 = (const void *)(a2 + v96);
    sub_100009EF4(a1 + v96, &qword_1000D5E30);
    uint64_t v99 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v100 = sub_1000AF268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v100 - 8) + 32))(v97, v98, v100);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
    }
  }
  uint64_t v101 = v35[13];
  *(void *)(a1 + v35[12]) = *(void *)(a2 + v35[12]);
  *(void *)(a1 + v101) = *(void *)(a2 + v101);
  return a1;
}

uint64_t sub_10004E790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004E7A4);
}

uint64_t sub_10004E7A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  if (a2 == 254)
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v11 > 1) {
      return (v11 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v13 = sub_10000693C(&qword_1000D5E38);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[6];
LABEL_11:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_12;
  }
  uint64_t v16 = sub_10000693C(&qword_1000D6068);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[7];
    goto LABEL_11;
  }
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 48);
  uint64_t v19 = IsVibrantText;
  uint64_t v20 = a1 + a3[11];

  return v18(v20, a2, v19);
}

uint64_t sub_10004E974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004E988);
}

uint64_t sub_10004E988(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[5] + 8) = -(char)a2;
    return result;
  }
  uint64_t v13 = sub_10000693C(&qword_1000D5E38);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[6];
LABEL_9:
    uint64_t v12 = a1 + v15;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_10000693C(&qword_1000D6068);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 56);
  uint64_t v19 = IsVibrantText;
  uint64_t v20 = a1 + a4[11];

  return v18(v20, a2, a2, v19);
}

void sub_10004EB5C()
{
  type metadata accessor for TTRNewWidgetViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      sub_100049B0C(319, (unint64_t *)&unk_1000D60E8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_10004ECC4()
{
  unint64_t result = qword_1000D6268;
  if (!qword_1000D6268)
  {
    sub_100006F98(&qword_1000D5FB8);
    sub_10004ED64();
    sub_100009F50(&qword_1000D6288, &qword_1000D6290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6268);
  }
  return result;
}

unint64_t sub_10004ED64()
{
  unint64_t result = qword_1000D6270;
  if (!qword_1000D6270)
  {
    sub_100006F98(&qword_1000D5FB0);
    sub_10004EE04();
    sub_100009F50(&qword_1000D6288, &qword_1000D6290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6270);
  }
  return result;
}

unint64_t sub_10004EE04()
{
  unint64_t result = qword_1000D6278;
  if (!qword_1000D6278)
  {
    sub_100006F98(&qword_1000D5FA8);
    sub_10004EEA4();
    sub_100009F50(&qword_1000D5730, &qword_1000D5738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6278);
  }
  return result;
}

unint64_t sub_10004EEA4()
{
  unint64_t result = qword_1000D6280;
  if (!qword_1000D6280)
  {
    sub_100006F98(&qword_1000D5FA0);
    sub_100006F98(&qword_1000D5F90);
    sub_100006F98(&qword_1000D5FC0);
    sub_10004726C(&qword_1000D5FC8, &qword_1000D5F90, (void (*)(void))sub_1000472D8);
    sub_1000474C0();
    swift_getOpaqueTypeConformance2();
    sub_100009F50(&qword_1000D6288, &qword_1000D6290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6280);
  }
  return result;
}

uint64_t sub_10004EFD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004EFF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004F00C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004F028(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004F0A4()
{
  unint64_t result = qword_1000D62F8;
  if (!qword_1000D62F8)
  {
    sub_100006F98(&qword_1000D62B0);
    sub_100006F98(&qword_1000D62A0);
    sub_100006F98(&qword_1000D6298);
    sub_100009F50(&qword_1000D62E0, &qword_1000D62A0);
    sub_100009F50(&qword_1000D62E8, &qword_1000D6298);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D62F8);
  }
  return result;
}

uint64_t sub_10004F1C8@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_10004F21C, a1);
}

uint64_t sub_10004F1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_10004F21C);
}

unint64_t sub_10004F21C()
{
  unint64_t result = qword_1000D6300;
  if (!qword_1000D6300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6300);
  }
  return result;
}

uint64_t sub_10004F270@<X0>(uint64_t a1@<X8>)
{
  return sub_10003849C(*(void **)(v1 + 16), a1);
}

unint64_t sub_10004F278()
{
  unint64_t result = qword_1000D6328;
  if (!qword_1000D6328)
  {
    sub_100006F98(&qword_1000D6320);
    sub_100009F50(&qword_1000D6330, &qword_1000D6338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6328);
  }
  return result;
}

unint64_t sub_10004F318()
{
  unint64_t result = qword_1000D6348;
  if (!qword_1000D6348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6348);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D6660);
}

unint64_t sub_10004F38C()
{
  unint64_t result = qword_1000D6378;
  if (!qword_1000D6378)
  {
    sub_100006F98(&qword_1000D6370);
    sub_100043D7C(&qword_1000D6380, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView);
    sub_100009F50(&qword_1000D6388, &qword_1000D6390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6378);
  }
  return result;
}

unint64_t sub_10004F45C()
{
  unint64_t result = qword_1000D6398;
  if (!qword_1000D6398)
  {
    sub_100006F98(&qword_1000D6360);
    sub_100009F50(&qword_1000D63A0, &qword_1000D63A8);
    sub_10004F4FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6398);
  }
  return result;
}

unint64_t sub_10004F4FC()
{
  unint64_t result = qword_1000D63B0;
  if (!qword_1000D63B0)
  {
    sub_100006F98(&qword_1000D63B8);
    sub_100009F50(&qword_1000D63C0, &qword_1000D63C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D63B0);
  }
  return result;
}

uint64_t sub_10004F594@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_10004F5E8, a1);
}

uint64_t sub_10004F5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_10004F5E8);
}

unint64_t sub_10004F5E8()
{
  unint64_t result = qword_1000D63D0;
  if (!qword_1000D63D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D63D0);
  }
  return result;
}

uint64_t sub_10004F63C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100024074();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10004F668()
{
  uint64_t v1 = (int *)type metadata accessor for TTRAnyListWidget.InteractiveSmall(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = (id *)(v0 + v3 + v6[9]);
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {
    uint64_t v23 = v4;
    uint64_t v24 = v0;

    uint64_t v9 = (char *)v7 + v8[6];
    uint64_t v10 = sub_1000ADC28();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = (char *)v7 + v8[7];
    uint64_t v13 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

    uint64_t v4 = v23;
    uint64_t v0 = v24;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v5 + v6[18];
  uint64_t v15 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  sub_10004C8C4(*(void *)(v5 + v1[5]), *(unsigned char *)(v5 + v1[5] + 8));
  uint64_t v16 = v5 + v1[6];
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1000AF268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }
  uint64_t v18 = v5 + v1[7];
  sub_10000693C(&qword_1000D6070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1000AE8B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_10004C8C4(*(void *)(v5 + v1[9]), *(unsigned char *)(v5 + v1[9] + 8));
  sub_10004C8C4(*(void *)(v5 + v1[10]), *(unsigned char *)(v5 + v1[10] + 8));
  uint64_t v20 = v5 + v1[11];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_1000AF268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_10004FAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for TTRAnyListWidget.InteractiveSmall(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1000396D8(a1, a2, v3 + v8, v9, a3);
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveReminderView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D65B8);
}

uint64_t sub_10004FB90@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_10004FD34, a1);
}

uint64_t sub_10004FBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_10004FD34);
}

uint64_t sub_10004FBE4@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_10004FCE0, a1);
}

uint64_t sub_10004FC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_10004FCE0);
}

uint64_t sub_10004FC38(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
  {
    sub_10004C4D4(a2, a3 & 1);
    return swift_retain();
  }
  return result;
}

uint64_t sub_10004FC8C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
  {
    sub_10004C8C4(a2, a3 & 1);
    return swift_release();
  }
  return result;
}

unint64_t sub_10004FCE0()
{
  unint64_t result = qword_1000D63F8;
  if (!qword_1000D63F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D63F8);
  }
  return result;
}

unint64_t sub_10004FD34()
{
  unint64_t result = qword_1000D6400;
  if (!qword_1000D6400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6400);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.TitleTextView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D66F8);
}

uint64_t sub_10004FDB0@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_10004FE04, a1);
}

uint64_t sub_10004FDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_10004FE04);
}

unint64_t sub_10004FE04()
{
  unint64_t result = qword_1000D6428;
  if (!qword_1000D6428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6428);
  }
  return result;
}

uint64_t sub_10004FE58()
{
  uint64_t v1 = type metadata accessor for TTRAnyListWidget.InteractiveMedium(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = (id *)(v0 + v3 + v6[9]);
  unint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {
    uint64_t v19 = v4;
    uint64_t v20 = v0;

    uint64_t v9 = (char *)v7 + v8[6];
    uint64_t v10 = sub_1000ADC28();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = (char *)v7 + v8[7];
    uint64_t v13 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

    uint64_t v4 = v19;
    uint64_t v0 = v20;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v5 + v6[18];
  uint64_t v15 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = v5 + *(int *)(v1 + 20);
  sub_10000693C(&qword_1000D6070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1000AE8B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100050184@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for TTRAnyListWidget.InteractiveMedium(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100039D50(a1, v6, a2);
}

uint64_t type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D6828);
}

uint64_t sub_100050224@<X0>(uint64_t a1@<X8>)
{
  return sub_10003A714(*(void *)(v1 + 16), a1);
}

unint64_t sub_10005022C()
{
  unint64_t result = qword_1000D6490;
  if (!qword_1000D6490)
  {
    sub_100006F98(&qword_1000D6498);
    sub_100043D7C(&qword_1000D64A0, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.MediumHeaderView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6490);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.MediumHeaderView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D6798);
}

unint64_t sub_1000502F8()
{
  unint64_t result = qword_1000D64B8;
  if (!qword_1000D64B8)
  {
    sub_100006F98(&qword_1000D6450);
    sub_100043D7C(&qword_1000D64C0, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D64B8);
  }
  return result;
}

unint64_t sub_1000503A4()
{
  unint64_t result = qword_1000D64F0;
  if (!qword_1000D64F0)
  {
    sub_100006F98(&qword_1000D64D8);
    sub_100009F50(&qword_1000D64F8, &qword_1000D64D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D64F0);
  }
  return result;
}

uint64_t sub_100050444()
{
  return sub_10003B7B8(*(void *)(v0 + 16));
}

unint64_t sub_10005044C()
{
  unint64_t result = qword_1000D6528;
  if (!qword_1000D6528)
  {
    sub_100006F98(&qword_1000D6520);
    sub_100043D7C(&qword_1000D6530, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.LargeHeaderView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6528);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.LargeHeaderView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D68C8);
}

unint64_t sub_100050518()
{
  unint64_t result = qword_1000D6548;
  if (!qword_1000D6548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6548);
  }
  return result;
}

ValueMetadata *_s12CountFontKeyOMa()
{
  return &_s12CountFontKeyON;
}

ValueMetadata *_s14HashtagFontKeyOMa()
{
  return &_s14HashtagFontKeyON;
}

ValueMetadata *_s15HashtagColorKeyOMa()
{
  return &_s15HashtagColorKeyON;
}

ValueMetadata *_s17NoReminderFontKeyOMa()
{
  return &_s17NoReminderFontKeyON;
}

ValueMetadata *_s12TitleFontKeyOMa()
{
  return &_s12TitleFontKeyON;
}

uint64_t destroy for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1)
{
  sub_10004C8C4(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));

  return swift_release();
}

uint64_t initializeWithCopy for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10004C4D4(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  char v6 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10004C4D4(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10004C8C4(v6, v7);
  char v8 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10004C8C4(v6, v7);
  char v8 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.DottedDividerHorizontal(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.DottedDividerHorizontal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.DottedDividerHorizontal()
{
  return &type metadata for TTRAnyListWidget.DottedDividerHorizontal;
}

char *sub_1000507F8(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    char v7 = a1;
    char v8 = a2[1];
    *((void *)a1 + 1) = v8;
    uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v10 = v9[6];
    uint64_t v40 = (char *)a2 + v10;
    __dst = &v7[v10];
    uint64_t v11 = sub_1000ADC28();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    uint64_t v15 = v8;
    if (v13(v40, 1, v11))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v40, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v40, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = v9[7];
    uint64_t v18 = &v7[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v9[8];
    uint64_t v22 = *(char **)((char *)a2 + v21);
    *(void *)&v7[v21] = v22;
    *(void *)&v7[v9[9]] = *(char **)((char *)a2 + v9[9]);
    v7[v9[10]] = *((unsigned char *)a2 + v9[10]);
    v7[v9[11]] = *((unsigned char *)a2 + v9[11]);
    uint64_t v23 = a3[6];
    *(void *)&v7[a3[5]] = *(char **)((char *)a2 + a3[5]);
    uint64_t v24 = &v7[v23];
    uint64_t v25 = (uint64_t)a2 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = a3[8];
    v7[a3[7]] = *((unsigned char *)a2 + a3[7]);
    uint64_t v27 = &v7[v26];
    int v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = *v28;
    LOBYTE(v28) = *((unsigned char *)v28 + 8);
    *(void *)uint64_t v27 = v29;
    v27[8] = (char)v28;
    uint64_t v30 = a3[9];
    uint64_t v31 = a3[10];
    uint64_t v32 = &v7[v30];
    uint64_t v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = *v33;
    LOBYTE(v33) = *((unsigned char *)v33 + 8);
    *(void *)uint64_t v32 = v34;
    v32[8] = (char)v33;
    uint64_t v35 = &v7[v31];
    uint64_t v36 = (uint64_t *)((char *)a2 + v31);
    uint64_t v37 = *v36;
    LOBYTE(v36) = *((unsigned char *)v36 + 8);
    *(void *)uint64_t v35 = v37;
    v35[8] = (char)v36;
    id v38 = v22;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_100050AA8(id *a1)
{
  uint64_t v2 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  int v3 = (char *)a1 + v2[6];
  uint64_t v4 = sub_1000ADC28();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v6 = (char *)a1 + v2[7];
  uint64_t v7 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100050BF0(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v8 = v7[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  id v14 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v9, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v16 = v7[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = v7[8];
  uint64_t v21 = *(void **)(a2 + v20);
  *(void *)((char *)a1 + v20) = v21;
  *(void *)((char *)a1 + v7[9]) = *(void *)(a2 + v7[9]);
  *((unsigned char *)a1 + v7[10]) = *(unsigned char *)(a2 + v7[10]);
  *((unsigned char *)a1 + v7[11]) = *(unsigned char *)(a2 + v7[11]);
  uint64_t v22 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = *(unsigned char *)(v24 + 8);
  uint64_t v25 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  LOBYTE(v27) = *((unsigned char *)v27 + 8);
  *(void *)uint64_t v26 = v28;
  v26[8] = (char)v27;
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = (char *)a1 + v29;
  uint64_t v32 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v32;
  LOBYTE(v32) = *((unsigned char *)v32 + 8);
  *(void *)uint64_t v31 = v33;
  v31[8] = (char)v32;
  uint64_t v34 = (char *)a1 + v30;
  uint64_t v35 = (uint64_t *)(a2 + v30);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  v34[8] = (char)v35;
  id v37 = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100050E54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v7 = v5;

  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v9;
  id v10 = v9;

  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = v11[6];
  id v13 = (void *)(a1 + v12);
  id v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000ADC28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_10000693C(&qword_1000D4E10);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = v11[7];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = v11[8];
  uint64_t v26 = *(void **)(a1 + v25);
  uint64_t v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  id v28 = v27;

  *(void *)(a1 + v11[9]) = *(void *)(a2 + v11[9]);
  *(unsigned char *)(a1 + v11[10]) = *(unsigned char *)(a2 + v11[10]);
  *(unsigned char *)(a1 + v11[11]) = *(unsigned char *)(a2 + v11[11]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v29 = a3[6];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v32 = *v31;
  *(unsigned char *)(v30 + 8) = *((unsigned char *)v31 + 8);
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v33 = a3[8];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = (_BYTE)v35;
  swift_retain();
  swift_release();
  uint64_t v37 = a3[9];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v40 = *v39;
  LOBYTE(v39) = *((unsigned char *)v39 + 8);
  *(void *)uint64_t v38 = v40;
  *(unsigned char *)(v38 + 8) = (_BYTE)v39;
  swift_retain();
  swift_release();
  uint64_t v41 = a3[10];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v44 = *v43;
  LOBYTE(v43) = *((unsigned char *)v43 + 8);
  *(void *)uint64_t v42 = v44;
  *(unsigned char *)(v42 + 8) = (_BYTE)v43;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100051150(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D4E10);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = v6[7];
  id v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  uint64_t v17 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  int v18 = (char *)a1 + v17;
  int v19 = (char *)a2 + v17;
  *(void *)int v18 = *(void *)v19;
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  char v22 = *((unsigned char *)a2 + v20);
  v18[8] = v19[8];
  *((unsigned char *)a1 + v20) = v22;
  uint64_t v23 = (char *)a1 + v21;
  *(void *)uint64_t v23 = *(void *)((char *)a2 + v21);
  v23[8] = *((unsigned char *)a2 + v21 + 8);
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  uint64_t v26 = (char *)a1 + v24;
  uint64_t v27 = (char *)a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  id v28 = (char *)a1 + v25;
  uint64_t v29 = (char *)a2 + v25;
  *(void *)id v28 = *(void *)v29;
  v28[8] = v29[8];
  return a1;
}

uint64_t sub_100051374(uint64_t a1, void *a2, int *a3)
{
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000ADC28();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000693C(&qword_1000D4E10);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = v7[7];
  uint64_t v18 = a1 + v17;
  int v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1000ADD48();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = v7[8];
  char v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)((char *)a2 + v21);

  *(void *)(a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
  *(unsigned char *)(a1 + v7[10]) = *((unsigned char *)a2 + v7[10]);
  *(unsigned char *)(a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
  uint64_t v23 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = v25[8];
  uint64_t v26 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v27 = a1 + v26;
  id v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)v28;
  LOBYTE(v28) = v28[8];
  *(void *)uint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = (_BYTE)v28;
  swift_release();
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)v32;
  LOBYTE(v32) = v32[8];
  *(void *)uint64_t v31 = v33;
  *(unsigned char *)(v31 + 8) = (_BYTE)v32;
  swift_release();
  uint64_t v34 = a3[10];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)v36;
  LOBYTE(v36) = v36[8];
  *(void *)uint64_t v35 = v37;
  *(unsigned char *)(v35 + 8) = (_BYTE)v36;
  swift_release();
  return a1;
}

uint64_t sub_100051648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005165C);
}

uint64_t sub_10005165C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10005172C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100051740);
}

uint64_t sub_100051740(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1000517FC()
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel.Reminder(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ReminderVStack()
{
  return &type metadata for TTRAnyListWidget.ReminderVStack;
}

void *sub_1000518C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    char v5 = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = v5;
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_1000519F8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000AF268();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100051AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  swift_retain();
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100051B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  char v6 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_100009EF4(a1 + v7, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100051C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  char v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000AF268();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100051D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  char v6 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_100009EF4(a1 + v7, &qword_1000D5E30);
    uint64_t v10 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1000AF268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100051E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100051E98);
}

uint64_t sub_100051E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 48);
    uint64_t v10 = IsVibrantText;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100051F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100051F54);
}

uint64_t sub_100051F54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  else
  {
    uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 56);
    uint64_t v9 = IsVibrantText;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100051FF8()
{
  sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for TTRAnyListWidget.CountTextView()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TTRAnyListWidget.CountTextView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  char v5 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.CountTextView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  char v5 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.CountTextView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TTRAnyListWidget.CountTextView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.CountTextView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.CountTextView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.CountTextView()
{
  return &type metadata for TTRAnyListWidget.CountTextView;
}

void *sub_100052338(uint64_t a1, uint64_t *a2, int *a3)
{
  char v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *char v4 = *a2;
    char v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v9 = v8[9];
    __dst = (void **)((char *)v4 + v9);
    uint64_t v10 = (void **)((char *)a2 + v9);
    uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
    int v14 = (int *)v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v14))
    {
      uint64_t v15 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = *v10;
      uint64_t v18 = v10[1];
      char *__dst = *v10;
      __dst[1] = v18;
      uint64_t v19 = v14[6];
      uint64_t v70 = (char *)__dst + v19;
      uint64_t v71 = v12;
      uint64_t v75 = v10;
      uint64_t v20 = (char *)v10 + v19;
      uint64_t v21 = sub_1000ADC28();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      id v23 = v17;
      id v24 = v18;
      if (v73(v20, 1, v21))
      {
        uint64_t v25 = sub_10000693C(&qword_1000D4E10);
        memcpy(v70, v20, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v70, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v70, 0, 1, v21);
      }
      uint64_t v26 = v14[7];
      uint64_t v27 = (char *)__dst + v26;
      id v28 = (char *)v75 + v26;
      uint64_t v29 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v30 = v14[8];
      uint64_t v31 = *(void **)((char *)v75 + v30);
      *(void **)((char *)__dst + v30) = v31;
      *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v75 + v14[9]);
      *((unsigned char *)__dst + v14[10]) = *((unsigned char *)v75 + v14[10]);
      *((unsigned char *)__dst + v14[11]) = *((unsigned char *)v75 + v14[11]);
      uint64_t v32 = *(void (**)(void **, void, uint64_t, int *))(v71 + 56);
      id v33 = v31;
      v32(__dst, 0, 1, v14);
    }
    uint64_t v34 = v8[10];
    __dsta = *(void **)((char *)a2 + v34);
    *(void *)((char *)v4 + v34) = __dsta;
    uint64_t v35 = v8[11];
    uint64_t v36 = (void *)((char *)v4 + v35);
    uint64_t v37 = (uint64_t *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    void *v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = v8[12];
    uint64_t v40 = *(void **)((char *)a2 + v39);
    *(void *)((char *)v4 + v39) = v40;
    uint64_t v41 = v8[13];
    uint64_t v42 = (void *)((char *)v4 + v41);
    uint64_t v43 = (uint64_t *)((char *)a2 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = v8[14];
    uint64_t v46 = (void *)((char *)v4 + v45);
    uint64_t v47 = (uint64_t *)((char *)a2 + v45);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    *((unsigned char *)v4 + v8[15]) = *((unsigned char *)a2 + v8[15]);
    uint64_t v49 = v8[16];
    uint64_t v50 = (void *)((char *)v4 + v49);
    uint64_t v51 = (uint64_t *)((char *)a2 + v49);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    *(void *)((char *)v4 + v8[17]) = *(uint64_t *)((char *)a2 + v8[17]);
    uint64_t v53 = v8[18];
    uint64_t v74 = (uint64_t)a2 + v53;
    uint64_t v76 = (char *)v4 + v53;
    uint64_t v54 = sub_1000ADD48();
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
    id v55 = __dsta;
    swift_bridgeObjectRetain();
    id v56 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72(v76, v74, v54);
    *(void *)((char *)v4 + v8[19]) = *(uint64_t *)((char *)a2 + v8[19]);
    *((unsigned char *)v4 + v8[20]) = *((unsigned char *)a2 + v8[20]);
    uint64_t v57 = a3[6];
    *(void *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v58 = (char *)v4 + v57;
    uint64_t v59 = (uint64_t *)((char *)a2 + v57);
    uint64_t v60 = *v59;
    LOBYTE(v59) = *((unsigned char *)v59 + 8);
    *(void *)uint64_t v58 = v60;
    v58[8] = (char)v59;
    uint64_t v61 = a3[7];
    uint64_t v62 = (char *)v4 + v61;
    uint64_t v63 = (uint64_t *)((char *)a2 + v61);
    uint64_t v64 = *v63;
    LOBYTE(v38) = *((unsigned char *)v63 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    j__swift_retain();
    *(void *)uint64_t v62 = v64;
    v62[8] = v38;
    uint64_t v65 = a3[8];
    uint64_t v66 = (void *)((char *)v4 + v65);
    uint64_t v67 = (uint64_t *)((char *)a2 + v65);
    sub_10000693C(&qword_1000D5ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v68 = sub_1000AE968();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
    }
    else
    {
      *uint64_t v66 = *v67;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10005288C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  int v5 = (id *)(a1 + v4[9]);
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v6 - 1) + 48))(v5, 1, v6))
  {

    uint64_t v7 = (char *)v5 + v6[6];
    uint64_t v8 = sub_1000ADC28();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = (char *)v5 + v6[7];
    uint64_t v11 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + v4[18];
  uint64_t v13 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_release();
  j__swift_release();
  uint64_t v14 = a1 + *(int *)(a2 + 32);
  sub_10000693C(&qword_1000D5ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000AE968();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    return v16(v14, v15);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100052B7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = v7[9];
  __dst = (void **)(a1 + v8);
  uint64_t v9 = (void **)(a2 + v8);
  uint64_t v10 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void **, uint64_t, int *))(v11 + 48);
  uint64_t v13 = (int *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v13))
  {
    uint64_t v14 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v71 = v9;
    uint64_t v73 = v11;
    uint64_t v15 = *v9;
    uint64_t v16 = v9[1];
    char *__dst = *v9;
    __dst[1] = v16;
    uint64_t v17 = v13[6];
    char v69 = (char *)__dst + v17;
    uint64_t v18 = (char *)v9 + v17;
    uint64_t v19 = sub_1000ADC28();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    id v21 = v15;
    id v22 = v16;
    if (v68(v18, 1, v19))
    {
      uint64_t v23 = sub_10000693C(&qword_1000D4E10);
      memcpy(v69, v18, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v69, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v69, 0, 1, v19);
    }
    uint64_t v24 = v13[7];
    uint64_t v25 = (char *)__dst + v24;
    uint64_t v26 = (char *)v71 + v24;
    uint64_t v27 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = v13[8];
    uint64_t v29 = *(void **)((char *)v71 + v28);
    *(void **)((char *)__dst + v28) = v29;
    *(void **)((char *)__dst + v13[9]) = *(void **)((char *)v71 + v13[9]);
    *((unsigned char *)__dst + v13[10]) = *((unsigned char *)v71 + v13[10]);
    *((unsigned char *)__dst + v13[11]) = *((unsigned char *)v71 + v13[11]);
    uint64_t v30 = *(void (**)(void **, void, uint64_t, int *))(v73 + 56);
    id v31 = v29;
    v30(__dst, 0, 1, v13);
  }
  uint64_t v32 = v7[10];
  __dsta = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = __dsta;
  uint64_t v33 = v7[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = v7[12];
  uint64_t v38 = *(void **)(a2 + v37);
  *(void *)(a1 + v37) = v38;
  uint64_t v39 = v7[13];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = v7[14];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  void *v44 = *v45;
  v44[1] = v46;
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  uint64_t v47 = v7[16];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  uint64_t v51 = v7[18];
  uint64_t v72 = a2 + v51;
  uint64_t v74 = a1 + v51;
  uint64_t v52 = sub_1000ADD48();
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16);
  id v53 = __dsta;
  swift_bridgeObjectRetain();
  id v54 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v70(v74, v72, v52);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  uint64_t v55 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v56 = a1 + v55;
  uint64_t v57 = (uint64_t *)(a2 + v55);
  uint64_t v58 = *v57;
  LOBYTE(v57) = *((unsigned char *)v57 + 8);
  *(void *)uint64_t v56 = v58;
  *(unsigned char *)(v56 + 8) = (_BYTE)v57;
  uint64_t v59 = a3[7];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v62 = *v61;
  LOBYTE(v36) = *((unsigned char *)v61 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  j__swift_retain();
  *(void *)uint64_t v60 = v62;
  *(unsigned char *)(v60 + 8) = v36;
  uint64_t v63 = a3[8];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  sub_10000693C(&qword_1000D5ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v66 = sub_1000AE968();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  }
  else
  {
    *uint64_t v64 = *v65;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100053074(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v6 = v5[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_100043DC4((uint64_t)v7, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v21 = (void *)*v8;
    id v22 = (void *)*v7;
    void *v7 = *v8;
    id v23 = v21;

    uint64_t v24 = (void *)v7[1];
    uint64_t v25 = (void *)v8[1];
    v7[1] = v25;
    id v26 = v25;

    uint64_t v27 = v9[6];
    uint64_t v28 = (char *)v7 + v27;
    __dsta = (char *)v8 + v27;
    uint64_t v29 = sub_1000ADC28();
    uint64_t v90 = *(void *)(v29 - 8);
    uint64_t v92 = v28;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
    LODWORD(v28) = v30(v28, 1, v29);
    int v31 = v30(__dsta, 1, v29);
    if (v28)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v90 + 16))(v92, __dsta, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56))(v92, 0, 1, v29);
        goto LABEL_18;
      }
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v92;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v90 + 24))(v92, __dsta, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v90 + 8))(v92, v29);
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v33 = v92;
    }
    memcpy(v33, __dsta, v32);
LABEL_18:
    uint64_t v42 = v9[7];
    uint64_t v43 = (char *)v7 + v42;
    uint64_t v44 = (char *)v8 + v42;
    uint64_t v45 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
    uint64_t v46 = v9[8];
    uint64_t v47 = *(void **)((char *)v7 + v46);
    uint64_t v48 = *(void **)((char *)v8 + v46);
    *(void *)((char *)v7 + v46) = v48;
    id v49 = v48;

    *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
    *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
    *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v20 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v14 = (void *)*v8;
  void *v7 = *v8;
  uint64_t v91 = (void *)v8[1];
  v7[1] = v91;
  uint64_t v15 = v9[6];
  __dst = (char *)v7 + v15;
  char v89 = (char *)v8 + v15;
  uint64_t v16 = sub_1000ADC28();
  uint64_t v87 = *(void *)(v16 - 8);
  uint64_t v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
  id v17 = v14;
  id v18 = v91;
  if (v88(v89, 1, v16))
  {
    uint64_t v19 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v89, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(__dst, v89, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v34 = v9[7];
  uint64_t v35 = (char *)v7 + v34;
  uint64_t v36 = (char *)v8 + v34;
  uint64_t v37 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = v9[8];
  uint64_t v39 = *(void **)((char *)v8 + v38);
  *(void *)((char *)v7 + v38) = v39;
  *(void *)((char *)v7 + v9[9]) = *(void *)((char *)v8 + v9[9]);
  *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
  *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
  uint64_t v40 = *(void (**)(void *, void, uint64_t, int *))(v10 + 56);
  id v41 = v39;
  v40(v7, 0, 1, v9);
LABEL_19:
  uint64_t v50 = v5[10];
  uint64_t v51 = *(void **)(a2 + v50);
  uint64_t v52 = *(void **)(a1 + v50);
  *(void *)(a1 + v50) = v51;
  id v53 = v51;

  uint64_t v54 = v5[11];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  *uint64_t v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = v5[12];
  uint64_t v58 = *(void **)(a1 + v57);
  uint64_t v59 = *(void **)(a2 + v57);
  *(void *)(a1 + v57) = v59;
  id v60 = v59;

  uint64_t v61 = v5[13];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  *uint64_t v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = v5[14];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (void *)(a2 + v64);
  *uint64_t v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
  uint64_t v67 = v5[16];
  uint64_t v68 = (void *)(a1 + v67);
  char v69 = (void *)(a2 + v67);
  *uint64_t v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v70 = v5[18];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  *(void *)(a1 + v5[19]) = *(void *)(a2 + v5[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[20]) = *(unsigned char *)(a2 + v5[20]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v74 = a3[6];
  uint64_t v75 = a1 + v74;
  uint64_t v76 = (uint64_t *)(a2 + v74);
  uint64_t v77 = *v76;
  LOBYTE(v76) = *((unsigned char *)v76 + 8);
  *(void *)uint64_t v75 = v77;
  *(unsigned char *)(v75 + 8) = (_BYTE)v76;
  swift_retain();
  swift_release();
  uint64_t v78 = a3[7];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = (uint64_t *)(a2 + v78);
  uint64_t v81 = *v80;
  LOBYTE(v71) = *((unsigned char *)v80 + 8);
  j__swift_retain();
  *(void *)uint64_t v79 = v81;
  *(unsigned char *)(v79 + 8) = v71;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v82 = a3[8];
    uint64_t v83 = (void *)(a1 + v82);
    uint64_t v84 = (void *)(a2 + v82);
    sub_100009EF4(a1 + v82, &qword_1000D5ED8);
    sub_10000693C(&qword_1000D5ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v85 = sub_1000AE968();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
    }
    else
    {
      *uint64_t v83 = *v84;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100053874(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[6];
    uint64_t v38 = a3;
    __dst = (char *)v8 + v13;
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = sub_1000ADC28();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v18 = v10[7];
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = (char *)v9 + v18;
    uint64_t v21 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(void *)((char *)v8 + v10[8]) = *(void *)((char *)v9 + v10[8]);
    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    a3 = v38;
  }
  *(void *)(a1 + v6[10]) = *(void *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  *(_OWORD *)(a1 + v6[13]) = *(_OWORD *)(a2 + v6[13]);
  *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  uint64_t v22 = v6[18];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  uint64_t v26 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[7];
  uint64_t v30 = a3[8];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  *(void *)uint64_t v31 = *(void *)v32;
  uint64_t v33 = (void *)(a1 + v30);
  uint64_t v34 = (const void *)(a2 + v30);
  uint64_t v35 = sub_10000693C(&qword_1000D5ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_1000AE968();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100053CB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = v7[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v16 = v11[6];
      __dst = (char *)v9 + v16;
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v18 = sub_1000ADC28();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_10000693C(&qword_1000D4E10);
        memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      uint64_t v31 = v11[7];
      uint64_t v32 = (char *)v9 + v31;
      uint64_t v33 = (char *)v10 + v31;
      uint64_t v34 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      *(void *)((char *)v9 + v11[8]) = *(void *)((char *)v10 + v11[8]);
      *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
      *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
      *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v21 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_13:
    uint64_t v35 = a3;
    goto LABEL_14;
  }
  if (v15)
  {
    sub_100043DC4((uint64_t)v9, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    goto LABEL_7;
  }
  uint64_t v22 = (void *)*v9;
  *uint64_t v9 = *v10;

  uint64_t v23 = (void *)v9[1];
  v9[1] = v10[1];

  uint64_t v24 = v11[6];
  uint64_t v25 = (char *)v9 + v24;
  __dsta = (char *)v10 + v24;
  uint64_t v26 = sub_1000ADC28();
  uint64_t v84 = *(void *)(v26 - 8);
  uint64_t v85 = v25;
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
  LODWORD(v25) = v27(v25, 1, v26);
  int v28 = v27(__dsta, 1, v26);
  if (v25)
  {
    if (!v28)
    {
      (*(void (**)(void *, char *, uint64_t))(v84 + 32))(v85, __dsta, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v85, 0, 1, v26);
      goto LABEL_24;
    }
    size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v30 = v85;
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, char *, uint64_t))(v84 + 40))(v85, __dsta, v26);
      goto LABEL_24;
    }
    (*(void (**)(void *, uint64_t))(v84 + 8))(v85, v26);
    size_t v29 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
    uint64_t v30 = v85;
  }
  memcpy(v30, __dsta, v29);
LABEL_24:
  uint64_t v35 = a3;
  uint64_t v78 = v11[7];
  uint64_t v79 = (char *)v9 + v78;
  uint64_t v80 = (char *)v10 + v78;
  uint64_t v81 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 40))(v79, v80, v81);
  uint64_t v82 = v11[8];
  uint64_t v83 = *(void **)((char *)v9 + v82);
  *(void *)((char *)v9 + v82) = *(void *)((char *)v10 + v82);

  *(void *)((char *)v9 + v11[9]) = *(void *)((char *)v10 + v11[9]);
  *((unsigned char *)v9 + v11[10]) = *((unsigned char *)v10 + v11[10]);
  *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
LABEL_14:
  uint64_t v36 = v7[10];
  uint64_t v37 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = *(void *)(a2 + v36);

  uint64_t v38 = v7[11];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *uint64_t v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = v7[12];
  uint64_t v44 = *(void **)(a1 + v43);
  *(void *)(a1 + v43) = *(void *)(a2 + v43);

  uint64_t v45 = v7[13];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  void *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v7[14];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[15]) = *(unsigned char *)(a2 + v7[15]);
  uint64_t v55 = v7[16];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (uint64_t *)(a2 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  void *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  swift_bridgeObjectRelease();
  uint64_t v60 = v7[18];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  uint64_t v63 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 40))(v61, v62, v63);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
  uint64_t v64 = v35[6];
  *(void *)(a1 + v35[5]) = *(void *)(a2 + v35[5]);
  uint64_t v65 = a1 + v64;
  uint64_t v66 = (uint64_t *)(a2 + v64);
  uint64_t v67 = *v66;
  LOBYTE(v66) = *((unsigned char *)v66 + 8);
  *(void *)uint64_t v65 = v67;
  *(unsigned char *)(v65 + 8) = (_BYTE)v66;
  swift_release();
  uint64_t v68 = v35[7];
  uint64_t v69 = a1 + v68;
  uint64_t v70 = (uint64_t *)(a2 + v68);
  uint64_t v71 = *v70;
  LOBYTE(v70) = *((unsigned char *)v70 + 8);
  *(void *)uint64_t v69 = v71;
  *(unsigned char *)(v69 + 8) = (_BYTE)v70;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v72 = v35[8];
    uint64_t v73 = (void *)(a1 + v72);
    uint64_t v74 = (const void *)(a2 + v72);
    sub_100009EF4(a1 + v72, &qword_1000D5ED8);
    uint64_t v75 = sub_10000693C(&qword_1000D5ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v76 = sub_1000AE968();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v76 - 8) + 32))(v73, v74, v76);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000543E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000543F8);
}

uint64_t sub_1000543F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 254)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = sub_10000693C(&qword_1000D5EE0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100054524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100054538);
}

uint64_t sub_100054538(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
  }
  else
  {
    uint64_t v11 = sub_10000693C(&qword_1000D5EE0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_100054668()
{
  type metadata accessor for TTRNewWidgetViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100049B0C(319, (unint64_t *)&unk_1000D5F50, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10005477C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100054790);
}

uint64_t sub_100054794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000547A8);
}

void *sub_1000547B0(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a3[5];
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = *(void *)((char *)a2 + v5 + 8);
    *(void *)uint64_t v6 = *(void *)((char *)a2 + v5);
    *((void *)v6 + 1) = v8;
    *((_OWORD *)v6 + 1) = *(_OWORD *)((char *)a2 + v5 + 16);
    *((void *)v6 + 4) = *(void *)((char *)a2 + v5 + 32);
    v6[40] = *((unsigned char *)a2 + v5 + 40);
    uint64_t v9 = *(void *)((char *)a2 + v5 + 56);
    *((void *)v6 + 6) = *(void *)((char *)a2 + v5 + 48);
    *((void *)v6 + 7) = v9;
    unsigned int v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v11 = v10[9];
    __dst = (void **)&v6[v11];
    uint64_t v12 = (void **)&v7[v11];
    uint64_t v13 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v14 = *(void *)(v13 - 8);
    int v15 = *(unsigned int (**)(void **, uint64_t, int *))(v14 + 48);
    uint64_t v16 = (int *)v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v20 = *v12;
      uint64_t v21 = v12[1];
      char *__dst = *v12;
      __dst[1] = v21;
      uint64_t v22 = v16[6];
      uint64_t v64 = (char *)__dst + v22;
      uint64_t v65 = v14;
      uint64_t v69 = v12;
      uint64_t v23 = (char *)v12 + v22;
      uint64_t v24 = sub_1000ADC28();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      id v26 = v20;
      id v27 = v21;
      if (v67(v23, 1, v24))
      {
        uint64_t v28 = sub_10000693C(&qword_1000D4E10);
        memcpy(v64, v23, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v64, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v64, 0, 1, v24);
      }
      uint64_t v29 = v16[7];
      uint64_t v30 = (char *)__dst + v29;
      uint64_t v31 = (char *)v69 + v29;
      uint64_t v32 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      uint64_t v33 = v16[8];
      uint64_t v34 = *(void **)((char *)v69 + v33);
      *(void **)((char *)__dst + v33) = v34;
      *(void **)((char *)__dst + v16[9]) = *(void **)((char *)v69 + v16[9]);
      *((unsigned char *)__dst + v16[10]) = *((unsigned char *)v69 + v16[10]);
      *((unsigned char *)__dst + v16[11]) = *((unsigned char *)v69 + v16[11]);
      uint64_t v35 = *(void (**)(void **, void, uint64_t, int *))(v65 + 56);
      id v36 = v34;
      v35(__dst, 0, 1, v16);
    }
    uint64_t v37 = v10[10];
    __dsta = *(void **)&v7[v37];
    *(void *)&v6[v37] = __dsta;
    uint64_t v38 = v10[11];
    uint64_t v39 = &v6[v38];
    uint64_t v40 = &v7[v38];
    uint64_t v41 = *((void *)v40 + 1);
    *(void *)uint64_t v39 = *(void *)v40;
    *((void *)v39 + 1) = v41;
    uint64_t v42 = v10[12];
    uint64_t v43 = *(void **)&v7[v42];
    *(void *)&v6[v42] = v43;
    uint64_t v44 = v10[13];
    uint64_t v45 = &v6[v44];
    uint64_t v46 = &v7[v44];
    uint64_t v47 = *((void *)v46 + 1);
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = v47;
    uint64_t v48 = v10[14];
    uint64_t v49 = &v6[v48];
    uint64_t v50 = &v7[v48];
    uint64_t v51 = *((void *)v50 + 1);
    *(void *)uint64_t v49 = *(void *)v50;
    *((void *)v49 + 1) = v51;
    v6[v10[15]] = v7[v10[15]];
    uint64_t v52 = v10[16];
    uint64_t v53 = &v6[v52];
    uint64_t v54 = &v7[v52];
    uint64_t v55 = *((void *)v54 + 1);
    *(void *)uint64_t v53 = *(void *)v54;
    *((void *)v53 + 1) = v55;
    *(void *)&v6[v10[17]] = *(void *)&v7[v10[17]];
    uint64_t v56 = v10[18];
    uint64_t v68 = &v7[v56];
    uint64_t v70 = &v6[v56];
    uint64_t v57 = sub_1000ADD48();
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
    id v58 = __dsta;
    swift_bridgeObjectRetain();
    id v59 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66(v70, v68, v57);
    *(void *)&v6[v10[19]] = *(void *)&v7[v10[19]];
    v6[v10[20]] = v7[v10[20]];
    uint64_t v60 = a3[7];
    uint64_t v19 = a1;
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = *(void *)((char *)a2 + v60);
    LOBYTE(v57) = *((unsigned char *)a2 + v60 + 8);
    swift_bridgeObjectRetain();
    sub_10004C4D4(v62, v57);
    *(void *)uint64_t v61 = v62;
    v61[8] = v57;
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  }
  return v19;
}

uint64_t sub_100054C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v6 = (id *)(v4 + v5[9]);
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {

    uint64_t v8 = (char *)v6 + v7[6];
    uint64_t v9 = sub_1000ADC28();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = (char *)v6 + v7[7];
    uint64_t v12 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v4 + v5[18];
  uint64_t v14 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + *(int *)(a2 + 28);
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);

  return sub_10004C8C4(v16, v17);
}

unsigned char *sub_100054ED0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  uint64_t v6 = *(void *)&a2[v3 + 8];
  *(void *)uint64_t v4 = *(void *)&a2[v3];
  *((void *)v4 + 1) = v6;
  *((_OWORD *)v4 + 1) = *(_OWORD *)&a2[v3 + 16];
  *((void *)v4 + 4) = *(void *)&a2[v3 + 32];
  v4[40] = a2[v3 + 40];
  uint64_t v7 = *(void *)&a2[v3 + 56];
  *((void *)v4 + 6) = *(void *)&a2[v3 + 48];
  *((void *)v4 + 7) = v7;
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = v8[9];
  __dst = (void **)&v4[v9];
  uint64_t v10 = (void **)&v5[v9];
  uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(void **, uint64_t, int *))(v12 + 48);
  uint64_t v14 = (int *)v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v14))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v64 = v10;
    uint64_t v66 = v12;
    uint64_t v16 = *v10;
    char v17 = v10[1];
    char *__dst = *v10;
    __dst[1] = v17;
    uint64_t v18 = v14[6];
    uint64_t v62 = (char *)__dst + v18;
    uint64_t v19 = (char *)v10 + v18;
    uint64_t v20 = sub_1000ADC28();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    id v22 = v16;
    id v23 = v17;
    if (v61(v19, 1, v20))
    {
      uint64_t v24 = sub_10000693C(&qword_1000D4E10);
      memcpy(v62, v19, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v62, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v62, 0, 1, v20);
    }
    uint64_t v25 = v14[7];
    id v26 = (char *)__dst + v25;
    id v27 = (char *)v64 + v25;
    uint64_t v28 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = v14[8];
    uint64_t v30 = *(void **)((char *)v64 + v29);
    *(void **)((char *)__dst + v29) = v30;
    *(void **)((char *)__dst + v14[9]) = *(void **)((char *)v64 + v14[9]);
    *((unsigned char *)__dst + v14[10]) = *((unsigned char *)v64 + v14[10]);
    *((unsigned char *)__dst + v14[11]) = *((unsigned char *)v64 + v14[11]);
    uint64_t v31 = *(void (**)(void **, void, uint64_t, int *))(v66 + 56);
    id v32 = v30;
    v31(__dst, 0, 1, v14);
  }
  uint64_t v33 = v8[10];
  __dsta = *(void **)&v5[v33];
  *(void *)&v4[v33] = __dsta;
  uint64_t v34 = v8[11];
  uint64_t v35 = &v4[v34];
  id v36 = &v5[v34];
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v8[12];
  uint64_t v39 = *(void **)&v5[v38];
  *(void *)&v4[v38] = v39;
  uint64_t v40 = v8[13];
  uint64_t v41 = &v4[v40];
  uint64_t v42 = &v5[v40];
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  uint64_t v44 = v8[14];
  uint64_t v45 = &v4[v44];
  uint64_t v46 = &v5[v44];
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  v4[v8[15]] = v5[v8[15]];
  uint64_t v48 = v8[16];
  uint64_t v49 = &v4[v48];
  uint64_t v50 = &v5[v48];
  uint64_t v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  *(void *)&v4[v8[17]] = *(void *)&v5[v8[17]];
  uint64_t v52 = v8[18];
  uint64_t v65 = &v5[v52];
  uint64_t v67 = &v4[v52];
  uint64_t v53 = sub_1000ADD48();
  uint64_t v63 = *(void **)(*(void *)(v53 - 8) + 16);
  id v54 = __dsta;
  swift_bridgeObjectRetain();
  id v55 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v63)(v67, v65, v53);
  *(void *)&v4[v8[19]] = *(void *)&v5[v8[19]];
  v4[v8[20]] = v5[v8[20]];
  uint64_t v56 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v57 = &a1[v56];
  uint64_t v58 = *(void *)&a2[v56];
  char v59 = a2[v56 + 8];
  swift_bridgeObjectRetain();
  sub_10004C4D4(v58, v59);
  *(void *)uint64_t v57 = v58;
  v57[8] = v59;
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

unsigned char *sub_100055334(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  *(void *)uint64_t v4 = *(void *)&a2[v3];
  *((void *)v4 + 1) = *(void *)&a2[v3 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 2) = *((void *)v5 + 2);
  *((void *)v4 + 3) = *((void *)v5 + 3);
  *((void *)v4 + 4) = *((void *)v5 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[40] = v5[40];
  *((void *)v4 + 6) = *((void *)v5 + 6);
  *((void *)v4 + 7) = *((void *)v5 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = &v4[v7];
  uint64_t v9 = &v5[v7];
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_100043DC4((uint64_t)v8, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v22 = (void *)*v9;
    id v23 = (void *)*v8;
    *uint64_t v8 = *v9;
    id v24 = v22;

    uint64_t v25 = (void *)v8[1];
    id v26 = (void *)v9[1];
    v8[1] = v26;
    id v27 = v26;

    uint64_t v28 = v10[6];
    uint64_t v29 = (char *)v8 + v28;
    __dsta = (char *)v9 + v28;
    uint64_t v30 = sub_1000ADC28();
    uint64_t v85 = *(void *)(v30 - 8);
    uint64_t v87 = v29;
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48);
    LODWORD(v29) = v31(v29, 1, v30);
    int v32 = v31(__dsta, 1, v30);
    if (v29)
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v85 + 16))(v87, __dsta, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v87, 0, 1, v30);
        goto LABEL_18;
      }
      size_t v33 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v34 = v87;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v85 + 24))(v87, __dsta, v30);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v85 + 8))(v87, v30);
      size_t v33 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v34 = v87;
    }
    memcpy(v34, __dsta, v33);
LABEL_18:
    uint64_t v43 = v10[7];
    uint64_t v44 = (char *)v8 + v43;
    uint64_t v45 = (char *)v9 + v43;
    uint64_t v46 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
    uint64_t v47 = v10[8];
    uint64_t v48 = *(void **)((char *)v8 + v47);
    uint64_t v49 = *(void **)((char *)v9 + v47);
    *(void *)((char *)v8 + v47) = v49;
    id v50 = v49;

    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v21 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v15 = (void *)*v9;
  *uint64_t v8 = *v9;
  uint64_t v86 = (void *)v9[1];
  v8[1] = v86;
  uint64_t v16 = v10[6];
  __dst = (char *)v8 + v16;
  uint64_t v84 = (char *)v9 + v16;
  uint64_t v17 = sub_1000ADC28();
  uint64_t v82 = *(void *)(v17 - 8);
  uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48);
  id v18 = v15;
  id v19 = v86;
  if (v83(v84, 1, v17))
  {
    uint64_t v20 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v84, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(__dst, v84, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v35 = v10[7];
  id v36 = (char *)v8 + v35;
  uint64_t v37 = (char *)v9 + v35;
  uint64_t v38 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = v10[8];
  uint64_t v40 = *(void **)((char *)v9 + v39);
  *(void *)((char *)v8 + v39) = v40;
  *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
  *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
  *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
  uint64_t v41 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
  id v42 = v40;
  v41(v8, 0, 1, v10);
LABEL_19:
  uint64_t v51 = v6[10];
  uint64_t v52 = *(void **)&v5[v51];
  uint64_t v53 = *(void **)&v4[v51];
  *(void *)&v4[v51] = v52;
  id v54 = v52;

  uint64_t v55 = v6[11];
  uint64_t v56 = &v4[v55];
  uint64_t v57 = &v5[v55];
  void *v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = v6[12];
  char v59 = *(void **)&v4[v58];
  uint64_t v60 = *(void **)&v5[v58];
  *(void *)&v4[v58] = v60;
  id v61 = v60;

  uint64_t v62 = v6[13];
  uint64_t v63 = &v4[v62];
  uint64_t v64 = &v5[v62];
  *uint64_t v63 = *v64;
  v63[1] = v64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v65 = v6[14];
  uint64_t v66 = &v4[v65];
  uint64_t v67 = &v5[v65];
  *uint64_t v66 = *v67;
  v66[1] = v67[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[v6[15]] = v5[v6[15]];
  uint64_t v68 = v6[16];
  uint64_t v69 = &v4[v68];
  uint64_t v70 = &v5[v68];
  *uint64_t v69 = *v70;
  v69[1] = v70[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v4[v6[17]] = *(void *)&v5[v6[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v71 = v6[18];
  uint64_t v72 = &v4[v71];
  uint64_t v73 = &v5[v71];
  uint64_t v74 = sub_1000ADD48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v74 - 8) + 24))(v72, v73, v74);
  *(void *)&v4[v6[19]] = *(void *)&v5[v6[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[v6[20]] = v5[v6[20]];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v75 = a3[7];
  uint64_t v76 = &a1[v75];
  uint64_t v77 = &a2[v75];
  uint64_t v78 = *(void *)v77;
  LOBYTE(v72) = v77[8];
  sub_10004C4D4(*(void *)v77, (char)v72);
  uint64_t v79 = *(void *)v76;
  char v80 = v76[8];
  *(void *)uint64_t v76 = v78;
  v76[8] = (_BYTE)v72;
  sub_10004C8C4(v79, v80);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

unsigned char *sub_100055A80(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)&a2[v6];
  *((void *)v7 + 2) = *(void *)&a2[v6 + 16];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  v7[40] = a2[v6 + 40];
  *((_OWORD *)v7 + 3) = *(_OWORD *)&a2[v6 + 48];
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v10 = v9[9];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  int v13 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    size_t v33 = v4;
    uint64_t v35 = v14;
    id v36 = v3;
    *uint64_t v11 = *v12;
    uint64_t v16 = v13[6];
    uint64_t v34 = (char *)v11 + v16;
    uint64_t v17 = (char *)v12 + v16;
    uint64_t v18 = sub_1000ADC28();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_10000693C(&qword_1000D4E10);
      memcpy(v34, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v34, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v34, 0, 1, v18);
    }
    uint64_t v21 = v13[7];
    id v22 = (char *)v11 + v21;
    id v23 = (char *)v12 + v21;
    uint64_t v24 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    *(void *)((char *)v11 + v13[8]) = *(void *)((char *)v12 + v13[8]);
    *(void *)((char *)v11 + v13[9]) = *(void *)((char *)v12 + v13[9]);
    *((unsigned char *)v11 + v13[10]) = *((unsigned char *)v12 + v13[10]);
    *((unsigned char *)v11 + v13[11]) = *((unsigned char *)v12 + v13[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v35 + 56))(v11, 0, 1, v13);
    uint64_t v3 = v36;
    uint64_t v4 = v33;
  }
  *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
  *(_OWORD *)&v7[v9[11]] = *(_OWORD *)&v8[v9[11]];
  *(void *)&v7[v9[12]] = *(void *)&v8[v9[12]];
  *(_OWORD *)&v7[v9[13]] = *(_OWORD *)&v8[v9[13]];
  *(_OWORD *)&v7[v9[14]] = *(_OWORD *)&v8[v9[14]];
  v7[v9[15]] = v8[v9[15]];
  *(_OWORD *)&v7[v9[16]] = *(_OWORD *)&v8[v9[16]];
  *(void *)&v7[v9[17]] = *(void *)&v8[v9[17]];
  uint64_t v25 = v9[18];
  id v26 = &v7[v25];
  id v27 = &v8[v25];
  uint64_t v28 = sub_1000ADD48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  *(void *)&v7[v9[19]] = *(void *)&v8[v9[19]];
  v7[v9[20]] = v8[v9[20]];
  uint64_t v29 = v3[7];
  *(void *)&a1[v3[6]] = *(void *)&v4[v3[6]];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &v4[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  *(void *)&a1[v3[8]] = *(void *)&v4[v3[8]];
  return a1;
}

unsigned char *sub_100055E34(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = &a1[v3];
  uint64_t v5 = &a2[v3];
  uint64_t v6 = *(void *)&a2[v3 + 8];
  *(void *)uint64_t v4 = *(void *)&a2[v3];
  *((void *)v4 + 1) = v6;
  swift_bridgeObjectRelease();
  *((_OWORD *)v4 + 1) = *((_OWORD *)v5 + 1);
  *((void *)v4 + 4) = *((void *)v5 + 4);
  swift_bridgeObjectRelease();
  v4[40] = v5[40];
  uint64_t v7 = *((void *)v5 + 7);
  *((void *)v4 + 6) = *((void *)v5 + 6);
  *((void *)v4 + 7) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = v8[9];
  uint64_t v10 = &v4[v9];
  uint64_t v11 = &v5[v9];
  uint64_t v12 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_100043DC4((uint64_t)v10, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    uint64_t v25 = (void *)*v10;
    void *v10 = *v11;

    id v26 = (void *)v10[1];
    v10[1] = v11[1];

    uint64_t v27 = v12[6];
    uint64_t v28 = (char *)v10 + v27;
    __srca = (char *)v11 + v27;
    uint64_t v29 = sub_1000ADC28();
    uint64_t v79 = *(void *)(v29 - 8);
    uint64_t v81 = v28;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
    LODWORD(v28) = v30(v28, 1, v29);
    int v31 = v30(__srca, 1, v29);
    if (v28)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v79 + 32))(v81, __srca, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v81, 0, 1, v29);
        goto LABEL_18;
      }
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      size_t v33 = v81;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v79 + 40))(v81, __srca, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v79 + 8))(v81, v29);
      size_t v32 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      size_t v33 = v81;
    }
    memcpy(v33, __srca, v32);
LABEL_18:
    id v22 = a1;
    uint64_t v38 = v12[7];
    uint64_t v39 = (char *)v10 + v38;
    uint64_t v40 = (char *)v11 + v38;
    uint64_t v41 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
    uint64_t v42 = v12[8];
    uint64_t v43 = *(void **)((char *)v10 + v42);
    *(void *)((char *)v10 + v42) = *(void *)((char *)v11 + v42);

    *(void *)((char *)v10 + v12[9]) = *(void *)((char *)v11 + v12[9]);
    *((unsigned char *)v10 + v12[10]) = *((unsigned char *)v11 + v12[10]);
    *((unsigned char *)v10 + v12[11]) = *((unsigned char *)v11 + v12[11]);
    goto LABEL_19;
  }
  if (v16)
  {
LABEL_7:
    uint64_t v24 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v10, v11, *(void *)(*(void *)(v24 - 8) + 64));
    id v22 = a1;
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  uint64_t v17 = v12[6];
  __src = (char *)v10 + v17;
  uint64_t v18 = (char *)v11 + v17;
  uint64_t v19 = sub_1000ADC28();
  uint64_t v20 = *(void *)(v19 - 8);
  char v80 = v18;
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  id v22 = a1;
  if (v21)
  {
    uint64_t v23 = sub_10000693C(&qword_1000D4E10);
    memcpy(__src, v80, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__src, v80, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__src, 0, 1, v19);
  }
  uint64_t v34 = v12[7];
  uint64_t v35 = (char *)v10 + v34;
  id v36 = (char *)v11 + v34;
  uint64_t v37 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  *(void *)((char *)v10 + v12[8]) = *(void *)((char *)v11 + v12[8]);
  *(void *)((char *)v10 + v12[9]) = *(void *)((char *)v11 + v12[9]);
  *((unsigned char *)v10 + v12[10]) = *((unsigned char *)v11 + v12[10]);
  *((unsigned char *)v10 + v12[11]) = *((unsigned char *)v11 + v12[11]);
  (*(void (**)(void *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
LABEL_19:
  uint64_t v44 = v8[10];
  uint64_t v45 = *(void **)&v4[v44];
  *(void *)&v4[v44] = *(void *)&v5[v44];

  uint64_t v46 = v8[11];
  uint64_t v47 = &v4[v46];
  uint64_t v48 = (uint64_t *)&v5[v46];
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  *uint64_t v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = v8[12];
  uint64_t v52 = *(void **)&v4[v51];
  *(void *)&v4[v51] = *(void *)&v5[v51];

  uint64_t v53 = v8[13];
  id v54 = &v4[v53];
  uint64_t v55 = (uint64_t *)&v5[v53];
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  void *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  uint64_t v58 = v8[14];
  char v59 = &v4[v58];
  uint64_t v60 = (uint64_t *)&v5[v58];
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  *char v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  v4[v8[15]] = v5[v8[15]];
  uint64_t v63 = v8[16];
  uint64_t v64 = &v4[v63];
  uint64_t v65 = (uint64_t *)&v5[v63];
  uint64_t v67 = *v65;
  uint64_t v66 = v65[1];
  *uint64_t v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease();
  *(void *)&v4[v8[17]] = *(void *)&v5[v8[17]];
  swift_bridgeObjectRelease();
  uint64_t v68 = v8[18];
  uint64_t v69 = &v4[v68];
  uint64_t v70 = &v5[v68];
  uint64_t v71 = sub_1000ADD48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 40))(v69, v70, v71);
  *(void *)&v4[v8[19]] = *(void *)&v5[v8[19]];
  swift_bridgeObjectRelease();
  v4[v8[20]] = v5[v8[20]];
  uint64_t v72 = a3[7];
  *(void *)&v22[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v73 = &v22[v72];
  uint64_t v74 = &a2[v72];
  uint64_t v75 = *(void *)v74;
  LOBYTE(v74) = v74[8];
  uint64_t v76 = *(void *)v73;
  char v77 = v73[8];
  *(void *)uint64_t v73 = v75;
  v73[8] = (_BYTE)v74;
  sub_10004C8C4(v76, v77);
  *(void *)&v22[a3[8]] = *(void *)&a2[a3[8]];
  return v22;
}

uint64_t sub_1000564AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000564C0);
}

uint64_t sub_1000564C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 8);
    if (v12 > 1) {
      return (v12 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100056584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100056598);
}

uint64_t sub_100056598(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28) + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_10005665C()
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TTRAnyListWidget.DoubleDividerHorizontal()
{
  return swift_release();
}

uint64_t _s24RemindersWidgetExtension16TTRAnyListWidgetV23DoubleDividerHorizontalVwCP_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.DoubleDividerHorizontal(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.DoubleDividerHorizontal(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TTRAnyListWidget.DoubleDividerHorizontal(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.DoubleDividerHorizontal(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.DoubleDividerHorizontal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.DoubleDividerHorizontal()
{
  return &type metadata for TTRAnyListWidget.DoubleDividerHorizontal;
}

uint64_t sub_1000568A8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v5 = v4[9];
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v9 = *((void *)v8 - 1);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, int *))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (v12)
    {
      sub_100043DC4((uint64_t)v6, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    uint64_t v20 = (void *)*v7;
    int v21 = (void *)*v6;
    *uint64_t v6 = *v7;
    id v22 = v20;

    uint64_t v23 = (void *)v6[1];
    uint64_t v24 = (void *)v7[1];
    v6[1] = v24;
    id v25 = v24;

    uint64_t v26 = v8[6];
    uint64_t v27 = (char *)v6 + v26;
    __dsta = (char *)v7 + v26;
    uint64_t v28 = sub_1000ADC28();
    uint64_t v77 = *(void *)(v28 - 8);
    uint64_t v79 = v27;
    uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    LODWORD(v27) = v29(v27, 1, v28);
    int v30 = v29(__dsta, 1, v28);
    if (v27)
    {
      if (!v30)
      {
        (*(void (**)(void *, char *, uint64_t))(v77 + 16))(v79, __dsta, v28);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v79, 0, 1, v28);
        goto LABEL_18;
      }
      size_t v31 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      size_t v32 = v79;
    }
    else
    {
      if (!v30)
      {
        (*(void (**)(void *, char *, uint64_t))(v77 + 24))(v79, __dsta, v28);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v77 + 8))(v79, v28);
      size_t v31 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      size_t v32 = v79;
    }
    memcpy(v32, __dsta, v31);
LABEL_18:
    uint64_t v41 = v8[7];
    uint64_t v42 = (char *)v6 + v41;
    uint64_t v43 = (char *)v7 + v41;
    uint64_t v44 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
    uint64_t v45 = v8[8];
    uint64_t v46 = *(void **)((char *)v6 + v45);
    uint64_t v47 = *(void **)((char *)v7 + v45);
    *(void *)((char *)v6 + v45) = v47;
    id v48 = v47;

    *(void *)((char *)v6 + v8[9]) = *(void *)((char *)v7 + v8[9]);
    *((unsigned char *)v6 + v8[10]) = *((unsigned char *)v7 + v8[10]);
    *((unsigned char *)v6 + v8[11]) = *((unsigned char *)v7 + v8[11]);
    goto LABEL_19;
  }
  if (v12)
  {
LABEL_7:
    uint64_t v19 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v6, v7, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v13 = (void *)*v7;
  *uint64_t v6 = *v7;
  uint64_t v78 = (void *)v7[1];
  v6[1] = v78;
  uint64_t v14 = v8[6];
  __dst = (char *)v6 + v14;
  uint64_t v76 = (char *)v7 + v14;
  uint64_t v15 = sub_1000ADC28();
  uint64_t v74 = *(void *)(v15 - 8);
  uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  id v16 = v13;
  id v17 = v78;
  if (v75(v76, 1, v15))
  {
    uint64_t v18 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v76, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(__dst, v76, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v33 = v8[7];
  uint64_t v34 = (char *)v6 + v33;
  uint64_t v35 = (char *)v7 + v33;
  uint64_t v36 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v37 = v8[8];
  uint64_t v38 = *(void **)((char *)v7 + v37);
  *(void *)((char *)v6 + v37) = v38;
  *(void *)((char *)v6 + v8[9]) = *(void *)((char *)v7 + v8[9]);
  *((unsigned char *)v6 + v8[10]) = *((unsigned char *)v7 + v8[10]);
  *((unsigned char *)v6 + v8[11]) = *((unsigned char *)v7 + v8[11]);
  uint64_t v39 = *(void (**)(void *, void, uint64_t, int *))(v9 + 56);
  id v40 = v38;
  v39(v6, 0, 1, v8);
LABEL_19:
  uint64_t v49 = v4[10];
  uint64_t v50 = *(void **)(a2 + v49);
  uint64_t v51 = *(void **)(a1 + v49);
  *(void *)(a1 + v49) = v50;
  id v52 = v50;

  uint64_t v53 = v4[11];
  id v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  void *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = v4[12];
  uint64_t v57 = *(void **)(a1 + v56);
  uint64_t v58 = *(void **)(a2 + v56);
  *(void *)(a1 + v56) = v58;
  id v59 = v58;

  uint64_t v60 = v4[13];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  *uint64_t v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v4[14];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
  uint64_t v66 = v4[16];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (void *)(a2 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v4[17]) = *(void *)(a2 + v4[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = v4[18];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  uint64_t v72 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 24))(v70, v71, v72);
  *(void *)(a1 + v4[19]) = *(void *)(a2 + v4[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v4[20]) = *(unsigned char *)(a2 + v4[20]);
  return a1;
}

uint64_t sub_100056F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *((void *)v10 - 1);
  int v12 = *(uint64_t (**)(void *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_100043DC4((uint64_t)v8, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    int v21 = (void *)*v8;
    *uint64_t v8 = *v9;

    id v22 = (void *)v8[1];
    v8[1] = v9[1];

    uint64_t v23 = v10[6];
    uint64_t v24 = (char *)v8 + v23;
    __dsta = (char *)v9 + v23;
    uint64_t v25 = sub_1000ADC28();
    uint64_t v69 = *(void *)(v25 - 8);
    uint64_t v70 = v24;
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
    LODWORD(v24) = v26(v24, 1, v25);
    int v27 = v26(__dsta, 1, v25);
    if (v24)
    {
      if (!v27)
      {
        (*(void (**)(void *, char *, uint64_t))(v69 + 32))(v70, __dsta, v25);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v25);
        goto LABEL_18;
      }
      size_t v28 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v29 = v70;
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(void *, char *, uint64_t))(v69 + 40))(v70, __dsta, v25);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v69 + 8))(v70, v25);
      size_t v28 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v29 = v70;
    }
    memcpy(v29, __dsta, v28);
LABEL_18:
    uint64_t v34 = v10[7];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    uint64_t v37 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
    uint64_t v38 = v10[8];
    uint64_t v39 = *(void **)((char *)v8 + v38);
    *(void *)((char *)v8 + v38) = *(void *)((char *)v9 + v38);

    *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
    *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v20 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  uint64_t v15 = v10[6];
  __dst = (char *)v8 + v15;
  id v16 = (char *)v9 + v15;
  uint64_t v17 = sub_1000ADC28();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v30 = v10[7];
  size_t v31 = (char *)v8 + v30;
  size_t v32 = (char *)v9 + v30;
  uint64_t v33 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  *(void *)((char *)v8 + v10[8]) = *(void *)((char *)v9 + v10[8]);
  *(void *)((char *)v8 + v10[9]) = *(void *)((char *)v9 + v10[9]);
  *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
  *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
  (*(void (**)(void *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_19:
  uint64_t v40 = v6[10];
  uint64_t v41 = *(void **)(a1 + v40);
  *(void *)(a1 + v40) = *(void *)(a2 + v40);

  uint64_t v42 = v6[11];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (uint64_t *)(a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = v6[12];
  id v48 = *(void **)(a1 + v47);
  *(void *)(a1 + v47) = *(void *)(a2 + v47);

  uint64_t v49 = v6[13];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = v6[14];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (uint64_t *)(a2 + v54);
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  *uint64_t v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  uint64_t v59 = v6[16];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  *uint64_t v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  swift_bridgeObjectRelease();
  uint64_t v64 = v6[18];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  uint64_t v67 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
  *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  return a1;
}

uint64_t sub_1000575A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000575BC);
}

uint64_t sub_1000575C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000575D4);
}

unint64_t sub_1000575DC()
{
  unint64_t result = qword_1000D6900;
  if (!qword_1000D6900)
  {
    sub_100006F98(&qword_1000D62C8);
    sub_100006F98(&qword_1000D62B8);
    sub_10004F028(&qword_1000D62F0, &qword_1000D62B8, (void (*)(void))sub_10004F0A4);
    swift_getOpaqueTypeConformance2();
    sub_100009F50(&qword_1000D6388, &qword_1000D6390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6900);
  }
  return result;
}

uint64_t sub_1000576E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100057764(uint64_t a1)
{
  return sub_100057798(a1, &qword_1000D64D8, (void (*)(void))sub_1000503A4);
}

uint64_t sub_100057798(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000577F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100057810()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005782C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005784C()
{
  unint64_t result = qword_1000D6908;
  if (!qword_1000D6908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6908);
  }
  return result;
}

unint64_t sub_1000578A4()
{
  unint64_t result = qword_1000D6910;
  if (!qword_1000D6910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6910);
  }
  return result;
}

uint64_t sub_1000578F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100057914()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100057930()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005794C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100057968()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100057984()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000579A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000579E0()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1000579F0()
{
  unint64_t result = qword_1000D6980;
  if (!qword_1000D6980)
  {
    sub_100006F98(&qword_1000D6978);
    sub_100043D7C(&qword_1000D6380, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.InteractiveNoRemindersView);
    sub_100043D7C(&qword_1000D6988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6980);
  }
  return result;
}

unint64_t sub_100057ACC()
{
  unint64_t result = qword_1000D6990;
  if (!qword_1000D6990)
  {
    sub_100006F98(&qword_1000D6968);
    sub_100009F50(&qword_1000D63A0, &qword_1000D63A8);
    sub_100009F50(&qword_1000D6998, &qword_1000D69A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6990);
  }
  return result;
}

uint64_t sub_100057B90()
{
  uint64_t v1 = type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v8 = (id *)(v6 + v7[9]);
  uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v9 - 1) + 48))(v8, 1, v9))
  {
    uint64_t v19 = v4;
    uint64_t v20 = v0 + v3;
    uint64_t v21 = v0;

    uint64_t v10 = (char *)v8 + v9[6];
    uint64_t v11 = sub_1000ADC28();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    }
    int v13 = (char *)v8 + v9[7];
    uint64_t v14 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

    uint64_t v5 = v20;
    uint64_t v0 = v21;
    uint64_t v4 = v19;
  }
  uint64_t v15 = v3 + v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v6 + v7[18];
  uint64_t v17 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  swift_bridgeObjectRelease();
  sub_10004C8C4(*(void *)(v5 + *(int *)(v1 + 28)), *(unsigned char *)(v5 + *(int *)(v1 + 28) + 8));

  return _swift_deallocObject(v0, v15, v2 | 7);
}

uint64_t sub_100057E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for TTRAnyListWidget.InteractiveVerticalContentView(0) - 8);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v3 + 24);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10003C6CC(a1, a2, v8, v9, v10, a3);
}

uint64_t sub_100057F10()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100057F48(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = sub_10000693C(&qword_1000D63E8);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_100057FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a2)
  {
    char v9 = a8 & 1;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10004C4D4(a7, v9);
    return swift_retain();
  }
  return result;
}

uint64_t sub_100058028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_10004C8C4(a7, a8 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000580AC@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_100058100, a1);
}

uint64_t sub_1000580CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_100058100);
}

unint64_t sub_100058100()
{
  unint64_t result = qword_1000D69B0;
  if (!qword_1000D69B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D69B0);
  }
  return result;
}

uint64_t sub_100058154()
{
  sub_10004C8C4(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

double sub_100058198@<D0>(uint64_t a1@<X8>)
{
  return sub_1000375A8(v1 + 16, a1);
}

uint64_t sub_1000581A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000581D0(uint64_t a1)
{
  return a1;
}

void sub_1000581FC()
{
}

uint64_t type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D6BE8);
}

uint64_t sub_100058228()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100058238(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100058248()
{
  return swift_release();
}

unint64_t sub_100058258()
{
  unint64_t result = qword_1000D6A38;
  if (!qword_1000D6A38)
  {
    sub_100006F98(&qword_1000D6A30);
    sub_100006F98(&qword_1000D6A20);
    sub_100006F98(&qword_1000D6A18);
    type metadata accessor for TTRAnyListWidget.ReminderToggleStyle(255);
    sub_10004F028(&qword_1000D6A40, &qword_1000D6A18, (void (*)(void))sub_1000583F0);
    sub_100043D7C(&qword_1000D6A50, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ReminderToggleStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100043D7C(&qword_1000D6988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6A38);
  }
  return result;
}

unint64_t sub_1000583F0()
{
  unint64_t result = qword_1000D6A48;
  if (!qword_1000D6A48)
  {
    sub_100006F98(&qword_1000D6A10);
    sub_100009F50(&qword_1000D55B8, &qword_1000D55A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6A48);
  }
  return result;
}

uint64_t sub_100058490@<X0>(void *a1@<X8>)
{
  return sub_1000584B0((void (*)(void))sub_100058540, a1);
}

uint64_t sub_1000584B0@<X0>(void (*a1)(void)@<X3>, void *a2@<X8>)
{
  a1();
  uint64_t result = sub_1000AEB38();
  *a2 = v4;
  return result;
}

uint64_t sub_10005850C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041F90(a1, a2, a3, a4, (void (*)(void))sub_100058540);
}

unint64_t sub_100058540()
{
  unint64_t result = qword_1000D6A70;
  if (!qword_1000D6A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6A70);
  }
  return result;
}

uint64_t sub_100058594(uint64_t a1, double (*a2)(void, char *), uint64_t a3)
{
  uint64_t v66 = a2;
  uint64_t v67 = a3;
  uint64_t v71 = (char *)a1;
  uint64_t v3 = sub_10000693C(&qword_1000D6A78);
  __chkstk_darwin(v3 - 8);
  uint64_t v73 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000AE838();
  uint64_t v58 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v69 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = (int *)sub_10000693C(&qword_1000D6AD0);
  uint64_t v6 = __chkstk_darwin(v53);
  uint64_t v68 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v52 - v9;
  __chkstk_darwin(v8);
  uint64_t v65 = (uint64_t *)((char *)&v52 - v11);
  uint64_t v12 = sub_1000AE858();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000693C(&qword_1000D6AB0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000693C(&qword_1000D6AD8);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  id v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = _swiftEmptyArrayStorage;
  sub_1000A7A8C(0, 0, 0);
  sub_100009D6C((uint64_t)v71, (uint64_t)v18, &qword_1000D6AB0);
  uint64_t v64 = (void *)v13;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
  sub_100043D7C(&qword_1000D6A98, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  uint64_t v70 = v15;
  sub_1000AF518();
  uint64_t v23 = *(int *)(v20 + 44);
  *(void *)&v22[v23] = 0;
  uint64_t v24 = &v22[*(int *)(sub_10000693C(&qword_1000D6AA0) + 36)];
  uint64_t v25 = sub_100043D7C(&qword_1000D6AA8, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  uint64_t v26 = *(void *)v24;
  uint64_t v71 = v22;
  uint64_t v27 = v12;
  sub_1000AF698();
  if (v26 == v74[0])
  {
    uint64_t v28 = (uint64_t)v73;
    uint64_t v29 = (uint64_t)v71;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v73, 1, 1, v72);
  }
  else
  {
    uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v64 + 2);
    uint64_t v63 = (void (**)(char *))(v58 + 16);
    uint64_t v61 = (void (**)(char *, uint64_t))(v64 + 1);
    uint64_t v64 = (void *)(v58 + 56);
    uint64_t v59 = v23;
    uint64_t v60 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
    v58 += 32;
    uint64_t v30 = v53;
    uint64_t v29 = (uint64_t)v71;
    uint64_t v57 = v27;
    uint64_t v56 = v10;
    uint64_t v55 = v24;
    uint64_t v54 = v25;
    size_t v31 = (uint64_t (**)(char *, uint64_t, uint64_t))v58;
    while (1)
    {
      size_t v32 = (void (*)(uint64_t *, void))sub_1000AF6B8();
      uint64_t v33 = v72;
      uint64_t v28 = (uint64_t)v73;
      (*v63)(v73);
      v32(v74, 0);
      uint64_t v34 = v70;
      (*v62)(v70, v29, v27);
      sub_1000AF6A8();
      (*v61)(v34, v27);
      uint64_t v35 = (int *)*v64;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v64)(v28, 0, 1, v33);
      if ((*v60)(v28, 1, v33) == 1) {
        break;
      }
      uint64_t v53 = v35;
      uint64_t v36 = *v31;
      uint64_t v37 = v69;
      (*v31)(v69, v28, v33);
      uint64_t v38 = &v68[v30[12]];
      uint64_t v39 = v59;
      uint64_t v40 = *(void *)(v29 + v59);
      uint64_t result = v36(v38, (uint64_t)v37, v33);
      if (__OFADD__(v40, 1))
      {
        __break(1u);
        return result;
      }
      uint64_t v42 = v33;
      *(void *)(v29 + v39) = v40 + 1;
      uint64_t v43 = (uint64_t)v56;
      uint64_t v44 = (char *)v56 + v30[12];
      void *v56 = v40;
      v36(v44, (uint64_t)v38, v42);
      uint64_t v45 = (char *)v65;
      sub_10001D8DC(v43, (uint64_t)v65, &qword_1000D6AD0);
      double v46 = v66(*(void *)v45, &v45[v30[12]]);
      sub_100009EF4((uint64_t)v45, &qword_1000D6AD0);
      uint64_t v47 = v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000A7A8C(0, v47[2] + 1, 1);
        uint64_t v47 = v75;
      }
      id v48 = v55;
      unint64_t v50 = v47[2];
      unint64_t v49 = v47[3];
      uint64_t v27 = v57;
      if (v50 >= v49 >> 1)
      {
        sub_1000A7A8C(v49 > 1, v50 + 1, 1);
        uint64_t v47 = v75;
      }
      void v47[2] = v50 + 1;
      *(double *)&v47[v50 + 4] = v46;
      uint64_t v51 = *(void *)v48;
      uint64_t v29 = (uint64_t)v71;
      sub_1000AF698();
      if (v51 == v74[0])
      {
        uint64_t v28 = (uint64_t)v73;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v53)(v73, 1, 1, v72);
        break;
      }
    }
  }
  sub_100009EF4(v28, &qword_1000D6A78);
  sub_100009EF4(v29, &qword_1000D6AD8);
  return (uint64_t)v75;
}

uint64_t sub_100058CB4(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, double a7)
{
  int v24 = a2;
  int v25 = a4;
  uint64_t v22 = a1;
  double v23 = *(double *)&a3;
  uint64_t v10 = sub_10000693C(&qword_1000D6AB0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AE858();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  v14(v12, a5, v13);
  uint64_t v27 = a6;
  uint64_t v15 = sub_100058594((uint64_t)v12, (double (*)(void, char *))sub_100058F8C, (uint64_t)v26);
  sub_100009EF4((uint64_t)v12, &qword_1000D6AB0);
  uint64_t v28 = v15;
  sub_10000693C(&qword_1000D6AB8);
  sub_100009F50(&qword_1000D6AC0, &qword_1000D6AB8);
  sub_100058F94();
  sub_1000AF548();
  double v16 = v29;
  sub_100043D7C(&qword_1000D6AA8, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_1000AF678();
  sub_1000AF698();
  uint64_t result = sub_1000AF688();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if ((v25 & 1) == 0 && (v24 & 1) == 0 && v23 != INFINITY)
    {
      double v18 = v16 + (double)(result - 1) * a7;
      if (v18 < v23)
      {
        double v29 = v23 - v18;
        uint64_t v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v12, a5, v13);
        __chkstk_darwin(v19);
        *(&v21 - 4) = v15;
        *(&v21 - 3) = (uint64_t)&v29;
        *(&v21 - 2) = v22;
        uint64_t v20 = sub_100058594((uint64_t)v12, (double (*)(void, char *))sub_100058FE8, (uint64_t)(&v21 - 6));
        sub_100009EF4((uint64_t)v12, &qword_1000D6AB0);
        swift_bridgeObjectRelease();
        return v20;
      }
    }
    return v15;
  }
  return result;
}

double sub_100058F8C(char a1, uint64_t a2)
{
  return sub_10003E83C(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_100058F94()
{
  unint64_t result = qword_1000D6AC8;
  if (!qword_1000D6AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6AC8);
  }
  return result;
}

unint64_t sub_100058FE8(unint64_t a1, uint64_t a2)
{
  return sub_10003E8A8(a1, a2, *(void *)(v2 + 16), *(double **)(v2 + 24));
}

uint64_t sub_100058FF4()
{
  return sub_1000AEA88();
}

uint64_t sub_100059018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000435A4(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_100059058()
{
  return sub_1000AEA98();
}

uint64_t sub_10005907C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000435A4(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ContentTransition.Style, (uint64_t (*)(char *))&EnvironmentValues.contentTransitionStyle.setter);
}

unint64_t sub_1000590BC()
{
  unint64_t result = qword_1000D6B10;
  if (!qword_1000D6B10)
  {
    sub_100006F98(&qword_1000D6AF8);
    sub_10005915C();
    sub_100009F50(&qword_1000D6B38, &qword_1000D6B40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B10);
  }
  return result;
}

unint64_t sub_10005915C()
{
  unint64_t result = qword_1000D6B18;
  if (!qword_1000D6B18)
  {
    sub_100006F98(&qword_1000D6AF0);
    sub_1000591FC();
    sub_100009F50(&qword_1000D6B30, &qword_1000D6B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B18);
  }
  return result;
}

unint64_t sub_1000591FC()
{
  unint64_t result = qword_1000D6B20;
  if (!qword_1000D6B20)
  {
    sub_100006F98(&qword_1000D6AE8);
    swift_getOpaqueTypeConformance2();
    sub_100009F50(&qword_1000D6B28, &qword_1000D6B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B20);
  }
  return result;
}

uint64_t sub_1000592D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000AEA58();
  *a1 = result;
  return result;
}

uint64_t sub_100059300()
{
  return sub_1000AEA68();
}

unint64_t sub_10005932C()
{
  unint64_t result = qword_1000D6B70;
  if (!qword_1000D6B70)
  {
    sub_100006F98(&qword_1000D6B60);
    sub_1000593CC();
    sub_100009F50(&qword_1000D5730, &qword_1000D5738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B70);
  }
  return result;
}

unint64_t sub_1000593CC()
{
  unint64_t result = qword_1000D6B78;
  if (!qword_1000D6B78)
  {
    sub_100006F98(&qword_1000D6B80);
    sub_10001C2D0();
    sub_100009F50(&qword_1000D5720, &qword_1000D5728);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B78);
  }
  return result;
}

ValueMetadata *_s27ReminderWithSubtasksFontKeyOMa()
{
  return &_s27ReminderWithSubtasksFontKeyON;
}

ValueMetadata *_s13ShareeFontKeyOMa()
{
  return &_s13ShareeFontKeyON;
}

uint64_t destroy for TTRAnyListWidget.InteractiveListShareeRowView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.InteractiveListShareeRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.InteractiveListShareeRowView()
{
  return &type metadata for TTRAnyListWidget.InteractiveListShareeRowView;
}

uint64_t destroy for TTRAnyListWidget.ListBadge(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for TTRAnyListWidget.ListBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.ListBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.ListBadge(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRAnyListWidget.ListBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.ListBadge(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.ListBadge(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ListBadge()
{
  return &type metadata for TTRAnyListWidget.ListBadge;
}

char *sub_10005992C(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    char v7 = a1;
    uint64_t v8 = a2[1];
    *((void *)a1 + 1) = v8;
    uint64_t v9 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v10 = v9[6];
    id v48 = (char *)a2 + v10;
    __dst = &v7[v10];
    uint64_t v11 = sub_1000ADC28();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    uint64_t v15 = v8;
    if (v13(v48, 1, v11))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v48, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v48, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = v9[7];
    double v18 = &v7[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v9[8];
    uint64_t v22 = *(char **)((char *)a2 + v21);
    *(void *)&v7[v21] = v22;
    *(void *)&v7[v9[9]] = *(char **)((char *)a2 + v9[9]);
    v7[v9[10]] = *((unsigned char *)a2 + v9[10]);
    v7[v9[11]] = *((unsigned char *)a2 + v9[11]);
    uint64_t v23 = a3[6];
    *(void *)&v7[a3[5]] = *(char **)((char *)a2 + a3[5]);
    int v24 = &v7[v23];
    uint64_t v25 = (uint64_t)a2 + v23;
    *(void *)int v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = a3[8];
    v7[a3[7]] = *((unsigned char *)a2 + a3[7]);
    uint64_t v27 = &v7[v26];
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = *v28;
    LOBYTE(v28) = *((unsigned char *)v28 + 8);
    *(void *)uint64_t v27 = v29;
    v27[8] = (char)v28;
    uint64_t v30 = a3[9];
    uint64_t v31 = a3[10];
    size_t v32 = &v7[v30];
    uint64_t v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = *v33;
    LOBYTE(v33) = *((unsigned char *)v33 + 8);
    *(void *)size_t v32 = v34;
    v32[8] = (char)v33;
    uint64_t v35 = &v7[v31];
    uint64_t v36 = (uint64_t *)((char *)a2 + v31);
    uint64_t v37 = *v36;
    LOBYTE(v36) = *((unsigned char *)v36 + 8);
    *(void *)uint64_t v35 = v37;
    v35[8] = (char)v36;
    uint64_t v38 = a3[11];
    uint64_t v39 = a3[12];
    uint64_t v40 = &v7[v38];
    uint64_t v41 = (uint64_t *)((char *)a2 + v38);
    uint64_t v42 = *v41;
    LOBYTE(v41) = *((unsigned char *)v41 + 8);
    *(void *)uint64_t v40 = v42;
    v40[8] = (char)v41;
    uint64_t v43 = &v7[v39];
    uint64_t v44 = (char **)((char *)a2 + v39);
    id v45 = v22;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v46 = sub_1000AF268();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v43, v44, v46);
    }
    else
    {
      *(void *)uint64_t v43 = *v44;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_100059C9C(id *a1, uint64_t a2)
{
  int v4 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v5 = (char *)a1 + v4[6];
  uint64_t v6 = sub_1000ADC28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = (char *)a1 + v4[7];
  uint64_t v9 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = (char *)a1 + *(int *)(a2 + 48);
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000AF268();
    uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
    return v12(v10, v11);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100059E78(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v8 = v7[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  id v14 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v15 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v9, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v16 = v7[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1000ADD48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = v7[8];
  uint64_t v21 = *(void **)(a2 + v20);
  *(void *)((char *)a1 + v20) = v21;
  *(void *)((char *)a1 + v7[9]) = *(void *)(a2 + v7[9]);
  *((unsigned char *)a1 + v7[10]) = *(unsigned char *)(a2 + v7[10]);
  *((unsigned char *)a1 + v7[11]) = *(unsigned char *)(a2 + v7[11]);
  uint64_t v22 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = *(unsigned char *)(v24 + 8);
  uint64_t v25 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  LOBYTE(v27) = *((unsigned char *)v27 + 8);
  *(void *)uint64_t v26 = v28;
  v26[8] = (char)v27;
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = (char *)a1 + v29;
  size_t v32 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v32;
  LOBYTE(v32) = *((unsigned char *)v32 + 8);
  *(void *)uint64_t v31 = v33;
  v31[8] = (char)v32;
  uint64_t v34 = (char *)a1 + v30;
  uint64_t v35 = (uint64_t *)(a2 + v30);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  v34[8] = (char)v35;
  uint64_t v37 = a3[11];
  uint64_t v38 = a3[12];
  uint64_t v39 = (char *)a1 + v37;
  uint64_t v40 = (uint64_t *)(a2 + v37);
  uint64_t v41 = *v40;
  LOBYTE(v40) = *((unsigned char *)v40 + 8);
  *(void *)uint64_t v39 = v41;
  v39[8] = (char)v40;
  uint64_t v42 = (void *)((char *)a1 + v38);
  uint64_t v43 = (void *)(a2 + v38);
  id v44 = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v45 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v42, v43, v45);
  }
  else
  {
    *uint64_t v42 = *v43;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10005A18C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v7 = v5;

  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v9;
  id v10 = v9;

  uint64_t v11 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = v11[6];
  id v13 = (void *)(a1 + v12);
  id v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000ADC28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_10000693C(&qword_1000D4E10);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = v11[7];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = v11[8];
  uint64_t v26 = *(void **)(a1 + v25);
  uint64_t v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  id v28 = v27;

  *(void *)(a1 + v11[9]) = *(void *)(a2 + v11[9]);
  *(unsigned char *)(a1 + v11[10]) = *(unsigned char *)(a2 + v11[10]);
  *(unsigned char *)(a1 + v11[11]) = *(unsigned char *)(a2 + v11[11]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v29 = a3[6];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v32 = *v31;
  *(unsigned char *)(v30 + 8) = *((unsigned char *)v31 + 8);
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v33 = a3[8];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = (_BYTE)v35;
  swift_retain();
  swift_release();
  uint64_t v37 = a3[9];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v40 = *v39;
  LOBYTE(v39) = *((unsigned char *)v39 + 8);
  *(void *)uint64_t v38 = v40;
  *(unsigned char *)(v38 + 8) = (_BYTE)v39;
  swift_retain();
  swift_release();
  uint64_t v41 = a3[10];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v44 = *v43;
  LOBYTE(v43) = *((unsigned char *)v43 + 8);
  *(void *)uint64_t v42 = v44;
  *(unsigned char *)(v42 + 8) = (_BYTE)v43;
  swift_retain();
  swift_release();
  uint64_t v45 = a3[11];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v48 = *v47;
  LOBYTE(v47) = *((unsigned char *)v47 + 8);
  *(void *)uint64_t v46 = v48;
  *(unsigned char *)(v46 + 8) = (_BYTE)v47;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v49 = a3[12];
    unint64_t v50 = (void *)(a1 + v49);
    uint64_t v51 = (void *)(a2 + v49);
    sub_100009EF4(a1 + v49, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v52 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    }
    else
    {
      *unint64_t v50 = *v51;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10005A560(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000ADC28();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D4E10);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = v6[7];
  id v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  uint64_t v17 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  int v18 = (char *)a1 + v17;
  int v19 = (char *)a2 + v17;
  *(void *)int v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v23;
  uint64_t v26 = (char *)a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = (char *)a1 + v24;
  id v28 = (char *)a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  uint64_t v29 = a3[11];
  uint64_t v30 = a3[12];
  uint64_t v31 = (char *)a1 + v29;
  uint64_t v32 = (char *)a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  uint64_t v33 = (char *)a1 + v30;
  uint64_t v34 = (char *)a2 + v30;
  uint64_t v35 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_1000AF268();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  return a1;
}

void *sub_10005A83C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (void *)*a1;
  *a1 = *a2;

  uint64_t v7 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1000ADC28();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v49 = v10;
  LODWORD(v10) = v14(v10, 1, v12);
  int v15 = v14(v11, 1, v12);
  if (v10)
  {
    if (v15)
    {
      size_t v16 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v17 = v49;
LABEL_6:
      memcpy(v17, v11, v16);
      goto LABEL_9;
    }
    (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v49, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v49, 0, 1, v12);
  }
  else
  {
    if (v15)
    {
      (*(void (**)(void *, uint64_t))(v13 + 8))(v49, v12);
      size_t v16 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v17 = v49;
      goto LABEL_6;
    }
    (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v49, v11, v12);
  }
LABEL_9:
  uint64_t v18 = v8[7];
  int v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = v8[8];
  uint64_t v23 = *(void **)((char *)a1 + v22);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);

  *(void *)((char *)a1 + v8[9]) = *(void *)((char *)a2 + v8[9]);
  *((unsigned char *)a1 + v8[10]) = *((unsigned char *)a2 + v8[10]);
  *((unsigned char *)a1 + v8[11]) = *((unsigned char *)a2 + v8[11]);
  uint64_t v24 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  id v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  LOBYTE(v29) = v29[8];
  *(void *)id v28 = v30;
  v28[8] = (char)v29;
  swift_release();
  uint64_t v31 = a3[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)v33;
  LOBYTE(v33) = v33[8];
  *(void *)uint64_t v32 = v34;
  v32[8] = (char)v33;
  swift_release();
  uint64_t v35 = a3[10];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = *(void *)v37;
  LOBYTE(v37) = v37[8];
  *(void *)uint64_t v36 = v38;
  v36[8] = (char)v37;
  swift_release();
  uint64_t v39 = a3[11];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = *(void *)v41;
  LOBYTE(v41) = v41[8];
  *(void *)uint64_t v40 = v42;
  v40[8] = (char)v41;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v43 = a3[12];
    uint64_t v44 = (char *)a1 + v43;
    uint64_t v45 = (char *)a2 + v43;
    sub_100009EF4((uint64_t)a1 + v43, &qword_1000D5E30);
    uint64_t v46 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v47 = sub_1000AF268();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v44, v45, v47);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10005AC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005AC28);
}

uint64_t sub_10005AC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 254)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 48);
    uint64_t v13 = IsVibrantText;
    uint64_t v14 = a1 + *(int *)(a3 + 48);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10005AD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005AD74);
}

uint64_t sub_10005AD74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  else
  {
    uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 56);
    uint64_t v13 = IsVibrantText;
    uint64_t v14 = a1 + *(int *)(a4 + 48);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_10005AE9C()
{
  type metadata accessor for TTRNewWidgetViewModel.Reminder(319);
  if (v0 <= 0x3F)
  {
    sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ReminderVStack.CacheData()
{
  return &type metadata for TTRAnyListWidget.ReminderVStack.CacheData;
}

unint64_t sub_10005AFC4()
{
  unint64_t result = qword_1000D6C40;
  if (!qword_1000D6C40)
  {
    sub_100006F98(&qword_1000D6C48);
    sub_100009F50(&qword_1000D6C50, &qword_1000D6C58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6C40);
  }
  return result;
}

uint64_t sub_10005B064()
{
  return sub_10005B110(&qword_1000D6C60, &qword_1000D6948, &qword_1000D6920, &qword_1000D6950);
}

uint64_t sub_10005B09C()
{
  return sub_100009F50(&qword_1000D6C68, &qword_1000D6C70);
}

uint64_t sub_10005B0D8()
{
  return sub_10005B110(&qword_1000D6C78, &qword_1000D69D0, &qword_1000D69B8, &qword_1000D69D8);
}

uint64_t sub_10005B110(unint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    sub_100006F98(a3);
    sub_100009F50(a4, a3);
    swift_getOpaqueTypeConformance2();
    sub_100043D7C(&qword_1000D6988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005B214()
{
  return sub_10004F028(&qword_1000D6C80, &qword_1000D6C88, (void (*)(void))sub_10005B258);
}

uint64_t sub_10005B258()
{
  return sub_10004F028(&qword_1000D6C90, &qword_1000D6C98, (void (*)(void))sub_10005B288);
}

unint64_t sub_10005B288()
{
  unint64_t result = qword_1000D6CA0;
  if (!qword_1000D6CA0)
  {
    sub_100006F98(&qword_1000D6CA8);
    sub_100009F50(&qword_1000D6CB0, &qword_1000D6CB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6CA0);
  }
  return result;
}

uint64_t sub_10005B328()
{
  return sub_10005DF60(&qword_1000D6CC0, &qword_1000D6CC8, (void (*)(void))sub_100058258, (void (*)(void))sub_10001C2D0);
}

uint64_t sub_10005B378(uint64_t a1)
{
  return sub_100057798(a1, &qword_1000D6AF8, (void (*)(void))sub_1000590BC);
}

unint64_t sub_10005B3B0()
{
  unint64_t result = qword_1000D6CD0;
  if (!qword_1000D6CD0)
  {
    sub_100006F98(&qword_1000D6B58);
    sub_100006F98(&qword_1000D6B48);
    sub_10005E534(&qword_1000D6B88, &qword_1000D6B48, &qword_1000D6B60, (void (*)(void))sub_10005932C);
    swift_getOpaqueTypeConformance2();
    sub_100043D7C(&qword_1000D6988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6CD0);
  }
  return result;
}

uint64_t sub_10005B4C4()
{
  return sub_10004F028(&qword_1000D6CD8, &qword_1000D6CE0, (void (*)(void))sub_10005B508);
}

unint64_t sub_10005B508()
{
  unint64_t result = qword_1000D6CE8;
  if (!qword_1000D6CE8)
  {
    sub_100006F98(&qword_1000D6CF0);
    sub_100009F50(&qword_1000D6CF8, &qword_1000D6D00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6CE8);
  }
  return result;
}

uint64_t sub_10005B5A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005B5C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005B5E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for TTRAnyListWidget.CompletedView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D6EA8);
}

uint64_t sub_10005B61C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003EFCC(*(void ***)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_10005B624()
{
  unint64_t result = qword_1000D6D28;
  if (!qword_1000D6D28)
  {
    sub_100006F98(&qword_1000D6D30);
    sub_100009F50(&qword_1000D6D38, &qword_1000D6D40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6D28);
  }
  return result;
}

uint64_t sub_10005B6C8()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10005B6D8()
{
  unint64_t result = qword_1000D6DA0;
  if (!qword_1000D6DA0)
  {
    sub_100006F98(&qword_1000D6D70);
    sub_100009F50(&qword_1000D6DA8, &qword_1000D6D68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DA0);
  }
  return result;
}

uint64_t type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D6F40);
}

uint64_t sub_10005B798(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for TTRAnyListWidget.ListBadge.GearCorner(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D6FD8);
}

uint64_t type metadata accessor for TTRAnyListWidget.ListBadge.Core(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D7068);
}

id *sub_10005B804(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_10005B830(uint64_t a1)
{
  return a1;
}

unint64_t sub_10005B85C()
{
  unint64_t result = qword_1000D6E28;
  if (!qword_1000D6E28)
  {
    sub_100006F98(&qword_1000D6DF8);
    sub_10005B8FC();
    sub_100009F50(&qword_1000D6E48, &qword_1000D6E18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6E28);
  }
  return result;
}

unint64_t sub_10005B8FC()
{
  unint64_t result = qword_1000D6E30;
  if (!qword_1000D6E30)
  {
    sub_100006F98(&qword_1000D6DF0);
    sub_100043D7C(&qword_1000D6E20, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    sub_100009F50(&qword_1000D6E38, &qword_1000D6E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6E30);
  }
  return result;
}

unsigned char *sub_10005B9CC(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)int v4 = *a2;
    int v4 = (unsigned char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[1];
    char v8 = *((unsigned char *)a2 + 16);
    j__swift_retain();
    *((void *)v4 + 1) = v7;
    v4[16] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    unsigned int v10 = &v4[v9];
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 28);
    int v15 = &v4[v14];
    size_t v16 = (uint64_t *)((char *)a2 + v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10005BB94(uint64_t a1, uint64_t a2)
{
  j__swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000AF268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000AF268();
    char v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10005BCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  j__swift_retain();
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  unsigned int v10 = (void *)(a2 + v8);
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10005BE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  j__swift_retain();
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    unsigned int v10 = (void *)(a2 + v8);
    sub_100009EF4(a1 + v8, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_100009EF4(a1 + v12, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10005BFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000AF268();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1000AF268();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10005C16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v6 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v6;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_100009EF4(a1 + v7, &qword_1000D5E30);
    uint64_t v10 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1000AF268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_100009EF4(a1 + v12, &qword_1000D5E30);
    uint64_t v15 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_1000AF268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10005C334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005C348);
}

uint64_t sub_10005C348(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_10000693C(&qword_1000D5E38);
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = &a1[*(int *)(a3 + 24)];
      uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
      uint64_t v16 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 48);
      uint64_t v17 = IsVibrantText;
      uint64_t v18 = &a1[*(int *)(a3 + 28)];
      return v16(v18, a2, v17);
    }
  }
}

uint64_t sub_10005C478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005C48C);
}

unsigned char *sub_10005C48C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v8 = sub_10000693C(&qword_1000D5E38);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 24)];
      uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
      uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(IsVibrantText - 8) + 56);
      uint64_t v15 = IsVibrantText;
      uint64_t v16 = &v5[*(int *)(a4 + 28)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10005C5B8()
{
  sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_10005C674(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
  }
  return a1;
}

uint64_t sub_10005C7A8(void *a1, uint64_t a2)
{
  return sub_10005CDF8(a1, a2, (void (*)(void))&_swift_bridgeObjectRelease);
}

void *sub_10005C7C0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  swift_bridgeObjectRetain();
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    void *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_10005C8AC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100009EF4((uint64_t)a1 + v6, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

void *sub_10005C9C0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000AF268();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  return a1;
}

void *sub_10005CAB8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100009EF4((uint64_t)a1 + v6, &qword_1000D5E30);
    uint64_t v9 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000AF268();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  return a1;
}

uint64_t sub_10005CBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005CBE4);
}

uint64_t sub_10005CBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005CBFC);
}

void sub_10005CC00()
{
  sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_10005CCC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10005CDE0(void *a1, uint64_t a2)
{
  return sub_10005CDF8(a1, a2, (void (*)(void))&_swift_release);
}

uint64_t sub_10005CDF8(void *a1, uint64_t a2, void (*a3)(void))
{
  a3(*a1);
  uint64_t v5 = (char *)a1 + *(int *)(a2 + 20);
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000AF268();
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10005CEB4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  swift_retain();
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10005CF7C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100009EF4((uint64_t)a1 + v6, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10005D070(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000AF268();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_10005D144(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100009EF4((uint64_t)a1 + v6, &qword_1000D5E30);
    uint64_t v9 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000AF268();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10005D240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005D254);
}

uint64_t sub_10005D258(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000693C(&qword_1000D5E38);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10005D30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005D320);
}

void *sub_10005D324(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000693C(&qword_1000D5E38);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10005D3D0()
{
  sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ListBadge.GearCornerMask()
{
  return &type metadata for TTRAnyListWidget.ListBadge.GearCornerMask;
}

uint64_t sub_10005D498(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v7 = (void *)a2[1];
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = *(int *)(a3 + 32);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    id v11 = v7;
    swift_bridgeObjectRetain();
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10005D5DC(uint64_t a1, uint64_t a2)
{
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000AF268();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10005D6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  swift_retain();
  id v9 = v4;
  swift_bridgeObjectRetain();
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
  }
  else
  {
    void *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10005D790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v7 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v7;
  id v8 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = (void *)(a1 + v9);
    id v11 = (void *)(a2 + v9);
    sub_100009EF4(a1 + v9, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10005D8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1000AF268();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10005D9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 32);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_100009EF4(a1 + v8, &qword_1000D5E30);
    uint64_t v11 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000AF268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10005DAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005DADC);
}

uint64_t sub_10005DADC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000693C(&qword_1000D5E38);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10005DB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005DBA4);
}

void *sub_10005DBA4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000693C(&qword_1000D5E38);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10005DC50()
{
  sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10005DD24()
{
  return sub_100009F50(&qword_1000D70B0, &qword_1000D70B8);
}

uint64_t sub_10005DD60()
{
  return sub_10005B110(&qword_1000D70C0, &qword_1000D70C8, &qword_1000D6DC0, &qword_1000D6DD8);
}

uint64_t sub_10005DD98()
{
  return sub_10004726C(&qword_1000D70D0, &qword_1000D70D8, (void (*)(void))sub_10005DDE8);
}

unint64_t sub_10005DDE8()
{
  unint64_t result = qword_1000D70E0;
  if (!qword_1000D70E0)
  {
    sub_100006F98(&qword_1000D70E8);
    sub_100043D7C(&qword_1000D6E20, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.Core);
    sub_10005B85C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D70E0);
  }
  return result;
}

uint64_t sub_10005DE94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005DEB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005DECC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005DEE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005DF04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D7360);
}

uint64_t type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D73F8);
}

uint64_t sub_10005DF60(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005DFE8()
{
  unint64_t result = qword_1000D7130;
  if (!qword_1000D7130)
  {
    sub_100006F98(&qword_1000D7118);
    sub_100043D7C(&qword_1000D7138, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.EmojiBackground);
    sub_100009F50(&qword_1000D7140, &qword_1000D7148);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7130);
  }
  return result;
}

unint64_t sub_10005E0B8()
{
  unint64_t result = qword_1000D7150;
  if (!qword_1000D7150)
  {
    sub_100006F98(&qword_1000D70F8);
    sub_100043D7C(&qword_1000D7158, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
    sub_100009F50(&qword_1000D7160, &qword_1000D7168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7150);
  }
  return result;
}

unint64_t sub_10005E188()
{
  unint64_t result = qword_1000D7180;
  if (!qword_1000D7180)
  {
    sub_100006F98(&qword_1000D7170);
    sub_10005E240(&qword_1000D7188, &qword_1000D7190);
    sub_100009F50(&qword_1000D5730, &qword_1000D5738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7180);
  }
  return result;
}

uint64_t sub_10005E240(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005E2AC()
{
  return sub_10004F028(&qword_1000D71C0, &qword_1000D71C8, (void (*)(void))sub_10005E2DC);
}

unint64_t sub_10005E2DC()
{
  unint64_t result = qword_1000D71D0;
  if (!qword_1000D71D0)
  {
    sub_100006F98(&qword_1000D71D8);
    sub_10005E240(&qword_1000D71A8, &qword_1000D7198);
    sub_100009F50(&qword_1000D71E0, &qword_1000D71E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D71D0);
  }
  return result;
}

unint64_t sub_10005E394()
{
  unint64_t result = qword_1000D7220;
  if (!qword_1000D7220)
  {
    sub_100006F98(&qword_1000D71F8);
    sub_100006F98(&qword_1000D5718);
    sub_10001DBFC();
    swift_getOpaqueTypeConformance2();
    sub_100009F50(&qword_1000D5730, &qword_1000D5738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7220);
  }
  return result;
}

unint64_t sub_10005E468()
{
  unint64_t result = qword_1000D7228;
  if (!qword_1000D7228)
  {
    sub_100006F98(&qword_1000D7208);
    sub_10005E534(&qword_1000D7230, &qword_1000D7200, &qword_1000D71F8, (void (*)(void))sub_10005E394);
    sub_100009F50(&qword_1000D7238, &qword_1000D56C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7228);
  }
  return result;
}

uint64_t sub_10005E534(unint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    sub_100006F98(a3);
    a4();
    swift_getOpaqueTypeConformance2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005E5E4()
{
  uint64_t v1 = (int *)(type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[7];
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000AF268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10005E6FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for TTRAnyListWidget.ListShareeBadgesView(0) - 8);
  uint64_t v6 = (unint64_t *)(v2
                          + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_100036A18(a1, v6, a2);
}

unint64_t sub_10005E77C()
{
  unint64_t result = qword_1000D7260;
  if (!qword_1000D7260)
  {
    sub_100006F98(&qword_1000D7250);
    sub_10005E7F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7260);
  }
  return result;
}

unint64_t sub_10005E7F8()
{
  unint64_t result = qword_1000D7268;
  if (!qword_1000D7268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7268);
  }
  return result;
}

unint64_t sub_10005E84C()
{
  unint64_t result = qword_1000D7270;
  if (!qword_1000D7270)
  {
    sub_100006F98(&qword_1000D7258);
    sub_10004F028(&qword_1000D7278, &qword_1000D7280, (void (*)(void))sub_10005E918);
    sub_100009F50(&qword_1000D7290, &qword_1000D7298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7270);
  }
  return result;
}

unint64_t sub_10005E918()
{
  unint64_t result = qword_1000D7288;
  if (!qword_1000D7288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7288);
  }
  return result;
}

unint64_t sub_10005E96C()
{
  unint64_t result = qword_1000D72E8;
  if (!qword_1000D72E8)
  {
    sub_100006F98(&qword_1000D72D8);
    sub_100006F98(&qword_1000D72D0);
    sub_100009F50(&qword_1000D72E0, &qword_1000D72D0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D72E8);
  }
  return result;
}

uint64_t sub_10005EA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10005EA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005EA8C);
}

uint64_t sub_10005EA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005EAA4);
}

uint64_t sub_10005EAAC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10005EBCC(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000AF268();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10005EC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  swift_retain();
  sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000AF268();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10005ED54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_100009EF4(a1 + v6, &qword_1000D5E30);
    sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1000AF268();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10005EE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_10000693C(&qword_1000D5E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000AF268();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10005EF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_100009EF4(a1 + v6, &qword_1000D5E30);
    uint64_t v9 = sub_10000693C(&qword_1000D5E30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000AF268();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10005F030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005F044);
}

uint64_t sub_10005F048(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000693C(&qword_1000D5E38);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10005F0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005F110);
}

void *sub_10005F114(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000693C(&qword_1000D5E38);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10005F1C0()
{
  sub_100049B0C(319, (unint64_t *)&unk_1000D5EA8, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);

  return sub_10004C8C4(v2, v3);
}

uint64_t _s24RemindersWidgetExtension16TTRAnyListWidgetV20ListShareeBadgesViewV9BadgeViewVwCP_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 16);
  id v6 = v3;
  sub_10004C4D4(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  char v5 = *(void **)a1;
  *(void *)a1 = *a2;
  id v6 = v4;

  uint64_t v7 = (uint64_t)v2[1];
  LOBYTE(v2) = *((unsigned char *)v2 + 16);
  sub_10004C4D4(v7, (char)v2);
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = (_BYTE)v2;
  sub_10004C8C4(v8, v9);
  return a1;
}

__n128 initializeWithTake for TTRAnyListWidget.ListShareeBadgesView.BadgeView(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10004C8C4(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRAnyListWidget.ListShareeBadgesView.BadgeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAnyListWidget.ListShareeBadgesView.BadgeView()
{
  return &type metadata for TTRAnyListWidget.ListShareeBadgesView.BadgeView;
}

uint64_t sub_10005F480()
{
  return sub_10004726C(&qword_1000D7438, &qword_1000D7440, (void (*)(void))sub_10005F4D0);
}

unint64_t sub_10005F4D0()
{
  unint64_t result = qword_1000D7448;
  if (!qword_1000D7448)
  {
    sub_100006F98(&qword_1000D7450);
    sub_10005DF60(&qword_1000D7128, &qword_1000D7110, (void (*)(void))sub_10005DFE8, (void (*)(void))sub_10005E0B8);
    sub_100043D7C(&qword_1000D7158, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.ListBadge.IconBackground);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7448);
  }
  return result;
}

uint64_t sub_10005F5B4(uint64_t a1)
{
  return sub_100057798(a1, &qword_1000D7208, (void (*)(void))sub_10005E468);
}

unint64_t sub_10005F5EC()
{
  unint64_t result = qword_1000D7458;
  if (!qword_1000D7458)
  {
    sub_100006F98(&qword_1000D72A0);
    sub_100009F50(&qword_1000D7460, &qword_1000D7240);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7458);
  }
  return result;
}

uint64_t sub_10005F68C()
{
  return sub_10004F028(&qword_1000D7468, &qword_1000D72F8, (void (*)(void))sub_10005F6D0);
}

unint64_t sub_10005F6D0()
{
  unint64_t result = qword_1000D7470;
  if (!qword_1000D7470)
  {
    sub_100006F98(&qword_1000D72B0);
    sub_10005F770();
    sub_100009F50(&qword_1000D7480, &qword_1000D72F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7470);
  }
  return result;
}

unint64_t sub_10005F770()
{
  unint64_t result = qword_1000D7478;
  if (!qword_1000D7478)
  {
    sub_100006F98(&qword_1000D72A8);
    sub_10005E96C();
    sub_100009F50(&qword_1000D72E0, &qword_1000D72D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7478);
  }
  return result;
}

uint64_t sub_10005F810()
{
  return sub_10004F028(&qword_1000D7488, &qword_1000D7490, (void (*)(void))sub_10005F854);
}

uint64_t sub_10005F854()
{
  return sub_10004F028(&qword_1000D7498, &qword_1000D74A0, (void (*)(void))sub_10005F884);
}

unint64_t sub_10005F884()
{
  unint64_t result = qword_1000D74A8;
  if (!qword_1000D74A8)
  {
    sub_100006F98(&qword_1000D74B0);
    sub_10005F94C(&qword_1000D74B8, &qword_1000D74C0, &qword_1000D74C8, &qword_1000D74D0);
    sub_100009F50(&qword_1000D74C8, &qword_1000D74D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D74A8);
  }
  return result;
}

uint64_t sub_10005F94C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    sub_100009F50(&qword_1000D72E0, &qword_1000D72D0);
    sub_100009F50(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005FA14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005FA30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005FA4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005FA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100034F44(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10005FA70()
{
  return sub_10004F028(&qword_1000D7510, &qword_1000D74E0, (void (*)(void))sub_10005FAA0);
}

unint64_t sub_10005FAA0()
{
  unint64_t result = qword_1000D7518;
  if (!qword_1000D7518)
  {
    sub_100006F98(&qword_1000D74D8);
    sub_10005F94C(&qword_1000D74F0, &qword_1000D74E8, &qword_1000D74F8, &qword_1000D7500);
    sub_100009F50(&qword_1000D72E0, &qword_1000D72D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7518);
  }
  return result;
}

uint64_t sub_10005FB60()
{
  return sub_10005FB90(&qword_1000D7520, &qword_1000D7508, &qword_1000D74E0, (void (*)(void))sub_10005FA70);
}

uint64_t sub_10005FB90(unint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006F98(a2);
    sub_100006F98(a3);
    a4();
    swift_getOpaqueTypeConformance2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005FC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_10005FC5C()
{
  unint64_t result = qword_1000D7550;
  if (!qword_1000D7550)
  {
    sub_100006F98(&qword_1000D7540);
    sub_100009F50(&qword_1000D72E0, &qword_1000D72D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7550);
  }
  return result;
}

uint64_t sub_10005FCFC()
{
  return sub_10005FB90(&qword_1000D7558, &qword_1000D7548, &qword_1000D7540, (void (*)(void))sub_10005FC5C);
}

uint64_t sub_10005FD2C()
{
  return sub_10005DF60(&qword_1000D75A0, &qword_1000D75A8, (void (*)(void))sub_10005FB60, (void (*)(void))sub_10005FA70);
}

uint64_t sub_10005FD7C()
{
  return sub_10005DF60(&qword_1000D75B0, &qword_1000D75B8, (void (*)(void))sub_10005FCFC, (void (*)(void))sub_10005FC5C);
}

uint64_t sub_10005FDCC()
{
  return sub_10004F028(&qword_1000D75C0, &qword_1000D7590, (void (*)(void))sub_10005FE10);
}

unint64_t sub_10005FE10()
{
  unint64_t result = qword_1000D75C8;
  if (!qword_1000D75C8)
  {
    sub_100006F98(&qword_1000D7568);
    sub_10005FEB0();
    sub_100009F50(&qword_1000D75E8, &qword_1000D75F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D75C8);
  }
  return result;
}

unint64_t sub_10005FEB0()
{
  unint64_t result = qword_1000D75D0;
  if (!qword_1000D75D0)
  {
    sub_100006F98(&qword_1000D7580);
    sub_10004F028(&qword_1000D75D8, &qword_1000D7578, (void (*)(void))sub_10005FF7C);
    sub_100009F50(&qword_1000D5730, &qword_1000D5738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D75D0);
  }
  return result;
}

unint64_t sub_10005FF7C()
{
  unint64_t result = qword_1000D75E0;
  if (!qword_1000D75E0)
  {
    sub_100006F98(&qword_1000D7570);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D75E0);
  }
  return result;
}

uint64_t sub_100060020()
{
  uint64_t v0 = sub_1000AE768();
  sub_10000EFDC(v0, qword_1000D75F8);
  uint64_t v1 = sub_10000EFA4(v0, (uint64_t)qword_1000D75F8);
  if (qword_1000D4888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000EFA4(v0, (uint64_t)qword_1000E1E48);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000600E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v6 = sub_10000693C(&qword_1000D78B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  uint64_t v10 = *(void *)(Configuration - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(Configuration);
  uint64_t v13 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v31 - v14;
  if (qword_1000D4920 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1000AE768();
  sub_10000EFA4(v16, (uint64_t)qword_1000D75F8);
  sub_100074650(a1, (uint64_t)v15, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  uint64_t v17 = sub_1000AE758();
  os_log_type_t v18 = sub_1000AF718();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v33 = a1;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v35 = v4;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v39 = v32;
    uint64_t v34 = v8;
    *(_DWORD *)uint64_t v20 = 136446210;
    v31[1] = v20 + 4;
    sub_100074650((uint64_t)v15, (uint64_t)v13, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    uint64_t v21 = sub_1000AF4B8();
    uint64_t v38 = sub_1000A53D8(v21, v22, &v39);
    uint64_t v8 = v34;
    sub_1000AF808();
    swift_bridgeObjectRelease();
    a1 = v33;
    sub_1000746B8((uint64_t)v15, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRNewWidgetInteractor fetching default list {configuration: %{public}s}", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v35;
    swift_slowDealloc();
  }
  else
  {
    sub_1000746B8((uint64_t)v15, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  }

  sub_100074650(a1, (uint64_t)v13, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v4;
  sub_10007471C((uint64_t)v13, v24 + v23, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v37;
  *(void *)(v25 + 16) = v36;
  *(void *)(v25 + 24) = v26;
  uint64_t v27 = sub_1000AF648();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v8, 1, 1, v27);
  sub_1000AF628();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v28 = sub_1000AF618();
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v28;
  v29[3] = &protocol witness table for MainActor;
  v29[4] = &unk_1000D7AA0;
  v29[5] = v24;
  v29[6] = v4;
  v29[7] = sub_100075C98;
  v29[8] = v25;
  sub_10006C558((uint64_t)v8, (uint64_t)&unk_1000D7AA8, (uint64_t)v29);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10006056C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  uint64_t v4 = sub_1000AE3F8();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v5 = sub_1000AE728();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  uint64_t v6 = sub_10000693C(&qword_1000D7AB0);
  v3[19] = v6;
  v3[20] = *(void *)(v6 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v7 = sub_1000AE458();
  v3[22] = v7;
  v3[23] = *(void *)(v7 - 8);
  v3[24] = swift_task_alloc();
  uint64_t v8 = sub_1000AE678();
  v3[25] = v8;
  v3[26] = *(void *)(v8 - 8);
  v3[27] = swift_task_alloc();
  uint64_t v9 = sub_1000AE5E8();
  v3[28] = v9;
  v3[29] = *(void *)(v9 - 8);
  v3[30] = swift_task_alloc();
  sub_10000693C(&qword_1000D78A0);
  v3[31] = swift_task_alloc();
  uint64_t v10 = sub_1000AE538();
  v3[32] = v10;
  v3[33] = *(void *)(v10 - 8);
  v3[34] = swift_task_alloc();
  return _swift_task_switch(sub_1000608E0, 0, 0);
}

uint64_t sub_1000608E0()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(*(void *)(v0 + 64) + 24);
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 280) = v1;
  id v2 = [v1 fetchDefaultListWithError:v0 + 40];
  NSString v3 = v2;
  *(void *)(v0 + 288) = v2;
  if (*(void *)(v0 + 40))
  {
    id v4 = *(id *)(v0 + 40);
LABEL_3:

    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  if (!v2)
  {
    uint64_t v17 = self;
    NSString v3 = sub_1000AF478();
    id v18 = [v17 internalErrorWithDebugDescription:v3];
    goto LABEL_3;
  }
  if (qword_1000D4920 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1000AE768();
  sub_10000EFA4(v7, (uint64_t)qword_1000D75F8);
  id v8 = v3;
  uint64_t v9 = sub_1000AE758();
  os_log_type_t v10 = sub_1000AF718();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    id v12 = [v8 objectID];
    id v13 = [v12 stringRepresentation];

    uint64_t v14 = sub_1000AF498();
    unint64_t v16 = v15;

    *(void *)(v0 + 48) = sub_1000A53D8(v14, v16, &v26);
    sub_1000AF808();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "TTRNewWidgetInteractor fetched default list {listID: %{public}s}", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v19 = *(void *)(v0 + 256);
  uint64_t v20 = *(void *)(v0 + 264);
  uint64_t v21 = *(void *)(v0 + 248);
  sub_100009D6C(*(void *)(v0 + 64) + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, v21, &qword_1000D78A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
  {
    uint64_t v22 = *(void *)(v0 + 248);
    id v23 = [v8 sortingStyle];
    sub_1000AF738();

    sub_100009EF4(v22, &qword_1000D78A0);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 264) + 32))(*(void *)(v0 + 272), *(void *)(v0 + 248), *(void *)(v0 + 256));
  }
  uint64_t v24 = *(void *)(*(void *)(v0 + 64)
                  + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(void *)(v0 + 296) = v24;
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  *(void *)(v0 + 304) = Configuration;
  *(_DWORD *)(v0 + 320) = *(_DWORD *)(Configuration + 28);
  return _swift_task_switch(sub_100060D8C, v24, 0);
}

uint64_t sub_100060D8C()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 72) + *(int *)(v0 + 320);
  swift_beginAccess();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_100072B78(v4, (uint64_t (*)(void *, uint64_t))sub_1000783EC, v3);
  *(void *)(v0 + 312) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v7 = *(uint64_t **)(v0 + 240);
  uint64_t v9 = *(void *)(v0 + 224);
  if (v6)
  {
    uint64_t v10 = sub_100072E38(v5);
    swift_bridgeObjectRelease();
    uint64_t *v7 = v10;
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v7, *v11, v9);
  return _swift_task_switch(sub_100060F38, 0, 0);
}

uint64_t sub_100060F38()
{
  uint64_t v60 = *(void *)(v0 + 312);
  sub_1000614E8(*(uint64_t **)(v0 + 72), *(void *)(v0 + 240), *(void **)(v0 + 216));
  sub_1000AE398();
  if (v60)
  {
    uint64_t v2 = *(void *)(v0 + 264);
    uint64_t v1 = *(void *)(v0 + 272);
    uint64_t v3 = *(void *)(v0 + 256);
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 224);
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v8 = *(void *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v15 = *(void *)(v0 + 136);
    uint64_t v16 = *(void *)(v0 + 104);
    uint64_t v17 = *(void *)(v0 + 112);
    id v18 = *(uint64_t **)(v0 + 72);
    sub_1000AE6C8();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    sub_1000AE448();
    uint64_t v19 = sub_1000AE718();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v20(v14, v16);
    uint64_t v61 = sub_100072FAC(v19, v18);
    swift_bridgeObjectRelease();
    sub_1000AE448();
    uint64_t v21 = sub_1000AE718();
    uint64_t v59 = v20;
    v20(v15, v16);
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v23 = *(void *)(v0 + 88);
      uint64_t v26 = *(void (**)(void, unint64_t, void))(v23 + 16);
      uint64_t v24 = v23 + 16;
      uint64_t v25 = v26;
      unint64_t v27 = v21 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
      uint64_t v28 = *(void *)(v24 + 56);
      swift_bridgeObjectRetain();
      uint64_t v29 = 0;
      while (1)
      {
        v25(*(void *)(v0 + 96), v27, *(void *)(v0 + 80));
        if ((sub_1000AE3B8() & 1) == 0)
        {
          BOOL v30 = __OFADD__(v29, 1);
          uint64_t v31 = v29 + 1;
          if (v30) {
            __break(1u);
          }
          uint64_t v32 = sub_1000AE3C8();
          BOOL v30 = __OFADD__(v31, v32);
          uint64_t v29 = v31 + v32;
          if (v30) {
            break;
          }
        }
        (*(void (**)(void, void))(v24 - 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
        v27 += v28;
        if (!--v22) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_11:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = 0;
    }
    uint64_t v57 = *(void *)(v0 + 256);
    uint64_t v58 = *(void *)(v0 + 272);
    uint64_t v55 = *(void *)(v0 + 240);
    uint64_t v56 = *(void *)(v0 + 264);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v54 = *(void *)(v0 + 224);
    uint64_t v49 = *(void **)(v0 + 288);
    uint64_t v50 = *(void *)(v0 + 208);
    uint64_t v33 = *(void *)(v0 + 192);
    uint64_t v51 = *(void *)(v0 + 200);
    uint64_t v52 = *(void *)(v0 + 216);
    uint64_t v46 = *(void *)(v0 + 184);
    uint64_t v48 = *(void *)(v0 + 176);
    uint64_t v34 = *(void *)(v0 + 144);
    uint64_t v35 = *(void *)(v0 + 120);
    uint64_t v36 = *(void *)(v0 + 128);
    uint64_t v37 = *(void *)(v0 + 104);
    uint64_t v38 = *(void *)(v0 + 56);
    sub_1000AE448();
    char v39 = sub_1000AE708();
    v59(v36, v37);
    char v47 = v39 & 1 | 0x40;
    uint64_t v45 = sub_1000AE438();
    sub_1000AE448();
    unint64_t v40 = sub_1000AE6E8();
    v59(v34, v37);
    uint64_t v44 = sub_10006173C(v40);
    swift_bridgeObjectRelease();
    sub_1000AE448();
    unint64_t v41 = sub_1000AE6F8();
    v59(v35, v37);
    uint64_t v42 = sub_10006173C(v41);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v33, v48);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v52, v51);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v54);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v58, v57);
    *(void *)uint64_t v38 = v45;
    *(void *)(v38 + 8) = v29;
    *(unsigned char *)(v38 + 16) = v47;
    *(void *)(v38 + 24) = v61;
    *(void *)(v38 + 32) = v44;
    *(void *)(v38 + 40) = v42;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v10();
}

uint64_t sub_1000614E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_1000AE5E8();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *a1;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  int v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == enum case for REMRemindersListDataView.ShowCompleted.after(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
LABEL_11:
    uint64_t v15 = v10;
LABEL_12:
    uint64_t v16 = (uint64_t)a3 + *(int *)(sub_10000693C(&qword_1000D7950) + 48);
    *a3 = v15;
    uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
    sub_100009D6C((uint64_t)a1 + *(int *)(Configuration + 20), v16, &qword_1000D78C8);
    uint64_t v18 = enum case for REMRemindersListDataView.RemindersPrefetch.initialAndDateRange(_:);
    uint64_t v19 = sub_1000AE678();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a3, v18, v19);
  }
  if (v11 == enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v9, v6);
    uint64_t v12 = *v9;
    if ((v12 & 0xC000000000000001) != 0) {
      uint64_t v13 = sub_1000AF868();
    }
    else {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v10 + v13;
    if (!__OFADD__(v10, v13)) {
      goto LABEL_12;
    }
    __break(1u);
  }
  else if (v11 == enum case for REMRemindersListDataView.ShowCompleted.off(_:) {
         || v11 == enum case for REMRemindersListDataView.ShowCompleted.on(_:))
  }
  {
    goto LABEL_11;
  }
  uint64_t result = sub_1000AFA28();
  __break(1u);
  return result;
}

uint64_t sub_10006173C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000A7AAC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = sub_1000AF8D8();
        uint64_t v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000A7AAC(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_1000AE288();
        uint64_t v16 = &protocol witness table for REMReminder;
        *(void *)&long long v14 = v6;
        long long v3[2] = v8 + 1;
        sub_100006A40(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v11 = v3[2];
        unint64_t v12 = v3[3];
        id v13 = v10;
        if (v11 >= v12 >> 1)
        {
          sub_1000A7AAC(v12 > 1, v11 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_1000AE288();
        uint64_t v16 = &protocol witness table for REMReminder;
        *(void *)&long long v14 = v13;
        long long v3[2] = v11 + 1;
        sub_100006A40(&v14, (uint64_t)&v3[5 * v11 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100061908(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v8 = sub_10000693C(&qword_1000D78B8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  uint64_t v11 = *(void *)(Configuration - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(Configuration);
  long long v14 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v40 - v15;
  if (qword_1000D4920 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1000AE768();
  sub_10000EFA4(v17, (uint64_t)qword_1000D75F8);
  sub_100074650(a2, (uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  id v18 = a1;
  uint64_t v19 = sub_1000AE758();
  os_log_type_t v20 = sub_1000AF718();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v42 = v11;
    uint64_t v22 = v21;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v50 = v41;
    *(_DWORD *)uint64_t v22 = 136446466;
    v40[1] = v22 + 4;
    id v23 = [v18 stringRepresentation];
    uint64_t v44 = v10;
    id v24 = v23;
    uint64_t v25 = sub_1000AF498();
    uint64_t v45 = v5;
    uint64_t v26 = v25;
    uint64_t v43 = a2;
    unint64_t v28 = v27;

    uint64_t v49 = sub_1000A53D8(v26, v28, &v50);
    sub_1000AF808();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    sub_100074650((uint64_t)v16, (uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    uint64_t v29 = sub_1000AF4B8();
    uint64_t Configuration = v12;
    uint64_t v49 = sub_1000A53D8(v29, v30, &v50);
    uint64_t v5 = v45;
    a2 = v43;
    sub_1000AF808();
    swift_bridgeObjectRelease();
    uint64_t v10 = v44;
    sub_1000746B8((uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "TTRNewWidgetInteractor fetching list {listID: %{public}s configuration: %{public}s}", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v42;
    swift_slowDealloc();
  }
  else
  {

    sub_1000746B8((uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  }

  sub_100074650(a2, (uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  unint64_t v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v5;
  *(void *)(v32 + 24) = v18;
  sub_10007471C((uint64_t)v14, v32 + v31, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v48;
  *(void *)(v33 + 16) = v47;
  *(void *)(v33 + 24) = v34;
  uint64_t v35 = sub_1000AF648();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v10, 1, 1, v35);
  sub_1000AF628();
  swift_retain_n();
  id v36 = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v37 = sub_1000AF618();
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = v37;
  v38[3] = &protocol witness table for MainActor;
  v38[4] = &unk_1000D7A50;
  v38[5] = v32;
  v38[6] = v5;
  v38[7] = sub_100075C98;
  v38[8] = v33;
  sub_10006C558((uint64_t)v10, (uint64_t)&unk_1000D7A60, (uint64_t)v38);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100061E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_1000AE4E8();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  uint64_t v6 = sub_1000AE3F8();
  v4[14] = v6;
  v4[15] = *(void *)(v6 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v7 = sub_1000AE5D8();
  v4[17] = v7;
  v4[18] = *(void *)(v7 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  uint64_t v8 = sub_1000AE588();
  v4[23] = v8;
  v4[24] = *(void *)(v8 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v9 = sub_1000AE6A8();
  v4[26] = v9;
  v4[27] = *(void *)(v9 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v10 = sub_10000693C(&qword_1000D7A80);
  v4[29] = v10;
  v4[30] = *(void *)(v10 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v11 = sub_1000AE428();
  v4[32] = v11;
  v4[33] = *(void *)(v11 - 8);
  v4[34] = swift_task_alloc();
  uint64_t v12 = sub_1000AE678();
  v4[35] = v12;
  v4[36] = *(void *)(v12 - 8);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  uint64_t v13 = sub_1000AE5E8();
  v4[39] = v13;
  v4[40] = *(void *)(v13 - 8);
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  sub_10000693C(&qword_1000D78A0);
  v4[43] = swift_task_alloc();
  uint64_t v14 = sub_1000AE538();
  v4[44] = v14;
  v4[45] = *(void *)(v14 - 8);
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  return _swift_task_switch(sub_1000622E8, 0, 0);
}

uint64_t sub_1000622E8()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void **)(*(void *)(v0 + 64) + 24);
  *(void *)(v0 + 40) = 0;
  uint64_t v2 = *(void *)(v0 + 72);
  *(void *)(v0 + 384) = v1;
  id v3 = [v1 fetchListWithObjectID:v2 error:v0 + 40];
  *(void *)(v0 + 392) = v3;
  uint64_t v4 = *(void **)(v0 + 40);
  if (v3)
  {
    uint64_t v5 = v3;
    uint64_t v6 = qword_1000D4920;
    id v7 = v4;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1000AE768();
    sub_10000EFA4(v8, (uint64_t)qword_1000D75F8);
    id v9 = v5;
    uint64_t v10 = sub_1000AE758();
    os_log_type_t v11 = sub_1000AF718();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      id v13 = [v9 objectID];
      id v14 = [v13 stringRepresentation];

      uint64_t v15 = sub_1000AF498();
      unint64_t v17 = v16;

      *(void *)(v0 + 48) = sub_1000A53D8(v15, v17, &v28);
      sub_1000AF808();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRNewWidgetInteractor fetched list {listID: %{public}s}", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v21 = *(void *)(v0 + 352);
    uint64_t v22 = *(void *)(v0 + 360);
    uint64_t v23 = *(void *)(v0 + 344);
    sub_100009D6C(*(void *)(v0 + 64) + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, v23, &qword_1000D78A0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1, v21) == 1)
    {
      uint64_t v24 = *(void *)(v0 + 344);
      id v25 = [v9 sortingStyle];
      sub_1000AF738();

      sub_100009EF4(v24, &qword_1000D78A0);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 360) + 32))(*(void *)(v0 + 376), *(void *)(v0 + 344), *(void *)(v0 + 352));
    }
    uint64_t v26 = *(void *)(*(void *)(v0 + 64)
                    + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
    *(void *)(v0 + 400) = v26;
    uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
    *(void *)(v0 + 408) = Configuration;
    *(_DWORD *)(v0 + 424) = *(_DWORD *)(Configuration + 28);
    return _swift_task_switch(sub_1000627A4, v26, 0);
  }
  else
  {
    id v18 = v4;
    sub_1000ADC78();

    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_1000627A4()
{
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 80) + *(int *)(v0 + 424);
  swift_beginAccess();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_100072B78(v4, (uint64_t (*)(void *, uint64_t))sub_1000783EC, v3);
  *(void *)(v0 + 416) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v7 = *(uint64_t **)(v0 + 336);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 320);
  if (v6)
  {
    uint64_t v10 = sub_100072E38(v5);
    swift_bridgeObjectRelease();
    uint64_t *v7 = v10;
    os_log_type_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    os_log_type_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v7, *v11, v8);
  return _swift_task_switch(sub_100062950, 0, 0);
}

uint64_t sub_100062950()
{
  uint64_t v81 = *(void *)(v0 + 408);
  uint64_t v86 = *(void *)(v0 + 416);
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v73 = *(void *)(v0 + 352);
  uint64_t v74 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 320);
  uint64_t v75 = *(void *)(v0 + 328);
  uint64_t v76 = *(void *)(v0 + 312);
  unint64_t v5 = *(void **)(v0 + 304);
  uint64_t v6 = *(void *)(v0 + 288);
  uint64_t v77 = *(void *)(v0 + 296);
  uint64_t v78 = *(void *)(v0 + 280);
  uint64_t v7 = *(void *)(v0 + 192);
  uint64_t v79 = *(void *)(v0 + 200);
  uint64_t v80 = *(void *)(v0 + 184);
  uint64_t v8 = *(uint64_t **)(v0 + 80);
  sub_1000614E8(v8, v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v74, v73);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v75, v3, v76);
  (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))(v77, v5, v78);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v79, (char *)v8 + *(int *)(v81 + 24), v80);
  sub_1000AE698();
  sub_1000AE3A8();
  if (v86)
  {
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v84 = *(void *)(v0 + 352);
    uint64_t v87 = *(void *)(v0 + 376);
    uint64_t v82 = *(void *)(v0 + 336);
    uint64_t v11 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 320);
    uint64_t v12 = *(void *)(v0 + 304);
    uint64_t v14 = *(void *)(v0 + 280);
    uint64_t v13 = *(void *)(v0 + 288);
    uint64_t v15 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 224);
    uint64_t v17 = *(void *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v82, v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v87, v84);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 240);
    uint64_t v19 = *(void *)(v0 + 248);
    uint64_t v21 = *(void *)(v0 + 232);
    uint64_t v22 = *(void *)(v0 + 176);
    uint64_t v23 = *(void *)(v0 + 136);
    uint64_t v24 = *(void *)(v0 + 144);
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));
    sub_1000AE6C8();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    sub_1000AE408();
    uint64_t v25 = sub_1000AE5C8();
    uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v85(v22, v23);
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      uint64_t v27 = *(void *)(v0 + 96);
      uint64_t v30 = *(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 16);
      uint64_t v28 = v27 + 16;
      uint64_t v29 = v30;
      unint64_t v31 = v25 + ((*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64));
      uint64_t v32 = *(void *)(v28 + 56);
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v33 = *(void *)(v0 + 104);
        uint64_t v34 = *(void *)(v0 + 88);
        v29(v33, v31, v34);
        uint64_t v35 = sub_1000AE4D8();
        (*(void (**)(uint64_t, uint64_t))(v28 - 8))(v33, v34);
        sub_10006D410(v35, (uint64_t (*)(void))sub_1000226E4, (uint64_t (*)(void))&type metadata accessor for REMRemindersListDataView.ReminderLite);
        v31 += v32;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v83 = sub_100072FAC((uint64_t)_swiftEmptyArrayStorage, *(uint64_t **)(v0 + 80));
    uint64_t v36 = _swiftEmptyArrayStorage[2];
    if (v36)
    {
      uint64_t v37 = *(void *)(v0 + 120);
      unint64_t v40 = *(void (**)(void, char *, void))(v37 + 16);
      uint64_t v38 = v37 + 16;
      char v39 = v40;
      uint64_t v41 = (char *)_swiftEmptyArrayStorage
          + ((*(unsigned __int8 *)(v38 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 64));
      uint64_t v42 = *(void *)(v38 + 56);
      swift_bridgeObjectRetain();
      uint64_t v43 = 0;
      while (1)
      {
        v39(*(void *)(v0 + 128), v41, *(void *)(v0 + 112));
        if ((sub_1000AE3B8() & 1) == 0)
        {
          BOOL v44 = __OFADD__(v43, 1);
          uint64_t v45 = v43 + 1;
          if (v44) {
            __break(1u);
          }
          uint64_t v46 = sub_1000AE3C8();
          BOOL v44 = __OFADD__(v45, v46);
          uint64_t v43 = v45 + v46;
          if (v44) {
            break;
          }
        }
        (*(void (**)(void, void))(v38 - 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
        v41 += v42;
        if (!--v36) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v43 = 0;
    }
    uint64_t v72 = *(void *)(v0 + 376);
    uint64_t v70 = *(void *)(v0 + 360);
    uint64_t v71 = *(void *)(v0 + 352);
    uint64_t v67 = *(void *)(v0 + 320);
    uint64_t v68 = *(void *)(v0 + 312);
    uint64_t v69 = *(void *)(v0 + 336);
    uint64_t v65 = *(void **)(v0 + 392);
    uint64_t v66 = *(void *)(v0 + 304);
    uint64_t v47 = *(void *)(v0 + 272);
    uint64_t v63 = *(void *)(v0 + 288);
    uint64_t v64 = *(void *)(v0 + 280);
    uint64_t v61 = *(void *)(v0 + 264);
    uint64_t v62 = *(void *)(v0 + 256);
    uint64_t v48 = *(void *)(v0 + 168);
    uint64_t v49 = *(void *)(v0 + 152);
    uint64_t v50 = *(void *)(v0 + 160);
    uint64_t v51 = *(void *)(v0 + 136);
    uint64_t v52 = *(void *)(v0 + 56);
    sub_1000AE408();
    char v53 = sub_1000AE5B8();
    v85(v48, v51);
    char v60 = v53 & 1 | 0x40;
    uint64_t v59 = sub_1000AE418();
    sub_1000AE408();
    unint64_t v54 = sub_1000AE598();
    v85(v50, v51);
    uint64_t v58 = sub_10006173C(v54);
    swift_bridgeObjectRelease();
    sub_1000AE408();
    unint64_t v55 = sub_1000AE5A8();
    v85(v49, v51);
    uint64_t v56 = sub_10006173C(v55);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v47, v62);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v66, v64);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v69, v68);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v72, v71);
    *(void *)uint64_t v52 = v59;
    *(void *)(v52 + 8) = v43;
    *(unsigned char *)(v52 + 16) = v60;
    *(void *)(v52 + 24) = v83;
    *(void *)(v52 + 32) = v58;
    *(void *)(v52 + 40) = v56;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_100063148(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v8 = sub_10000693C(&qword_1000D78B8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  uint64_t v11 = *(void *)(Configuration - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(Configuration);
  uint64_t v14 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v40 - v15;
  if (qword_1000D4920 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1000AE768();
  sub_10000EFA4(v17, (uint64_t)qword_1000D75F8);
  sub_100074650(a2, (uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  id v18 = a1;
  uint64_t v19 = sub_1000AE758();
  os_log_type_t v20 = sub_1000AF718();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v42 = v11;
    uint64_t v22 = v21;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v50 = v41;
    *(_DWORD *)uint64_t v22 = 136446466;
    v40[1] = v22 + 4;
    id v23 = [v18 stringRepresentation];
    BOOL v44 = v10;
    id v24 = v23;
    uint64_t v25 = sub_1000AF498();
    uint64_t v45 = v5;
    uint64_t v26 = v25;
    uint64_t v43 = a2;
    unint64_t v28 = v27;

    uint64_t v49 = sub_1000A53D8(v26, v28, &v50);
    sub_1000AF808();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    sub_100074650((uint64_t)v16, (uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    uint64_t v29 = sub_1000AF4B8();
    uint64_t Configuration = v12;
    uint64_t v49 = sub_1000A53D8(v29, v30, &v50);
    uint64_t v5 = v45;
    a2 = v43;
    sub_1000AF808();
    swift_bridgeObjectRelease();
    uint64_t v10 = v44;
    sub_1000746B8((uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "TTRNewWidgetInteractor fetching custom smart list {customSmartListID: %{public}s configuration: %{public}s}", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v42;
    swift_slowDealloc();
  }
  else
  {

    sub_1000746B8((uint64_t)v16, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  }

  sub_100074650(a2, (uint64_t)v14, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  unint64_t v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v5;
  *(void *)(v32 + 24) = v18;
  sub_10007471C((uint64_t)v14, v32 + v31, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v48;
  *(void *)(v33 + 16) = v47;
  *(void *)(v33 + 24) = v34;
  uint64_t v35 = sub_1000AF648();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v10, 1, 1, v35);
  sub_1000AF628();
  swift_retain_n();
  id v36 = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v37 = sub_1000AF618();
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = v37;
  v38[3] = &protocol witness table for MainActor;
  v38[4] = &unk_1000D7AC0;
  v38[5] = v32;
  v38[6] = v5;
  v38[7] = sub_1000760F0;
  v38[8] = v33;
  sub_10006C558((uint64_t)v10, (uint64_t)&unk_1000D7AD0, (uint64_t)v38);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100063670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_1000AE3F8();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  uint64_t v6 = sub_1000AE728();
  v4[14] = v6;
  v4[15] = *(void *)(v6 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v7 = sub_1000AE588();
  v4[20] = v7;
  v4[21] = *(void *)(v7 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v8 = sub_10000693C(qword_1000D7AF0);
  v4[23] = v8;
  v4[24] = *(void *)(v8 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v9 = sub_1000AE378();
  v4[26] = v9;
  v4[27] = *(void *)(v9 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v10 = sub_1000AE678();
  v4[29] = v10;
  v4[30] = *(void *)(v10 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v11 = sub_1000AE5E8();
  v4[32] = v11;
  v4[33] = *(void *)(v11 - 8);
  v4[34] = swift_task_alloc();
  sub_10000693C(&qword_1000D78A0);
  v4[35] = swift_task_alloc();
  uint64_t v12 = sub_1000AE538();
  v4[36] = v12;
  v4[37] = *(void *)(v12 - 8);
  v4[38] = swift_task_alloc();
  return _swift_task_switch(sub_100063A40, 0, 0);
}

uint64_t sub_100063A40()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void **)(*(void *)(v0 + 64) + 24);
  *(void *)(v0 + 40) = 0;
  uint64_t v2 = *(void *)(v0 + 72);
  *(void *)(v0 + 312) = v1;
  id v3 = [v1 fetchCustomSmartListWithObjectID:v2 error:v0 + 40];
  *(void *)(v0 + 320) = v3;
  uint64_t v4 = *(void **)(v0 + 40);
  if (v3)
  {
    uint64_t v5 = v3;
    uint64_t v6 = qword_1000D4920;
    id v7 = v4;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1000AE768();
    sub_10000EFA4(v8, (uint64_t)qword_1000D75F8);
    id v9 = v5;
    uint64_t v10 = sub_1000AE758();
    os_log_type_t v11 = sub_1000AF718();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      id v13 = [v9 objectID];
      id v14 = [v13 stringRepresentation];

      uint64_t v15 = sub_1000AF498();
      unint64_t v17 = v16;

      *(void *)(v0 + 48) = sub_1000A53D8(v15, v17, &v27);
      sub_1000AF808();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRNewWidgetInteractor fetched custom smart list {listID: %{public}s}", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v21 = *(void *)(v0 + 288);
    uint64_t v22 = *(void *)(v0 + 296);
    uint64_t v23 = *(void *)(v0 + 280);
    sub_100009D6C(*(void *)(v0 + 64) + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, v23, &qword_1000D78A0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1, v21) == 1)
    {
      uint64_t v24 = *(void *)(v0 + 280);
      id v25 = [v9 sortingStyle];
      sub_1000AF738();

      sub_100009EF4(v24, &qword_1000D78A0);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 296) + 32))(*(void *)(v0 + 304), *(void *)(v0 + 280), *(void *)(v0 + 288));
    }
    uint64_t v26 = *(void *)(*(void *)(v0 + 64)
                    + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
    *(void *)(v0 + 328) = v26;
    *(_DWORD *)(v0 + 344) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
    return _swift_task_switch(sub_100063EB0, v26, 0);
  }
  else
  {
    id v18 = v4;
    sub_1000ADC78();

    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_100063EB0()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 80) + *(int *)(v0 + 344);
  swift_beginAccess();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_100072B78(v4, (uint64_t (*)(void *, uint64_t))sub_1000783EC, v3);
  *(void *)(v0 + 336) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = *(void *)(v0 + 264);
  id v7 = *(uint64_t **)(v0 + 272);
  uint64_t v9 = *(void *)(v0 + 256);
  if (v6)
  {
    uint64_t v10 = sub_100072E38(v5);
    swift_bridgeObjectRelease();
    uint64_t *v7 = v10;
    os_log_type_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    os_log_type_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v7, *v11, v9);
  return _swift_task_switch(sub_10006405C, 0, 0);
}

uint64_t sub_10006405C()
{
  uint64_t v65 = *(void *)(v0 + 336);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  sub_1000614E8(*(uint64_t **)(v0 + 80), *(void *)(v0 + 272), *(void **)(v0 + 248));
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v2, enum case for REMRemindersListDataView.FetchSubtasks.count(_:), v3);
  sub_1000AE388();
  if (v65)
  {
    uint64_t v4 = *(void *)(v0 + 296);
    uint64_t v63 = *(void *)(v0 + 288);
    uint64_t v66 = *(void *)(v0 + 304);
    uint64_t v5 = *(void *)(v0 + 264);
    uint64_t v62 = *(void *)(v0 + 272);
    uint64_t v7 = *(void *)(v0 + 248);
    uint64_t v6 = *(void *)(v0 + 256);
    uint64_t v9 = *(void *)(v0 + 232);
    uint64_t v8 = *(void *)(v0 + 240);
    uint64_t v10 = *(void *)(v0 + 168);
    uint64_t v11 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v62, v6);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v66, v63);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v17 = *(void *)(v0 + 144);
    uint64_t v18 = *(void *)(v0 + 152);
    uint64_t v19 = *(void *)(v0 + 112);
    uint64_t v20 = *(void *)(v0 + 120);
    uint64_t v21 = *(uint64_t **)(v0 + 80);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    sub_1000AE6C8();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    sub_1000AE368();
    uint64_t v22 = sub_1000AE718();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v23(v18, v19);
    uint64_t v64 = sub_100072FAC(v22, v21);
    swift_bridgeObjectRelease();
    sub_1000AE368();
    uint64_t v24 = sub_1000AE718();
    uint64_t v61 = v23;
    v23(v17, v19);
    uint64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      uint64_t v26 = *(void *)(v0 + 96);
      uint64_t v29 = *(void (**)(void, unint64_t, void))(v26 + 16);
      uint64_t v27 = v26 + 16;
      uint64_t v28 = v29;
      unint64_t v30 = v24 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
      uint64_t v31 = *(void *)(v27 + 56);
      swift_bridgeObjectRetain();
      uint64_t v32 = 0;
      while (1)
      {
        v28(*(void *)(v0 + 104), v30, *(void *)(v0 + 88));
        if ((sub_1000AE3B8() & 1) == 0)
        {
          BOOL v33 = __OFADD__(v32, 1);
          uint64_t v34 = v32 + 1;
          if (v33) {
            __break(1u);
          }
          uint64_t v35 = sub_1000AE3C8();
          BOOL v33 = __OFADD__(v34, v35);
          uint64_t v32 = v34 + v35;
          if (v33) {
            break;
          }
        }
        (*(void (**)(void, void))(v27 - 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
        v30 += v31;
        if (!--v25) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_11:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = 0;
    }
    uint64_t v59 = *(void *)(v0 + 288);
    uint64_t v60 = *(void *)(v0 + 304);
    uint64_t v57 = *(void *)(v0 + 272);
    uint64_t v58 = *(void *)(v0 + 296);
    uint64_t v55 = *(void *)(v0 + 264);
    uint64_t v56 = *(void *)(v0 + 256);
    uint64_t v51 = *(void **)(v0 + 320);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v36 = *(void *)(v0 + 224);
    uint64_t v53 = *(void *)(v0 + 232);
    uint64_t v54 = *(void *)(v0 + 248);
    uint64_t v48 = *(void *)(v0 + 216);
    uint64_t v50 = *(void *)(v0 + 208);
    uint64_t v37 = *(void *)(v0 + 152);
    uint64_t v38 = *(void *)(v0 + 136);
    uint64_t v67 = *(void *)(v0 + 128);
    uint64_t v39 = *(void *)(v0 + 112);
    uint64_t v40 = *(void *)(v0 + 56);
    sub_1000AE368();
    char v41 = sub_1000AE708();
    v61(v38, v39);
    char v49 = v41 & 1 | 0x40;
    uint64_t v47 = sub_1000AE358();
    sub_1000AE368();
    unint64_t v42 = sub_1000AE6E8();
    v61(v37, v39);
    uint64_t v46 = sub_10006173C(v42);
    swift_bridgeObjectRelease();
    sub_1000AE368();
    unint64_t v43 = sub_1000AE6F8();
    v61(v67, v39);
    uint64_t v44 = sub_10006173C(v43);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v36, v50);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v54, v53);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v57, v56);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v60, v59);
    *(void *)uint64_t v40 = v47;
    *(void *)(v40 + 8) = v32;
    *(unsigned char *)(v40 + 16) = v49;
    *(void *)(v40 + 24) = v64;
    *(void *)(v40 + 32) = v46;
    *(void *)(v40 + 40) = v44;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v13();
}

uint64_t sub_100064690(void (*a1)(char *, uint64_t), uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v125 = a3;
  uint64_t v126 = a4;
  uint64_t v8 = sub_10000693C(&qword_1000D78B8);
  __chkstk_darwin(v8 - 8);
  char v123 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  uint64_t v121 = *(void *)(Configuration - 8);
  uint64_t v10 = __chkstk_darwin(Configuration);
  uint64_t v128 = (uint64_t)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = v11;
  __chkstk_darwin(v10);
  uint64_t v130 = (uint64_t)&v112 - v12;
  uint64_t v13 = sub_10000693C(&qword_1000D78A0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AE538();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v129 = (char *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v112 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v112 - v24;
  uint64_t v118 = v26;
  __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v112 - v27;
  uint64_t v124 = v5;
  sub_100009D6C(v5 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, (uint64_t)v15, &qword_1000D78A0);
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  uint64_t v131 = a1;
  if (v29 == 1)
  {
    sub_100009EF4((uint64_t)v15, &qword_1000D78A0);
    sub_1000ADFF8();
    int v30 = 1 << (char)a1;
    uint64_t v32 = v129;
    uint64_t v31 = v130;
    if ((v30 & 0x66) == 0)
    {
      BOOL v33 = (void *)sub_1000ADFE8();
      if (v33)
      {
        uint64_t v34 = v33;
        id v35 = [v33 sortingStyle];
        sub_1000AF738();

        uint64_t v31 = v130;
        (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v16);
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v25, v22, v16);
      }
    }
    char v119 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v119(v28, v25, v16);
  }
  else
  {
    char v119 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v119(v28, v15, v16);
    uint64_t v32 = v129;
    uint64_t v31 = v130;
  }
  uint64_t v120 = v22;
  char v36 = (char)v131;
  if (qword_1000D4920 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1000AE768();
  sub_10000EFA4(v37, (uint64_t)qword_1000D75F8);
  uint64_t v127 = a2;
  sub_100074650(a2, v31, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  char v117 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v117(v32, v28, v16);
  uint64_t v38 = v31;
  uint64_t v39 = sub_1000AE758();
  os_log_type_t v40 = sub_1000AF718();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v113 = v28;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v112 = swift_slowAlloc();
    uint64_t v133 = v112;
    *(_DWORD *)uint64_t v41 = 136315650;
    unint64_t v42 = 0xE500000000000000;
    uint64_t v43 = 0x7961646F74;
    uint64_t v114 = v17;
    uint64_t v115 = v16;
    switch(v36)
    {
      case 1:
        uint64_t v43 = 0x656C756465686373;
        goto LABEL_18;
      case 2:
        unint64_t v42 = 0xE300000000000000;
        uint64_t v43 = 7105633;
        break;
      case 3:
        unint64_t v42 = 0xE700000000000000;
        uint64_t v43 = 0x64656767616C66;
        break;
      case 4:
        unint64_t v42 = 0xE800000000000000;
        uint64_t v43 = 0x64656E6769737361;
        break;
      case 5:
        unint64_t v42 = 0xEF737070416E4964;
        uint64_t v43 = 0x6E756F4669726973;
        break;
      case 6:
        uint64_t v43 = 0x6574656C706D6F63;
LABEL_18:
        unint64_t v42 = 0xE900000000000064;
        break;
      default:
        break;
    }
    uint64_t v132 = sub_1000A53D8(v43, v42, &v133);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    uint64_t v46 = v130;
    sub_100074650(v130, v128, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    uint64_t v47 = sub_1000AF4B8();
    uint64_t v132 = sub_1000A53D8(v47, v48, &v133);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    sub_1000746B8(v46, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    *(_WORD *)(v41 + 22) = 2080;
    char v49 = v129;
    uint64_t v50 = sub_1000AE528();
    uint64_t v132 = sub_1000A53D8(v50, v51, &v133);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    uint64_t v17 = v114;
    uint64_t v45 = *(void (**)(char *, uint64_t))(v114 + 8);
    uint64_t v52 = v49;
    uint64_t v16 = v115;
    v45(v52, v115);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "TTRNewWidgetInteractor fetching pre-defined smart list: %s configuration %s sortingStyle: %s", (uint8_t *)v41, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v28 = v113;
    char v36 = (char)v131;
  }
  else
  {
    sub_1000746B8(v38, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    uint64_t v44 = v32;
    uint64_t v45 = *(void (**)(char *, uint64_t))(v17 + 8);
    v45(v44, v16);
  }
  switch(v36)
  {
    case 0:
      uint64_t v53 = v128;
      sub_100074650(v127, v128, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v131 = v45;
      uint64_t v54 = v120;
      v117(v120, v28, v16);
      unint64_t v55 = (*(unsigned __int8 *)(v121 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
      unint64_t v56 = (v122 + *(unsigned __int8 *)(v17 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v57 = swift_allocObject();
      uint64_t v58 = v124;
      *(void *)(v57 + 16) = v124;
      sub_10007471C(v53, v57 + v55, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v59 = v54;
      uint64_t v45 = v131;
      v119((char *)(v57 + v56), v59, v16);
      uint64_t v60 = swift_allocObject();
      uint64_t v61 = v126;
      *(void *)(v60 + 16) = v125;
      *(void *)(v60 + 24) = v61;
      uint64_t v62 = sub_1000AF648();
      uint64_t v63 = (uint64_t)v123;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v123, 1, 1, v62);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v64 = sub_1000AF618();
      uint64_t v65 = (void *)swift_allocObject();
      v65[2] = v64;
      v65[3] = &protocol witness table for MainActor;
      v65[4] = &unk_1000D7A38;
      v65[5] = v57;
      v65[6] = v58;
      v65[7] = sub_1000748CC;
      v65[8] = v60;
      uint64_t v66 = &unk_1000D7A40;
      goto LABEL_26;
    case 1:
      uint64_t v67 = v128;
      sub_100074650(v127, v128, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      unint64_t v68 = (*(unsigned __int8 *)(v121 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
      uint64_t v69 = swift_allocObject();
      uint64_t v70 = v124;
      *(void *)(v69 + 16) = v124;
      sub_10007471C(v67, v69 + v68, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v71 = swift_allocObject();
      uint64_t v72 = v126;
      *(void *)(v71 + 16) = v125;
      *(void *)(v71 + 24) = v72;
      uint64_t v73 = sub_1000AF648();
      uint64_t v63 = (uint64_t)v123;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v123, 1, 1, v73);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v74 = sub_1000AF618();
      uint64_t v65 = (void *)swift_allocObject();
      v65[2] = v74;
      v65[3] = &protocol witness table for MainActor;
      v65[4] = &unk_1000D7A18;
      v65[5] = v69;
      v65[6] = v70;
      v65[7] = sub_1000748CC;
      v65[8] = v71;
      uint64_t v66 = &unk_1000D7A20;
      goto LABEL_26;
    case 2:
      uint64_t v75 = v128;
      sub_100074650(v127, v128, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v131 = v45;
      uint64_t v76 = v120;
      v117(v120, v28, v16);
      unint64_t v77 = (*(unsigned __int8 *)(v121 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
      unint64_t v78 = (v122 + *(unsigned __int8 *)(v17 + 80) + v77) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v79 = swift_allocObject();
      uint64_t v80 = v124;
      *(void *)(v79 + 16) = v124;
      sub_10007471C(v75, v79 + v77, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v81 = v76;
      uint64_t v45 = v131;
      v119((char *)(v79 + v78), v81, v16);
      uint64_t v82 = swift_allocObject();
      uint64_t v83 = v126;
      *(void *)(v82 + 16) = v125;
      *(void *)(v82 + 24) = v83;
      uint64_t v84 = sub_1000AF648();
      uint64_t v63 = (uint64_t)v123;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v123, 1, 1, v84);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v85 = sub_1000AF618();
      uint64_t v65 = (void *)swift_allocObject();
      v65[2] = v85;
      v65[3] = &protocol witness table for MainActor;
      v65[4] = &unk_1000D7A08;
      v65[5] = v79;
      v65[6] = v80;
      v65[7] = sub_1000748CC;
      v65[8] = v82;
      uint64_t v66 = &unk_1000D7A10;
      goto LABEL_26;
    case 3:
      uint64_t v86 = v128;
      sub_100074650(v127, v128, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v131 = v45;
      uint64_t v87 = v120;
      v117(v120, v28, v16);
      unint64_t v88 = (*(unsigned __int8 *)(v121 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
      unint64_t v89 = (v122 + *(unsigned __int8 *)(v17 + 80) + v88) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v90 = swift_allocObject();
      uint64_t v91 = v124;
      *(void *)(v90 + 16) = v124;
      sub_10007471C(v86, v90 + v88, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v92 = v87;
      uint64_t v45 = v131;
      v119((char *)(v90 + v89), v92, v16);
      uint64_t v93 = swift_allocObject();
      uint64_t v94 = v126;
      *(void *)(v93 + 16) = v125;
      *(void *)(v93 + 24) = v94;
      uint64_t v95 = sub_1000AF648();
      uint64_t v63 = (uint64_t)v123;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v123, 1, 1, v95);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v96 = sub_1000AF618();
      uint64_t v65 = (void *)swift_allocObject();
      v65[2] = v96;
      v65[3] = &protocol witness table for MainActor;
      v65[4] = &unk_1000D7A28;
      v65[5] = v90;
      v65[6] = v91;
      v65[7] = sub_1000748CC;
      v65[8] = v93;
      uint64_t v66 = &unk_1000D7A30;
      goto LABEL_26;
    case 4:
      uint64_t v97 = v128;
      sub_100074650(v127, v128, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v131 = v45;
      char v98 = v120;
      v117(v120, v28, v16);
      unint64_t v99 = (*(unsigned __int8 *)(v121 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
      unint64_t v100 = (v122 + *(unsigned __int8 *)(v17 + 80) + v99) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v101 = swift_allocObject();
      uint64_t v102 = v124;
      *(void *)(v101 + 16) = v124;
      sub_10007471C(v97, v101 + v99, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v103 = v98;
      uint64_t v45 = v131;
      v119((char *)(v101 + v100), v103, v16);
      uint64_t v104 = swift_allocObject();
      uint64_t v105 = v126;
      *(void *)(v104 + 16) = v125;
      *(void *)(v104 + 24) = v105;
      uint64_t v106 = sub_1000AF648();
      uint64_t v63 = (uint64_t)v123;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v123, 1, 1, v106);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v107 = sub_1000AF618();
      uint64_t v65 = (void *)swift_allocObject();
      v65[2] = v107;
      v65[3] = &protocol witness table for MainActor;
      v65[4] = &unk_1000D79F8;
      v65[5] = v101;
      v65[6] = v102;
      v65[7] = sub_1000748CC;
      v65[8] = v104;
      uint64_t v66 = &unk_1000D7A00;
LABEL_26:
      sub_10006C558(v63, (uint64_t)v66, (uint64_t)v65);
      swift_release();
      swift_release();
      swift_release();
      break;
    case 5:
    case 6:
      uint64_t v108 = self;
      NSString v109 = sub_1000AF478();
      id v110 = [v108 internalErrorWithDebugDescription:v109];

      uint64_t v133 = (uint64_t)v110;
      long long v134 = 0u;
      long long v135 = 0u;
      char v136 = 1;
      v125(&v133);

      break;
    default:
      JUMPOUT(0);
  }
  return ((uint64_t (*)(char *, uint64_t))v45)(v28, v16);
}

uint64_t sub_1000657F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_1000AE3F8();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_1000ADF08();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_10000693C(&qword_1000D7948);
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v8 = sub_1000AE658();
  v4[18] = v8;
  v4[19] = *(void *)(v8 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v9 = sub_1000AE588();
  v4[21] = v9;
  v4[22] = *(void *)(v9 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v10 = sub_1000AE538();
  v4[24] = v10;
  v4[25] = *(void *)(v10 - 8);
  v4[26] = swift_task_alloc();
  uint64_t v11 = sub_1000AE6A8();
  v4[27] = v11;
  v4[28] = *(void *)(v11 - 8);
  v4[29] = swift_task_alloc();
  uint64_t v12 = sub_1000AE678();
  v4[30] = v12;
  v4[31] = *(void *)(v12 - 8);
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  uint64_t v13 = sub_1000AE5E8();
  v4[34] = v13;
  v4[35] = *(void *)(v13 - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  return _swift_task_switch(sub_100065BBC, 0, 0);
}

uint64_t sub_100065BBC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(void *)(v0 + 304) = v1;
  *(_DWORD *)(v0 + 320) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return _swift_task_switch(sub_100065C40, v1, 0);
}

uint64_t sub_100065C40()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 56) + *(int *)(v0 + 320);
  swift_beginAccess();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_100072B78(v4, (uint64_t (*)(void *, uint64_t))sub_1000750E0, v3);
  *(void *)(v0 + 312) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = *(uint64_t **)(v0 + 296);
  uint64_t v8 = *(void *)(v0 + 272);
  uint64_t v9 = *(void *)(v0 + 280);
  if (v6)
  {
    uint64_t v10 = sub_100072E38(v5);
    swift_bridgeObjectRelease();
    uint64_t *v7 = v10;
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v7, *v11, v8);
  return _swift_task_switch(sub_100065DC0, 0, 0);
}

uint64_t sub_100065DC0()
{
  uint64_t v59 = *(void *)(v0 + 312);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v50 = *(void *)(v0 + 288);
  uint64_t v52 = *(void *)(v0 + 272);
  uint64_t v3 = *(void **)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v55 = *(void *)(v0 + 256);
  uint64_t v56 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v47 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v57 = *(void *)(v0 + 184);
  uint64_t v58 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 64);
  sub_1000614E8(*(uint64_t **)(v0 + 56), v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v47);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v50, v1, v52);
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 16))(v55, v3, v56);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v57, enum case for REMRemindersListDataView.FetchSubtasks.count(_:), v58);
  sub_1000AE698();
  sub_1000ADEF8();
  sub_1000AE688();
  if (v59)
  {
    uint64_t v9 = *(void *)(v0 + 296);
    uint64_t v10 = *(void *)(v0 + 280);
    uint64_t v53 = *(void *)(v0 + 272);
    uint64_t v11 = *(void *)(v0 + 264);
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v13 = *(void *)(v0 + 248);
    uint64_t v14 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 232);
    uint64_t v16 = *(void *)(v0 + 216);
    (*(void (**)(void))(*(void *)(v0 + 104) + 8))();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v53);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 128);
    uint64_t v18 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 120);
    (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
    sub_1000AE6C8();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    uint64_t v21 = sub_1000AE618();
    uint64_t v22 = sub_1000AE628();
    swift_bridgeObjectRetain();
    sub_10006D410(v22, (uint64_t (*)(void))sub_1000226E4, (uint64_t (*)(void))&type metadata accessor for REMRemindersListDataView.ReminderLite);
    uint64_t v23 = *(void *)(v21 + 16);
    uint64_t v60 = v21;
    if (v23)
    {
      uint64_t v24 = *(void *)(v0 + 80);
      uint64_t v27 = *(void (**)(void, unint64_t, void))(v24 + 16);
      uint64_t v25 = v24 + 16;
      uint64_t v26 = v27;
      unint64_t v28 = v21 + ((*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64));
      uint64_t v29 = *(void *)(v25 + 56);
      swift_bridgeObjectRetain();
      uint64_t v30 = 0;
      while (1)
      {
        v26(*(void *)(v0 + 88), v28, *(void *)(v0 + 72));
        if ((sub_1000AE3B8() & 1) == 0 && __OFADD__(v30++, 1)) {
          break;
        }
        (*(void (**)(void, void))(v25 - 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
        v28 += v29;
        if (!--v23) {
          goto LABEL_10;
        }
      }
      __break(1u);
LABEL_10:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = 0;
    }
    uint64_t v32 = *(void *)(v0 + 280);
    uint64_t v54 = *(void *)(v0 + 296);
    uint64_t v49 = *(void *)(v0 + 264);
    uint64_t v51 = *(void *)(v0 + 272);
    uint64_t v33 = *(void *)(v0 + 248);
    uint64_t v48 = *(void *)(v0 + 240);
    uint64_t v34 = *(void *)(v0 + 224);
    uint64_t v44 = *(void *)(v0 + 216);
    uint64_t v45 = *(void *)(v0 + 232);
    uint64_t v36 = *(void *)(v0 + 152);
    uint64_t v35 = *(void *)(v0 + 160);
    uint64_t v42 = *(void *)(v0 + 144);
    uint64_t v37 = *(void *)(v0 + 40);
    uint64_t v46 = sub_1000AE608();
    unint64_t v38 = sub_1000AE638();
    uint64_t v43 = sub_10006173C(v38);
    swift_bridgeObjectRelease();
    unint64_t v39 = sub_1000AE648();
    uint64_t v40 = sub_10006173C(v39);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v42);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v45, v44);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v49, v48);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v54, v51);
    *(void *)uint64_t v37 = v46;
    *(void *)(v37 + 8) = v30;
    *(unsigned char *)(v37 + 16) = 64;
    *(void *)(v37 + 24) = v60;
    *(void *)(v37 + 32) = v43;
    *(void *)(v37 + 40) = v40;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v17();
}

uint64_t sub_100066330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_1000AE3F8();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_1000AE728();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_10000693C(&qword_1000D7968);
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v8 = sub_1000AE518();
  v4[18] = v8;
  v4[19] = *(void *)(v8 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v9 = sub_1000AE678();
  v4[21] = v9;
  v4[22] = *(void *)(v9 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v10 = sub_1000AE5E8();
  v4[24] = v10;
  v4[25] = *(void *)(v10 - 8);
  v4[26] = swift_task_alloc();
  return _swift_task_switch(sub_1000665C4, 0, 0);
}

uint64_t sub_1000665C4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(void *)(v0 + 216) = v1;
  *(_DWORD *)(v0 + 232) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return _swift_task_switch(sub_100066648, v1, 0);
}

uint64_t sub_100066648()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 56) + *(int *)(v0 + 232);
  swift_beginAccess();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_100072B78(v4, (uint64_t (*)(void *, uint64_t))sub_1000783EC, v3);
  *(void *)(v0 + 224) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = *(void *)(v0 + 200);
  uint64_t v7 = *(uint64_t **)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 192);
  if (v6)
  {
    uint64_t v10 = sub_100072E38(v5);
    swift_bridgeObjectRelease();
    uint64_t *v7 = v10;
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v7, *v11, v9);
  return _swift_task_switch(sub_1000667C8, 0, 0);
}

uint64_t sub_1000667C8()
{
  uint64_t v1 = *(void *)(v0 + 224);
  sub_1000614E8(*(uint64_t **)(v0 + 56), *(void *)(v0 + 208), *(void **)(v0 + 184));
  sub_1000AE548();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v2 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 192);
    (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    sub_1000AE6C8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    sub_1000AE508();
    char v9 = sub_1000AE708();
    uint64_t v10 = sub_1000AE718();
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v12 = 0;
      uint64_t v13 = *(void *)(v0 + 80);
      uint64_t v16 = *(void (**)(void, unint64_t, void))(v13 + 16);
      uint64_t v14 = v13 + 16;
      uint64_t v15 = v16;
      unint64_t v17 = v10 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
      uint64_t v18 = *(void *)(v14 + 56);
      while (1)
      {
        v15(*(void *)(v0 + 88), v17, *(void *)(v0 + 72));
        uint64_t result = sub_1000AE3B8();
        if ((result & 1) == 0)
        {
          BOOL v20 = __OFADD__(v12, 1);
          uint64_t v21 = v12 + 1;
          if (v20)
          {
            __break(1u);
            return result;
          }
          uint64_t v22 = sub_1000AE3C8();
          BOOL v20 = __OFADD__(v21, v22);
          uint64_t v12 = v21 + v22;
          if (v20)
          {
            __break(1u);
LABEL_11:
            swift_bridgeObjectRelease();
            goto LABEL_13;
          }
        }
        (*(void (**)(void, void))(v14 - 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
        v17 += v18;
        if (!--v11) {
          goto LABEL_11;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = 0;
LABEL_13:
    uint64_t v23 = *(void *)(v0 + 200);
    uint64_t v41 = *(void *)(v0 + 192);
    uint64_t v42 = *(void *)(v0 + 208);
    uint64_t v24 = *(void *)(v0 + 176);
    uint64_t v39 = *(void *)(v0 + 168);
    uint64_t v40 = *(void *)(v0 + 184);
    uint64_t v25 = *(void *)(v0 + 152);
    uint64_t v36 = *(void *)(v0 + 144);
    uint64_t v27 = *(void *)(v0 + 104);
    uint64_t v26 = *(void *)(v0 + 112);
    uint64_t v33 = *(void *)(v0 + 160);
    uint64_t v34 = *(void *)(v0 + 96);
    char v28 = v9 & 1 | 0x40;
    uint64_t v29 = *(void *)(v0 + 40);
    uint64_t v38 = sub_1000AE4F8();
    uint64_t v37 = sub_1000AE718();
    unint64_t v30 = sub_1000AE6E8();
    uint64_t v35 = sub_10006173C(v30);
    swift_bridgeObjectRelease();
    unint64_t v31 = sub_1000AE6F8();
    uint64_t v32 = sub_10006173C(v31);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v34);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v33, v36);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v40, v39);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v42, v41);
    *(void *)uint64_t v29 = v38;
    *(void *)(v29 + 8) = v12;
    *(unsigned char *)(v29 + 16) = v28;
    *(void *)(v29 + 24) = v37;
    *(void *)(v29 + 32) = v35;
    *(void *)(v29 + 40) = v32;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_100066B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = sub_1000AE3F8();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v5 = sub_10000693C(&qword_1000D7970);
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v6 = sub_1000AE728();
  v3[14] = v6;
  v3[15] = *(void *)(v6 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v7 = sub_1000AE588();
  v3[17] = v7;
  v3[18] = *(void *)(v7 - 8);
  v3[19] = swift_task_alloc();
  uint64_t v8 = sub_1000AE538();
  v3[20] = v8;
  v3[21] = *(void *)(v8 - 8);
  v3[22] = swift_task_alloc();
  uint64_t v9 = sub_1000AE6A8();
  v3[23] = v9;
  v3[24] = *(void *)(v9 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v10 = sub_1000AE678();
  v3[26] = v10;
  v3[27] = *(void *)(v10 - 8);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  uint64_t v11 = sub_1000AE5E8();
  v3[30] = v11;
  v3[31] = *(void *)(v11 - 8);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  return _swift_task_switch(sub_100066ECC, 0, 0);
}

uint64_t sub_100066ECC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(void *)(v0 + 272) = v1;
  *(_DWORD *)(v0 + 288) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return _swift_task_switch(sub_100066F50, v1, 0);
}

uint64_t sub_100066F50()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 56) + *(int *)(v0 + 288);
  swift_beginAccess();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_100072B78(v4, (uint64_t (*)(void *, uint64_t))sub_1000783EC, v3);
  *(void *)(v0 + 280) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = *(uint64_t **)(v0 + 264);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v9 = *(void *)(v0 + 248);
  if (v6)
  {
    uint64_t v10 = sub_100072E38(v5);
    swift_bridgeObjectRelease();
    uint64_t *v7 = v10;
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v7, *v11, v8);
  return _swift_task_switch(sub_1000670D0, 0, 0);
}

uint64_t sub_1000670D0()
{
  uint64_t v53 = *(void *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v45 = *(void *)(v0 + 256);
  uint64_t v47 = *(void *)(v0 + 240);
  uint64_t v3 = *(void **)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v49 = *(void *)(v0 + 224);
  uint64_t v50 = *(void *)(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v51 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v52 = *(void *)(v0 + 136);
  sub_1000614E8(*(uint64_t **)(v0 + 56), v1, v3);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for REMRemindersListDataView.SortingStyle.default(_:), v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v45, v1, v47);
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 16))(v49, v3, v50);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v51, enum case for REMRemindersListDataView.FetchSubtasks.count(_:), v52);
  sub_1000AE698();
  sub_1000AE6B8();
  if (v53)
  {
    uint64_t v9 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 240);
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v12 = *(void *)(v0 + 232);
    uint64_t v14 = *(void *)(v0 + 208);
    uint64_t v13 = *(void *)(v0 + 216);
    (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 104);
    uint64_t v18 = *(void *)(v0 + 88);
    sub_1000AE6C8();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    uint64_t v19 = sub_1000AE718();
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v54 = v19;
    if (v20)
    {
      uint64_t v21 = *(void *)(v0 + 72);
      uint64_t v24 = *(void (**)(void, unint64_t, void))(v21 + 16);
      uint64_t v22 = v21 + 16;
      uint64_t v23 = v24;
      unint64_t v25 = v19 + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
      uint64_t v26 = *(void *)(v22 + 56);
      swift_bridgeObjectRetain();
      uint64_t v27 = 0;
      while (1)
      {
        v23(*(void *)(v0 + 80), v25, *(void *)(v0 + 64));
        if ((sub_1000AE3B8() & 1) == 0 && __OFADD__(v27++, 1)) {
          break;
        }
        (*(void (**)(void, void))(v22 - 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
        v25 += v26;
        if (!--v20) {
          goto LABEL_10;
        }
      }
      __break(1u);
LABEL_10:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = 0;
    }
    uint64_t v29 = *(void *)(v0 + 248);
    uint64_t v48 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 232);
    uint64_t v46 = *(void *)(v0 + 240);
    uint64_t v30 = *(void *)(v0 + 216);
    uint64_t v43 = *(void *)(v0 + 208);
    uint64_t v31 = *(void *)(v0 + 192);
    uint64_t v40 = *(void *)(v0 + 184);
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v32 = *(void *)(v0 + 120);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v34 = *(void *)(v0 + 112);
    uint64_t v35 = *(void *)(v0 + 40);
    unint64_t v36 = sub_1000AE6E8();
    uint64_t v42 = sub_10006173C(v36);
    swift_bridgeObjectRelease();
    unint64_t v37 = sub_1000AE6F8();
    uint64_t v39 = sub_10006173C(v37);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v41, v40);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v44, v43);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v48, v46);
    *(void *)uint64_t v35 = 0;
    *(void *)(v35 + 8) = v27;
    *(unsigned char *)(v35 + 16) = 64;
    *(void *)(v35 + 24) = v54;
    *(void *)(v35 + 32) = v42;
    *(void *)(v35 + 40) = v39;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v15();
}

uint64_t sub_100067558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_1000AE4B8();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_1000AE3F8();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_10000693C(&qword_1000D7978);
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v8 = sub_1000AE4C8();
  v4[18] = v8;
  v4[19] = *(void *)(v8 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v9 = sub_1000AE678();
  v4[21] = v9;
  v4[22] = *(void *)(v9 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v10 = sub_1000AE5E8();
  v4[24] = v10;
  v4[25] = *(void *)(v10 - 8);
  v4[26] = swift_task_alloc();
  return _swift_task_switch(sub_1000677EC, 0, 0);
}

uint64_t sub_1000677EC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(void *)(v0 + 216) = v1;
  *(_DWORD *)(v0 + 232) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return _swift_task_switch(sub_100067870, v1, 0);
}

uint64_t sub_100067870()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 56) + *(int *)(v0 + 232);
  swift_beginAccess();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_100072B78(v4, (uint64_t (*)(void *, uint64_t))sub_1000783EC, v3);
  *(void *)(v0 + 224) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = *(void *)(v0 + 200);
  uint64_t v7 = *(uint64_t **)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 192);
  if (v6)
  {
    uint64_t v10 = sub_100072E38(v5);
    swift_bridgeObjectRelease();
    uint64_t *v7 = v10;
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v7, *v11, v9);
  return _swift_task_switch(sub_1000679F0, 0, 0);
}

uint64_t sub_1000679F0()
{
  uint64_t v1 = *(void *)(v0 + 224);
  sub_1000614E8(*(uint64_t **)(v0 + 56), *(void *)(v0 + 208), *(void **)(v0 + 184));
  sub_1000AE6D8();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v2 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 192);
    (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    sub_1000AE6C8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v9 = sub_1000AE498();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = *(void *)(v0 + 80);
      uint64_t v14 = *(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16);
      uint64_t v12 = v11 + 16;
      uint64_t v13 = v14;
      unint64_t v15 = v9 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
      uint64_t v16 = *(void *)(v12 + 56);
      do
      {
        uint64_t v17 = *(void *)(v0 + 88);
        uint64_t v18 = *(void *)(v0 + 72);
        v13(v17, v15, v18);
        uint64_t v19 = sub_1000AE4A8();
        (*(void (**)(uint64_t, uint64_t))(v12 - 8))(v17, v18);
        sub_10006D410(v19, (uint64_t (*)(void))sub_1000226E4, (uint64_t (*)(void))&type metadata accessor for REMRemindersListDataView.ReminderLite);
        v15 += v16;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = _swiftEmptyArrayStorage[2];
    if (v20)
    {
      uint64_t v21 = *(void *)(v0 + 104);
      uint64_t v24 = *(void (**)(void, char *, void))(v21 + 16);
      uint64_t v22 = v21 + 16;
      uint64_t v23 = v24;
      unint64_t v25 = (char *)_swiftEmptyArrayStorage
          + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
      uint64_t v26 = *(void *)(v22 + 56);
      swift_bridgeObjectRetain();
      uint64_t v27 = 0;
      while (1)
      {
        v23(*(void *)(v0 + 112), v25, *(void *)(v0 + 96));
        uint64_t result = sub_1000AE3B8();
        if ((result & 1) == 0)
        {
          BOOL v29 = __OFADD__(v27, 1);
          uint64_t v30 = v27 + 1;
          if (v29)
          {
            __break(1u);
            return result;
          }
          uint64_t v31 = sub_1000AE3C8();
          BOOL v29 = __OFADD__(v30, v31);
          uint64_t v27 = v30 + v31;
          if (v29)
          {
            __break(1u);
LABEL_14:
            swift_bridgeObjectRelease();
            goto LABEL_16;
          }
        }
        (*(void (**)(void, void))(v22 - 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
        v25 += v26;
        if (!--v20) {
          goto LABEL_14;
        }
      }
    }
    uint64_t v27 = 0;
LABEL_16:
    uint64_t v32 = *(void *)(v0 + 200);
    uint64_t v44 = *(void *)(v0 + 192);
    uint64_t v45 = *(void *)(v0 + 208);
    uint64_t v33 = *(void *)(v0 + 176);
    uint64_t v34 = *(void *)(v0 + 160);
    uint64_t v42 = *(void *)(v0 + 168);
    uint64_t v43 = *(void *)(v0 + 184);
    uint64_t v35 = *(void *)(v0 + 144);
    uint64_t v36 = *(void *)(v0 + 152);
    uint64_t v37 = *(void *)(v0 + 40);
    unint64_t v38 = sub_1000AE468();
    uint64_t v41 = sub_10006173C(v38);
    swift_bridgeObjectRelease();
    unint64_t v39 = sub_1000AE488();
    uint64_t v40 = sub_10006173C(v39);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v43, v42);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v45, v44);
    *(void *)uint64_t v37 = 0;
    *(void *)(v37 + 8) = v27;
    *(unsigned char *)(v37 + 16) = 64;
    *(void *)(v37 + 24) = _swiftEmptyArrayStorage;
    *(void *)(v37 + 32) = v41;
    *(void *)(v37 + 40) = v40;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_100067DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_1000AE3F8();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_1000AE4B8();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_1000AE4C8();
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  uint64_t v8 = sub_10000693C(&qword_1000D79F0);
  v4[19] = v8;
  v4[20] = *(void *)(v8 - 8);
  v4[21] = swift_task_alloc();
  uint64_t v9 = sub_1000AE578();
  v4[22] = v9;
  v4[23] = *(void *)(v9 - 8);
  v4[24] = swift_task_alloc();
  uint64_t v10 = sub_1000AE678();
  v4[25] = v10;
  v4[26] = *(void *)(v10 - 8);
  v4[27] = swift_task_alloc();
  uint64_t v11 = sub_1000AE5E8();
  v4[28] = v11;
  v4[29] = *(void *)(v11 - 8);
  v4[30] = swift_task_alloc();
  return _swift_task_switch(sub_1000680F4, 0, 0);
}

uint64_t sub_1000680F4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48)
                 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
  *(void *)(v0 + 248) = v1;
  *(_DWORD *)(v0 + 264) = *(_DWORD *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 28);
  return _swift_task_switch(sub_100068178, v1, 0);
}

uint64_t sub_100068178()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 56) + *(int *)(v0 + 264);
  swift_beginAccess();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_100072B78(v4, (uint64_t (*)(void *, uint64_t))sub_1000783EC, v3);
  *(void *)(v0 + 256) = 0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v7 = *(uint64_t **)(v0 + 240);
  uint64_t v9 = *(void *)(v0 + 224);
  if (v6)
  {
    uint64_t v10 = sub_100072E38(v5);
    swift_bridgeObjectRelease();
    uint64_t *v7 = v10;
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.allowlist(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (unsigned int *)&enum case for REMRemindersListDataView.ShowCompleted.off(_:);
  }
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v7, *v11, v9);
  return _swift_task_switch(sub_1000682F8, 0, 0);
}

uint64_t sub_1000682F8()
{
  uint64_t v1 = *(void *)(v0 + 256);
  sub_1000614E8(*(uint64_t **)(v0 + 56), *(void *)(v0 + 240), *(void **)(v0 + 216));
  sub_1000AE5F8();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v2 = *(void *)(v0 + 240);
    uint64_t v4 = *(void *)(v0 + 224);
    (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 152);
    sub_1000AE6C8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    sub_1000AE568();
    uint64_t v9 = sub_1000AE498();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = *(void *)(v0 + 104);
      uint64_t v14 = *(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16);
      uint64_t v12 = v11 + 16;
      uint64_t v13 = v14;
      unint64_t v15 = v9 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
      uint64_t v16 = *(void *)(v12 + 56);
      do
      {
        uint64_t v17 = *(void *)(v0 + 112);
        uint64_t v18 = *(void *)(v0 + 96);
        v13(v17, v15, v18);
        uint64_t v19 = sub_1000AE4A8();
        (*(void (**)(uint64_t, uint64_t))(v12 - 8))(v17, v18);
        sub_10006D410(v19, (uint64_t (*)(void))sub_1000226E4, (uint64_t (*)(void))&type metadata accessor for REMRemindersListDataView.ReminderLite);
        v15 += v16;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = _swiftEmptyArrayStorage[2];
    if (v20)
    {
      uint64_t v21 = *(void *)(v0 + 80);
      uint64_t v24 = *(void (**)(void, char *, void))(v21 + 16);
      uint64_t v22 = v21 + 16;
      uint64_t v23 = v24;
      unint64_t v25 = (char *)_swiftEmptyArrayStorage
          + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
      uint64_t v26 = *(void *)(v22 + 56);
      swift_bridgeObjectRetain();
      uint64_t v27 = 0;
      while (1)
      {
        v23(*(void *)(v0 + 88), v25, *(void *)(v0 + 72));
        if ((sub_1000AE3B8() & 1) == 0 && __OFADD__(v27++, 1)) {
          break;
        }
        (*(void (**)(void, void))(v22 - 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
        v25 += v26;
        if (!--v20) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_13:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = 0;
    }
    uint64_t v49 = *(void *)(v0 + 224);
    uint64_t v50 = *(void *)(v0 + 240);
    uint64_t v47 = *(void *)(v0 + 216);
    uint64_t v48 = *(void *)(v0 + 232);
    uint64_t v29 = *(void *)(v0 + 192);
    uint64_t v45 = *(void *)(v0 + 208);
    uint64_t v46 = *(void *)(v0 + 200);
    uint64_t v30 = *(void *)(v0 + 184);
    uint64_t v43 = *(void *)(v0 + 176);
    uint64_t v31 = *(void *)(v0 + 136);
    uint64_t v40 = *(void *)(v0 + 144);
    uint64_t v33 = *(void *)(v0 + 120);
    uint64_t v32 = *(void *)(v0 + 128);
    uint64_t v34 = *(void *)(v0 + 40);
    uint64_t v44 = sub_1000AE558();
    sub_1000AE568();
    char v35 = sub_1000AE478();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v36(v31, v33);
    unint64_t v37 = sub_1000AE468();
    uint64_t v42 = sub_10006173C(v37);
    swift_bridgeObjectRelease();
    unint64_t v38 = sub_1000AE488();
    uint64_t v41 = sub_10006173C(v38);
    swift_bridgeObjectRelease();
    v36(v40, v33);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v43);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v46);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v49);
    *(void *)uint64_t v34 = v44;
    *(void *)(v34 + 8) = v27;
    *(unsigned char *)(v34 + 16) = v35 & 1;
    *(void *)(v34 + 24) = _swiftEmptyArrayStorage;
    *(void *)(v34 + 32) = v42;
    *(void *)(v34 + 40) = v41;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_1000687B4()
{
  type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  sub_1000ADED8();
  uint64_t result = 0;
  if (v1 <= 2.0) {
    return sub_1000AF6D8();
  }
  return result;
}

uint64_t sub_100068814(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 128) = a3;
  *(void *)(v4 + 136) = v3;
  *(unsigned char *)(v4 + 176) = a2;
  *(void *)(v4 + 120) = a1;
  uint64_t v5 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  *(void *)(v4 + 144) = v5;
  *(void *)(v4 + 152) = *(void *)(v5 - 8);
  *(void *)(v4 + 160) = swift_task_alloc();
  *(void *)(v4 + 168) = swift_task_alloc();
  return _swift_task_switch(sub_1000688EC, v3, 0);
}

void sub_1000688EC()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = (void *)(v1 + 120);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10006FF88((uint64_t)sub_100070260, v6, v5);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  *(void *)(v1 + 120) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v0 + 120);
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1000AF858();
    sub_100070F8C(0, &qword_1000D7878);
    sub_100070280();
    sub_1000AF668();
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v50 = *(void *)(v0 + 24);
    uint64_t v9 = *(void *)(v0 + 32);
    uint64_t v10 = *(void *)(v0 + 40);
    unint64_t v11 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v12 = -1 << *(unsigned char *)(v8 + 32);
    uint64_t v50 = v8 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(v8 + 56);
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
  }
  uint64_t v47 = (uint64_t *)(v0 + 112);
  uint64_t v48 = (id *)(v0 + 104);
  uint64_t v51 = *(void *)(v0 + 152);
  uint64_t v53 = *(void *)(v0 + 144);
  uint64_t v54 = (void *)v0;
  char v52 = *(unsigned char *)(v0 + 176);
  int64_t v49 = (unint64_t)(v9 + 64) >> 6;
  while (v3 < 0)
  {
    uint64_t v18 = sub_1000AF888();
    if (!v18) {
      goto LABEL_43;
    }
    *uint64_t v47 = v18;
    sub_100070F8C(0, &qword_1000D7878);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v19 = *v48;
    swift_unknownObjectRelease();
    uint64_t v17 = v10;
    uint64_t v15 = v11;
    if (!v19) {
      goto LABEL_43;
    }
LABEL_31:
    uint64_t v23 = v3;
    uint64_t v24 = v9;
    uint64_t v26 = v54[20];
    unint64_t v25 = (unsigned char *)v54[21];
    uint64_t v27 = v54[16];
    char v28 = &v25[*(int *)(v53 + 20)];
    uint64_t v29 = sub_1000ADF08();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v28, v27, v29);
    *unint64_t v25 = v52;
    swift_beginAccess();
    sub_10007471C((uint64_t)v25, v26, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    id v30 = v19;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = (void *)*v4;
    uint64_t v55 = (void *)*v4;
    *uint64_t v4 = 0x8000000000000000;
    unint64_t v34 = sub_100070100((uint64_t)v30);
    uint64_t v35 = v32[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      return;
    }
    char v38 = v33;
    if (v32[3] >= v37)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100070630();
        uint64_t v32 = v55;
      }
    }
    else
    {
      sub_10006FBE0(v37, isUniquelyReferenced_nonNull_native);
      uint64_t v32 = v55;
      unint64_t v39 = sub_100070100((uint64_t)v30);
      if ((v38 & 1) != (v40 & 1))
      {
        sub_100070F8C(0, &qword_1000D7878);
        sub_1000AFA68();
        return;
      }
      unint64_t v34 = v39;
    }
    uint64_t v9 = v24;
    uint64_t v3 = v23;
    uint64_t v41 = v54[20];
    if (v38)
    {
      sub_1000708AC(v41, v32[7] + *(void *)(v51 + 72) * v34);
    }
    else
    {
      v32[(v34 >> 6) + 8] |= 1 << v34;
      *(void *)(v32[6] + 8 * v34) = v30;
      sub_10007471C(v41, v32[7] + *(void *)(v51 + 72) * v34, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
      uint64_t v42 = v32[2];
      BOOL v43 = __OFADD__(v42, 1);
      uint64_t v44 = v42 + 1;
      if (v43) {
        goto LABEL_47;
      }
      v32[2] = v44;
      id v45 = v30;
    }
    *uint64_t v4 = v32;
    swift_bridgeObjectRelease();

    swift_endAccess();
    uint64_t v10 = v17;
    unint64_t v11 = v15;
  }
  if (v11)
  {
    uint64_t v15 = (v11 - 1) & v11;
    unint64_t v16 = __clz(__rbit64(v11)) | (v10 << 6);
    uint64_t v17 = v10;
    goto LABEL_30;
  }
  int64_t v20 = v10 + 1;
  if (__OFADD__(v10, 1)) {
    goto LABEL_48;
  }
  if (v20 >= v49) {
    goto LABEL_43;
  }
  unint64_t v21 = *(void *)(v50 + 8 * v20);
  uint64_t v17 = v10 + 1;
  if (v21) {
    goto LABEL_29;
  }
  uint64_t v17 = v10 + 2;
  if (v10 + 2 >= v49) {
    goto LABEL_43;
  }
  unint64_t v21 = *(void *)(v50 + 8 * v17);
  if (v21) {
    goto LABEL_29;
  }
  uint64_t v17 = v10 + 3;
  if (v10 + 3 >= v49) {
    goto LABEL_43;
  }
  unint64_t v21 = *(void *)(v50 + 8 * v17);
  if (v21) {
    goto LABEL_29;
  }
  uint64_t v17 = v10 + 4;
  if (v10 + 4 >= v49) {
    goto LABEL_43;
  }
  unint64_t v21 = *(void *)(v50 + 8 * v17);
  if (v21)
  {
LABEL_29:
    uint64_t v15 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_30:
    id v19 = *(id *)(*(void *)(v3 + 48) + 8 * v16);
    if (!v19) {
      goto LABEL_43;
    }
    goto LABEL_31;
  }
  uint64_t v22 = v10 + 5;
  while (v49 != v22)
  {
    unint64_t v21 = *(void *)(v50 + 8 * v22++);
    if (v21)
    {
      uint64_t v17 = v22 - 1;
      goto LABEL_29;
    }
  }
LABEL_43:
  sub_1000702E8();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v46 = (void (*)(void))v54[1];
  v46();
}

BOOL sub_100068EA8(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v28 = a2;
  uint64_t v5 = sub_1000ADF08();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v29 = (char *)&v27 - v10;
  uint64_t v11 = sub_10000693C(&qword_1000D7890);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = *a1;
  id v19 = (char *)&v27 + *(int *)(v12 + 56) - v16;
  *(uint64_t *)((char *)&v27 - v16) = (uint64_t)v18;
  sub_100074650(v28, (uint64_t)v19, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
  uint64_t v20 = (uint64_t)v15 + *(int *)(v12 + 56);
  void *v15 = v18;
  sub_100074650((uint64_t)v19, v20, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
  uint64_t v21 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v20 + *(int *)(v21 + 20), v5);
  id v22 = v18;
  sub_1000746B8(v20, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
  uint64_t v23 = v29;
  sub_1000ADE58();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24(v9, v5);
  sub_100070F44(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
  char v25 = sub_1000AF408();
  v24(v23, v5);
  sub_100009EF4((uint64_t)v17, &qword_1000D7890);
  return (v25 & 1) == 0;
}

uint64_t sub_100069138@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000693C(&qword_1000D7870);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 120);
  if (!*(void *)(v12 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_7:
    sub_100009EF4((uint64_t)v7, &qword_1000D7870);
LABEL_8:
    uint64_t v17 = sub_1000ADF08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  id v13 = a1;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_100070100((uint64_t)v13);
  if (v15)
  {
    sub_100074650(*(void *)(v12 + 56) + *(void *)(v9 + 72) * v14, (uint64_t)v7, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v16, 1, v8);

  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    goto LABEL_7;
  }
  sub_10007471C((uint64_t)v7, (uint64_t)v11, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
  if (*v11 != 1)
  {
    sub_1000746B8((uint64_t)v11, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    goto LABEL_8;
  }
  id v19 = &v11[*(int *)(v8 + 20)];
  uint64_t v20 = sub_1000ADF08();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v21 + 32))(a2, v19, v20);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(a2, 0, 1, v20);
}

uint64_t sub_100069458()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100069490()
{
  return v0;
}

uint64_t sub_10006949C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[26] = a8;
  v8[24] = a6;
  v8[25] = a7;
  uint64_t v10 = sub_1000AE3F8();
  v8[27] = v10;
  v8[28] = *(void *)(v10 - 8);
  v8[29] = swift_task_alloc();
  v8[30] = sub_1000AF628();
  v8[31] = sub_1000AF618();
  id v13 = (uint64_t (*)(void *))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[32] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_100069608;
  return v13(v8 + 2);
}

uint64_t sub_100069608()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000AF5F8();
  if (v0)
  {
    uint64_t v5 = sub_1000783B4;
  }
  else
  {
    *(void *)(v2 + 272) = v3;
    *(void *)(v2 + 280) = v4;
    uint64_t v5 = sub_10006976C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10006976C()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 48);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v43[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000A7A10(0, v2, 0);
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = v1 + 32;
    do
    {
      sub_100023D40(v4, v0 + 112);
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v6 = *(void *)(v0 + 144);
      sub_100024D3C((void *)(v0 + 112), v5);
      *(void *)(v0 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      sub_100006A40((long long *)(v0 + 112), v0 + 72);
      v43[0] = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000A7A10(0, v3[2] + 1, 1);
        uint64_t v3 = v43[0];
      }
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_1000A7A10(v7 > 1, v8 + 1, 1);
        uint64_t v3 = v43[0];
      }
      long long v3[2] = v8 + 1;
      uint64_t v9 = &v3[6 * v8];
      long long v10 = *(_OWORD *)(v0 + 64);
      long long v11 = *(_OWORD *)(v0 + 96);
      v9[3] = *(_OWORD *)(v0 + 80);
      v9[4] = v11;
      v9[2] = v10;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  if (v3[2])
  {
    sub_10000693C(&qword_1000D7990);
    uint64_t v12 = (void *)sub_1000AF9C8();
  }
  else
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v13 = *(void *)(v0 + 264);
  v43[0] = v12;
  sub_1000751A0((uint64_t)v3, 1, (uint64_t *)v43);
  swift_bridgeObjectRelease();
  uint64_t v14 = v43[0];
  if (v13) {
    return swift_release();
  }
  uint64_t v15 = *(void *)(v0 + 40);
  int64_t v16 = *(void *)(v15 + 16);
  uint64_t v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    char v40 = v43[0];
    uint64_t v18 = *(void *)(v0 + 224);
    v43[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000A79F0(0, v16, 0);
    id v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v18 += 16;
    uint64_t v20 = v15 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
    uint64_t v41 = *(void *)(v18 + 56);
    uint64_t v42 = v19;
    uint64_t v21 = (void (**)(uint64_t, uint64_t))(v18 - 8);
    do
    {
      uint64_t v22 = *(void *)(v0 + 232);
      uint64_t v23 = *(void *)(v0 + 216);
      v42(v22, v20, v23);
      uint64_t v24 = sub_1000AE3D8();
      uint64_t v25 = sub_1000AE3C8();
      (*v21)(v22, v23);
      uint64_t v17 = v43[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000A79F0(0, v17[2] + 1, 1);
        uint64_t v17 = v43[0];
      }
      unint64_t v27 = v17[2];
      unint64_t v26 = v17[3];
      if (v27 >= v26 >> 1)
      {
        sub_1000A79F0(v26 > 1, v27 + 1, 1);
        uint64_t v17 = v43[0];
      }
      _OWORD v17[2] = v27 + 1;
      uint64_t v28 = &v17[2 * v27];
      v28[4] = v24;
      v28[5] = v25;
      v20 += v41;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v14 = v40;
  }
  if (v17[2])
  {
    sub_10000693C(&qword_1000D7998);
    uint64_t v29 = (void *)sub_1000AF9C8();
  }
  else
  {
    uint64_t v29 = &_swiftEmptyDictionarySingleton;
  }
  v43[0] = v29;
  sub_1000754AC((uint64_t)v17, 1, v43);
  swift_bridgeObjectRelease();
  uint64_t v30 = v43[0];
  *(void **)(v0 + 288) = v43[0];
  swift_retain();
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_100072994(v31, (uint64_t)v14);
  *(void *)(v0 + 296) = v32;
  swift_release_n();
  swift_bridgeObjectRelease();
  v43[0] = *(void **)(v0 + 56);
  swift_bridgeObjectRetain_n();
  sub_100070FC8(v43);
  uint64_t v34 = *(void *)(v0 + 192);
  swift_bridgeObjectRelease();
  *(void **)(v0 + 304) = v43[0];
  *(void *)(v0 + 152) = v32;
  uint64_t v35 = swift_task_alloc();
  *(void *)(v0 + 312) = v35;
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = v30;
  BOOL v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v36;
  uint64_t v37 = sub_10000693C(&qword_1000D79B0);
  *(void *)(v0 + 328) = v37;
  uint64_t v38 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  *(void *)(v0 + 336) = v38;
  unint64_t v39 = sub_1000757D8();
  *(void *)(v0 + 344) = v39;
  void *v36 = v0;
  v36[1] = sub_100069C44;
  return Sequence.asyncMap<A>(_:)(&unk_1000D7A68, v35, v37, v38, v39);
}

uint64_t sub_100069C44(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  return _swift_task_switch(sub_100069D90, v4, v3);
}

uint64_t sub_100069D90()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[24];
  v0[20] = v0[38];
  uint64_t v3 = swift_task_alloc();
  v0[45] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[46] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100069E70;
  uint64_t v5 = v0[42];
  uint64_t v6 = v0[43];
  uint64_t v7 = v0[41];
  return Sequence.asyncMap<A>(_:)(&unk_1000D7A70, v3, v7, v5, v6);
}

uint64_t sub_100069E70(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = a1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  return _swift_task_switch(sub_1000783AC, v4, v3);
}

uint64_t sub_100069FFC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[26] = a8;
  v8[24] = a6;
  v8[25] = a7;
  uint64_t v10 = sub_1000AE3F8();
  v8[27] = v10;
  v8[28] = *(void *)(v10 - 8);
  v8[29] = swift_task_alloc();
  v8[30] = sub_1000AF628();
  v8[31] = sub_1000AF618();
  uint64_t v13 = (uint64_t (*)(void *))((char *)a4 + *a4);
  long long v11 = (void *)swift_task_alloc();
  v8[32] = v11;
  *long long v11 = v8;
  v11[1] = sub_10006A168;
  return v13(v8 + 2);
}

uint64_t sub_10006A168()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000AF5F8();
  if (v0)
  {
    uint64_t v5 = sub_1000783B4;
  }
  else
  {
    *(void *)(v2 + 272) = v3;
    *(void *)(v2 + 280) = v4;
    uint64_t v5 = sub_10006A2CC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10006A2CC()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 48);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v43[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000A7A10(0, v2, 0);
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = v1 + 32;
    do
    {
      sub_100023D40(v4, v0 + 112);
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v6 = *(void *)(v0 + 144);
      sub_100024D3C((void *)(v0 + 112), v5);
      *(void *)(v0 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      sub_100006A40((long long *)(v0 + 112), v0 + 72);
      v43[0] = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000A7A10(0, v3[2] + 1, 1);
        uint64_t v3 = v43[0];
      }
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_1000A7A10(v7 > 1, v8 + 1, 1);
        uint64_t v3 = v43[0];
      }
      long long v3[2] = v8 + 1;
      uint64_t v9 = &v3[6 * v8];
      long long v10 = *(_OWORD *)(v0 + 64);
      long long v11 = *(_OWORD *)(v0 + 96);
      v9[3] = *(_OWORD *)(v0 + 80);
      v9[4] = v11;
      v9[2] = v10;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  if (v3[2])
  {
    sub_10000693C(&qword_1000D7990);
    uint64_t v12 = (void *)sub_1000AF9C8();
  }
  else
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v13 = *(void *)(v0 + 264);
  v43[0] = v12;
  sub_1000751A0((uint64_t)v3, 1, (uint64_t *)v43);
  swift_bridgeObjectRelease();
  uint64_t v14 = v43[0];
  if (v13) {
    return swift_release();
  }
  uint64_t v15 = *(void *)(v0 + 40);
  int64_t v16 = *(void *)(v15 + 16);
  uint64_t v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    char v40 = v43[0];
    uint64_t v18 = *(void *)(v0 + 224);
    v43[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000A79F0(0, v16, 0);
    id v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v18 += 16;
    uint64_t v20 = v15 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
    uint64_t v41 = *(void *)(v18 + 56);
    uint64_t v42 = v19;
    uint64_t v21 = (void (**)(uint64_t, uint64_t))(v18 - 8);
    do
    {
      uint64_t v22 = *(void *)(v0 + 232);
      uint64_t v23 = *(void *)(v0 + 216);
      v42(v22, v20, v23);
      uint64_t v24 = sub_1000AE3D8();
      uint64_t v25 = sub_1000AE3C8();
      (*v21)(v22, v23);
      uint64_t v17 = v43[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000A79F0(0, v17[2] + 1, 1);
        uint64_t v17 = v43[0];
      }
      unint64_t v27 = v17[2];
      unint64_t v26 = v17[3];
      if (v27 >= v26 >> 1)
      {
        sub_1000A79F0(v26 > 1, v27 + 1, 1);
        uint64_t v17 = v43[0];
      }
      _OWORD v17[2] = v27 + 1;
      uint64_t v28 = &v17[2 * v27];
      v28[4] = v24;
      v28[5] = v25;
      v20 += v41;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v14 = v40;
  }
  if (v17[2])
  {
    sub_10000693C(&qword_1000D7998);
    uint64_t v29 = (void *)sub_1000AF9C8();
  }
  else
  {
    uint64_t v29 = &_swiftEmptyDictionarySingleton;
  }
  v43[0] = v29;
  sub_1000754AC((uint64_t)v17, 1, v43);
  swift_bridgeObjectRelease();
  uint64_t v30 = v43[0];
  *(void **)(v0 + 288) = v43[0];
  swift_retain();
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_100072994(v31, (uint64_t)v14);
  *(void *)(v0 + 296) = v32;
  swift_release_n();
  swift_bridgeObjectRelease();
  v43[0] = *(void **)(v0 + 56);
  swift_bridgeObjectRetain_n();
  sub_100070FC8(v43);
  uint64_t v34 = *(void *)(v0 + 192);
  swift_bridgeObjectRelease();
  *(void **)(v0 + 304) = v43[0];
  *(void *)(v0 + 152) = v32;
  uint64_t v35 = swift_task_alloc();
  *(void *)(v0 + 312) = v35;
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = v30;
  BOOL v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v36;
  uint64_t v37 = sub_10000693C(&qword_1000D79B0);
  *(void *)(v0 + 328) = v37;
  uint64_t v38 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  *(void *)(v0 + 336) = v38;
  unint64_t v39 = sub_1000757D8();
  *(void *)(v0 + 344) = v39;
  void *v36 = v0;
  v36[1] = sub_10006A7A4;
  return Sequence.asyncMap<A>(_:)(&unk_1000D7AD8, v35, v37, v38, v39);
}

uint64_t sub_10006A7A4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  return _swift_task_switch(sub_10006A8F0, v4, v3);
}

uint64_t sub_10006A8F0()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[24];
  v0[20] = v0[38];
  uint64_t v3 = swift_task_alloc();
  v0[45] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[46] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10006A9D0;
  uint64_t v5 = v0[42];
  uint64_t v6 = v0[43];
  uint64_t v7 = v0[41];
  return Sequence.asyncMap<A>(_:)(&unk_1000D7AE0, v3, v7, v5, v6);
}

uint64_t sub_10006A9D0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = a1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  return _swift_task_switch(sub_10006AB5C, v4, v3);
}

uint64_t sub_10006AB5C()
{
  uint64_t v23 = v0;
  swift_release();
  uint64_t v19 = *(void *)(v0 + 24);
  uint64_t v20 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v1 = qword_1000D4920;
  id v18 = *(id *)(v0 + 16);
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000AE768();
  sub_10000EFA4(v2, (uint64_t)qword_1000D75F8);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  id v17 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000AE758();
  os_log_type_t v6 = sub_1000AF718();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 296);
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134218496;
    *(void *)(v0 + 168) = *(void *)(v4 + 16);
    sub_1000AF808();
    *(_WORD *)(v9 + 12) = 2048;
    *(void *)(v0 + 176) = *(void *)(v3 + 16);
    sub_1000AF808();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2048;
    uint64_t v10 = *(void *)(v8 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 184) = v10;
    sub_1000AF808();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Widget interactor: fetched total %ld reminders %ld result %ld", (uint8_t *)v9, 0x20u);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v11 = *(void *)(v0 + 376);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v13 = *(void (**)(void *))(v0 + 200);
  v21[0] = v18;
  v21[1] = v19;
  void v21[2] = v20;
  v21[3] = v12;
  v21[4] = v11;
  char v22 = 0;
  id v14 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v21);

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_10006AE58(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[26] = a8;
  v8[24] = a6;
  v8[25] = a7;
  uint64_t v10 = sub_1000AE3F8();
  v8[27] = v10;
  v8[28] = *(void *)(v10 - 8);
  v8[29] = swift_task_alloc();
  v8[30] = sub_1000AF628();
  v8[31] = sub_1000AF618();
  uint64_t v13 = (uint64_t (*)(void *))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[32] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_10006AFC4;
  return v13(v8 + 2);
}

uint64_t sub_10006AFC4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000AF5F8();
  if (v0)
  {
    uint64_t v5 = sub_10006B128;
  }
  else
  {
    *(void *)(v2 + 272) = v3;
    *(void *)(v2 + 280) = v4;
    uint64_t v5 = sub_10006B1D8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10006B128()
{
  uint64_t v9 = v0;
  uint64_t v1 = v0[33];
  uint64_t v2 = (void (*)(uint64_t *))v0[25];
  swift_release();
  uint64_t v5 = v1;
  long long v6 = 0u;
  long long v7 = 0u;
  char v8 = 1;
  swift_errorRetain();
  v2(&v5);
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10006B1D8()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 48);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v43[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000A7A10(0, v2, 0);
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = v1 + 32;
    do
    {
      sub_100023D40(v4, v0 + 112);
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v6 = *(void *)(v0 + 144);
      sub_100024D3C((void *)(v0 + 112), v5);
      *(void *)(v0 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      sub_100006A40((long long *)(v0 + 112), v0 + 72);
      v43[0] = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000A7A10(0, v3[2] + 1, 1);
        uint64_t v3 = v43[0];
      }
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_1000A7A10(v7 > 1, v8 + 1, 1);
        uint64_t v3 = v43[0];
      }
      long long v3[2] = v8 + 1;
      uint64_t v9 = &v3[6 * v8];
      long long v10 = *(_OWORD *)(v0 + 64);
      long long v11 = *(_OWORD *)(v0 + 96);
      v9[3] = *(_OWORD *)(v0 + 80);
      v9[4] = v11;
      v9[2] = v10;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  if (v3[2])
  {
    sub_10000693C(&qword_1000D7990);
    uint64_t v12 = (void *)sub_1000AF9C8();
  }
  else
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v13 = *(void *)(v0 + 264);
  v43[0] = v12;
  sub_1000751A0((uint64_t)v3, 1, (uint64_t *)v43);
  swift_bridgeObjectRelease();
  uint64_t v14 = v43[0];
  if (v13) {
    return swift_release();
  }
  uint64_t v15 = *(void *)(v0 + 40);
  int64_t v16 = *(void *)(v15 + 16);
  id v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    char v40 = v43[0];
    uint64_t v18 = *(void *)(v0 + 224);
    v43[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000A79F0(0, v16, 0);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v18 += 16;
    uint64_t v20 = v15 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
    uint64_t v41 = *(void *)(v18 + 56);
    uint64_t v42 = v19;
    uint64_t v21 = (void (**)(uint64_t, uint64_t))(v18 - 8);
    do
    {
      uint64_t v22 = *(void *)(v0 + 232);
      uint64_t v23 = *(void *)(v0 + 216);
      v42(v22, v20, v23);
      uint64_t v24 = sub_1000AE3D8();
      uint64_t v25 = sub_1000AE3C8();
      (*v21)(v22, v23);
      id v17 = v43[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000A79F0(0, v17[2] + 1, 1);
        id v17 = v43[0];
      }
      unint64_t v27 = v17[2];
      unint64_t v26 = v17[3];
      if (v27 >= v26 >> 1)
      {
        sub_1000A79F0(v26 > 1, v27 + 1, 1);
        id v17 = v43[0];
      }
      _OWORD v17[2] = v27 + 1;
      uint64_t v28 = &v17[2 * v27];
      v28[4] = v24;
      v28[5] = v25;
      v20 += v41;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v14 = v40;
  }
  if (v17[2])
  {
    sub_10000693C(&qword_1000D7998);
    uint64_t v29 = (void *)sub_1000AF9C8();
  }
  else
  {
    uint64_t v29 = &_swiftEmptyDictionarySingleton;
  }
  v43[0] = v29;
  sub_1000754AC((uint64_t)v17, 1, v43);
  swift_bridgeObjectRelease();
  uint64_t v30 = v43[0];
  *(void **)(v0 + 288) = v43[0];
  swift_retain();
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_100072994(v31, (uint64_t)v14);
  *(void *)(v0 + 296) = v32;
  swift_release_n();
  swift_bridgeObjectRelease();
  v43[0] = *(void **)(v0 + 56);
  swift_bridgeObjectRetain_n();
  sub_100070FC8(v43);
  uint64_t v34 = *(void *)(v0 + 192);
  swift_bridgeObjectRelease();
  *(void **)(v0 + 304) = v43[0];
  *(void *)(v0 + 152) = v32;
  uint64_t v35 = swift_task_alloc();
  *(void *)(v0 + 312) = v35;
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = v30;
  BOOL v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v36;
  uint64_t v37 = sub_10000693C(&qword_1000D79B0);
  *(void *)(v0 + 328) = v37;
  uint64_t v38 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  *(void *)(v0 + 336) = v38;
  unint64_t v39 = sub_1000757D8();
  *(void *)(v0 + 344) = v39;
  void *v36 = v0;
  v36[1] = sub_10006B6B0;
  return Sequence.asyncMap<A>(_:)(&unk_1000D79A8, v35, v37, v38, v39);
}

uint64_t sub_10006B6B0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  return _swift_task_switch(sub_10006B7FC, v4, v3);
}

uint64_t sub_10006B7FC()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[24];
  v0[20] = v0[38];
  uint64_t v3 = swift_task_alloc();
  v0[45] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[46] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10006B8DC;
  uint64_t v5 = v0[42];
  uint64_t v6 = v0[43];
  uint64_t v7 = v0[41];
  return Sequence.asyncMap<A>(_:)(&unk_1000D79C8, v3, v7, v5, v6);
}

uint64_t sub_10006B8DC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = a1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  return _swift_task_switch(sub_10006BA68, v4, v3);
}

uint64_t sub_10006BA68()
{
  uint64_t v26 = v0;
  swift_release();
  uint64_t v19 = *(unsigned __int8 *)(v0 + 32);
  long long v20 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = qword_1000D4920;
  id v18 = (id)v20;
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000AE768();
  sub_10000EFA4(v2, (uint64_t)qword_1000D75F8);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  id v17 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000AE758();
  os_log_type_t v6 = sub_1000AF718();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 296);
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134218496;
    *(void *)(v0 + 168) = *(void *)(v4 + 16);
    sub_1000AF808();
    *(_WORD *)(v9 + 12) = 2048;
    *(void *)(v0 + 176) = *(void *)(v3 + 16);
    sub_1000AF808();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2048;
    uint64_t v10 = *(void *)(v8 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 184) = v10;
    sub_1000AF808();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Widget interactor: fetched total %ld reminders %ld result %ld", (uint8_t *)v9, 0x20u);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v11 = *(void *)(v0 + 376);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v13 = *(void (**)(long long *))(v0 + 200);
  long long v21 = v20;
  uint64_t v22 = v19;
  uint64_t v23 = v12;
  uint64_t v24 = v11;
  char v25 = 0;
  id v14 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(&v21);

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_10006BD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  sub_10000693C(&qword_1000D58B8);
  v4[11] = swift_task_alloc();
  sub_1000AF628();
  v4[12] = sub_1000AF618();
  uint64_t v6 = sub_1000AF5F8();
  v4[13] = v6;
  v4[14] = v5;
  return _swift_task_switch(sub_10006BE3C, v6, v5);
}

uint64_t sub_10006BE3C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_100024D3C(v1, v1[3]);
  if (sub_1000AE138())
  {
    uint64_t v2 = *(void **)(v0 + 64);
    uint64_t v3 = *(void *)(*(void *)(v0 + 72)
                   + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
    *(void *)(v0 + 120) = v3;
    uint64_t v5 = v1[3];
    uint64_t v4 = v1[4];
    sub_100024D3C(v2, v5);
    *(void *)(v0 + 128) = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v4);
    return _swift_task_switch(sub_10006C05C, v3, 0);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 88);
    swift_release();
    uint64_t v7 = sub_1000ADF08();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v9 = *(void **)(v0 + 64);
    sub_100023D40((uint64_t)v9, v0 + 16);
    uint64_t v10 = v9[3];
    uint64_t v11 = v9[4];
    sub_100024D3C(v9, v10);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    uint64_t v13 = (void *)v12;
    if (*(void *)(v8 + 16) && (unint64_t v14 = sub_100070100(v12), (v15 & 1) != 0)) {
      uint64_t v16 = *(void *)(*(void *)(*(void *)(v0 + 80) + 56) + 8 * v14);
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v17 = *(void *)(v0 + 88);
    uint64_t v18 = *(void *)(v0 + 56);

    sub_100006A40((long long *)(v0 + 16), v18);
    *(void *)(v18 + 40) = v16;
    uint64_t v19 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
    sub_10001D8DC(v17, v18 + *(int *)(v19 + 24), &qword_1000D58B8);
    swift_task_dealloc();
    long long v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_10006C05C()
{
  uint64_t v1 = (void *)v0[16];
  sub_100069138(v1, v0[11]);

  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  return _swift_task_switch(sub_10006C0CC, v2, v3);
}

uint64_t sub_10006C0CC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void **)(v0 + 64);
  sub_100023D40((uint64_t)v2, v0 + 16);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100024D3C(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  uint64_t v6 = (void *)v5;
  if (*(void *)(v1 + 16) && (unint64_t v7 = sub_100070100(v5), (v8 & 1) != 0)) {
    uint64_t v9 = *(void *)(*(void *)(*(void *)(v0 + 80) + 56) + 8 * v7);
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 56);

  sub_100006A40((long long *)(v0 + 16), v11);
  *(void *)(v11 + 40) = v9;
  uint64_t v12 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  sub_10001D8DC(v10, v11 + *(int *)(v12 + 24), &qword_1000D58B8);
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10006C1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  sub_10000693C(&qword_1000D58B8);
  v4[11] = swift_task_alloc();
  sub_1000AF628();
  v4[12] = sub_1000AF618();
  uint64_t v6 = sub_1000AF5F8();
  v4[13] = v6;
  v4[14] = v5;
  return _swift_task_switch(sub_10006C2C8, v6, v5);
}

uint64_t sub_10006C2C8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_100024D3C(v1, v1[3]);
  if (sub_1000AE138())
  {
    uint64_t v2 = *(void **)(v0 + 64);
    uint64_t v3 = *(void *)(*(void *)(v0 + 72)
                   + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache);
    *(void *)(v0 + 120) = v3;
    uint64_t v5 = v1[3];
    uint64_t v4 = v1[4];
    sub_100024D3C(v2, v5);
    *(void *)(v0 + 128) = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v4);
    return _swift_task_switch(sub_10006C4E8, v3, 0);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 88);
    swift_release();
    uint64_t v7 = sub_1000ADF08();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v9 = *(void **)(v0 + 64);
    sub_100023D40((uint64_t)v9, v0 + 16);
    uint64_t v10 = v9[3];
    uint64_t v11 = v9[4];
    sub_100024D3C(v9, v10);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    uint64_t v13 = (void *)v12;
    if (*(void *)(v8 + 16) && (unint64_t v14 = sub_100070100(v12), (v15 & 1) != 0)) {
      uint64_t v16 = *(void *)(*(void *)(*(void *)(v0 + 80) + 56) + 8 * v14);
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v17 = *(void *)(v0 + 88);
    uint64_t v18 = *(void *)(v0 + 56);

    sub_100006A40((long long *)(v0 + 16), v18);
    *(void *)(v18 + 40) = v16;
    uint64_t v19 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
    sub_10001D8DC(v17, v18 + *(int *)(v19 + 24), &qword_1000D58B8);
    swift_task_dealloc();
    long long v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_10006C4E8()
{
  uint64_t v1 = (void *)v0[16];
  sub_100069138(v1, v0[11]);

  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  return _swift_task_switch(sub_1000783B0, v2, v3);
}

uint64_t sub_10006C558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AF648();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1000AF638();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100009EF4(a1, &qword_1000D78B8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1000AF5F8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10006C704(uint64_t a1)
{
  return sub_10006D5F8(a1, (uint64_t (*)(void))sub_100022430, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_10006C730(int64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v61 = a2;
  uint64_t v8 = sub_1000AE3F8();
  uint64_t v62 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v60 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000693C(&qword_1000D7A88);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t)&v47;
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = a4 >> 1;
  uint64_t v20 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v58 = v15;
  unint64_t v59 = a4;
  uint64_t v63 = a1;
  a1 = *v4;
  int64_t v21 = *(void *)(*v4 + 16);
  int64_t v22 = v21 + v20;
  if (__OFADD__(v21, v20))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v24 = *(void *)(a1 + 24) >> 1, v24 < v22))
  {
    if (v21 <= v22) {
      int64_t v25 = v21 + v20;
    }
    else {
      int64_t v25 = v21;
    }
    a1 = sub_1000226E4(isUniquelyReferenced_nonNull_native, v25, 1, a1);
    *uint64_t v4 = a1;
    int64_t v24 = *(void *)(a1 + 24) >> 1;
  }
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v26 = v24 - v16;
  if (v19 == a3)
  {
    if (v20 <= 0)
    {
      uint64_t v20 = 0;
      uint64_t v16 = a3;
      goto LABEL_23;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t v57 = v16;
    a1 = *(void *)(a1 + 16);
    uint64_t v35 = v62;
    int64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
    uint64_t v50 = v62 + 56;
    v49(v18, 1, 1, v8);
    uint64_t v26 = v58;
    sub_100009D6C((uint64_t)v18, v58, &qword_1000D7A88);
    uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
    uint64_t v56 = v35 + 48;
    if (v55(v26, 1, v8) == 1)
    {
LABEL_31:
      sub_100009EF4((uint64_t)v18, &qword_1000D7A88);
      swift_unknownObjectRelease();
      return sub_100009EF4(v26, &qword_1000D7A88);
    }
LABEL_33:
    uint64_t v53 = (void (**)(void, void, void))(v62 + 32);
    uint64_t v47 = (void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v48 = (void (**)(char *))(v62 + 16);
    do
    {
      sub_100009EF4(v26, &qword_1000D7A88);
      uint64_t v37 = *v4;
      unint64_t v38 = *(void *)(*v4 + 24);
      int64_t v39 = v38 >> 1;
      if ((uint64_t)(v38 >> 1) < a1 + 1)
      {
        uint64_t v37 = sub_1000226E4(v38 > 1, a1 + 1, 1, *v4);
        *uint64_t v4 = v37;
        int64_t v39 = *(void *)(v37 + 24) >> 1;
      }
      uint64_t v40 = *(unsigned __int8 *)(v62 + 80);
      sub_100009D6C((uint64_t)v18, (uint64_t)v13, &qword_1000D7A88);
      if (v55((uint64_t)v13, 1, v8) == 1)
      {
LABEL_34:
        sub_100009EF4((uint64_t)v13, &qword_1000D7A88);
        int64_t v36 = a1;
      }
      else
      {
        uint64_t v52 = v37 + ((v40 + 32) & ~v40);
        uint64_t v41 = *v53;
        if (a1 <= v39) {
          int64_t v42 = v39;
        }
        else {
          int64_t v42 = a1;
        }
        int64_t v54 = v42;
        BOOL v43 = v60;
        uint64_t v51 = v41;
        while (1)
        {
          v41(v43, v13, v8);
          if (v54 == a1) {
            break;
          }
          sub_100009EF4((uint64_t)v18, &qword_1000D7A88);
          v41(v52 + *(void *)(v62 + 72) * a1, v43, v8);
          if (v57 == v19)
          {
            uint64_t v44 = 1;
            uint64_t v57 = v19;
          }
          else
          {
            uint64_t v46 = sub_100072708(v64, v57, v63, v61, a3, v59);
            (*v48)(v18);
            ((void (*)(uint64_t *, void))v46)(v64, 0);
            if (__OFADD__(v57, 1)) {
              goto LABEL_51;
            }
            ++v57;
            uint64_t v44 = 0;
            BOOL v43 = v60;
          }
          v49(v18, v44, 1, v8);
          sub_100009D6C((uint64_t)v18, (uint64_t)v13, &qword_1000D7A88);
          unsigned int v45 = v55((uint64_t)v13, 1, v8);
          ++a1;
          uint64_t v41 = v51;
          if (v45 == 1) {
            goto LABEL_34;
          }
        }
        (*v47)(v43, v8);
        int64_t v36 = v54;
        a1 = v54;
      }
      *(void *)(*v4 + 16) = v36;
      uint64_t v26 = v58;
      sub_100009D6C((uint64_t)v18, v58, &qword_1000D7A88);
    }
    while (v55(v26, 1, v8) != 1);
    goto LABEL_31;
  }
  if (v26 < v20)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v20 < 0
    || ((uint64_t v27 = *(void *)(v62 + 72),
         unint64_t v28 = a1
             + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))
             + v27 * v16,
         unint64_t v29 = v61 + v27 * a3,
         v29 < v28 + v27 * v20)
      ? (BOOL v30 = v28 >= v29 + v27 * v20)
      : (BOOL v30 = 1),
        !v30))
  {
LABEL_52:
    uint64_t result = sub_1000AF9D8();
    __break(1u);
    return result;
  }
  swift_arrayInitWithCopy();
  if (v20)
  {
    uint64_t v31 = *(void *)(a1 + 16);
    BOOL v32 = __OFADD__(v31, v20);
    uint64_t v33 = v31 + v20;
    if (v32)
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    *(void *)(a1 + 16) = v33;
  }
  uint64_t v16 = v19;
LABEL_23:
  if (v20 == v26) {
    goto LABEL_30;
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_10006CDA0(int64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v52 = a2;
  uint64_t v8 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  uint64_t v53 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000693C(&qword_1000D7A90);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - v16;
  unint64_t v18 = a4 >> 1;
  uint64_t v19 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v49 = v15;
  unint64_t v50 = a4;
  uint64_t v54 = a1;
  a1 = *v4;
  int64_t v20 = *(void *)(*v4 + 16);
  a4 = v20 + v19;
  if (__OFADD__(v20, v19))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v22 = *(void *)(a1 + 24) >> 1, v22 < (uint64_t)a4))
  {
    if (v20 <= (uint64_t)a4) {
      int64_t v23 = v20 + v19;
    }
    else {
      int64_t v23 = v20;
    }
    a1 = sub_100022718(isUniquelyReferenced_nonNull_native, v23, 1, a1);
    *uint64_t v4 = a1;
    int64_t v22 = *(void *)(a1 + 24) >> 1;
  }
  uint64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = v22 - v24;
  if (v18 == a3)
  {
    if (v19 <= 0)
    {
      uint64_t v19 = 0;
      a4 = a3;
      goto LABEL_23;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    a1 = *(void *)(a1 + 16);
    uint64_t v34 = v53;
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
    uint64_t v45 = v53 + 56;
    v44(v17, 1, 1, v8);
    uint64_t v25 = v49;
    sub_100009D6C((uint64_t)v17, v49, &qword_1000D7A90);
    uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    uint64_t v48 = v34 + 48;
    if (v47(v25, 1, v8) == 1)
    {
LABEL_31:
      sub_100009EF4((uint64_t)v17, &qword_1000D7A90);
      swift_unknownObjectRelease();
      return sub_100009EF4(v25, &qword_1000D7A90);
    }
    do
    {
LABEL_36:
      sub_100009EF4(v25, &qword_1000D7A90);
      unint64_t v36 = *(void *)(*v4 + 24);
      int64_t v35 = v36 >> 1;
      if ((uint64_t)(v36 >> 1) < a1 + 1)
      {
        uint64_t v42 = sub_100022718(v36 > 1, a1 + 1, 1, *v4);
        *uint64_t v4 = v42;
        unint64_t v46 = v42;
        int64_t v35 = *(void *)(v42 + 24) >> 1;
      }
      else
      {
        unint64_t v46 = *v4;
      }
      uint64_t v37 = *(unsigned __int8 *)(v53 + 80);
      sub_100009D6C((uint64_t)v17, (uint64_t)v13, &qword_1000D7A90);
      if (v47((uint64_t)v13, 1, v8) == 1)
      {
LABEL_34:
        sub_100009EF4((uint64_t)v13, &qword_1000D7A90);
        int64_t v35 = a1;
      }
      else
      {
        v46 += (v37 + 32) & ~v37;
        if (a1 > v35) {
          int64_t v35 = a1;
        }
        uint64_t v38 = (uint64_t)v51;
        while (1)
        {
          sub_10007471C((uint64_t)v13, v38, type metadata accessor for TTRNewWidgetPresenter.Division);
          if (v35 == a1) {
            break;
          }
          sub_100009EF4((uint64_t)v17, &qword_1000D7A90);
          sub_10007471C(v38, v46 + *(void *)(v53 + 72) * a1, type metadata accessor for TTRNewWidgetPresenter.Division);
          if (a4 == v18)
          {
            uint64_t v39 = 1;
            a4 = v18;
          }
          else
          {
            uint64_t v40 = sub_100072850(v55, a4, v54, v52, a3, v50);
            sub_100074650(v41, (uint64_t)v17, type metadata accessor for TTRNewWidgetPresenter.Division);
            ((void (*)(void (**)(uint64_t *), void))v40)(v55, 0);
            BOOL v31 = __OFADD__(a4++, 1);
            if (v31) {
              goto LABEL_51;
            }
            uint64_t v39 = 0;
            uint64_t v38 = (uint64_t)v51;
          }
          v44(v17, v39, 1, v8);
          sub_100009D6C((uint64_t)v17, (uint64_t)v13, &qword_1000D7A90);
          ++a1;
          if (v47((uint64_t)v13, 1, v8) == 1) {
            goto LABEL_34;
          }
        }
        sub_1000746B8(v38, type metadata accessor for TTRNewWidgetPresenter.Division);
        a1 = v35;
      }
      *(void *)(*v4 + 16) = v35;
      uint64_t v25 = v49;
      sub_100009D6C((uint64_t)v17, v49, &qword_1000D7A90);
    }
    while (v47(v25, 1, v8) != 1);
    goto LABEL_31;
  }
  if (v25 < v19)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v19 < 0
    || ((uint64_t v26 = *(void *)(v53 + 72),
         unint64_t v27 = a1
             + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))
             + v26 * v24,
         unint64_t v28 = v52 + v26 * a3,
         v28 < v27 + v26 * v19)
      ? (BOOL v29 = v27 >= v28 + v26 * v19)
      : (BOOL v29 = 1),
        !v29))
  {
LABEL_52:
    uint64_t result = sub_1000AF9D8();
    __break(1u);
    return result;
  }
  swift_arrayInitWithCopy();
  if (v19)
  {
    uint64_t v30 = *(void *)(a1 + 16);
    BOOL v31 = __OFADD__(v30, v19);
    uint64_t v32 = v30 + v19;
    if (v31)
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    *(void *)(a1 + 16) = v32;
  }
  a4 = v18;
LABEL_23:
  if (v19 == v25) {
    goto LABEL_30;
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_10006D3E4(uint64_t a1)
{
  return sub_10006D410(a1, (uint64_t (*)(void))sub_100022718, type metadata accessor for TTRNewWidgetPresenter.Division);
}

uint64_t sub_10006D410(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_10006D5CC(uint64_t a1)
{
  return sub_10006D5F8(a1, (uint64_t (*)(void))sub_1000227E8, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
}

uint64_t sub_10006D5F8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = (*(void *)(v5 + 24) >> 1) - v11;
  uint64_t v13 = *(void *)(a3(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = v5 + v15 + v14 * v11;
  unint64_t v17 = a1 + v15;
  uint64_t v18 = v14 * v10;
  unint64_t v19 = v16 + v18;
  unint64_t v20 = v17 + v18;
  if (v17 < v19 && v16 < v20) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v22 = *(void *)(v5 + 16);
  BOOL v23 = __OFADD__(v22, v10);
  uint64_t v24 = v22 + v10;
  if (!v23)
  {
    *(void *)(v5 + 16) = v24;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_10006D7B8()
{
  sub_100009EF4((uint64_t)v0 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle, &qword_1000D78A0);
  swift_release();
  uint64_t v1 = *((unsigned int *)*v0 + 12);
  uint64_t v2 = *((unsigned __int16 *)*v0 + 26);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_10006D844()
{
  return type metadata accessor for TTRNewWidgetInteractor(0);
}

uint64_t type metadata accessor for TTRNewWidgetInteractor(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D7648);
}

void sub_10006D86C()
{
  sub_1000777A0(319, (unint64_t *)&unk_1000D7658, (void (*)(uint64_t))&type metadata accessor for REMRemindersListDataView.SortingStyle);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for TTRNewWidgetInteractor.CompletedCache()
{
  return self;
}

uint64_t *sub_10006D968(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1000ADF08();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_10006DA34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1000ADF08();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

unsigned char *sub_10006DA9C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1000ADF08();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *sub_10006DB18(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1000ADF08();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *sub_10006DB94(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1000ADF08();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *sub_10006DC10(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1000ADF08();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_10006DC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006DCA0);
}

uint64_t sub_10006DCA0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1000ADF08();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 20)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10006DD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006DD64);
}

unsigned char *sub_10006DD64(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1000ADF08();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D7838);
}

uint64_t sub_10006DE28()
{
  uint64_t result = sub_1000ADF08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10006DEC0(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 104) = a3;
  *(void *)(v4 + 112) = v3;
  *(unsigned char *)(v4 + 192) = a2;
  *(void *)(v4 + 96) = a1;
  return _swift_task_switch(sub_10006DF58, 0, 0);
}

uint64_t sub_10006DF58()
{
  unint64_t v1 = *(void **)(*(void *)(v0 + 112) + 24);
  *(void *)(v0 + 64) = 0;
  id v2 = [v1 fetchReminderWithObjectID:*(void *)(v0 + 96) error:v0 + 64];
  *(void *)(v0 + 120) = v2;
  uint64_t v3 = *(void **)(v0 + 64);
  if (v2)
  {
    uint64_t v4 = v2;
    id v5 = v3;
    id v6 = [v4 subtaskContext];
    uint64_t v7 = v6;
    if (!v6)
    {
LABEL_5:
      id v11 = [objc_allocWithZone((Class)REMSaveRequest) initWithStore:v1];
      *(void *)(v0 + 128) = v11;
      sub_1000AE0E8();
      *(void *)(v0 + 80) = v4;
      id v12 = v11;
      id v13 = v4;
      sub_1000AE0A8();
      *(void *)(v0 + 136) = *(void *)(v0 + 72);
      sub_1000AE0C8();
      *(void *)(v0 + 144) = swift_initStackObject();
      uint64_t v14 = sub_1000AE0B8();
      *(void *)(v0 + 152) = v14;
      sub_1000AE0D8();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v15 = *(void *)(v14 + 16);
      *(void *)(v0 + 160) = v15;
      swift_bridgeObjectRetain();
      unint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v16;
      *unint64_t v16 = v0;
      v16[1] = sub_10006E2BC;
      uint64_t v17 = *(void *)(v0 + 104);
      char v18 = *(unsigned char *)(v0 + 192);
      return sub_100068814(v15, v18, v17);
    }
    *(void *)(v0 + 88) = 0;
    id v8 = [v6 fetchRemindersWithError:v0 + 88];

    uint64_t v9 = *(void **)(v0 + 88);
    if (v8)
    {
      sub_100070F8C(0, &qword_1000D78B0);
      sub_1000AF588();
      id v10 = v9;

      goto LABEL_5;
    }
    id v21 = v9;
    sub_1000ADC78();

    swift_willThrow();
  }
  else
  {
    id v20 = v3;
    sub_1000ADC78();

    swift_willThrow();
  }
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_10006E2BC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10006E400, 0, 0);
}

uint64_t sub_10006E400()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 112) + 32);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v2;
  *id v2 = v0;
  v2[1] = sub_10006E4D4;
  return REMSaveRequest.saveAsync(with:)(v1);
}

uint64_t sub_10006E4D4()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_10006E6C4;
  }
  else {
    id v2 = sub_10006E614;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10006E614()
{
  uint64_t v1 = (void *)v0[16];
  id v2 = (void *)v0[15];
  swift_release();
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10006E6C4()
{
  uint64_t v1 = (void *)v0[16];
  id v2 = (void *)v0[15];
  swift_release();
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10006E774(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10006E850;
  return v6(a1);
}

uint64_t sub_10006E850()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10006E948(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1000AF878();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1000AE278();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1000AF868();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_10006EBC8(v7, result + 1);
    unint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_10006EDB0();
      uint64_t v23 = v28;
    }
    else
    {
      uint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_10006F050((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_1000AF7D8(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_1000AE278();
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_1000AF7E8();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        id v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_1000AF7E8();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_10006F0D4((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

Swift::Int sub_10006EBC8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10000693C(&qword_1000D7960);
    uint64_t v2 = sub_1000AF8B8();
    uint64_t v14 = v2;
    sub_1000AF858();
    if (sub_1000AF888())
    {
      sub_1000AE278();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10006EDB0();
          uint64_t v2 = v14;
        }
        Swift::Int result = sub_1000AF7D8(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1000AF888());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_10006EDB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000693C(&qword_1000D7960);
  uint64_t v3 = sub_1000AF8A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    unint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1000AF7D8(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_10006F050(uint64_t a1, void *a2)
{
  sub_1000AF7D8(a2[5]);
  unint64_t result = sub_1000AF848();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

void sub_10006F0D4(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10006EDB0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10006F24C();
      goto LABEL_14;
    }
    sub_10006F3F8();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = sub_1000AF7D8(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1000AE278();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1000AF7E8();

    if (v12)
    {
LABEL_13:
      sub_1000AFA58();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1000AF7E8();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

id sub_10006F24C()
{
  uint64_t v1 = v0;
  sub_10000693C(&qword_1000D7960);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000AF898();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10006F3F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000693C(&qword_1000D7960);
  uint64_t v3 = sub_1000AF8A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1000AF7D8(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10006F674(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000693C(&qword_1000D7998);
  char v36 = a2;
  uint64_t v6 = sub_1000AF9B8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    int64_t v35 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1)) {
          goto LABEL_38;
        }
        if (v15 >= v12)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v35;
          if (v36)
          {
            uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
            if (v34 >= 64) {
              bzero((void *)(v5 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              *int64_t v9 = -1 << v34;
            }
            *(void *)(v5 + 16) = 0;
          }
          break;
        }
        unint64_t v24 = v9[v15];
        if (!v24)
        {
          int64_t v25 = v15 + 1;
          if (v15 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v24 = v9[v25];
          if (!v24)
          {
            while (1)
            {
              int64_t v15 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                break;
              }
              if (v15 >= v12) {
                goto LABEL_31;
              }
              unint64_t v24 = v9[v15];
              ++v25;
              if (v24) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return result;
          }
          ++v15;
        }
LABEL_20:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v15 << 6);
      }
      uint64_t v26 = 8 * v22;
      uint64_t v27 = *(void **)(*(void *)(v5 + 48) + v26);
      uint64_t v28 = *(void *)(*(void *)(v5 + 56) + v26);
      if ((v36 & 1) == 0) {
        id v29 = v27;
      }
      uint64_t result = sub_1000AF7D8(*(void *)(v7 + 40));
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          BOOL v32 = v18 == v31;
          if (v18 == v31) {
            unint64_t v18 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v13 + 8 * v18);
        }
        while (v33 == -1);
        unint64_t v19 = __clz(__rbit64(~v33)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v20 = 8 * v19;
      *(void *)(*(void *)(v7 + 48) + v20) = v27;
      *(void *)(*(void *)(v7 + 56) + v20) = v28;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10006F920(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000693C(&qword_1000D7990);
  char v33 = a2;
  uint64_t v6 = sub_1000AF9B8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1)) {
          goto LABEL_39;
        }
        if (v15 >= v12)
        {
LABEL_32:
          swift_release();
          if (v33)
          {
            uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
            if (v32 >= 64) {
              bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              *int64_t v9 = -1 << v32;
            }
            *(void *)(v5 + 16) = 0;
          }
          break;
        }
        unint64_t v20 = v9[v15];
        if (!v20)
        {
          int64_t v21 = v15 + 1;
          if (v15 + 1 >= v12) {
            goto LABEL_32;
          }
          unint64_t v20 = v9[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v15 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                break;
              }
              if (v15 >= v12) {
                goto LABEL_32;
              }
              unint64_t v20 = v9[v15];
              ++v21;
              if (v20) {
                goto LABEL_19;
              }
            }
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            return result;
          }
          ++v15;
        }
LABEL_19:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      unint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v18);
      unint64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v18);
      if (v33)
      {
        sub_100006A40(v23, (uint64_t)v34);
      }
      else
      {
        sub_100023D40((uint64_t)v23, (uint64_t)v34);
        id v24 = v22;
      }
      uint64_t result = sub_1000AF7D8(*(void *)(v7 + 40));
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v13 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v16 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v22;
      uint64_t result = sub_100006A40(v34, *(void *)(v7 + 56) + 40 * v16);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10006FBE0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10000693C(&qword_1000D7888);
  int v41 = a2;
  uint64_t v9 = sub_1000AF9B8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = v2;
  uint64_t v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v15 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v16 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v15) {
      break;
    }
    unint64_t v23 = v39;
    unint64_t v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      int64_t v18 = v22 + 1;
      if (v22 + 1 >= v15) {
        goto LABEL_34;
      }
      unint64_t v24 = v39[v18];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v15)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v18 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v15) {
              goto LABEL_34;
            }
            unint64_t v24 = v39[v18];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    unint64_t v26 = *(void **)(*(void *)(v8 + 48) + 8 * v21);
    uint64_t v27 = *(void *)(v40 + 72);
    uint64_t v28 = *(void *)(v8 + 56) + v27 * v21;
    if (v41)
    {
      sub_10007471C(v28, (uint64_t)v7, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    }
    else
    {
      sub_100074650(v28, (uint64_t)v7, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
      id v29 = v26;
    }
    uint64_t result = sub_1000AF7D8(*(void *)(v10 + 40));
    uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v16 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v19 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(void *)(*(void *)(v10 + 48) + 8 * v19) = v26;
    uint64_t result = sub_10007471C((uint64_t)v7, *(void *)(v10 + 56) + v27 * v19, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v23 = v39;
  if ((v41 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_10006FF88(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(id *, char *))isStackAllocationSafe;
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_100070910((unint64_t *)((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    sub_100070910((unint64_t *)v11, v8, a3, v6);
    a2 = v12;
    swift_slowDealloc();
  }
  return a2;
}

unint64_t sub_100070100(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000AF7D8(*(void *)(v2 + 40));

  return sub_100070144(a1, v4);
}

unint64_t sub_100070144(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_100070F8C(0, &qword_1000D7878);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1000AF7E8();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1000AF7E8();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

BOOL sub_100070260(void **a1, uint64_t a2)
{
  return sub_100068EA8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_100070280()
{
  unint64_t result = qword_1000D7880;
  if (!qword_1000D7880)
  {
    sub_100070F8C(255, &qword_1000D7878);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7880);
  }
  return result;
}

uint64_t sub_1000702E8()
{
  return swift_release();
}

id sub_1000702F0()
{
  uint64_t v1 = v0;
  sub_10000693C(&qword_1000D7998);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000AF9A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    if (!v20) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id result = v17;
  }
  int64_t v21 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

id sub_10007047C()
{
  uint64_t v1 = v0;
  sub_10000693C(&qword_1000D7990);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000AF9A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    if (!v20) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    sub_100023D40(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_100006A40(v22, *(void *)(v4 + 56) + v18);
    id result = v17;
  }
  int64_t v21 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

id sub_100070630()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000693C(&qword_1000D7888);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1000AF9A8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v26 + 72) * v16;
    sub_100074650(*(void *)(v5 + 56) + v19, (uint64_t)v4, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    sub_10007471C((uint64_t)v4, *(void *)(v7 + 56) + v19, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000708AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100070910(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *, char *))
{
  uint64_t v30 = a4;
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v6 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  uint64_t v29 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v26 = 0;
  uint64_t v27 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    unint64_t v14 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v15 = v14 | (v9 << 6);
LABEL_17:
    uint64_t v19 = *(void *)(a3 + 56);
    id v31 = *(id *)(*(void *)(a3 + 48) + 8 * v15);
    id v20 = v31;
    sub_100074650(v19 + *(void *)(v29 + 72) * v15, (uint64_t)v8, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    id v21 = v20;
    char v22 = v30(&v31, v8);
    sub_1000746B8((uint64_t)v8, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);

    if (v4) {
      return;
    }
    if (v22)
    {
      *(unint64_t *)((char *)v25 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      BOOL v16 = __OFADD__(v26++, 1);
      if (v16) {
        goto LABEL_30;
      }
    }
  }
  BOOL v16 = __OFADD__(v9++, 1);
  if (v16)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v9 >= v28) {
    goto LABEL_27;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v9);
  if (v17)
  {
LABEL_16:
    unint64_t v13 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
    goto LABEL_17;
  }
  int64_t v18 = v9 + 1;
  if (v9 + 1 >= v28) {
    goto LABEL_27;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v9 + 2;
  if (v9 + 2 >= v28) {
    goto LABEL_27;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v9 + 3;
  if (v9 + 3 >= v28)
  {
LABEL_27:
    sub_100070BB4(v25, v24, v26, (void *)a3);
    return;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17)
  {
LABEL_15:
    int64_t v9 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_27;
    }
    unint64_t v17 = *(void *)(v27 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_100070BB4(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v43 = a1;
  uint64_t v7 = type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v44 = (uint64_t)&v41 - v11;
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_10000693C(&qword_1000D7888);
  uint64_t result = sub_1000AF9C8();
  uint64_t v13 = result;
  uint64_t v42 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *v43;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 64;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      uint64_t v46 = v15;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v42) {
        return v13;
      }
      unint64_t v20 = v43[v19];
      uint64_t v21 = v15 + 1;
      if (!v20)
      {
        uint64_t v21 = v15 + 2;
        if (v15 + 2 >= v42) {
          return v13;
        }
        unint64_t v20 = v43[v21];
        if (!v20)
        {
          uint64_t v21 = v15 + 3;
          if (v15 + 3 >= v42) {
            return v13;
          }
          unint64_t v20 = v43[v21];
          if (!v20)
          {
            uint64_t v22 = v15 + 4;
            if (v15 + 4 >= v42) {
              return v13;
            }
            unint64_t v20 = v43[v22];
            if (!v20)
            {
              while (1)
              {
                uint64_t v21 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v21 >= v42) {
                  return v13;
                }
                unint64_t v20 = v43[v21];
                ++v22;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v21 = v15 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      uint64_t v46 = v21;
      unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
    }
    uint64_t v23 = a4[7];
    uint64_t v24 = a4;
    uint64_t v25 = *(void **)(a4[6] + 8 * v18);
    uint64_t v26 = v44;
    uint64_t v27 = *(void *)(v45 + 72);
    sub_100074650(v23 + v27 * v18, v44, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    uint64_t v28 = v26;
    uint64_t v29 = v10;
    sub_10007471C(v28, (uint64_t)v10, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    Swift::Int v30 = *(void *)(v13 + 40);
    id v31 = v25;
    uint64_t result = sub_1000AF7D8(v30);
    uint64_t v32 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v35 = __clz(__rbit64((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v10 = v29;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v32) >> 6;
      uint64_t v10 = v29;
      do
      {
        if (++v34 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v38 = v34 == v37;
        if (v34 == v37) {
          unint64_t v34 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v34);
      }
      while (v39 == -1);
      unint64_t v35 = __clz(__rbit64(~v39)) + (v34 << 6);
    }
    *(void *)(v16 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
    *(void *)(*(void *)(v13 + 48) + 8 * v35) = v31;
    uint64_t result = sub_10007471C((uint64_t)v10, *(void *)(v13 + 56) + v35 * v27, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    ++*(void *)(v13 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v24;
    uint64_t v15 = v46;
    if (!a3) {
      return v13;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100070F44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100070F8C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

Swift::Int sub_100070FC8(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1000726F4(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_100071034(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100071034(uint64_t *a1)
{
  uint64_t v149 = sub_1000ADF08();
  uint64_t v2 = *(void *)(v149 - 8);
  uint64_t v3 = __chkstk_darwin(v149);
  uint64_t v151 = (char *)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v150 = (char *)&v139 - v5;
  Swift::Int v6 = a1[1];
  Swift::Int result = sub_1000AF9F8(v6);
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_151;
    }
    if (v6) {
      return sub_100071BF4(0, v6, 1, a1);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_159;
  }
  Swift::Int v141 = result;
  if (v6 < 2)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v145 = (char *)&_swiftEmptyArrayStorage[4];
    if (v6 != 1)
    {
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      uint64_t v13 = (char *)_swiftEmptyArrayStorage;
      if (v14 < 2)
      {
LABEL_128:
        swift_bridgeObjectRelease();
        v11[2] = 0;
        return swift_bridgeObjectRelease();
      }
LABEL_115:
      uint64_t v132 = *a1;
      uint64_t v142 = v11;
      while (1)
      {
        unint64_t v133 = v14 - 2;
        if (v14 < 2) {
          goto LABEL_146;
        }
        if (!v132) {
          goto LABEL_158;
        }
        uint64_t v134 = *(void *)&v13[16 * v133 + 32];
        uint64_t v135 = *(void *)&v13[16 * v14 + 24];
        uint64_t v136 = v147;
        sub_100071EE0((char *)(v132 + 40 * v134), (char *)(v132 + 40 * *(void *)&v13[16 * v14 + 16]), v132 + 40 * v135, v145);
        if (v136) {
          goto LABEL_113;
        }
        if (v135 < v134) {
          goto LABEL_147;
        }
        uint64_t v147 = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_1000726E0((uint64_t)v13);
        }
        if (v133 >= *((void *)v13 + 2)) {
          goto LABEL_148;
        }
        uint64_t v137 = &v13[16 * v133 + 32];
        *(void *)uint64_t v137 = v134;
        *((void *)v137 + 1) = v135;
        unint64_t v138 = *((void *)v13 + 2);
        if (v14 > v138) {
          goto LABEL_149;
        }
        memmove(&v13[16 * v14 + 16], &v13[16 * v14 + 32], 16 * (v138 - v14));
        *((void *)v13 + 2) = v138 - 1;
        unint64_t v14 = v138 - 1;
        uint64_t v11 = v142;
        if (v138 <= 2) {
          goto LABEL_128;
        }
      }
    }
    uint64_t v142 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_10000693C(&qword_1000D58E8);
    uint64_t v10 = sub_1000AF5C8();
    *(void *)(v10 + 16) = v9;
    uint64_t v142 = (void *)v10;
    uint64_t v145 = (char *)(v10 + 32);
  }
  Swift::Int v12 = 0;
  uint64_t v148 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  while (2)
  {
    Swift::Int v15 = v12 + 1;
    Swift::Int v144 = v12;
    if (v12 + 1 >= v6) {
      goto LABEL_43;
    }
    uint64_t v16 = *a1;
    sub_100023D40(*a1 + 40 * v15, (uint64_t)&v155);
    char v146 = (char *)v16;
    sub_100023D40(v16 + 40 * v12, (uint64_t)v152);
    uint64_t v17 = v156;
    uint64_t v18 = v157;
    sub_100024D3C(&v155, v156);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 104))(v17, v18);
    if (!v19) {
      goto LABEL_21;
    }
    unint64_t v20 = (void *)v19;
    uint64_t v21 = v153;
    uint64_t v22 = v154;
    sub_100024D3C(v152, v153);
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 104))(v21, v22);
    if (!v23)
    {

LABEL_21:
      LODWORD(v158) = 0;
      goto LABEL_22;
    }
    uint64_t v24 = (void *)v23;
    id v25 = [v20 date];
    uint64_t v26 = v150;
    sub_1000ADEB8();

    id v27 = [v24 date];
    uint64_t v28 = v151;
    sub_1000ADEB8();

    LODWORD(v158) = sub_1000ADEA8();
    uint64_t v29 = v149;
    Swift::Int v30 = *v148;
    (*v148)(v28, v149);
    v30(v26, v29);
LABEL_22:
    sub_100023B0C((uint64_t)v152);
    sub_100023B0C((uint64_t)&v155);
    Swift::Int v15 = v12 + 2;
    Swift::Int v143 = v6;
    if (v12 + 2 >= v6) {
      goto LABEL_34;
    }
    uint64_t v140 = v13;
    Swift::Int v31 = v12 + 2;
    uint64_t v32 = (uint64_t)&v146[40 * v12 + 40];
    while (1)
    {
      sub_100023D40(v32 + 40, (uint64_t)&v155);
      sub_100023D40(v32, (uint64_t)v152);
      uint64_t v33 = v156;
      uint64_t v34 = v157;
      sub_100024D3C(&v155, v156);
      uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 104))(v33, v34);
      if (v35)
      {
        char v36 = (void *)v35;
        uint64_t v37 = v153;
        uint64_t v38 = v154;
        sub_100024D3C(v152, v153);
        uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 104))(v37, v38);
        if (v39)
        {
          uint64_t v40 = (void *)v39;
          id v41 = [v36 date];
          uint64_t v42 = v150;
          sub_1000ADEB8();

          id v43 = [v40 date];
          uint64_t v44 = v151;
          sub_1000ADEB8();

          int v45 = sub_1000ADEA8();
          uint64_t v46 = v149;
          uint64_t v47 = *v148;
          (*v148)(v44, v149);
          uint64_t v48 = v42;
          Swift::Int v12 = v144;
          v47(v48, v46);
          Swift::Int v6 = v143;
          goto LABEL_29;
        }
      }
      int v45 = 0;
LABEL_29:
      sub_100023B0C((uint64_t)v152);
      sub_100023B0C((uint64_t)&v155);
      if ((v158 ^ v45)) {
        break;
      }
      v32 += 40;
      if (v6 == ++v31)
      {
        Swift::Int v15 = v6;
        goto LABEL_33;
      }
    }
    Swift::Int v15 = v31;
LABEL_33:
    uint64_t v13 = v140;
LABEL_34:
    if (v158)
    {
      if (v15 < v12) {
        goto LABEL_152;
      }
      if (v12 < v15)
      {
        uint64_t v49 = 40 * v15 - 40;
        Swift::Int v50 = v15;
        uint64_t v51 = 40 * v12;
        Swift::Int v52 = v50;
        do
        {
          if (v12 != --v50)
          {
            if (!v146) {
              goto LABEL_157;
            }
            uint64_t v53 = &v146[v51];
            uint64_t v54 = (uint64_t)&v146[v49];
            sub_100006A40((long long *)&v146[v51], (uint64_t)&v155);
            uint64_t v55 = *(void *)(v54 + 32);
            long long v56 = *(_OWORD *)(v54 + 16);
            *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
            *((_OWORD *)v53 + 1) = v56;
            *((void *)v53 + 4) = v55;
            sub_100006A40(&v155, v54);
          }
          ++v12;
          v49 -= 40;
          v51 += 40;
        }
        while (v12 < v50);
        Swift::Int v15 = v52;
        Swift::Int v6 = v143;
        Swift::Int v12 = v144;
      }
    }
LABEL_43:
    if (v15 >= v6) {
      goto LABEL_65;
    }
    if (__OFSUB__(v15, v12)) {
      goto LABEL_150;
    }
    if (v15 - v12 >= v141)
    {
LABEL_65:
      if (v15 < v12) {
        goto LABEL_145;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_100072518(0, *((void *)v13 + 2) + 1, 1, v13);
      }
      unint64_t v79 = *((void *)v13 + 2);
      unint64_t v78 = *((void *)v13 + 3);
      unint64_t v14 = v79 + 1;
      if (v79 >= v78 >> 1) {
        uint64_t v13 = sub_100072518((char *)(v78 > 1), v79 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v14;
      char v146 = v13 + 32;
      uint64_t v80 = &v13[16 * v79 + 32];
      *(void *)uint64_t v80 = v12;
      *((void *)v80 + 1) = v15;
      Swift::Int v158 = v15;
      if (v79)
      {
        uint64_t v81 = v146;
        while (1)
        {
          unint64_t v82 = v14 - 1;
          if (v14 >= 4)
          {
            uint64_t v87 = &v81[16 * v14];
            uint64_t v88 = *((void *)v87 - 8);
            uint64_t v89 = *((void *)v87 - 7);
            BOOL v93 = __OFSUB__(v89, v88);
            uint64_t v90 = v89 - v88;
            if (v93) {
              goto LABEL_134;
            }
            uint64_t v92 = *((void *)v87 - 6);
            uint64_t v91 = *((void *)v87 - 5);
            BOOL v93 = __OFSUB__(v91, v92);
            uint64_t v85 = v91 - v92;
            char v86 = v93;
            if (v93) {
              goto LABEL_135;
            }
            unint64_t v94 = v14 - 2;
            uint64_t v95 = &v81[16 * v14 - 32];
            uint64_t v97 = *(void *)v95;
            uint64_t v96 = *((void *)v95 + 1);
            BOOL v93 = __OFSUB__(v96, v97);
            uint64_t v98 = v96 - v97;
            if (v93) {
              goto LABEL_137;
            }
            BOOL v93 = __OFADD__(v85, v98);
            uint64_t v99 = v85 + v98;
            if (v93) {
              goto LABEL_140;
            }
            if (v99 >= v90)
            {
              char v117 = &v81[16 * v82];
              uint64_t v119 = *(void *)v117;
              uint64_t v118 = *((void *)v117 + 1);
              BOOL v93 = __OFSUB__(v118, v119);
              uint64_t v120 = v118 - v119;
              if (v93) {
                goto LABEL_144;
              }
              BOOL v110 = v85 < v120;
              goto LABEL_103;
            }
          }
          else
          {
            if (v14 != 3)
            {
              uint64_t v111 = *((void *)v13 + 4);
              uint64_t v112 = *((void *)v13 + 5);
              BOOL v93 = __OFSUB__(v112, v111);
              uint64_t v104 = v112 - v111;
              char v105 = v93;
              goto LABEL_97;
            }
            uint64_t v84 = *((void *)v13 + 4);
            uint64_t v83 = *((void *)v13 + 5);
            BOOL v93 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            char v86 = v93;
          }
          if (v86) {
            goto LABEL_136;
          }
          unint64_t v94 = v14 - 2;
          unint64_t v100 = &v81[16 * v14 - 32];
          uint64_t v102 = *(void *)v100;
          uint64_t v101 = *((void *)v100 + 1);
          BOOL v103 = __OFSUB__(v101, v102);
          uint64_t v104 = v101 - v102;
          char v105 = v103;
          if (v103) {
            goto LABEL_139;
          }
          uint64_t v106 = &v81[16 * v82];
          uint64_t v108 = *(void *)v106;
          uint64_t v107 = *((void *)v106 + 1);
          BOOL v93 = __OFSUB__(v107, v108);
          uint64_t v109 = v107 - v108;
          if (v93) {
            goto LABEL_142;
          }
          if (__OFADD__(v104, v109)) {
            goto LABEL_143;
          }
          if (v104 + v109 >= v85)
          {
            BOOL v110 = v85 < v109;
LABEL_103:
            if (v110) {
              unint64_t v82 = v94;
            }
            goto LABEL_105;
          }
LABEL_97:
          if (v105) {
            goto LABEL_138;
          }
          uint64_t v113 = &v81[16 * v82];
          uint64_t v115 = *(void *)v113;
          uint64_t v114 = *((void *)v113 + 1);
          BOOL v93 = __OFSUB__(v114, v115);
          uint64_t v116 = v114 - v115;
          if (v93) {
            goto LABEL_141;
          }
          if (v116 < v104) {
            goto LABEL_15;
          }
LABEL_105:
          unint64_t v121 = v82 - 1;
          if (v82 - 1 >= v14)
          {
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
            goto LABEL_154;
          }
          uint64_t v122 = a1;
          uint64_t v123 = *a1;
          if (!*a1) {
            goto LABEL_156;
          }
          uint64_t v124 = v13;
          uint64_t v125 = &v81[16 * v121];
          uint64_t v126 = v81;
          uint64_t v127 = *(void *)v125;
          uint64_t v128 = &v126[16 * v82];
          uint64_t v129 = *((void *)v128 + 1);
          uint64_t v130 = v147;
          sub_100071EE0((char *)(v123 + 40 * *(void *)v125), (char *)(v123 + 40 * *(void *)v128), v123 + 40 * v129, v145);
          if (v130)
          {
LABEL_113:
            swift_bridgeObjectRelease();
            v142[2] = 0;
            return swift_bridgeObjectRelease();
          }
          if (v129 < v127) {
            goto LABEL_131;
          }
          if (v82 > *((void *)v124 + 2)) {
            goto LABEL_132;
          }
          *(void *)uint64_t v125 = v127;
          uint64_t v81 = v146;
          *(void *)&v146[16 * v121 + 8] = v129;
          unint64_t v131 = *((void *)v124 + 2);
          if (v82 >= v131) {
            goto LABEL_133;
          }
          uint64_t v13 = v124;
          uint64_t v147 = 0;
          unint64_t v14 = v131 - 1;
          memmove(v128, v128 + 16, 16 * (v131 - 1 - v82));
          *((void *)v124 + 2) = v131 - 1;
          a1 = v122;
          if (v131 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v14 = 1;
LABEL_15:
      Swift::Int v6 = a1[1];
      Swift::Int v12 = v158;
      if (v158 >= v6)
      {
        uint64_t v11 = v142;
        if (v14 < 2) {
          goto LABEL_128;
        }
        goto LABEL_115;
      }
      continue;
    }
    break;
  }
  if (__OFADD__(v12, v141)) {
    goto LABEL_153;
  }
  if (v12 + v141 >= v6) {
    Swift::Int v57 = v6;
  }
  else {
    Swift::Int v57 = v12 + v141;
  }
  if (v57 >= v12)
  {
    if (v15 != v57)
    {
      uint64_t v140 = v13;
      uint64_t v58 = 40 * v15 - 40;
      Swift::Int v143 = v57;
      do
      {
        char v146 = (char *)v58;
        Swift::Int v158 = v15;
        while (1)
        {
          uint64_t v59 = *a1 + v58;
          sub_100023D40(v59 + 40, (uint64_t)&v155);
          sub_100023D40(v59, (uint64_t)v152);
          uint64_t v60 = v156;
          uint64_t v61 = v157;
          sub_100024D3C(&v155, v156);
          uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 104))(v60, v61);
          if (!v62) {
            goto LABEL_54;
          }
          uint64_t v63 = (void *)v62;
          uint64_t v64 = v153;
          uint64_t v65 = v154;
          sub_100024D3C(v152, v153);
          uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 104))(v64, v65);
          if (!v66)
          {

            Swift::Int v15 = v158;
LABEL_54:
            sub_100023B0C((uint64_t)v152);
            sub_100023B0C((uint64_t)&v155);
            goto LABEL_55;
          }
          uint64_t v67 = (void *)v66;
          unint64_t v68 = a1;
          id v69 = [v63 date];
          uint64_t v70 = v150;
          sub_1000ADEB8();

          id v71 = [v67 date];
          uint64_t v72 = v151;
          sub_1000ADEB8();

          LOBYTE(v71) = sub_1000ADEA8();
          uint64_t v73 = v149;
          uint64_t v74 = *v148;
          (*v148)(v72, v149);
          v74(v70, v73);
          sub_100023B0C((uint64_t)v152);
          sub_100023B0C((uint64_t)&v155);
          if ((v71 & 1) == 0) {
            break;
          }
          uint64_t v75 = *v68;
          Swift::Int v15 = v158;
          if (!*v68) {
            goto LABEL_155;
          }
          a1 = v68;
          uint64_t v76 = v75 + v58;
          sub_100006A40((long long *)(v75 + v58 + 40), (uint64_t)&v155);
          long long v77 = *(_OWORD *)(v76 + 16);
          *(_OWORD *)(v76 + 40) = *(_OWORD *)v76;
          *(_OWORD *)(v76 + 56) = v77;
          *(void *)(v76 + 72) = *(void *)(v76 + 32);
          sub_100006A40(&v155, v76);
          v58 -= 40;
          if (v15 == ++v12) {
            goto LABEL_55;
          }
        }
        a1 = v68;
        Swift::Int v15 = v158;
LABEL_55:
        ++v15;
        uint64_t v58 = (uint64_t)(v146 + 40);
        Swift::Int v12 = v144;
      }
      while (v15 != v143);
      Swift::Int v15 = v143;
      uint64_t v13 = v140;
    }
    goto LABEL_65;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  Swift::Int result = sub_1000AF988();
  __break(1u);
  return result;
}

uint64_t sub_100071BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v44 = a4;
  uint64_t v34 = a1;
  uint64_t v36 = sub_1000ADF08();
  uint64_t v6 = __chkstk_darwin(v36);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v6);
  Swift::Int v12 = (char *)&v32 - v11;
  uint64_t v37 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v13 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v14 = 40 * v37 - 40;
LABEL_7:
    uint64_t v15 = v34;
    uint64_t v35 = v14;
    while (1)
    {
      uint64_t v16 = *v44 + v14;
      sub_100023D40(v16 + 40, (uint64_t)&v41);
      sub_100023D40(v16, (uint64_t)v38);
      uint64_t v17 = v42;
      uint64_t v18 = v43;
      sub_100024D3C(&v41, v42);
      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 104))(v17, v18);
      if (!v19) {
        goto LABEL_5;
      }
      unint64_t v20 = (void *)v19;
      uint64_t v22 = v39;
      uint64_t v21 = v40;
      sub_100024D3C(v38, v39);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 104))(v22, v21);
      if (!v23)
      {

LABEL_5:
        sub_100023B0C((uint64_t)v38);
        uint64_t result = sub_100023B0C((uint64_t)&v41);
LABEL_6:
        uint64_t v14 = v35 + 40;
        if (++v37 == v33) {
          return result;
        }
        goto LABEL_7;
      }
      uint64_t v24 = (void *)v23;
      id v25 = [v20 date];
      sub_1000ADEB8();

      id v26 = [v24 date];
      sub_1000ADEB8();

      LOBYTE(v26) = sub_1000ADEA8();
      id v27 = *v13;
      uint64_t v28 = v36;
      (*v13)(v8, v36);
      v27(v12, v28);
      sub_100023B0C((uint64_t)v38);
      uint64_t result = sub_100023B0C((uint64_t)&v41);
      if ((v26 & 1) == 0) {
        goto LABEL_6;
      }
      uint64_t v29 = *v44;
      if (!*v44) {
        break;
      }
      uint64_t v30 = v29 + v14;
      sub_100006A40((long long *)(v29 + v14 + 40), (uint64_t)&v41);
      long long v31 = *(_OWORD *)(v30 + 16);
      *(_OWORD *)(v30 + 40) = *(_OWORD *)v30;
      *(_OWORD *)(v30 + 56) = v31;
      *(void *)(v30 + 72) = *(void *)(v30 + 32);
      uint64_t result = sub_100006A40(&v41, v30);
      v14 -= 40;
      if (v37 == ++v15) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100071EE0(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v72 = sub_1000ADF08();
  uint64_t v8 = __chkstk_darwin(v72);
  id v71 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v73 = (char *)&v68 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = (a2 - a1) / 40;
  uint64_t v14 = a3 - (void)a2;
  uint64_t v15 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v70 = a1;
  unint64_t v82 = a1;
  uint64_t v81 = a4;
  if (v13 >= v15)
  {
    if (v14 < -39) {
      goto LABEL_51;
    }
    long long v41 = v70;
    if (a4 != a2 || &a2[40 * v15] <= a4)
    {
      uint64_t v42 = v10;
      memmove(a4, a2, 40 * v15);
      uint64_t v10 = v42;
    }
    uint64_t v43 = &a4[40 * v15];
    uint64_t v80 = v43;
    unint64_t v82 = a2;
    if (v14 < 40 || v41 >= a2)
    {
LABEL_50:
      sub_100072614((void **)&v82, (const void **)&v81, &v80);
      return 1;
    }
    id v69 = (void (**)(char *, uint64_t))(v10 + 8);
    unint64_t v44 = a3 - 40;
    while (1)
    {
      sub_100023D40((uint64_t)(v43 - 40), (uint64_t)v77);
      uint64_t v47 = a2 - 40;
      sub_100023D40((uint64_t)(a2 - 40), (uint64_t)v74);
      uint64_t v48 = v78;
      uint64_t v49 = v79;
      sub_100024D3C(v77, v78);
      uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 104))(v48, v49);
      if (v50)
      {
        uint64_t v51 = (void *)v50;
        uint64_t v52 = v75;
        uint64_t v53 = v76;
        sub_100024D3C(v74, v75);
        uint64_t v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 104))(v52, v53);
        if (v54)
        {
          uint64_t v55 = (void *)v54;
          id v56 = [v51 date];
          sub_1000ADEB8();

          id v57 = [v55 date];
          uint64_t v58 = v71;
          sub_1000ADEB8();

          char v59 = sub_1000ADEA8();
          uint64_t v60 = *v69;
          uint64_t v61 = v72;
          (*v69)(v58, v72);
          uint64_t v62 = v70;
          v60(v73, v61);
          long long v41 = v62;
          goto LABEL_41;
        }
      }
      char v59 = 0;
LABEL_41:
      uint64_t v63 = (char *)(v44 + 40);
      sub_100023B0C((uint64_t)v74);
      sub_100023B0C((uint64_t)v77);
      if (v59)
      {
        if (v63 != a2 || v44 >= (unint64_t)a2)
        {
          long long v45 = *(_OWORD *)v47;
          long long v46 = *(_OWORD *)(a2 - 24);
          *(void *)(v44 + 32) = *((void *)a2 - 1);
          *(_OWORD *)unint64_t v44 = v45;
          *(_OWORD *)(v44 + 16) = v46;
        }
        v82 -= 40;
        uint64_t v43 = v80;
        if (v80 <= a4) {
          goto LABEL_50;
        }
      }
      else
      {
        uint64_t v64 = v80;
        uint64_t v43 = v80 - 40;
        v80 -= 40;
        if (v63 < v64 || v44 >= (unint64_t)v64 || v63 != v64)
        {
          long long v65 = *(_OWORD *)v43;
          long long v66 = *(_OWORD *)(v64 - 24);
          *(void *)(v44 + 32) = *((void *)v64 - 1);
          *(_OWORD *)unint64_t v44 = v65;
          *(_OWORD *)(v44 + 16) = v66;
        }
        uint64_t v47 = a2;
        if (v43 <= a4) {
          goto LABEL_50;
        }
      }
      v44 -= 40;
      a2 = v47;
      if (v47 <= v41) {
        goto LABEL_50;
      }
    }
  }
  if (v12 >= -39)
  {
    if (a4 != v70 || &v70[40 * v13] <= a4)
    {
      uint64_t v16 = v10;
      memmove(a4, v70, 40 * v13);
      uint64_t v10 = v16;
    }
    unint64_t v17 = (unint64_t)&a4[40 * v13];
    uint64_t v80 = (char *)v17;
    if (v12 >= 40 && (unint64_t)a2 < a3)
    {
      uint64_t v18 = (void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v19 = v73;
      while (1)
      {
        sub_100023D40((uint64_t)a2, (uint64_t)v77);
        sub_100023D40((uint64_t)a4, (uint64_t)v74);
        uint64_t v20 = v78;
        uint64_t v21 = v79;
        sub_100024D3C(v77, v78);
        uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 104))(v20, v21);
        if (!v22) {
          goto LABEL_17;
        }
        uint64_t v23 = (void *)v22;
        uint64_t v24 = v75;
        uint64_t v25 = v76;
        sub_100024D3C(v74, v75);
        uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 104))(v24, v25);
        if (!v26) {
          break;
        }
        id v27 = (void *)v26;
        id v28 = [v23 date];
        sub_1000ADEB8();

        id v29 = [v27 date];
        uint64_t v30 = v71;
        sub_1000ADEB8();

        LOBYTE(v29) = sub_1000ADEA8();
        long long v31 = *v18;
        uint64_t v32 = v30;
        uint64_t v33 = v72;
        (*v18)(v32, v72);
        v31(v19, v33);
        sub_100023B0C((uint64_t)v74);
        sub_100023B0C((uint64_t)v77);
        if ((v29 & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v34 = v82;
        unint64_t v35 = (unint64_t)(a2 + 40);
        if (v82 >= a2 && (unint64_t)v82 < v35 && v82 == a2)
        {
          uint64_t v34 = a2;
        }
        else
        {
          long long v36 = *(_OWORD *)a2;
          long long v37 = *((_OWORD *)a2 + 1);
          *((void *)v82 + 4) = *((void *)a2 + 4);
          *uint64_t v34 = v36;
          v34[1] = v37;
        }
LABEL_22:
        unint64_t v82 = (char *)v34 + 40;
        a4 = v81;
        if ((unint64_t)v81 < v17)
        {
          a2 = (char *)v35;
          if (v35 < a3) {
            continue;
          }
        }
        goto LABEL_50;
      }

LABEL_17:
      sub_100023B0C((uint64_t)v74);
      sub_100023B0C((uint64_t)v77);
LABEL_18:
      uint64_t v34 = v82;
      uint64_t v38 = v81 + 40;
      if (v82 != v81 || v82 >= v38)
      {
        long long v39 = *(_OWORD *)v81;
        long long v40 = *((_OWORD *)v81 + 1);
        *((void *)v82 + 4) = *((void *)v81 + 4);
        *uint64_t v34 = v39;
        v34[1] = v40;
      }
      uint64_t v81 = v38;
      unint64_t v35 = (unint64_t)a2;
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_51:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

char *sub_100072518(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000693C(&qword_1000D79D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100072614(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_1000AF9D8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

char *sub_1000726E0(uint64_t a1)
{
  return sub_100072518(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000726F4(void *a1)
{
  return sub_1000A7E40(0, a1[2], 0, a1);
}

void (*sub_100072708(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(void *a1)
{
  uint64_t v10 = sub_1000AE3F8();
  *a1 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  a1[1] = v11;
  uint64_t result = (void (*)(void *))malloc(*(void *)(v11 + 64));
  a1[2] = (uint64_t)result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void))(v12 + 16))();
    return sub_100072804;
  }
  return result;
}

void sub_100072804(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

void (*sub_100072850(void (**a1)(uint64_t *a1), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(uint64_t *a1)
{
  uint64_t v11 = *(void *)(type metadata accessor for TTRNewWidgetPresenter.Division(0) - 8);
  uint64_t result = (void (*)(uint64_t *))malloc(*(void *)(v11 + 64));
  *a1 = result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    sub_100074650(a4 + *(void *)(v11 + 72) * a2, (uint64_t)result, type metadata accessor for TTRNewWidgetPresenter.Division);
    return sub_100072944;
  }
  return result;
}

void sub_100072944(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  sub_1000746B8(*a1, type metadata accessor for TTRNewWidgetPresenter.Division);

  free(v1);
}

void *sub_100072994(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = *(void *)(sub_1000AE3F8() - 8);
  uint64_t v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  uint64_t v8 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v9 = sub_1000AE3D8();
    uint64_t v10 = (void *)v9;
    if (*(void *)(a2 + 16) && (unint64_t v11 = sub_100070100(v9), (v12 & 1) != 0))
    {
      sub_100023D40(*(void *)(a2 + 56) + 40 * v11, (uint64_t)&v16);
    }
    else
    {
      uint64_t v18 = 0;
      long long v16 = 0u;
      long long v17 = 0u;
    }

    if (*((void *)&v17 + 1))
    {
      sub_100006A40(&v16, (uint64_t)v19);
      sub_100006A40(v19, (uint64_t)&v16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1000221FC(0, v8[2] + 1, 1, v8);
      }
      unint64_t v14 = v8[2];
      unint64_t v13 = v8[3];
      if (v14 >= v13 >> 1) {
        uint64_t v8 = sub_1000221FC((void *)(v13 > 1), v14 + 1, 1, v8);
      }
      long long v8[2] = v14 + 1;
      sub_100006A40(&v16, (uint64_t)&v8[5 * v14 + 4]);
    }
    else
    {
      sub_100009EF4((uint64_t)&v16, &qword_1000D79D8);
    }
    v6 += v7;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100072B78(uint64_t a1, uint64_t (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_10000693C(&qword_1000D7890);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v26 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (v11)
  {
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_22:
    uint64_t v19 = *(void *)(a1 + 56);
    uint64_t v20 = *(void **)(*(void *)(a1 + 48) + 8 * v15);
    uint64_t v21 = v19
        + *(void *)(*(void *)(type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry(0) - 8) + 72)
        * v15;
    uint64_t v22 = (uint64_t)v7 + *(int *)(v5 + 48);
    sub_100074650(v21, v22, type metadata accessor for TTRNewWidgetInteractor.CompletedCacheEntry);
    void *v7 = v20;
    uint64_t v23 = a2(v20, v22);
    uint64_t result = sub_100009EF4((uint64_t)v7, &qword_1000D7890);
    if (v23)
    {
      sub_1000AF568();
      if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000AF5B8();
      }
      sub_1000AF5D8();
      uint64_t result = sub_1000AF5A8();
    }
  }
  int64_t v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v16 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v16);
  ++v13;
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 1;
  if (v16 + 1 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v13);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 2;
  if (v16 + 2 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v13);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 3;
  if (v16 + 3 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v13);
  if (v17)
  {
LABEL_21:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_22;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v26)
  {
LABEL_26:
    swift_release();
    return v28;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17)
  {
    int64_t v13 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100072E38(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000AF998();
    swift_bridgeObjectRelease();
  }
  sub_1000AE278();
  sub_100070F44(&qword_1000D7958, (void (*)(uint64_t))&type metadata accessor for REMObjectID_Codable);
  uint64_t result = sub_1000AF658();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000AF998();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)sub_1000AF8D8();
        sub_10006E948(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_10006E948(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100072FAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000AE3F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  long long v36 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v9 = (char *)v31 - v8;
  uint64_t v10 = sub_1000AE588();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) + 24);
  unint64_t v35 = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, (char *)a2 + v14, v10);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v15 == enum case for REMRemindersListDataView.FetchSubtasks.off(_:))
  {
LABEL_20:
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v15 != enum case for REMRemindersListDataView.FetchSubtasks.on(_:))
  {
    if (v15 != enum case for REMRemindersListDataView.FetchSubtasks.count(_:)) {
      goto LABEL_26;
    }
    goto LABEL_20;
  }
  long long v37 = _swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return (uint64_t)v37;
  }
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v33 = v5 + 16;
  unint64_t v34 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v17 = (char *)(a1 + v34);
  uint64_t v18 = *(void *)(v5 + 72);
  uint64_t v19 = (void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v20 = (void (**)(char *, uint64_t))(v5 + 8);
  v31[1] = a1;
  swift_bridgeObjectRetain();
  for (uint64_t i = v16 - 1; ; --i)
  {
    uint64_t v22 = v32;
    v32(v9, v17, v4);
    v22(v36, v9, v4);
    unint64_t v23 = (unint64_t)v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v23 = sub_1000226E4(0, *(void *)(v23 + 16) + 1, 1, v23);
    }
    unint64_t v25 = *(void *)(v23 + 16);
    unint64_t v24 = *(void *)(v23 + 24);
    if (v25 >= v24 >> 1) {
      unint64_t v23 = sub_1000226E4(v24 > 1, v25 + 1, 1, v23);
    }
    *(void *)(v23 + 16) = v25 + 1;
    (*v19)(v23 + v34 + v25 * v18, v36, v4);
    long long v37 = (void *)v23;
    uint64_t v26 = *v35;
    if (*(void *)(v23 + 16) >= *v35)
    {
      (*v20)(v9, v4);
LABEL_22:
      swift_bridgeObjectRelease();
      return (uint64_t)v37;
    }
    int64_t v27 = sub_1000AE3E8();
    if (!v27)
    {
      (*v20)(v9, v4);
      if (!i) {
        goto LABEL_22;
      }
      goto LABEL_6;
    }
    uint64_t v28 = v26 - *(void *)(v23 + 16);
    if (*(void *)(v27 + 16) < v28) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    if (v28 < 0) {
      break;
    }
    sub_10006C730(v27, v27 + v34, 0, (2 * v28) | 1);
    uint64_t v29 = v37[2];
    (*v20)(v9, v4);
    if (v29 >= *v35 || !i) {
      goto LABEL_22;
    }
LABEL_6:
    v17 += v18;
  }
  __break(1u);
LABEL_26:
  uint64_t result = sub_1000AFA28();
  __break(1u);
  return result;
}

uint64_t sub_100073398(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, int a6)
{
  uint64_t v143 = a2;
  Swift::Int v144 = a1;
  uint64_t v10 = sub_10000693C(&qword_1000D78B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v137 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  uint64_t v134 = *(void *)(Configuration - 8);
  uint64_t v12 = __chkstk_darwin(Configuration);
  uint64_t v139 = (uint64_t)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = v13;
  __chkstk_darwin(v12);
  uint64_t v140 = (uint64_t)&v123 - v14;
  uint64_t v15 = sub_10000693C(&qword_1000D78A0);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000AE538();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v142 = (char *)&v123 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  int64_t v27 = (char *)&v123 - v26;
  uint64_t v132 = v28;
  __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v123 - v29;
  uint64_t v31 = swift_allocObject();
  uint64_t v126 = a4;
  *(void *)(v31 + 16) = a4;
  *(void *)(v31 + 24) = a5;
  uint64_t v138 = v31;
  int v128 = a6;
  *(unsigned char *)(v31 + 32) = a6;
  uint64_t v32 = a3;
  uint64_t v33 = a3 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle;
  char v34 = (char)v144;
  sub_100009D6C(v33, (uint64_t)v17, &qword_1000D78A0);
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  uint64_t v127 = a5;
  if (v35 == 1)
  {
    swift_retain();
    sub_100009EF4((uint64_t)v17, &qword_1000D78A0);
    sub_1000ADFF8();
    int v36 = 1 << v34;
    long long v37 = v142;
    uint64_t v38 = v143;
    uint64_t v39 = v140;
    if ((v36 & 0x66) == 0)
    {
      long long v40 = (void *)sub_1000ADFE8();
      if (v40)
      {
        long long v41 = v40;
        id v42 = [v40 sortingStyle];
        sub_1000AF738();

        long long v37 = v142;
        (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v18);
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v27, v22, v18);
      }
    }
    uint64_t v130 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v130(v30, v27, v18);
  }
  else
  {
    uint64_t v130 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v130(v30, v17, v18);
    swift_retain();
    long long v37 = v142;
    uint64_t v38 = v143;
    uint64_t v39 = v140;
  }
  unint64_t v133 = v22;
  uint64_t v136 = v32;
  char v43 = (char)v144;
  if (qword_1000D4920 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_1000AE768();
  sub_10000EFA4(v44, (uint64_t)qword_1000D75F8);
  sub_100074650(v38, v39, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  long long v45 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  Swift::Int v141 = v30;
  unint64_t v131 = v45;
  v45(v37, v30, v18);
  long long v46 = v37;
  uint64_t v47 = sub_1000AE758();
  os_log_type_t v48 = sub_1000AF718();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v124 = v19;
    uint64_t v49 = swift_slowAlloc();
    uint64_t v123 = swift_slowAlloc();
    uint64_t v146 = v123;
    *(_DWORD *)uint64_t v49 = 136315650;
    unint64_t v50 = 0xE500000000000000;
    uint64_t v51 = 0x7961646F74;
    uint64_t v125 = v18;
    switch(v43)
    {
      case 1:
        uint64_t v51 = 0x656C756465686373;
        goto LABEL_18;
      case 2:
        unint64_t v50 = 0xE300000000000000;
        uint64_t v51 = 7105633;
        break;
      case 3:
        unint64_t v50 = 0xE700000000000000;
        uint64_t v51 = 0x64656767616C66;
        break;
      case 4:
        unint64_t v50 = 0xE800000000000000;
        uint64_t v51 = 0x64656E6769737361;
        break;
      case 5:
        unint64_t v50 = 0xEF737070416E4964;
        uint64_t v51 = 0x6E756F4669726973;
        break;
      case 6:
        uint64_t v51 = 0x6574656C706D6F63;
LABEL_18:
        unint64_t v50 = 0xE900000000000064;
        break;
      default:
        break;
    }
    uint64_t v145 = sub_1000A53D8(v51, v50, &v146);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    uint64_t v53 = v140;
    sub_100074650(v140, v139, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    uint64_t v54 = sub_1000AF4B8();
    uint64_t v145 = sub_1000A53D8(v54, v55, &v146);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    sub_1000746B8(v53, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    *(_WORD *)(v49 + 22) = 2080;
    id v56 = v142;
    uint64_t v57 = sub_1000AE528();
    uint64_t v145 = sub_1000A53D8(v57, v58, &v146);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    uint64_t v59 = v124;
    uint64_t v52 = *(void (**)(char *, uint64_t))(v124 + 8);
    uint64_t v18 = v125;
    v52(v56, v125);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "TTRNewWidgetInteractor fetching pre-defined smart list: %s configuration %s sortingStyle: %s", (uint8_t *)v49, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v19 = v59;
    swift_slowDealloc();

    char v43 = (char)v144;
  }
  else
  {
    sub_1000746B8(v39, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    uint64_t v52 = *(void (**)(char *, uint64_t))(v19 + 8);
    v52(v46, v18);
  }
  uint64_t v60 = v141;
  switch(v43)
  {
    case 0:
      uint64_t v61 = v139;
      sub_100074650(v143, v139, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      Swift::Int v144 = v52;
      uint64_t v62 = v133;
      v131(v133, v60, v18);
      unint64_t v63 = (*(unsigned __int8 *)(v134 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
      unint64_t v64 = (v135 + *(unsigned __int8 *)(v19 + 80) + v63) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      uint64_t v65 = swift_allocObject();
      uint64_t v66 = v136;
      *(void *)(v65 + 16) = v136;
      sub_10007471C(v61, v65 + v63, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v67 = v62;
      uint64_t v52 = v144;
      v130((char *)(v65 + v64), v67, v18);
      uint64_t v68 = swift_allocObject();
      uint64_t v69 = v138;
      *(void *)(v68 + 16) = sub_100074644;
      *(void *)(v68 + 24) = v69;
      uint64_t v70 = sub_1000AF648();
      uint64_t v71 = (uint64_t)v137;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v137, 1, 1, v70);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v72 = sub_1000AF618();
      uint64_t v73 = (void *)swift_allocObject();
      v73[2] = v72;
      v73[3] = &protocol witness table for MainActor;
      v73[4] = &unk_1000D7938;
      v73[5] = v65;
      v73[6] = v66;
      v73[7] = sub_1000748CC;
      v73[8] = v68;
      uint64_t v74 = &unk_1000D7940;
      goto LABEL_26;
    case 1:
      uint64_t v75 = v139;
      sub_100074650(v143, v139, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v76 = v60;
      unint64_t v77 = (*(unsigned __int8 *)(v134 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
      uint64_t v78 = swift_allocObject();
      uint64_t v79 = v136;
      *(void *)(v78 + 16) = v136;
      sub_10007471C(v75, v78 + v77, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v80 = swift_allocObject();
      uint64_t v81 = v138;
      *(void *)(v80 + 16) = sub_100074644;
      *(void *)(v80 + 24) = v81;
      uint64_t v82 = sub_1000AF648();
      uint64_t v83 = (uint64_t)v137;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v137, 1, 1, v82);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v84 = sub_1000AF618();
      uint64_t v85 = (void *)swift_allocObject();
      v85[2] = v84;
      v85[3] = &protocol witness table for MainActor;
      v85[4] = &unk_1000D7908;
      v85[5] = v78;
      v85[6] = v79;
      v85[7] = sub_1000748CC;
      v85[8] = v80;
      sub_10006C558(v83, (uint64_t)&unk_1000D7910, (uint64_t)v85);
      swift_release();
      uint64_t v60 = v76;
      goto LABEL_27;
    case 2:
      uint64_t v86 = v139;
      sub_100074650(v143, v139, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      Swift::Int v144 = v52;
      uint64_t v87 = v133;
      v131(v133, v60, v18);
      unint64_t v88 = (*(unsigned __int8 *)(v134 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
      unint64_t v89 = (v135 + *(unsigned __int8 *)(v19 + 80) + v88) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      uint64_t v90 = swift_allocObject();
      uint64_t v91 = v136;
      *(void *)(v90 + 16) = v136;
      sub_10007471C(v86, v90 + v88, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v92 = v87;
      uint64_t v52 = v144;
      v130((char *)(v90 + v89), v92, v18);
      uint64_t v93 = swift_allocObject();
      uint64_t v94 = v138;
      *(void *)(v93 + 16) = sub_100074644;
      *(void *)(v93 + 24) = v94;
      uint64_t v95 = sub_1000AF648();
      uint64_t v71 = (uint64_t)v137;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v137, 1, 1, v95);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v96 = sub_1000AF618();
      uint64_t v73 = (void *)swift_allocObject();
      v73[2] = v96;
      v73[3] = &protocol witness table for MainActor;
      v73[4] = &unk_1000D78F0;
      v73[5] = v90;
      v73[6] = v91;
      v73[7] = sub_1000748CC;
      v73[8] = v93;
      uint64_t v74 = &unk_1000D78F8;
      goto LABEL_26;
    case 3:
      uint64_t v97 = v139;
      sub_100074650(v143, v139, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      Swift::Int v144 = v52;
      uint64_t v98 = v133;
      v131(v133, v60, v18);
      unint64_t v99 = (*(unsigned __int8 *)(v134 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
      unint64_t v100 = (v135 + *(unsigned __int8 *)(v19 + 80) + v99) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      uint64_t v101 = swift_allocObject();
      uint64_t v102 = v136;
      *(void *)(v101 + 16) = v136;
      sub_10007471C(v97, v101 + v99, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      BOOL v103 = v98;
      uint64_t v52 = v144;
      v130((char *)(v101 + v100), v103, v18);
      uint64_t v104 = swift_allocObject();
      uint64_t v105 = v138;
      *(void *)(v104 + 16) = sub_100074644;
      *(void *)(v104 + 24) = v105;
      uint64_t v106 = sub_1000AF648();
      uint64_t v71 = (uint64_t)v137;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v137, 1, 1, v106);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v107 = sub_1000AF618();
      uint64_t v73 = (void *)swift_allocObject();
      v73[2] = v107;
      v73[3] = &protocol witness table for MainActor;
      v73[4] = &unk_1000D7920;
      v73[5] = v101;
      v73[6] = v102;
      v73[7] = sub_1000748CC;
      v73[8] = v104;
      uint64_t v74 = &unk_1000D7928;
      goto LABEL_26;
    case 4:
      uint64_t v108 = v139;
      sub_100074650(v143, v139, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      Swift::Int v144 = v52;
      uint64_t v109 = v133;
      v131(v133, v60, v18);
      unint64_t v110 = (*(unsigned __int8 *)(v134 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
      unint64_t v111 = (v135 + *(unsigned __int8 *)(v19 + 80) + v110) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      uint64_t v112 = swift_allocObject();
      uint64_t v113 = v136;
      *(void *)(v112 + 16) = v136;
      sub_10007471C(v108, v112 + v110, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
      uint64_t v114 = v109;
      uint64_t v52 = v144;
      v130((char *)(v112 + v111), v114, v18);
      uint64_t v115 = swift_allocObject();
      uint64_t v116 = v138;
      *(void *)(v115 + 16) = sub_100074644;
      *(void *)(v115 + 24) = v116;
      uint64_t v117 = sub_1000AF648();
      uint64_t v71 = (uint64_t)v137;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v137, 1, 1, v117);
      sub_1000AF628();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v118 = sub_1000AF618();
      uint64_t v73 = (void *)swift_allocObject();
      v73[2] = v118;
      v73[3] = &protocol witness table for MainActor;
      v73[4] = &unk_1000D78D0;
      v73[5] = v112;
      v73[6] = v113;
      v73[7] = sub_1000748CC;
      v73[8] = v115;
      uint64_t v74 = &unk_1000D78E0;
LABEL_26:
      sub_10006C558(v71, (uint64_t)v74, (uint64_t)v73);
      swift_release();
      uint64_t v60 = v141;
LABEL_27:
      swift_release();
      swift_release();
      break;
    case 5:
    case 6:
      uint64_t v119 = self;
      NSString v120 = sub_1000AF478();
      id v121 = [v119 internalErrorWithDebugDescription:v120];

      uint64_t v146 = (uint64_t)v121;
      long long v147 = 0u;
      long long v148 = 0u;
      char v149 = 1;
      sub_100084154((uint64_t)&v146, v126, v127, v128);

      break;
    default:
      JUMPOUT(0);
  }
  v52(v60, v18);
  return swift_release();
}

uint64_t type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D7C70);
}

uint64_t sub_10007460C()
{
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100074644(uint64_t a1)
{
  return sub_100084154(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100074650(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000746B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10007471C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100074784(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_1000AE538() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10000F290;
  return sub_100067DF4(a1, v9, v10, v11);
}

uint64_t sub_1000748CC(uint64_t a1)
{
  return sub_100074D0C(a1, &qword_1000D79E8);
}

uint64_t sub_1000748DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10000F290;
  return sub_10006AE58(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000749BC()
{
  uint64_t v1 = (int *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_1000AE538();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v17 = v2 | v7 | 7;
  uint64_t v18 = v8 + *(void *)(v6 + 64);
  swift_release();
  uint64_t v9 = v0 + v3;
  uint64_t v10 = v0 + v3 + v1[7];
  uint64_t v11 = sub_1000ADF08();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = sub_10000693C(&qword_1000D78C8);
  v12(v10 + *(int *)(v13 + 36), v11);
  uint64_t v14 = v9 + v1[8];
  uint64_t v15 = sub_1000AE588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  v12(v9 + v1[9], v11);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return _swift_deallocObject(v0, v18, v17);
}

uint64_t sub_100074BC4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_1000AE538() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10000F290;
  return sub_100067558(a1, v9, v10, v11);
}

uint64_t sub_100074D0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(uint64_t (**)(unsigned char *))(v2 + 16);
  sub_10001D8DC(a1, (uint64_t)v5, a2);
  return v3(v5);
}

uint64_t sub_100074D54(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10000F290;
  return sub_100066B60(a1, v5, v6);
}

uint64_t sub_100074E44(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_1000AE538() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10000F290;
  return sub_100066330(a1, v9, v10, v11);
}

uint64_t sub_100074F94(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_1000AE538() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10000F290;
  return sub_1000657F4(a1, v9, v10, v11);
}

uint64_t sub_1000750E0()
{
  return sub_1000687B4();
}

uint64_t sub_1000750E8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000F290;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000D7980 + dword_1000D7980);
  return v6(a1, v4);
}

uint64_t sub_1000751A0(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = result;
    sub_100009D6C(result + 32, (uint64_t)&v40, &qword_1000D79E0);
    uint64_t v7 = v40;
    sub_100006A40(v41, (uint64_t)v39);
    uint64_t v8 = *a3;
    unint64_t v10 = sub_100070100((uint64_t)v7);
    uint64_t v11 = *(void *)(v8 + 16);
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    char v14 = v9;
    if (*(void *)(v8 + 24) < v13)
    {
      sub_10006F920(v13, a2 & 1);
      unint64_t v15 = sub_100070100((uint64_t)v7);
      if ((v14 & 1) != (v16 & 1))
      {
LABEL_26:
        sub_100070F8C(0, &qword_1000D7878);
        uint64_t result = sub_1000AFA68();
        __break(1u);
        return result;
      }
      unint64_t v10 = v15;
      if ((v14 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      sub_100023D40(*(void *)(*a3 + 56) + 40 * v10, (uint64_t)v38);
      sub_100023B0C((uint64_t)v39);

      uint64_t v17 = *(void *)(*a3 + 56) + 40 * v10;
      sub_100023B0C(v17);
      uint64_t result = sub_100006A40(v38, v17);
      uint64_t v18 = v3 - 1;
      if (v3 == 1) {
        return result;
      }
LABEL_15:
      for (uint64_t i = v6 + 80; ; i += 48)
      {
        sub_100009D6C(i, (uint64_t)&v40, &qword_1000D79E0);
        uint64_t v26 = v40;
        sub_100006A40(v41, (uint64_t)v39);
        uint64_t v27 = *a3;
        unint64_t v28 = sub_100070100((uint64_t)v26);
        uint64_t v30 = *(void *)(v27 + 16);
        BOOL v31 = (v29 & 1) == 0;
        BOOL v21 = __OFADD__(v30, v31);
        uint64_t v32 = v30 + v31;
        if (v21) {
          break;
        }
        char v33 = v29;
        if (*(void *)(v27 + 24) < v32)
        {
          sub_10006F920(v32, 1);
          unint64_t v28 = sub_100070100((uint64_t)v26);
          if ((v33 & 1) != (v34 & 1)) {
            goto LABEL_26;
          }
        }
        if (v33)
        {
          uint64_t v24 = 40 * v28;
          sub_100023D40(*(void *)(*a3 + 56) + 40 * v28, (uint64_t)v38);
          sub_100023B0C((uint64_t)v39);

          uint64_t v25 = *(void *)(*a3 + 56) + v24;
          sub_100023B0C(v25);
          uint64_t result = sub_100006A40(v38, v25);
        }
        else
        {
          int v35 = (void *)*a3;
          *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
          *(void *)(v35[6] + 8 * v28) = v26;
          uint64_t result = sub_100006A40(v39, v35[7] + 40 * v28);
          uint64_t v36 = v35[2];
          BOOL v21 = __OFADD__(v36, 1);
          uint64_t v37 = v36 + 1;
          if (v21) {
            goto LABEL_25;
          }
          v35[2] = v37;
        }
        if (!--v18) {
          return result;
        }
      }
      goto LABEL_24;
    }
    if (a2)
    {
      if (v9) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_10007047C();
      if (v14) {
        goto LABEL_9;
      }
    }
LABEL_12:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    *(void *)(v19[6] + 8 * v10) = v7;
    uint64_t result = sub_100006A40(v39, v19[7] + 40 * v10);
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    long long v19[2] = v22;
    uint64_t v18 = v3 - 1;
    if (v3 == 1) {
      return result;
    }
    goto LABEL_15;
  }
  return result;
}

void sub_1000754AC(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v8 = (void *)*a3;
    id v9 = *(id *)(a1 + 32);
    unint64_t v11 = sub_100070100((uint64_t)v9);
    uint64_t v12 = v8[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    char v15 = v10;
    if (v8[3] < v14)
    {
      sub_10006F674(v14, a2 & 1);
      unint64_t v16 = sub_100070100((uint64_t)v9);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_26:
        sub_100070F8C(0, &qword_1000D7878);
        sub_1000AFA68();
        __break(1u);
        return;
      }
      unint64_t v11 = v16;
      uint64_t v18 = (void *)*a3;
      if ((v15 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      uint64_t v19 = *(void *)(v18[7] + 8 * v11);

      *(void *)(v18[7] + 8 * v11) = v19;
      uint64_t v20 = v3 - 1;
      if (v3 == 1) {
        return;
      }
LABEL_15:
      for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 2)
      {
        uint64_t v28 = *i;
        char v29 = (void *)*a3;
        id v30 = (id)*(i - 1);
        unint64_t v31 = sub_100070100((uint64_t)v30);
        uint64_t v33 = v29[2];
        BOOL v34 = (v32 & 1) == 0;
        BOOL v23 = __OFADD__(v33, v34);
        uint64_t v35 = v33 + v34;
        if (v23) {
          break;
        }
        char v36 = v32;
        if (v29[3] < v35)
        {
          sub_10006F674(v35, 1);
          unint64_t v31 = sub_100070100((uint64_t)v30);
          if ((v36 & 1) != (v37 & 1)) {
            goto LABEL_26;
          }
        }
        uint64_t v38 = (void *)*a3;
        if (v36)
        {
          uint64_t v26 = 8 * v31;
          uint64_t v27 = *(void *)(v38[7] + 8 * v31);

          *(void *)(v38[7] + v26) = v27;
        }
        else
        {
          v38[(v31 >> 6) + 8] |= 1 << v31;
          uint64_t v39 = 8 * v31;
          *(void *)(v38[6] + v39) = v30;
          *(void *)(v38[7] + v39) = v28;
          uint64_t v40 = v38[2];
          BOOL v23 = __OFADD__(v40, 1);
          uint64_t v41 = v40 + 1;
          if (v23) {
            goto LABEL_25;
          }
          long long v38[2] = v41;
        }
        if (!--v20) {
          return;
        }
      }
      goto LABEL_24;
    }
    if (a2)
    {
      uint64_t v18 = (void *)*a3;
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1000702F0();
      uint64_t v18 = (void *)*a3;
      if (v15) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    uint64_t v21 = 8 * v11;
    *(void *)(v18[6] + v21) = v9;
    *(void *)(v18[7] + v21) = v7;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v18[2] = v24;
    uint64_t v20 = v3 - 1;
    if (v3 == 1) {
      return;
    }
    goto LABEL_15;
  }
}

uint64_t sub_100075704(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_10000F290;
  return sub_10006BD70(a1, a2, v7, v6);
}

uint64_t type metadata accessor for TTRNewWidgetInteractorReminderWrapper(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D7BD0);
}

unint64_t sub_1000757D8()
{
  unint64_t result = qword_1000D79B8;
  if (!qword_1000D79B8)
  {
    sub_100006F98(&qword_1000D79B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D79B8);
  }
  return result;
}

uint64_t sub_100075834(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_10000F290;
  return sub_10006C1FC(a1, a2, v7, v6);
}

uint64_t sub_1000758EC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100075928(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unint64_t v11 = v2;
  v11[1] = sub_10000C7D0;
  return sub_10006AE58(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100075A10()
{
  uint64_t v1 = (int *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = sub_1000ADF08();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = sub_10000693C(&qword_1000D78C8);
  v9(v7 + *(int *)(v10 + 36), v8);
  uint64_t v11 = v6 + v1[8];
  uint64_t v12 = sub_1000AE588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  v9(v6 + v1[9], v8);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100075BAC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000F290;
  return sub_100061E30(a1, v5, v6, v7);
}

uint64_t sub_100075C98(uint64_t a1)
{
  return sub_100074D0C(a1, &qword_1000D7A78);
}

uint64_t sub_100075CA8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10000F290;
  return sub_10006949C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100075D88(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10000C7D0;
  return sub_10006056C(a1, v5, v6);
}

uint64_t sub_100075E78()
{
  uint64_t v1 = (int *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();

  uint64_t v6 = v0 + v3;
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = sub_1000ADF08();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = sub_10000693C(&qword_1000D78C8);
  v9(v7 + *(int *)(v10 + 36), v8);
  uint64_t v11 = v6 + v1[8];
  uint64_t v12 = sub_1000AE588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  v9(v6 + v1[9], v8);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100076004(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000F290;
  return sub_100063670(a1, v5, v6, v7);
}

uint64_t sub_1000760F0(uint64_t a1)
{
  return sub_100074D0C(a1, &qword_1000D7AE8);
}

uint64_t sub_100076100()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100076150(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10000F290;
  return sub_100069FFC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10007622C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100076234()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000762EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
    uint64_t v12 = (void *)(((unint64_t)v4 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100076428(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000764A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unint64_t v11 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v11 = *v12;
  *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100076560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  v7 += 23;
  v8 += 23;
  unint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v11 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100076630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unint64_t v11 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v11 = *v12;
  *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1000766E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  v7 += 23;
  unint64_t v11 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *v11;
  unint64_t v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  *(void *)(v12 & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000767A0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000768F4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_100076908(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 23] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x100076AF8);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for TTRNewWidgetInteractorFetchResult()
{
  return sub_10007837C();
}

void *sub_100076B38(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v4[5] = a2[5];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)v4 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000ADF08();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_10000693C(&qword_1000D58B8);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_100076CE0(uint64_t a1, uint64_t a2)
{
  sub_100023B0C(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000ADF08();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_100076DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1000ADF08();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000693C(&qword_1000D58B8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t *sub_100076EFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_100077080(a1, a2);
  a1[5] = a2[5];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000ADF08();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10000693C(&qword_1000D58B8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t *sub_100077080(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1000772B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000ADF08();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000693C(&qword_1000D58B8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1000773CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100023B0C(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1000ADF08();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000693C(&qword_1000D58B8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_100077558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007756C);
}

uint64_t sub_10007756C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000693C(&qword_1000D58B8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100077620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100077634);
}

uint64_t sub_100077634(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000693C(&qword_1000D58B8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000776E0()
{
  sub_1000777A0(319, (unint64_t *)&unk_1000D7BE0, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000777A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000AF7F8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *sub_1000777F4(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)unint64_t v4 = *a2;
    unint64_t v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000ADF08();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = sub_10000693C(&qword_1000D78C8);
    v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
    uint64_t v13 = a3[6];
    int v14 = &v4[v13];
    int v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1000AE588();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    v11(&v4[a3[7]], (char *)a2 + a3[7], v10);
  }
  return v4;
}

uint64_t sub_100077968(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1000ADF08();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = sub_10000693C(&qword_1000D78C8);
  v11(v4 + *(int *)(v6 + 36), v5);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_1000AE588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];

  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v5);
}

char *sub_100077A78(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000ADF08();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = sub_10000693C(&qword_1000D78C8);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  int v14 = &a2[v12];
  uint64_t v15 = sub_1000AE588();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *sub_100077B9C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000ADF08();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = sub_10000693C(&qword_1000D78C8);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  int v14 = &a2[v12];
  uint64_t v15 = sub_1000AE588();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *sub_100077CC0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000ADF08();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = sub_10000693C(&qword_1000D78C8);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  int v14 = &a2[v12];
  uint64_t v15 = sub_1000AE588();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *sub_100077DE4(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000ADF08();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = sub_10000693C(&qword_1000D78C8);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  int v14 = &a2[v12];
  uint64_t v15 = sub_1000AE588();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

uint64_t sub_100077F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100077F1C);
}

uint64_t sub_100077F1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10000693C(&qword_1000D78C8);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1000AE588();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  uint64_t v13 = sub_1000ADF08();
  int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
  uint64_t v15 = v13;
  uint64_t v16 = a1 + a3[7];

  return v14(v16, a2, v15);
}

uint64_t sub_100078068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007807C);
}

uint64_t sub_10007807C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10000693C(&qword_1000D78C8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_5:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000AE588();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_5;
  }
  uint64_t v15 = sub_1000ADF08();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

void sub_1000781D4()
{
  sub_1000782E8();
  if (v0 <= 0x3F)
  {
    sub_1000AE588();
    if (v1 <= 0x3F)
    {
      sub_1000ADF08();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1000782E8()
{
  if (!qword_1000D7C80)
  {
    sub_1000ADF08();
    sub_100070F44(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t v0 = sub_1000AF438();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D7C80);
    }
  }
}

uint64_t sub_10007837C()
{
  return swift_getGenericMetadata();
}

void *initializeBufferWithCopyOfBuffer for TTRNewWidgetProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for TTRNewWidgetProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for TTRNewWidgetProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for TTRNewWidgetProvider()
{
  return &type metadata for TTRNewWidgetProvider;
}

unint64_t sub_1000784C4()
{
  unint64_t result = qword_1000D7CD0[0];
  if (!qword_1000D7CD0[0])
  {
    type metadata accessor for TTRNewWidgetTimelineEntry(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D7CD0);
  }
  return result;
}

uint64_t sub_10007851C()
{
  uint64_t v0 = sub_1000AE768();
  sub_10000EFDC(v0, qword_1000D7CB8);
  uint64_t v1 = sub_10000EFA4(v0, (uint64_t)qword_1000D7CB8);
  if (qword_1000D4888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000EFA4(v0, (uint64_t)qword_1000E1E48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000785E4(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v25 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = sub_1000AF368();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AF388();
  swift_getKeyPath();
  sub_1000AF378();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_100081C4C(a1, a2 + *(int *)(v4 + 20));
  sub_1000ADEF8();
  uint64_t v13 = a2 + *(int *)(v4 + 24);
  uint64_t v14 = sub_1000AF358();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_bridgeObjectRelease();
  if (qword_1000D4928 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1000AE768();
  sub_10000EFA4(v15, (uint64_t)qword_1000D7CB8);
  sub_10007A554(a2, (uint64_t)v8);
  uint64_t v16 = sub_1000AE758();
  os_log_type_t v17 = sub_1000AF718();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446467;
    uint64_t v26 = &type metadata for TTRNewWidgetProvider;
    uint64_t v27 = v19;
    sub_10000693C(&qword_1000D7CE8);
    uint64_t v20 = sub_1000AF4B8();
    uint64_t v26 = (ValueMetadata *)sub_1000A53D8(v20, v21, &v27);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2081;
    sub_10007A554((uint64_t)v8, v25);
    uint64_t v22 = sub_1000AF4B8();
    uint64_t v26 = (ValueMetadata *)sub_1000A53D8(v22, v23, &v27);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    sub_10007A5B8((uint64_t)v8);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s: Created placeholder {entry: %{private}s}", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10007A5B8((uint64_t)v8);
  }
}

uint64_t sub_1000789A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v63 = a6;
  uint64_t v64 = a5;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v8 = sub_1000ADF08();
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  __chkstk_darwin(v8);
  uint64_t v62 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000AF398();
  uint64_t v10 = *(void *)(v65 - 8);
  uint64_t v11 = __chkstk_darwin(v65);
  uint64_t v54 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v50 - v13;
  uint64_t v15 = sub_1000AF368();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = [a1 list];
  if (v19
    && (v20 = v19, id v21 = [v19 identifier], v20, v21))
  {
    uint64_t v55 = sub_1000AF498();
    unint64_t v56 = v22;
  }
  else
  {
    uint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
  }
  sub_1000AF388();
  swift_getKeyPath();
  uint64_t v57 = sub_1000AF378();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (qword_1000D4928 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1000AE768();
  sub_10000EFA4(v23, (uint64_t)qword_1000D7CB8);
  uint64_t v24 = v65;
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v53(v14, a2, v65);
  id v25 = a1;
  uint64_t v26 = sub_1000AE758();
  os_log_type_t v27 = sub_1000AF718();
  int v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v52 = v30;
    *(_DWORD *)uint64_t v29 = 136446723;
    int v51 = v28;
    uint64_t v66 = &type metadata for TTRNewWidgetProvider;
    uint64_t v67 = v30;
    sub_10000693C(&qword_1000D7CE8);
    uint64_t v31 = sub_1000AF4B8();
    os_log_t v50 = v26;
    char v32 = v14;
    uint64_t v66 = (ValueMetadata *)sub_1000A53D8(v31, v33, &v67);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2081;
    id v34 = v25;
    id v35 = [v34 description];
    uint64_t v36 = sub_1000AF498();
    unint64_t v38 = v37;

    uint64_t v66 = (ValueMetadata *)sub_1000A53D8(v36, v38, &v67);
    sub_1000AF808();

    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2082;
    uint64_t v39 = v65;
    v53(v54, (uint64_t)v32, v65);
    uint64_t v40 = sub_1000AF4B8();
    uint64_t v66 = (ValueMetadata *)sub_1000A53D8(v40, v41, &v67);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v32, v39);
    uint64_t v26 = v50;
    _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v51, "%{public}s: Requesting snapshot {configuration: %{private}s context: %{public}s", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v24);
  }

  if (v57) {
    id v42 = (_UNKNOWN **)v57;
  }
  else {
    id v42 = &off_1000CF2E0;
  }
  char v43 = (void *)swift_allocObject();
  uint64_t v45 = v55;
  unint64_t v44 = v56;
  v43[2] = v55;
  void v43[3] = v44;
  uint64_t v46 = v61;
  v43[4] = v60;
  v43[5] = v46;
  uint64_t v47 = v63;
  v43[6] = v64;
  v43[7] = v47;
  v43[8] = v42;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v48 = (uint64_t)v62;
  sub_1000ADEF8();
  sub_1000811C4(v45, v44, v47, (uint64_t)v42, v48, (uint64_t)sub_10007A664, (uint64_t)v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v48, v59);
}

uint64_t sub_100078FB4(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v47 = a8;
  uint64_t v48 = a4;
  uint64_t v14 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)v44 - v19;
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)v44 - v22;
  if (*(void *)(a1 + 16))
  {
    sub_10007A554(a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), (uint64_t)v44 - v22);
    if (qword_1000D4928 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1000AE768();
    sub_10000EFA4(v24, (uint64_t)qword_1000D7CB8);
    sub_10007A554((uint64_t)v23, (uint64_t)v20);
    id v25 = sub_1000AE758();
    os_log_type_t v26 = sub_1000AF718();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v46 = v14;
      uint64_t v28 = v27;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v47 = a5;
      *(_DWORD *)uint64_t v28 = 136446467;
      uint64_t v49 = &type metadata for TTRNewWidgetProvider;
      uint64_t v50 = v29;
      sub_10000693C(&qword_1000D7CE8);
      uint64_t v30 = sub_1000AF4B8();
      uint64_t v49 = (ValueMetadata *)sub_1000A53D8(v30, v31, &v50);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2085;
      sub_10007A554((uint64_t)v20, (uint64_t)v17);
      uint64_t v32 = sub_1000AF4B8();
      uint64_t v49 = (ValueMetadata *)sub_1000A53D8(v32, v33, &v50);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      sub_10007A5B8((uint64_t)v20);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s: Completed snapshot {entry: %{sensitive}s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10007A5B8((uint64_t)v20);
    }

    uint64_t v17 = v23;
  }
  else
  {
    uint64_t v45 = a2;
    uint64_t v46 = a7;
    if (qword_1000D4928 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1000AE768();
    sub_10000EFA4(v34, (uint64_t)qword_1000D7CB8);
    swift_bridgeObjectRetain_n();
    id v35 = sub_1000AE758();
    os_log_type_t v36 = sub_1000AF718();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v44[0] = v38;
      *(_DWORD *)uint64_t v37 = 136446467;
      uint64_t v49 = &type metadata for TTRNewWidgetProvider;
      uint64_t v50 = v38;
      sub_10000693C(&qword_1000D7CE8);
      v44[1] = a6;
      uint64_t v39 = sub_1000AF4B8();
      uint64_t v49 = (ValueMetadata *)sub_1000A53D8(v39, v40, &v50);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v49 = (ValueMetadata *)sub_1000A53D8(v45, a3, &v50);
      sub_1000AF808();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%{public}s: No timeline entries created placeholder snapshot {url: %{private}s}", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100081C4C(v46, (uint64_t)&v17[*(int *)(v14 + 20)]);
    sub_1000ADEF8();
    unint64_t v41 = &v17[*(int *)(v14 + 24)];
    uint64_t v42 = sub_1000AF358();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
  }
  v48(v17);
  return sub_10007A5B8((uint64_t)v17);
}

uint64_t sub_100079518(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v68 = a6;
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v64 = sub_1000ADF08();
  uint64_t v9 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v67 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AF398();
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v61 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v71 = (char *)&v57 - v14;
  uint64_t v15 = sub_1000AF368();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = [a1 list];
  uint64_t v69 = a5;
  uint64_t v70 = v9;
  if (v19
    && (v20 = v19, id v21 = [v19 identifier], v20, v21))
  {
    uint64_t v62 = sub_1000AF498();
    unint64_t v63 = v22;
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v63 = 0xE000000000000000;
  }
  uint64_t v23 = v11;
  sub_1000AF388();
  swift_getKeyPath();
  uint64_t v24 = sub_1000AF378();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (qword_1000D4928 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1000AE768();
  sub_10000EFA4(v25, (uint64_t)qword_1000D7CB8);
  uint64_t v27 = v71;
  uint64_t v26 = v72;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v28(v71, a2, v23);
  id v29 = a1;
  uint64_t v30 = sub_1000AE758();
  os_log_type_t v31 = sub_1000AF718();
  int v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v33 = swift_slowAlloc();
    int v59 = v32;
    uint64_t v34 = v33;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v60 = v35;
    *(_DWORD *)uint64_t v34 = 136446723;
    uint64_t v58 = v23;
    uint64_t v73 = &type metadata for TTRNewWidgetProvider;
    uint64_t v74 = v35;
    sub_10000693C(&qword_1000D7CE8);
    uint64_t v36 = sub_1000AF4B8();
    uint64_t v73 = (ValueMetadata *)sub_1000A53D8(v36, v37, &v74);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2081;
    id v38 = v29;
    id v39 = [v38 description];
    uint64_t v40 = sub_1000AF498();
    os_log_t v57 = v30;
    unint64_t v41 = (void (*)(char *, char *, uint64_t))v28;
    uint64_t v42 = v40;
    uint64_t v43 = v24;
    unint64_t v45 = v44;

    uint64_t v73 = (ValueMetadata *)sub_1000A53D8(v42, v45, &v74);
    sub_1000AF808();

    uint64_t v24 = v43;
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 22) = 2082;
    uint64_t v46 = v71;
    uint64_t v47 = v58;
    v41(v61, v71, v58);
    uint64_t v48 = sub_1000AF4B8();
    uint64_t v73 = (ValueMetadata *)sub_1000A53D8(v48, v49, &v74);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v47);
    uint64_t v30 = v57;
    _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v59, "%{public}s: Requesting timeline {configuration: %{private}s context: %{public}s", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v23);
  }

  if (v24) {
    uint64_t v50 = (_UNKNOWN **)v24;
  }
  else {
    uint64_t v50 = &off_1000CF308;
  }
  int v51 = (void *)swift_allocObject();
  uint64_t v52 = v68;
  v51[2] = v69;
  v51[3] = v52;
  uint64_t v53 = v65;
  uint64_t v54 = v66;
  v51[4] = v50;
  v51[5] = v53;
  v51[6] = v54;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v55 = (uint64_t)v67;
  sub_1000ADEF8();
  sub_1000811C4(v62, v63, v52, (uint64_t)v50, v55, (uint64_t)sub_10007A544, (uint64_t)v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 8))(v55, v64);
}

uint64_t sub_100079B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v66 = a6;
  uint64_t v67 = a5;
  uint64_t v61 = a2;
  uint64_t v62 = (char *)a4;
  uint64_t v60 = a3;
  uint64_t v7 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000ADF08();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AF308();
  __chkstk_darwin(v15 - 8);
  uint64_t v68 = sub_10000693C(&qword_1000D7CF0);
  uint64_t v64 = *(void *)(v68 - 8);
  uint64_t v16 = __chkstk_darwin(v68);
  uint64_t v17 = __chkstk_darwin(v16);
  unint64_t v63 = (char *)&v59 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  id v21 = (char *)&v59 - v20;
  __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v59 - v23;
  uint64_t v25 = *(void *)(a1 + 16);
  uint64_t v65 = (char *)&v59 - v23;
  if (v25)
  {
    swift_bridgeObjectRetain();
    sub_1000ADE38();
    sub_1000AF2F8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1000784C4();
    sub_1000AF3A8();
    if (qword_1000D4928 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1000AE768();
    sub_10000EFA4(v26, (uint64_t)qword_1000D7CB8);
    uint64_t v27 = v64;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    uint64_t v29 = v68;
    v28(v21, v24, v68);
    uint64_t v30 = sub_1000AE758();
    os_log_type_t v31 = sub_1000AF718();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v62 = (char *)v33;
      *(_DWORD *)uint64_t v32 = 136446467;
      uint64_t v69 = &type metadata for TTRNewWidgetProvider;
      uint64_t v70 = v33;
      sub_10000693C(&qword_1000D7CE8);
      uint64_t v34 = sub_1000AF4B8();
      uint64_t v69 = (ValueMetadata *)sub_1000A53D8(v34, v35, &v70);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2085;
      v28(v63, v21, v68);
      uint64_t v36 = sub_1000AF4B8();
      uint64_t v69 = (ValueMetadata *)sub_1000A53D8(v36, v37, &v70);
      uint64_t v29 = v68;
      sub_1000AF808();
      swift_bridgeObjectRelease();
      id v38 = *(void (**)(char *, uint64_t))(v27 + 8);
      v38(v21, v29);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%{public}s: Completed timeline {timeline: %{sensitive}s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      id v38 = *(void (**)(char *, uint64_t))(v27 + 8);
      v38(v21, v29);
    }
  }
  else
  {
    int v59 = v22;
    sub_100081C4C(v60, (uint64_t)&v10[*(int *)(v7 + 20)]);
    sub_1000ADEF8();
    id v39 = &v10[*(int *)(v7 + 24)];
    uint64_t v40 = sub_1000AF358();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
    sub_10000693C(&qword_1000D7CF8);
    unint64_t v41 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1000B0270;
    uint64_t v62 = v10;
    sub_10007A554((uint64_t)v10, v42 + v41);
    sub_1000ADE38();
    sub_1000AF2F8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1000784C4();
    sub_1000AF3A8();
    if (qword_1000D4928 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_1000AE768();
    sub_10000EFA4(v43, (uint64_t)qword_1000D7CB8);
    uint64_t v44 = v64;
    unint64_t v45 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 16);
    uint64_t v46 = v59;
    uint64_t v29 = v68;
    v45((uint64_t)v59, v24, v68);
    uint64_t v47 = sub_1000AE758();
    os_log_type_t v48 = sub_1000AF718();
    int v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v50 = swift_slowAlloc();
      LODWORD(v61) = v49;
      uint64_t v51 = v50;
      uint64_t v52 = swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 136446467;
      uint64_t v69 = &type metadata for TTRNewWidgetProvider;
      uint64_t v70 = v52;
      sub_10000693C(&qword_1000D7CE8);
      uint64_t v53 = sub_1000AF4B8();
      uint64_t v69 = (ValueMetadata *)sub_1000A53D8(v53, v54, &v70);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2081;
      v45((uint64_t)v63, v46, v68);
      uint64_t v55 = sub_1000AF4B8();
      uint64_t v69 = (ValueMetadata *)sub_1000A53D8(v55, v56, &v70);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      id v38 = *(void (**)(char *, uint64_t))(v44 + 8);
      v38(v46, v68);
      _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v61, "%{public}s: No timeline entries created placeholder {timeline %{private}s}", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      uint64_t v29 = v68;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v38 = *(void (**)(char *, uint64_t))(v44 + 8);
      v38(v46, v29);
    }
    sub_10007A5B8((uint64_t)v62);
  }
  os_log_t v57 = v65;
  v67(v65);
  return ((uint64_t (*)(char *, uint64_t))v38)(v57, v29);
}

void sub_10007A374(uint64_t a1@<X8>)
{
  sub_1000785E4(*(void *)(v1 + 8), a1);
}

uint64_t sub_10007A37C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000789A8(a1, a2, a3, a4, *v4, v4[1]);
}

uint64_t sub_10007A384(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100079518(a1, a2, a3, a4, *v4, v4[1]);
}

uint64_t sub_10007A38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10000C7D0;
  return IntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10007A440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10000F290;
  return IntentTimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_10007A4FC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10007A544(uint64_t a1)
{
  return sub_100079B34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(char *))(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10007A554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007A5B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007A614()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10007A664(uint64_t a1)
{
  return sub_100078FB4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_10007A67C(uint64_t a1)
{
  return sub_10007A6A4(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_1000E1E70);
}

uint64_t sub_10007A690(uint64_t a1)
{
  return sub_10007A6A4(a1, (SEL *)&selRef_systemFillColor, &qword_1000E1E78);
}

uint64_t sub_10007A6A4(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4 = [self *a2];
  uint64_t result = sub_1000AF038();
  *a3 = result;
  return result;
}

unint64_t sub_10007A6F0()
{
  unint64_t result = qword_1000D7D20;
  if (!qword_1000D7D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7D20);
  }
  return result;
}

uint64_t sub_10007A744()
{
  return sub_100009F50(&qword_1000D7D28, &qword_1000D7D30);
}

uint64_t sub_10007A780()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000ADB48();
  sub_10000EFDC(v10, qword_1000E1E80);
  sub_10000EFA4(v10, (uint64_t)qword_1000E1E80);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000ADB38();
}

uint64_t sub_10007AA58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D50B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v29 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v3 - 8);
  uint64_t v28 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v26 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v25 = (char *)&v23 - v15;
  sub_1000AF458();
  sub_1000ADF58();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v24 = v5;
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  uint64_t v18 = v28;
  sub_1000ADCB8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  uint64_t v19 = v29;
  sub_1000ADA18();
  uint64_t v20 = sub_1000ADA28();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_10000693C(&qword_1000D50B8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000B0E30;
  sub_1000AF458();
  sub_1000ADF58();
  uint64_t v21 = v24;
  v17(v8, v16, v24);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v21);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v21);
  sub_1000ADCB8();
  return sub_1000ADA38();
}

uint64_t sub_10007B000(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E1E98);
}

uint64_t sub_10007B024()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10000693C(&qword_1000D5118);
  sub_10000EFDC(v10, qword_1000E1EB0);
  uint64_t v11 = sub_10000EFA4(v10, (uint64_t)qword_1000E1EB0);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v14[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  sub_1000AD998();
  uint64_t v12 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
}

uint64_t sub_10007B348()
{
  uint64_t result = swift_getKeyPath();
  qword_1000E1EC8 = result;
  return result;
}

uint64_t sub_10007B370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_10000693C(&qword_1000D50E8);
  v3[9] = swift_task_alloc();
  sub_10000693C(&qword_1000D50F0);
  v3[10] = swift_task_alloc();
  sub_10000693C(&qword_1000D7EC8);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_1000AD748();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_10000693C(&qword_1000D7ED0);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_10007B534, 0, 0);
}

uint64_t sub_10007B534()
{
  sub_1000AD798();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  unint64_t v2 = sub_10007CB24();
  *uint64_t v1 = v0;
  v1[1] = sub_10007B608;
  uint64_t v3 = *(void *)(v0 + 144);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v0 + 16, sub_10007BC00, 0, &type metadata for TodayNotificationEntity, v2);
}

uint64_t sub_10007B608()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10007B704, 0, 0);
}

uint64_t sub_10007B704()
{
  sub_1000AD798();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 160) = v1;
  sub_1000AD798();
  *(unsigned char *)(v0 + 193) = *(unsigned char *)(v0 + 192);
  if (qword_1000D4958 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1000E1EC8;
  *(void *)(v0 + 168) = qword_1000E1EC8;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = sub_100009F50(&qword_1000D7EA0, &qword_1000D7EA8);
  *uint64_t v3 = v0;
  v3[1] = sub_10007B85C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v4);
}

uint64_t sub_10007B85C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10000B584;
  }
  else {
    uint64_t v2 = sub_10007B9B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10007B9B0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_1000AD798();
  uint64_t v7 = sub_1000ADB18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = sub_1000ADB58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_10007A6F0();
  sub_10007CD38();
  sub_1000AD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_1000AD738();
  sub_1000AD758();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10007BC04()
{
  uint64_t v0 = sub_10000693C(&qword_1000D7ED8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D4958 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000AD9F8();
  swift_release();
  sub_10007CD38();
  sub_100009F50(&qword_1000D7EE0, &qword_1000D7ED8);
  sub_1000AD9E8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10007BD6C()
{
  if (qword_1000D4958 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10007BDCC()
{
  unint64_t result = qword_1000D7D38;
  if (!qword_1000D7D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7D38);
  }
  return result;
}

unint64_t sub_10007BE24()
{
  unint64_t result = qword_1000D7D40;
  if (!qword_1000D7D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7D40);
  }
  return result;
}

uint64_t sub_10007BE78()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10007BEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007DA14(a1, a2, a3, (void (*)(void))sub_10007A6F0);
}

uint64_t sub_10007BEC4@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D4948, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1E98, a1);
}

uint64_t sub_10007BEFC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D4950 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000693C(&qword_1000D5118);
  uint64_t v3 = sub_10000EFA4(v2, (uint64_t)qword_1000E1EB0);
  return sub_100009D6C(v3, a1, &qword_1000D5118);
}

uint64_t sub_10007BF74(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000F290;
  return sub_10007B370(a1, v5, v4);
}

uint64_t sub_10007C020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007E718();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10007C048()
{
  return 0xD000000000000028;
}

unint64_t sub_10007C068()
{
  unint64_t result = qword_1000D7D50;
  if (!qword_1000D7D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7D50);
  }
  return result;
}

unint64_t sub_10007C0C0()
{
  unint64_t result = qword_1000D7D58;
  if (!qword_1000D7D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7D58);
  }
  return result;
}

uint64_t sub_10007C114(uint64_t a1)
{
  v1[2] = a1;
  sub_10000693C(&qword_1000D7EB0);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  return _swift_task_switch(sub_10007C1B8, 0, 0);
}

uint64_t sub_10007C1B8()
{
  id v1 = [self daemonUserDefaults];
  id v2 = [v1 todayNotificationFireTime];

  if (v2)
  {
    sub_1000ADBA8();

    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = (BOOL *)v0[2];
  uint64_t v7 = sub_1000ADBB8();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, v3, 1, v7);
  sub_10007F0FC(v5, v4);
  BOOL v9 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1;
  sub_10007F09C(v4);
  *uint64_t v6 = v9;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10007C334(uint64_t a1, unsigned char *a2)
{
  uint64_t v4 = sub_1000ADBB8();
  *(void *)(v2 + 16) = v4;
  *(void *)(v2 + 24) = *(void *)(v4 - 8);
  *(void *)(v2 + 32) = swift_task_alloc();
  sub_10000693C(&qword_1000D7EB0);
  *(void *)(v2 + 40) = swift_task_alloc();
  *(void *)(v2 + 48) = swift_task_alloc();
  *(void *)(v2 + 56) = swift_task_alloc();
  *(void *)(v2 + 64) = swift_task_alloc();
  *(unsigned char *)(v2 + 72) = *a2;
  return _swift_task_switch(sub_10007C454, 0, 0);
}

uint64_t sub_10007C454()
{
  id v1 = self;
  id v2 = [v1 daemonUserDefaults];
  id v3 = [v2 todayNotificationFireTime];

  uint64_t v4 = *(void *)(v0 + 64);
  if (v3)
  {
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v7 = *(void *)(v0 + 16);
    sub_1000ADBA8();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v4, v5, v7);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v8(v4, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v7) != 1)
    {
      char v9 = *(unsigned char *)(v0 + 72);
      sub_10007F09C(*(void *)(v0 + 64));
      if ((v9 & 1) == 0)
      {
        v8(*(void *)(v0 + 56), 1, 1, *(void *)(v0 + 16));
LABEL_12:
        uint64_t v17 = *(void *)(v0 + 56);
        uint64_t v18 = *(void *)(v0 + 40);
        uint64_t v19 = *(void *)(v0 + 16);
        uint64_t v20 = *(void *)(v0 + 24);
        id v21 = [v1 daemonUserDefaults];
        sub_100009D6C(v17, v18, &qword_1000D7EB0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
        {
          Class isa = 0;
        }
        else
        {
          uint64_t v23 = *(void *)(v0 + 40);
          uint64_t v24 = *(void *)(v0 + 16);
          uint64_t v25 = *(void *)(v0 + 24);
          Class isa = sub_1000ADB98().super.isa;
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
        }
        uint64_t v26 = *(void *)(v0 + 56);
        [v21 setTodayNotificationFireTime:isa];

        sub_10007F09C(v26);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_16;
      }
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 24) + 56);
    v8(*(void *)(v0 + 64), 1, 1, *(void *)(v0 + 16));
  }
  char v10 = *(unsigned char *)(v0 + 72);
  sub_10007F09C(*(void *)(v0 + 64));
  if (v10)
  {
    id v11 = [self todayNotificationFireTimeFromStorageNumber:0];
    if (v11)
    {
      uint64_t v12 = v11;
      sub_1000ADBA8();

      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = 1;
    }
    uint64_t v16 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 56);
    v8(v16, v13, 1, *(void *)(v0 + 16));
    sub_10007F0FC(v16, v15);
    goto LABEL_12;
  }
LABEL_9:
  sub_1000AD5F8();
  sub_10007F164();
  swift_allocError();
  sub_1000AD9D8();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
LABEL_16:
  return v14();
}

uint64_t sub_10007C7C8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_1000ADCA8();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10007C858, 0, 0);
}

uint64_t sub_10007C858()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_10000693C(&qword_1000D7D30);
  sub_1000ADC88();
  sub_100009F50(&qword_1000D7EA0, &qword_1000D7EA8);
  *uint64_t v1 = sub_1000ADB78();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_10007C96C()
{
  unint64_t result = qword_1000D7D68;
  if (!qword_1000D7D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7D68);
  }
  return result;
}

uint64_t sub_10007C9C0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10007CEBC();
  *uint64_t v4 = v2;
  v4[1] = sub_10000C170;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10007CA74()
{
  unint64_t result = qword_1000D7D78;
  if (!qword_1000D7D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7D78);
  }
  return result;
}

unint64_t sub_10007CACC()
{
  unint64_t result = qword_1000D7D80;
  if (!qword_1000D7D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7D80);
  }
  return result;
}

unint64_t sub_10007CB24()
{
  unint64_t result = qword_1000D7D88[0];
  if (!qword_1000D7D88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D7D88);
  }
  return result;
}

uint64_t sub_10007CB78(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10007CEBC();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C444;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10007CC2C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10007CEBC();
  *uint64_t v4 = v2;
  v4[1] = sub_10000F28C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10007CCE0()
{
  unint64_t result = qword_1000D7DA0;
  if (!qword_1000D7DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7DA0);
  }
  return result;
}

unint64_t sub_10007CD38()
{
  unint64_t result = qword_1000D7DA8;
  if (!qword_1000D7DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7DA8);
  }
  return result;
}

unint64_t sub_10007CD90()
{
  unint64_t result = qword_1000D7DB0;
  if (!qword_1000D7DB0)
  {
    sub_100006F98(qword_1000D7DB8);
    sub_10007CD38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7DB0);
  }
  return result;
}

uint64_t sub_10007CE04(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10007C96C();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C7D0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10007CEBC()
{
  unint64_t result = qword_1000D7DD0;
  if (!qword_1000D7DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7DD0);
  }
  return result;
}

uint64_t sub_10007CF10()
{
  uint64_t v0 = qword_1000D7D00;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10007CF4C()
{
  unint64_t result = qword_1000D7DD8;
  if (!qword_1000D7DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7DD8);
  }
  return result;
}

unint64_t sub_10007CFA4()
{
  unint64_t result = qword_1000D7DE0;
  if (!qword_1000D7DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7DE0);
  }
  return result;
}

unint64_t sub_10007CFFC()
{
  unint64_t result = qword_1000D7DE8;
  if (!qword_1000D7DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7DE8);
  }
  return result;
}

unint64_t sub_10007D054()
{
  unint64_t result = qword_1000D7DF0;
  if (!qword_1000D7DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7DF0);
  }
  return result;
}

unint64_t sub_10007D0AC()
{
  unint64_t result = qword_1000D7DF8;
  if (!qword_1000D7DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7DF8);
  }
  return result;
}

unint64_t sub_10007D104()
{
  unint64_t result = qword_1000D7E00;
  if (!qword_1000D7E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E00);
  }
  return result;
}

uint64_t sub_10007D158@<X0>(uint64_t *a1@<X8>)
{
  sub_10007C0C0();
  uint64_t result = sub_1000AD778();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10007D198@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D4940, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000E1E80, a1);
}

uint64_t sub_10007D1D0()
{
  return sub_100009F50(&qword_1000D7E08, &qword_1000D7E10);
}

uint64_t sub_10007D20C(uint64_t a1)
{
  unint64_t v2 = sub_10007CB24();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10007D25C()
{
  unint64_t result = qword_1000D7E18;
  if (!qword_1000D7E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E18);
  }
  return result;
}

uint64_t sub_10007D2B4(uint64_t a1)
{
  unint64_t v2 = sub_10007D104();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10007D304()
{
  unint64_t result = qword_1000D7E20;
  if (!qword_1000D7E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E20);
  }
  return result;
}

uint64_t sub_10007D358(uint64_t a1)
{
  if (qword_1000D4860 != -1) {
    swift_once();
  }
  sub_1000AF4D8((Swift::String)xmmword_1000E1DF8);
  unint64_t v2 = sub_10007CB24();

  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x80000001000B67A0, a1, v2);
}

uint64_t sub_10007D418()
{
  sub_10007F048();
  uint64_t v2 = sub_1000ADA88();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000F040(v3, v0, v2, v1);
}

unint64_t sub_10007D4B0()
{
  unint64_t result = qword_1000D7E30;
  if (!qword_1000D7E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E30);
  }
  return result;
}

uint64_t sub_10007D504(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E1ED0);
}

uint64_t sub_10007D528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_1000AD998();
  uint64_t v13 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t sub_10007D820()
{
  sub_1000AD798();
  return v1;
}

unint64_t sub_10007D858()
{
  unint64_t result = qword_1000D7E38;
  if (!qword_1000D7E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E38);
  }
  return result;
}

uint64_t sub_10007D8AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10007EFA0();
  unint64_t v5 = sub_10007F048();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10007D914()
{
  uint64_t v0 = qword_1000D7D10;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10007D950()
{
  unint64_t result = qword_1000D7E40;
  if (!qword_1000D7E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E40);
  }
  return result;
}

unint64_t sub_10007D9A8()
{
  unint64_t result = qword_1000D7E48;
  if (!qword_1000D7E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E48);
  }
  return result;
}

uint64_t sub_10007D9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007DA14(a1, a2, a3, (void (*)(void))sub_10007D858);
}

uint64_t sub_10007DA14(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007DA68@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D4960, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1ED0, a1);
}

uint64_t sub_10007DAA4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10007EFA0();
  unint64_t v7 = sub_10007EFF4();
  unint64_t v8 = sub_10007F048();
  *unint64_t v5 = v2;
  v5[1] = sub_10000D7DC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10007DB78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007EB58();
  *a1 = result;
  return result;
}

uint64_t sub_10007DBA0(uint64_t a1)
{
  unint64_t v2 = sub_10007D858();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenTodayNotificationDeepLink()
{
  return &type metadata for OpenTodayNotificationDeepLink;
}

ValueMetadata *type metadata accessor for TodayNotificationEntity.TodayNotificationQuery()
{
  return &type metadata for TodayNotificationEntity.TodayNotificationQuery;
}

ValueMetadata *type metadata accessor for TodayNotificationEntity()
{
  return &type metadata for TodayNotificationEntity;
}

ValueMetadata *type metadata accessor for TodayNotificationEntity.UpdateIntent_value()
{
  return &type metadata for TodayNotificationEntity.UpdateIntent_value;
}

uint64_t sub_10007DC1C()
{
  return sub_100009F50(&qword_1000D7E58, &qword_1000D7E60);
}

uint64_t sub_10007DC58()
{
  return sub_100009F50(&qword_1000D7E68, &qword_1000D7E60);
}

uint64_t sub_10007DC94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D5120);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D5128);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D5130);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D5138);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10000693C(&qword_1000D5140);
  sub_10000693C(&qword_1000D5148);
  sub_10007C0C0();
  sub_100009F50(&qword_1000D5150, &qword_1000D5140);
  sub_10000F0F4();
  sub_1000AF2B8();
  sub_1000AEB88();
  uint64_t v16 = sub_100009F50(&qword_1000D5160, &qword_1000D5120);
  sub_1000AEC38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  sub_1000AEB88();
  uint64_t v31 = v1;
  uint64_t v32 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  sub_1000AEBF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v18);
  uint64_t v31 = v18;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_1000AEC58();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  sub_1000AEC18();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v21);
}

uint64_t sub_10007E1C4()
{
  uint64_t v0 = sub_1000AEB88();

  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_10007E234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000ADC98();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  __chkstk_darwin(v8 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000ADCB8();
  uint64_t result = sub_1000AEEE8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

double sub_10007E448@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000ADC98();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000ADF68();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000AF468();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000ADCA8();
  __chkstk_darwin(v10 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  sub_1000ADCB8();
  v17[1] = sub_1000AEEE8();
  _OWORD v17[2] = v11;
  v17[3] = v12 & 1;
  void v17[4] = v13;
  BOOL v18 = (a1 & 1) == 0;
  sub_1000AEC68();
  double result = *(double *)&v19;
  long long v15 = v20;
  char v16 = v21;
  *(_OWORD *)a2 = v19;
  *(_OWORD *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 32) = v16;
  return result;
}

uint64_t sub_10007E718()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5088);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000ADA78();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000693C(&qword_1000D5070);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000ADCA8();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10000693C(&qword_1000D7E70);
  sub_1000ADC88();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000AD748();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  BOOL v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10007CB24();
  long long v19 = v23;
  uint64_t v24 = sub_1000AD7B8();
  sub_10000693C(&qword_1000D5090);
  sub_1000ADC88();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000AF5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000AD7C8();
  return v24;
}

uint64_t sub_10007EB58()
{
  uint64_t v0 = sub_1000ADA78();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000693C(&qword_1000D5070);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000ADC98();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000ADF68();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000AF468();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000ADCA8();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v21[1] = sub_10000693C(&qword_1000D7E70);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v26 = 0;
  uint64_t v18 = sub_1000AD748();
  long long v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_10007CB24();
  return sub_1000AD7B8();
}

unint64_t sub_10007EFA0()
{
  unint64_t result = qword_1000D7E78;
  if (!qword_1000D7E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E78);
  }
  return result;
}

unint64_t sub_10007EFF4()
{
  unint64_t result = qword_1000D7E80;
  if (!qword_1000D7E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E80);
  }
  return result;
}

unint64_t sub_10007F048()
{
  unint64_t result = qword_1000D7E88;
  if (!qword_1000D7E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E88);
  }
  return result;
}

uint64_t sub_10007F09C(uint64_t a1)
{
  uint64_t v2 = sub_10000693C(&qword_1000D7EB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007F0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000693C(&qword_1000D7EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007F164()
{
  unint64_t result = qword_1000D7EB8;
  if (!qword_1000D7EB8)
  {
    sub_1000AD5F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D7EB8);
  }
  return result;
}

uint64_t sub_10007F1BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for TodayNotificationToggleControl()
{
  return &type metadata for TodayNotificationToggleControl;
}

uint64_t sub_10007F1D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007F1F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007F320(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = _swiftEmptyArrayStorage;
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void **)(v24 + 72);
      sub_10008A6B8(a3 + v16 + (void)v13 * v14, (uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      char v17 = a1(v12);
      if (v3)
      {
        sub_10008A26C((uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
      if (v17)
      {
        sub_10008A720((uint64_t)v12, v23, type metadata accessor for TTRNewWidgetViewModel.Reminder);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000A7ACC(0, v15[2] + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = v25[2];
        unint64_t v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_1000A7ACC(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        void v15[2] = v19 + 1;
        uint64_t result = sub_10008A720(v23, (uint64_t)v15 + v16 + v19 * (void)v13, type metadata accessor for TTRNewWidgetViewModel.Reminder);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_10008A26C((uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

void *sub_10007F5B8(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v6 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_1000A7ACC(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = (uint64_t *)(a3 + 32);
    while (1)
    {
      uint64_t v13 = *v12++;
      uint64_t v20 = v13;
      v18(&v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = v11[2];
      unint64_t v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_1000A7ACC(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      v11[2] = v15 + 1;
      sub_10008A720((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

void *sub_10007F75C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  unsigned int v27 = a8;
  uint64_t v28 = a1;
  uint64_t v11 = v8;
  uint64_t v29 = a2;
  uint64_t v13 = a5(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13 - 8);
  unint64_t v16 = (char *)&v24 - v15;
  unint64_t v17 = *(void *)(a3 + 16);
  unint64_t v18 = _swiftEmptyArrayStorage;
  if (v17)
  {
    uint64_t v30 = _swiftEmptyArrayStorage;
    uint64_t v25 = a6;
    a6(0, v17, 0);
    unint64_t v18 = v30;
    uint64_t v19 = *(void *)(a7(0) - 8);
    uint64_t v20 = a3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v26 = *(void *)(v19 + 72);
    while (1)
    {
      v28(v20);
      if (v11) {
        break;
      }
      uint64_t v11 = 0;
      uint64_t v30 = v18;
      unint64_t v22 = v18[2];
      unint64_t v21 = v18[3];
      if (v22 >= v21 >> 1)
      {
        v25(v21 > 1, v22 + 1, 1);
        unint64_t v18 = v30;
      }
      v18[2] = v22 + 1;
      sub_10008A720((uint64_t)v16, (uint64_t)v18+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v22, v27);
      v20 += v26;
      if (!--v17) {
        return v18;
      }
    }
    swift_release();
  }
  return v18;
}

void sub_10007F96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v116 = a3;
  uint64_t v117 = a6;
  uint64_t v115 = a5;
  uint64_t v118 = a2;
  uint64_t v9 = sub_1000ADF08();
  uint64_t v114 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v114 + 64);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = (int *)type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  __chkstk_darwin(Configuration);
  uint64_t v14 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AE338();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (id *)((char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = a1;
  uint64_t v21 = v20;
  (*(void (**)(id *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v20);
  int v22 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v18, v21);
  if (v22 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);

    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1000AE768();
    sub_10000EFA4(v23, (uint64_t)qword_1000D7EE8);
    uint64_t v24 = sub_1000AE758();
    os_log_type_t v25 = sub_1000AF6F8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Widget presenter: unable to display accounts", v26, 2u);
      swift_slowDealloc();
    }

    unsigned int v27 = (char *)v18 + *(int *)(sub_10000693C(&qword_1000D5A40) + 48);
    uint64_t v28 = sub_1000AE2B8();
    goto LABEL_12;
  }
  if (v22 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);
    id v29 = *v18;
    unsigned int v27 = (char *)v18 + *(int *)(sub_10000693C(&qword_1000D5A28) + 48);
    sub_1000824F4(v29, v118, v116, a4, v115, v117, (uint64_t)&unk_1000D1070, (uint64_t)sub_10008A518, (void (*)(id, char *, uint64_t, char *))sub_100061908);
LABEL_11:

    uint64_t v28 = sub_1000AE2E8();
LABEL_12:
    (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    return;
  }
  if (v22 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);
    id v29 = *v18;
    unsigned int v27 = (char *)v18 + *(int *)(sub_10000693C(&qword_1000D5A28) + 48);
    sub_1000824F4(v29, v118, v116, a4, v115, v117, (uint64_t)&unk_1000D1138, (uint64_t)sub_10008EA98, (void (*)(id, char *, uint64_t, char *))sub_100063148);
    goto LABEL_11;
  }
  if (v22 == enum case for REMNavigationSpecifier.newList(_:))
  {
    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1000AE768();
    sub_10000EFA4(v30, (uint64_t)qword_1000D7EE8);
    uint64_t v31 = sub_1000AE758();
    os_log_type_t v32 = sub_1000AF6F8();
    if (!os_log_type_enabled(v31, v32)) {
      goto LABEL_19;
    }
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    uint64_t v34 = "Widget presenter: unable to display newList";
LABEL_18:
    _os_log_impl((void *)&_mh_execute_header, v31, v32, v34, v33, 2u);
    swift_slowDealloc();
LABEL_19:

    (*(void (**)(id *, uint64_t))(v16 + 8))(v18, v21);
    return;
  }
  if (v22 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);

    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1000AE768();
    sub_10000EFA4(v35, (uint64_t)qword_1000D7EE8);
    uint64_t v36 = sub_1000AE758();
    os_log_type_t v37 = sub_1000AF6F8();
    if (os_log_type_enabled(v36, v37))
    {
      id v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Widget presenter: unable to display individual reminders", v38, 2u);
      swift_slowDealloc();
    }

    unsigned int v27 = (char *)v18 + *(int *)(sub_10000693C(&qword_1000D5A30) + 48);
    uint64_t v28 = sub_1000AE318();
    goto LABEL_12;
  }
  if (v22 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);

    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1000AE768();
    sub_10000EFA4(v39, (uint64_t)qword_1000D7EE8);
    uint64_t v40 = sub_1000AE758();
    os_log_type_t v41 = sub_1000AF6F8();
    if (!os_log_type_enabled(v40, v41)) {
      goto LABEL_37;
    }
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    uint64_t v43 = "Widget presenter: unable to display individual sections";
LABEL_36:
    _os_log_impl((void *)&_mh_execute_header, v40, v41, v43, v42, 2u);
    swift_slowDealloc();
LABEL_37:

    unsigned int v27 = (char *)v18 + *(int *)(sub_10000693C(&qword_1000D5A38) + 48);
    uint64_t v28 = sub_1000AE2C8();
    goto LABEL_12;
  }
  if (v22 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v18, v21);

    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1000AE768();
    sub_10000EFA4(v44, (uint64_t)qword_1000D7EE8);
    uint64_t v40 = sub_1000AE758();
    os_log_type_t v41 = sub_1000AF6F8();
    if (!os_log_type_enabled(v40, v41)) {
      goto LABEL_37;
    }
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    uint64_t v43 = "Widget presenter: unable to display individual smart list sections";
    goto LABEL_36;
  }
  if (v22 == enum case for REMNavigationSpecifier.root(_:))
  {
    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1000AE768();
    sub_10000EFA4(v45, (uint64_t)qword_1000D7EE8);
    uint64_t v31 = sub_1000AE758();
    os_log_type_t v32 = sub_1000AF6F8();
    if (!os_log_type_enabled(v31, v32)) {
      goto LABEL_19;
    }
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    uint64_t v34 = "Widget presenter: unable to display root";
    goto LABEL_18;
  }
  uint64_t v112 = v14;
  uint64_t v113 = v21;
  if (v22 == enum case for REMNavigationSpecifier.today(_:))
  {
    uint64_t v111 = *(void *)(v6 + 16);
    sub_100082A3C(&v14[Configuration[5]]);
    uint64_t v110 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    uint64_t v46 = &v14[Configuration[6]];
    uint64_t v47 = sub_1000AE588();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v46, v110, v47);
    os_log_type_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
    v48(&v14[Configuration[7]], a4, v9);
    *(void *)uint64_t v14 = v118;
    v48((char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v9);
    uint64_t v49 = v114;
    unint64_t v50 = (*(unsigned __int8 *)(v114 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v6;
    *(unsigned char *)(v51 + 24) = 0;
    uint64_t v52 = v116;
    *(void *)(v51 + 32) = v118;
    *(void *)(v51 + 40) = v52;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v51 + v50, v11, v9);
    uint64_t v53 = (void *)(v51 + ((v10 + v50 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v54 = v117;
    *uint64_t v53 = v115;
    v53[1] = v54;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v55 = 0;
LABEL_51:
    uint64_t v80 = (uint64_t)v112;
    sub_100064690((void (*)(char *, uint64_t))v55, (uint64_t)v112, (void (*)(uint64_t *))sub_10008A328, v51);
    swift_release();
    sub_10008A26C(v80, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
LABEL_52:
    (*(void (**)(id *, uint64_t))(v16 + 8))(v18, v113);
    return;
  }
  if (v22 == enum case for REMNavigationSpecifier.scheduled(_:))
  {
    uint64_t v111 = *(void *)(v6 + 16);
    sub_100082A3C(&v14[Configuration[5]]);
    uint64_t v110 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    unint64_t v56 = &v14[Configuration[6]];
    uint64_t v57 = sub_1000AE588();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v56, v110, v57);
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
    v58(&v14[Configuration[7]], a4, v9);
    *(void *)uint64_t v14 = v118;
    v58((char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v9);
    uint64_t v59 = v114;
    unint64_t v60 = (*(unsigned __int8 *)(v114 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v6;
    *(unsigned char *)(v51 + 24) = 1;
    uint64_t v61 = v116;
    *(void *)(v51 + 32) = v118;
    *(void *)(v51 + 40) = v61;
    (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v51 + v60, v11, v9);
    uint64_t v62 = (void *)(v51 + ((v10 + v60 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v63 = v117;
    *uint64_t v62 = v115;
    v62[1] = v63;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v55 = 1;
    goto LABEL_51;
  }
  if (v22 == enum case for REMNavigationSpecifier.allReminders(_:))
  {
    uint64_t v111 = *(void *)(v6 + 16);
    sub_100082A3C(&v14[Configuration[5]]);
    uint64_t v110 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    uint64_t v64 = &v14[Configuration[6]];
    uint64_t v65 = sub_1000AE588();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v64, v110, v65);
    uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
    v66(&v14[Configuration[7]], a4, v9);
    *(void *)uint64_t v14 = v118;
    v66((char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v9);
    uint64_t v67 = v114;
    unint64_t v68 = (*(unsigned __int8 *)(v114 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v6;
    *(unsigned char *)(v51 + 24) = 2;
    uint64_t v69 = v116;
    *(void *)(v51 + 32) = v118;
    *(void *)(v51 + 40) = v69;
    (*(void (**)(unint64_t, char *, uint64_t))(v67 + 32))(v51 + v68, v11, v9);
    uint64_t v70 = (void *)(v51 + ((v10 + v68 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v71 = v117;
    *uint64_t v70 = v115;
    v70[1] = v71;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v55 = 2;
    goto LABEL_51;
  }
  if (v22 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    uint64_t v111 = *(void *)(v6 + 16);
    sub_100082A3C(&v14[Configuration[5]]);
    uint64_t v110 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    uint64_t v72 = &v14[Configuration[6]];
    uint64_t v73 = sub_1000AE588();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(v72, v110, v73);
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
    v74(&v14[Configuration[7]], a4, v9);
    *(void *)uint64_t v14 = v118;
    v74((char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v9);
    uint64_t v75 = v114;
    unint64_t v76 = (*(unsigned __int8 *)(v114 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v6;
    *(unsigned char *)(v51 + 24) = 3;
    uint64_t v77 = v116;
    *(void *)(v51 + 32) = v118;
    *(void *)(v51 + 40) = v77;
    (*(void (**)(unint64_t, char *, uint64_t))(v75 + 32))(v51 + v76, v11, v9);
    uint64_t v78 = (void *)(v51 + ((v10 + v76 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v79 = v117;
    void *v78 = v115;
    v78[1] = v79;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v55 = 3;
    goto LABEL_51;
  }
  if (v22 != enum case for REMNavigationSpecifier.search(_:))
  {
    if (v22 == enum case for REMNavigationSpecifier.assigned(_:))
    {
      uint64_t v111 = *(void *)(v6 + 16);
      sub_100082A3C(&v14[Configuration[5]]);
      uint64_t v110 = v6 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
      uint64_t v87 = &v14[Configuration[6]];
      uint64_t v88 = sub_1000AE588();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16))(v87, v110, v88);
      unint64_t v89 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 16);
      v89(&v14[Configuration[7]], a4, v9);
      *(void *)uint64_t v14 = v118;
      v89((char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v9);
      uint64_t v90 = v114;
      unint64_t v91 = (*(unsigned __int8 *)(v114 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v6;
      *(unsigned char *)(v51 + 24) = 4;
      uint64_t v92 = v116;
      *(void *)(v51 + 32) = v118;
      *(void *)(v51 + 40) = v92;
      (*(void (**)(unint64_t, char *, uint64_t))(v90 + 32))(v51 + v91, v11, v9);
      uint64_t v93 = (void *)(v51 + ((v10 + v91 + 7) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v94 = v117;
      *uint64_t v93 = v115;
      v93[1] = v94;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v55 = 4;
      goto LABEL_51;
    }
    if (v22 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
    {
      if (qword_1000D4968 != -1) {
        swift_once();
      }
      uint64_t v95 = sub_1000AE768();
      sub_10000EFA4(v95, (uint64_t)qword_1000D7EE8);
      uint64_t v96 = sub_1000AE758();
      os_log_type_t v97 = sub_1000AF6F8();
      if (!os_log_type_enabled(v96, v97)) {
        goto LABEL_82;
      }
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v98 = 0;
      unint64_t v99 = "Widget presenter: unable to display siriFoundInApps";
LABEL_81:
      _os_log_impl((void *)&_mh_execute_header, v96, v97, v99, v98, 2u);
      swift_slowDealloc();
LABEL_82:

      goto LABEL_52;
    }
    if (v22 == enum case for REMNavigationSpecifier.tagged(_:))
    {
      if (qword_1000D4968 != -1) {
        swift_once();
      }
      uint64_t v100 = sub_1000AE768();
      sub_10000EFA4(v100, (uint64_t)qword_1000D7EE8);
      uint64_t v96 = sub_1000AE758();
      os_log_type_t v97 = sub_1000AF6F8();
      if (!os_log_type_enabled(v96, v97)) {
        goto LABEL_82;
      }
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v98 = 0;
      unint64_t v99 = "Widget presenter: unable to display tags";
      goto LABEL_81;
    }
    if (v22 == enum case for REMNavigationSpecifier.completed(_:))
    {
      if (qword_1000D4968 != -1) {
        swift_once();
      }
      uint64_t v101 = sub_1000AE768();
      sub_10000EFA4(v101, (uint64_t)qword_1000D7EE8);
      uint64_t v96 = sub_1000AE758();
      os_log_type_t v97 = sub_1000AF6F8();
      if (!os_log_type_enabled(v96, v97)) {
        goto LABEL_82;
      }
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v98 = 0;
      unint64_t v99 = "Widget presenter: unable to display completed";
      goto LABEL_81;
    }
    if (v22 == enum case for REMNavigationSpecifier.publicTemplate(_:))
    {
      if (qword_1000D4968 != -1) {
        swift_once();
      }
      uint64_t v102 = sub_1000AE768();
      sub_10000EFA4(v102, (uint64_t)qword_1000D7EE8);
      uint64_t v96 = sub_1000AE758();
      os_log_type_t v97 = sub_1000AF6F8();
      if (!os_log_type_enabled(v96, v97)) {
        goto LABEL_82;
      }
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v98 = 0;
      unint64_t v99 = "Widget presenter: unable to display publicTemplate";
      goto LABEL_81;
    }
    if (v22 == enum case for REMNavigationSpecifier.newReminder(_:))
    {
      if (qword_1000D4968 != -1) {
        swift_once();
      }
      uint64_t v103 = sub_1000AE768();
      sub_10000EFA4(v103, (uint64_t)qword_1000D7EE8);
      uint64_t v104 = sub_1000AE758();
      os_log_type_t v105 = sub_1000AF6F8();
      if (!os_log_type_enabled(v104, v105)) {
        goto LABEL_94;
      }
      uint64_t v106 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v106 = 0;
      uint64_t v107 = "Widget presenter: unable to display newReminder";
    }
    else
    {
      if (v22 != enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
      {
        sub_1000AFA28();
        __break(1u);
        return;
      }
      if (qword_1000D4968 != -1) {
        swift_once();
      }
      uint64_t v108 = sub_1000AE768();
      sub_10000EFA4(v108, (uint64_t)qword_1000D7EE8);
      uint64_t v104 = sub_1000AE758();
      os_log_type_t v105 = sub_1000AF6F8();
      if (!os_log_type_enabled(v104, v105))
      {
LABEL_94:

        return;
      }
      uint64_t v106 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v106 = 0;
      uint64_t v107 = "Widget presenter: unable to handle requestLocationAuthorization";
    }
    _os_log_impl((void *)&_mh_execute_header, v104, v105, v107, v106, 2u);
    swift_slowDealloc();
    goto LABEL_94;
  }
  if (qword_1000D4968 != -1) {
    swift_once();
  }
  uint64_t v81 = sub_1000AE768();
  sub_10000EFA4(v81, (uint64_t)qword_1000D7EE8);
  uint64_t v82 = sub_1000AE758();
  os_log_type_t v83 = sub_1000AF6F8();
  BOOL v84 = os_log_type_enabled(v82, v83);
  uint64_t v85 = v113;
  if (v84)
  {
    uint64_t v86 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v86 = 0;
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "Widget presenter: unable to display search", v86, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(id *, uint64_t))(v16 + 8))(v18, v85);
}

void *sub_100080E94(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10000693C(&qword_1000D4CD8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v30 = (uint64_t)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v28 = (uint64_t)&v24 - v14;
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v16 = *(void *)(type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0) - 8);
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v25 = v11;
  unint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v29 = *(void *)(v16 + 72);
  uint64_t v24 = a3;
  swift_bridgeObjectRetain();
  uint64_t v19 = _swiftEmptyArrayStorage;
  uint64_t v26 = v10;
  uint64_t v27 = a2;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v9, 1, v10) == 1)
    {
      sub_100009EF4((uint64_t)v9, &qword_1000D4CD8);
    }
    else
    {
      uint64_t v20 = v28;
      sub_10008A720((uint64_t)v9, v28, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      sub_10008A720(v20, v30, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = (void *)sub_100022780(0, v19[2] + 1, 1, (unint64_t)v19);
      }
      unint64_t v22 = v19[2];
      unint64_t v21 = v19[3];
      if (v22 >= v21 >> 1) {
        uint64_t v19 = (void *)sub_100022780(v21 > 1, v22 + 1, 1, (unint64_t)v19);
      }
      long long v19[2] = v22 + 1;
      sub_10008A720(v30, (uint64_t)v19+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      uint64_t v10 = v26;
    }
    v17 += v29;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

void sub_1000811C4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v90 = a7;
  uint64_t v91 = a3;
  uint64_t v92 = a6;
  uint64_t v93 = a4;
  uint64_t v95 = a1;
  uint64_t v11 = sub_1000ADF08();
  uint64_t v86 = *(void *)(v11 - 8);
  uint64_t v87 = v11;
  __chkstk_darwin(v11);
  uint64_t v84 = v12;
  uint64_t v85 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  __chkstk_darwin(Configuration);
  uint64_t v88 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000693C(&qword_1000D59C0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AE338();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v76 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000693C(&qword_1000D4C78);
  __chkstk_darwin(v20 - 8);
  uint64_t v94 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000ADD48();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v77 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v79 = (char *)&v73 - v27;
  __chkstk_darwin(v26);
  uint64_t v82 = (char *)&v73 - v28;
  if (qword_1000D4968 != -1) {
    swift_once();
  }
  uint64_t v80 = v16;
  uint64_t v81 = v18;
  uint64_t v29 = sub_1000AE768();
  uint64_t v30 = sub_10000EFA4(v29, (uint64_t)qword_1000D7EE8);
  swift_bridgeObjectRetain_n();
  uint64_t v89 = v30;
  uint64_t v31 = sub_1000AE758();
  os_log_type_t v32 = sub_1000AF718();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v78 = v23;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v75 = v8;
    uint64_t v34 = (uint8_t *)v33;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v74 = a5;
    v97[0] = v35;
    *(_DWORD *)uint64_t v34 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v36 = v95;
    uint64_t v96 = sub_1000A53D8(v95, a2, v97);
    uint64_t v23 = v78;
    sub_1000AF808();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Widget presenter: requested %s", v34, 0xCu);
    swift_arrayDestroy();
    a5 = v74;
    swift_slowDealloc();
    uint64_t v8 = v75;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v36 = v95;
  }
  uint64_t v37 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v37 = v36 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v38 = (uint64_t)v94;
  if (v37)
  {
    sub_1000ADD28();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v38, 1, v22) == 1)
    {
      sub_100009EF4(v38, &qword_1000D4C78);
      swift_bridgeObjectRetain_n();
      uint64_t v39 = sub_1000AE758();
      os_log_type_t v40 = sub_1000AF6F8();
      if (os_log_type_enabled(v39, v40))
      {
        os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
        v97[0] = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v41 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v96 = sub_1000A53D8(v36, a2, v97);
        sub_1000AF808();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Widget presenter: unable to parse identifier %s", v41, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      uint64_t v57 = a5;
      uint64_t v58 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v82, v38, v22);
      uint64_t v59 = v23;
      unint64_t v60 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
      v60(v79, v58, v22);
      uint64_t v61 = (uint64_t)v80;
      sub_1000AE348();
      uint64_t v62 = v81;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v61, 1, v17) == 1)
      {
        uint64_t v78 = v23;
        sub_100009EF4(v61, &qword_1000D59C0);
        uint64_t v63 = v77;
        v60(v77, v58, v22);
        uint64_t v64 = sub_1000AE758();
        uint64_t v65 = v22;
        os_log_type_t v66 = sub_1000AF6F8();
        if (os_log_type_enabled(v64, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          v97[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v67 = 136315138;
          sub_100090F48(&qword_1000D81E0, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v68 = sub_1000AFA08();
          uint64_t v96 = sub_1000A53D8(v68, v69, v97);
          sub_1000AF808();
          swift_bridgeObjectRelease();
          uint64_t v70 = *(void (**)(char *, uint64_t))(v78 + 8);
          v70(v63, v65);
          _os_log_impl((void *)&_mh_execute_header, v64, v66, "Widget presenter: unable to parse url %s", v67, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v70(v58, v65);
        }
        else
        {

          uint64_t v72 = *(void (**)(char *, uint64_t))(v78 + 8);
          v72(v63, v65);
          v72(v58, v65);
        }
      }
      else
      {
        uint64_t v71 = (uint64_t)v76;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v76, v61, v17);
        sub_10007F96C(v71, v91, v93, v57, v92, v90);
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v71, v17);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v22);
      }
    }
  }
  else
  {
    uint64_t v42 = Configuration;
    uint64_t v43 = v88;
    sub_100082A3C(&v88[*(int *)(Configuration + 20)]);
    uint64_t v44 = v8 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    uint64_t v45 = &v43[*(int *)(v42 + 24)];
    uint64_t v46 = sub_1000AE588();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v45, v44, v46);
    uint64_t v48 = v86;
    uint64_t v47 = v87;
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 16);
    v49(&v43[*(int *)(v42 + 28)], a5, v87);
    uint64_t v50 = v91;
    *(void *)uint64_t v43 = v91;
    uint64_t v51 = v85;
    v49(v85, a5, v47);
    unint64_t v52 = (*(unsigned __int8 *)(v48 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    unint64_t v53 = (v84 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = (char *)swift_allocObject();
    *((void *)v54 + 2) = v8;
    *((void *)v54 + 3) = v50;
    *((void *)v54 + 4) = v93;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v54[v52], v51, v47);
    uint64_t v55 = &v54[v53];
    uint64_t v56 = v90;
    *(void *)uint64_t v55 = v92;
    *((void *)v55 + 1) = v56;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000600E8((uint64_t)v43, (uint64_t)sub_10008A574, (uint64_t)v54);
    swift_release();
    sub_10008A26C((uint64_t)v43, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  }
}

void sub_100081C4C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000AE338();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000ADD48();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  uint64_t v13 = sub_1000AE2F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v7, v12, v13);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for REMNavigationSpecifier.root(_:), v4);
  sub_1000AE328();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v47._countAndFlagsBits = 119;
  v47._object = (void *)0xE100000000000000;
  sub_1000AF4F8(v47, 100);
  id v14 = objc_allocWithZone((Class)NSAttributedString);
  NSString v15 = sub_1000AF478();
  swift_bridgeObjectRelease();
  id v16 = [v14 initWithString:v15];

  int64_t v17 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v17 < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v44 = v9;
  uint64_t v18 = sub_100089C1C(0, v17);
  __chkstk_darwin(v18);
  *(&v40 - 2) = (uint64_t)v11;
  *(&v40 - 1) = (uint64_t)v16;
  uint64_t v19 = sub_10007F5B8((void (*)(uint64_t *))sub_100091130, (uint64_t)(&v40 - 4), (uint64_t)v18);
  swift_release();
  uint64_t v20 = sub_1000AE008();
  swift_beginAccess();
  sub_10008F2A4(v20, (uint64_t)v46);
  sub_10008F300((uint64_t)v46, (void (*)(void, void, void, void, void, void, void))sub_10008F344);
  uint64_t v21 = sub_1000AE018();
  sub_10008F300((uint64_t)v46, (void (*)(void, void, void, void, void, void, void))sub_10008A788);
  v48._countAndFlagsBits = 119;
  v48._object = (void *)0xE100000000000000;
  uint64_t v22 = sub_1000AF4F8(v48, 20);
  uint64_t v24 = a1 + 2;
  if (!__OFADD__(a1, 2))
  {
    uint64_t v41 = v22;
    v49._countAndFlagsBits = 119;
    uint64_t v40 = v23;
    v49._object = (void *)0xE100000000000000;
    uint64_t v43 = sub_1000AF4F8(v49, 10);
    uint64_t v42 = v25;
    uint64_t v26 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v27 = a2 + v26[9];
    uint64_t v28 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
    swift_beginAccess();
    sub_10008F2A4(v20, (uint64_t)v45);
    sub_10008F300((uint64_t)v45, (void (*)(void, void, void, void, void, void, void))sub_10008F344);
    uint64_t v29 = sub_1000AE028();
    uint64_t v31 = v30;

    sub_10008F300((uint64_t)v45, (void (*)(void, void, void, void, void, void, void))sub_10008A788);
    os_log_type_t v32 = v19;
    uint64_t v33 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(a2 + v26[18], v11, v8);
    uint64_t v34 = v40;
    *(void *)a2 = v41;
    *(void *)(a2 + 8) = v34;
    *(void *)(a2 + 16) = v24;
    *(void *)(a2 + 24) = 11565;
    *(void *)(a2 + 32) = 0xE200000000000000;
    *(unsigned char *)(a2 + 40) = 64;
    uint64_t v35 = v42;
    *(void *)(a2 + 48) = v43;
    *(void *)(a2 + 56) = v35;
    *(void *)(a2 + v26[10]) = v21;
    uint64_t v36 = (uint64_t *)(a2 + v26[11]);
    uint64_t *v36 = v29;
    v36[1] = v31;
    *(void *)(a2 + v26[12]) = 0;
    uint64_t v37 = (void *)(a2 + v26[13]);
    *uint64_t v37 = 0;
    v37[1] = 0;
    uint64_t v38 = (void *)(a2 + v26[14]);
    *uint64_t v38 = 0;
    v38[1] = 0;
    *(unsigned char *)(a2 + v26[15]) = 0;
    uint64_t v39 = (void *)(a2 + v26[16]);
    *uint64_t v39 = 0;
    v39[1] = 0;
    *(void *)(a2 + v26[17]) = 0;
    *(void *)(a2 + v26[19]) = v32;
    *(unsigned char *)(a2 + v26[20]) = 1;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v8);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_100082158()
{
  uint64_t v0 = sub_1000AE768();
  sub_10000EFDC(v0, qword_1000D7EE8);
  uint64_t v1 = sub_10000EFA4(v0, (uint64_t)qword_1000D7EE8);
  if (qword_1000D4888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000EFA4(v0, (uint64_t)qword_1000E1E48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100082220(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a4;
  unsigned int v25 = a3;
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  uint64_t v9 = (int *)(Configuration - 8);
  __chkstk_darwin(Configuration);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D8030);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v17 = *(void *)(a2 + 16);
  sub_100082A3C(&v11[v9[7]]);
  uint64_t v18 = a2 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
  uint64_t v19 = &v11[v9[8]];
  uint64_t v20 = sub_1000AE588();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v18, v20);
  uint64_t v21 = &v11[v9[9]];
  uint64_t v22 = sub_1000ADF08();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, a5, v22);
  *(void *)uint64_t v11 = v24;
  swift_retain();
  sub_100073398((void (*)(char *, uint64_t))v25, (uint64_t)v11, v17, (void (*)(char *))sub_100089BA8, v16, v25);
  swift_release();
  sub_10008A26C((uint64_t)v11, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  return swift_release();
}

uint64_t sub_1000824AC()
{
  return sub_1000AF608();
}

uint64_t sub_1000824F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(id, char *, uint64_t, char *))
{
  uint64_t v40 = a7;
  uint64_t v41 = a5;
  uint64_t v42 = a3;
  uint64_t v43 = a6;
  uint64_t v44 = a1;
  uint64_t v45 = a9;
  uint64_t v46 = a8;
  uint64_t v12 = sub_1000ADF08();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v37 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v38 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  uint64_t v16 = (int *)(Configuration - 8);
  __chkstk_darwin(Configuration);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = *(void *)(v9 + 16);
  sub_100082A3C(&v18[v16[7]]);
  uint64_t v19 = v9 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
  uint64_t v20 = &v18[v16[8]];
  uint64_t v21 = sub_1000AE588();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, v19, v21);
  uint64_t v22 = &v18[v16[9]];
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v36 = v12;
  v23(v22, a4, v12);
  uint64_t v24 = a2;
  *(void *)uint64_t v18 = a2;
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  uint64_t v26 = v38;
  v23(v38, a4, v12);
  unint64_t v27 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v28 = (v37 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (char *)swift_allocObject();
  uint64_t v30 = v41;
  uint64_t v31 = v42;
  *((void *)v29 + 2) = v25;
  *((void *)v29 + 3) = v30;
  *((void *)v29 + 4) = v43;
  *((void *)v29 + 5) = v24;
  *((void *)v29 + 6) = v31;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v29[v27], v26, v36);
  os_log_type_t v32 = v44;
  *(void *)&v29[v28] = v44;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v33 = v32;
  v45(v33, v18, v46, v29);
  swift_release();
  sub_10008A26C((uint64_t)v18, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
  return swift_release();
}

id sub_1000827C0@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, char *a3@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v5 = sub_1000ADCE8();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000ADD48();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  uint64_t v21 = sub_1000AFA08();
  uint64_t v22 = v13;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  sub_10004F318();
  sub_1000ADD38();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  unint64_t v15 = &a3[v14[6]];
  uint64_t v16 = sub_1000ADC28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = v20;
  *(void *)a3 = v20;
  *((void *)a3 + 1) = 0;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a3[v14[7]], v12, v9);
  *(void *)&a3[v14[8]] = 0;
  *(void *)&a3[v14[9]] = 0;
  a3[v14[10]] = 0;
  a3[v14[11]] = 0;
  return v17;
}

uint64_t sub_100082A3C@<X0>(char *a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D8040);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v30 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - v4;
  uint64_t v6 = sub_1000ADFC8();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000ADF08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  sub_1000ADE58();
  sub_1000ADF98();
  sub_1000ADF88();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = sub_1000AF428();
  if (result)
  {
    uint64_t v18 = *(int *)(v1 + 48);
    os_log_type_t v32 = v5;
    uint64_t v19 = &v5[v18];
    uint64_t v20 = v11;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v21(v5, v16, v10);
    uint64_t v29 = v19;
    v21(v19, v14, v10);
    uint64_t v22 = v30;
    uint64_t v23 = &v30[*(int *)(v1 + 48)];
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v24(v30, v32, v10);
    v24(v23, v19, v10);
    uint64_t v25 = v31;
    v21(v31, v22, v10);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v20 + 8);
    v26(v23, v10);
    unint64_t v27 = &v22[*(int *)(v1 + 48)];
    v21(v22, v32, v10);
    v21(v27, v29, v10);
    uint64_t v28 = sub_10000693C(&qword_1000D78C8);
    v21(&v25[*(int *)(v28 + 36)], v27, v10);
    return ((uint64_t (*)(char *, uint64_t))v26)(v22, v10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100082DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v35 = a6;
  uint64_t v33 = a4;
  uint64_t v34 = a2;
  sub_10001D8DC(a1, (uint64_t)v37, &qword_1000D7A78);
  uint64_t v10 = sub_1000ADF08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001D8DC(a1, (uint64_t)&v38, &qword_1000D7A78);
  uint64_t v14 = v38;
  uint64_t v36 = a7;
  if (v42)
  {
    uint64_t v15 = v35;
    swift_errorRetain();
    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1000AE768();
    sub_10000EFA4(v16, (uint64_t)qword_1000D7EE8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v17 = sub_1000AE758();
    os_log_type_t v18 = sub_1000AF6F8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446210;
      swift_getErrorValue();
      uint64_t v20 = sub_1000AFA78();
      v45[0] = sub_1000A53D8(v20, v21, (uint64_t *)&v43);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Could not fetch default list because {error: %{public}s}", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
    }

    v15(_swiftEmptyArrayStorage);
    return sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
  }
  else
  {
    long long v43 = v39;
    uint64_t v23 = v40;
    uint64_t v22 = v41;
    uint64_t v44 = v40;
    v45[0] = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v10);
    unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v25 = (v12 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v14;
    *(_OWORD *)(v26 + 24) = v43;
    *(void *)(v26 + 40) = v23;
    *(void *)(v26 + 48) = v22;
    *(void *)(v26 + 56) = v34;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v26 + v24, v13, v10);
    uint64_t v27 = v33;
    *(void *)(v26 + v25) = v33;
    uint64_t v28 = (void *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v29 = v36;
    *uint64_t v28 = v35;
    v28[1] = v29;
    id v30 = v14;
    sub_10005B798((uint64_t)&v44);
    sub_10005B798((uint64_t)v45);
    id v31 = v30;
    sub_10005B798((uint64_t)&v44);
    sub_10005B798((uint64_t)v45);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10008667C((uint64_t)v31, v27, (uint64_t (*)(void, void, void))sub_10008A57C, v26);

    swift_release();
    sub_10008A2CC((uint64_t)&v44);
    return sub_10008A2CC((uint64_t)v45);
  }
}

uint64_t sub_100083258(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v74 = a6;
  sub_10001D8DC(a1, (uint64_t)v76, &qword_1000D7A78);
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  __chkstk_darwin(Configuration);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000ADF08();
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v16 = *(void *)(v72 + 64);
  __chkstk_darwin(v73);
  uint64_t v75 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return a3(_swiftEmptyArrayStorage);
  }
  sub_10001D8DC(a1, (uint64_t)&v77, &qword_1000D7A78);
  unint64_t v69 = (uint64_t (*)(void))a3;
  uint64_t v68 = a4;
  if (v81)
  {
    os_log_type_t v66 = v77;
    swift_errorRetain();
    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1000AE768();
    sub_10000EFA4(v17, (uint64_t)qword_1000D7EE8);
    sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EB6C);
    id v18 = a8;
    sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EB6C);
    id v19 = v18;
    uint64_t v20 = sub_1000AE758();
    os_log_type_t v21 = sub_1000AF6F8();
    int v22 = v21;
    BOOL v23 = os_log_type_enabled(v20, v21);
    uint64_t v67 = a5;
    if (v23)
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v62 = (void *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(void *)&long long v82 = v65;
      *(_DWORD *)uint64_t v24 = 138543618;
      os_log_t v64 = v20;
      uint64_t v84 = (uint64_t)v19;
      id v25 = v19;
      int v63 = v22;
      id v26 = v25;
      sub_1000AF808();
      *uint64_t v62 = v19;

      *(_WORD *)(v24 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v27 = sub_1000AFA78();
      uint64_t v84 = sub_1000A53D8(v27, v28, (uint64_t *)&v82);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
      os_log_t v29 = v64;
      _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v63, "Could not fetch list {listID: %{public}@ error: %{public}s}", (uint8_t *)v24, 0x16u);
      sub_10000693C(&qword_1000D8048);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
    }
    uint64_t v46 = Strong;
    os_log_type_t v66 = *(void **)(Strong + 16);
    uint64_t v47 = Configuration;
    sub_100082A3C(&v15[*(int *)(Configuration + 20)]);
    uint64_t v48 = v46 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    Swift::String v49 = &v15[*(int *)(v47 + 24)];
    uint64_t v50 = sub_1000AE588();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v49, v48, v50);
    uint64_t v51 = v72;
    unint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
    uint64_t v53 = v73;
    v52(&v15[*(int *)(v47 + 28)], a7, v73);
    uint64_t v54 = v67;
    *(void *)uint64_t v15 = v67;
    uint64_t v55 = a7;
    uint64_t v56 = v75;
    v52(v75, v55, v53);
    unint64_t v57 = (*(unsigned __int8 *)(v51 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v58 = (char *)swift_allocObject();
    *((void *)v58 + 2) = v46;
    *((void *)v58 + 3) = v54;
    *((void *)v58 + 4) = v74;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v58[v57], v56, v53);
    uint64_t v59 = &v58[(v16 + v57 + 7) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v60 = v68;
    *(void *)uint64_t v59 = v69;
    *((void *)v59 + 1) = v60;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000600E8((uint64_t)v15, (uint64_t)sub_10008A574, (uint64_t)v58);
    swift_release();
    sub_10008A26C((uint64_t)v15, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    swift_release();
    return sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
  }
  else
  {
    long long v82 = v78;
    id v31 = v77;
    uint64_t v32 = v79;
    uint64_t v33 = v80;
    uint64_t v83 = v79;
    uint64_t v84 = v80;
    uint64_t v34 = v72;
    uint64_t v35 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v75, a7, v73);
    unint64_t v36 = (*(unsigned __int8 *)(v34 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    unint64_t v37 = (v16 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v38 = swift_allocObject();
    uint64_t v39 = Strong;
    uint64_t v40 = v38;
    *(void *)(v38 + 16) = v31;
    *(_OWORD *)(v38 + 24) = v82;
    *(void *)(v38 + 40) = v32;
    *(void *)(v38 + 48) = v33;
    *(void *)(v38 + 56) = v39;
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v38 + v36, v75, v35);
    uint64_t v41 = v74;
    *(void *)(v40 + v37) = v74;
    char v42 = (void *)(v40 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v43 = v68;
    *char v42 = v69;
    v42[1] = v43;
    id v44 = v31;
    sub_10005B798((uint64_t)&v83);
    sub_10005B798((uint64_t)&v84);
    id v45 = v44;
    sub_10005B798((uint64_t)&v83);
    sub_10005B798((uint64_t)&v84);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10008667C((uint64_t)v45, v41, (uint64_t (*)(void, void, void))sub_10008A57C, v40);

    swift_release();
    swift_release();
    sub_10008A2CC((uint64_t)&v83);
    return sub_10008A2CC((uint64_t)&v84);
  }
}

uint64_t sub_100083A58(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6, char *a7, void *a8)
{
  uint64_t v61 = a6;
  uint64_t v62 = a4;
  sub_10001D8DC(a1, (uint64_t)v63, &qword_1000D7AE8);
  uint64_t v60 = sub_1000ADF08();
  uint64_t v59 = *(void *)(v60 - 8);
  uint64_t v13 = *(void *)(v59 + 64);
  __chkstk_darwin(v60);
  uint64_t Configuration = type metadata accessor for TTRNewWidgetInteractorFetchConfiguration(0);
  __chkstk_darwin(Configuration);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return ((uint64_t (*)(void *))a3)(_swiftEmptyArrayStorage);
  }
  uint64_t v17 = Strong;
  sub_10001D8DC(a1, (uint64_t)&v64, &qword_1000D7AE8);
  if (v67)
  {
    uint64_t v56 = a7;
    uint64_t v52 = v64;
    swift_errorRetain();
    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v53 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v55 = a5;
    unint64_t v57 = a3;
    uint64_t v18 = sub_1000AE768();
    sub_10000EFA4(v18, (uint64_t)qword_1000D7EE8);
    sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EB6C);
    id v19 = a8;
    sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EB6C);
    id v20 = v19;
    os_log_type_t v21 = sub_1000AE758();
    os_log_type_t v22 = sub_1000AF6F8();
    int v23 = v22;
    BOOL v24 = os_log_type_enabled(v21, v22);
    uint64_t v54 = a1;
    if (v24)
    {
      uint64_t v25 = swift_slowAlloc();
      int v50 = v23;
      uint64_t v26 = v25;
      uint64_t v48 = (void *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(void *)&v68[0] = v51;
      *(_DWORD *)uint64_t v26 = 138543618;
      os_log_t v49 = v21;
      uint64_t v71 = (uint64_t)v20;
      id v27 = v20;
      sub_1000AF808();
      *uint64_t v48 = v20;

      *(_WORD *)(v26 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v28 = sub_1000AFA78();
      uint64_t v71 = sub_1000A53D8(v28, v29, (uint64_t *)v68);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
      os_log_type_t v21 = v49;
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v50, "Could not fetch custom smart list {customSmartListID: %{public}@ error: %{public}s}", (uint8_t *)v26, 0x16u);
      sub_10000693C(&qword_1000D8048);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
      sub_10008A530(a1, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
    }

    uint64_t v52 = *(void *)(v17 + 16);
    uint64_t v32 = Configuration;
    uint64_t v33 = v56;
    sub_100082A3C(&v15[*(int *)(Configuration + 20)]);
    uint64_t v34 = v17 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
    uint64_t v35 = &v15[*(int *)(v32 + 24)];
    uint64_t v36 = sub_1000AE588();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v35, v34, v36);
    unint64_t v37 = &v15[*(int *)(v32 + 28)];
    uint64_t v38 = v59;
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
    uint64_t v40 = v60;
    v39(v37, v33, v60);
    uint64_t v41 = v55;
    *(void *)uint64_t v15 = v55;
    char v42 = v53;
    v39(v53, v33, v40);
    unint64_t v43 = (*(unsigned __int8 *)(v38 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    unint64_t v44 = (v13 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v45 = (char *)swift_allocObject();
    *((void *)v45 + 2) = v17;
    *((void *)v45 + 3) = v41;
    *((void *)v45 + 4) = v61;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v45[v43], v42, v40);
    uint64_t v46 = &v45[v44];
    uint64_t v47 = v62;
    *(void *)uint64_t v46 = v57;
    *((void *)v46 + 1) = v47;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000600E8((uint64_t)v15, (uint64_t)sub_10008A574, (uint64_t)v45);
    swift_release();
    sub_10008A26C((uint64_t)v15, type metadata accessor for TTRNewWidgetInteractorFetchConfiguration);
    swift_release();
    return sub_10008A530(v54, (void (*)(void, void, void, void, void, void))sub_10008EBC4);
  }
  else
  {
    v68[0] = v64;
    v68[1] = v65;
    uint64_t v69 = v66;
    uint64_t v70 = *((void *)&v65 + 1);
    uint64_t v71 = v66;
    id v31 = (id)v64;
    sub_10005B798((uint64_t)&v70);
    sub_10005B798((uint64_t)&v71);
    sub_10008EC20((uint64_t)v68, v61, a7, a3, v62);

    swift_release();
    sub_10008A2CC((uint64_t)&v70);
    return sub_10008A2CC((uint64_t)&v71);
  }
}

uint64_t sub_100084154(uint64_t a1, void (*a2)(char *), uint64_t a3, char a4)
{
  uint64_t v7 = a1;
  sub_10001D8DC(a1, (uint64_t)v58, &qword_1000D79E8);
  uint64_t v8 = sub_10000693C(&qword_1000D58B8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000ADF08();
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  unint64_t v57 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v51 = (char *)v49 - v15;
  __chkstk_darwin(v14);
  uint64_t v52 = (char *)v49 - v16;
  uint64_t v17 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17 - 8);
  id v20 = (void *)((char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001D8DC(v7, (uint64_t)v59, &qword_1000D79E8);
  if (v61)
  {
    char v21 = a4;
    swift_errorRetain();
    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1000AE768();
    sub_10000EFA4(v22, (uint64_t)qword_1000D7EE8);
    swift_errorRetain();
    swift_errorRetain();
    int v23 = sub_1000AE758();
    os_log_type_t v24 = sub_1000AF6F8();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v57 = (char *)v7;
      uint64_t v25 = swift_slowAlloc();
      *(void *)&long long v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136446466;
      unint64_t v26 = 0xE500000000000000;
      uint64_t v27 = 0x7961646F74;
      switch(v21)
      {
        case 1:
          uint64_t v27 = 0x656C756465686373;
          goto LABEL_30;
        case 2:
          unint64_t v26 = 0xE300000000000000;
          uint64_t v27 = 7105633;
          break;
        case 3:
          unint64_t v26 = 0xE700000000000000;
          uint64_t v27 = 0x64656767616C66;
          break;
        case 4:
          unint64_t v26 = 0xE800000000000000;
          uint64_t v27 = 0x64656E6769737361;
          break;
        case 5:
          unint64_t v26 = 0xEF737070416E4964;
          uint64_t v27 = 0x6E756F4669726973;
          break;
        case 6:
          uint64_t v27 = 0x6574656C706D6F63;
LABEL_30:
          unint64_t v26 = 0xE900000000000064;
          break;
        default:
          break;
      }
      uint64_t v67 = sub_1000A53D8(v27, v26, (uint64_t *)&v62);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v46 = sub_1000AFA88();
      uint64_t v67 = sub_1000A53D8(v46, v47, (uint64_t *)&v62);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      uint64_t v48 = (uint64_t)v57;
      sub_10008A1D0((uint64_t)v57);
      sub_10008A1D0(v48);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Could not fetch pre-defined smart list {predefinedSmartListType: %{public}s, error %{public}s}", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      uint64_t v7 = v48;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10008A1D0(v7);
      sub_10008A1D0(v7);
    }

    a2((char *)_swiftEmptyArrayStorage);
    return sub_10008A1D0(v7);
  }
  else
  {
    long long v62 = v59[0];
    long long v63 = v59[1];
    uint64_t v64 = v60;
    sub_10001D8DC((uint64_t)&v62, (uint64_t)&v65, &qword_1000D8038);
    uint64_t v66 = *((void *)&v63 + 1);
    uint64_t v67 = v64;
    uint64_t v28 = *(void *)(v64 + 16);
    if (v28)
    {
      v49[1] = a3;
      int v50 = a2;
      uint64_t v29 = v64 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      sub_10005B798((uint64_t)&v67);
      swift_bridgeObjectRetain();
      sub_10005B798((uint64_t)&v67);
      sub_10005B804(&v65);
      sub_10005B798((uint64_t)&v66);
      uint64_t v56 = *(void *)(v18 + 72);
      id v30 = (void (**)(char *, char *, uint64_t))(v53 + 32);
      uint64_t v55 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
      uint64_t v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
      id v31 = (char *)_swiftEmptyArrayStorage;
      do
      {
        sub_10008A6B8(v29, (uint64_t)v20, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
        uint64_t v33 = v20[3];
        uint64_t v32 = v20[4];
        sub_100024D3C(v20, v33);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v32 + 64))(v33, v32) & 1) != 0
          || (uint64_t v34 = v20[3],
              uint64_t v35 = v20[4],
              sub_100024D3C(v20, v34),
              (uint64_t v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 104))(v34, v35)) == 0))
        {
          uint64_t v40 = 1;
        }
        else
        {
          unint64_t v37 = v36;
          id v38 = [v36 date];

          uint64_t v39 = v51;
          sub_1000ADEB8();

          (*v30)(v10, v39, v11);
          uint64_t v40 = 0;
        }
        (*v55)(v10, v40, 1, v11);
        sub_10008A26C((uint64_t)v20, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
        if ((*v54)(v10, 1, v11) == 1)
        {
          sub_100009EF4((uint64_t)v10, &qword_1000D58B8);
        }
        else
        {
          uint64_t v41 = *v30;
          char v42 = v52;
          (*v30)(v52, v10, v11);
          v41(v57, v42, v11);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v31 = (char *)sub_10002274C(0, *((void *)v31 + 2) + 1, 1, (unint64_t)v31);
          }
          unint64_t v44 = *((void *)v31 + 2);
          unint64_t v43 = *((void *)v31 + 3);
          if (v44 >= v43 >> 1) {
            id v31 = (char *)sub_10002274C(v43 > 1, v44 + 1, 1, (unint64_t)v31);
          }
          *((void *)v31 + 2) = v44 + 1;
          v41(&v31[((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v44], v57, v11);
        }
        v29 += v56;
        --v28;
      }
      while (v28);
      sub_10008A2CC((uint64_t)&v67);
      sub_10008A2CC((uint64_t)&v67);
      v50(v31);
    }
    else
    {
      sub_10005B798((uint64_t)&v67);
      sub_10005B804(&v65);
      sub_10005B798((uint64_t)&v66);
      a2((char *)_swiftEmptyArrayStorage);
    }
    swift_bridgeObjectRelease();
    sub_10008A2F8(&v65);
    sub_10008A2CC((uint64_t)&v66);
    return sub_10008A2CC((uint64_t)&v67);
  }
}

uint64_t sub_1000849D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char *a6, void (*a7)(void *), uint64_t a8)
{
  sub_10001D8DC(a1, (uint64_t)v23, &qword_1000D79E8);
  sub_10001D8DC(a1, (uint64_t)v24, &qword_1000D79E8);
  if (v26)
  {
    swift_errorRetain();
    if (qword_1000D4968 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1000AE768();
    sub_10000EFA4(v13, (uint64_t)qword_1000D7EE8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = sub_1000AE758();
    os_log_type_t v15 = sub_1000AF6F8();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      *(void *)&long long v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      unint64_t v17 = 0xE500000000000000;
      uint64_t v18 = 0x7961646F74;
      switch(a3)
      {
        case 1:
          uint64_t v18 = 0x656C756465686373;
          goto LABEL_14;
        case 2:
          unint64_t v17 = 0xE300000000000000;
          uint64_t v18 = 7105633;
          break;
        case 3:
          unint64_t v17 = 0xE700000000000000;
          uint64_t v18 = 0x64656767616C66;
          break;
        case 4:
          unint64_t v17 = 0xE800000000000000;
          uint64_t v18 = 0x64656E6769737361;
          break;
        case 5:
          unint64_t v17 = 0xEF737070416E4964;
          uint64_t v18 = 0x6E756F4669726973;
          break;
        case 6:
          uint64_t v18 = 0x6574656C706D6F63;
LABEL_14:
          unint64_t v17 = 0xE900000000000064;
          break;
        default:
          break;
      }
      v32[0] = sub_1000A53D8(v18, v17, (uint64_t *)&v27);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v21 = sub_1000AFA88();
      v32[0] = sub_1000A53D8(v21, v22, (uint64_t *)&v27);
      sub_1000AF808();
      swift_bridgeObjectRelease();
      sub_10008A1D0(a1);
      sub_10008A1D0(a1);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Could not fetch pre-defined smart list {predefinedSmartListType: %{public}s, error %{public}s}", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10008A1D0(a1);
      sub_10008A1D0(a1);
    }

    a7(_swiftEmptyArrayStorage);
    return sub_10008A1D0(a1);
  }
  else
  {
    long long v27 = v24[0];
    long long v28 = v24[1];
    uint64_t v29 = v25;
    sub_10001D8DC((uint64_t)&v27, (uint64_t)&v30, &qword_1000D8038);
    uint64_t v31 = *((void *)&v28 + 1);
    v32[0] = v29;
    uint64_t v19 = (void *)sub_1000ADFD8();
    sub_10005B804(&v30);
    sub_10005B798((uint64_t)&v31);
    sub_10005B798((uint64_t)v32);
    sub_10008EF24((uint64_t)&v27, (uint64_t)v19, a6, a7, a8);

    sub_10008A2F8(&v30);
    sub_10008A2CC((uint64_t)&v31);
    return sub_10008A2CC((uint64_t)v32);
  }
}

uint64_t sub_100084DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, void (*a8)(void *), uint64_t a9)
{
  uint64_t v30 = a3;
  uint64_t v31 = a7;
  uint64_t v29 = a2;
  uint64_t v32 = a9;
  uint64_t v33 = a8;
  uint64_t v13 = sub_10000693C(&qword_1000D59C0);
  __chkstk_darwin(v13 - 8);
  os_log_type_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AE338();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v20 = (char *)v19 + *(int *)(sub_10000693C(&qword_1000D5A28) + 48);
  *uint64_t v19 = [*(id *)a4 objectID];
  uint64_t v21 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
  uint64_t v22 = sub_1000AE2E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v20, v21, v22);
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for REMNavigationSpecifier.list(_:), v16);
  uint64_t v23 = *(void *)(a4 + 24);
  uint64_t v24 = *(void *)(a4 + 32);
  (*(void (**)(char *, void *, uint64_t))(v17 + 16))(v15, v19, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  uint64_t v25 = sub_1000850B0(v23, v24, (uint64_t)v15, a6);
  sub_100009EF4((uint64_t)v15, &qword_1000D59C0);
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  unint64_t v37 = v19;
  uint64_t v38 = a1;
  uint64_t v39 = v29;
  uint64_t v40 = v30;
  uint64_t v41 = v31;
  char v26 = sub_10007F75C((void (*)(uint64_t))sub_10008A660, (uint64_t)v34, (uint64_t)v25, (uint64_t)v42, type metadata accessor for TTRNewWidgetTimelineEntry, (void (*)(BOOL, unint64_t, uint64_t))sub_1000A7B44, type metadata accessor for TTRNewWidgetPresenter.Snapshot, type metadata accessor for TTRNewWidgetTimelineEntry);
  swift_bridgeObjectRelease();
  v33(v26);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
}

void *sub_1000850B0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v9 = sub_1000ADF08();
  uint64_t v98 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v86 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRNewWidgetPresenter.Snapshot(0);
  uint64_t v91 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v94 = (uint64_t)v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v87 = (char *)v72 - v14;
  uint64_t v15 = sub_10000693C(&qword_1000D8068);
  __chkstk_darwin(v15 - 8);
  uint64_t v78 = (uint64_t)v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000ADF68();
  __chkstk_darwin(v17 - 8);
  uint64_t v77 = (char **)((char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_10000693C(&qword_1000D59C0);
  __chkstk_darwin(v19 - 8);
  uint64_t v76 = (uint64_t)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  __chkstk_darwin(v21 - 8);
  uint64_t v75 = (uint64_t)v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10000693C(&qword_1000D8070);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  os_log_type_t v97 = *(void **)(v82 - 8);
  __chkstk_darwin(v82);
  char v81 = (char *)v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  uint64_t v90 = *(void *)(v95 - 8);
  uint64_t v27 = __chkstk_darwin(v95);
  uint64_t v84 = (uint64_t)v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v96 = (uint64_t)v72 - v29;
  uint64_t v103 = a4;
  uint64_t v104 = v4;
  uint64_t v105 = a3;
  uint64_t v30 = sub_10007F75C((void (*)(uint64_t))sub_10008A804, (uint64_t)v102, a1, (uint64_t)v107, type metadata accessor for TTRNewWidgetViewModel.Reminder, (void (*)(BOOL, unint64_t, uint64_t))sub_1000A7ACC, type metadata accessor for TTRNewWidgetInteractorReminderWrapper, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  uint64_t v80 = v4;
  uint64_t v100 = v4;
  uint64_t v101 = a3;
  uint64_t v79 = a3;
  uint64_t v92 = sub_100080E94((void (*)(uint64_t))sub_10008A828, (uint64_t)v99, a1);
  uint64_t v31 = sub_10008A844(a2);
  uint64_t v32 = sub_10008B8F0(v31, (uint64_t)a4);
  swift_bridgeObjectRelease();
  uint64_t v106 = a1;
  swift_bridgeObjectRetain();
  uint64_t v33 = swift_bridgeObjectRetain();
  sub_10006D5CC(v33);
  uint64_t v34 = sub_10008CEF4(v32, v106, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v34 + 16);
  if (!v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = _swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  uint64_t v93 = v30;
  uint64_t v73 = OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForInterestingReminder;
  unint64_t v36 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  v72[1] = v34;
  uint64_t v37 = v34 + v36;
  uint64_t v90 = *(void *)(v90 + 72);
  uint64_t v89 = (unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 6);
  uint64_t v88 = (void (**)(char *, uint64_t, uint64_t))(v98 + 16);
  uint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t v85 = (void (**)(uint64_t, char *, uint64_t))(v98 + 32);
  uint64_t v39 = v82;
  uint64_t v40 = v81;
  uint64_t v41 = v96;
  uint64_t v83 = v11;
  uint64_t v74 = v25;
  do
  {
    os_log_type_t v97 = v38;
    uint64_t v98 = v35;
    sub_10008A6B8(v37, v41, type metadata accessor for TTRNewWidgetPresenter.Division);
    sub_100009D6C(v41, (uint64_t)v25, &qword_1000D8070);
    if ((*v89)(v25, 1, v39) == 1)
    {
      sub_100009EF4((uint64_t)v25, &qword_1000D8070);
LABEL_10:
      uint64_t v49 = v95;
      int v50 = v86;
      (*v88)(v86, v41 + *(int *)(v95 + 20), v9);
      if (*(unsigned char *)(v41 + *(int *)(v49 + 24))) {
        uint64_t v51 = v93;
      }
      else {
        uint64_t v51 = v92;
      }
      swift_bridgeObjectRetain();
      uint64_t v52 = v94;
      (*v85)(v94, v50, v9);
      *(void *)(v52 + *(int *)(v11 + 20)) = v51;
      *(_DWORD *)(v52 + *(int *)(v11 + 24)) = 0;
      uint64_t v38 = v97;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = (void *)sub_1000227B4(0, v38[2] + 1, 1, (unint64_t)v38);
      }
      unint64_t v54 = v38[2];
      unint64_t v53 = v38[3];
      if (v54 >= v53 >> 1) {
        uint64_t v38 = (void *)sub_1000227B4(v53 > 1, v54 + 1, 1, (unint64_t)v38);
      }
      long long v38[2] = v54 + 1;
      sub_10008A720(v94, (uint64_t)v38+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v54, type metadata accessor for TTRNewWidgetPresenter.Snapshot);
      goto LABEL_4;
    }
    sub_10008A720((uint64_t)v25, (uint64_t)v40, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
    uint64_t v42 = v40[3];
    uint64_t v43 = v40[4];
    sub_100024D3C(v40, v42);
    uint64_t v44 = v42;
    uint64_t v41 = v96;
    char v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 64))(v44, v43);
    uint64_t v46 = v84;
    sub_10008A6B8(v41, v84, type metadata accessor for TTRNewWidgetPresenter.Division);
    if (v45)
    {
      int v47 = *(unsigned __int8 *)(v46 + *(int *)(v95 + 24));
      sub_10008A26C(v46, type metadata accessor for TTRNewWidgetPresenter.Division);
      uint64_t v48 = (uint64_t)v93;
      if (v47 != 1)
      {
        sub_10008A26C((uint64_t)v40, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
        uint64_t v11 = v83;
        goto LABEL_10;
      }
    }
    else
    {
      sub_10008A26C(v46, type metadata accessor for TTRNewWidgetPresenter.Division);
      uint64_t v48 = (uint64_t)v93;
    }
    if (*(unsigned char *)(v41 + *(int *)(v95 + 24))) {
      uint64_t v55 = v48;
    }
    else {
      uint64_t v55 = (uint64_t)v92;
    }
    swift_bridgeObjectRetain();
    sub_100023D40((uint64_t)v40, (uint64_t)&v106);
    uint64_t v56 = v9;
    uint64_t v57 = v40[3];
    uint64_t v58 = v40[4];
    sub_100024D3C(v40, v57);
    char v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 64))(v57, v58);
    uint64_t v60 = v40[5];
    LODWORD(v58) = *(unsigned __int8 *)(v80 + v73);
    uint64_t v61 = v76;
    sub_100009D6C(v79, v76, &qword_1000D59C0);
    long long v62 = v77;
    sub_1000ADF58();
    uint64_t v63 = v75;
    int v64 = v58;
    uint64_t v9 = v56;
    uint64_t v65 = sub_1000247F0(&v106, v59 & 1, v64, v60, v61, v62, v75);
    __chkstk_darwin(v65);
    v72[-2] = v63;
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_10007F320((uint64_t (*)(char *))sub_10008E748, (uint64_t)&v72[-4], v55);
    uint64_t v66 = v78;
    sub_10008A6B8(v63, v78, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    sub_100089E70(0, 0, v66);
    sub_10008A26C(v63, type metadata accessor for TTRNewWidgetViewModel.Reminder);
    swift_bridgeObjectRelease();
    uint64_t v67 = v106;
    uint64_t v68 = (uint64_t)v87;
    (*v88)(v87, v96 + *(int *)(v95 + 20), v9);
    uint64_t v11 = v83;
    *(void *)(v68 + *(int *)(v83 + 20)) = v67;
    *(_DWORD *)(v68 + *(int *)(v11 + 24)) = 1065353216;
    uint64_t v38 = v97;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v38 = (void *)sub_1000227B4(0, v38[2] + 1, 1, (unint64_t)v38);
    }
    unint64_t v70 = v38[2];
    unint64_t v69 = v38[3];
    uint64_t v25 = v74;
    uint64_t v39 = v82;
    uint64_t v40 = v81;
    if (v70 >= v69 >> 1) {
      uint64_t v38 = (void *)sub_1000227B4(v69 > 1, v70 + 1, 1, (unint64_t)v38);
    }
    long long v38[2] = v70 + 1;
    sub_10008A720((uint64_t)v87, (uint64_t)v38+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v70, type metadata accessor for TTRNewWidgetPresenter.Snapshot);
    sub_10008A26C((uint64_t)v40, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
LABEL_4:
    uint64_t v41 = v96;
    sub_10008A26C(v96, type metadata accessor for TTRNewWidgetPresenter.Division);
    v37 += v90;
    uint64_t v35 = v98 - 1;
  }
  while (v98 != 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_28:
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_100085CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v43 = a7;
  uint64_t v44 = a4;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v45 = a2;
  uint64_t v49 = a8;
  uint64_t v10 = sub_10000693C(&qword_1000D5928);
  __chkstk_darwin(v10 - 8);
  uint64_t v48 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000ADF08();
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  __chkstk_darwin(v12);
  uint64_t v40 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000ADD48();
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v39 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v36 - v20;
  uint64_t v22 = *(void **)a3;
  uint64_t v23 = *(void *)(a3 + 8);
  LODWORD(a3) = *(unsigned __int8 *)(a3 + 16);
  uint64_t v24 = type metadata accessor for TTRNewWidgetPresenter.Snapshot(0);
  uint64_t v25 = *(void *)(a1 + *(int *)(v24 + 20));
  sub_1000AE328();
  sub_100086068(v22, v23, a3, v25, (uint64_t)v16, v44, v46, v47, (uint64_t)v21, *(float *)(a1 + *(int *)(v24 + 24)) > 0.0);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v39);
  uint64_t v27 = v40;
  uint64_t v26 = v41;
  uint64_t v28 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, a1, v42);
  uint64_t v29 = v37;
  sub_10008A6B8((uint64_t)v21, v37, type metadata accessor for TTRNewWidgetViewModel);
  uint64_t v30 = (uint64_t)v48;
  sub_1000AF348();
  sub_10008A26C((uint64_t)v21, type metadata accessor for TTRNewWidgetViewModel);
  uint64_t v31 = sub_1000AF358();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v26 + 32);
  uint64_t v33 = v49;
  v32(v49, v27, v28);
  uint64_t v34 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  sub_10008A720(v29, v33 + *(int *)(v34 + 20), type metadata accessor for TTRNewWidgetViewModel);
  return sub_10001D8DC(v30, v33 + *(int *)(v34 + 24), &qword_1000D5928);
}

uint64_t sub_100086068@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v79 = a8;
  uint64_t v78 = a6;
  uint64_t v76 = a5;
  uint64_t v80 = a4;
  int v77 = a3;
  uint64_t v81 = a2;
  uint64_t v13 = sub_10000693C(&qword_1000D4CD8);
  __chkstk_darwin(v13 - 8);
  uint64_t v75 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AE048();
  uint64_t v15 = sub_100070F8C(0, &qword_1000D8058);
  v86[3] = v15;
  v86[4] = &protocol witness table for REMList;
  v86[0] = a1;
  id v16 = a1;
  sub_1000AE038();
  sub_100009EF4((uint64_t)v86, &qword_1000D8060);
  uint64_t v74 = sub_1000AE018();
  sub_10008F300((uint64_t)v85, (void (*)(void, void, void, void, void, void, void))sub_10008A788);
  uint64_t v83 = v15;
  uint64_t v84 = &protocol witness table for REMList;
  v82[0] = v16;
  id v17 = v16;
  sub_1000AE038();
  sub_100009EF4((uint64_t)v82, &qword_1000D8060);
  uint64_t v73 = sub_1000AE028();
  uint64_t v72 = v18;
  sub_10008F300((uint64_t)v86, (void (*)(void, void, void, void, void, void, void))sub_10008A788);
  id v19 = [v17 appearanceContext];
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = [v19 badge];

    if (v21)
    {
      id v22 = [v21 emoji];
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v69 = sub_1000AF498();
        uint64_t v68 = v24;

        uint64_t v67 = 0;
        uint64_t v66 = 0;
        uint64_t v25 = &v88;
        goto LABEL_7;
      }
    }
  }
  sub_1000AE108();
  uint64_t v83 = v15;
  uint64_t v84 = &protocol witness table for REMList;
  v82[0] = v17;
  id v26 = v17;
  uint64_t v27 = (void *)sub_1000AE0F8();
  sub_100023B0C((uint64_t)v82);
  uint64_t v70 = sub_1000AF7A8();

  uint64_t v83 = v15;
  uint64_t v84 = &protocol witness table for REMList;
  v82[0] = v26;
  id v28 = v26;
  uint64_t v29 = (void *)sub_1000AE0F8();
  sub_100023B0C((uint64_t)v82);
  uint64_t v67 = sub_1000AF798();
  uint64_t v66 = v30;

  uint64_t v69 = 0;
  uint64_t v25 = (uint64_t *)&v87;
LABEL_7:
  *(v25 - 32) = 0;
  id v31 = [v17 displayName];
  uint64_t v32 = sub_1000AF498();
  uint64_t v65 = v33;

  uint64_t v34 = self;
  id v35 = objc_allocWithZone((Class)NSNumber);
  id v36 = [v35 initWithInteger:v81];
  id v37 = [v34 localizedStringFromNumber:v36 numberStyle:1];

  uint64_t v38 = sub_1000AF498();
  uint64_t v40 = v39;

  uint64_t v41 = *(void *)(v71 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString);
  uint64_t v42 = *(void *)(v71 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString + 8);
  if (a10)
  {
    uint64_t v71 = v32;
    uint64_t v43 = a7;
    uint64_t v44 = v80;
    uint64_t v45 = *(void *)(v80 + 16);
    uint64_t v46 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = v47;
    if (v45)
    {
      uint64_t v49 = v44 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
      uint64_t v50 = v75;
      sub_10008A6B8(v49, v75, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v50, 0, 1, v46);
    }
    else
    {
      uint64_t v50 = v75;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v75, 1, 1, v46);
    }
    a7 = v43;
    uint64_t v32 = v71;
  }
  else
  {
    uint64_t v51 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v50 = v75;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v75, 1, 1, v51);
  }
  uint64_t v52 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v53 = a9 + v52[18];
  uint64_t v54 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v53, v76, v54);
  uint64_t v55 = v65;
  *(void *)a9 = v32;
  *(void *)(a9 + 8) = v55;
  *(void *)(a9 + 16) = v81;
  *(void *)(a9 + 24) = v38;
  *(void *)(a9 + 32) = v40;
  *(unsigned char *)(a9 + 40) = v77;
  *(void *)(a9 + 48) = v41;
  *(void *)(a9 + 56) = v42;
  sub_10001D8DC(v50, a9 + v52[9], &qword_1000D4CD8);
  *(void *)(a9 + v52[10]) = v74;
  uint64_t v56 = (uint64_t *)(a9 + v52[11]);
  uint64_t v57 = v72;
  uint64_t *v56 = v73;
  v56[1] = v57;
  *(void *)(a9 + v52[12]) = v70;
  uint64_t v58 = (uint64_t *)(a9 + v52[13]);
  uint64_t v59 = v66;
  *uint64_t v58 = v67;
  v58[1] = v59;
  uint64_t v60 = (uint64_t *)(a9 + v52[14]);
  uint64_t v61 = v68;
  *uint64_t v60 = v69;
  v60[1] = v61;
  *(unsigned char *)(a9 + v52[15]) = 0;
  long long v62 = (void *)(a9 + v52[16]);
  *long long v62 = v78;
  v62[1] = a7;
  *(void *)(a9 + v52[17]) = v79;
  *(void *)(a9 + v52[19]) = v80;
  *(unsigned char *)(a9 + v52[20]) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_10008667C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void), uint64_t a4)
{
  sub_10008A580((long long *)(v4 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_shareeInfoStyle), (uint64_t)&v35);
  if (!v36) {
    return a3(0, 0, 0);
  }
  sub_100006A40(&v35, (uint64_t)v32);
  if (qword_1000D4968 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1000AE768();
  sub_10000EFA4(v7, (uint64_t)qword_1000D7EE8);
  uint64_t v8 = sub_1000AE758();
  os_log_type_t v9 = sub_1000AF718();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRNewWidgetPresenter checking to see if list has sharees", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t v11 = sub_1000AF7B8();
  unint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = sub_1000AE198();
    double v15 = v14;
    double v17 = v16;
    uint64_t v18 = v13;
    char v20 = v19;
    if (v12 <= 4)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = (void *)v11;
    }
    else
    {
      sub_1000AFA48();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      id v21 = (void *)swift_dynamicCastClass();
      if (!v21)
      {
        swift_bridgeObjectRelease();
        id v21 = _swiftEmptyArrayStorage;
      }
      uint64_t v22 = v21[2];
      swift_release();
      if (v22 == 4)
      {
        uint64_t v23 = (void *)swift_dynamicCastClass();
        swift_bridgeObjectRelease();
        if (!v23)
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = _swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = sub_100089CE4(v11, v11 + 32, 0, 9uLL);
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v25 = sub_1000AE758();
    os_log_type_t v26 = sub_1000AF718();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "TTRNewWidgetPresenter fetching sharee data", v27, 2u);
      swift_slowDealloc();
    }

    uint64_t v28 = v33;
    uint64_t v29 = v34;
    sub_100024D3C(v32, v33);
    uint64_t v30 = (void *)swift_allocObject();
    void v30[2] = v11;
    v30[3] = a3;
    v30[4] = a4;
    id v31 = *(void (**)(void *, uint64_t, void, void, uint64_t (*)(void *), void *, uint64_t, uint64_t, double, double))(v29 + 8);
    swift_retain();
    v31(v23, v18, v20 & 1, 0, sub_10008A654, v30, v28, v29, v15, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    a3(0, 0, 0);
  }
  return sub_100023B0C((uint64_t)v32);
}

uint64_t sub_100086A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v40 = a4;
  uint64_t v42 = a5;
  uint64_t v7 = sub_10000693C(&qword_1000D5928);
  __chkstk_darwin(v7 - 8);
  uint64_t v41 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000ADF08();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  __chkstk_darwin(v9);
  uint64_t v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000ADD48();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v33 = (uint64_t)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v33 - v17;
  char v19 = *(void **)a3;
  uint64_t v20 = *(void *)(a3 + 8);
  LODWORD(a3) = *(unsigned __int8 *)(a3 + 16);
  uint64_t v21 = type metadata accessor for TTRNewWidgetPresenter.Snapshot(0);
  uint64_t v22 = *(void *)(a1 + *(int *)(v21 + 20));
  sub_1000AE328();
  sub_100086DB4(v19, v20, a3, v22, (uint64_t)v13, *(float *)(a1 + *(int *)(v21 + 24)) > 0.0, (uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  uint64_t v24 = v36;
  uint64_t v23 = v37;
  uint64_t v25 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, a1, v38);
  uint64_t v26 = v33;
  sub_10008A6B8((uint64_t)v18, v33, type metadata accessor for TTRNewWidgetViewModel);
  uint64_t v27 = (uint64_t)v41;
  sub_1000AF348();
  sub_10008A26C((uint64_t)v18, type metadata accessor for TTRNewWidgetViewModel);
  uint64_t v28 = sub_1000AF358();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  uint64_t v30 = v42;
  v29(v42, v24, v25);
  uint64_t v31 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  sub_10008A720(v26, v30 + *(int *)(v31 + 20), type metadata accessor for TTRNewWidgetViewModel);
  return sub_10001D8DC(v27, v30 + *(int *)(v31 + 24), &qword_1000D5928);
}

uint64_t sub_100086DB4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  LODWORD(v68) = a6;
  uint64_t v72 = a5;
  uint64_t v74 = a4;
  int v73 = a3;
  uint64_t v75 = a2;
  uint64_t v9 = sub_10000693C(&qword_1000D4CD8);
  __chkstk_darwin(v9 - 8);
  uint64_t v71 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AE048();
  uint64_t v11 = sub_100070F8C(0, &qword_1000D8098);
  v80[3] = v11;
  v80[4] = &protocol witness table for REMSmartList;
  v80[0] = a1;
  id v12 = a1;
  sub_1000AE038();
  sub_100009EF4((uint64_t)v80, &qword_1000D8060);
  uint64_t v13 = sub_1000AE018();
  sub_10008F300((uint64_t)v79, (void (*)(void, void, void, void, void, void, void))sub_10008A788);
  uint64_t v77 = v11;
  uint64_t v78 = &protocol witness table for REMSmartList;
  v76[0] = v12;
  id v14 = v12;
  sub_1000AE038();
  sub_100009EF4((uint64_t)v76, &qword_1000D8060);
  uint64_t v70 = sub_1000AE028();
  uint64_t v69 = v15;
  sub_10008F300((uint64_t)v80, (void (*)(void, void, void, void, void, void, void))sub_10008A788);
  id v16 = [v14 customContext];
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [v16 badge];

    if (v18)
    {
      id v19 = [v18 emoji];
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v65 = sub_1000AF498();
        uint64_t v64 = v21;

        uint64_t v63 = 0;
        uint64_t v62 = 0;
        uint64_t v22 = &v82;
        goto LABEL_7;
      }
    }
  }
  sub_1000AE108();
  uint64_t v77 = v11;
  uint64_t v78 = &protocol witness table for REMSmartList;
  v76[0] = v14;
  id v23 = v14;
  uint64_t v24 = (void *)sub_1000AE0F8();
  sub_100023B0C((uint64_t)v76);
  uint64_t v66 = sub_1000AF7A8();

  uint64_t v77 = v11;
  uint64_t v78 = &protocol witness table for REMSmartList;
  v76[0] = v23;
  id v25 = v23;
  uint64_t v26 = (void *)sub_1000AE0F8();
  sub_100023B0C((uint64_t)v76);
  uint64_t v63 = sub_1000AF798();
  uint64_t v62 = v27;

  uint64_t v65 = 0;
  uint64_t v22 = &v81;
LABEL_7:
  *(v22 - 32) = 0;
  v76[0] = v14;
  uint64_t v28 = sub_1000AF6E8();
  uint64_t v61 = v29;
  uint64_t v30 = self;
  id v31 = objc_allocWithZone((Class)NSNumber);
  id v32 = [v31 initWithInteger:v75];
  id v33 = [v30 localizedStringFromNumber:v32 numberStyle:1];

  uint64_t v34 = sub_1000AF498();
  uint64_t v36 = v35;

  uint64_t v37 = *(void *)(v67 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString);
  uint64_t v38 = *(void *)(v67 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString + 8);
  if (v68)
  {
    uint64_t v68 = v28;
    uint64_t v39 = v13;
    uint64_t v40 = v74;
    uint64_t v41 = *(void *)(v74 + 16);
    uint64_t v42 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = v43;
    if (v41)
    {
      uint64_t v45 = v40 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
      uint64_t v46 = v71;
      sub_10008A6B8(v45, v71, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v42);
    }
    else
    {
      uint64_t v46 = v71;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v71, 1, 1, v42);
    }
    uint64_t v13 = v39;
    uint64_t v28 = v68;
  }
  else
  {
    uint64_t v47 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v46 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v71, 1, 1, v47);
  }
  uint64_t v48 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v49 = a7 + v48[18];
  uint64_t v50 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v49, v72, v50);
  uint64_t v51 = v61;
  *(void *)a7 = v28;
  *(void *)(a7 + 8) = v51;
  *(void *)(a7 + 16) = v75;
  *(void *)(a7 + 24) = v34;
  *(void *)(a7 + 32) = v36;
  *(unsigned char *)(a7 + 40) = v73;
  *(void *)(a7 + 48) = v37;
  *(void *)(a7 + 56) = v38;
  sub_10001D8DC(v46, a7 + v48[9], &qword_1000D4CD8);
  *(void *)(a7 + v48[10]) = v13;
  uint64_t v52 = (uint64_t *)(a7 + v48[11]);
  uint64_t v53 = v69;
  *uint64_t v52 = v70;
  v52[1] = v53;
  *(void *)(a7 + v48[12]) = v66;
  uint64_t v54 = (uint64_t *)(a7 + v48[13]);
  uint64_t v55 = v62;
  uint64_t *v54 = v63;
  v54[1] = v55;
  uint64_t v56 = (uint64_t *)(a7 + v48[14]);
  uint64_t v57 = v64;
  uint64_t *v56 = v65;
  v56[1] = v57;
  *(unsigned char *)(a7 + v48[15]) = 1;
  uint64_t v58 = (void *)(a7 + v48[16]);
  *uint64_t v58 = 0;
  v58[1] = 0;
  *(void *)(a7 + v48[17]) = 0;
  *(void *)(a7 + v48[19]) = v74;
  *(unsigned char *)(a7 + v48[20]) = 2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100087390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v41 = a5;
  uint64_t v7 = sub_10000693C(&qword_1000D5928);
  __chkstk_darwin(v7 - 8);
  uint64_t v40 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000ADF08();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  __chkstk_darwin(v9);
  uint64_t v35 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000ADD48();
  uint64_t v11 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v33 = (uint64_t)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v18 = (char *)&v32 - v17;
  uint64_t v19 = *(void *)(a4 + 8);
  LODWORD(a4) = *(unsigned __int8 *)(a4 + 16);
  uint64_t v20 = type metadata accessor for TTRNewWidgetPresenter.Snapshot(0);
  uint64_t v21 = *(void *)(a1 + *(int *)(v20 + 20));
  sub_1000AE328();
  sub_10008772C(v19, a4, v21, (uint64_t)v13, *(float *)(a1 + *(int *)(v20 + 24)) > 0.0, (uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v34);
  id v23 = v35;
  uint64_t v22 = v36;
  uint64_t v24 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, a1, v37);
  uint64_t v25 = v33;
  sub_10008A6B8((uint64_t)v18, v33, type metadata accessor for TTRNewWidgetViewModel);
  uint64_t v26 = (uint64_t)v40;
  sub_1000AF348();
  sub_10008A26C((uint64_t)v18, type metadata accessor for TTRNewWidgetViewModel);
  uint64_t v27 = sub_1000AF358();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
  uint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
  uint64_t v29 = v41;
  v28(v41, v23, v24);
  uint64_t v30 = type metadata accessor for TTRNewWidgetTimelineEntry(0);
  sub_10008A720(v25, v29 + *(int *)(v30 + 20), type metadata accessor for TTRNewWidgetViewModel);
  return sub_10001D8DC(v26, v29 + *(int *)(v30 + 24), &qword_1000D5928);
}

uint64_t sub_10008772C@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_10000693C(&qword_1000D4CD8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AF778();
  unint64_t v49 = v18;
  uint64_t v50 = v17;
  uint64_t v19 = sub_1000AF758();
  int v53 = a2;
  uint64_t v51 = a4;
  if (v19)
  {
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v21 = sub_1000AE008();
    swift_beginAccess();
    sub_10008F2A4(v21, (uint64_t)v55);
    sub_10008F300((uint64_t)v55, (void (*)(void, void, void, void, void, void, void))sub_10008F344);
    uint64_t v20 = sub_1000AE018();
    sub_10008F300((uint64_t)v55, (void (*)(void, void, void, void, void, void, void))sub_10008A788);
  }
  uint64_t v48 = sub_1000AF768();
  uint64_t v22 = self;
  id v23 = objc_allocWithZone((Class)NSNumber);
  uint64_t v52 = a1;
  id v24 = [v23 initWithInteger:a1];
  id v25 = [v22 localizedStringFromNumber:v24 numberStyle:1];

  uint64_t v47 = sub_1000AF498();
  uint64_t v27 = v26;

  uint64_t v28 = *(void *)(v7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString);
  uint64_t v29 = *(void *)(v7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString + 8);
  uint64_t v54 = a3;
  if (a5)
  {
    uint64_t v30 = a3;
    uint64_t v31 = *(void *)(a3 + 16);
    uint64_t v32 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = v33;
    if (v31)
    {
      sub_10008A6B8(v30 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), (uint64_t)v16, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v16, 0, 1, v32);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v16, 1, 1, v32);
    }
  }
  else
  {
    uint64_t v35 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v16, 1, 1, v35);
  }
  if (v49) {
    unint64_t v36 = v49;
  }
  else {
    unint64_t v36 = 0xE000000000000000;
  }
  if (v49) {
    uint64_t v37 = v50;
  }
  else {
    uint64_t v37 = 0;
  }
  uint64_t v38 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v39 = a6 + v38[18];
  uint64_t v40 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v39, v51, v40);
  *(void *)a6 = v37;
  *(void *)(a6 + 8) = v36;
  uint64_t v41 = v47;
  *(void *)(a6 + 16) = v52;
  *(void *)(a6 + 24) = v41;
  *(void *)(a6 + 32) = v27;
  *(unsigned char *)(a6 + 40) = v53;
  *(void *)(a6 + 48) = v28;
  *(void *)(a6 + 56) = v29;
  sub_10001D8DC((uint64_t)v16, a6 + v38[9], &qword_1000D4CD8);
  *(void *)(a6 + v38[10]) = v20;
  uint64_t v42 = (void *)(a6 + v38[11]);
  *uint64_t v42 = 0;
  v42[1] = 0;
  *(void *)(a6 + v38[12]) = v48;
  uint64_t v43 = (void *)(a6 + v38[13]);
  *uint64_t v43 = 0;
  v43[1] = 0;
  uint64_t v44 = (void *)(a6 + v38[14]);
  void *v44 = 0;
  v44[1] = 0;
  *(unsigned char *)(a6 + v38[15]) = 0;
  uint64_t v45 = (void *)(a6 + v38[16]);
  *uint64_t v45 = 0;
  v45[1] = 0;
  *(void *)(a6 + v38[17]) = 0;
  *(void *)(a6 + v38[19]) = v54;
  *(unsigned char *)(a6 + v38[20]) = 2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100087AFC(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, char *))
{
  if (qword_1000D4968 != -1) {
LABEL_53:
  }
    swift_once();
  uint64_t v4 = sub_1000AE768();
  sub_10000EFA4(v4, (uint64_t)qword_1000D7EE8);
  uint64_t v5 = sub_1000AE758();
  os_log_type_t v6 = sub_1000AF718();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRNewWidgetPresenter fetched sharee data", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = a1[2];
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    uint64_t v10 = 4;
    uint64_t v11 = v8;
    while (1)
    {
      uint64_t v12 = a1[v10];
      uint64_t v13 = *(void *)(v12 + 16);
      int64_t v14 = *((void *)v9 + 2);
      int64_t v15 = v14 + v13;
      if (__OFADD__(v14, v13))
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v15 <= *((void *)v9 + 3) >> 1)
      {
        if (*(void *)(v12 + 16)) {
          goto LABEL_17;
        }
      }
      else
      {
        if (v14 <= v15) {
          int64_t v17 = v14 + v13;
        }
        else {
          int64_t v17 = v14;
        }
        uint64_t v9 = sub_10002292C(isUniquelyReferenced_nonNull_native, v17, 1, v9);
        if (*(void *)(v12 + 16))
        {
LABEL_17:
          uint64_t v18 = *((void *)v9 + 2);
          if ((*((void *)v9 + 3) >> 1) - v18 < v13) {
            goto LABEL_51;
          }
          unint64_t v19 = (unint64_t)&v9[16 * v18 + 32];
          if (v12 + 32 < v19 + 16 * v13 && v19 < v12 + 32 + 16 * v13)
          {
            uint64_t result = sub_1000AF9D8();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v13)
          {
            uint64_t v21 = *((void *)v9 + 2);
            BOOL v22 = __OFADD__(v21, v13);
            uint64_t v23 = v21 + v13;
            if (v22) {
              goto LABEL_52;
            }
            *((void *)v9 + 2) = v23;
          }
          goto LABEL_7;
        }
      }
      if (v13) {
        goto LABEL_50;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      v10 += 3;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = *((void *)v9 + 2);
        if (!v24) {
          goto LABEL_37;
        }
LABEL_27:
        swift_bridgeObjectRetain();
        id v25 = (uint64_t *)(v9 + 40);
        uint64_t v26 = (char *)_swiftEmptyArrayStorage;
        do
        {
          uint64_t v28 = (void *)*(v25 - 1);
          if (v28)
          {
            uint64_t v29 = *v25;
            id v30 = v28;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v26 = sub_10002281C(0, *((void *)v26 + 2) + 1, 1, v26);
            }
            unint64_t v32 = *((void *)v26 + 2);
            unint64_t v31 = *((void *)v26 + 3);
            if (v32 >= v31 >> 1) {
              uint64_t v26 = sub_10002281C((char *)(v31 > 1), v32 + 1, 1, v26);
            }
            *((void *)v26 + 2) = v32 + 1;
            uint64_t v27 = &v26[16 * v32];
            *((void *)v27 + 4) = v30;
            *((void *)v27 + 5) = v29;
          }
          v25 += 2;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
    }
  }
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  uint64_t v24 = _swiftEmptyArrayStorage[2];
  if (v24) {
    goto LABEL_27;
  }
LABEL_37:
  uint64_t v26 = (char *)_swiftEmptyArrayStorage;
LABEL_38:
  swift_bridgeObjectRelease();
  if (v8)
  {
    uint64_t v33 = a1[5];
    uint64_t v34 = a1[6];
    uint64_t v35 = *(void *)(a2 + 16);
    if (v35)
    {
      uint64_t v36 = v35 - 1;
      if (v35 == 1)
      {
        swift_bridgeObjectRetain();
        v47._object = (void *)0x80000001000B8700;
        v45._countAndFlagsBits = 0x7720646572616853;
        v45._object = (void *)0xEE00402520687469;
        v47._countAndFlagsBits = 0xD000000000000027;
        sub_1000AE128(v45, v47);
        sub_10000693C(&qword_1000D52E8);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1000B0270;
        *(void *)(v37 + 56) = &type metadata for String;
        *(void *)(v37 + 64) = sub_10002CFD4();
        *(void *)(v37 + 32) = v33;
        *(void *)(v37 + 40) = v34;
      }
      else
      {
        swift_bridgeObjectRetain();
        v48._object = (void *)0x80000001000B86D0;
        v46._countAndFlagsBits = 0x206425202B204025;
        v46._object = (void *)0xEC00000065726F4DLL;
        v48._countAndFlagsBits = 0xD000000000000027;
        sub_1000AE128(v46, v48);
        sub_10000693C(&qword_1000D52E8);
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_1000B0E30;
        *(void *)(v38 + 56) = &type metadata for String;
        unint64_t v39 = sub_10002CFD4();
        *(void *)(v38 + 32) = v33;
        *(void *)(v38 + 40) = v34;
        *(void *)(v38 + 96) = &type metadata for Int;
        *(void *)(v38 + 104) = &protocol witness table for Int;
        *(void *)(v38 + 64) = v39;
        *(void *)(v38 + 72) = v36;
      }
      uint64_t v33 = sub_1000AF4A8();
      uint64_t v34 = v40;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0;
  }
  a3(v33, v34, v26);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100087FF0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v7 = sub_1000ADF68();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char **)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10000693C(&qword_1000D59C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000693C(&qword_1000D58B8);
  __chkstk_darwin(v13 - 8);
  int64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000ADF08();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100023D40((uint64_t)a1, (uint64_t)v30);
  uint64_t v20 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  sub_100009D6C((uint64_t)a1 + *(int *)(v20 + 24), (uint64_t)v15, &qword_1000D58B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100009EF4((uint64_t)v15, &qword_1000D58B8);
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    sub_100024D3C(a1, v21);
    char v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 64))(v21, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    char v23 = sub_1000ADEA8();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  uint64_t v24 = a1[5];
  int v25 = *(unsigned __int8 *)(a3
                           + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForBaseReminder);
  sub_100009D6C(v28, (uint64_t)v12, &qword_1000D59C0);
  sub_1000ADF58();
  return sub_1000247F0(v30, v23 & 1, v25, v24, (uint64_t)v12, v9, v29);
}

uint64_t sub_1000882C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1000ADF68();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char **)((char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10000693C(&qword_1000D59C0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v14 = a1[4];
  sub_100024D3C(a1, v15);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 64))(v15, v14))
  {
    uint64_t v16 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a4, 1, 1, v16);
  }
  else
  {
    sub_100023D40((uint64_t)a1, (uint64_t)v22);
    uint64_t v18 = a1[5];
    int v19 = *(unsigned __int8 *)(a2
                             + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForBaseReminder);
    sub_100009D6C(a3, (uint64_t)v13, &qword_1000D59C0);
    sub_1000ADF58();
    sub_1000247F0(v22, 0, v19, v18, (uint64_t)v13, v10, a4);
    uint64_t v20 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a4, 0, 1, v20);
  }
}

uint64_t sub_1000884B0(uint64_t a1)
{
  uint64_t v3 = sub_10000693C(&qword_1000D8080);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v23 = (uint64_t)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v22 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_1000ADF08();
  sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
  char v14 = sub_1000AF428();
  sub_100009D6C(v1, (uint64_t)v13, &qword_1000D8080);
  sub_100009D6C(a1, (uint64_t)v11, &qword_1000D8080);
  if (v14)
  {
    sub_100009EF4((uint64_t)v11, &qword_1000D8080);
    sub_100009EF4((uint64_t)v13, &qword_1000D8080);
    sub_100009D6C(v1, (uint64_t)v8, &qword_1000D8080);
LABEL_4:
    sub_100009EF4((uint64_t)v8, &qword_1000D8080);
    uint64_t v16 = a1;
    uint64_t v17 = v23;
    sub_100009D6C(v16, v23, &qword_1000D8080);
    goto LABEL_5;
  }
  char v15 = sub_1000AF428();
  sub_100009EF4((uint64_t)v11, &qword_1000D8080);
  sub_100009EF4((uint64_t)v13, &qword_1000D8080);
  sub_100009D6C(v1, (uint64_t)v8, &qword_1000D8080);
  if (v15) {
    goto LABEL_4;
  }
  sub_100090F48(&qword_1000D8088, (void (*)(uint64_t))&type metadata accessor for Date);
  char v20 = sub_1000AF448();
  sub_100009EF4((uint64_t)v8, &qword_1000D8080);
  uint64_t v21 = a1;
  uint64_t v17 = v23;
  sub_100009D6C(v21, v23, &qword_1000D8080);
  if ((v20 & 1) == 0)
  {
    char v18 = sub_1000AF448() ^ 1;
    goto LABEL_6;
  }
LABEL_5:
  char v18 = 0;
LABEL_6:
  sub_100009EF4(v17, &qword_1000D8080);
  return v18 & 1;
}

uint64_t sub_100088794@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D58B8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_1000ADF08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    int v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    int v19 = v38;
LABEL_5:
    sub_100009EF4((uint64_t)v9, &qword_1000D58B8);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  id v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
      char v27 = sub_1000AF408();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_100009EF4((uint64_t)v7, &qword_1000D58B8);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_100088BB8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_10000693C(&qword_1000D58B8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_1000ADF08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    int v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    int v19 = v38;
LABEL_5:
    sub_100009EF4((uint64_t)v9, &qword_1000D58B8);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  id v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
      char v27 = sub_1000AF408();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_100009EF4((uint64_t)v7, &qword_1000D58B8);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_100088FDC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v7 = *(void *)(type metadata accessor for TTRNewWidgetPresenter.Division(0) - 8);
    uint64_t v8 = *(void *)(v7 + 72);
    --v4;
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v8 * v4;
    uint64_t v10 = -v8;
    while (1)
    {
      char v11 = a1(v9);
      if (v3 || (v11 & 1) != 0) {
        break;
      }
      --v4;
      v9 += v10;
      if (v4 == -1) {
        return 0;
      }
    }
  }
  return v4;
}

BOOL sub_1000890D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000ADD48();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v15 - v9;
  uint64_t v11 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1 + *(int *)(v11 + 28), v4);
  v12(v8, a2 + *(int *)(v11 + 28), v4);
  sub_100090F48(&qword_1000D8078, (void (*)(uint64_t))&type metadata accessor for URL);
  LOBYTE(a2) = sub_1000AF448();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  return (a2 & 1) == 0;
}

uint64_t sub_100089288()
{
  swift_unknownObjectRelease();
  sub_100023B0C(v0 + 32);
  uint64_t v1 = v0 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
  uint64_t v2 = sub_1000AE588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10008997C(v0 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_shareeInfoStyle);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_10008935C()
{
  return type metadata accessor for TTRNewWidgetPresenter(0);
}

uint64_t type metadata accessor for TTRNewWidgetPresenter(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D7F60);
}

uint64_t sub_100089384()
{
  uint64_t result = sub_1000AE588();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TTRNewWidgetPresenter.DisplayDateStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100089504);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = v7 - 2;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for TTRNewWidgetPresenter.DisplayDateStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1000895ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_100089614(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

unsigned char *sub_100089628(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetPresenter.DisplayDateStyle()
{
  return &type metadata for TTRNewWidgetPresenter.DisplayDateStyle;
}

uint64_t destroy for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    return sub_100023B0C(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      *(_OWORD *)(a1 + 40) = *(long long *)((char *)a2 + 40);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    long long v7 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    sub_100023B0C(a1);
    goto LABEL_7;
  }
  sub_100077080((uint64_t *)a1, (uint64_t *)a2);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  return a1;
}

__n128 initializeWithTake for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL || (unint64_t v4 = *(void *)(a2 + 24), sub_100023B0C(a1), v4 < 0xFFFFFFFF))
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTRNewWidgetPresenter.ShareeInfoStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_100089924(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_10008993C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetPresenter.ShareeInfoStyle()
{
  return &type metadata for TTRNewWidgetPresenter.ShareeInfoStyle;
}

uint64_t sub_10008997C(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    sub_100023B0C(a1);
  }
  return a1;
}

unsigned char *storeEnumTagSinglePayload for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100089A84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle()
{
  return &type metadata for TTRNewWidgetPresenter.DisplayDateStyle.TimeOfDayStyle;
}

unint64_t sub_100089AC0()
{
  unint64_t result = qword_1000D8028;
  if (!qword_1000D8028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8028);
  }
  return result;
}

uint64_t sub_100089B14()
{
  uint64_t v1 = sub_10000693C(&qword_1000D8030);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100089BA8()
{
  sub_10000693C(&qword_1000D8030);

  return sub_1000824AC();
}

int64_t *sub_100089C1C(int64_t *result, int64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10000693C(&qword_1000D81E8);
      uint64_t v5 = (int64_t *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      uint64_t v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    unint64_t result = sub_10008A090(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

void *sub_100089CE4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return &_swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      BOOL v8 = &_swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 80 * a3;
        if (v10 < (unint64_t)&v8[10 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 80 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_10000693C(&qword_1000D8050);
      BOOL v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      long long v8[2] = v5;
      int64_t v8[3] = 2 * ((uint64_t)(v9 - 32) / 80);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  unint64_t result = (void *)sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_100089E70(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_100022780(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for TTRNewWidgetViewModel.Reminder(0) - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = sub_1000AF9D8();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_10008A6B8(a3, v17, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  }
  return sub_100009EF4(a3, &qword_1000D8068);
}

int64_t *sub_10008A090(int64_t *result, int64_t *a2, uint64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    int64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_32;
  }
  int64_t v6 = a5 - a4;
  if (a5 > a4)
  {
    int64_t v5 = a4 + 1;
    *a2 = a4;
    if (a3 == 1) {
      goto LABEL_7;
    }
    if (v5 == a5)
    {
      a3 = 1;
      int64_t v5 = a5;
      goto LABEL_7;
    }
    unint64_t v7 = v6 - 2;
    if (v6 - 2 >= (unint64_t)(a3 - 2)) {
      unint64_t v7 = a3 - 2;
    }
    if (v7 >= ~a4 + a5) {
      unint64_t v7 = ~a4 + a5;
    }
    unint64_t v8 = v7 + 1;
    if (v8 >= 5)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      int64_t v13 = v5 + v8 - v11;
      int64_t v10 = &a2[v8 - v11];
      uint64_t v9 = v12 + 2;
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_1000B4020);
      unint64_t v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        int64x2_t *v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      int64_t v5 = v13;
    }
    else
    {
      uint64_t v9 = 2;
      int64_t v10 = a2;
    }
    uint64_t v17 = v10 + 1;
    while (v5 < a5)
    {
      int64_t v18 = v5 + 1;
      int64_t *v17 = v5;
      if (a3 == v9)
      {
        ++v5;
        goto LABEL_7;
      }
      ++v9;
      ++v17;
      ++v5;
      if (a5 == v18)
      {
        int64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10008A1D0(uint64_t a1)
{
  return a1;
}

void sub_10008A208(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10008A26C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10008A2CC(uint64_t a1)
{
  return a1;
}

id *sub_10008A2F8(id *a1)
{
  return a1;
}

uint64_t sub_10008A33C()
{
  uint64_t v1 = sub_1000ADF08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10008A430(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000ADF08() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  unint64_t v8 = (char *)(v1 + v4);
  uint64_t v9 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  int64_t v10 = *(void (**)(void *))v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v1 + 24);

  return sub_1000849D4(a1, v5, v12, v6, v7, v8, v10, v11);
}

uint64_t sub_10008A4DC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008A518(uint64_t a1)
{
  return sub_10008EAB0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_100083258);
}

uint64_t sub_10008A530(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10008A580(long long *a1, uint64_t a2)
{
  unint64_t v4 = *((void *)a1 + 3);
  if (v4 < 0xFFFFFFFF)
  {
    long long v6 = *a1;
    long long v7 = a1[1];
    long long v8 = a1[2];
    *(void *)(a2 + 48) = *((void *)a1 + 6);
    *(_OWORD *)(a2 + 16) = v7;
    *(_OWORD *)(a2 + 32) = v8;
    *(_OWORD *)a2 = v6;
  }
  else
  {
    uint64_t v5 = *((void *)a1 + 4);
    *(void *)(a2 + 24) = v4;
    *(void *)(a2 + 32) = v5;
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a2, a1);
    *(_OWORD *)(a2 + 40) = *(long long *)((char *)a1 + 40);
  }
  return a2;
}

uint64_t sub_10008A614()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008A654(void *a1)
{
  return sub_100087AFC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t, uint64_t, char *))(v1 + 24));
}

uint64_t sub_10008A660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100085CAC(a1, v2[2], v2[3], v2[5], v2[6], v2[7], v2[8], a2);
}

uint64_t type metadata accessor for TTRNewWidgetPresenter.Snapshot(uint64_t a1)
{
  return sub_100008004(a1, qword_1000D81A0);
}

uint64_t sub_10008A6B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10008A720(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_10008A788(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for TTRNewWidgetPresenter.Division(uint64_t a1)
{
  return sub_100008004(a1, (uint64_t *)&unk_1000D80F8);
}

uint64_t sub_10008A804@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100087FF0(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_10008A828@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000882C8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_10008A844(uint64_t a1)
{
  uint64_t v127 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  uint64_t v126 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v122 = (char *)v112 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_10000693C(&qword_1000D8040);
  uint64_t v3 = __chkstk_darwin(v137);
  uint64_t v136 = (char *)v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v135 = (char *)v112 - v5;
  uint64_t v6 = sub_10000693C(&qword_1000D8080);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v117 = (char *)v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v118 = (uint64_t)v112 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  int64x2_t v14 = (char *)v112 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)v112 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v116 = (uint64_t)v112 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v115 = (uint64_t)v112 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v139 = (uint64_t)v112 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v134 = (char *)v112 - v25;
  __chkstk_darwin(v24);
  uint64_t v152 = (uint64_t)v112 - v26;
  uint64_t v27 = sub_10000693C(&qword_1000D58B8);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000ADF08();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v133 = (char *)v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v145 = (char *)v112 - v35;
  __chkstk_darwin(v34);
  Swift::Int v144 = (char *)v112 - v36;
  uint64_t v125 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  uint64_t v37 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  unint64_t v39 = (void *)((char *)v112 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = sub_10000693C(&qword_1000D8090);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  uint64_t v132 = (uint64_t)v112 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v43 = *(void (**)(void))(v7 + 56);
  uint64_t v146 = (uint64_t)v112 - v44;
  uint64_t v124 = v7 + 56;
  uint64_t v123 = v43;
  v43();
  uint64_t v45 = *(void *)(a1 + 16);
  if (!v45)
  {
    uint64_t v111 = _swiftEmptyArrayStorage;
LABEL_33:
    sub_100009EF4(v146, &qword_1000D8090);
    return (uint64_t)v111;
  }
  uint64_t v114 = v14;
  uint64_t v153 = v45;
  uint64_t v46 = a1;
  uint64_t v47 = a1 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  uint64_t v48 = *(void *)(v37 + 72);
  long long v148 = (void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v149 = v48;
  uint64_t v151 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  uint64_t v142 = (unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  unint64_t v131 = (void (**)(char *, char *, uint64_t))(v31 + 16);
  uint64_t v143 = (void (**)(char *, uint64_t))(v31 + 8);
  int v128 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v119 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56);
  v112[1] = v46;
  swift_bridgeObjectRetain();
  long long v147 = _swiftEmptyArrayStorage;
  uint64_t v113 = v17;
  uint64_t v129 = v29;
  uint64_t v150 = v39;
  uint64_t v130 = v6;
  while (1)
  {
    sub_10008A6B8(v47, (uint64_t)v39, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
    uint64_t v49 = v39[3];
    uint64_t v50 = v39[4];
    sub_100024D3C(v39, v49);
    uint64_t v51 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v50 + 104))(v49, v50);
    if (!v51)
    {
      (*v151)(v29, 1, 1, v30);
LABEL_4:
      unint64_t v39 = v150;
      sub_10008A26C((uint64_t)v150, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      sub_100009EF4((uint64_t)v29, &qword_1000D58B8);
      goto LABEL_5;
    }
    uint64_t v52 = v51;
    id v53 = [v51 date];

    uint64_t v54 = v145;
    sub_1000ADEB8();

    uint64_t v55 = *v148;
    (*v148)(v29, v54, v30);
    (*v151)(v29, 0, 1, v30);
    if ((*v142)(v29, 1, v30) == 1) {
      goto LABEL_4;
    }
    v55(v144, v29, v30);
    sub_1000ADE58();
    uint64_t v56 = v133;
    sub_1000ADE58();
    uint64_t v138 = sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_1000AF428();
    if ((result & 1) == 0) {
      break;
    }
    uint64_t v141 = v47;
    uint64_t v58 = v137;
    uint64_t v59 = v54;
    uint64_t v60 = v135;
    uint64_t v61 = &v135[*(int *)(v137 + 48)];
    v55(v135, v59, v30);
    uint64_t v140 = v61;
    v55(v61, v56, v30);
    uint64_t v62 = v136;
    uint64_t v63 = &v136[*(int *)(v58 + 48)];
    uint64_t v64 = *v131;
    (*v131)(v136, v60, v30);
    NSString v120 = v64;
    v64(v63, v61, v30);
    uint64_t v65 = (uint64_t)v134;
    v55(v134, v62, v30);
    uint64_t v66 = (char *)*v143;
    (*v143)(v63, v30);
    uint64_t v67 = *(int *)(v58 + 48);
    uint64_t v68 = v130;
    uint64_t v69 = &v62[v67];
    v55(v62, v60, v30);
    v55(v69, v140, v30);
    uint64_t v70 = v65 + *(int *)(v68 + 36);
    id v121 = v55;
    v55((char *)v70, v69, v30);
    uint64_t v140 = v66;
    ((void (*)(char *, uint64_t))v66)(v62, v30);
    sub_10001D8DC(v65, v152, &qword_1000D8080);
    uint64_t v71 = v132;
    sub_100009D6C(v146, v132, &qword_1000D8090);
    if ((*v128)(v71, 1, v68) == 1)
    {
      sub_100009EF4(v71, &qword_1000D8090);
      uint64_t v72 = (uint64_t)v122;
      uint64_t v29 = v129;
      goto LABEL_11;
    }
    uint64_t v73 = v139;
    sub_10001D8DC(v71, v139, &qword_1000D8080);
    uint64_t v74 = sub_100090F48(&qword_1000D8088, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v75 = v152;
    char v76 = sub_1000AF448();
    uint64_t v77 = v115;
    sub_100009D6C(v75, v115, &qword_1000D8080);
    uint64_t v78 = v73;
    uint64_t v79 = v116;
    sub_100009D6C(v78, v116, &qword_1000D8080);
    if ((v76 & 1) == 0)
    {
      sub_100009EF4(v79, &qword_1000D8080);
      sub_100009EF4(v77, &qword_1000D8080);
      uint64_t v81 = (uint64_t)v117;
      uint64_t v47 = v141;
LABEL_16:
      v112[3] = v74;
      uint64_t v82 = v139;
      v112[2] = v139 + *(int *)(v68 + 36);
      uint64_t v83 = v152;
      char v84 = sub_1000AF428();
      uint64_t v85 = (uint64_t)v113;
      sub_100009D6C(v83, (uint64_t)v113, &qword_1000D8080);
      uint64_t v86 = (uint64_t)v114;
      sub_100009D6C(v82, (uint64_t)v114, &qword_1000D8080);
      if (v84)
      {
        sub_100009EF4(v86, &qword_1000D8080);
        sub_100009EF4(v85, &qword_1000D8080);
        sub_100009D6C(v152, v118, &qword_1000D8080);
        goto LABEL_19;
      }
      char v87 = sub_1000AF428();
      sub_100009EF4(v86, &qword_1000D8080);
      sub_100009EF4(v85, &qword_1000D8080);
      sub_100009D6C(v152, v118, &qword_1000D8080);
      if (v87)
      {
LABEL_19:
        sub_100009EF4(v118, &qword_1000D8080);
        sub_100009D6C(v139, v81, &qword_1000D8080);
        uint64_t v29 = v129;
        goto LABEL_20;
      }
      uint64_t v94 = v118;
      char v95 = sub_1000AF448();
      sub_100009EF4(v94, &qword_1000D8080);
      sub_100009D6C(v139, v81, &qword_1000D8080);
      uint64_t v29 = v129;
      if (v95)
      {
LABEL_20:
        sub_100009EF4(v81, &qword_1000D8080);
      }
      else
      {
        char v96 = sub_1000AF448();
        sub_100009EF4(v81, &qword_1000D8080);
        if ((v96 & 1) == 0)
        {
          os_log_type_t v97 = v145;
          sub_1000ADE58();
          uint64_t v98 = (char *)(v152 + *(int *)(v68 + 36));
          char v99 = sub_1000AF428();
          uint64_t result = sub_100009EF4(v139, &qword_1000D8080);
          if ((v99 & 1) == 0) {
            goto LABEL_35;
          }
          uint64_t v100 = v135;
          uint64_t v101 = &v135[*(int *)(v137 + 48)];
          uint64_t v102 = v121;
          v121(v135, v97, v30);
          uint64_t v103 = v120;
          v120(v101, v98, v30);
          sub_100009EF4(v152, &qword_1000D8080);
          uint64_t v104 = v136;
          uint64_t v105 = &v136[*(int *)(v137 + 48)];
          v103(v136, v100, v30);
          v103(v105, v101, v30);
          uint64_t v106 = (uint64_t)v134;
          v102(v134, v104, v30);
          uint64_t v107 = v30;
          uint64_t v108 = v30;
          uint64_t v109 = v140;
          ((void (*)(char *, uint64_t))v140)(v105, v107);
          uint64_t v110 = &v104[*(int *)(v137 + 48)];
          v102(v104, v100, v108);
          v102(v110, v101, v108);
          uint64_t v68 = v130;
          v102((char *)(v106 + *(int *)(v130 + 36)), v110, v108);
          ((void (*)(char *, uint64_t))v109)(v104, v108);
          uint64_t v30 = v108;
          sub_10001D8DC(v106, v152, &qword_1000D8080);
          uint64_t v72 = (uint64_t)v122;
          uint64_t v29 = v129;
LABEL_11:
          uint64_t v47 = v141;
LABEL_22:
          unint64_t v39 = v150;
          sub_10008A6B8((uint64_t)v150, v72, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
          (*v119)(v72, 0, 1, v125);
          uint64_t v88 = v127;
          sub_100009D6C(v152, v72 + *(int *)(v127 + 20), &qword_1000D8080);
          *(unsigned char *)(v72 + *(int *)(v88 + 24)) = 0;
          unint64_t v89 = (unint64_t)v147;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v89 = sub_100022718(0, *(void *)(v89 + 16) + 1, 1, v89);
          }
          unint64_t v91 = *(void *)(v89 + 16);
          unint64_t v90 = *(void *)(v89 + 24);
          long long v147 = (void *)v89;
          if (v91 >= v90 >> 1) {
            long long v147 = (void *)sub_100022718(v90 > 1, v91 + 1, 1, (unint64_t)v147);
          }
          uint64_t v92 = v147;
          v147[2] = v91 + 1;
          sub_10008A720(v72, (uint64_t)v92+ ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80))+ *(void *)(v126 + 72) * v91, type metadata accessor for TTRNewWidgetPresenter.Division);
          ((void (*)(char *, uint64_t))v140)(v144, v30);
          uint64_t v93 = v146;
          sub_100009EF4(v146, &qword_1000D8090);
          sub_10008A26C((uint64_t)v39, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
          sub_10001D8DC(v152, v93, &qword_1000D8080);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v123)(v93, 0, 1, v68);
          goto LABEL_5;
        }
      }
      sub_100009EF4(v139, &qword_1000D8080);
      uint64_t v72 = (uint64_t)v122;
      goto LABEL_22;
    }
    char v80 = sub_1000AF448();
    sub_100009EF4(v79, &qword_1000D8080);
    sub_100009EF4(v77, &qword_1000D8080);
    uint64_t v81 = (uint64_t)v117;
    uint64_t v47 = v141;
    if ((v80 & 1) == 0) {
      goto LABEL_16;
    }
    sub_100009EF4(v139, &qword_1000D8080);
    sub_100009EF4(v152, &qword_1000D8080);
    ((void (*)(char *, uint64_t))v140)(v144, v30);
    unint64_t v39 = v150;
    sub_10008A26C((uint64_t)v150, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
    uint64_t v29 = v129;
LABEL_5:
    v47 += v149;
    if (!--v153)
    {
      swift_bridgeObjectRelease();
      uint64_t v111 = v147;
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_10008B8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v185 = sub_10000693C(&qword_1000D8040);
  uint64_t v4 = __chkstk_darwin(v185);
  uint64_t v182 = (char *)&v165 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v181 = (char *)&v165 - v6;
  uint64_t v7 = sub_10000693C(&qword_1000D8080);
  __chkstk_darwin(v7);
  uint64_t v183 = (char *)&v165 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000693C(&qword_1000D8070);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v165 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  v201 = *(char **)(v196 - 8);
  uint64_t v12 = __chkstk_darwin(v196);
  uint64_t v171 = (char *)&v165 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v178 = (uint64_t)&v165 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v177 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v165 - v17);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v165 - v19);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v193 = (uint64_t)&v165 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v192 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v165 - v24);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v194 = (uint64_t)&v165 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v166 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v165 - v28);
  __chkstk_darwin(v27);
  uint64_t v197 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v165 - v29);
  uint64_t v30 = sub_10000693C(&qword_1000D58B8);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v33 = (char *)&v165 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v174 = (char *)&v165 - v34;
  uint64_t v35 = sub_1000ADF08();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = __chkstk_darwin(v35);
  v200 = (char *)&v165 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v173 = (char *)&v165 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v172 = (char *)&v165 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v165 - v44;
  uint64_t v46 = __chkstk_darwin(v43);
  v195 = (char *)&v165 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  char v191 = (char *)&v165 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v169 = (char *)&v165 - v51;
  __chkstk_darwin(v50);
  id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v165 - v52);
  sub_1000ADE68();
  uint64_t v54 = a1;
  unint64_t v55 = *(void *)(a1 + 16);
  uint64_t v186 = v11;
  uint64_t v184 = (char *)v7;
  uint64_t v179 = (char *)v53;
  if (v55)
  {
    uint64_t v180 = v20;
    uint64_t v175 = v45;
    uint64_t v167 = a2;
    unint64_t v190 = (v201[80] + 32) & ~(unint64_t)v201[80];
    uint64_t v56 = v54 + v190;
    uint64_t v57 = (char *)*((void *)v201 + 9);
    uint64_t v58 = (void (**)(void, void, void))(v36 + 16);
    uint64_t v59 = (void (**)(char *, char *))(v36 + 56);
    id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    uint64_t v188 = v36;
    v199 = (unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 32);
    v200 = v57;
    uint64_t v168 = v54;
    swift_bridgeObjectRetain();
    uint64_t v60 = (char *)_swiftEmptyArrayStorage;
    uint64_t v170 = (char *)v56;
    unint64_t v176 = v55;
    uint64_t v36 = v196;
    v201 = (char *)v35;
    uint64_t v189 = v58;
    long long v187 = v59;
    do
    {
      uint64_t v61 = (uint64_t)v197;
      sub_10008A6B8(v56, (uint64_t)v197, type metadata accessor for TTRNewWidgetPresenter.Division);
      uint64_t v62 = v61 + *(int *)(v36 + 20);
      uint64_t v198 = (void (*)(char *, uint64_t, uint64_t))*v58;
      v198(v33, v62, v35);
      ((void (*)(char *, void, uint64_t, uint64_t))*v59)(v33, 0, 1, v35);
      sub_10008A26C(v61, type metadata accessor for TTRNewWidgetPresenter.Division);
      uint64_t v63 = *v53;
      if ((*v53)(v33, 1, v35) == 1)
      {
        sub_100009EF4((uint64_t)v33, &qword_1000D58B8);
      }
      else
      {
        uint64_t v64 = v53;
        uint64_t v65 = *v199;
        uint64_t v66 = v35;
        uint64_t v67 = v191;
        (*v199)(v191, (uint64_t)v33, v66);
        v65(v195, (uint64_t)v67, v66);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v60 = (char *)sub_10002274C(0, *((void *)v60 + 2) + 1, 1, (unint64_t)v60);
        }
        unint64_t v69 = *((void *)v60 + 2);
        unint64_t v68 = *((void *)v60 + 3);
        id v53 = v64;
        if (v69 >= v68 >> 1) {
          uint64_t v60 = (char *)sub_10002274C(v68 > 1, v69 + 1, 1, (unint64_t)v60);
        }
        uint64_t v59 = v187;
        uint64_t v70 = v188;
        *((void *)v60 + 2) = v69 + 1;
        uint64_t v35 = (uint64_t)v201;
        v65(&v60[((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v69], (uint64_t)v195, (uint64_t)v201);
        uint64_t v36 = v196;
        uint64_t v58 = v189;
      }
      v56 += (uint64_t)v200;
      --v55;
    }
    while (v55);
    swift_bridgeObjectRelease();
    uint64_t v71 = v174;
    sub_100088794((uint64_t)v60, v174);
    swift_bridgeObjectRelease();
    if (v63(v71, 1, v35) == 1)
    {
      sub_100009EF4((uint64_t)v71, &qword_1000D58B8);
      id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))_swiftEmptyArrayStorage;
      uint64_t v72 = (uint64_t)v186;
      uint64_t v11 = v184;
      uint64_t v73 = v188;
      unint64_t v74 = v176;
      if (v176 < 2)
      {
LABEL_35:
        uint64_t v63 = v177;
        sub_10008A6B8((uint64_t)&v170[(void)v200 * (v176 - 1)], (uint64_t)v177, type metadata accessor for TTRNewWidgetPresenter.Division);
        sub_10008A6B8((uint64_t)v63, v178, type metadata accessor for TTRNewWidgetPresenter.Division);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_36;
        }
        goto LABEL_47;
      }
LABEL_22:
      long long v187 = (void (**)(char *, char *))(v73 + 8);
      v195 = v170;
      while (v74)
      {
        char v191 = (char *)v74;
        uint64_t v109 = (uint64_t)v195;
        sub_10008A6B8((uint64_t)v195, v194, type metadata accessor for TTRNewWidgetPresenter.Division);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_100022718(0, (int64_t)v53[2] + 1, 1, (unint64_t)v53);
        }
        unint64_t v111 = (unint64_t)v53[2];
        unint64_t v110 = (unint64_t)v53[3];
        if (v111 >= v110 >> 1) {
          id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_100022718(v110 > 1, v111 + 1, 1, (unint64_t)v53);
        }
        v53[2] = (unsigned int (*)(char *, uint64_t, uint64_t))(v111 + 1);
        uint64_t v197 = v53;
        uint64_t v112 = v200;
        sub_10008A720(v194, (uint64_t)v53 + v190 + v111 * (void)v200, type metadata accessor for TTRNewWidgetPresenter.Division);
        id v53 = v192;
        sub_10008A6B8(v109, (uint64_t)v192, type metadata accessor for TTRNewWidgetPresenter.Division);
        uint64_t v113 = &v112[v109];
        uint64_t v114 = v193;
        sub_10008A6B8((uint64_t)v113, v193, type metadata accessor for TTRNewWidgetPresenter.Division);
        uint64_t v115 = *(int *)(v36 + 20);
        uint64_t v63 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)v53 + v115 + *((int *)v11 + 9));
        uint64_t v116 = v114 + v115;
        sub_1000ADED8();
        v195 = v113;
        if (v117 <= 60.0)
        {
          id v53 = v197;
          uint64_t v108 = v191;
        }
        else
        {
          uint64_t v118 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v72, 1, 1, v118);
          sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
          if ((sub_1000AF428() & 1) == 0) {
            goto LABEL_46;
          }
          uint64_t v119 = v185;
          NSString v120 = v181;
          id v121 = &v181[*(int *)(v185 + 48)];
          uint64_t v122 = v63;
          uint64_t v123 = (void (*)(char *, uint64_t, char *))v198;
          v198(v181, (uint64_t)v122, (uint64_t)v201);
          v123(v121, v116, v201);
          uint64_t v124 = v182;
          uint64_t v125 = &v182[*(int *)(v119 + 48)];
          v123(v182, (uint64_t)v120, v201);
          v123(v125, (uint64_t)v121, v201);
          uint64_t v126 = *v199;
          uint64_t v127 = v183;
          (*v199)(v183, (uint64_t)v124, (uint64_t)v201);
          int v128 = *v187;
          (*v187)(v125, v201);
          uint64_t v129 = *(int *)(v119 + 48);
          uint64_t v11 = v184;
          uint64_t v130 = &v124[v129];
          unint64_t v131 = v120;
          uint64_t v35 = (uint64_t)v201;
          v126(v124, (uint64_t)v131, (uint64_t)v201);
          v126(v130, (uint64_t)v121, v35);
          v126(&v127[*((int *)v11 + 9)], (uint64_t)v130, v35);
          v128(v124, (char *)v35);
          uint64_t v72 = (uint64_t)v186;
          uint64_t v63 = v180;
          uint64_t v132 = (uint64_t)v127;
          uint64_t v36 = v196;
          sub_10001D8DC(v132, (uint64_t)v180 + *(int *)(v196 + 20), &qword_1000D8080);
          sub_10001D8DC(v72, (uint64_t)v63, &qword_1000D8070);
          *((unsigned char *)v63 + *(int *)(v36 + 24)) = 0;
          id v53 = v197;
          unint64_t v134 = (unint64_t)v197[2];
          unint64_t v133 = (unint64_t)v197[3];
          if (v134 >= v133 >> 1) {
            id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_100022718(v133 > 1, v134 + 1, 1, (unint64_t)v197);
          }
          unint64_t v135 = v190;
          uint64_t v108 = v191;
          v53[2] = (unsigned int (*)(char *, uint64_t, uint64_t))(v134 + 1);
          sub_10008A720((uint64_t)v63, (uint64_t)v53 + v135 + v134 * (void)v200, type metadata accessor for TTRNewWidgetPresenter.Division);
        }
        sub_10008A26C(v193, type metadata accessor for TTRNewWidgetPresenter.Division);
        sub_10008A26C((uint64_t)v192, type metadata accessor for TTRNewWidgetPresenter.Division);
        unint64_t v74 = (unint64_t)(v108 - 1);
        if (v74 == 1) {
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_100022718(0, (int64_t)v53[2] + 1, 1, (unint64_t)v53);
LABEL_36:
      unint64_t v137 = (unint64_t)v53[2];
      unint64_t v136 = (unint64_t)v53[3];
      if (v137 >= v136 >> 1) {
        id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_100022718(v136 > 1, v137 + 1, 1, (unint64_t)v53);
      }
      v53[2] = (unsigned int (*)(char *, uint64_t, uint64_t))(v137 + 1);
      sub_10008A720(v178, (uint64_t)v53 + v190 + v137 * (void)v200, type metadata accessor for TTRNewWidgetPresenter.Division);
      uint64_t v197 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)v63
                                                                    + *(int *)(v36 + 20)
                                                                    + *((int *)v11 + 9));
      uint64_t v138 = v172;
      sub_1000ADE78();
      uint64_t v139 = v173;
      sub_1000ADE78();
      uint64_t v196 = sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
      unint64_t v140 = v35;
      if (sub_1000AF418()) {
        uint64_t v141 = v139;
      }
      else {
        uint64_t v141 = v138;
      }
      int64_t v142 = (int64_t)v175;
      unint64_t v143 = (unint64_t)v189;
      Swift::Int v144 = (void (*)(char *, unsigned int (**)(char *, uint64_t, uint64_t), unint64_t))v198;
      v198(v175, (uint64_t)v141, v35);
      uint64_t v145 = *(char **)(v188 + 8);
      uint64_t v146 = v139;
      uint64_t v147 = v188 + 8;
      ((void (*)(char *, unint64_t))v145)(v146, v140);
      ((void (*)(char *, unint64_t))v145)(v138, v140);
      uint64_t v148 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v186, 1, 1, v148);
      if (sub_1000AF428())
      {
        uint64_t v150 = v185;
        uint64_t v151 = *(int *)(v185 + 48);
        uint64_t v188 = v147;
        uint64_t v152 = (unsigned int (**)(char *, uint64_t, uint64_t))v181;
        uint64_t v153 = &v181[v151];
        v144(v181, v197, v140);
        uint64_t v196 = (uint64_t)v153;
        v144(v153, (unsigned int (**)(char *, uint64_t, uint64_t))v142, v140);
        uint64_t v154 = *(int *)(v150 + 48);
        v195 = v145;
        long long v155 = v182;
        uint64_t v156 = &v182[v154];
        v144(v182, v152, v140);
        v144(v156, (unsigned int (**)(char *, uint64_t, uint64_t))v153, v140);
        uint64_t v157 = *v199;
        uint64_t v197 = v53;
        uint64_t v158 = (uint64_t)v183;
        v157(v183, (uint64_t)v155, v140);
        uint64_t v159 = v195;
        ((void (*)(char *, unint64_t))v195)(v156, v140);
        uint64_t v160 = &v155[*(int *)(v150 + 48)];
        v157(v155, (uint64_t)v152, v140);
        v157(v160, v196, v140);
        v157((char *)(v158 + *((int *)v184 + 9)), (uint64_t)v160, v140);
        uint64_t v138 = v159;
        ((void (*)(char *, unint64_t))v159)(v155, v140);
        uint64_t v145 = v171;
        unint64_t v143 = (unint64_t)v197;
        sub_10001D8DC(v158, (uint64_t)&v171[*(int *)(v36 + 20)], &qword_1000D8080);
        sub_10001D8DC((uint64_t)v186, (uint64_t)v145, &qword_1000D8070);
        v145[*(int *)(v36 + 24)] = 0;
        unint64_t v140 = *(void *)(v143 + 16);
        unint64_t v149 = *(void *)(v143 + 24);
        int64_t v142 = v140 + 1;
        if (v140 < v149 >> 1)
        {
LABEL_43:
          v161 = v179;
          uint64_t v162 = (uint64_t)v177;
          uint64_t v91 = (uint64_t)v197;
          v197[2] = (unsigned int (*)(char *, uint64_t, uint64_t))v142;
          sub_10008A720((uint64_t)v145, v91 + v190 + v140 * (void)v200, type metadata accessor for TTRNewWidgetPresenter.Division);
          uint64_t v163 = v201;
          ((void (*)(char *, char *))v138)(v175, v201);
          sub_10008A26C(v162, type metadata accessor for TTRNewWidgetPresenter.Division);
          ((void (*)(char *, char *))v138)(v161, v163);
          return v91;
        }
      }
      else
      {
        __break(1u);
      }
      uint64_t v197 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_100022718(v149 > 1, v142, 1, v143);
      goto LABEL_43;
    }
    uint64_t v63 = *v199;
    char v95 = v169;
    (*v199)(v169, (uint64_t)v71, v35);
    uint64_t v20 = (unsigned int (*)(char *, uint64_t, uint64_t))v179;
    char v96 = sub_1000ADE98();
    uint64_t v72 = (uint64_t)v186;
    uint64_t v11 = v184;
    uint64_t v73 = v188;
    unint64_t v74 = v176;
    if ((v96 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v188 + 8))(v95, v35);
      id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))_swiftEmptyArrayStorage;
LABEL_21:
      if (v74 < 2) {
        goto LABEL_35;
      }
      goto LABEL_22;
    }
    uint64_t v197 = (unsigned int (**)(char *, uint64_t, uint64_t))v63;
    uint64_t v97 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v72, 1, 1, v97);
    sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t v75 = (unint64_t)v95;
    unint64_t v77 = v35;
    if (sub_1000AF428())
    {
      uint64_t v98 = v185;
      char v99 = v181;
      uint64_t v100 = &v181[*(int *)(v185 + 48)];
      uint64_t v101 = v20;
      uint64_t v102 = (void (*)(char *, unint64_t, uint64_t))v198;
      v198(v181, (uint64_t)v101, v35);
      v195 = v100;
      v102(v100, v75, v35);
      uint64_t v103 = v182;
      uint64_t v104 = &v182[*(int *)(v98 + 48)];
      v102(v182, (unint64_t)v99, v35);
      v102(v104, (unint64_t)v100, v35);
      uint64_t v105 = v197;
      ((void (*)(char *, char *, uint64_t))v197)(v183, v103, v35);
      char v191 = *(char **)(v188 + 8);
      ((void (*)(char *, uint64_t))v191)(v104, v35);
      uint64_t v106 = &v103[*(int *)(v185 + 48)];
      ((void (*)(char *, char *, uint64_t))v105)(v103, v99, v35);
      ((void (*)(char *, char *, uint64_t))v105)(v106, v195, v35);
      uint64_t v107 = (uint64_t)v183;
      ((void (*)(char *, char *, uint64_t))v105)(&v183[*((int *)v11 + 9)], v106, v35);
      uint64_t v20 = (unsigned int (*)(char *, uint64_t, uint64_t))v191;
      ((void (*)(char *, uint64_t))v191)(v103, v35);
      uint64_t v63 = v166;
      sub_10001D8DC(v107, (uint64_t)v166 + *(int *)(v36 + 20), &qword_1000D8080);
      sub_10001D8DC((uint64_t)v186, (uint64_t)v63, &qword_1000D8070);
      *((unsigned char *)v63 + *(int *)(v36 + 24)) = 0;
      id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_100022718(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      unint64_t v77 = (unint64_t)v53[2];
      unint64_t v78 = (unint64_t)v53[3];
      unint64_t v75 = v77 + 1;
      if (v77 < v78 >> 1)
      {
LABEL_19:
        unint64_t v74 = v176;
        v53[2] = (unsigned int (*)(char *, uint64_t, uint64_t))v75;
        sub_10008A720((uint64_t)v63, (uint64_t)v53 + v190 + v77 * (void)v200, type metadata accessor for TTRNewWidgetPresenter.Division);
        uint64_t v35 = (uint64_t)v201;
        ((void (*)(char *, char *))v20)(v169, v201);
        uint64_t v72 = (uint64_t)v186;
        uint64_t v73 = v188;
        goto LABEL_21;
      }
LABEL_52:
      id v53 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_100022718(v78 > 1, v75, 1, (unint64_t)v53);
      goto LABEL_19;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  sub_10000693C(&qword_1000D5918);
  unint64_t v75 = (v201[80] + 32) & ~(unint64_t)v201[80];
  uint64_t v63 = (unsigned int (*)(char *, uint64_t, uint64_t))swift_allocObject();
  *((_OWORD *)v63 + 1) = xmmword_1000B0270;
  uint64_t v76 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v11, 1, 1, v76);
  sub_1000ADE78();
  sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
  unint64_t v77 = v35;
  if ((sub_1000AF428() & 1) == 0)
  {
    __break(1u);
    goto LABEL_51;
  }
  v201 = (char *)v63 + v75;
  uint64_t v79 = v36;
  uint64_t v80 = v185;
  uint64_t v81 = *(int *)(v185 + 48);
  uint64_t v197 = (unsigned int (**)(char *, uint64_t, uint64_t))v63;
  uint64_t v82 = (unsigned int (**)(char *, uint64_t, uint64_t))v181;
  uint64_t v83 = &v181[v81];
  char v84 = *(void (**)(char *, unsigned int (**)(char *, uint64_t, uint64_t), uint64_t))(v36 + 16);
  v84(v181, v53, v35);
  uint64_t v85 = v36;
  uint64_t v86 = v182;
  char v87 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
  v199 = (unsigned int (**)(char *, uint64_t, uint64_t))v83;
  v87(v83, v200, v35);
  uint64_t v88 = &v86[*(int *)(v80 + 48)];
  v84(v86, v82, v35);
  v84(v88, (unsigned int (**)(char *, uint64_t, uint64_t))v83, v35);
  uint64_t v89 = (uint64_t)v183;
  v87(v183, v86, v35);
  unint64_t v90 = *(void (**)(char *, uint64_t))(v79 + 8);
  v90(v88, v35);
  uint64_t v91 = (uint64_t)v197;
  uint64_t v92 = &v86[*(int *)(v185 + 48)];
  v87(v86, (char *)v82, v35);
  v87(v92, (char *)v199, v35);
  v87((char *)(v89 + *((int *)v184 + 9)), v92, v35);
  v90(v86, v35);
  uint64_t v93 = v196;
  uint64_t v94 = (uint64_t)v201;
  sub_10001D8DC(v89, (uint64_t)&v201[*(int *)(v196 + 20)], &qword_1000D8080);
  sub_10001D8DC((uint64_t)v186, v94, &qword_1000D8070);
  *(unsigned char *)(v94 + *(int *)(v93 + 24)) = 0;
  v90(v179, v35);
  return v91;
}

uint64_t sub_10008CEF4(uint64_t a1, uint64_t a2, char *a3)
{
  v199 = a3;
  uint64_t v201 = a2;
  uint64_t v4 = sub_10000693C(&qword_1000D8070);
  __chkstk_darwin(v4 - 8);
  uint64_t v191 = (uint64_t)&v183 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for TTRNewWidgetPresenter.Division(0);
  uint64_t v193 = *(void *)(v208 - 8);
  uint64_t v6 = __chkstk_darwin(v208);
  uint64_t v8 = (char *)&v183 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v183 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v188 = (char *)&v183 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v183 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  unint64_t v190 = (char *)&v183 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v189 = (char *)&v183 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v183 - v21;
  uint64_t v197 = sub_10000693C(&qword_1000D8040);
  uint64_t v23 = __chkstk_darwin(v197);
  uint64_t v196 = (char *)&v183 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v195 = (char *)&v183 - v25;
  uint64_t v203 = sub_10000693C(&qword_1000D8080);
  uint64_t v26 = __chkstk_darwin(v203);
  uint64_t v28 = (char *)&v183 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v207 = (uint64_t)&v183 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v209 = (char *)&v183 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v206 = (uint64_t)&v183 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v194 = (char *)&v183 - v36;
  __chkstk_darwin(v35);
  uint64_t v213 = (char *)&v183 - v37;
  uint64_t v218 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  uint64_t v38 = *(void *)(v218 - 8);
  uint64_t v39 = __chkstk_darwin(v218);
  uint64_t v222 = (char **)((char *)&v183 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v183 - v41;
  uint64_t v43 = sub_10000693C(&qword_1000D58B8);
  uint64_t v44 = __chkstk_darwin(v43 - 8);
  v217 = (char **)((char *)&v183 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v48 = (char *)&v183 - v47;
  __chkstk_darwin(v46);
  uint64_t v198 = (char *)&v183 - v49;
  uint64_t v50 = sub_1000ADF08();
  uint64_t v212 = *(void *)(v50 - 8);
  uint64_t v51 = __chkstk_darwin(v50);
  uint64_t v52 = __chkstk_darwin(v51);
  uint64_t v53 = __chkstk_darwin(v52);
  uint64_t v216 = (char *)&v183 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  v211 = (char *)&v183 - v56;
  __chkstk_darwin(v55);
  v200 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v183 - v59);
  uint64_t v202 = a1;
  unint64_t v60 = *(void *)(a1 + 16);
  if (!v60) {
    return swift_bridgeObjectRetain();
  }
  uint64_t v192 = v58;
  unint64_t v205 = v60;
  uint64_t v185 = v57;
  uint64_t v183 = v16;
  uint64_t v184 = v8;
  uint64_t v61 = *(void *)(v201 + 16);
  uint64_t v215 = (uint64_t *)v50;
  v204 = v28;
  if (v61)
  {
    long long v187 = v22;
    uint64_t v186 = v11;
    uint64_t v62 = v201 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    v214 = *(void (**)(char *, char *, uint64_t))(v38 + 72);
    uint64_t v221 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v212 + 48);
    uint64_t v219 = (void (**)(char *, uint64_t, uint64_t))(v212 + 32);
    uint64_t v210 = (char *)(v212 + 56);
    swift_bridgeObjectRetain();
    uint64_t v63 = _swiftEmptyArrayStorage;
    uint64_t v64 = v222;
    do
    {
      sub_10008A6B8(v62, (uint64_t)v42, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      uint64_t v65 = (uint64_t)v217;
      sub_100009D6C((uint64_t)&v42[*(int *)(v218 + 24)], (uint64_t)v217, &qword_1000D58B8);
      uint64_t v66 = v65;
      sub_10008A6B8((uint64_t)v42, (uint64_t)v64, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      uint64_t v67 = *v221;
      int v68 = (*v221)(v66, 1, v50);
      uint64_t v220 = v63;
      if (v68 == 1)
      {
        uint64_t v69 = v222[3];
        uint64_t v70 = v222[4];
        sub_100024D3C(v222, v69);
        uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v70 + 72);
        uint64_t v72 = v69;
        uint64_t v64 = v222;
        uint64_t v73 = v70;
        uint64_t v50 = (uint64_t)v215;
        v71(v72, v73);
        sub_100009EF4(v66, &qword_1000D58B8);
      }
      else
      {
        (*v219)(v48, v66, v50);
        (*(void (**)(char *, void, uint64_t, uint64_t))v210)(v48, 0, 1, v50);
      }
      sub_10008A26C((uint64_t)v64, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      sub_10008A26C((uint64_t)v42, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
      if (v67((uint64_t)v48, 1, v50) == 1)
      {
        sub_100009EF4((uint64_t)v48, &qword_1000D58B8);
        uint64_t v63 = v220;
      }
      else
      {
        unint64_t v74 = *v219;
        unint64_t v75 = v211;
        (*v219)(v211, (uint64_t)v48, v50);
        v74(v216, (uint64_t)v75, v50);
        uint64_t v63 = v220;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v63 = (void *)sub_10002274C(0, v63[2] + 1, 1, (unint64_t)v63);
        }
        unint64_t v77 = v63[2];
        unint64_t v76 = v63[3];
        if (v77 >= v76 >> 1) {
          uint64_t v63 = (void *)sub_10002274C(v76 > 1, v77 + 1, 1, (unint64_t)v63);
        }
        v63[2] = v77 + 1;
        v74((char *)v63+ ((*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80))+ *(void *)(v212 + 72) * v77, (uint64_t)v216, v50);
        uint64_t v64 = v222;
      }
      v62 += (uint64_t)v214;
      --v61;
    }
    while (v61);
    swift_bridgeObjectRelease();
    uint64_t v11 = v186;
    uint64_t v22 = v187;
    unint64_t v78 = v63;
  }
  else
  {
    unint64_t v78 = _swiftEmptyArrayStorage;
  }
  uint64_t v79 = v198;
  sub_100088BB8((uint64_t)v78, v198);
  swift_bridgeObjectRelease();
  uint64_t v80 = (void *)v212;
  int v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v212 + 48))(v79, 1, v50);
  uint64_t v82 = v200;
  uint64_t v83 = v199;
  if (v81 == 1)
  {
    char v84 = &qword_1000D58B8;
    uint64_t v85 = (uint64_t)v79;
LABEL_48:
    sub_100009EF4(v85, v84);
    return swift_bridgeObjectRetain();
  }
  uint64_t v216 = (char *)v80[4];
  v217 = v80 + 4;
  ((void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))v216)(v200, v79, v50);
  uint64_t v86 = (char *)v192;
  sub_1000ADE58();
  char v87 = sub_1000ADE98();
  uint64_t v88 = (void (**)(char *, uint64_t, uint64_t))v80[1];
  ((void (*)(char *, uint64_t))v88)(v86, v50);
  if ((v87 & 1) == 0)
  {
    ((void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t))v88)(v82, v50);
    return swift_bridgeObjectRetain();
  }
  uint64_t v218 = (uint64_t)(v80 + 1);
  uint64_t v222 = (void *)sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
  char v89 = sub_1000AF418();
  uint64_t v92 = (void (*)(uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t))v80[2];
  uint64_t v91 = (uint64_t)(v80 + 2);
  unint64_t v90 = v92;
  v214 = (void (*)(char *, char *, uint64_t))v92;
  if (v89)
  {
    uint64_t v93 = v185;
    uint64_t v94 = v185;
    char v95 = v82;
  }
  else
  {
    char v95 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v83;
    uint64_t v93 = v185;
    uint64_t v94 = v185;
  }
  v90(v94, v95, v50);
  unint64_t v96 = (unint64_t)v209;
  uint64_t v219 = v88;
  uint64_t v212 = v91;
  long long v187 = v22;
  uint64_t v186 = v11;
  uint64_t v97 = v192;
  sub_1000ADE58();
  uint64_t v98 = (uint64_t *)v50;
  if ((sub_1000AF428() & 1) == 0)
  {
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v99 = v197;
  uint64_t v100 = v195;
  uint64_t v101 = &v195[*(int *)(v197 + 48)];
  uint64_t v102 = v214;
  v214(v195, (char *)v93, v50);
  uint64_t v103 = v216;
  ((void (*)(char *, uint64_t, uint64_t))v216)(v101, v97, v50);
  uint64_t v104 = *(int *)(v99 + 48);
  uint64_t v105 = v196;
  uint64_t v106 = &v196[v104];
  v102(v196, v100, v50);
  v102(v106, v101, v50);
  uint64_t v107 = (uint64_t)v194;
  ((void (*)(char *, char *, uint64_t))v103)(v194, v105, v50);
  ((void (*)(char *, uint64_t))v219)(v106, v50);
  uint64_t v108 = &v105[*(int *)(v197 + 48)];
  ((void (*)(char *, char *, uint64_t))v103)(v105, v100, v50);
  ((void (*)(char *, char *, uint64_t))v103)(v108, v101, v50);
  uint64_t v109 = v203;
  ((void (*)(uint64_t, char *, uint64_t))v103)(v107 + *(int *)(v203 + 36), v108, v50);
  ((void (*)(char *, uint64_t))v219)(v105, v50);
  uint64_t v110 = (uint64_t)v213;
  sub_10001D8DC(v107, (uint64_t)v213, &qword_1000D8080);
  uint64_t v97 = 0;
  v211 = (char *)((*(unsigned __int8 *)(v193 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80));
  uint64_t v111 = v110 + *(int *)(v109 + 36);
  uint64_t v112 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v193 + 72);
  unint64_t v113 = 1;
  uint64_t v210 = &v211[v202];
  uint64_t v91 = (uint64_t)&v211[v202];
  uint64_t v220 = (void *)v111;
  uint64_t v221 = v112;
  while (1)
  {
    uint64_t v114 = v91 + *(int *)(v208 + 20);
    char v115 = sub_1000AF428();
    uint64_t v116 = v206;
    sub_100009D6C(v114, v206, &qword_1000D8080);
    sub_100009D6C((uint64_t)v213, v96, &qword_1000D8080);
    if (v115)
    {
      sub_100009EF4(v96, &qword_1000D8080);
      sub_100009EF4(v116, &qword_1000D8080);
      uint64_t v117 = v207;
      sub_100009D6C(v114, v207, &qword_1000D8080);
LABEL_29:
      sub_100009EF4(v117, &qword_1000D8080);
      uint64_t v119 = (uint64_t)v204;
      sub_100009D6C((uint64_t)v213, (uint64_t)v204, &qword_1000D8080);
      uint64_t v82 = v221;
LABEL_30:
      sub_100009EF4(v119, &qword_1000D8080);
      goto LABEL_31;
    }
    char v118 = sub_1000AF428();
    sub_100009EF4(v96, &qword_1000D8080);
    sub_100009EF4(v116, &qword_1000D8080);
    uint64_t v117 = v207;
    sub_100009D6C(v114, v207, &qword_1000D8080);
    if (v118) {
      goto LABEL_29;
    }
    sub_100090F48(&qword_1000D8088, (void (*)(uint64_t))&type metadata accessor for Date);
    char v121 = sub_1000AF448();
    sub_100009EF4(v117, &qword_1000D8080);
    uint64_t v119 = (uint64_t)v204;
    sub_100009D6C((uint64_t)v213, (uint64_t)v204, &qword_1000D8080);
    uint64_t v86 = (char *)v220;
    uint64_t v82 = v221;
    if (v121) {
      goto LABEL_30;
    }
    char v122 = sub_1000AF448();
    uint64_t v123 = sub_100009EF4(v119, &qword_1000D8080);
    if ((v122 & 1) == 0) {
      break;
    }
LABEL_31:
    uint64_t v120 = v97 + 1;
    if (__OFADD__(v97, 1))
    {
      __break(1u);
      goto LABEL_72;
    }
    ++v97;
    v113 += 2;
    v91 += (uint64_t)v82;
    unint64_t v96 = (unint64_t)v209;
    if (v120 == v205) {
      goto LABEL_47;
    }
  }
  uint64_t v98 = (uint64_t *)&v183;
  __chkstk_darwin(v123);
  *(&v183 - 2) = v213;
  uint64_t v93 = 0;
  uint64_t v124 = sub_100088FDC((uint64_t (*)(uint64_t))sub_10008E768, (uint64_t)(&v183 - 4), v202);
  if (v125)
  {
LABEL_47:
    uint64_t v146 = v215;
    uint64_t v147 = v219;
    ((void (*)(uint64_t, uint64_t *))v219)(v185, v215);
    ((void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t *))v147)(v200, v146);
    char v84 = &qword_1000D8080;
    uint64_t v85 = (uint64_t)v213;
    goto LABEL_48;
  }
  unint64_t v96 = v124;
  uint64_t v224 = _swiftEmptyArrayStorage;
  if (v97 >= 1)
  {
    if ((uint64_t)v205 < v97) {
      goto LABEL_79;
    }
    int64_t v126 = swift_bridgeObjectRetain();
    uint64_t v98 = (uint64_t *)&v224;
    sub_10006CDA0(v126, (uint64_t)v210, 0, v113);
  }
  if (v97 >= v205)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  uint64_t v127 = (uint64_t)v187;
  sub_10008A6B8(v91, (uint64_t)v187, type metadata accessor for TTRNewWidgetPresenter.Division);
  uint64_t v128 = v127 + *(int *)(v208 + 20);
  uint64_t v129 = (uint64_t)v213;
  char v130 = sub_1000ADEA8();
  uint64_t v97 = (uint64_t)v186;
  uint64_t v209 = (char *)v96;
  uint64_t v207 = v128;
  if ((v130 & 1) == 0)
  {
    uint64_t v98 = v224;
    uint64_t v93 = (uint64_t)v190;
    goto LABEL_51;
  }
  sub_100009D6C(v127, v191, &qword_1000D8070);
  unint64_t v131 = v215;
  uint64_t v98 = v215;
  if ((sub_1000AF428() & 1) == 0) {
    goto LABEL_80;
  }
  uint64_t v132 = v197;
  unint64_t v133 = v195;
  uint64_t v134 = (uint64_t)&v195[*(int *)(v197 + 48)];
  unint64_t v135 = (void (*)(uint64_t, uint64_t, uint64_t *))v214;
  v214(v195, (char *)v128, (uint64_t)v131);
  uint64_t v206 = v134;
  v135(v134, v129, v131);
  uint64_t v136 = *(int *)(v132 + 48);
  unint64_t v137 = v196;
  uint64_t v138 = &v196[v136];
  v135((uint64_t)v196, (uint64_t)v133, v131);
  v135((uint64_t)v138, v134, v131);
  uint64_t v139 = (uint64_t)v194;
  unint64_t v140 = v216;
  ((void (*)(char *, char *, uint64_t *))v216)(v194, v137, v131);
  uint64_t v141 = v219;
  ((void (*)(char *, uint64_t *))v219)(v138, v131);
  int64_t v142 = &v137[*(int *)(v197 + 48)];
  ((void (*)(char *, char *, uint64_t *))v140)(v137, v133, v131);
  ((void (*)(char *, uint64_t, uint64_t *))v140)(v142, v206, v131);
  ((void (*)(uint64_t, char *, uint64_t *))v140)(v139 + *(int *)(v203 + 36), v142, v131);
  ((void (*)(char *, uint64_t *))v141)(v137, v131);
  uint64_t v143 = v208;
  uint64_t v91 = (uint64_t)v189;
  sub_10001D8DC(v139, (uint64_t)&v189[*(int *)(v208 + 20)], &qword_1000D8080);
  sub_10001D8DC(v191, v91, &qword_1000D8070);
  *(unsigned char *)(v91 + *(int *)(v143 + 24)) = 0;
  uint64_t v98 = v224;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_81;
  }
  while (1)
  {
    uint64_t v82 = v221;
    unint64_t v145 = v98[2];
    unint64_t v144 = v98[3];
    uint64_t v93 = (uint64_t)v190;
    unint64_t v96 = (unint64_t)v209;
    if (v145 >= v144 >> 1) {
      uint64_t v98 = (uint64_t *)sub_100022718(v144 > 1, v145 + 1, 1, (unint64_t)v98);
    }
    v98[2] = v145 + 1;
    sub_10008A720(v91, (uint64_t)&v211[(void)v98 + v145 * (void)v82], type metadata accessor for TTRNewWidgetPresenter.Division);
    uint64_t v224 = v98;
LABEL_51:
    sub_100009D6C((uint64_t)v187, v93, &qword_1000D8070);
    uint64_t v149 = v208;
    sub_100009D6C((uint64_t)v213, v93 + *(int *)(v208 + 20), &qword_1000D8080);
    *(unsigned char *)(v93 + *(int *)(v149 + 24)) = 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_77:
    }
      uint64_t v98 = (uint64_t *)sub_100022718(0, v98[2] + 1, 1, (unint64_t)v98);
    unint64_t v151 = v98[2];
    unint64_t v150 = v98[3];
    if (v151 >= v150 >> 1) {
      uint64_t v98 = (uint64_t *)sub_100022718(v150 > 1, v151 + 1, 1, (unint64_t)v98);
    }
    v98[2] = v151 + 1;
    sub_10008A720(v93, (uint64_t)&v211[(void)v98 + v151 * (void)v82], type metadata accessor for TTRNewWidgetPresenter.Division);
    uint64_t v224 = v98;
    if (v96 < v205) {
      break;
    }
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    uint64_t v98 = (uint64_t *)sub_100022718(0, v98[2] + 1, 1, (unint64_t)v98);
  }
  sub_10008A6B8((uint64_t)&v210[v96 * (void)v82], (uint64_t)v183, type metadata accessor for TTRNewWidgetPresenter.Division);
  uint64_t v152 = v203;
  char v153 = sub_1000ADE98();
  uint64_t v154 = v202;
  uint64_t v155 = (uint64_t)v222;
  uint64_t v156 = v207;
  if (v153)
  {
    sub_100009D6C((uint64_t)v183, v191, &qword_1000D8070);
    uint64_t v157 = v156 + *(int *)(v152 + 36);
    uint64_t v158 = v215;
    if (sub_1000AF428())
    {
      uint64_t v159 = v197;
      uint64_t v160 = v195;
      v161 = &v195[*(int *)(v197 + 48)];
      uint64_t v162 = (void (*)(char *, uint64_t, uint64_t *))v214;
      v214(v195, v86, (uint64_t)v158);
      uint64_t v163 = v161;
      uint64_t v222 = v161;
      v162(v161, v157, v158);
      uint64_t v164 = v196;
      uint64_t v165 = &v196[*(int *)(v159 + 48)];
      v162(v196, (uint64_t)v160, v158);
      v162(v165, (uint64_t)v163, v158);
      uint64_t v166 = (uint64_t)v194;
      uint64_t v167 = v216;
      ((void (*)(char *, char *, uint64_t *))v216)(v194, v164, v158);
      ((void (*)(char *, uint64_t *))v219)(v165, v158);
      uint64_t v168 = &v164[*(int *)(v159 + 48)];
      ((void (*)(char *, char *, uint64_t *))v167)(v164, v160, v158);
      ((void (*)(char *, void *, uint64_t *))v167)(v168, v222, v158);
      ((void (*)(uint64_t, char *, uint64_t *))v167)(v166 + *(int *)(v203 + 36), v168, v158);
      ((void (*)(char *, uint64_t *))v219)(v164, v158);
      uint64_t v169 = v208;
      uint64_t v93 = (uint64_t)v188;
      sub_10001D8DC(v166, (uint64_t)&v188[*(int *)(v208 + 20)], &qword_1000D8080);
      sub_10001D8DC(v191, v93, &qword_1000D8070);
      *(unsigned char *)(v93 + *(int *)(v169 + 24)) = 0;
      uint64_t v155 = (uint64_t)v224;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_58;
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t v155 = sub_100022718(0, *(void *)(v155 + 16) + 1, 1, v155);
LABEL_58:
    uint64_t v170 = v221;
    uint64_t v154 = v202;
    unint64_t v172 = *(void *)(v155 + 16);
    unint64_t v171 = *(void *)(v155 + 24);
    if (v172 >= v171 >> 1) {
      uint64_t v155 = sub_100022718(v171 > 1, v172 + 1, 1, v155);
    }
    *(void *)(v155 + 16) = v172 + 1;
    sub_10008A720(v93, (uint64_t)&v211[v155 + v172 * (void)v170], type metadata accessor for TTRNewWidgetPresenter.Division);
    uint64_t v224 = (uint64_t *)v155;
  }
  uint64_t v173 = v209 + 1;
  if ((uint64_t)(v209 + 1) >= (uint64_t)(v205 - 1)) {
    goto LABEL_74;
  }
  uint64_t v91 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v174 = v205 - (void)v173;
  if ((char *)v205 == v173) {
    goto LABEL_73;
  }
  v223 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000A7B08(0, v174 & ~(v174 >> 63), 0);
  if (v174 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v175 = v221;
    uint64_t v176 = (uint64_t)&v211[(void)v221 * (void)v173 + v154];
    do
    {
      uint64_t v177 = (uint64_t)v184;
      sub_10008A6B8(v176, (uint64_t)v184, type metadata accessor for TTRNewWidgetPresenter.Division);
      sub_100009D6C(v177, v97, &qword_1000D8070);
      uint64_t v178 = v208;
      sub_100009D6C(v177 + *(int *)(v208 + 20), v97 + *(int *)(v208 + 20), &qword_1000D8080);
      *(unsigned char *)(v97 + *(int *)(v178 + 24)) = 0;
      sub_10008A26C(v177, type metadata accessor for TTRNewWidgetPresenter.Division);
      uint64_t v91 = (uint64_t)v223;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000A7B08(0, *(void *)(v91 + 16) + 1, 1);
        uint64_t v91 = (uint64_t)v223;
      }
      unint64_t v180 = *(void *)(v91 + 16);
      unint64_t v179 = *(void *)(v91 + 24);
      if (v180 >= v179 >> 1)
      {
        sub_1000A7B08(v179 > 1, v180 + 1, 1);
        uint64_t v91 = (uint64_t)v223;
      }
      *(void *)(v91 + 16) = v180 + 1;
      sub_10008A720(v97, (uint64_t)&v211[v91 + v180 * (void)v175], type metadata accessor for TTRNewWidgetPresenter.Division);
      v176 += (uint64_t)v175;
      --v174;
    }
    while (v174);
LABEL_72:
    swift_bridgeObjectRelease();
LABEL_73:
    sub_10006D3E4(v91);
LABEL_74:
    sub_10008A26C((uint64_t)v183, type metadata accessor for TTRNewWidgetPresenter.Division);
    sub_10008A26C((uint64_t)v187, type metadata accessor for TTRNewWidgetPresenter.Division);
    uint64_t v181 = v215;
    uint64_t v182 = v219;
    ((void (*)(uint64_t, uint64_t *))v219)(v185, v215);
    ((void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t *))v182)(v200, v181);
    sub_100009EF4((uint64_t)v213, &qword_1000D8080);
    return (uint64_t)v224;
  }
  return result;
}

BOOL sub_10008E748(uint64_t a1)
{
  return sub_1000890D4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10008E768()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for TTRNewWidgetPresenter.Division(0);
  return sub_1000884B0(v1) & 1;
}

uint64_t sub_10008E7BC()
{
  uint64_t v1 = sub_1000ADF08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_10008E8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1000ADF08() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100084DAC(a1, a2, a3, v3 + 16, *(void *)(v3 + 56), (char *)(v3 + v8), *(void *)(v3 + v9), *(void (**)(void *))(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10008E9A0()
{
  uint64_t v1 = sub_1000ADF08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10008EA98(uint64_t a1)
{
  return sub_10008EAB0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_100083A58);
}

uint64_t sub_10008EAB0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t v4 = *(void *)(sub_1000ADF08() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *((void *)v2 + 2);
  uint64_t v7 = *((void *)v2 + 3);
  uint64_t v8 = *((void *)v2 + 4);
  uint64_t v9 = *((void *)v2 + 5);
  uint64_t v10 = *((void *)v2 + 6);
  uint64_t v11 = *(void *)&v2[(*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8];

  return a2(a1, v6, v7, v8, v9, v10, &v2[v5], v11);
}

uint64_t sub_10008EB6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    return swift_errorRetain();
  }
  else
  {
    id v8 = a1;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10008EBC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    return swift_errorRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10008EC20(uint64_t a1, uint64_t a2, char *a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v24 = a5;
  uint64_t v25 = a4;
  uint64_t v9 = sub_10000693C(&qword_1000D59C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AE338();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = (char *)v15 + *(int *)(sub_10000693C(&qword_1000D5A28) + 48);
  void *v15 = [*(id *)a1 objectID:v24];
  uint64_t v17 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
  uint64_t v18 = sub_1000AE2E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for REMNavigationSpecifier.customSmartList(_:), v12);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 32);
  (*(void (**)(char *, void *, uint64_t))(v13 + 16))(v11, v15, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  uint64_t v21 = sub_1000850B0(v19, v20, (uint64_t)v11, a3);
  sub_100009EF4((uint64_t)v11, &qword_1000D59C0);
  uint64_t v27 = v5;
  uint64_t v28 = a1;
  uint64_t v29 = v15;
  uint64_t v30 = a2;
  uint64_t v22 = sub_10007F75C((void (*)(uint64_t))sub_10008EF00, (uint64_t)v26, (uint64_t)v21, (uint64_t)v31, type metadata accessor for TTRNewWidgetTimelineEntry, (void (*)(BOOL, unint64_t, uint64_t))sub_1000A7B44, type metadata accessor for TTRNewWidgetPresenter.Snapshot, type metadata accessor for TTRNewWidgetTimelineEntry);
  swift_bridgeObjectRelease();
  v25(v22);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_10008EF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100086A18(a1, v2[2], v2[3], v2[5], a2);
}

uint64_t sub_10008EF24(uint64_t a1, uint64_t a2, char *a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v27 = a5;
  uint64_t v28 = a4;
  uint64_t v9 = sub_10000693C(&qword_1000D59C0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = sub_1000AE338();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AF748();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v19 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
    uint64_t v20 = sub_1000AE2D8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for REMNavigationSpecifier.today(_:), v15);
    sub_100009EF4((uint64_t)v14, &qword_1000D59C0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  }
  uint64_t v21 = *(void *)(a1 + 24);
  uint64_t v22 = *(void *)(a1 + 32);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v18, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  uint64_t v23 = sub_1000850B0(v21, v22, (uint64_t)v12, a3);
  uint64_t v24 = sub_100009EF4((uint64_t)v12, &qword_1000D59C0);
  __chkstk_darwin(v24);
  *(&v27 - 4) = v5;
  *(&v27 - 3) = a2;
  *(&v27 - 2) = a1;
  *(&v27 - 1) = (uint64_t)v18;
  uint64_t v25 = sub_10007F75C((void (*)(uint64_t))sub_10008F280, (uint64_t)(&v27 - 6), (uint64_t)v23, (uint64_t)v29, type metadata accessor for TTRNewWidgetTimelineEntry, (void (*)(BOOL, unint64_t, uint64_t))sub_1000A7B44, type metadata accessor for TTRNewWidgetPresenter.Snapshot, type metadata accessor for TTRNewWidgetTimelineEntry);
  swift_bridgeObjectRelease();
  v28(v25);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_10008F280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100087390(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_10008F2A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10008F300(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

id sub_10008F344(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t *sub_10008F3A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000693C(&qword_1000D8070);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 3) = v11;
      (**(void (***)(uint64_t *, uint64_t *))(v11 - 8))(a1, a2);
      a1[5] = a2[5];
      uint64_t v12 = *(int *)(v7 + 24);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_1000ADF08();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_10000693C(&qword_1000D58B8);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v18 = *(int *)(a3 + 20);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_1000ADF08();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    uint64_t v23 = sub_10000693C(&qword_1000D8080);
    v22(&v19[*(int *)(v23 + 36)], &v20[*(int *)(v23 + 36)], v21);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_10008F698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    sub_100023B0C(a1);
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_1000ADF08();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = sub_1000ADF08();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v12)((void *)(v9 - 8), v8, v9);
  uint64_t v10 = v8 + *(int *)(sub_10000693C(&qword_1000D8080) + 36);

  return v12(v10, v9);
}

uint64_t sub_10008F81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000693C(&qword_1000D8070);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    uint64_t v10 = *(int *)(v6 + 24);
    long long v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    uint64_t v13 = sub_1000ADF08();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10000693C(&qword_1000D58B8);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1000ADF08();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  uint64_t v21 = sub_10000693C(&qword_1000D8080);
  v20(v17 + *(int *)(v21 + 36), v18 + *(int *)(v21 + 36), v19);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_10008FAC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      sub_100077080(a1, a2);
      a1[5] = a2[5];
      uint64_t v21 = *(int *)(v6 + 24);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_1000ADF08();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
      int v27 = v26(v22, 1, v24);
      int v28 = v26(v23, 1, v24);
      if (v27)
      {
        if (!v28)
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v28)
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
      }
      size_t v18 = *(void *)(*(void *)(sub_10000693C(&qword_1000D58B8) - 8) + 64);
      uint64_t v19 = (uint64_t *)v22;
      uint64_t v20 = (uint64_t *)v23;
      goto LABEL_8;
    }
    sub_10008A26C((uint64_t)a1, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
LABEL_7:
    size_t v18 = *(void *)(*(void *)(sub_10000693C(&qword_1000D8070) - 8) + 64);
    uint64_t v19 = a1;
    uint64_t v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_14;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = a2[3];
  a1[3] = v11;
  a1[4] = a2[4];
  (**(void (***)(uint64_t *, uint64_t *))(v11 - 8))(a1, a2);
  a1[5] = a2[5];
  uint64_t v12 = *(int *)(v6 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000ADF08();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10000693C(&qword_1000D58B8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_1000ADF08();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24);
  v33(v30, v31, v32);
  uint64_t v34 = sub_10000693C(&qword_1000D8080);
  v33(&v30[*(int *)(v34 + 36)], &v31[*(int *)(v34 + 36)], v32);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_10008FEEC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000693C(&qword_1000D8070);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = *((void *)a2 + 5);
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v10;
    uint64_t v11 = *(int *)(v6 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1000ADF08();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10000693C(&qword_1000D58B8);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v17 = *(int *)(a3 + 20);
  size_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1000ADF08();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  uint64_t v22 = sub_10000693C(&qword_1000D8080);
  v21(&v18[*(int *)(v22 + 36)], &v19[*(int *)(v22 + 36)], v20);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100090160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRNewWidgetInteractorReminderWrapper(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      sub_100023B0C(a1);
      long long v22 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v22;
      uint64_t v23 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v23;
      uint64_t v24 = *(int *)(v6 + 24);
      uint64_t v25 = (void *)(a1 + v24);
      uint64_t v26 = (void *)(a2 + v24);
      uint64_t v27 = sub_1000ADF08();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
      int v30 = v29(v25, 1, v27);
      int v31 = v29(v26, 1, v27);
      if (v30)
      {
        if (!v31)
        {
          (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v31)
        {
          (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
      }
      size_t v19 = *(void *)(*(void *)(sub_10000693C(&qword_1000D58B8) - 8) + 64);
      uint64_t v20 = v25;
      uint64_t v21 = v26;
      goto LABEL_8;
    }
    sub_10008A26C(a1, type metadata accessor for TTRNewWidgetInteractorReminderWrapper);
LABEL_7:
    size_t v19 = *(void *)(*(void *)(sub_10000693C(&qword_1000D8070) - 8) + 64);
    uint64_t v20 = (void *)a1;
    uint64_t v21 = (const void *)a2;
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_14;
  }
  if (v10) {
    goto LABEL_7;
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  uint64_t v12 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v12;
  uint64_t v13 = *(int *)(v6 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_1000ADF08();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_10000693C(&qword_1000D58B8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_1000ADF08();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40);
  v36(v33, v34, v35);
  uint64_t v37 = sub_10000693C(&qword_1000D8080);
  v36(v33 + *(int *)(v37 + 36), v34 + *(int *)(v37 + 36), v35);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100090554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100090568);
}

uint64_t sub_100090568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000693C(&qword_1000D8070);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_10000693C(&qword_1000D8080);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_100090694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000906A8);
}

uint64_t sub_1000906A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10000693C(&qword_1000D8070);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10000693C(&qword_1000D8080);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1000907C0()
{
  sub_100090890();
  if (v0 <= 0x3F)
  {
    sub_1000908E8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100090890()
{
  if (!qword_1000D8108)
  {
    type metadata accessor for TTRNewWidgetInteractorReminderWrapper(255);
    unint64_t v0 = sub_1000AF7F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D8108);
    }
  }
}

void sub_1000908E8()
{
  if (!qword_1000D8110)
  {
    sub_1000ADF08();
    sub_100090F48(&qword_1000D7898, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t v0 = sub_1000AF6C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D8110);
    }
  }
}

uint64_t *sub_10009097C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000ADF08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v8) = *(_DWORD *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100090A54(uint64_t a1)
{
  uint64_t v2 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100090AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100090B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100090BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100090C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100090CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100090D10);
}

uint64_t sub_100090D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100090DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100090DE4);
}

uint64_t sub_100090DE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000ADF08();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100090EA0()
{
  uint64_t result = sub_1000ADF08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100090F48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100090F94()
{
  uint64_t v1 = sub_1000ADF08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100091088(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000ADF08() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + v4;
  uint64_t v9 = (char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = *(void (**)(void *))v9;
  uint64_t v11 = *((void *)v9 + 1);

  return sub_100082DE4(a1, v5, v6, v7, v8, v10, v11);
}

id sub_100091130@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1000827C0(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_100091150()
{
  uint64_t v0 = sub_1000AE768();
  sub_10000EFDC(v0, qword_1000D81F0);
  uint64_t v1 = sub_10000EFA4(v0, (uint64_t)qword_1000D81F0);
  if (qword_1000D4888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000EFA4(v0, (uint64_t)qword_1000E1E48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100091218()
{
  id v0 = objc_allocWithZone((Class)CNContactStore);

  return [v0 init];
}

uint64_t sub_100091250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100023D40(a1, a2);
}

void sub_100091258()
{
  uint64_t v0 = sub_10000693C(&qword_1000D78A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [objc_allocWithZone((Class)REMStore) init];
  uint64_t v4 = sub_1000AE538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  sub_1000AE1D8();
  uint64_t v5 = (void *)sub_1000AE1C8();
  type metadata accessor for TTRNewWidgetInteractor(0);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0x4000000000000000;
  v6[3] = v3;
  v6[4] = v5;
  sub_1000913D8((uint64_t)v2, (uint64_t)v6 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle);
  type metadata accessor for TTRNewWidgetInteractor.CompletedCache();
  uint64_t v7 = swift_allocObject();
  id v8 = v3;
  id v9 = v5;
  swift_defaultActor_initialize();
  *(void *)(v7 + 112) = 0x4000000000000000;
  *(void *)(v7 + 120) = &_swiftEmptyDictionarySingleton;
  sub_100091440((uint64_t)v2);
  *(void *)((char *)v6 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache) = v7;

  qword_1000D8208 = (uint64_t)v6;
}

uint64_t sub_1000913D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000693C(&qword_1000D78A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100091440(uint64_t a1)
{
  uint64_t v2 = sub_10000693C(&qword_1000D78A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000914A0()
{
  uint64_t v0 = sub_1000AE588();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRNewWidgetRouter();
  uint64_t v5 = swift_allocObject();
  sub_100091A3C();
  sub_1000AF788();
  sub_1000AE1D8();
  sub_1000AE1C8();
  uint64_t v6 = sub_1000AE268();
  swift_allocObject();
  uint64_t v7 = sub_1000AE258();
  swift_retain();
  sub_1000AF788();
  uint64_t v32 = v6;
  uint64_t v33 = &protocol witness table for REMContactsProvider;
  v31[0] = v7;
  uint64_t v8 = sub_1000AE188();
  swift_allocObject();
  uint64_t v9 = sub_1000AE178();
  if (qword_1000D4978 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1000D8208;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for REMRemindersListDataView.FetchSubtasks.count(_:), v0);
  uint64_t v32 = v8;
  uint64_t v33 = &protocol witness table for TTRParticipantAvatarProvider;
  v31[0] = v9;
  uint64_t v11 = qword_1000D48A8;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  long long v34 = xmmword_1000E1E60;
  v30[3] = v4;
  v30[4] = (uint64_t)&off_1000D1400;
  v30[0] = v5;
  type metadata accessor for TTRNewWidgetPresenter(0);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = sub_100091A7C((uint64_t)v30, v4);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = *v15;
  swift_retain();
  uint64_t v18 = sub_1000A5A30(v10, v17, (uint64_t)v3, (uint64_t)v31, 2, 0, v12);
  sub_100023B0C((uint64_t)v30);
  swift_release();
  uint64_t v19 = qword_1000D4970;
  swift_retain();
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1000AE768();
  sub_10000EFA4(v20, (uint64_t)qword_1000D81F0);
  swift_retain_n();
  uint64_t v21 = sub_1000AE758();
  os_log_type_t v22 = sub_1000AF718();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    v30[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136446466;
    v31[0] = &type metadata for TTRNewWidgetAssembly;
    sub_10000693C(&qword_1000D8218);
    v29[1] = v7;
    uint64_t v24 = sub_1000AF4B8();
    v31[0] = sub_1000A53D8(v24, v25, v30);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    v31[0] = v18;
    v31[1] = 8;
    swift_retain();
    uint64_t v26 = sub_1000AF4B8();
    v31[0] = sub_1000A53D8(v26, v27, v30);
    sub_1000AF808();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s: Created provider %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {

    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
  }
  return v18;
}

unint64_t sub_100091A3C()
{
  unint64_t result = qword_1000D8210;
  if (!qword_1000D8210)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D8210);
  }
  return result;
}

uint64_t sub_100091A7C(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRNewWidgetAssembly()
{
  return &type metadata for TTRNewWidgetAssembly;
}

uint64_t sub_100091AE0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, id a6, uint64_t a7, uint64_t a8)
{
  if (*(void *)(a1 + 24))
  {
    id v13 = [a6 substringWithRange:a2, a3];
    sub_1000AF498();

    uint64_t v14 = sub_1000AEEB8();
    uint64_t v16 = v15;
    char v18 = v17;
    swift_bridgeObjectRelease();
    char v19 = v18 & 1;
    if (a8)
    {
      swift_retain_n();
      sub_100009E88(v14, v16, v18 & 1);
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1000AEE88();
      uint64_t v22 = v21;
      char v24 = v23 & 1;
      sub_100006FE0(v14, v16, v19);
      swift_bridgeObjectRelease();
      sub_100006FE0(v14, v16, v19);
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20;
      uint64_t v16 = v22;
      char v19 = v24;
    }
    uint64_t v25 = *(void *)a5;
    uint64_t v26 = *(void *)(a5 + 8);
    char v27 = *(unsigned char *)(a5 + 16);
    sub_100009E88(*(void *)a5, v26, v27);
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1000AEEA8();
    uint64_t v48 = v29;
    uint64_t v49 = v30;
    char v47 = v31;
    sub_100006FE0(v14, v16, v19);
    swift_bridgeObjectRelease();
    sub_100006FE0(v25, v26, v27);
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void *)a5;
    uint64_t v33 = *(void *)(a5 + 8);
    char v34 = *(unsigned char *)(a5 + 16);
    *(void *)a5 = v28;
    *(void *)(a5 + 8) = v48;
    *(unsigned char *)(a5 + 16) = v47 & 1;
    *(void *)(a5 + 24) = v49;
  }
  else
  {
    uint64_t v35 = *(void *)a5;
    uint64_t v36 = *(void *)(a5 + 8);
    char v37 = *(unsigned char *)(a5 + 16);
    sub_100009E88(*(void *)a5, v36, v37);
    swift_bridgeObjectRetain();
    id v38 = [a6 substringWithRange:a2, a3];
    sub_1000AF498();

    uint64_t v39 = sub_1000AEEA8();
    uint64_t v41 = v40;
    char v43 = v42;
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    sub_100006FE0(v35, v36, v37);
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void *)a5;
    uint64_t v33 = *(void *)(a5 + 8);
    char v34 = *(unsigned char *)(a5 + 16);
    *(void *)a5 = v39;
    *(void *)(a5 + 8) = v41;
    *(unsigned char *)(a5 + 16) = v43 & 1;
    *(void *)(a5 + 24) = v45;
  }
  sub_100006FE0(v32, v33, v34);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100091DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002320C(v2 + *(int *)(a1 + 24), a2);
}

uint64_t *sub_100091DF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000ADF08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
    v9[*(int *)(v12 + 20)] = v10[*(int *)(v12 + 20)];
    *(void *)&v9[*(int *)(v12 + 24)] = *(void *)&v10[*(int *)(v12 + 24)];
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1000AF358();
    uint64_t v17 = *(void *)(v16 - 8);
    char v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_10000693C(&qword_1000D5928);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_10009200C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for TTRTodayComplicationWidgetViewModel();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1000AF358();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_10009216C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(v8 + *(int *)(v11 + 20)) = *(unsigned char *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_1000AF358();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_10000693C(&qword_1000D5928);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_100092334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(v8 + *(int *)(v11 + 20)) = *(unsigned char *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000AF358();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v9) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v9)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_10000693C(&qword_1000D5928);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_100092560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(v8 + *(int *)(v11 + 20)) = *(unsigned char *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_1000AF358();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10000693C(&qword_1000D5928);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_100092718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  *(unsigned char *)(v8 + *(int *)(v11 + 20)) = *(unsigned char *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000AF358();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v9) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v9)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_10000693C(&qword_1000D5928);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_10009293C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100092950);
}

uint64_t sub_100092950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADF08();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_10000693C(&qword_1000D5928);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_100092AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100092AB4);
}

uint64_t sub_100092AB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000ADF08();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = type metadata accessor for TTRTodayComplicationWidgetViewModel();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_10000693C(&qword_1000D5928);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for TTRTodayComplicationWidgetTimelineEntry()
{
  uint64_t result = qword_1000D8278;
  if (!qword_1000D8278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100092C5C()
{
  sub_1000ADF08();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TTRTodayComplicationWidgetViewModel();
    if (v1 <= 0x3F)
    {
      sub_100092D60();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100092D60()
{
  if (!qword_1000D5B60)
  {
    sub_1000AF358();
    unint64_t v0 = sub_1000AF7F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D5B60);
    }
  }
}

void *sub_100092DB8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000ADD48();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100092E90(uint64_t a1)
{
  uint64_t v2 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100092F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100092F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100093024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1000930A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100093134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100093148);
}

uint64_t sub_100093148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000ADD48();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100093208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009321C);
}

uint64_t sub_10009321C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000ADD48();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TTRTodayComplicationWidgetViewModel()
{
  uint64_t result = qword_1000D8310;
  if (!qword_1000D8310) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100093324()
{
  uint64_t result = sub_1000ADD48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000933C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000693C(&qword_1000D58B8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v66 = (char *)v58 - v7;
  uint64_t v77 = sub_1000ADFC8();
  uint64_t v8 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  unint64_t v76 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000ADF08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v65 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v72 = (char *)v58 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v64 = (char *)v58 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v71 = (char *)v58 - v19;
  __chkstk_darwin(v18);
  uint64_t v73 = (char *)v58 - v20;
  uint64_t v21 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  char v24 = (char *)v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(v1 + *(int *)(type metadata accessor for TTRTodayComplicationWidgetViewModel() + 24));
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    uint64_t v60 = v21;
    uint64_t v61 = a1;
    uint64_t v27 = v8;
    uint64_t v28 = v25 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    unint64_t v74 = (void (**)(char *, uint64_t))(v27 + 8);
    unint64_t v75 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v59 = v22;
    uint64_t v68 = *(void *)(v22 + 72);
    uint64_t v69 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    v58[1] = v25;
    swift_bridgeObjectRetain();
    uint64_t v29 = v73;
    uint64_t v70 = v24;
    uint64_t v63 = v6;
    while (1)
    {
      sub_100094140(v28, (uint64_t)v24);
      sub_1000ADEC8();
      uint64_t v40 = (void *)*((void *)v24 + 1);
      if (!v40) {
        break;
      }
      uint64_t v79 = v26;
      id v41 = v40;
      unsigned __int8 v42 = [v41 isAllDay];
      id v78 = v41;
      if (v42)
      {
        uint64_t v30 = v76;
        sub_1000ADF98();
        id v31 = [v41 date];
        uint64_t v32 = v64;
        sub_1000ADEB8();

        uint64_t v33 = v71;
        sub_1000ADF78();
        uint64_t v67 = v28;
        char v34 = *v75;
        (*v75)(v32, v10);
        uint64_t v35 = v10;
        uint64_t v36 = *v74;
        uint64_t v37 = v77;
        (*v74)(v30, v77);
        sub_1000ADF98();
        sub_1000ADF78();
        v36(v30, v37);
        uint64_t v10 = v35;
        LOBYTE(v31) = sub_1000ADEA8();

        id v38 = v32;
        uint64_t v29 = v73;
        v34(v38, v35);
        v34(v33, v35);
        v34(v29, v35);
        uint64_t v28 = v67;
        uint64_t v6 = v63;
        char v24 = v70;
        uint64_t v39 = v79;
        if ((v31 & 1) == 0) {
          goto LABEL_18;
        }
      }
      else
      {
        id v43 = [v41 date];
        uint64_t v44 = v71;
        sub_1000ADEB8();

        uint64_t v45 = v76;
        sub_1000ADF98();
        uint64_t v46 = v66;
        sub_1000ADE48();
        uint64_t v47 = (uint64_t)v46;
        uint64_t v48 = *v74;
        (*v74)(v45, v77);
        uint64_t v49 = *v75;
        (*v75)(v44, v10);
        uint64_t v50 = *v69;
        if ((*v69)(v47, 1, v10) == 1)
        {
          sub_1000ADE08();
          sub_100094200(v47);
        }
        else
        {
          (*v62)(v72, v47, v10);
        }
        uint64_t v51 = v76;
        sub_1000ADF98();
        sub_1000ADE48();
        v48(v51, v77);
        unsigned int v52 = v50((uint64_t)v6, 1, v10);
        char v24 = v70;
        uint64_t v53 = v65;
        if (v52 == 1)
        {
          sub_1000ADE08();
          sub_100094200((uint64_t)v6);
        }
        else
        {
          (*v62)(v65, (uint64_t)v6, v10);
        }
        uint64_t v39 = v79;
        uint64_t v54 = v72;
        char v55 = sub_1000ADEA8();

        v49(v53, v10);
        v49(v54, v10);
        v49(v29, v10);
        if ((v55 & 1) == 0) {
          goto LABEL_18;
        }
      }
      sub_1000941A4((uint64_t)v24);
      v28 += v68;
      uint64_t v26 = v39 - 1;
      if (!v26)
      {
        uint64_t v56 = 1;
        a1 = v61;
        goto LABEL_19;
      }
    }
    (*v75)(v29, v10);
LABEL_18:
    a1 = v61;
    sub_100024D80((uint64_t)v24, v61);
    uint64_t v56 = 0;
LABEL_19:
    uint64_t v22 = v59;
    uint64_t v21 = v60;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v56 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(a1, v56, 1, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100093ACC()
{
  uint64_t v1 = sub_10000693C(&qword_1000D58B8);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v58 = (char *)v53 - v5;
  uint64_t v68 = sub_1000ADFC8();
  uint64_t v6 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000ADF08();
  uint64_t v8 = *(void *)(v65 - 8);
  uint64_t v9 = __chkstk_darwin(v65);
  uint64_t v56 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v62 = (char *)v53 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v57 = (char *)v53 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v63 = (char *)v53 - v16;
  __chkstk_darwin(v15);
  uint64_t v72 = (char *)v53 - v17;
  uint64_t v18 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v0 + *(int *)(type metadata accessor for TTRTodayComplicationWidgetViewModel() + 24));
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v24 = v22 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v69 = *(void *)(v19 + 72);
    uint64_t v66 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v25 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v59 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v53[1] = v22;
    uint64_t v54 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    swift_bridgeObjectRetain();
    uint64_t v64 = 0;
    uint64_t v26 = v65;
    uint64_t v60 = v25;
    uint64_t v61 = v21;
    char v55 = v4;
    while (1)
    {
      sub_100094140(v24, (uint64_t)v21);
      sub_1000ADEC8();
      uint64_t v27 = (void *)*((void *)v21 + 1);
      if (v27)
      {
        id v28 = v27;
        unsigned int v29 = [v28 isAllDay];
        id v70 = v28;
        uint64_t v71 = (unint64_t)v25 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        if (v29)
        {
          uint64_t v30 = v67;
          sub_1000ADF98();
          id v31 = [v28 date];
          uint64_t v32 = v57;
          sub_1000ADEB8();

          uint64_t v33 = v63;
          sub_1000ADF78();
          char v34 = *v25;
          (*v25)(v32, v65);
          uint64_t v35 = *v66;
          uint64_t v36 = v68;
          (*v66)(v30, v68);
          sub_1000ADF98();
          sub_1000ADF78();
          uint64_t v37 = v30;
          uint64_t v26 = v65;
          v35(v37, v36);
          uint64_t v25 = v60;
          char v38 = sub_1000ADEA8();

          v34(v32, v26);
          uint64_t v39 = v33;
          uint64_t v4 = v55;
        }
        else
        {
          id v40 = [v28 date];
          id v41 = v63;
          sub_1000ADEB8();

          unsigned __int8 v42 = v67;
          sub_1000ADF98();
          id v43 = v58;
          sub_1000ADE48();
          uint64_t v44 = (uint64_t)v43;
          uint64_t v45 = *v66;
          (*v66)(v42, v68);
          char v34 = *v25;
          (*v25)(v41, v26);
          uint64_t v46 = *v59;
          if ((*v59)(v44, 1, v26) == 1)
          {
            sub_1000ADE08();
            sub_100094200(v44);
          }
          else
          {
            (*v54)(v62, v44, v26);
          }
          uint64_t v47 = v26;
          uint64_t v48 = v67;
          sub_1000ADF98();
          sub_1000ADE48();
          v45(v48, v68);
          uint64_t v26 = v47;
          if (v46((uint64_t)v4, 1, v47) == 1)
          {
            uint64_t v49 = v56;
            sub_1000ADE08();
            sub_100094200((uint64_t)v4);
          }
          else
          {
            uint64_t v49 = v56;
            (*v54)(v56, (uint64_t)v4, v47);
          }
          uint64_t v50 = v62;
          char v38 = sub_1000ADEA8();

          uint64_t v51 = v49;
          uint64_t v25 = v60;
          v34(v51, v26);
          uint64_t v39 = v50;
        }
        v34(v39, v26);
        v34(v72, v26);
        uint64_t v21 = v61;
        uint64_t result = sub_1000941A4((uint64_t)v61);
        if (v38)
        {
          if (__OFADD__(v64, 1))
          {
            __break(1u);
            return result;
          }
          ++v64;
        }
      }
      else
      {
        (*v25)(v72, v26);
        sub_1000941A4((uint64_t)v21);
      }
      v24 += v69;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        return v64;
      }
    }
  }
  return 0;
}

uint64_t sub_100094140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000941A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100094200(uint64_t a1)
{
  uint64_t v2 = sub_10000693C(&qword_1000D58B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100094264()
{
  unint64_t result = qword_1000D8370;
  if (!qword_1000D8370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8370);
  }
  return result;
}

uint64_t sub_1000942B8()
{
  return sub_100009F50(&qword_1000D8378, &qword_1000D8380);
}

uint64_t sub_1000942F4()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000ADB48();
  sub_10000EFDC(v10, qword_1000E1EE8);
  sub_10000EFA4(v10, (uint64_t)qword_1000E1EE8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000ADB38();
}

uint64_t sub_1000945CC@<X0>(uint64_t a1@<X8>)
{
  v22[3] = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D50B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v23 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v3 - 8);
  v22[0] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  long long v22[2] = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v22[1] = (char *)v22 - v15;
  sub_1000AF458();
  sub_1000ADF58();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  uint64_t v18 = v22[0];
  sub_1000ADCB8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  uint64_t v19 = v23;
  sub_1000ADA18();
  uint64_t v20 = sub_1000ADA28();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_10000693C(&qword_1000D50B8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000B0270;
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  sub_1000ADCB8();
  return sub_1000ADA38();
}

uint64_t sub_100094AF4(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E1F00);
}

uint64_t sub_100094B18()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10000693C(&qword_1000D5118);
  sub_10000EFDC(v10, qword_1000E1F18);
  uint64_t v11 = sub_10000EFA4(v10, (uint64_t)qword_1000E1F18);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v14[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  sub_1000AD998();
  uint64_t v12 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
}

uint64_t sub_100094E3C()
{
  uint64_t result = swift_getKeyPath();
  qword_1000E1F30 = result;
  return result;
}

uint64_t sub_100094E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_10000693C(&qword_1000D50E8);
  v3[9] = swift_task_alloc();
  sub_10000693C(&qword_1000D50F0);
  v3[10] = swift_task_alloc();
  sub_10000693C(&qword_1000D8508);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_1000AD748();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_10000693C(&qword_1000D8510);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_100095028, 0, 0);
}

uint64_t sub_100095028()
{
  sub_1000AD798();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  unint64_t v2 = sub_1000960E8();
  *uint64_t v1 = v0;
  v1[1] = sub_1000950FC;
  uint64_t v3 = *(void *)(v0 + 144);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v0 + 16, sub_1000956F4, 0, &type metadata for IncludeDueTodayEntity, v2);
}

uint64_t sub_1000950FC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000951F8, 0, 0);
}

uint64_t sub_1000951F8()
{
  sub_1000AD798();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 160) = v1;
  sub_1000AD798();
  *(unsigned char *)(v0 + 193) = *(unsigned char *)(v0 + 192);
  if (qword_1000D4998 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1000E1F30;
  *(void *)(v0 + 168) = qword_1000E1F30;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = sub_100009F50(&qword_1000D84F0, &qword_1000D84F8);
  *uint64_t v3 = v0;
  v3[1] = sub_100095350;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v4);
}

uint64_t sub_100095350()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10000B584;
  }
  else {
    uint64_t v2 = sub_1000954A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000954A4()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_1000AD798();
  uint64_t v7 = sub_1000ADB18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = sub_1000ADB58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_100094264();
  sub_1000962FC();
  sub_1000AD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_1000AD738();
  sub_1000AD758();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1000956F8()
{
  uint64_t v0 = sub_10000693C(&qword_1000D8518);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D4998 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000AD9F8();
  swift_release();
  sub_1000962FC();
  sub_100009F50(&qword_1000D8520, &qword_1000D8518);
  sub_1000AD9E8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100095860()
{
  if (qword_1000D4998 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1000958C0()
{
  unint64_t result = qword_1000D8388;
  if (!qword_1000D8388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8388);
  }
  return result;
}

unint64_t sub_100095918()
{
  unint64_t result = qword_1000D8390;
  if (!qword_1000D8390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8390);
  }
  return result;
}

uint64_t sub_10009596C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1000959A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100096FA4(a1, a2, a3, (void (*)(void))sub_100094264);
}

uint64_t sub_1000959B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D4988, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1F00, a1);
}

uint64_t sub_1000959F0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D4990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000693C(&qword_1000D5118);
  uint64_t v3 = sub_10000EFA4(v2, (uint64_t)qword_1000E1F18);

  return sub_10000F060(v3, a1);
}

uint64_t sub_100095A6C(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000F290;
  return sub_100094E64(a1, v5, v4);
}

uint64_t sub_100095B18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100097CA8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100095B40()
{
  return 0xD000000000000026;
}

unint64_t sub_100095B60()
{
  unint64_t result = qword_1000D83A0;
  if (!qword_1000D83A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D83A0);
  }
  return result;
}

unint64_t sub_100095BB8()
{
  unint64_t result = qword_1000D83A8;
  if (!qword_1000D83A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D83A8);
  }
  return result;
}

uint64_t sub_100095C0C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100095C2C, 0, 0);
}

uint64_t sub_100095C2C()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 16);
  id v2 = [self daemonUserDefaults];
  unsigned __int8 v3 = [v2 shouldIncludeRemindersDueTodayInBadgeCount];

  *uint64_t v1 = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100095CD0(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100095CF4, 0, 0);
}

uint64_t sub_100095CF4()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self daemonUserDefaults];
  [v2 setShouldIncludeRemindersDueTodayInBadgeCount:v1];

  unsigned __int8 v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100095D8C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_1000ADCA8();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_100095E1C, 0, 0);
}

uint64_t sub_100095E1C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_10000693C(&qword_1000D8380);
  sub_1000ADC88();
  sub_100009F50(&qword_1000D84F0, &qword_1000D84F8);
  *uint64_t v1 = sub_1000ADB78();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_100095F30()
{
  unint64_t result = qword_1000D83B8;
  if (!qword_1000D83B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D83B8);
  }
  return result;
}

uint64_t sub_100095F84(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100096480();
  *uint64_t v4 = v2;
  v4[1] = sub_10000C170;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100096038()
{
  unint64_t result = qword_1000D83C8;
  if (!qword_1000D83C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D83C8);
  }
  return result;
}

unint64_t sub_100096090()
{
  unint64_t result = qword_1000D83D0;
  if (!qword_1000D83D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D83D0);
  }
  return result;
}

unint64_t sub_1000960E8()
{
  unint64_t result = qword_1000D83D8[0];
  if (!qword_1000D83D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D83D8);
  }
  return result;
}

uint64_t sub_10009613C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100096480();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C444;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1000961F0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100096480();
  *uint64_t v4 = v2;
  v4[1] = sub_10000F28C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1000962A4()
{
  unint64_t result = qword_1000D83F0;
  if (!qword_1000D83F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D83F0);
  }
  return result;
}

unint64_t sub_1000962FC()
{
  unint64_t result = qword_1000D83F8;
  if (!qword_1000D83F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D83F8);
  }
  return result;
}

unint64_t sub_100096354()
{
  unint64_t result = qword_1000D8400;
  if (!qword_1000D8400)
  {
    sub_100006F98(qword_1000D8408);
    sub_1000962FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8400);
  }
  return result;
}

uint64_t sub_1000963C8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100095F30();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C7D0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100096480()
{
  unint64_t result = qword_1000D8420;
  if (!qword_1000D8420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8420);
  }
  return result;
}

uint64_t sub_1000964D4()
{
  uint64_t v0 = qword_1000D8350;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100096510()
{
  unint64_t result = qword_1000D8428;
  if (!qword_1000D8428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8428);
  }
  return result;
}

unint64_t sub_100096568()
{
  unint64_t result = qword_1000D8430;
  if (!qword_1000D8430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8430);
  }
  return result;
}

unint64_t sub_1000965C0()
{
  unint64_t result = qword_1000D8438;
  if (!qword_1000D8438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8438);
  }
  return result;
}

unint64_t sub_100096618()
{
  unint64_t result = qword_1000D8440;
  if (!qword_1000D8440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8440);
  }
  return result;
}

unint64_t sub_100096670()
{
  unint64_t result = qword_1000D8448;
  if (!qword_1000D8448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8448);
  }
  return result;
}

unint64_t sub_1000966C8()
{
  unint64_t result = qword_1000D8450;
  if (!qword_1000D8450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8450);
  }
  return result;
}

uint64_t sub_10009671C@<X0>(uint64_t *a1@<X8>)
{
  sub_100095BB8();
  uint64_t result = sub_1000AD778();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10009675C@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D4980, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000E1EE8, a1);
}

uint64_t sub_100096794()
{
  return sub_100009F50(&qword_1000D8458, &qword_1000D8460);
}

uint64_t sub_1000967D0(uint64_t a1)
{
  unint64_t v2 = sub_1000960E8();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100096820()
{
  unint64_t result = qword_1000D8468;
  if (!qword_1000D8468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8468);
  }
  return result;
}

uint64_t sub_100096878(uint64_t a1)
{
  unint64_t v2 = sub_1000966C8();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1000968C8()
{
  unint64_t result = qword_1000D8470;
  if (!qword_1000D8470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8470);
  }
  return result;
}

uint64_t sub_10009691C(uint64_t a1)
{
  if (qword_1000D4868 != -1) {
    swift_once();
  }
  sub_1000AF4D8((Swift::String)xmmword_1000E1E08);
  unint64_t v2 = sub_1000960E8();

  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x80000001000B67A0, a1, v2);
}

uint64_t sub_1000969DC()
{
  sub_1000985D8();
  uint64_t v2 = sub_1000ADA88();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000F040(v3, v0, v2, v1);
}

unint64_t sub_100096A74()
{
  unint64_t result = qword_1000D8480;
  if (!qword_1000D8480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8480);
  }
  return result;
}

uint64_t sub_100096AC8(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E1F38);
}

uint64_t sub_100096AEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_1000AD998();
  uint64_t v13 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

unint64_t sub_100096DE8()
{
  unint64_t result = qword_1000D8488;
  if (!qword_1000D8488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8488);
  }
  return result;
}

uint64_t sub_100096E3C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100098530();
  unint64_t v5 = sub_1000985D8();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100096EA4()
{
  uint64_t v0 = qword_1000D8360;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100096EE0()
{
  unint64_t result = qword_1000D8490;
  if (!qword_1000D8490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8490);
  }
  return result;
}

unint64_t sub_100096F38()
{
  unint64_t result = qword_1000D8498;
  if (!qword_1000D8498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8498);
  }
  return result;
}

uint64_t sub_100096F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100096FA4(a1, a2, a3, (void (*)(void))sub_100096DE8);
}

uint64_t sub_100096FA4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100096FF8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D49A0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1F38, a1);
}

uint64_t sub_100097034(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100098530();
  unint64_t v7 = sub_100098584();
  unint64_t v8 = sub_1000985D8();
  *unint64_t v5 = v2;
  v5[1] = sub_10000D7DC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100097108@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000980E8();
  *a1 = result;
  return result;
}

uint64_t sub_100097130(uint64_t a1)
{
  unint64_t v2 = sub_100096DE8();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenIncludeDueTodayDeepLink()
{
  return &type metadata for OpenIncludeDueTodayDeepLink;
}

ValueMetadata *type metadata accessor for IncludeDueTodayEntity.IncludeDueTodayQuery()
{
  return &type metadata for IncludeDueTodayEntity.IncludeDueTodayQuery;
}

ValueMetadata *type metadata accessor for IncludeDueTodayEntity()
{
  return &type metadata for IncludeDueTodayEntity;
}

ValueMetadata *type metadata accessor for IncludeDueTodayEntity.UpdateIntent_value()
{
  return &type metadata for IncludeDueTodayEntity.UpdateIntent_value;
}

uint64_t sub_1000971AC()
{
  return sub_100009F50(&qword_1000D84A8, &qword_1000D84B0);
}

uint64_t sub_1000971E8()
{
  return sub_100009F50(&qword_1000D84B8, &qword_1000D84B0);
}

uint64_t sub_100097224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D5120);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D5128);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D5130);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D5138);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10000693C(&qword_1000D5140);
  sub_10000693C(&qword_1000D5148);
  sub_100095BB8();
  sub_100009F50(&qword_1000D5150, &qword_1000D5140);
  sub_10000F0F4();
  sub_1000AF2B8();
  sub_1000AEB88();
  uint64_t v16 = sub_100009F50(&qword_1000D5160, &qword_1000D5120);
  sub_1000AEC38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  sub_1000AEB88();
  uint64_t v31 = v1;
  uint64_t v32 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  sub_1000AEBF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v18);
  uint64_t v31 = v18;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_1000AEC58();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  sub_1000AEC18();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v21);
}

uint64_t sub_100097754()
{
  uint64_t v0 = sub_1000AEB88();

  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_1000977C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000ADC98();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  __chkstk_darwin(v8 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000ADCB8();
  uint64_t result = sub_1000AEEE8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

double sub_1000979D8@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000ADC98();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000ADF68();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000AF468();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000ADCA8();
  __chkstk_darwin(v10 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  sub_1000ADCB8();
  v17[1] = sub_1000AEEE8();
  _OWORD v17[2] = v11;
  v17[3] = v12 & 1;
  void v17[4] = v13;
  BOOL v18 = (a1 & 1) == 0;
  sub_1000AEC68();
  double result = *(double *)&v19;
  long long v15 = v20;
  char v16 = v21;
  *(_OWORD *)a2 = v19;
  *(_OWORD *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 32) = v16;
  return result;
}

uint64_t sub_100097CA8()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5088);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000ADA78();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000693C(&qword_1000D5070);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000ADCA8();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10000693C(&qword_1000D84C0);
  sub_1000ADC88();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000AD748();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  BOOL v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000960E8();
  long long v19 = v23;
  uint64_t v24 = sub_1000AD7B8();
  sub_10000693C(&qword_1000D5090);
  sub_1000ADC88();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000AF5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000AD7C8();
  return v24;
}

uint64_t sub_1000980E8()
{
  uint64_t v0 = sub_1000ADA78();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000693C(&qword_1000D5070);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000ADC98();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000ADF68();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000AF468();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000ADCA8();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v21[1] = sub_10000693C(&qword_1000D84C0);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v26 = 0;
  uint64_t v18 = sub_1000AD748();
  long long v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_1000960E8();
  return sub_1000AD7B8();
}

unint64_t sub_100098530()
{
  unint64_t result = qword_1000D84C8;
  if (!qword_1000D84C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D84C8);
  }
  return result;
}

unint64_t sub_100098584()
{
  unint64_t result = qword_1000D84D0;
  if (!qword_1000D84D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D84D0);
  }
  return result;
}

unint64_t sub_1000985D8()
{
  unint64_t result = qword_1000D84D8;
  if (!qword_1000D84D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D84D8);
  }
  return result;
}

uint64_t sub_10009862C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for IncludeDueTodayToggleControl()
{
  return &type metadata for IncludeDueTodayToggleControl;
}

uint64_t sub_100098648()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100098668()
{
  unint64_t result = qword_1000D8548;
  if (!qword_1000D8548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8548);
  }
  return result;
}

uint64_t sub_1000986BC()
{
  return sub_100009F50(&qword_1000D8550, &qword_1000D8558);
}

uint64_t sub_1000986F8()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000ADB48();
  sub_10000EFDC(v10, qword_1000E1F50);
  sub_10000EFA4(v10, (uint64_t)qword_1000E1F50);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000ADB38();
}

uint64_t sub_1000989D8@<X0>(uint64_t a1@<X8>)
{
  v22[3] = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D50B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v23 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v3 - 8);
  v22[0] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  long long v22[2] = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v22[1] = (char *)v22 - v15;
  sub_1000AF458();
  sub_1000ADF58();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  uint64_t v18 = v22[0];
  sub_1000ADCB8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  long long v19 = v23;
  sub_1000ADA18();
  uint64_t v20 = sub_1000ADA28();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_10000693C(&qword_1000D50B8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000B0270;
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  sub_1000ADCB8();
  return sub_1000ADA38();
}

uint64_t sub_100098F04(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E1F68);
}

uint64_t sub_100098F28()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10000693C(&qword_1000D5118);
  sub_10000EFDC(v10, qword_1000E1F80);
  uint64_t v11 = sub_10000EFA4(v10, (uint64_t)qword_1000E1F80);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v14[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  sub_1000AD998();
  uint64_t v12 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
}

uint64_t sub_10009924C()
{
  uint64_t result = swift_getKeyPath();
  qword_1000E1F98 = result;
  return result;
}

uint64_t sub_100099274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_10000693C(&qword_1000D50E8);
  v3[9] = swift_task_alloc();
  sub_10000693C(&qword_1000D50F0);
  v3[10] = swift_task_alloc();
  sub_10000693C(&qword_1000D86E0);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_1000AD748();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_10000693C(&qword_1000D86E8);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_100099438, 0, 0);
}

uint64_t sub_100099438()
{
  sub_1000AD798();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  unint64_t v2 = sub_10009A504();
  *uint64_t v1 = v0;
  v1[1] = sub_10009950C;
  uint64_t v3 = *(void *)(v0 + 144);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v0 + 16, sub_100099B04, 0, &type metadata for ShowAsOverdueEntity, v2);
}

uint64_t sub_10009950C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100099608, 0, 0);
}

uint64_t sub_100099608()
{
  sub_1000AD798();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 160) = v1;
  sub_1000AD798();
  *(unsigned char *)(v0 + 193) = *(unsigned char *)(v0 + 192);
  if (qword_1000D49C0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1000E1F98;
  *(void *)(v0 + 168) = qword_1000E1F98;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = sub_100009F50(&qword_1000D86C8, &qword_1000D86D0);
  *uint64_t v3 = v0;
  v3[1] = sub_100099760;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v4);
}

uint64_t sub_100099760()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10000B584;
  }
  else {
    uint64_t v2 = sub_1000998B4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000998B4()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_1000AD798();
  uint64_t v7 = sub_1000ADB18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = sub_1000ADB58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_100098668();
  sub_10009A718();
  sub_1000AD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_1000AD738();
  sub_1000AD758();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100099B08()
{
  uint64_t v0 = sub_10000693C(&qword_1000D86F0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D49C0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000AD9F8();
  swift_release();
  sub_10009A718();
  sub_100009F50(&qword_1000D86F8, &qword_1000D86F0);
  sub_1000AD9E8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100099C70()
{
  if (qword_1000D49C0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100099CD0()
{
  unint64_t result = qword_1000D8560;
  if (!qword_1000D8560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8560);
  }
  return result;
}

unint64_t sub_100099D28()
{
  unint64_t result = qword_1000D8568;
  if (!qword_1000D8568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8568);
  }
  return result;
}

uint64_t sub_100099D7C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100099DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10009B3C0(a1, a2, a3, (void (*)(void))sub_100098668);
}

uint64_t sub_100099DC8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D49B0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1F68, a1);
}

uint64_t sub_100099E00@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D49B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000693C(&qword_1000D5118);
  uint64_t v3 = sub_10000EFA4(v2, (uint64_t)qword_1000E1F80);

  return sub_10000F060(v3, a1);
}

uint64_t sub_100099E7C(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000F290;
  return sub_100099274(a1, v5, v4);
}

uint64_t sub_100099F28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009C0CC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100099F50()
{
  return 0xD000000000000024;
}

unint64_t sub_100099F70()
{
  unint64_t result = qword_1000D8578;
  if (!qword_1000D8578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8578);
  }
  return result;
}

unint64_t sub_100099FC8()
{
  unint64_t result = qword_1000D8580;
  if (!qword_1000D8580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8580);
  }
  return result;
}

uint64_t sub_10009A01C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10009A03C, 0, 0);
}

uint64_t sub_10009A03C()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 16);
  id v2 = [self daemonUserDefaults];
  unsigned __int8 v3 = [v2 showRemindersAsOverdueWithShouldBypassCache:1];

  *uint64_t v1 = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10009A0E4(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10009A108, 0, 0);
}

uint64_t sub_10009A108()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self daemonUserDefaults];
  [v2 setShowRemindersAsOverdue:v1];

  unsigned __int8 v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10009A1A0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_1000ADCA8();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10009A230, 0, 0);
}

uint64_t sub_10009A230()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_10000693C(&qword_1000D8558);
  sub_1000ADC88();
  sub_100009F50(&qword_1000D86C8, &qword_1000D86D0);
  *uint64_t v1 = sub_1000ADB78();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_10009A34C()
{
  unint64_t result = qword_1000D8590;
  if (!qword_1000D8590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8590);
  }
  return result;
}

uint64_t sub_10009A3A0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10009A89C();
  *uint64_t v4 = v2;
  v4[1] = sub_10000C170;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10009A454()
{
  unint64_t result = qword_1000D85A0;
  if (!qword_1000D85A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D85A0);
  }
  return result;
}

unint64_t sub_10009A4AC()
{
  unint64_t result = qword_1000D85A8;
  if (!qword_1000D85A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D85A8);
  }
  return result;
}

unint64_t sub_10009A504()
{
  unint64_t result = qword_1000D85B0[0];
  if (!qword_1000D85B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D85B0);
  }
  return result;
}

uint64_t sub_10009A558(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10009A89C();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C444;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10009A60C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10009A89C();
  *uint64_t v4 = v2;
  v4[1] = sub_10000F28C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10009A6C0()
{
  unint64_t result = qword_1000D85C8;
  if (!qword_1000D85C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D85C8);
  }
  return result;
}

unint64_t sub_10009A718()
{
  unint64_t result = qword_1000D85D0;
  if (!qword_1000D85D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D85D0);
  }
  return result;
}

unint64_t sub_10009A770()
{
  unint64_t result = qword_1000D85D8;
  if (!qword_1000D85D8)
  {
    sub_100006F98(qword_1000D85E0);
    sub_10009A718();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D85D8);
  }
  return result;
}

uint64_t sub_10009A7E4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10009A34C();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C7D0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10009A89C()
{
  unint64_t result = qword_1000D85F8;
  if (!qword_1000D85F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D85F8);
  }
  return result;
}

uint64_t sub_10009A8F0()
{
  uint64_t v0 = qword_1000D8528;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10009A92C()
{
  unint64_t result = qword_1000D8600;
  if (!qword_1000D8600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8600);
  }
  return result;
}

unint64_t sub_10009A984()
{
  unint64_t result = qword_1000D8608;
  if (!qword_1000D8608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8608);
  }
  return result;
}

unint64_t sub_10009A9DC()
{
  unint64_t result = qword_1000D8610;
  if (!qword_1000D8610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8610);
  }
  return result;
}

unint64_t sub_10009AA34()
{
  unint64_t result = qword_1000D8618;
  if (!qword_1000D8618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8618);
  }
  return result;
}

unint64_t sub_10009AA8C()
{
  unint64_t result = qword_1000D8620;
  if (!qword_1000D8620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8620);
  }
  return result;
}

unint64_t sub_10009AAE4()
{
  unint64_t result = qword_1000D8628;
  if (!qword_1000D8628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8628);
  }
  return result;
}

uint64_t sub_10009AB38@<X0>(uint64_t *a1@<X8>)
{
  sub_100099FC8();
  uint64_t result = sub_1000AD778();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10009AB78@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D49A8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000E1F50, a1);
}

uint64_t sub_10009ABB0()
{
  return sub_100009F50(&qword_1000D8630, &qword_1000D8638);
}

uint64_t sub_10009ABEC(uint64_t a1)
{
  unint64_t v2 = sub_10009A504();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10009AC3C()
{
  unint64_t result = qword_1000D8640;
  if (!qword_1000D8640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8640);
  }
  return result;
}

uint64_t sub_10009AC94(uint64_t a1)
{
  unint64_t v2 = sub_10009AAE4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10009ACE4()
{
  unint64_t result = qword_1000D8648;
  if (!qword_1000D8648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8648);
  }
  return result;
}

uint64_t sub_10009AD38(uint64_t a1)
{
  if (qword_1000D4878 != -1) {
    swift_once();
  }
  sub_1000AF4D8((Swift::String)xmmword_1000E1E28);
  unint64_t v2 = sub_10009A504();

  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x80000001000B67A0, a1, v2);
}

uint64_t sub_10009ADF8()
{
  sub_10009C9FC();
  uint64_t v2 = sub_1000ADA88();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000F040(v3, v0, v2, v1);
}

unint64_t sub_10009AE90()
{
  unint64_t result = qword_1000D8658;
  if (!qword_1000D8658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8658);
  }
  return result;
}

uint64_t sub_10009AEE4(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E1FA0);
}

uint64_t sub_10009AF08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_1000AD998();
  uint64_t v13 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

unint64_t sub_10009B204()
{
  unint64_t result = qword_1000D8660;
  if (!qword_1000D8660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8660);
  }
  return result;
}

uint64_t sub_10009B258(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10009C954();
  unint64_t v5 = sub_10009C9FC();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10009B2C0()
{
  uint64_t v0 = qword_1000D8538;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10009B2FC()
{
  unint64_t result = qword_1000D8668;
  if (!qword_1000D8668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8668);
  }
  return result;
}

unint64_t sub_10009B354()
{
  unint64_t result = qword_1000D8670;
  if (!qword_1000D8670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8670);
  }
  return result;
}

uint64_t sub_10009B3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10009B3C0(a1, a2, a3, (void (*)(void))sub_10009B204);
}

uint64_t sub_10009B3C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009B414@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D49C8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1FA0, a1);
}

uint64_t sub_10009B450(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10009C954();
  unint64_t v7 = sub_10009C9A8();
  unint64_t v8 = sub_10009C9FC();
  *unint64_t v5 = v2;
  v5[1] = sub_10000D7DC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10009B524@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009C50C();
  *a1 = result;
  return result;
}

uint64_t sub_10009B54C(uint64_t a1)
{
  unint64_t v2 = sub_10009B204();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenShowAsOverdueDeepLink()
{
  return &type metadata for OpenShowAsOverdueDeepLink;
}

ValueMetadata *type metadata accessor for ShowAsOverdueEntity.ShowAsOverdueQuery()
{
  return &type metadata for ShowAsOverdueEntity.ShowAsOverdueQuery;
}

ValueMetadata *type metadata accessor for ShowAsOverdueEntity()
{
  return &type metadata for ShowAsOverdueEntity;
}

ValueMetadata *type metadata accessor for ShowAsOverdueEntity.UpdateIntent_value()
{
  return &type metadata for ShowAsOverdueEntity.UpdateIntent_value;
}

uint64_t sub_10009B5C8()
{
  return sub_100009F50(&qword_1000D8680, &qword_1000D8688);
}

uint64_t sub_10009B604()
{
  return sub_100009F50(&qword_1000D8690, &qword_1000D8688);
}

uint64_t sub_10009B640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D5120);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D5128);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D5130);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D5138);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10000693C(&qword_1000D5140);
  sub_10000693C(&qword_1000D5148);
  sub_100099FC8();
  sub_100009F50(&qword_1000D5150, &qword_1000D5140);
  sub_10000F0F4();
  sub_1000AF2B8();
  sub_1000AEB88();
  uint64_t v16 = sub_100009F50(&qword_1000D5160, &qword_1000D5120);
  sub_1000AEC38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  sub_1000AEB88();
  uint64_t v31 = v1;
  uint64_t v32 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  sub_1000AEBF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v18);
  uint64_t v31 = v18;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_1000AEC58();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  sub_1000AEC18();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v21);
}

uint64_t sub_10009BB70()
{
  uint64_t v0 = sub_1000AEB88();

  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_10009BBE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000ADC98();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  __chkstk_darwin(v8 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000ADCB8();
  uint64_t result = sub_1000AEEE8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

double sub_10009BDFC@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000ADC98();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000ADF68();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000AF468();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000ADCA8();
  __chkstk_darwin(v10 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  sub_1000ADCB8();
  v17[1] = sub_1000AEEE8();
  _OWORD v17[2] = v11;
  v17[3] = v12 & 1;
  void v17[4] = v13;
  BOOL v18 = (a1 & 1) == 0;
  sub_1000AEC68();
  double result = *(double *)&v19;
  long long v15 = v20;
  char v16 = v21;
  *(_OWORD *)a2 = v19;
  *(_OWORD *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 32) = v16;
  return result;
}

uint64_t sub_10009C0CC()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5088);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000ADA78();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000693C(&qword_1000D5070);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000ADCA8();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10000693C(&qword_1000D8698);
  sub_1000ADC88();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000AD748();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  BOOL v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10009A504();
  long long v19 = v23;
  uint64_t v24 = sub_1000AD7B8();
  sub_10000693C(&qword_1000D5090);
  sub_1000ADC88();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000AF5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000AD7C8();
  return v24;
}

uint64_t sub_10009C50C()
{
  uint64_t v0 = sub_1000ADA78();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000693C(&qword_1000D5070);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000ADC98();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000ADF68();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000AF468();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000ADCA8();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v21[1] = sub_10000693C(&qword_1000D8698);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v26 = 0;
  uint64_t v18 = sub_1000AD748();
  long long v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_10009A504();
  return sub_1000AD7B8();
}

unint64_t sub_10009C954()
{
  unint64_t result = qword_1000D86A0;
  if (!qword_1000D86A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D86A0);
  }
  return result;
}

unint64_t sub_10009C9A8()
{
  unint64_t result = qword_1000D86A8;
  if (!qword_1000D86A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D86A8);
  }
  return result;
}

unint64_t sub_10009C9FC()
{
  unint64_t result = qword_1000D86B0;
  if (!qword_1000D86B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D86B0);
  }
  return result;
}

uint64_t sub_10009CA50@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for ShowAsOverdueToggleControl()
{
  return &type metadata for ShowAsOverdueToggleControl;
}

uint64_t sub_10009CA6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009CA88(uint64_t a1)
{
  uint64_t v15 = sub_10000693C(&qword_1000D8808);
  uint64_t v17 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D8810);
  __chkstk_darwin(v4);
  sub_10007A6F0();
  sub_1000AD928();
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  sub_1000AD918(v18);
  swift_getKeyPath();
  sub_1000A0774();
  v13[1] = a1;
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v19._countAndFlagsBits = 0xD000000000000025;
  v19._object = (void *)0x80000001000B9650;
  sub_1000AD918(v19);
  sub_1000AD938();
  uint64_t v5 = sub_1000AD868();
  v13[0] = *(void *)(v17 + 8);
  uint64_t v16 = v5;
  v17 += 8;
  uint64_t v6 = v15;
  ((void (*)(char *, uint64_t))v13[0])(v3, v15);
  sub_1000AD928();
  v20._countAndFlagsBits = 0x206E727554;
  v20._object = (void *)0xE500000000000000;
  sub_1000AD918(v20);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v21._countAndFlagsBits = 0xD000000000000022;
  v21._object = (void *)0x80000001000B9680;
  sub_1000AD918(v21);
  sub_1000AD938();
  uint64_t v14 = sub_1000AD868();
  uint64_t v7 = (void (*)(char *, uint64_t))v13[0];
  ((void (*)(char *, uint64_t))v13[0])(v3, v6);
  sub_1000AD928();
  v22._countAndFlagsBits = 0x656B696C20642749;
  v22._object = (void *)0xEF206562206F7420;
  sub_1000AD918(v22);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v23._object = (void *)0x80000001000B96B0;
  v23._countAndFlagsBits = 0xD000000000000014;
  sub_1000AD918(v23);
  sub_1000AD938();
  uint64_t v8 = sub_1000AD868();
  v7(v3, v6);
  sub_10000693C(&qword_1000D8818);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000B0E40;
  uint64_t v10 = v14;
  *(void *)(v9 + 32) = v16;
  *(void *)(v9 + 40) = v10;
  *(void *)(v9 + 48) = v8;
  uint64_t v11 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10009CEBC(uint64_t a1)
{
  return sub_10009F5F0(a1, (uint64_t)&unk_1000B5530, (void (*)(void))sub_1000A0774, (void (*)(uint64_t))sub_10007A6F0);
}

uint64_t sub_10009CF04()
{
  uint64_t v0 = sub_1000AD888();
  uint64_t v1 = sub_1000AD888();
  uint64_t v2 = sub_1000AD888();
  sub_10000693C(&qword_1000D8708);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000B0E40;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = sub_1000AD878();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10009CFB0(uint64_t a1)
{
  uint64_t v20 = sub_10000693C(&qword_1000D87F0);
  uint64_t v22 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AD848();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D87F8);
  __chkstk_darwin(v8);
  sub_100094264();
  sub_1000AD928();
  v23._countAndFlagsBits = 0x20656B614DLL;
  v23._object = (void *)0xE500000000000000;
  sub_1000AD918(v23);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  sub_1000AD8F8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v24._countAndFlagsBits = 0x6320656764616220;
  v24._object = (void *)0xED000020746E756FLL;
  sub_1000AD918(v24);
  swift_getKeyPath();
  sub_1000A0774();
  uint64_t v17 = a1;
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v25._object = (void *)0x80000001000B95D0;
  v25._countAndFlagsBits = 0xD000000000000015;
  sub_1000AD918(v25);
  sub_1000AD938();
  uint64_t v9 = sub_1000AD868();
  Swift::String v18 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v21 = v9;
  v22 += 8;
  uint64_t v10 = v20;
  v18(v3, v20);
  sub_1000AD928();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  sub_1000AD918(v26);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v27._countAndFlagsBits = 0xD000000000000022;
  v27._object = (void *)0x80000001000B95F0;
  sub_1000AD918(v27);
  sub_1000AD938();
  uint64_t v19 = sub_1000AD868();
  uint64_t v11 = v18;
  v18(v3, v10);
  sub_1000AD928();
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  sub_1000AD918(v28);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v29._countAndFlagsBits = 0xD000000000000024;
  v29._object = (void *)0x80000001000B9620;
  sub_1000AD918(v29);
  sub_1000AD938();
  uint64_t v12 = sub_1000AD868();
  v11(v3, v10);
  sub_10000693C(&qword_1000D8800);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000B0E40;
  uint64_t v14 = v19;
  *(void *)(v13 + 32) = v21;
  *(void *)(v13 + 40) = v14;
  *(void *)(v13 + 48) = v12;
  uint64_t v15 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_10009D4BC(uint64_t a1)
{
  return sub_10009F5F0(a1, (uint64_t)&unk_1000B5508, (void (*)(void))sub_1000A0774, (void (*)(uint64_t))sub_100094264);
}

uint64_t sub_10009D504()
{
  return sub_10009F060();
}

uint64_t sub_10009D528(uint64_t a1)
{
  uint64_t v2 = sub_10000693C(&qword_1000D87D8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000693C(&qword_1000D87E0);
  __chkstk_darwin(v6);
  sub_1000A05D8();
  sub_1000AD928();
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  sub_1000AD918(v23);
  swift_getKeyPath();
  unint64_t v19 = sub_1000A0774();
  uint64_t v15 = a1;
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v24._countAndFlagsBits = 0xD000000000000035;
  v24._object = (void *)0x80000001000B94E0;
  sub_1000AD918(v24);
  sub_1000AD938();
  uint64_t v18 = sub_1000AD868();
  uint64_t v7 = v21;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v22 + 8);
  v22 += 8;
  v20(v5, v21);
  sub_1000AD928();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  sub_1000AD918(v25);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v26._countAndFlagsBits = 0xD000000000000031;
  v26._object = (void *)0x80000001000B9520;
  sub_1000AD918(v26);
  sub_1000AD938();
  uint64_t v17 = sub_1000AD868();
  uint64_t v8 = v20;
  v20(v5, v7);
  sub_1000AD928();
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  sub_1000AD918(v27);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v28._object = (void *)0x80000001000B9560;
  v28._countAndFlagsBits = 0xD00000000000002ELL;
  sub_1000AD918(v28);
  sub_1000AD938();
  uint64_t v16 = sub_1000AD868();
  uint64_t v9 = v21;
  v8(v5, v21);
  sub_1000AD928();
  v29._countAndFlagsBits = 8265;
  v29._object = (void *)0xE200000000000000;
  sub_1000AD918(v29);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v30._countAndFlagsBits = 0xD000000000000032;
  v30._object = (void *)0x80000001000B9590;
  sub_1000AD918(v30);
  sub_1000AD938();
  uint64_t v10 = sub_1000AD868();
  v20(v5, v9);
  sub_10000693C(&qword_1000D87E8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000B20A0;
  uint64_t v12 = v17;
  *(void *)(v11 + 32) = v18;
  *(void *)(v11 + 40) = v12;
  *(void *)(v11 + 48) = v16;
  *(void *)(v11 + 56) = v10;
  uint64_t v13 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10009DA18(uint64_t a1)
{
  return sub_10009F5F0(a1, (uint64_t)&unk_1000B54E0, (void (*)(void))sub_1000A0774, (void (*)(uint64_t))sub_1000A05D8);
}

uint64_t sub_10009DA60()
{
  uint64_t v0 = sub_1000AD888();
  uint64_t v1 = sub_1000AD888();
  uint64_t v2 = sub_1000AD888();
  uint64_t v3 = sub_1000AD888();
  sub_10000693C(&qword_1000D8708);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000B20A0;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = sub_1000AD878();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10009DB40()
{
  uint64_t v18 = sub_10000693C(&qword_1000D87C0);
  uint64_t v0 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000693C(&qword_1000D87C8);
  __chkstk_darwin(v3);
  sub_100098668();
  sub_1000AD928();
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  sub_1000AD918(v19);
  swift_getKeyPath();
  unint64_t v14 = sub_1000A0774();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v20._object = (void *)0x80000001000B94A0;
  uint64_t v16 = (void *)0x80000001000B94A0;
  v20._countAndFlagsBits = 0xD000000000000016;
  sub_1000AD918(v20);
  sub_1000AD938();
  uint64_t v17 = sub_1000AD868();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v0 + 8);
  uint64_t v13 = v0 + 8;
  uint64_t v4 = v18;
  v12(v2, v18);
  sub_1000AD928();
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  sub_1000AD918(v21);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v22._object = (void *)0x80000001000B94C0;
  v22._countAndFlagsBits = 0xD000000000000016;
  sub_1000AD918(v22);
  sub_1000AD938();
  uint64_t v15 = sub_1000AD868();
  uint64_t v5 = v12;
  v12(v2, v4);
  sub_1000AD928();
  v23._countAndFlagsBits = 0x656B696C20642749;
  v23._object = (void *)0xEC000000206F7420;
  sub_1000AD918(v23);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v24._countAndFlagsBits = 0xD000000000000016;
  v24._object = v16;
  sub_1000AD918(v24);
  sub_1000AD938();
  uint64_t v6 = sub_1000AD868();
  v5(v2, v18);
  sub_10000693C(&qword_1000D87D0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000B0E40;
  uint64_t v8 = v15;
  *(void *)(v7 + 32) = v17;
  *(void *)(v7 + 40) = v8;
  *(void *)(v7 + 48) = v6;
  uint64_t v9 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10009DF48(uint64_t a1)
{
  return sub_10009F5F0(a1, (uint64_t)&unk_1000B54B8, (void (*)(void))sub_1000A0774, (void (*)(uint64_t))sub_100098668);
}

uint64_t sub_10009DF90()
{
  return sub_10009F060();
}

uint64_t sub_10009DFAC(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D87A8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v40 = v1;
  uint64_t v41 = v2;
  __chkstk_darwin(v1);
  uint64_t v37 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AD848();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D87B0);
  __chkstk_darwin(v8);
  unint64_t v9 = sub_10000A0BC();
  sub_1000AD928();
  v42._countAndFlagsBits = 0x206E6F206E727554;
  v42._object = (void *)0xE800000000000000;
  sub_1000AD918(v42);
  swift_getKeyPath();
  unint64_t v33 = sub_1000A0774();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v43._object = (void *)0x80000001000B9460;
  Swift::String v26 = (void *)0x80000001000B9460;
  v43._countAndFlagsBits = 0xD000000000000011;
  sub_1000AD918(v43);
  uint64_t v10 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  uint64_t v32 = v5 + 104;
  uint64_t v39 = v11;
  unsigned int v35 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v30 = v4;
  v11(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  sub_1000AD8F8();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v31 = v5 + 8;
  char v38 = v12;
  v12(v7, v4);
  v44._countAndFlagsBits = 46;
  v44._object = (void *)0xE100000000000000;
  sub_1000AD918(v44);
  uint64_t v13 = v37;
  sub_1000AD938();
  unint64_t v29 = v9;
  uint64_t v28 = sub_1000AD868();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v41 + 8);
  v41 += 8;
  v36(v13, v40);
  sub_1000AD928();
  v45._countAndFlagsBits = 0x7420746E61772049;
  v45._object = (void *)0xEA0000000000206FLL;
  sub_1000AD918(v45);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v46._countAndFlagsBits = 0xD000000000000019;
  v46._object = (void *)0x80000001000B9480;
  Swift::String v24 = (void *)0x80000001000B9480;
  uint64_t v25 = 0xD000000000000019;
  sub_1000AD918(v46);
  uint64_t v14 = v30;
  v39(v7, v10, v30);
  sub_1000AD8F8();
  v38(v7, v14);
  v47._countAndFlagsBits = 46;
  v47._object = (void *)0xE100000000000000;
  sub_1000AD918(v47);
  uint64_t v15 = v37;
  sub_1000AD938();
  uint64_t v27 = sub_1000AD868();
  v36(v15, v40);
  sub_1000AD928();
  v48._countAndFlagsBits = 0x66666F206E727554;
  v48._object = (void *)0xE900000000000020;
  sub_1000AD918(v48);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v49._countAndFlagsBits = 0xD000000000000011;
  v49._object = v26;
  sub_1000AD918(v49);
  uint64_t v16 = v30;
  v39(v7, v35, v30);
  sub_1000AD8F8();
  v38(v7, v16);
  v50._countAndFlagsBits = 46;
  v50._object = (void *)0xE100000000000000;
  sub_1000AD918(v50);
  uint64_t v17 = v37;
  sub_1000AD938();
  Swift::String v26 = (void *)sub_1000AD868();
  uint64_t v18 = v36;
  v36(v17, v40);
  sub_1000AD928();
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  sub_1000AD918(v51);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v52._object = v24;
  v52._countAndFlagsBits = v25;
  sub_1000AD918(v52);
  v39(v7, v35, v16);
  sub_1000AD8F8();
  v38(v7, v16);
  v53._countAndFlagsBits = 46;
  v53._object = (void *)0xE100000000000000;
  sub_1000AD918(v53);
  sub_1000AD938();
  uint64_t v19 = sub_1000AD868();
  v18(v17, v40);
  sub_10000693C(&qword_1000D87B8);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1000B20A0;
  uint64_t v21 = v27;
  *(void *)(v20 + 32) = v28;
  *(void *)(v20 + 40) = v21;
  *(void *)(v20 + 48) = v26;
  *(void *)(v20 + 56) = v19;
  uint64_t v22 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_10009E6B8(uint64_t a1)
{
  return sub_10009F5F0(a1, (uint64_t)&unk_1000B5490, (void (*)(void))sub_1000A0774, (void (*)(uint64_t))sub_10000A0BC);
}

uint64_t sub_10009E700()
{
  return sub_10009E720();
}

uint64_t sub_10009E720()
{
  uint64_t v0 = sub_1000AD888();
  uint64_t v1 = sub_1000AD888();
  uint64_t v2 = sub_1000AD888();
  sub_10000693C(&qword_1000D8708);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000B0E40;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = sub_1000AD878();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10009E7C0(uint64_t a1)
{
  uint64_t v18 = a1;
  uint64_t v17 = sub_10000693C(&qword_1000D8788);
  uint64_t v1 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000AD848();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D8790);
  __chkstk_darwin(v8);
  sub_100011D98();
  sub_1000AD928();
  v19._object = (void *)0x80000001000B9440;
  v19._countAndFlagsBits = 0xD000000000000012;
  sub_1000AD918(v19);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  sub_1000AD8F8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20._countAndFlagsBits = 0x676E697474657320;
  v20._object = (void *)0xEA00000000002E73;
  sub_1000AD918(v20);
  sub_1000AD938();
  uint64_t v16 = sub_1000AD868();
  unint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v10 = v17;
  v9(v3, v17);
  sub_1000AD928();
  v21._countAndFlagsBits = 0x206E65704FLL;
  v21._object = (void *)0xE500000000000000;
  sub_1000AD918(v21);
  swift_getKeyPath();
  sub_100010E84();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v22._countAndFlagsBits = 0x676E697474657320;
  v22._object = (void *)0xEA00000000002E73;
  sub_1000AD918(v22);
  sub_1000AD938();
  uint64_t v11 = sub_1000AD868();
  v9(v3, v10);
  sub_10000693C(&qword_1000D8798);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000B0E30;
  *(void *)(v12 + 32) = v16;
  *(void *)(v12 + 40) = v11;
  uint64_t v13 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10009EB78(uint64_t a1)
{
  return sub_10009F5F0(a1, (uint64_t)&unk_1000B5468, (void (*)(void))sub_100010E84, (void (*)(uint64_t))sub_100011D98);
}

uint64_t sub_10009EBC0()
{
  uint64_t v0 = sub_1000AD888();
  uint64_t v1 = sub_1000AD888();
  uint64_t v2 = sub_1000AD888();
  uint64_t v3 = sub_1000AD888();
  sub_10000693C(&qword_1000D8708);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000B20A0;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = sub_1000AD878();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10009ECB8(uint64_t a1)
{
  v11[1] = a1;
  uint64_t v13 = sub_10000693C(&qword_1000D8788);
  uint64_t v1 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D8790);
  __chkstk_darwin(v4);
  sub_100011D98();
  sub_1000AD928();
  v14._object = (void *)0x80000001000B9400;
  v14._countAndFlagsBits = 0xD000000000000016;
  sub_1000AD918(v14);
  swift_getKeyPath();
  sub_100010E84();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  sub_1000AD918(v15);
  sub_1000AD938();
  uint64_t v12 = sub_1000AD868();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v6 = v13;
  v5(v3, v13);
  sub_1000AD928();
  v16._countAndFlagsBits = 0x20656D20776F6853;
  v16._object = (void *)0xEB0000000020796DLL;
  sub_1000AD918(v16);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  sub_1000AD918(v17);
  sub_1000AD938();
  uint64_t v7 = sub_1000AD868();
  v5(v3, v6);
  sub_10000693C(&qword_1000D8798);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000B0E30;
  *(void *)(v8 + 32) = v12;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10009EFE0(uint64_t a1)
{
  return sub_10009F5F0(a1, (uint64_t)&unk_1000B5468, (void (*)(void))sub_100010E84, (void (*)(uint64_t))sub_100011D98);
}

uint64_t sub_10009F028()
{
  return sub_10009F060();
}

uint64_t sub_10009F060()
{
  uint64_t v0 = sub_1000AD888();
  uint64_t v1 = sub_1000AD888();
  sub_10000693C(&qword_1000D8708);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000B0E30;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = sub_1000AD878();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10009F0E4(uint64_t a1)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D8770);
  __chkstk_darwin(v1);
  uint64_t v2 = sub_10000693C(&qword_1000D8778);
  uint64_t v16 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007D858();
  sub_1000AD8E8();
  uint64_t v20 = sub_1000AD868();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v3 + 8);
  v6(v5, v2);
  Swift::String v15 = v6;
  sub_1000AD8E8();
  uint64_t v19 = sub_1000AD868();
  v6(v5, v2);
  sub_1000AD928();
  v23._object = (void *)0x80000001000B9340;
  v23._countAndFlagsBits = 0xD000000000000022;
  sub_1000AD918(v23);
  swift_getKeyPath();
  unint64_t v21 = sub_10007CD38();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v24._countAndFlagsBits = 46;
  v24._object = (void *)0xE100000000000000;
  sub_1000AD918(v24);
  sub_1000AD938();
  uint64_t v18 = sub_1000AD868();
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  v15(v5, v16);
  sub_1000AD928();
  v25._countAndFlagsBits = 0xD000000000000036;
  v25._object = (void *)0x80000001000B9370;
  sub_1000AD918(v25);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  sub_1000AD918(v26);
  sub_1000AD938();
  uint64_t v17 = sub_1000AD868();
  v7(v5, v8);
  sub_1000AD928();
  v27._countAndFlagsBits = 0xD00000000000002ELL;
  v27._object = (void *)0x80000001000B93B0;
  sub_1000AD918(v27);
  swift_getKeyPath();
  sub_1000AD838();
  swift_release();
  sub_1000AD908();
  swift_release();
  v28._countAndFlagsBits = 46;
  v28._object = (void *)0xE100000000000000;
  sub_1000AD918(v28);
  sub_1000AD938();
  uint64_t v9 = sub_1000AD868();
  v7(v5, v8);
  sub_10000693C(&qword_1000D8780);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000B53B0;
  uint64_t v11 = v19;
  *(void *)(v10 + 32) = v20;
  *(void *)(v10 + 40) = v11;
  uint64_t v12 = v17;
  *(void *)(v10 + 48) = v18;
  *(void *)(v10 + 56) = v12;
  *(void *)(v10 + 64) = v9;
  uint64_t v13 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10009F5A8(uint64_t a1)
{
  return sub_10009F5F0(a1, (uint64_t)&unk_1000B5440, (void (*)(void))sub_10007CD38, (void (*)(uint64_t))sub_10007D858);
}

uint64_t sub_10009F5F0(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v6 = sub_1000AD8D8();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  a3();
  sub_1000AD838();
  uint64_t v10 = swift_release();
  a4(v10);
  sub_1000AD8C8();
  uint64_t v11 = sub_1000AD8B8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10000693C(&qword_1000D8768);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000B0270;
  *(void *)(v12 + 32) = v11;
  uint64_t v13 = sub_1000AD8A8();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10009F768()
{
  return sub_10009E720();
}

uint64_t sub_10009F78C()
{
  uint64_t v0 = sub_10000693C(&qword_1000D8758);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009B204();
  sub_1000AD8E8();
  uint64_t v4 = sub_1000AD868();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10000693C(&qword_1000D8760);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000B0270;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10009F8E8()
{
  uint64_t v0 = sub_10000693C(&qword_1000D8748);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100096DE8();
  sub_1000AD8E8();
  uint64_t v4 = sub_1000AD868();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10000693C(&qword_1000D8750);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000B0270;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10009FA40()
{
  uint64_t v0 = sub_10000693C(&qword_1000D8738);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A062C();
  sub_1000AD8E8();
  uint64_t v4 = sub_1000AD868();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10000693C(&qword_1000D8740);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000B0270;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10009FB98()
{
  uint64_t v0 = sub_10000693C(&qword_1000D8728);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D3B0();
  sub_1000AD8E8();
  uint64_t v4 = sub_1000AD868();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10000693C(&qword_1000D8730);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000B0270;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_1000AD858();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10009FCF0()
{
  return sub_10009FD28();
}

uint64_t sub_10009FD0C()
{
  return sub_10009FD28();
}

uint64_t sub_10009FD28()
{
  uint64_t v0 = sub_1000AD888();
  sub_10000693C(&qword_1000D8708);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000B0270;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = sub_1000AD878();
  swift_bridgeObjectRelease();
  return v2;
}

ValueMetadata *type metadata accessor for RemindersSettingsAssistantIntentsProvider()
{
  return &type metadata for RemindersSettingsAssistantIntentsProvider;
}

uint64_t sub_10009FDA8()
{
  uint64_t v0 = sub_1000AD968();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10007E718();
  uint64_t v29 = v4;
  sub_10007A6F0();
  sub_1000AD978();
  uint64_t v27 = sub_1000AD958();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  uint64_t v28 = sub_100097CA8();
  uint64_t v29 = v6;
  sub_100094264();
  sub_1000AD978();
  uint64_t v26 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_1000A4238();
  uint64_t v29 = v7;
  sub_1000A05D8();
  sub_1000AD978();
  uint64_t v25 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_10009C0CC();
  uint64_t v29 = v8;
  sub_100098668();
  sub_1000AD978();
  uint64_t v24 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_10000E620();
  uint64_t v29 = v9;
  sub_10000A0BC();
  sub_1000AD978();
  uint64_t v23 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_100012FCC();
  sub_100011D98();
  sub_1000AD978();
  uint64_t v22 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_100012FCC();
  sub_1000AD978();
  uint64_t v10 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_10007EB58();
  sub_10007D858();
  sub_1000AD978();
  uint64_t v11 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_10009C50C();
  sub_10009B204();
  sub_1000AD978();
  uint64_t v12 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_1000980E8();
  sub_100096DE8();
  sub_1000AD978();
  uint64_t v13 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_1000A4678();
  sub_1000A062C();
  sub_1000AD978();
  uint64_t v14 = sub_1000AD958();
  v5(v3, v0);
  uint64_t v28 = sub_10000EA60();
  sub_10000D3B0();
  sub_1000AD978();
  uint64_t v15 = sub_1000AD958();
  v5(v3, v0);
  sub_10000693C(&qword_1000D8720);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000B53C0;
  uint64_t v17 = v26;
  *(void *)(v16 + 32) = v27;
  *(void *)(v16 + 40) = v17;
  uint64_t v18 = v24;
  *(void *)(v16 + 48) = v25;
  *(void *)(v16 + 56) = v18;
  uint64_t v19 = v22;
  *(void *)(v16 + 64) = v23;
  *(void *)(v16 + 72) = v19;
  *(void *)(v16 + 80) = v10;
  *(void *)(v16 + 88) = v11;
  *(void *)(v16 + 96) = v12;
  *(void *)(v16 + 104) = v13;
  *(void *)(v16 + 112) = v14;
  *(void *)(v16 + 120) = v15;
  uint64_t v20 = sub_1000AD948();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1000A0444()
{
  uint64_t v0 = sub_1000AD828();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007D858();
  sub_1000AD818();
  uint64_t v4 = sub_1000AD808();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_10007A6F0();
  sub_1000AD818();
  uint64_t v6 = sub_1000AD808();
  v5(v3, v0);
  sub_10000693C(&qword_1000D8700);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000B0E30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = sub_1000AD7F8();
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1000A05D8()
{
  unint64_t result = qword_1000D8710;
  if (!qword_1000D8710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8710);
  }
  return result;
}

unint64_t sub_1000A062C()
{
  unint64_t result = qword_1000D8718;
  if (!qword_1000D8718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8718);
  }
  return result;
}

uint64_t sub_1000A0680@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000AD798();
  *a1 = v3;
  return result;
}

uint64_t sub_1000A06BC()
{
  return sub_1000AD7A8();
}

uint64_t sub_1000A06F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000AD798();
  *a1 = v3;
  return result;
}

uint64_t sub_1000A0734()
{
  return sub_1000AD7A8();
}

unint64_t sub_1000A0774()
{
  unint64_t result = qword_1000D87A0;
  if (!qword_1000D87A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D87A0);
  }
  return result;
}

uint64_t sub_1000A07E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000AD798();
  *a1 = v3;
  return result;
}

uint64_t sub_1000A0824()
{
  return sub_1000AD7A8();
}

uint64_t sub_1000A0860()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for TTRNewWidgetRouter()
{
  return self;
}

uint64_t sub_1000A0898()
{
  return sub_100009F50(&qword_1000D88D8, &qword_1000D88E0);
}

uint64_t sub_1000A08D4()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000ADB48();
  sub_10000EFDC(v10, qword_1000E1FB8);
  sub_10000EFA4(v10, (uint64_t)qword_1000E1FB8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000ADB38();
}

uint64_t sub_1000A0BAC@<X0>(uint64_t a1@<X8>)
{
  long long v22[2] = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D50B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v24 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v3 - 8);
  uint64_t v23 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  v22[1] = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v22[0] = (char *)v22 - v15;
  sub_1000AF458();
  sub_1000ADF58();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v17(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  uint64_t v18 = v23;
  sub_1000ADCB8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  uint64_t v19 = v24;
  sub_1000ADA18();
  uint64_t v20 = sub_1000ADA28();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_10000693C(&qword_1000D50B8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000B0270;
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  sub_1000ADCB8();
  sub_1000AF458();
  sub_1000ADF58();
  v17(v8, v16, v5);
  sub_1000ADCB8();
  return sub_1000ADA38();
}

uint64_t sub_1000A10D0(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E1FD0);
}

uint64_t sub_1000A10F4()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_1000ADC98();
  uint64_t v3 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10000693C(&qword_1000D5118);
  sub_10000EFDC(v10, qword_1000E1FE8);
  uint64_t v11 = sub_10000EFA4(v10, (uint64_t)qword_1000E1FE8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v14[0]);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  sub_1000AD998();
  uint64_t v12 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
}

uint64_t sub_1000A1418()
{
  uint64_t result = swift_getKeyPath();
  qword_1000E2000 = result;
  return result;
}

uint64_t sub_1000A1440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_10000693C(&qword_1000D50E8);
  v3[9] = swift_task_alloc();
  sub_10000693C(&qword_1000D50F0);
  v3[10] = swift_task_alloc();
  sub_10000693C(&qword_1000D8A60);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_1000AD748();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_10000693C(&qword_1000D8A68);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_1000A1604, 0, 0);
}

uint64_t sub_1000A1604()
{
  sub_1000AD798();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  unint64_t v2 = sub_1000A26CC();
  *uint64_t v1 = v0;
  v1[1] = sub_1000A16D8;
  uint64_t v3 = *(void *)(v0 + 144);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v0 + 16, sub_1000A1CD0, 0, &type metadata for MuteNotificationsEntity, v2);
}

uint64_t sub_1000A16D8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000A17D4, 0, 0);
}

uint64_t sub_1000A17D4()
{
  sub_1000AD798();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 160) = v1;
  sub_1000AD798();
  *(unsigned char *)(v0 + 193) = *(unsigned char *)(v0 + 192);
  if (qword_1000D49E8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1000E2000;
  *(void *)(v0 + 168) = qword_1000E2000;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = sub_100009F50(&qword_1000D8A48, &qword_1000D8A50);
  *uint64_t v3 = v0;
  v3[1] = sub_1000A192C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v4);
}

uint64_t sub_1000A192C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10000B584;
  }
  else {
    uint64_t v2 = sub_1000A1A80;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000A1A80()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_1000AD798();
  uint64_t v7 = sub_1000ADB18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = sub_1000ADB58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_1000A05D8();
  sub_1000A28E0();
  sub_1000AD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_1000AD738();
  sub_1000AD758();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1000A1CD4()
{
  uint64_t v0 = sub_10000693C(&qword_1000D8A70);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D49E8 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000AD9F8();
  swift_release();
  sub_1000A28E0();
  sub_100009F50(&qword_1000D8A78, &qword_1000D8A70);
  sub_1000AD9E8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000A1E3C()
{
  if (qword_1000D49E8 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1000A1E9C()
{
  unint64_t result = qword_1000D88E8;
  if (!qword_1000D88E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D88E8);
  }
  return result;
}

unint64_t sub_1000A1EF4()
{
  unint64_t result = qword_1000D88F0;
  if (!qword_1000D88F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D88F0);
  }
  return result;
}

uint64_t sub_1000A1F48()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1000A1F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000A3534(a1, a2, a3, (void (*)(void))sub_1000A05D8);
}

uint64_t sub_1000A1F94@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D49D8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E1FD0, a1);
}

uint64_t sub_1000A1FCC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D49E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000693C(&qword_1000D5118);
  uint64_t v3 = sub_10000EFA4(v2, (uint64_t)qword_1000E1FE8);

  return sub_10000F060(v3, a1);
}

uint64_t sub_1000A2048(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000F290;
  return sub_1000A1440(a1, v5, v4);
}

uint64_t sub_1000A20F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A4238();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1000A211C()
{
  return 0xD000000000000028;
}

unint64_t sub_1000A213C()
{
  unint64_t result = qword_1000D8900;
  if (!qword_1000D8900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8900);
  }
  return result;
}

unint64_t sub_1000A2194()
{
  unint64_t result = qword_1000D8908;
  if (!qword_1000D8908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8908);
  }
  return result;
}

uint64_t sub_1000A21E8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000A2208, 0, 0);
}

uint64_t sub_1000A2208()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self daemonUserDefaults];
  unsigned __int8 v3 = [v2 enableAssignmentNotifications];

  *uint64_t v1 = v3 ^ 1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000A22B0(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1000A22D4, 0, 0);
}

uint64_t sub_1000A22D4()
{
  char v1 = *(unsigned char *)(v0 + 16);
  id v2 = [self daemonUserDefaults];
  [v2 setEnableAssignmentNotifications:(v1 & 1) == 0];

  unsigned __int8 v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000A2370(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_1000ADCA8();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1000A2400, 0, 0);
}

uint64_t sub_1000A2400()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_10000693C(&qword_1000D88E0);
  sub_1000ADC88();
  sub_100009F50(&qword_1000D8A48, &qword_1000D8A50);
  *uint64_t v1 = sub_1000ADB78();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_1000A2514()
{
  unint64_t result = qword_1000D8918;
  if (!qword_1000D8918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8918);
  }
  return result;
}

uint64_t sub_1000A2568(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000A2A64();
  *uint64_t v4 = v2;
  v4[1] = sub_10000C170;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1000A261C()
{
  unint64_t result = qword_1000D8928;
  if (!qword_1000D8928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8928);
  }
  return result;
}

unint64_t sub_1000A2674()
{
  unint64_t result = qword_1000D8930;
  if (!qword_1000D8930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8930);
  }
  return result;
}

unint64_t sub_1000A26CC()
{
  unint64_t result = qword_1000D8938[0];
  if (!qword_1000D8938[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D8938);
  }
  return result;
}

uint64_t sub_1000A2720(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000A2A64();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C444;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1000A27D4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000A2A64();
  *uint64_t v4 = v2;
  v4[1] = sub_10000F28C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1000A2888()
{
  unint64_t result = qword_1000D8950;
  if (!qword_1000D8950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8950);
  }
  return result;
}

unint64_t sub_1000A28E0()
{
  unint64_t result = qword_1000D8958;
  if (!qword_1000D8958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8958);
  }
  return result;
}

unint64_t sub_1000A2938()
{
  unint64_t result = qword_1000D8960;
  if (!qword_1000D8960)
  {
    sub_100006F98(qword_1000D8968);
    sub_1000A28E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8960);
  }
  return result;
}

uint64_t sub_1000A29AC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000A2514();
  *unint64_t v5 = v2;
  v5[1] = sub_10000C7D0;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_1000A2A64()
{
  unint64_t result = qword_1000D8980;
  if (!qword_1000D8980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8980);
  }
  return result;
}

uint64_t sub_1000A2AB8()
{
  uint64_t v0 = qword_1000D88B8;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1000A2AF4()
{
  unint64_t result = qword_1000D8988;
  if (!qword_1000D8988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8988);
  }
  return result;
}

unint64_t sub_1000A2B4C()
{
  unint64_t result = qword_1000D8990;
  if (!qword_1000D8990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8990);
  }
  return result;
}

unint64_t sub_1000A2BA4()
{
  unint64_t result = qword_1000D8998;
  if (!qword_1000D8998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8998);
  }
  return result;
}

unint64_t sub_1000A2BFC()
{
  unint64_t result = qword_1000D89A0;
  if (!qword_1000D89A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D89A0);
  }
  return result;
}

unint64_t sub_1000A2C54()
{
  unint64_t result = qword_1000D89A8;
  if (!qword_1000D89A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D89A8);
  }
  return result;
}

unint64_t sub_1000A2CAC()
{
  unint64_t result = qword_1000D89B0;
  if (!qword_1000D89B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D89B0);
  }
  return result;
}

uint64_t sub_1000A2D00@<X0>(uint64_t *a1@<X8>)
{
  sub_1000A2194();
  uint64_t result = sub_1000AD778();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000A2D40@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D49D0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000E1FB8, a1);
}

uint64_t sub_1000A2D78()
{
  return sub_100009F50(&qword_1000D89B8, &qword_1000D89C0);
}

uint64_t sub_1000A2DB4(uint64_t a1)
{
  unint64_t v2 = sub_1000A26CC();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1000A2E04()
{
  unint64_t result = qword_1000D89C8;
  if (!qword_1000D89C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D89C8);
  }
  return result;
}

uint64_t sub_1000A2E5C(uint64_t a1)
{
  unint64_t v2 = sub_1000A2CAC();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1000A2EAC()
{
  unint64_t result = qword_1000D89D0;
  if (!qword_1000D89D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D89D0);
  }
  return result;
}

uint64_t sub_1000A2F00(uint64_t a1)
{
  if (qword_1000D4870 != -1) {
    swift_once();
  }
  sub_1000AF4D8((Swift::String)xmmword_1000E1E18);
  unint64_t v2 = sub_1000A26CC();

  return _EntityURLRepresentation.init(_:)(0xD000000000000041, 0x80000001000B67A0, a1, v2);
}

uint64_t sub_1000A2FC0()
{
  sub_1000A4B68();
  uint64_t v2 = sub_1000ADA88();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000F040(v3, v0, v2, v1);
}

unint64_t sub_1000A3058()
{
  unint64_t result = qword_1000D89E0;
  if (!qword_1000D89E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D89E0);
  }
  return result;
}

uint64_t sub_1000A30AC(uint64_t a1)
{
  return sub_10000D008(a1, qword_1000E2008);
}

uint64_t sub_1000A30D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000ADC98();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000ADF68();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000AF468();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000ADCA8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_1000ADCB8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_1000AD998();
  uint64_t v13 = sub_1000AD988();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t sub_1000A33CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000A4AC0();
  unint64_t v5 = sub_1000A4B68();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_1000A3434()
{
  uint64_t v0 = qword_1000D88C8;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1000A3470()
{
  unint64_t result = qword_1000D89E8;
  if (!qword_1000D89E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D89E8);
  }
  return result;
}

unint64_t sub_1000A34C8()
{
  unint64_t result = qword_1000D89F0;
  if (!qword_1000D89F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D89F0);
  }
  return result;
}

uint64_t sub_1000A351C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000A3534(a1, a2, a3, (void (*)(void))sub_1000A062C);
}

uint64_t sub_1000A3534(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A3588@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D650(&qword_1000D49F0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E2008, a1);
}

uint64_t sub_1000A35C4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000A4AC0();
  unint64_t v7 = sub_1000A4B14();
  unint64_t v8 = sub_1000A4B68();
  *unint64_t v5 = v2;
  v5[1] = sub_10000D7DC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_1000A3698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A4678();
  *a1 = result;
  return result;
}

uint64_t sub_1000A36C0(uint64_t a1)
{
  unint64_t v2 = sub_1000A062C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMuteNotificationsDeepLink()
{
  return &type metadata for OpenMuteNotificationsDeepLink;
}

ValueMetadata *type metadata accessor for MuteNotificationsEntity.MuteNotificationsQuery()
{
  return &type metadata for MuteNotificationsEntity.MuteNotificationsQuery;
}

ValueMetadata *type metadata accessor for MuteNotificationsEntity()
{
  return &type metadata for MuteNotificationsEntity;
}

ValueMetadata *type metadata accessor for MuteNotificationsEntity.UpdateIntent_value()
{
  return &type metadata for MuteNotificationsEntity.UpdateIntent_value;
}

uint64_t sub_1000A373C()
{
  return sub_100009F50(&qword_1000D8A00, &qword_1000D8A08);
}

uint64_t sub_1000A3778()
{
  return sub_100009F50(&qword_1000D8A10, &qword_1000D8A08);
}

uint64_t sub_1000A37B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_10000693C(&qword_1000D5120);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000693C(&qword_1000D5128);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D5130);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000693C(&qword_1000D5138);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10000693C(&qword_1000D5140);
  sub_10000693C(&qword_1000D5148);
  sub_1000A2194();
  sub_100009F50(&qword_1000D5150, &qword_1000D5140);
  sub_10000F0F4();
  sub_1000AF2B8();
  sub_1000AEB88();
  uint64_t v16 = sub_100009F50(&qword_1000D5160, &qword_1000D5120);
  sub_1000AEC38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  sub_1000AEB88();
  uint64_t v31 = v1;
  uint64_t v32 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  sub_1000AEBF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v18);
  uint64_t v31 = v18;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_1000AEC58();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  sub_1000AEC18();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v21);
}

uint64_t sub_1000A3CE4()
{
  uint64_t v0 = sub_1000AEB88();

  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_1000A3D54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000ADC98();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000ADF68();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000AF468();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000ADCA8();
  __chkstk_darwin(v8 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1000ADCB8();
  uint64_t result = sub_1000AEEE8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

double sub_1000A3F68@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000ADC98();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000ADF68();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000AF468();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000ADCA8();
  __chkstk_darwin(v10 - 8);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  sub_1000ADCB8();
  v17[1] = sub_1000AEEE8();
  _OWORD v17[2] = v11;
  v17[3] = v12 & 1;
  void v17[4] = v13;
  BOOL v18 = (a1 & 1) == 0;
  sub_1000AEC68();
  double result = *(double *)&v19;
  long long v15 = v20;
  char v16 = v21;
  *(_OWORD *)a2 = v19;
  *(_OWORD *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 32) = v16;
  return result;
}

uint64_t sub_1000A4238()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5088);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000ADA78();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000693C(&qword_1000D5070);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000ADCA8();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_10000693C(&qword_1000D8A18);
  sub_1000ADC88();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_1000AD748();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  BOOL v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000A26CC();
  long long v19 = v23;
  uint64_t v24 = sub_1000AD7B8();
  sub_10000693C(&qword_1000D5090);
  sub_1000ADC88();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_1000AF5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_1000AD7C8();
  return v24;
}

uint64_t sub_1000A4678()
{
  uint64_t v0 = sub_1000ADA78();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000693C(&qword_1000D5070);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000ADC98();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000ADF68();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000AF468();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000ADCA8();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v21[1] = sub_10000693C(&qword_1000D8A18);
  sub_1000AF458();
  sub_1000ADF58();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000ADCB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v26 = 0;
  uint64_t v18 = sub_1000AD748();
  long long v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_1000A26CC();
  return sub_1000AD7B8();
}

unint64_t sub_1000A4AC0()
{
  unint64_t result = qword_1000D8A20;
  if (!qword_1000D8A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8A20);
  }
  return result;
}

unint64_t sub_1000A4B14()
{
  unint64_t result = qword_1000D8A28;
  if (!qword_1000D8A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8A28);
  }
  return result;
}

unint64_t sub_1000A4B68()
{
  unint64_t result = qword_1000D8A30;
  if (!qword_1000D8A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8A30);
  }
  return result;
}

uint64_t sub_1000A4BBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for MuteNotificationsToggleControl()
{
  return &type metadata for MuteNotificationsToggleControl;
}

uint64_t sub_1000A4BD8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000A4BF4(uint64_t *a1@<X8>)
{
  Swift::String v50 = a1;
  uint64_t v1 = type metadata accessor for TTRTodayComplicationWidgetProvider();
  uint64_t v2 = __chkstk_darwin(v1);
  v49[0] = (uint64_t)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v52 = (uint64_t)v49 - v4;
  uint64_t v5 = sub_1000AE588();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000693C(&qword_1000D78A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [objc_allocWithZone((Class)REMStore) init];
  uint64_t v13 = enum case for REMRemindersListDataView.SortingDirection.ascending(_:);
  uint64_t v14 = sub_1000AE668();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v11, v13, v14);
  uint64_t v15 = enum case for REMRemindersListDataView.SortingStyle.displayDate(_:);
  uint64_t v16 = sub_1000AE538();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v11, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
  sub_1000AE1D8();
  id v18 = v12;
  long long v19 = (void *)sub_1000AE1C8();
  type metadata accessor for TTRNewWidgetInteractor(0);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = 0x4000000000000000;
  v20[3] = v18;
  v20[4] = v19;
  sub_1000913D8((uint64_t)v11, (uint64_t)v20 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_sortingStyle);
  type metadata accessor for TTRNewWidgetInteractor.CompletedCache();
  uint64_t v21 = swift_allocObject();
  id v22 = v18;
  id v23 = v19;
  swift_defaultActor_initialize();
  *(void *)(v21 + 112) = 0x4000000000000000;
  *(void *)(v21 + 120) = &_swiftEmptyDictionarySingleton;
  uint64_t v24 = v50;
  sub_100091440((uint64_t)v11);
  *(void *)((char *)v20 + OBJC_IVAR____TtC24RemindersWidgetExtension22TTRNewWidgetInteractor_completedCache) = v21;

  uint64_t v25 = type metadata accessor for TTRNewWidgetRouter();
  uint64_t v26 = swift_allocObject();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for REMRemindersListDataView.FetchSubtasks.on(_:), v5);
  uint64_t v55 = 0;
  memset(v54, 0, sizeof(v54));
  v53[3] = v25;
  v53[4] = &off_1000D1400;
  v53[0] = v26;
  type metadata accessor for TTRNewWidgetPresenter(0);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = sub_100091A7C((uint64_t)v53, v25);
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)v49 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v31 + 16))(v30);
  uint64_t v32 = *v30;
  swift_retain();
  uint64_t v51 = v26;
  swift_retain();
  uint64_t v33 = sub_1000A5A30((uint64_t)v20, v32, (uint64_t)v8, (uint64_t)v54, 1, 1, v27);
  sub_100023B0C((uint64_t)v53);
  *uint64_t v24 = v33;
  v49[1] = v1;
  uint64_t v34 = (char *)v24 + *(int *)(v1 + 20);
  uint64_t v35 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  uint64_t v36 = sub_1000AE2D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
  uint64_t v37 = enum case for REMNavigationSpecifier.today(_:);
  uint64_t v38 = sub_1000AE338();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v34, v37, v38);
  uint64_t v39 = qword_1000D49F8;
  swift_retain();
  if (v39 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_1000AE768();
  sub_10000EFA4(v40, (uint64_t)qword_1000D8A80);
  uint64_t v41 = v52;
  sub_1000A5B94((uint64_t)v24, v52);
  Swift::String v42 = sub_1000AE758();
  os_log_type_t v43 = sub_1000AF718();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    *(void *)&v54[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136446466;
    v53[0] = &type metadata for TTRTodayComplicationWidgetAssembly;
    sub_10000693C(&qword_1000D8A98);
    uint64_t v45 = sub_1000AF4B8();
    Swift::String v50 = (uint64_t *)v22;
    v53[0] = sub_1000A53D8(v45, v46, (uint64_t *)v54);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    sub_1000A5B94(v41, v49[0]);
    uint64_t v47 = sub_1000AF4B8();
    v53[0] = sub_1000A53D8(v47, v48, (uint64_t *)v54);
    sub_1000AF808();
    swift_bridgeObjectRelease();
    sub_1000A5BF8(v41);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "%{public}s: Created provider %s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();

    sub_1000A5BF8(v41);
  }
}

uint64_t sub_1000A5310()
{
  uint64_t v0 = sub_1000AE768();
  sub_10000EFDC(v0, qword_1000D8A80);
  uint64_t v1 = sub_10000EFA4(v0, (uint64_t)qword_1000D8A80);
  if (qword_1000D4888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000EFA4(v0, (uint64_t)qword_1000E1E48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000A53D8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000A54AC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000A5C54((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000A5C54((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100023B0C((uint64_t)v12);
  return v7;
}

uint64_t sub_1000A54AC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1000AF818();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000A5668(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1000AF8E8();
  if (!v8)
  {
    sub_1000AF988();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1000AF9D8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000A5668(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000A5700(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000A58E0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1000A58E0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1000A5700(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000A5878(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1000AF8C8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1000AF988();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1000AF4E8();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_1000AF9D8();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1000AF988();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000A5878(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000693C(&qword_1000D8AA0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000A58E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000693C(&qword_1000D8AA0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A5A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v20 = type metadata accessor for TTRNewWidgetRouter();
  uint64_t v21 = &off_1000D1400;
  *(void *)&long long v19 = a2;
  uint64_t v14 = (uint64_t *)(a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_moreFormatString);
  v23._object = (void *)0x80000001000B9E20;
  v22._countAndFlagsBits = 0x65726F4D2040252BLL;
  v22._object = (void *)0xE800000000000000;
  v23._countAndFlagsBits = 0xD00000000000001BLL;
  *uint64_t v14 = sub_1000AE128(v22, v23);
  v14[1] = v15;
  *(_OWORD *)(a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_timeDelta) = xmmword_1000B5E30;
  *(void *)(a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_overlapDelta) = 0x406E000000000000;
  *(void *)(a7 + 16) = a1;
  *(void *)(a7 + 24) = &off_1000D04A8;
  sub_100006A40(&v19, a7 + 32);
  uint64_t v16 = a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_fetchSubtasks;
  uint64_t v17 = sub_1000AE588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a3, v17);
  sub_1000A5CB0(a4, a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_shareeInfoStyle);
  *(unsigned char *)(a7 + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForBaseReminder) = a5;
  *(unsigned char *)(a7
           + OBJC_IVAR____TtC24RemindersWidgetExtension21TTRNewWidgetPresenter_displayDateStyleForInterestingReminder) = a6;
  return a7;
}

uint64_t sub_1000A5B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTodayComplicationWidgetProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A5BF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRTodayComplicationWidgetProvider();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000A5C54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000A5CB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

ValueMetadata *type metadata accessor for TTRTodayComplicationWidgetAssembly()
{
  return &type metadata for TTRTodayComplicationWidgetAssembly;
}

uint64_t sub_1000A5D1C()
{
  uint64_t v0 = sub_1000AE768();
  sub_10000EFDC(v0, qword_1000D8AA8);
  uint64_t v1 = sub_10000EFA4(v0, (uint64_t)qword_1000D8AA8);
  if (qword_1000D4888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000EFA4(v0, (uint64_t)qword_1000E1E48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000A5DE4()
{
  uint64_t v0 = sub_1000ADCA8();
  sub_10000EFDC(v0, qword_1000E2020);
  sub_10000EFA4(v0, (uint64_t)qword_1000E2020);
  return sub_1000ADC88();
}

uint64_t sub_1000A5E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  uint64_t v5 = sub_1000ADF08();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_1000A5F0C, 0, 0);
}

uint64_t sub_1000A5F0C()
{
  if (qword_1000D4A00 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000AE768();
  sub_10000EFA4(v1, (uint64_t)qword_1000D8AA8);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v2 = sub_1000AE758();
  os_log_type_t v3 = sub_1000AF718();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412546;
    sub_1000AD798();
    uint64_t v6 = *(void *)(v0 + 80);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 104) = v6;
    sub_1000AF808();
    *uint64_t v5 = v6;
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v4 + 12) = 1024;
    sub_1000AD798();
    swift_release();
    swift_release();
    swift_release();
    *(_DWORD *)(v0 + 192) = *(unsigned __int8 *)(v0 + 197);
    sub_1000AF808();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "ReminderSetCompletedIntent reminder %@ setting completed %{BOOL}d", (uint8_t *)v4, 0x12u);
    sub_10000693C(&qword_1000D8048);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_release_n();
    swift_release_n();
  }

  sub_1000A9904();
  sub_1000AD608();
  sub_100024D3C((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1000AD798();
  uint64_t v7 = *(void *)(v0 + 56);
  *(void *)(v0 + 168) = v7;
  swift_bridgeObjectRelease();
  sub_1000AD798();
  char v8 = *(unsigned char *)(v0 + 196);
  sub_1000ADEF8();
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v9;
  *int64_t v9 = v0;
  v9[1] = sub_1000A625C;
  uint64_t v10 = *(void *)(v0 + 160);
  return sub_10006DEC0(v7, v8, v10);
}

uint64_t sub_1000A625C()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 168);
  uint64_t v3 = *(void *)(*(void *)v1 + 160);
  uint64_t v4 = *(void *)(*(void *)v1 + 152);
  uint64_t v5 = *(void *)(*(void *)v1 + 144);
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  if (v0) {
    uint64_t v6 = sub_1000A6468;
  }
  else {
    uint64_t v6 = sub_1000A63EC;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1000A63EC()
{
  sub_100023B0C(v0 + 16);
  sub_1000AD768();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000A6468()
{
  sub_100023B0C(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000A64D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A66D4(&qword_1000D4A08, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000E2020, a1);
}

uint64_t sub_1000A6514(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10000F290;
  return sub_1000A5E48(a1, v4, v5, v6);
}

uint64_t sub_1000A65C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A9480();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1000A65F4(uint64_t a1)
{
  unint64_t v2 = sub_10001C45C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_1000A6630()
{
  uint64_t v0 = sub_1000ADB48();
  sub_10000EFDC(v0, qword_1000E2038);
  sub_10000EFA4(v0, (uint64_t)qword_1000E2038);
  return sub_1000ADB28();
}

id sub_1000A6690@<X0>(void **a1@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_1000A669C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A66D4(&qword_1000D4A10, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000E2038, a1);
}

uint64_t sub_1000A66D4@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10000EFA4(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1000A6778(uint64_t a1)
{
  unint64_t v2 = sub_1000A73A0();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1000A67C4()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();

  return DisplayRepresentation.init(stringLiteral:)(v2, v1);
}

uint64_t sub_1000A6814(uint64_t a1)
{
  unint64_t v2 = sub_1000A717C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

id sub_1000A6860()
{
  id result = [objc_allocWithZone((Class)REMStore) initUserInteractive:1];
  qword_1000D8AC0 = (uint64_t)result;
  return result;
}

uint64_t sub_1000A6898(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1000D8BA0 + dword_1000D8BA0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000C444;
  return v5(a1);
}

uint64_t sub_1000A6940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10000C7D0;
  return EntityQuery.suggestedEntities()(a1, a2, a3);
}

uint64_t sub_1000A69F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000A6FE8();
  *uint64_t v5 = v2;
  v5[1] = sub_10000F290;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t REMObjectID.entityIdentifierString.getter()
{
  uint64_t v1 = sub_1000ADD48();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [v0 urlRepresentation];
  sub_1000ADD18();

  uint64_t v6 = sub_1000ADCF8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

id static REMObjectID.entityIdentifier(for:)()
{
  uint64_t v0 = sub_10000693C(&qword_1000D4C78);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000ADD48();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000ADD28();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000A6D60((uint64_t)v2);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    sub_1000ADD08(v8);
    uint64_t v10 = v9;
    id v7 = [(id)swift_getObjCClassFromMetadata() objectIDWithURL:v9];

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

uint64_t sub_1000A6D60(uint64_t a1)
{
  uint64_t v2 = sub_10000693C(&qword_1000D4C78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000A6DC4()
{
  unint64_t result = qword_1000D8AC8;
  if (!qword_1000D8AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8AC8);
  }
  return result;
}

unint64_t sub_1000A6E1C()
{
  unint64_t result = qword_1000D8AD0;
  if (!qword_1000D8AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8AD0);
  }
  return result;
}

uint64_t sub_1000A6E70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A6E8C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000A6EE0()
{
  unint64_t result = qword_1000D8AE0;
  if (!qword_1000D8AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8AE0);
  }
  return result;
}

unint64_t sub_1000A6F38()
{
  unint64_t result = qword_1000D8AE8;
  if (!qword_1000D8AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8AE8);
  }
  return result;
}

unint64_t sub_1000A6F90()
{
  unint64_t result = qword_1000D8AF0;
  if (!qword_1000D8AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8AF0);
  }
  return result;
}

unint64_t sub_1000A6FE8()
{
  unint64_t result = qword_1000D8AF8;
  if (!qword_1000D8AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8AF8);
  }
  return result;
}

uint64_t sub_1000A703C()
{
  return sub_1000A7204(&qword_1000D8B00);
}

unint64_t sub_1000A7074()
{
  unint64_t result = qword_1000D8B08;
  if (!qword_1000D8B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B08);
  }
  return result;
}

unint64_t sub_1000A70CC()
{
  unint64_t result = qword_1000D8B10;
  if (!qword_1000D8B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B10);
  }
  return result;
}

unint64_t sub_1000A7124()
{
  unint64_t result = qword_1000D8B18;
  if (!qword_1000D8B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B18);
  }
  return result;
}

unint64_t sub_1000A717C()
{
  unint64_t result = qword_1000D8B20;
  if (!qword_1000D8B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B20);
  }
  return result;
}

uint64_t sub_1000A71D0()
{
  return sub_1000A7204((unint64_t *)&qword_1000D7880);
}

uint64_t sub_1000A7204(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100070F8C(255, &qword_1000D7878);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A7258()
{
  return sub_100009F50(&qword_1000D8B28, &qword_1000D8B30);
}

unint64_t sub_1000A7298()
{
  unint64_t result = qword_1000D8B38;
  if (!qword_1000D8B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B38);
  }
  return result;
}

unint64_t sub_1000A72F0()
{
  unint64_t result = qword_1000D8B40;
  if (!qword_1000D8B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B40);
  }
  return result;
}

unint64_t sub_1000A7348()
{
  unint64_t result = qword_1000D8B48;
  if (!qword_1000D8B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B48);
  }
  return result;
}

unint64_t sub_1000A73A0()
{
  unint64_t result = qword_1000D8B50[0];
  if (!qword_1000D8B50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D8B50);
  }
  return result;
}

unint64_t sub_1000A73F8()
{
  unint64_t result = qword_1000D8B68;
  if (!qword_1000D8B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B68);
  }
  return result;
}

unint64_t sub_1000A7450()
{
  unint64_t result = qword_1000D8B70;
  if (!qword_1000D8B70)
  {
    sub_100006F98(qword_1000D8B78);
    sub_1000A7124();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B70);
  }
  return result;
}

uint64_t sub_1000A74C4()
{
  uint64_t v1 = sub_1000ADD48();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [*v0 urlRepresentation];
  sub_1000ADD18();

  uint64_t v6 = sub_1000ADCF8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

id sub_1000A75C4@<X0>(void *a1@<X8>)
{
  id result = static REMObjectID.entityIdentifier(for:)();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for TTRReminderAppEntityQuery()
{
  return &type metadata for TTRReminderAppEntityQuery;
}

uint64_t destroy for TTRReminderAppEntity(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s24RemindersWidgetExtension20TTRReminderAppEntityVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRReminderAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRReminderAppEntity(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TTRReminderAppEntity()
{
  return &type metadata for TTRReminderAppEntity;
}

uint64_t destroy for TTRReminderSetCompletedIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s24RemindersWidgetExtension29TTRReminderSetCompletedIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TTRReminderSetCompletedIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRReminderSetCompletedIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t _s24RemindersWidgetExtension20TTRReminderAppEntityVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000A78E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRReminderSetCompletedIntent()
{
  return &type metadata for TTRReminderSetCompletedIntent;
}

uint64_t sub_1000A7938()
{
  return sub_100009F50(&qword_1000D8B90, &qword_1000D8B98);
}

uint64_t sub_1000A7974(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A7BA0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000A7994(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A7CF0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000A79B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A86C0(a1, a2, a3, (void *)*v3, &qword_1000D4B08, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000A79F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A7FE4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000A7A10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A8170(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000A7A30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A86C0(a1, a2, a3, (void *)*v3, &qword_1000D5938, (uint64_t (*)(void))type metadata accessor for TTRTodayComplicationWidgetTimelineEntry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000A7A6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A8318(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000A7A8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A8560(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000A7AAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A7E40(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000A7ACC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A86C0(a1, a2, a3, (void *)*v3, &qword_1000D5908, type metadata accessor for TTRNewWidgetViewModel.Reminder);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000A7B08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A86C0(a1, a2, a3, (void *)*v3, &qword_1000D5918, type metadata accessor for TTRNewWidgetPresenter.Division);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000A7B44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A86C0(a1, a2, a3, (void *)*v3, &qword_1000D7CF8, type metadata accessor for TTRNewWidgetTimelineEntry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000A7B80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A8908(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000A7BA0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000693C(&qword_1000D8BD0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A7CF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000693C(&qword_1000D8BD8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A7E40(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000693C(&qword_1000D58E0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_10000693C(&qword_1000D58E8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A7FE4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000693C(&qword_1000D8BE8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_10000693C(&qword_1000D8BF0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A8170(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000693C(&qword_1000D8BF8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    sub_10000693C(&qword_1000D79E0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A8318(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000693C(&qword_1000D8BE0);
  uint64_t v10 = *(void *)(sub_10000693C(&qword_1000D58A8) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10000693C(&qword_1000D58A8) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v18 = (char *)v13 + v17;
  long long v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A8560(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000693C(&qword_1000D6A00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A86C0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000693C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  _OWORD v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A8908(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000693C(&qword_1000D8BB0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000AF9D8();
  __break(1u);
  return result;
}

uint64_t sub_1000A8A90(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return sub_1000AF8F8();
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2)
  {
    uint64_t v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v1 = 1 << v5;
  if (v6 < 7) {
    return v1;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  unint64_t v7 = (unint64_t)(v1 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v3 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v2 = v10;
    --v8;
    v3 += 64;
    if (v10) {
      return __clz(__rbit64(v2)) + v3;
    }
  }
  return v1;
}

void sub_1000A8B54(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if ((*(void *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a1))
    {
      if (*(_DWORD *)(a4 + 36) == a2)
      {
        sub_1000AF838();
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (sub_1000AF928() != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1000AF938();
  sub_1000AA070(a1, a2, 1);
  sub_100070F8C(0, &qword_1000D7878);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_100070100((uint64_t)v8);
  char v7 = v6;

  if (v7)
  {
    sub_1000AF908();
    sub_1000AF958();
    sub_1000AA064(a1, a2, 1);
    swift_unknownObjectRelease();
    return;
  }
LABEL_14:
  __break(1u);
}

void sub_1000A8CF4(void *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  unint64_t v6 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if (a4)
    {
      sub_1000AF968();
      sub_100070F8C(0, &qword_1000D7878);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      sub_100070F8C(0, &qword_1000D78B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v13;
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_18;
  }
  if (a4)
  {
LABEL_10:
    if (sub_1000AF928() == *(_DWORD *)(a5 + 36))
    {
      sub_1000AF938();
      sub_100070F8C(0, &qword_1000D7878);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v6 = sub_100070100((uint64_t)v13);
      char v9 = v8;

      if (v9) {
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  unint64_t v10 = *(void **)(*(void *)(a5 + 48) + 8 * v6);
  size_t v11 = *(void **)(*(void *)(a5 + 56) + 8 * v6);
  *a1 = v11;
  v10;
  id v12 = v11;
}

uint64_t sub_1000A8F20(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v36 = a4;
  *((void *)&v34 + 1) = a2;
  uint64_t v35 = a3;
  *(void *)&long long v34 = a1;
  uint64_t v4 = sub_10000693C(&qword_1000D5088);
  __chkstk_darwin(v4 - 8);
  uint64_t v33 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000ADA78();
  uint64_t v6 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000693C(&qword_1000D5070);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  size_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v28 - v12;
  uint64_t v14 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[0] = v16;
  uint64_t v17 = sub_1000ADCA8();
  uint64_t v32 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  v28[1] = sub_10000693C(&qword_1000D8BB8);
  sub_1000ADC88();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v31(v16, 1, 1, v17);
  uint64_t v19 = sub_1000AD748();
  *(void *)&long long v40 = 0;
  long long v39 = 0uLL;
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v13, 1, 1, v19);
  v20(v11, 1, 1, v19);
  unsigned int v30 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v21 = *(void (**)(void))(v6 + 104);
  v28[2] = v6 + 104;
  uint64_t v29 = (void (*)(char *, void, uint64_t))v21;
  v21(v37);
  sub_1000A73A0();
  unint64_t v22 = (char *)v28[0];
  uint64_t v23 = sub_1000AD7B8();
  sub_10000693C(&qword_1000D5090);
  swift_retain();
  sub_1000ADC88();
  v31(v22, 1, 1, v32);
  LOBYTE(v39) = 2;
  uint64_t v24 = sub_1000AF5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v33, 1, 1, v24);
  v20(v13, 1, 1, v19);
  v29(v37, v30, v38);
  sub_1000AD7C8();
  sub_10000693C(&qword_1000D8BC0);
  sub_1000AD668();
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v41 = 0;
  swift_retain();
  sub_1000AD658();
  sub_1000AD618();
  unint64_t v25 = (void *)v34;
  long long v39 = v34;
  *(void *)&long long v40 = v35;
  swift_retain();
  swift_retain();
  swift_retain();
  id v26 = v25;
  swift_bridgeObjectRetain();
  sub_1000AD7A8();
  swift_release();
  swift_release();
  LOBYTE(v39) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000AD7A8();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease();

  return v23;
}

uint64_t sub_1000A9480()
{
  uint64_t v0 = sub_10000693C(&qword_1000D5088);
  __chkstk_darwin(v0 - 8);
  unsigned int v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000ADA78();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000693C(&qword_1000D5070);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10000693C(&qword_1000D5078);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_1000ADCA8();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v29 = sub_10000693C(&qword_1000D8BB8);
  sub_1000ADC88();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_1000AD748();
  *(void *)&long long v33 = 0;
  long long v32 = 0uLL;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  unint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000A73A0();
  uint64_t v19 = v23;
  uint64_t v29 = sub_1000AD7B8();
  sub_10000693C(&qword_1000D5090);
  sub_1000ADC88();
  v27(v19, 1, 1, v28);
  LOBYTE(v32) = 2;
  uint64_t v20 = sub_1000AF5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v31);
  sub_1000AD7C8();
  sub_10000693C(&qword_1000D8BC0);
  sub_1000AD668();
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v34 = 0;
  sub_1000AD658();
  sub_1000AD618();
  return v29;
}

uint64_t sub_1000A9904()
{
  uint64_t v0 = sub_1000AE208();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AE248();
  sub_1000AE238();
  uint64_t v4 = enum case for REMRemindersWidgetUserOperation.completeReminder(_:);
  uint64_t v5 = sub_1000AE738();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);
  uint64_t v6 = *(void (**)(char *, void, uint64_t))(v1 + 104);
  v6(v3, enum case for REMAnalyticsEvent.remindersWidgetUserOperation(_:), v0);
  sub_1000AE228();
  swift_release();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  sub_1000AE238();
  *(void *)uint64_t v3 = 0xD00000000000001DLL;
  *((void *)v3 + 1) = 0x80000001000B62F0;
  *((void *)v3 + 2) = 0x746567646977;
  *((void *)v3 + 3) = 0xE600000000000000;
  *((void *)v3 + 4) = 0x704163696C627570;
  *((void *)v3 + 5) = 0xEF746E65746E4970;
  *((_OWORD *)v3 + 3) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  v6(v3, enum case for REMAnalyticsEvent.appIntents(_:), v0);
  sub_1000AE228();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v7)(v3, v0);
}

uint64_t sub_1000A9B10(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return _swift_task_switch(sub_1000A9BA0, 0, 0);
}

uint64_t sub_1000A9BA0()
{
  uint64_t v44 = v0;
  if (qword_1000D4A18 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1000D8AC0;
  sub_100070F8C(0, &qword_1000D7878);
  Class isa = sub_1000AF578().super.isa;
  *(void *)(v0 + 16) = 0;
  uint64_t v37 = v0 + 16;
  id v3 = [v1 fetchRemindersWithObjectIDs:isa error:v0 + 16];

  uint64_t v4 = v0;
  uint64_t v5 = *(void **)(v0 + 16);
  if (v3)
  {
    uint64_t v36 = v0;
    sub_100070F8C(0, &qword_1000D78B0);
    sub_1000A7204((unint64_t *)&qword_1000D7880);
    uint64_t v6 = sub_1000AF3B8();
    id v7 = v5;

    unint64_t v39 = v6 & 0xC000000000000001;
    if ((v6 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = sub_1000AF948();
      if (v8)
      {
LABEL_6:
        sub_1000A7B80(0, v8 & ~(v8 >> 63), 0);
        uint64_t v41 = sub_1000A8A90(v6);
        uint64_t v42 = v9;
        char v43 = v10 & 1;
        if (v8 < 0)
        {
          __break(1u);
LABEL_31:
          __break(1u);
        }
        uint64_t v38 = v6;
        while (1)
        {
          uint64_t v18 = v41;
          uint64_t v17 = v42;
          char v19 = v43;
          sub_1000A8CF4(&v40, v41, v42, v43, v6);
          uint64_t v20 = v40;
          id v22 = v21;
          id v23 = [v20 title];
          uint64_t v24 = v23;
          if (!v23) {
            break;
          }
          id v25 = [v23 string];

          uint64_t v24 = (void *)sub_1000AF498();
          unint64_t v27 = v26;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            goto LABEL_11;
          }
LABEL_12:
          unint64_t v29 = _swiftEmptyArrayStorage[2];
          unint64_t v28 = _swiftEmptyArrayStorage[3];
          if (v29 >= v28 >> 1) {
            sub_1000A7B80(v28 > 1, v29 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v29 + 1;
          unsigned int v30 = &_swiftEmptyArrayStorage[3 * v29];
          v30[4] = v22;
          uint64_t v30[5] = v24;
          v30[6] = v27;
          if (v39)
          {
            uint64_t v6 = v38;
            if ((v19 & 1) == 0) {
              goto LABEL_31;
            }
            if (sub_1000AF918()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            sub_10000693C(&qword_1000D8BA8);
            uint64_t v31 = (void (*)(uint64_t, void))sub_1000AF3C8();
            sub_1000AF978();
            v31(v37, 0);
            if (!--v8)
            {
LABEL_21:
              sub_1000AA064(v41, v42, v43);
              swift_bridgeObjectRelease();
              goto LABEL_27;
            }
          }
          else
          {
            uint64_t v6 = v38;
            sub_1000A8B54(v18, v17, v19, v38);
            uint64_t v12 = v11;
            uint64_t v14 = v13;
            char v16 = v15;
            sub_1000AA064(v18, v17, v19);
            uint64_t v41 = v12;
            uint64_t v42 = v14;
            char v43 = v16 & 1;
            if (!--v8) {
              goto LABEL_21;
            }
          }
        }

        unint64_t v27 = 0xE000000000000000;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_12;
        }
LABEL_11:
        sub_1000A7B80(0, _swiftEmptyArrayStorage[2] + 1, 1);
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(v6 + 16);
      if (v8) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
LABEL_27:
    uint64_t v35 = *(uint64_t (**)(void *))(v36 + 8);
    return v35(_swiftEmptyArrayStorage);
  }
  else
  {
    id v32 = v5;
    sub_1000ADC78();

    swift_willThrow();
    long long v33 = *(uint64_t (**)(void))(v4 + 8);
    return v33();
  }
}

uint64_t sub_1000AA064(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000AA070(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1000AA07C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000AF2A8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v71 = a1;
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    *(void *)uint64_t v9 = *(void *)((char *)a2 + v8);
    *((void *)v9 + 1) = v11;
    *((_OWORD *)v9 + 1) = *(_OWORD *)((char *)a2 + v8 + 16);
    *((void *)v9 + 4) = *(void *)((char *)a2 + v8 + 32);
    v9[40] = *((unsigned char *)a2 + v8 + 40);
    uint64_t v12 = *(void *)((char *)a2 + v8 + 56);
    *((void *)v9 + 6) = *(void *)((char *)a2 + v8 + 48);
    *((void *)v9 + 7) = v12;
    uint64_t v13 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v14 = v13[9];
    __dst = (void **)&v9[v14];
    char v15 = (void **)&v10[v14];
    uint64_t v16 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(void **, uint64_t, int *))(v17 + 48);
    char v19 = (int *)v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v19))
    {
      uint64_t v20 = sub_10000693C(&qword_1000D4CD8);
      memcpy(__dst, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      id v23 = *v15;
      uint64_t v24 = v15[1];
      char *__dst = *v15;
      __dst[1] = v24;
      uint64_t v25 = v19[6];
      uint64_t v64 = (char *)__dst + v25;
      uint64_t v65 = v17;
      uint64_t v69 = v15;
      unint64_t v26 = (char *)v15 + v25;
      uint64_t v27 = sub_1000ADC28();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      id v29 = v23;
      id v30 = v24;
      if (v67(v26, 1, v27))
      {
        uint64_t v31 = sub_10000693C(&qword_1000D4E10);
        memcpy(v64, v26, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v64, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v64, 0, 1, v27);
      }
      uint64_t v32 = v19[7];
      long long v33 = (char *)__dst + v32;
      uint64_t v34 = (char *)v69 + v32;
      uint64_t v35 = sub_1000ADD48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      uint64_t v36 = v19[8];
      uint64_t v37 = *(void **)((char *)v69 + v36);
      *(void **)((char *)__dst + v36) = v37;
      *(void **)((char *)__dst + v19[9]) = *(void **)((char *)v69 + v19[9]);
      *((unsigned char *)__dst + v19[10]) = *((unsigned char *)v69 + v19[10]);
      *((unsigned char *)__dst + v19[11]) = *((unsigned char *)v69 + v19[11]);
      uint64_t v38 = *(void (**)(void **, void, uint64_t, int *))(v65 + 56);
      id v39 = v37;
      v38(__dst, 0, 1, v19);
    }
    uint64_t v40 = v13[10];
    __dsta = *(void **)&v10[v40];
    *(void *)&v9[v40] = __dsta;
    uint64_t v41 = v13[11];
    uint64_t v42 = &v9[v41];
    char v43 = &v10[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *(void *)uint64_t v42 = *(void *)v43;
    *((void *)v42 + 1) = v44;
    uint64_t v45 = v13[12];
    unint64_t v46 = *(void **)&v10[v45];
    *(void *)&v9[v45] = v46;
    uint64_t v47 = v13[13];
    unint64_t v48 = &v9[v47];
    Swift::String v49 = &v10[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)unint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    uint64_t v51 = v13[14];
    uint64_t v52 = &v9[v51];
    Swift::String v53 = &v10[v51];
    uint64_t v54 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = *(void *)v53;
    *((void *)v52 + 1) = v54;
    v9[v13[15]] = v10[v13[15]];
    uint64_t v55 = v13[16];
    uint64_t v56 = &v9[v55];
    uint64_t v57 = &v10[v55];
    uint64_t v58 = *((void *)v57 + 1);
    *(void *)uint64_t v56 = *(void *)v57;
    *((void *)v56 + 1) = v58;
    *(void *)&v9[v13[17]] = *(void *)&v10[v13[17]];
    uint64_t v59 = v13[18];
    uint64_t v68 = &v10[v59];
    id v70 = &v9[v59];
    uint64_t v60 = sub_1000ADD48();
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
    id v61 = __dsta;
    swift_bridgeObjectRetain();
    id v62 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66(v70, v68, v60);
    *(void *)&v9[v13[19]] = *(void *)&v10[v13[19]];
    v9[v13[20]] = v10[v13[20]];
    swift_bridgeObjectRetain();
    return v71;
  }
  return (void *)v22;
}

uint64_t sub_1000AA52C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AF2A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v7 = (id *)(v5 + v6[9]);
  uint64_t v8 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  if (!(*(unsigned int (**)(id *, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {

    uint64_t v9 = (char *)v7 + v8[6];
    uint64_t v10 = sub_1000ADC28();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = (char *)v7 + v8[7];
    uint64_t v13 = sub_1000ADD48();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v5 + v6[18];
  uint64_t v15 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000AA7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AF2A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v68 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a2 + v7 + 16);
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(a2 + v7 + 40);
  uint64_t v11 = *(void *)(a2 + v7 + 56);
  *(void *)(v8 + 48) = *(void *)(a2 + v7 + 48);
  *(void *)(v8 + 56) = v11;
  uint64_t v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v13 = v12[9];
  __dst = (void **)(v8 + v13);
  uint64_t v14 = (void **)(v9 + v13);
  uint64_t v15 = type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(void **, uint64_t, int *))(v16 + 48);
  uint64_t v18 = (int *)v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v18))
  {
    uint64_t v19 = sub_10000693C(&qword_1000D4CD8);
    memcpy(__dst, v14, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = *v14;
    uint64_t v21 = v14[1];
    char *__dst = *v14;
    __dst[1] = v21;
    uint64_t v22 = v18[6];
    id v62 = (char *)__dst + v22;
    uint64_t v64 = v16;
    uint64_t v66 = v14;
    id v23 = (char *)v14 + v22;
    uint64_t v24 = sub_1000ADC28();
    uint64_t v25 = *(void *)(v24 - 8);
    id v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    id v26 = v20;
    id v27 = v21;
    if (v61(v23, 1, v24))
    {
      uint64_t v28 = sub_10000693C(&qword_1000D4E10);
      memcpy(v62, v23, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v62, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v62, 0, 1, v24);
    }
    uint64_t v29 = v18[7];
    id v30 = (char *)__dst + v29;
    uint64_t v31 = (char *)v66 + v29;
    uint64_t v32 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    uint64_t v33 = v18[8];
    uint64_t v34 = *(void **)((char *)v66 + v33);
    *(void **)((char *)__dst + v33) = v34;
    *(void **)((char *)__dst + v18[9]) = *(void **)((char *)v66 + v18[9]);
    *((unsigned char *)__dst + v18[10]) = *((unsigned char *)v66 + v18[10]);
    *((unsigned char *)__dst + v18[11]) = *((unsigned char *)v66 + v18[11]);
    uint64_t v35 = *(void (**)(void **, void, uint64_t, int *))(v64 + 56);
    id v36 = v34;
    v35(__dst, 0, 1, v18);
  }
  uint64_t v37 = v12[10];
  __dsta = *(void **)(v9 + v37);
  *(void *)(v8 + v37) = __dsta;
  uint64_t v38 = v12[11];
  id v39 = (void *)(v8 + v38);
  uint64_t v40 = (void *)(v9 + v38);
  uint64_t v41 = v40[1];
  *id v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v12[12];
  char v43 = *(void **)(v9 + v42);
  *(void *)(v8 + v42) = v43;
  uint64_t v44 = v12[13];
  uint64_t v45 = (void *)(v8 + v44);
  unint64_t v46 = (void *)(v9 + v44);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  uint64_t v48 = v12[14];
  Swift::String v49 = (void *)(v8 + v48);
  uint64_t v50 = (void *)(v9 + v48);
  uint64_t v51 = v50[1];
  *Swift::String v49 = *v50;
  v49[1] = v51;
  *(unsigned char *)(v8 + v12[15]) = *(unsigned char *)(v9 + v12[15]);
  uint64_t v52 = v12[16];
  Swift::String v53 = (void *)(v8 + v52);
  uint64_t v54 = (void *)(v9 + v52);
  uint64_t v55 = v54[1];
  *Swift::String v53 = *v54;
  v53[1] = v55;
  *(void *)(v8 + v12[17]) = *(void *)(v9 + v12[17]);
  uint64_t v56 = v12[18];
  uint64_t v65 = v9 + v56;
  uint64_t v67 = v8 + v56;
  uint64_t v57 = sub_1000ADD48();
  uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
  id v58 = __dsta;
  swift_bridgeObjectRetain();
  id v59 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v63(v67, v65, v57);
  *(void *)(v8 + v12[19]) = *(void *)(v9 + v12[19]);
  *(unsigned char *)(v8 + v12[20]) = *(unsigned char *)(v9 + v12[20]);
  swift_bridgeObjectRetain();
  return v68;
}

uint64_t sub_1000AAC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AF2A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v88 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(v9 + 40);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v11 = v10[9];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (void *)(v9 + v11);
  uint64_t v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_1000ACF44((uint64_t)v12, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    id v26 = (void *)*v13;
    id v27 = (void *)*v12;
    *uint64_t v12 = *v13;
    id v28 = v26;

    uint64_t v29 = (void *)v12[1];
    id v30 = (void *)v13[1];
    v12[1] = v30;
    id v31 = v30;

    uint64_t v32 = v14[6];
    uint64_t v33 = (char *)v12 + v32;
    __dsta = (char *)v13 + v32;
    uint64_t v34 = sub_1000ADC28();
    uint64_t v83 = *(void *)(v34 - 8);
    uint64_t v85 = v33;
    uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
    LODWORD(v33) = v35(v33, 1, v34);
    int v36 = v35(__dsta, 1, v34);
    if (v33)
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v83 + 16))(v85, __dsta, v34);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v34);
        goto LABEL_18;
      }
      size_t v37 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v38 = v85;
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v83 + 24))(v85, __dsta, v34);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v83 + 8))(v85, v34);
      size_t v37 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v38 = v85;
    }
    memcpy(v38, __dsta, v37);
LABEL_18:
    uint64_t v47 = v14[7];
    uint64_t v48 = (char *)v12 + v47;
    Swift::String v49 = (char *)v13 + v47;
    uint64_t v50 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
    uint64_t v51 = v14[8];
    uint64_t v52 = *(void **)((char *)v12 + v51);
    Swift::String v53 = *(void **)((char *)v13 + v51);
    *(void *)((char *)v12 + v51) = v53;
    id v54 = v53;

    *(void *)((char *)v12 + v14[9]) = *(void *)((char *)v13 + v14[9]);
    *((unsigned char *)v12 + v14[10]) = *((unsigned char *)v13 + v14[10]);
    *((unsigned char *)v12 + v14[11]) = *((unsigned char *)v13 + v14[11]);
    goto LABEL_19;
  }
  if (v18)
  {
LABEL_7:
    uint64_t v25 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v12, v13, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v19 = (void *)*v13;
  *uint64_t v12 = *v13;
  char v84 = (void *)v13[1];
  v12[1] = v84;
  uint64_t v20 = v14[6];
  __dst = (char *)v12 + v20;
  uint64_t v82 = (char *)v13 + v20;
  uint64_t v21 = sub_1000ADC28();
  uint64_t v80 = *(void *)(v21 - 8);
  int v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
  id v22 = v19;
  id v23 = v84;
  if (v81(v82, 1, v21))
  {
    uint64_t v24 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v82, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(__dst, v82, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(__dst, 0, 1, v21);
  }
  uint64_t v39 = v14[7];
  uint64_t v40 = (char *)v12 + v39;
  uint64_t v41 = (char *)v13 + v39;
  uint64_t v42 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = v14[8];
  uint64_t v44 = *(void **)((char *)v13 + v43);
  *(void *)((char *)v12 + v43) = v44;
  *(void *)((char *)v12 + v14[9]) = *(void *)((char *)v13 + v14[9]);
  *((unsigned char *)v12 + v14[10]) = *((unsigned char *)v13 + v14[10]);
  *((unsigned char *)v12 + v14[11]) = *((unsigned char *)v13 + v14[11]);
  uint64_t v45 = *(void (**)(void *, void, uint64_t, int *))(v15 + 56);
  id v46 = v44;
  v45(v12, 0, 1, v14);
LABEL_19:
  uint64_t v55 = v10[10];
  uint64_t v56 = *(void **)(v9 + v55);
  uint64_t v57 = *(void **)(v8 + v55);
  *(void *)(v8 + v55) = v56;
  id v58 = v56;

  uint64_t v59 = v10[11];
  uint64_t v60 = (void *)(v8 + v59);
  id v61 = (void *)(v9 + v59);
  *uint64_t v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v62 = v10[12];
  uint64_t v63 = *(void **)(v8 + v62);
  uint64_t v64 = *(void **)(v9 + v62);
  *(void *)(v8 + v62) = v64;
  id v65 = v64;

  uint64_t v66 = v10[13];
  uint64_t v67 = (void *)(v8 + v66);
  uint64_t v68 = (void *)(v9 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = v10[14];
  id v70 = (void *)(v8 + v69);
  uint64_t v71 = (void *)(v9 + v69);
  *id v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v10[15]) = *(unsigned char *)(v9 + v10[15]);
  uint64_t v72 = v10[16];
  uint64_t v73 = (void *)(v8 + v72);
  unint64_t v74 = (void *)(v9 + v72);
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v75 = v10[18];
  uint64_t v76 = v8 + v75;
  uint64_t v77 = v9 + v75;
  uint64_t v78 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 24))(v76, v77, v78);
  *(void *)(v8 + v10[19]) = *(void *)(v9 + v10[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v10[20]) = *(unsigned char *)(v9 + v10[20]);
  return v88;
}

uint64_t sub_1000AB33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AF2A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(a2 + v7 + 40);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + v7 + 48);
  uint64_t v10 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v11 = v10[9];
  uint64_t v12 = (_OWORD *)(v8 + v11);
  uint64_t v13 = (_OWORD *)(v9 + v11);
  uint64_t v14 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    uint64_t v17 = v14[6];
    uint64_t v31 = a1;
    __dst = (char *)v12 + v17;
    int v18 = (char *)v13 + v17;
    uint64_t v19 = sub_1000ADC28();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_10000693C(&qword_1000D4E10);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v22 = v14[7];
    id v23 = (char *)v12 + v22;
    uint64_t v24 = (char *)v13 + v22;
    uint64_t v25 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    *(void *)((char *)v12 + v14[8]) = *(void *)((char *)v13 + v14[8]);
    *(void *)((char *)v12 + v14[9]) = *(void *)((char *)v13 + v14[9]);
    *((unsigned char *)v12 + v14[10]) = *((unsigned char *)v13 + v14[10]);
    *((unsigned char *)v12 + v14[11]) = *((unsigned char *)v13 + v14[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
    a1 = v31;
  }
  *(void *)(v8 + v10[10]) = *(void *)(v9 + v10[10]);
  *(_OWORD *)(v8 + v10[11]) = *(_OWORD *)(v9 + v10[11]);
  *(void *)(v8 + v10[12]) = *(void *)(v9 + v10[12]);
  *(_OWORD *)(v8 + v10[13]) = *(_OWORD *)(v9 + v10[13]);
  *(_OWORD *)(v8 + v10[14]) = *(_OWORD *)(v9 + v10[14]);
  *(unsigned char *)(v8 + v10[15]) = *(unsigned char *)(v9 + v10[15]);
  *(_OWORD *)(v8 + v10[16]) = *(_OWORD *)(v9 + v10[16]);
  *(void *)(v8 + v10[17]) = *(void *)(v9 + v10[17]);
  uint64_t v26 = v10[18];
  uint64_t v27 = v8 + v26;
  uint64_t v28 = v9 + v26;
  uint64_t v29 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  *(void *)(v8 + v10[19]) = *(void *)(v9 + v10[19]);
  *(unsigned char *)(v8 + v10[20]) = *(unsigned char *)(v9 + v10[20]);
  return a1;
}

uint64_t sub_1000AB6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AF2A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v79 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 40) = *(unsigned char *)(v9 + 40);
  uint64_t v11 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for TTRNewWidgetViewModel(0);
  uint64_t v13 = v12[9];
  uint64_t v14 = (void *)(v8 + v13);
  uint64_t v15 = (void *)(v9 + v13);
  uint64_t v16 = (int *)type metadata accessor for TTRNewWidgetViewModel.Reminder(0);
  uint64_t v17 = *((void *)v16 - 1);
  int v18 = *(uint64_t (**)(void *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_1000ACF44((uint64_t)v14, type metadata accessor for TTRNewWidgetViewModel.Reminder);
      goto LABEL_7;
    }
    uint64_t v27 = (void *)*v14;
    *uint64_t v14 = *v15;

    uint64_t v28 = (void *)v14[1];
    v14[1] = v15[1];

    uint64_t v29 = v16[6];
    id v30 = (char *)v14 + v29;
    __dsta = (char *)v15 + v29;
    uint64_t v31 = sub_1000ADC28();
    uint64_t v75 = *(void *)(v31 - 8);
    uint64_t v76 = v30;
    uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
    LODWORD(v30) = v32(v30, 1, v31);
    int v33 = v32(__dsta, 1, v31);
    if (v30)
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v75 + 32))(v76, __dsta, v31);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v76, 0, 1, v31);
        goto LABEL_18;
      }
      size_t v34 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v35 = v76;
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v75 + 40))(v76, __dsta, v31);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v75 + 8))(v76, v31);
      size_t v34 = *(void *)(*(void *)(sub_10000693C(&qword_1000D4E10) - 8) + 64);
      uint64_t v35 = v76;
    }
    memcpy(v35, __dsta, v34);
LABEL_18:
    uint64_t v40 = v16[7];
    uint64_t v41 = (char *)v14 + v40;
    uint64_t v42 = (char *)v15 + v40;
    uint64_t v43 = sub_1000ADD48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
    uint64_t v44 = v16[8];
    uint64_t v45 = *(void **)((char *)v14 + v44);
    *(void *)((char *)v14 + v44) = *(void *)((char *)v15 + v44);

    *(void *)((char *)v14 + v16[9]) = *(void *)((char *)v15 + v16[9]);
    *((unsigned char *)v14 + v16[10]) = *((unsigned char *)v15 + v16[10]);
    *((unsigned char *)v14 + v16[11]) = *((unsigned char *)v15 + v16[11]);
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_7:
    uint64_t v26 = sub_10000693C(&qword_1000D4CD8);
    memcpy(v14, v15, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  uint64_t v21 = v16[6];
  __dst = (char *)v14 + v21;
  uint64_t v22 = (char *)v15 + v21;
  uint64_t v23 = sub_1000ADC28();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_10000693C(&qword_1000D4E10);
    memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(__dst, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  uint64_t v36 = v16[7];
  size_t v37 = (char *)v14 + v36;
  uint64_t v38 = (char *)v15 + v36;
  uint64_t v39 = sub_1000ADD48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  *(void *)((char *)v14 + v16[8]) = *(void *)((char *)v15 + v16[8]);
  *(void *)((char *)v14 + v16[9]) = *(void *)((char *)v15 + v16[9]);
  *((unsigned char *)v14 + v16[10]) = *((unsigned char *)v15 + v16[10]);
  *((unsigned char *)v14 + v16[11]) = *((unsigned char *)v15 + v16[11]);
  (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
LABEL_19:
  uint64_t v46 = v12[10];
  uint64_t v47 = *(void **)(v8 + v46);
  *(void *)(v8 + v46) = *(void *)(v9 + v46);

  uint64_t v48 = v12[11];
  Swift::String v49 = (void *)(v8 + v48);
  uint64_t v50 = (uint64_t *)(v9 + v48);
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *Swift::String v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  uint64_t v53 = v12[12];
  id v54 = *(void **)(v8 + v53);
  *(void *)(v8 + v53) = *(void *)(v9 + v53);

  uint64_t v55 = v12[13];
  uint64_t v56 = (void *)(v8 + v55);
  uint64_t v57 = (uint64_t *)(v9 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  void *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = v12[14];
  id v61 = (void *)(v8 + v60);
  uint64_t v62 = (uint64_t *)(v9 + v60);
  uint64_t v64 = *v62;
  uint64_t v63 = v62[1];
  *id v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v12[15]) = *(unsigned char *)(v9 + v12[15]);
  uint64_t v65 = v12[16];
  uint64_t v66 = (void *)(v8 + v65);
  uint64_t v67 = (uint64_t *)(v9 + v65);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  *uint64_t v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  *(void *)(v8 + v12[17]) = *(void *)(v9 + v12[17]);
  swift_bridgeObjectRelease();
  uint64_t v70 = v12[18];
  uint64_t v71 = v8 + v70;
  uint64_t v72 = v9 + v70;
  uint64_t v73 = sub_1000ADD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 40))(v71, v72, v73);
  *(void *)(v8 + v12[19]) = *(void *)(v9 + v12[19]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v12[20]) = *(unsigned char *)(v9 + v12[20]);
  return v79;
}

uint64_t sub_1000ABD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000ABD68);
}

uint64_t sub_1000ABD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000AF2A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000ABE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000ABE74);
}

uint64_t sub_1000ABE74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000AF2A8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for TTRNewWidgetViewModel(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s10WidgetViewVMa_0()
{
  uint64_t result = qword_1000D8C58;
  if (!qword_1000D8C58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000ABFC4()
{
  uint64_t result = sub_1000AF2A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TTRNewWidgetViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000AC08C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000AC0A8()
{
  return sub_1000AEA78();
}

uint64_t sub_1000AC0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AC148(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_1000AC0F8()
{
  return sub_1000AEAE8();
}

uint64_t sub_1000AC11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AC148(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_1000AC148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1000AC218()
{
  sub_1000AEAC8();
  sub_1000ACFA4(&qword_1000D8CC8, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  sub_1000AEB38();
  return v1;
}

uint64_t sub_1000AC294@<X0>(unsigned char *a1@<X8>)
{
  sub_1000AEAC8();
  sub_1000ACFA4(&qword_1000D8CC8, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  uint64_t result = sub_1000AEB38();
  *a1 = v3;
  return result;
}

uint64_t sub_1000AC324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v49 = type metadata accessor for TTRIAnyListComplicationWidgetView(0);
  __chkstk_darwin(v49);
  uint64_t v45 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10000693C(&qword_1000D8C90);
  __chkstk_darwin(v51);
  uint64_t v52 = (uint64_t *)((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = sub_10000693C(&qword_1000D8C98);
  __chkstk_darwin(v48);
  uint64_t v46 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10000693C(&qword_1000D8CA0);
  __chkstk_darwin(v50);
  uint64_t v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t IsVibrantText = type metadata accessor for IsVibrantText(0);
  __chkstk_darwin(IsVibrantText - 8);
  uint64_t v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (int *)type metadata accessor for TTRAnyListWidget.SystemWidgetView(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = sub_1000AF2A8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  int v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v44 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v44 - v21, a1, v16);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v22, v16);
  if (v23 == enum case for WidgetFamily.systemSmall(_:))
  {
    char v24 = 0;
LABEL_7:
    uint64_t v25 = _s10WidgetViewVMa_0();
    sub_1000ACEDC(a1 + *(int *)(v25 + 20), (uint64_t)&v13[v10[5]], type metadata accessor for TTRNewWidgetViewModel);
    *uint64_t v13 = v24;
    uint64_t v26 = (uint64_t *)&v13[v10[6]];
    *uint64_t v26 = swift_getKeyPath();
    sub_10000693C(&qword_1000D5ED8);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = &v13[v10[7]];
    *(void *)uint64_t v27 = swift_getKeyPath();
    v27[8] = 0;
    uint64_t v28 = (uint64_t *)&v13[v10[8]];
    *uint64_t v28 = swift_getKeyPath();
    sub_10000693C(&qword_1000D5E30);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = (uint64_t)&v13[v10[9]];
    *uint64_t v9 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    sub_1000ACE74((uint64_t)v9, v29, type metadata accessor for IsVibrantText);
    sub_1000ACE74((uint64_t)v13, (uint64_t)v15, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    sub_1000ACEDC((uint64_t)v15, v46, type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_1000ACFA4(&qword_1000D8CB8, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    sub_1000ACFA4(&qword_1000D8CC0, (void (*)(uint64_t))type metadata accessor for TTRIAnyListComplicationWidgetView);
    uint64_t v30 = (uint64_t)v47;
    sub_1000AEC68();
    sub_1000ACCE0(v30, (uint64_t)v52);
    swift_storeEnumTagMultiPayload();
    sub_1000ACC04();
    sub_1000AEC68();
    sub_1000ACD48(v30);
    uint64_t v31 = type metadata accessor for TTRAnyListWidget.SystemWidgetView;
    uint64_t v32 = (uint64_t)v15;
    return sub_1000ACF44(v32, v31);
  }
  if (v23 == enum case for WidgetFamily.systemMedium(_:))
  {
    char v24 = 1;
    goto LABEL_7;
  }
  if (v23 == enum case for WidgetFamily.systemLarge(_:))
  {
    char v24 = 2;
    goto LABEL_7;
  }
  uint64_t v34 = enum case for WidgetFamily.accessoryRectangular(_:);
  if (v23 != enum case for WidgetFamily.systemExtraLarge(_:)
    && v23 != enum case for WidgetFamily.accessoryCircular(_:)
    && v23 != enum case for WidgetFamily.accessoryRectangular(_:)
    && v23 != enum case for WidgetFamily.accessoryInline(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v20, v34, v16);
  sub_1000ACFA4(&qword_1000D8CA8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000AF558();
  sub_1000AF558();
  uint64_t v36 = v54;
  uint64_t v35 = v55;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  if (v35 != v36)
  {
    v57._object = (void *)0x80000001000B9E60;
    v56._countAndFlagsBits = 0x7070755320746F4ELL;
    v56._object = (void *)0xED0000646574726FLL;
    v57._countAndFlagsBits = 0xD000000000000033;
    uint64_t v41 = sub_1000AE128(v56, v57);
    uint64_t v42 = v52;
    *uint64_t v52 = v41;
    v42[1] = v43;
    *((unsigned char *)v42 + 16) = 0;
    void v42[3] = (uint64_t)_swiftEmptyArrayStorage;
    swift_storeEnumTagMultiPayload();
    sub_1000ACC04();
    return sub_1000AEC68();
  }
  uint64_t v37 = _s10WidgetViewVMa_0();
  uint64_t v38 = v45;
  sub_1000ACEDC(a1 + *(int *)(v37 + 20), v45, type metadata accessor for TTRNewWidgetViewModel);
  uint64_t v39 = v49;
  *(void *)(v38 + *(int *)(v49 + 20)) = 3;
  *(void *)(v38 + *(int *)(v39 + 24)) = 1;
  sub_1000ACEDC(v38, v46, type metadata accessor for TTRIAnyListComplicationWidgetView);
  swift_storeEnumTagMultiPayload();
  sub_1000ACFA4(&qword_1000D8CB8, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.SystemWidgetView);
  sub_1000ACFA4(&qword_1000D8CC0, (void (*)(uint64_t))type metadata accessor for TTRIAnyListComplicationWidgetView);
  uint64_t v40 = (uint64_t)v47;
  sub_1000AEC68();
  sub_1000ACCE0(v40, (uint64_t)v52);
  swift_storeEnumTagMultiPayload();
  sub_1000ACC04();
  sub_1000AEC68();
  sub_1000ACD48(v40);
  uint64_t v31 = type metadata accessor for TTRIAnyListComplicationWidgetView;
  uint64_t v32 = v38;
  return sub_1000ACF44(v32, v31);
}

uint64_t sub_1000ACBFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AC324(v1, a1);
}

unint64_t sub_1000ACC04()
{
  unint64_t result = qword_1000D8CB0;
  if (!qword_1000D8CB0)
  {
    sub_100006F98(&qword_1000D8CA0);
    sub_1000ACFA4(&qword_1000D8CB8, (void (*)(uint64_t))type metadata accessor for TTRAnyListWidget.SystemWidgetView);
    sub_1000ACFA4(&qword_1000D8CC0, (void (*)(uint64_t))type metadata accessor for TTRIAnyListComplicationWidgetView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8CB0);
  }
  return result;
}

uint64_t sub_1000ACCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000693C(&qword_1000D8CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ACD48(uint64_t a1)
{
  uint64_t v2 = sub_10000693C(&qword_1000D8CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000ACDA8()
{
  return sub_1000AEA78();
}

uint64_t sub_1000ACDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AC148(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_1000ACE10()
{
  return sub_1000AEAE8();
}

uint64_t sub_1000ACE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AC148(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_1000ACE74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000ACEDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000ACF44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000ACFA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000ACFF0()
{
  unint64_t result = qword_1000D8CD0;
  if (!qword_1000D8CD0)
  {
    sub_100006F98(&qword_1000D8CD8);
    sub_1000AD064();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8CD0);
  }
  return result;
}

unint64_t sub_1000AD064()
{
  unint64_t result = qword_1000D8CE0;
  if (!qword_1000D8CE0)
  {
    sub_100006F98(&qword_1000D8CE8);
    sub_1000ACC04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8CE0);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_1000AD104()
{
  return sub_1000AD2B0(1);
}

uint64_t sub_1000AD10C(uint64_t a1, int a2, int a3, int a4)
{
  if (qword_1000E1D50 == -1)
  {
    if (qword_1000E1D58) {
      return _availability_version_check();
    }
  }
  else
  {
    dispatch_once_f(&qword_1000E1D50, 0, (dispatch_function_t)sub_1000AD2A8);
    if (qword_1000E1D58) {
      return _availability_version_check();
    }
  }
  if (qword_1000E1D48 == -1)
  {
    BOOL v8 = dword_1000E1D38 < a2;
    if (dword_1000E1D38 > a2) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_1000E1D48, 0, (dispatch_function_t)sub_1000AD104);
    BOOL v8 = dword_1000E1D38 < a2;
    if (dword_1000E1D38 > a2) {
      return 1;
    }
  }
  if (v8) {
    return 0;
  }
  if (dword_1000E1D3C > a3) {
    return 1;
  }
  return dword_1000E1D3C >= a3 && dword_1000E1D40 >= a4;
}

uint64_t sub_1000AD2A8()
{
  return sub_1000AD2B0(0);
}

uint64_t sub_1000AD2B0(uint64_t result)
{
  uint64_t v1 = (uint64_t (**)(void))qword_1000E1D58;
  if (qword_1000E1D58) {
    BOOL v2 = result == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2)
  {
    if (&__availability_version_check)
    {
      uint64_t v1 = &__availability_version_check;
      qword_1000E1D58 = (uint64_t)&__availability_version_check;
    }
    if (!v1 || result != 0)
    {
      unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        uint64_t v4 = *(unsigned __int8 **)result;
        unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          uint64_t v5 = (uint64_t (*)(void))result;
          unint64_t v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            uint64_t v7 = (uint64_t (*)(void, uint64_t, void, void))result;
            unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              BOOL v8 = (uint64_t (*)(void, const char *, uint64_t, unsigned __int8 *))result;
              unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  uint64_t v10 = (uint64_t (*)(uint64_t))result;
                  unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    uint64_t v11 = (uint64_t (*)(void))result;
                    unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    uint64_t v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        uint64_t v12 = (FILE *)result;
                        unint64_t result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          uint64_t v13 = (FILE *)result;
                          uint64_t v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          uint64_t v14 = ftell(v13);
                          if (v14 < 0)
                          {
                            uint64_t v16 = 0;
                          }
                          else
                          {
                            size_t v15 = v14;
                            rewind(v13);
                            uint64_t v16 = malloc(v15);
                            if (v16)
                            {
                              uint64_t v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                uint64_t v17 = v5(0);
                                if (v17)
                                {
                                  uint64_t v18 = v17;
                                  uint64_t v19 = v13;
                                  if (v6) {
                                    uint64_t v20 = ((uint64_t (*)(void, uint64_t, void, void, void))v6)(0, v17, 0, 0, 0);
                                  }
                                  else {
                                    uint64_t v20 = v7(0, v17, 0, 0);
                                  }
                                  uint64_t v21 = v20;
                                  if (v20)
                                  {
                                    uint64_t v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      uint64_t v23 = v22;
                                      uint64_t v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        uint64_t v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984)) {
                                            sscanf(v29, "%d.%d.%d", &dword_1000E1D38, &dword_1000E1D3C, &dword_1000E1D40);
                                          }
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    uint64_t v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  uint64_t v19 = v13;
                                }
                                uint64_t v16 = v26;
                              }
                              else
                              {
                                uint64_t v16 = v26;
                                uint64_t v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          uint64_t v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000AD5E8()
{
  return static _AssistantIntentsProvider.uniqueEntities.getter();
}

uint64_t sub_1000AD5F8()
{
  return type metadata accessor for _PrebuiltAppIntentError();
}

uint64_t sub_1000AD608()
{
  return AppDependency.wrappedValue.getter();
}

uint64_t sub_1000AD618()
{
  return AppDependency.__allocating_init(key:manager:)();
}

uint64_t sub_1000AD628()
{
  return static AppIntentInternal.sideEffect.getter();
}

uint64_t sub_1000AD638()
{
  return static AppIntentInternal.shortcutsMetadata.getter();
}

uint64_t sub_1000AD648()
{
  return AppDependencyManager.add<A>(key:dependency:)();
}

uint64_t sub_1000AD658()
{
  return static AppDependencyManager.shared.getter();
}

uint64_t sub_1000AD668()
{
  return type metadata accessor for AppDependencyManager();
}

uint64_t sub_1000AD698()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t sub_1000AD6A8()
{
  return static AppIntent.description.getter();
}

uint64_t sub_1000AD6B8()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t sub_1000AD6C8()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t sub_1000AD6D8()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t sub_1000AD718()
{
  return IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
}

uint64_t sub_1000AD738()
{
  return IntentDialog.init<A, B>(from:capturedContent:)();
}

uint64_t sub_1000AD748()
{
  return type metadata accessor for IntentDialog();
}

uint64_t sub_1000AD758()
{
  return static IntentResult.result<A>(value:dialog:)();
}

uint64_t sub_1000AD768()
{
  return static IntentResult.result<>()();
}

uint64_t sub_1000AD778()
{
  return _UniqueEntity.id.getter();
}

uint64_t sub_1000AD788()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t sub_1000AD798()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1000AD7A8()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1000AD7B8()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_1000AD7C8()
{
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_1000AD7D8()
{
  return static RelevantContext.date(_:)();
}

uint64_t sub_1000AD7E8()
{
  return type metadata accessor for RelevantContext();
}

uint64_t sub_1000AD7F8()
{
  return static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
}

uint64_t sub_1000AD808()
{
  return static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
}

uint64_t sub_1000AD818()
{
  return _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
}

uint64_t sub_1000AD828()
{
  return type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
}

uint64_t sub_1000AD838()
{
  return _AssistantIntent.IntentProjection.subscript.getter();
}

uint64_t sub_1000AD848()
{
  return type metadata accessor for _AssistantIntent.PhraseToken();
}

uint64_t sub_1000AD858()
{
  return static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
}

uint64_t sub_1000AD868()
{
  return static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
}

uint64_t sub_1000AD878()
{
  return static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
}

uint64_t sub_1000AD888()
{
  return static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
}

uint64_t sub_1000AD898()
{
  return static _AssistantIntent.ParameterValueBuilder.buildBlock()();
}

uint64_t sub_1000AD8A8()
{
  return static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
}

uint64_t sub_1000AD8B8()
{
  return static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
}

uint64_t sub_1000AD8C8()
{
  return _AssistantIntent.Value.init<A>(for:builder:)();
}

uint64_t sub_1000AD8D8()
{
  return type metadata accessor for _AssistantIntent.Value();
}

uint64_t sub_1000AD8E8()
{
  return _AssistantIntent.Phrase.init(stringLiteral:)();
}

uint64_t sub_1000AD8F8()
{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

uint64_t sub_1000AD908()
{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

void sub_1000AD918(Swift::String a1)
{
}

uint64_t sub_1000AD928()
{
  return _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_1000AD938()
{
  return _AssistantIntent.Phrase.init(stringInterpolation:)();
}

uint64_t sub_1000AD948()
{
  return static _AssistantIntent.Builder.buildBlock(_:)();
}

uint64_t sub_1000AD958()
{
  return static _AssistantIntent.Builder.buildExpression(_:)();
}

uint64_t sub_1000AD968()
{
  return type metadata accessor for _AssistantIntent();
}

uint64_t sub_1000AD978()
{
  return _AssistantIntent.init<A>(_:phrases:parameterValues:)();
}

uint64_t sub_1000AD988()
{
  return type metadata accessor for IntentDescription();
}

uint64_t sub_1000AD998()
{
  return IntentDescription.init(_:categoryName:searchKeywords:)();
}

uint64_t sub_1000AD9D8()
{
  return static _UnrecoverableError.actionNotAllowed.getter();
}

uint64_t sub_1000AD9E8()
{
  return static _DialogBuilderEntity.buildBlock<A>(_:)();
}

uint64_t sub_1000AD9F8()
{
  return static _DialogBuilderEntity.buildExpression<A, B>(_:)();
}

uint64_t sub_1000ADA18()
{
  return DisplayRepresentation.Image.init(appBundleIdentifier:)();
}

uint64_t sub_1000ADA28()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t sub_1000ADA38()
{
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)();
}

uint64_t sub_1000ADA48()
{
  return static EnumerableEntityQuery.findIntentDescription.getter();
}

uint64_t sub_1000ADA68()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t sub_1000ADA78()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t sub_1000ADA88()
{
  return _URLRepresentableEntity.urlRepresentationParameter.getter();
}

uint64_t sub_1000ADAB8()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t sub_1000ADAC8()
{
  return _EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)();
}

void sub_1000ADAD8(Swift::String a1)
{
}

uint64_t sub_1000ADAE8()
{
  return _EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_1000ADAF8()
{
  return _EntityURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_1000ADB18()
{
  return type metadata accessor for _GeneratedContentOptions();
}

uint64_t sub_1000ADB28()
{
  return TypeDisplayRepresentation.init(stringLiteral:)();
}

uint64_t sub_1000ADB38()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1000ADB48()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t sub_1000ADB58()
{
  return type metadata accessor for _GeneratedContentFallback();
}

uint64_t sub_1000ADB78()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t sub_1000ADB88()
{
  return static FormatStyle<>.dateTime.getter();
}

NSDateComponents sub_1000ADB98()
{
  return DateComponents._bridgeToObjectiveC()();
}

uint64_t sub_1000ADBA8()
{
  return static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000ADBB8()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_1000ADBC8()
{
  return AttributedString.characters.getter();
}

uint64_t sub_1000ADBD8()
{
  return type metadata accessor for AttributedString.CharacterView();
}

uint64_t sub_1000ADBE8()
{
  return AttributedString.init(stringLiteral:)();
}

uint64_t sub_1000ADBF8()
{
  return AttributedString.removeSubrange<A>(_:)();
}

uint64_t sub_1000ADC08()
{
  return AttributedString.ttr_stringValue.getter();
}

uint64_t sub_1000ADC18()
{
  return type metadata accessor for AttributedString.Index();
}

uint64_t sub_1000ADC28()
{
  return type metadata accessor for AttributedString();
}

uint64_t sub_1000ADC38()
{
  return AttributedString.init(_:attributes:)();
}

uint64_t sub_1000ADC48(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_1000ADC58()
{
  return AttributeContainer.init()();
}

uint64_t sub_1000ADC68()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t sub_1000ADC78()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1000ADC88()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1000ADC98()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_1000ADCA8()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_1000ADCB8()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1000ADCC8()
{
  return AttributedStringProtocol.index(afterCharacter:)();
}

uint64_t sub_1000ADCD8()
{
  return URL.description.getter();
}

uint64_t sub_1000ADCE8()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_1000ADCF8()
{
  return URL.absoluteString.getter();
}

void sub_1000ADD08(NSURL *retstr@<X8>)
{
}

uint64_t sub_1000ADD18()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000ADD28()
{
  return URL.init(string:)();
}

uint64_t sub_1000ADD38()
{
  return URL.appending<A>(component:directoryHint:)();
}

uint64_t sub_1000ADD48()
{
  return type metadata accessor for URL();
}

uint64_t sub_1000ADD58()
{
  return Date.FormatStyle.attributed.getter();
}

uint64_t sub_1000ADD68()
{
  return Date.FormatStyle.hour(_:)();
}

uint64_t sub_1000ADD78()
{
  return static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)();
}

uint64_t sub_1000ADD88()
{
  return static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter();
}

uint64_t sub_1000ADD98()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle();
}

uint64_t sub_1000ADDA8()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Hour();
}

uint64_t sub_1000ADDB8()
{
  return static Date.FormatStyle.Symbol.Minute.defaultDigits.getter();
}

uint64_t sub_1000ADDC8()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Minute();
}

uint64_t sub_1000ADDD8()
{
  return Date.FormatStyle.locale(_:)();
}

uint64_t sub_1000ADDE8()
{
  return Date.FormatStyle.minute(_:)();
}

uint64_t sub_1000ADDF8()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t sub_1000ADE08()
{
  return static Date.distantPast.getter();
}

uint64_t sub_1000ADE18()
{
  return type metadata accessor for Date.AttributedStyle();
}

uint64_t sub_1000ADE28()
{
  return Date.rem_isToday.getter();
}

uint64_t sub_1000ADE38()
{
  return static Date.rem_startOfTomorrow.getter();
}

uint64_t sub_1000ADE48()
{
  return Date.rem_dateFlooredToNearestMinute(inCalendar:)();
}

uint64_t sub_1000ADE58()
{
  return Date.addingTimeInterval(_:)();
}

uint64_t sub_1000ADE68()
{
  return Date.startOfDay.getter();
}

uint64_t sub_1000ADE78()
{
  return Date.endOfDay.getter();
}

NSDate sub_1000ADE88()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_1000ADE98()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_1000ADEA8()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_1000ADEB8()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000ADEC8()
{
  return static Date.now.getter();
}

uint64_t sub_1000ADED8()
{
  return Date.distance(to:)();
}

uint64_t sub_1000ADEE8()
{
  return Date.formatted<A>(_:)();
}

uint64_t sub_1000ADEF8()
{
  return Date.init()();
}

uint64_t sub_1000ADF08()
{
  return type metadata accessor for Date();
}

uint64_t sub_1000ADF18()
{
  return Locale.identifier.getter();
}

uint64_t sub_1000ADF28()
{
  return Locale.uses12HourTime.getter();
}

NSLocale sub_1000ADF38()
{
  return Locale._bridgeToObjectiveC()();
}

uint64_t sub_1000ADF48()
{
  return static Locale._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000ADF58()
{
  return static Locale.current.getter();
}

uint64_t sub_1000ADF68()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1000ADF78()
{
  return Calendar.startOfDay(for:)();
}

uint64_t sub_1000ADF88()
{
  return Calendar.endOfDay(for:)();
}

uint64_t sub_1000ADF98()
{
  return static Calendar.current.getter();
}

uint64_t sub_1000ADFA8()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_1000ADFB8()
{
  return Calendar.component(_:from:)();
}

uint64_t sub_1000ADFC8()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1000ADFD8()
{
  return TTRListType.PredefinedSmartListType.remSmartListType.getter();
}

uint64_t sub_1000ADFE8()
{
  return TTRListType.PredefinedSmartListType.smartList(in:)();
}

uint64_t sub_1000ADFF8()
{
  return TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter();
}

uint64_t sub_1000AE008()
{
  return TTRListColors.defaultColor.unsafeMutableAddressor();
}

uint64_t sub_1000AE018()
{
  return TTRListColors.Color.nativeColor.getter();
}

uint64_t sub_1000AE028()
{
  return TTRListColors.Color.localizedDescription.getter();
}

uint64_t sub_1000AE038()
{
  return static TTRListColors.color(for:)();
}

uint64_t sub_1000AE048()
{
  return type metadata accessor for TTRListColors();
}

uint64_t sub_1000AE058()
{
  return TTRCommonAsset.Color.hashtagTokenTextColor.unsafeMutableAddressor();
}

uint64_t sub_1000AE068()
{
  return static TTRAccesibility.RemindersList.Hint.completionToggleHintForState(isCompleted:)();
}

uint64_t sub_1000AE078()
{
  return TTRAccesibility.RemindersList.Attribute.localizedString.getter();
}

uint64_t sub_1000AE088()
{
  return TTRAccesibility.AccountsList.Label.SmartList.unsafeMutableAddressor();
}

uint64_t sub_1000AE098()
{
  return TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
}

uint64_t sub_1000AE0A8()
{
  return TTROneshotEditing.init(item:saveRequest:undoManager:)();
}

uint64_t sub_1000AE0B8()
{
  return TTRReminderEditor.EditedObjectIDs.init(objectIDs:)();
}

uint64_t sub_1000AE0C8()
{
  return type metadata accessor for TTRReminderEditor.EditedObjectIDs();
}

uint64_t sub_1000AE0D8()
{
  return TTRReminderEditor.edit(completed:subtasks:trackEditedUsing:)();
}

uint64_t sub_1000AE0E8()
{
  return type metadata accessor for TTRReminderEditor();
}

uint64_t sub_1000AE0F8()
{
  return static TTRListBadgeEmblem.badgeEmblem(for:)();
}

uint64_t sub_1000AE108()
{
  return type metadata accessor for TTRListBadgeEmblem();
}

uint64_t sub_1000AE118(Swift::String _, Swift::String value, Swift::String comment)
{
  return TTRLocalizedString(_:value:comment:)(_, value, comment)._countAndFlagsBits;
}

uint64_t sub_1000AE128(Swift::String _, Swift::String comment)
{
  return TTRLocalizedString(_:comment:)(_, comment)._countAndFlagsBits;
}

uint64_t sub_1000AE138()
{
  return TTRReminderProtocol.isRecurringReminderThatCanAdvanceForward.getter();
}

uint64_t sub_1000AE148()
{
  return static TTRLocalizableStrings.RemindersList.noReminders.getter();
}

uint64_t sub_1000AE158()
{
  return static TTRLocalizableStrings.Common.remindersCountText(withCount:isForGroceries:)();
}

uint64_t sub_1000AE168()
{
  return TTRRemindersListViewModel.EmptyListMessagingType.localizedTitle(withTextFormat:)();
}

uint64_t sub_1000AE178()
{
  return TTRParticipantAvatarProvider.init(contactsProvider:contactStoreCreator:queue:)();
}

uint64_t sub_1000AE188()
{
  return type metadata accessor for TTRParticipantAvatarProvider();
}

uint64_t sub_1000AE198()
{
  return TTRParticipantAvatarRenderConfiguration.init(width:height:scales:rightToLeft:)();
}

uint64_t sub_1000AE1A8()
{
  return REMFeatureFlags.isEnabled.getter();
}

uint64_t sub_1000AE1B8()
{
  return type metadata accessor for REMFeatureFlags();
}

uint64_t sub_1000AE1C8()
{
  return static RDIDispatchQueue.storeQueue.getter();
}

uint64_t sub_1000AE1D8()
{
  return type metadata accessor for RDIDispatchQueue();
}

uint64_t sub_1000AE1E8()
{
  return REMWidgetRefresh.WidgetKind.widgetKindIdentifier.getter();
}

uint64_t sub_1000AE1F8()
{
  return type metadata accessor for REMWidgetRefresh.WidgetKind();
}

uint64_t sub_1000AE208()
{
  return type metadata accessor for REMAnalyticsEvent();
}

uint64_t sub_1000AE218()
{
  return type metadata accessor for ConfigurationIntent();
}

uint64_t sub_1000AE228()
{
  return REMAnalyticsManager.post(event:)();
}

uint64_t sub_1000AE238()
{
  return static REMAnalyticsManager.shared.getter();
}

uint64_t sub_1000AE248()
{
  return type metadata accessor for REMAnalyticsManager();
}

uint64_t sub_1000AE258()
{
  return REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)();
}

uint64_t sub_1000AE268()
{
  return type metadata accessor for REMContactsProvider();
}

uint64_t sub_1000AE278()
{
  return type metadata accessor for REMObjectID_Codable();
}

uint64_t sub_1000AE288()
{
  return type metadata accessor for REMReminder_Codable();
}

uint64_t sub_1000AE298()
{
  return static REMGroceryDummyModel.isSupported(localeIdentifier:)();
}

uint64_t sub_1000AE2A8()
{
  return type metadata accessor for REMGroceryDummyModel();
}

uint64_t sub_1000AE2B8()
{
  return type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
}

uint64_t sub_1000AE2C8()
{
  return type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
}

uint64_t sub_1000AE2D8()
{
  return type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
}

uint64_t sub_1000AE2E8()
{
  return type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
}

uint64_t sub_1000AE2F8()
{
  return type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
}

uint64_t sub_1000AE308()
{
  return static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
}

uint64_t sub_1000AE318()
{
  return type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
}

uint64_t sub_1000AE328()
{
  return REMNavigationSpecifier.url.getter();
}

uint64_t sub_1000AE338()
{
  return type metadata accessor for REMNavigationSpecifier();
}